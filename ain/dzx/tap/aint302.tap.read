<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint302" std_prog="aint302" erpver="1.0" module="AIN" ver="20" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="construct.c.inba003" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inba003  #顯示到畫面上

            NEXT FIELD inba003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inba004" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inba004  #顯示到畫面上

            NEXT FIELD inba004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inba007" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inba007  #顯示到畫面上

            NEXT FIELD inba007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbacnfid" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbacnfid  #顯示到畫面上

            NEXT FIELD inbacnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbacrtdp" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbacrtdp  #顯示到畫面上

            NEXT FIELD inbacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbacrtid" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbacrtid  #顯示到畫面上

            NEXT FIELD inbacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbamodid" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbamodid  #顯示到畫面上

            NEXT FIELD inbamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbaowndp" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbaowndp  #顯示到畫面上

            NEXT FIELD inbaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbaownid" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbaownid  #顯示到畫面上

            NEXT FIELD inbaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbapstid" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbapstid  #顯示到畫面上

            NEXT FIELD inbapstid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.inbb001" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb001  #顯示到畫面上

            NEXT FIELD inbb001                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.inbb004" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaf001_12()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb004  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO imaal003 #品名 

            NEXT FIELD inbb004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.inbb010" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb010  #顯示到畫面上

            NEXT FIELD inbb010                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.inbb013" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb013  #顯示到畫面上

            NEXT FIELD inbb013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.inbb016" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb016  #顯示到畫面上

            NEXT FIELD inbb016                     #返回原欄位

]]>
  </point>
  <point name="input.a.inba003" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                
            CALL aint302_inba003_ref(g_inba_m.inba003) RETURNING g_inba_m.inba003_desc
            DISPLAY BY NAME g_inba_m.inba003_desc
            IF NOT cl_null(g_inba_m.inba003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inba_m.inba003 != g_inba_m_t.inba003 OR cl_null(g_inba_m_t.inba003))) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_inba_m.inba003

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooag001") THEN
                     LET g_inba_m.inba003 =  g_inba_m_t.inba003
                     CALL aint302_inba003_ref(g_inba_m.inba003) RETURNING g_inba_m.inbadocno_desc
                     DISPLAY BY NAME g_inba_m.inba003_desc
                     NEXT FIELD CURRENT
                  END IF                 
               END IF
               SELECT ooag003 INTO g_inba_m.inba004 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_inba_m.inba003
               CALL aint302_inba004_ref(g_inba_m.inba004) RETURNING g_inba_m.inba004_desc
               DISPLAY BY NAME g_inba_m.inba004_desc
            END IF
]]>
  </point>
  <point name="input.a.inba004" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                CALL aint302_inba004_ref(g_inba_m.inba004) RETURNING g_inba_m.inba004_desc
            DISPLAY BY NAME g_inba_m.inba004_desc
            IF NOT cl_null(g_inba_m.inba004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inba_m.inba004 != g_inba_m_t.inba004 OR cl_null(g_inba_m_t.inba004))) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
   
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_inba_m.inba004
                  LET g_chkparam.arg2 = g_inba_m.inbadocdt   
   
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_ooeg001") THEN
                     LET g_inba_m.inba004 = g_inba_m_t.inba004
                     CALL aint302_inba004_ref(g_inba_m.inba004) RETURNING g_inba_m.inba004_desc
                     DISPLAY BY NAME g_inba_m.inba004_desc
                     NEXT FIELD inba004
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.inba007" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                CALL aint302_inba007_ref(g_inba_m.inba007) RETURNING g_inba_m.inba007_desc
            DISPLAY BY NAME g_inba_m.inba007_desc
            IF NOT cl_null(g_inba_m.inba007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inba_m.inba007 != g_inba_m_t.inba007 OR cl_null(g_inba_m_t.inba007))) THEN 
                  IF NOT aint302_inba007_chk(g_inba_m.inba007) THEN
                     LET g_inba_m.inba007 = g_inba_m_t.inba007
                     CALL aint302_inba007_ref(g_inba_m.inba007) RETURNING g_inba_m.inba007_desc
                     DISPLAY BY NAME g_inba_m.inba007_desc
                     NEXT FIELD inba007
                  END IF
               END IF
            END IF
]]>
  </point>
  <point name="input.a.page1.inbb013" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inbb_d[l_ac].inbb013
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inbb_d[l_ac].inbb013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inbb_d[l_ac].inbb013_desc
]]>
  </point>
  <point name="input.a.page1.inbbseq" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a05產生
            IF  NOT cl_null(g_inba_m.inbadocno) AND NOT cl_null(g_inbb_d[l_ac].inbbseq) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_inba_m.inbadocno != g_inbadocno_t OR g_inbb_d[l_ac].inbbseq != g_inbb_d_t.inbbseq))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inbb_t WHERE "||"inbbent = '" ||g_enterprise|| "' AND inbbsite = '" ||g_site|| "' AND "||"inbbdocno = '"||g_inba_m.inbadocno ||"' AND "|| "inbbseq = '"||g_inbb_d[g_detail_idx].inbbseq ||"'",'std-00004',0) THEN 
                     LET g_inbb_d[l_ac].inbbseq = g_inbb_d_t.inbbseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.c.inba003" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inba_m.inba003             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_inba_m.inba003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_inba_m.inba003 TO inba003              #顯示到畫面上
            CALL aint302_inba003_ref(g_inba_m.inba003) RETURNING g_inba_m.inba003_desc
            DISPLAY BY NAME g_inba_m.inba003_desc

            NEXT FIELD inba003                          #返回原欄位

]]>
  </point>
  <point name="input.c.inba004" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inba_m.inba004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_inba_m.inbadocdt #

            CALL q_ooeg001()                                #呼叫開窗

            LET g_inba_m.inba004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_inba_m.inba004 TO inba004              #顯示到畫面上
            CALL aint302_inba003_ref(g_inba_m.inba003) RETURNING g_inba_m.inba003_desc
            DISPLAY BY NAME g_inba_m.inba003_desc

            NEXT FIELD inba004                          #返回原欄位

]]>
  </point>
  <point name="input.c.inba007" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE
			#根據單據別加上限制理由碼的條件
			#獲取單據別
			LET l_ooba002 = ''
			CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_success,l_ooba002
			#獲取單號的營運據點
			LET l_site = ''
			CALL s_aooi200_get_site(g_inba_m.inbadocno) RETURNING l_success,l_site
			#獲取參照表編號
			LET l_ooef004 = ''
			SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef005 = l_site
			
			LET l_n = 0
			SELECT COUNT(oobi003) INTO l_n FROM ooba_t,oobi_t WHERE oobaent=oobient AND ooba001=oobi001 AND ooba002=oobi002 
                 AND oobaent = g_enterprise AND ooba001 = l_ooef004 AND ooba002 = l_ooba002
			IF l_n > 0 THEN
			   #判斷是正向列表還是負向列表
			   LET l_ooba015 = ''
			   SELECT ooba015 INTO l_ooba015 FROM ooba_t
			     WHERE oobaent = g_enterprise AND ooba001 = l_ooef004 AND ooba002 = l_ooba002
               #正向列表
               IF l_ooba015 = '1' THEN
                  LET g_qryparam.where = " oocq002 IN (SELECT oobi003 FROM oobi_t WHERE oobient = '",g_enterprise,"' AND oobi001 = '",l_ooef004,"' AND oobi002 = '",l_ooba002,"')"
               END IF
               
               #負向列表
               IF l_ooba015 = '2' THEN
                  LET g_qryparam.where = " oocq002 NOT IN (SELECT oobi003 FROM oobi_t WHERE oobient = '",g_enterprise,"' AND oobi001 = '",l_ooef004,"' AND oobi002 = '",l_ooba002,"')"
               END IF
            END IF
            LET g_qryparam.default1 = g_inba_m.inba007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_acc #

            CALL q_oocq002()                                #呼叫開窗
            LET g_qryparam.where = " "

            LET g_inba_m.inba007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_inba_m.inba007 TO inba007              #顯示到畫面上
            CALL aint302_inba007_ref(g_inba_m.inba007) RETURNING g_inba_m.inba007_desc
            DISPLAY BY NAME g_inba_m.inba007_desc

            NEXT FIELD inba007                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inbb001" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.where = "1=1 "
            LET l_sql1 = ''
            CALL s_control_get_doc_sql("imaf016",g_inba_m.inbadocno,'4') RETURNING l_success,l_sql1
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql1
            END IF

            LET l_sql2 = ''
            CALL s_control_get_doc_sql("imaa009",g_inba_m.inbadocno,'5') RETURNING l_success,l_sql2
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql2
            END IF
            
            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb001             #給予default值
            
            CALL q_imaf001_15()
            LET g_qryparam.where = " "

            LET g_inbb_d[l_ac].inbb001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_inbb_d[l_ac].inbb001 TO inbb001              #顯示到畫面上
            CALL aint302_inbb001_ref(g_inbb_d[l_ac].inbb001) 
            NEXT FIELD inbb001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inbb004" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb004             #給予default值
            LET g_qryparam.default2 = "" #g_inbb_d[l_ac].imaal003 #品名

            #給予arg

            CALL q_imaf001_12()                                #呼叫開窗

            LET g_inbb_d[l_ac].inbb004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_inbb_d[l_ac].inbb004_desc = g_qryparam.return2 #品名

            DISPLAY g_inbb_d[l_ac].inbb004 TO inbb004              #顯示到畫面上
            CALL aint302_inbb004_ref(g_inbb_d[l_ac].inbb004) RETURNING g_inbb_d[l_ac].inbb004_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb004_desc

            NEXT FIELD inbb004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inbb016" order="0" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = "1=1 "
            LET l_sql1 = ''
            CALL s_control_get_doc_sql("oocq002",g_inba_m.inbadocno,'8') RETURNING l_success,l_sql1
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql1
            END IF
 
            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_acc #

            CALL q_oocq002()                                #呼叫開窗
            LET g_qryparam.where = " "

            LET g_inbb_d[l_ac].inbb016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_inbb_d[l_ac].inbb016 TO inbb016              #顯示到畫面上
            CALL aint302_inba007_ref(g_inba_m.inba007) RETURNING g_inba_m.inba007_desc
            DISPLAY BY NAME g_inba_m.inba007_desc

            NEXT FIELD inbb016                          #返回原欄位

]]>
  </point>
  <point name="function.aint302_inbb009_chk" order="1" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbb009_chk()
DEFINE r_success   LIKE type_t.num5
DEFINE l_success   LIKE type_t.num5
DEFINE l_ooac001   LIKE ooac_t.ooac001
DEFINE l_ooac002   LIKE ooac_t.ooac002
DEFINE l_ooac004   LIKE ooac_t.ooac004
DEFINE l_flag      LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_flag1     LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_site      LIKE type_t.chr20
DEFINE l_inbadocno STRING 
DEFINE l_n         LIKE type_t.num5

      LET l_flag = TRUE
      LET l_flag1 = TRUE
      LET l_ooac001 = NULL
      LET l_ooac002 = NULL

      LET r_success = TRUE   
      
      IF cl_null(g_inbb_d[l_ac].inbb003) THEN
         LET g_inbb_d[l_ac].inbb003 = ' '
      END IF

      #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位+儲位+批號必須存在[T:庫存明細檔]中
      IF g_type = '1' THEN
         IF cl_null(g_inbb_d[l_ac].inbb002) THEN
            LET g_inbb_d[l_ac].inbb002 = ' '
         END IF
         IF cl_null(g_inbb_d[l_ac].inbb003) THEN
            LET g_inbb_d[l_ac].inbb003 = ' '
         END IF
         IF cl_null(g_inbb_d[l_ac].inbb008) THEN
            LET g_inbb_d[l_ac].inbb008 = ' '
         END IF
         IF cl_null(g_inbb_d[l_ac].inbb009) THEN
            LET g_inbb_d[l_ac].inbb009 = ' '
         END IF
         #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
         INITIALIZE g_chkparam.* TO NULL
      
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = g_site
         LET g_chkparam.arg2 = g_inbb_d[l_ac].inbb001
         LET g_chkparam.arg3 = g_inbb_d[l_ac].inbb002
         LET g_chkparam.arg4 = g_inbb_d[l_ac].inbb003
         LET g_chkparam.arg5 = g_inbb_d[l_ac].inbb007
         LET g_chkparam.arg6 = g_inbb_d[l_ac].inbb008
         LET g_chkparam.arg7 = g_inbb_d[l_ac].inbb009
      
         ##呼叫檢查存在並帶值的library
         #IF NOT cl_chk_exist("v_inag006") THEN
         #   LET r_success = FALSE
         #   RETURN r_success  
         #END IF
      END IF 
        
      #若是[P:雜項庫存收料維護作業]時，需檢核單據別參數的"庫存批號可重覆否"是否允許，
      #若勾選不允許則要檢查輸入的批號是否存在[T:料件批號檔]中
      IF g_type = '2' THEN
         #ent+參照表號+單據別+參數編號(D-MFG-0012)抓ooac004的值
         IF NOT cl_null(g_inba_m.inbadocno) THEN
            #已經自動編號
            LET l_inbadocno = g_inba_m.inbadocno
            IF l_inbadocno.getLength() > 3 THEN
               CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_flag1,l_ooac002
               CALL cl_get_doc_para(g_enterprise,g_site,l_ooac002,'D-MFG-0012') RETURNING l_ooac004
            ELSE
               #未自動編號
               CALL cl_get_doc_para(g_enterprise,g_site,g_inba_m.inbadocno,'D-MFG-0012') RETURNING l_ooac004               
            END IF     
         END IF 
         IF l_ooac004 = 'N' THEN  #不允許重複
            LET l_n = 0
            IF g_inbb_d[l_ac].inbb002 IS NOT NULL THEN
               SELECT COUNT(*) INTO l_n FROM inad_t 
                 WHERE inadent = g_enterprise AND inadsite = g_site AND inad001 = g_inbb_d[l_ac].inbb001
                   AND inad002 = g_inbb_d[l_ac].inbb002 AND inad003 = g_inbb_d[l_ac].inbb009
            ELSE
               SELECT COUNT(*) INTO l_n FROM inad_t 
                 WHERE inadent = g_enterprise AND inadsite = g_site AND inad001 = g_inbb_d[l_ac].inbb001
                   AND inad003 = g_inbb_d[l_ac].inbb009
            END IF
            IF l_n > 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'ain-00269'
               LET g_errparam.extend = g_inbb_d[l_ac].inbb009
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET r_success = FALSE
               RETURN r_success  
            END IF
         END IF
      END IF   
    
      RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb010_ref" order="2" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbb010_ref(p_inbb010)
DEFINE p_inbb010      LIKE inbb_t.inbb010
DEFINE r_inbb010_desc LIKE oocal_t.oocal003

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_inbb010
      CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET r_inbb010_desc =  g_rtn_fields[1]
      RETURN r_inbb010_desc
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_get_ooac004" order="3" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#獲取單據別參數判斷是否允許輸入小於0的數值
PRIVATE FUNCTION aint302_get_ooac004()
DEFINE l_ooac001   LIKE ooac_t.ooac001
DEFINE l_ooac002   LIKE ooac_t.ooac002
DEFINE r_ooac004   LIKE ooac_t.ooac004
DEFINE l_flag      LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_flag1     LIKE type_t.num5          #标识符，TRUE/FALSE
DEFINE l_site      LIKE type_t.chr20
DEFINE l_inbadocno STRING

      LET r_ooac004 = ''
      #ent+參照表號+單據別+參數編號(D-BAS-0058)抓ooac004的值
      IF NOT cl_null(g_inba_m.inbadocno) THEN
         #已經自動編號
         LET l_inbadocno = g_inba_m.inbadocno
         IF l_inbadocno.getLength() > 3 THEN
            CALL s_aooi200_get_site(g_inba_m.inbadocno) RETURNING l_flag,l_site
            IF l_flag THEN
               SELECT ooef004 INTO l_ooac001 FROM ooef_t
                WHERE ooef005 = l_site
                  AND ooefent = g_enterprise
            END IF
            CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_flag1,l_ooac002
            IF l_flag1 THEN
               IF NOT cl_null(l_ooac001) AND NOT cl_null(l_ooac002) THEN
                  #ent+參照表號+單據別+參數編號(D-BAS-0058)抓ooac004的值
                  SELECT ooac004 INTO r_ooac004 FROM ooac_t WHERE ooacent = g_enterprise AND ooac001 = l_ooac001 AND ooac002 = l_ooac002 AND ooac003 = 'D-BAS-0058'               
               END IF
            END IF
         ELSE
            #未自動編號
            SELECT ooef004 INTO l_ooac001 FROM ooef_t WHERE ooef001 = g_site AND ooefent = g_enterprise
            #ent+參照表號+單據別+參數編號(D-BAS-0058)抓ooac004的值
            SELECT ooac004 INTO r_ooac004 FROM ooac_t WHERE ooacent = g_enterprise AND ooac001 = l_ooac001 AND ooac002 = g_inba_m.inbadocno AND ooac003 = 'D-BAS-00582'               
         END IF
      END IF
      RETURN r_ooac004
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb001_desc" order="4" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbb001_desc(p_inbb001)
DEFINE p_inbb001      LIKE inbb_t.inbb001
DEFINE r_imaal003     LIKE imaal_t.imaal003
DEFINE r_imaal004     LIKE imaal_t.imaal004

       LET r_imaal003 = ''
       LET r_imaal004 = ''

       #品名、規格
       SELECT imaal003,imaal004 INTO r_imaal003,r_imaal004 FROM imaal_t WHERE imaalent = g_enterprise AND imaal001 = p_inbb001 AND imaal002 = g_dlang
       
       RETURN r_imaal003,r_imaal004
END FUNCTION]]>
  </point>
  <point name="function.aint302_inba003_ref" order="5" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inba003_ref(p_inba003)
DEFINE p_inba003      LIKE inba_t.inba003
DEFINE r_inba003_desc LIKE oofa_t.oofa011

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_inba003
      CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
      LET r_inba003_desc = '', g_rtn_fields[1] , ''
      RETURN r_inba003_desc
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_inba004_ref" order="6" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inba004_ref(p_inba004)
DEFINE p_inba004      LIKE inba_t.inba004
DEFINE r_inba004_desc LIKE ooefl_t.ooefl003

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = p_inba004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET r_inba004_desc = '', g_rtn_fields[1] , ''
            RETURN r_inba004_desc

END FUNCTION]]>
  </point>
  <point name="function.aint302_inba007_chk" order="7" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#檢查理由嗎
PRIVATE FUNCTION aint302_inba007_chk(p_inba007)
DEFINE p_inba007  LIKE inba_t.inba007
DEFINE l_success  LIKE type_t.num5
DEFINE r_success  LIKE type_t.num5
DEFINE l_flag     LIKE type_t.num5

      LET r_success = TRUE
      IF l_ac > 0 THEN
         IF cl_null(g_inbb_d[l_ac].inbb003) THEN
            LET g_inbb_d[l_ac].inbb003 = ' '
         END IF
      END IF
      #1.抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位二]的欄位值
      IF NOT s_azzi650_chk_exist(g_acc,p_inba007) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF   
      CALL s_control_chk_doc('8',g_inba_m.inbadocno,p_inba007,'','','','') RETURNING l_success,l_flag
      IF NOT l_success THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         IF NOT l_flag THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      RETURN r_success
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_inba007_ref" order="8" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inba007_ref(p_inba007)
DEFINE p_inba007      LIKE inba_t.inba007
DEFINE r_inba007_desc LIKE oocql_t.oocql004

      #抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位二]的欄位值

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_inba007
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='"||g_acc||"' AND oocql002 = ? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET r_inba007_desc = '', g_rtn_fields[1] , ''
      RETURN r_inba007_desc
            
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb001_chk" order="9" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbb001_chk(p_inbb001)
DEFINE p_inbb001   LIKE inbb_t.inbb001
DEFINE r_success   LIKE type_t.num5
DEFINE l_success  LIKE type_t.num5
DEFINE l_flag     LIKE type_t.num5
      
      LET r_success = TRUE
      
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL

      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = p_inbb001

      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_imaf001_14") THEN
         LET r_success = FALSE
         RETURN r_success  
      END IF   
      
      #呼叫s_control_doc_chk('4',inbbdocno,inbb001,'','','','')應用元件，
      #檢核輸入的料件的生命週期是否在單據別限制範圍內，若不在限制內則不允許雜收此料
      CALL s_control_chk_doc('4',g_inba_m.inbadocno,p_inbb001,'','','','') RETURNING l_success,l_flag
      IF NOT l_success THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         IF NOT l_flag THEN
            #CALL cl_err(p_inbb001,'ain-00015',1)
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      #呼叫s_control_doc_chk('5',inbbdocno,inbb004,'','','','')應用元件，
      #檢核輸入的料件的產品分類是否在單據別限制範圍內，若不在限制內則不允許雜收此料
      CALL s_control_chk_doc('5',g_inba_m.inbadocno,p_inbb001,'','','','') RETURNING l_success,l_flag
      IF NOT l_success THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         IF NOT l_flag THEN
            #CALL cl_err(p_inbb001,'apm-00238',1)
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      #帶舊值
      IF NOT r_success THEN
         CALL aint302_inbb001_ref(g_inbb_d_o.inbb001)
      END IF
      
      #[C:庫位]有值時，需呼叫應用元件取得該庫位是否有設置在庫存控制組中，
      #若有時需判斷該控制組是否與其他項次的庫位所對應的控制組一樣
      #若不一樣則需訊息告知，並將游標跳到[C:庫位]欄位供修改
      IF NOT cl_null(g_inbb_d[l_ac].inbb007) AND l_ac > 1 THEN

      END IF
      
      RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb001_ref" order="10" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbb001_ref(p_inbb001)
DEFINE p_inbb001      LIKE inbb_t.inbb001


       LET g_inbb_d[l_ac].inbb001_desc = ''
       LET g_inbb_d[l_ac].imaal004 = ''
       LET g_inbb_d[l_ac].inbb004 = ''
       LET g_inbb_d[l_ac].inbb007 = ''
       LET g_inbb_d[l_ac].inbb008 = ''
       LET g_inbb_d[l_ac].inbb010 = ''
       LET g_inbb_d[l_ac].inbb013 = ''
       #品名、規格
       SELECT imaal003,imaal004 INTO g_inbb_d[l_ac].inbb001_desc,g_inbb_d[l_ac].imaal004 FROM imaal_t WHERE imaalent = g_enterprise AND imaal001 = p_inbb001 AND imaal002 = g_dlang
       
       #單位
       SELECT imaa006 INTO g_inbb_d[l_ac].inbb010 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = p_inbb001
       
       #參考單位、庫位、儲位、包裝容器
       SELECT imaf015,imaf091,imaf092,imaf123 INTO g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb004
          FROM imaf_t WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = p_inbb001

       
       IF cl_null(g_inbb_d[l_ac].inbb008) THEN
          LET g_inbb_d[l_ac].inbb008 = ' '
       END IF
      LET g_inbb_d_o.inbb007 = g_inbb_d[l_ac].inbb007
      CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
      DISPLAY BY NAME g_inbb_d[l_ac].inbb007_desc
      
      CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
      DISPLAY BY NAME g_inbb_d[l_ac].inbb008_desc
   
       CALL aint302_inbb010_ref(g_inbb_d[l_ac].inbb010) RETURNING g_inbb_d[l_ac].inbb010_desc
       DISPLAY BY NAME g_inbb_d[l_ac].inbb010_desc
   
       CALL aint302_inbb010_ref(g_inbb_d[l_ac].inbb013) RETURNING g_inbb_d[l_ac].inbb013_desc
       DISPLAY BY NAME g_inbb_d[l_ac].inbb013_desc
       
END FUNCTION]]>
  </point>
  <point name="function.aint302_set_required_b" order="11" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_set_required_b()
   DEFINE l_imaf055  LIKE imaf_t.imaf055
   DEFINE l_imaf056  LIKE imaf_t.imaf056
   
   SELECT imaf055,imaf056 INTO l_imaf055,l_imaf056 FROM imaf_t WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = g_inbb_d[l_ac].inbb001
   #若設定imaf055(庫存管理特徵)等於'1.必須有庫存管理特徵'時，則[C:庫存管理特徵]欄位必須輸入
    IF l_imaf055 = '1' THEN
       CALL cl_set_comp_required("inbb003",TRUE)
    END IF
   
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb007_chk" order="12" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbb007_chk(p_inbb007)
DEFINE p_inbb007   LIKE inbb_t.inbb007
DEFINE r_success   LIKE type_t.num5
DEFINE l_success  LIKE type_t.num5
DEFINE l_flag     LIKE type_t.num5
      
      LET r_success = TRUE
      
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
   
      #呼叫檢查存在並帶值的library
      IF g_type = '1' THEN
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = g_site
         LET g_chkparam.arg2 = p_inbb007
   
         IF NOT cl_chk_exist("v_inaa001") THEN
            LET r_success = FALSE
            RETURN r_success  
         END IF
      END IF
      #雜收需過濾非報廢庫位
      IF g_type = '2' THEN
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = p_inbb007
         
         IF NOT cl_chk_exist("v_inaa001_9") THEN
            LET r_success = FALSE
            RETURN r_success  
         END IF
      END IF

      #呼叫s_control_doc_chk('6',inbbdocno,inbb007,'','','','')應用元件，
      #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
      CALL s_control_chk_doc('6',g_inba_m.inbadocno,p_inbb007,'','','','') RETURNING l_success,l_flag
      IF NOT l_success THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         IF NOT l_flag THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      ##檢查庫位是否在庫存控制組範圍內
      #CALL s_control_chk_group('6','5',g_user,g_dept,g_site,p_inbb007,'','','') RETURNING l_success,l_flag
      #IF NOT l_success THEN
      #   LET r_success = FALSE
      #   RETURN r_success
      #ELSE
      #   IF NOT l_flag THEN
      #      CALL cl_err(p_inbb007,'ain-00273',1)
      #      LET r_success = FALSE
      #      RETURN r_success
      #   END IF
      #END IF
      
      #檢查當前庫位與單身中的其他項次對應的庫位是否存在相同的控制組
      IF NOT aint302_inbb007_chk_group(p_inbb007) THEN
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
      IF g_type = '1' THEN
         #IF NOT aint302_chk_inag004(p_inbb007)THEN
         #   LET r_success = FALSE
         #   RETURN r_success  
         #END IF
      END IF 
         
      RETURN r_success
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb008_chk" order="13" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbb008_chk(p_inbb007,p_inbb008)
DEFINE p_inbb007   LIKE inbb_t.inbb007
DEFINE p_inbb008   LIKE inbb_t.inbb008
DEFINE r_success   LIKE type_t.num5
DEFINE l_success   LIKE type_t.num5
DEFINE l_flag      LIKE type_t.num5
DEFINE l_inaa007   LIKE inaa_t.inaa007

      LET r_success = TRUE   
      
      IF cl_null(p_inbb008) THEN
         LET p_inbb008 = ' '
      END IF
      IF cl_null(g_inbb_d[l_ac].inbb003) THEN
         LET g_inbb_d[l_ac].inbb003 = ' '
      END IF

      #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
      IF g_type = '1' THEN
         #IF NOT aint302_chk_inag005(p_inbb007,p_inbb008) THEN
         #   LET r_success = FALSE
         #   RETURN r_success  
         #END IF
      END IF 
        
      #若是雜項庫存收料作業時
      IF g_type = '2' THEN
         
         #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
         INITIALIZE g_chkparam.* TO NULL
         
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = g_site
         LET g_chkparam.arg2 = p_inbb007
         LET g_chkparam.arg3 = p_inbb008
         
         #呼叫檢查存在並帶值的library
         IF NOT cl_chk_exist("v_inab002") THEN
            LET r_success = FALSE
            RETURN r_success  
         END IF
      END IF   
        
      #呼叫s_control_doc_chk('6',inbbdocno,inbb007,inbb008,'','','')應用元件，
      #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
      CALL s_control_chk_doc('6',g_inba_m.inbadocno,p_inbb007,p_inbb008,'','','') RETURNING l_success,l_flag
      IF NOT l_success THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         IF NOT l_flag THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
        
      RETURN r_success
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_ins_inbc" order="14" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_ins_inbc()
DEFINE l_inbc016    LIKE inbc_t.inbc016
DEFINE l_imaf032    LIKE imaf_t.imaf032
DEFINE r_success    LIKE type_t.num5
   
      LET r_success = TRUE
      #如果料件有做批號控管時，則[C:有效日期]=g_today+[T:料件集團檔].[C:有效天數]
      LET l_inbc016 = g_today
      
      SELECT imaf032 INTO l_imaf032 FROM imaf_t WHERE imafent = g_enterprise AND imafsite = 'ALL' AND imaf001 = g_inbb_d[g_detail_idx].inbb001
      IF NOT cl_null(l_imaf032) THEN
         LET l_inbc016 = l_inbc016 + l_imaf032
      END IF
      
      INSERT INTO inbc_t
                  (inbcent, inbcsite,
                   inbcdocno,inbcseq,inbcseq1,
                   inbc001,inbc002,inbc003,inbc004,inbc005,inbc006,inbc007,
                   inbc009,inbc010,inbc011,inbc015,inbc016,inbc017,inbc021,inbc022,inbc023) 
            VALUES(g_enterprise, g_site,
                   g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,1,
                   g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb004,
                   g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,
                   g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,g_inbb_d[l_ac].inbb013,
                   g_inbb_d[l_ac].inbb015,g_inbb_d[l_ac].inbb022,g_inbb_d[l_ac].inbb021,
                   g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb024,g_inbb_d[l_ac].inbb025)


      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inbc_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      RETURN r_success
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_upd_inbc" order="15" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_upd_inbc()
DEFINE r_success LIKE type_t.num5
  
      LET r_success = TRUE
      #1.修改時若有修改到料號、產品特徵、庫存管理特徵、庫位、限定儲位、限定批號、申請數量、
      #  參考單位申請數量時，則需將所有對應的[T:雜項庫存異動庫儲批明細檔]資料刪除，
      #  併重新產生一筆新的[T:雜項庫存異動庫儲批明細檔]資料，欄位預設原則與新增狀態一樣
      IF ((g_inbb_d[l_ac].inbb001 != g_inbb_d_t.inbb001) OR ((NOT cl_null(g_inbb_d[l_ac].inbb001)) AND cl_null(g_inbb_d_t.inbb001)) OR ((NOT cl_null(g_inbb_d_t.inbb001)) AND cl_null(g_inbb_d[l_ac].inbb001))) OR
         ((g_inbb_d[l_ac].inbb002 != g_inbb_d_t.inbb002) OR ((NOT cl_null(g_inbb_d[l_ac].inbb002)) AND cl_null(g_inbb_d_t.inbb002)) OR ((NOT cl_null(g_inbb_d_t.inbb002)) AND cl_null(g_inbb_d[l_ac].inbb002))) OR
         ((g_inbb_d[l_ac].inbb003 != g_inbb_d_t.inbb003) OR ((NOT cl_null(g_inbb_d[l_ac].inbb003)) AND cl_null(g_inbb_d_t.inbb003)) OR ((NOT cl_null(g_inbb_d_t.inbb003)) AND cl_null(g_inbb_d[l_ac].inbb003))) OR
         ((g_inbb_d[l_ac].inbb007 != g_inbb_d_t.inbb007) OR ((NOT cl_null(g_inbb_d[l_ac].inbb007)) AND cl_null(g_inbb_d_t.inbb007)) OR ((NOT cl_null(g_inbb_d_t.inbb007)) AND cl_null(g_inbb_d[l_ac].inbb007))) OR
         ((g_inbb_d[l_ac].inbb008 != g_inbb_d_t.inbb008) OR ((NOT cl_null(g_inbb_d[l_ac].inbb008)) AND cl_null(g_inbb_d_t.inbb008)) OR ((NOT cl_null(g_inbb_d_t.inbb008)) AND cl_null(g_inbb_d[l_ac].inbb008))) OR
         ((g_inbb_d[l_ac].inbb009 != g_inbb_d_t.inbb009) OR ((NOT cl_null(g_inbb_d[l_ac].inbb009)) AND cl_null(g_inbb_d_t.inbb009)) OR ((NOT cl_null(g_inbb_d_t.inbb009)) AND cl_null(g_inbb_d[l_ac].inbb009))) OR
         ((g_inbb_d[l_ac].inbb011 != g_inbb_d_t.inbb011) OR ((NOT cl_null(g_inbb_d[l_ac].inbb011)) AND cl_null(g_inbb_d_t.inbb011)) OR ((NOT cl_null(g_inbb_d_t.inbb011)) AND cl_null(g_inbb_d[l_ac].inbb011))) OR
         ((g_inbb_d[l_ac].inbb014 != g_inbb_d_t.inbb014) OR ((NOT cl_null(g_inbb_d[l_ac].inbb014)) AND cl_null(g_inbb_d_t.inbb014)) OR ((NOT cl_null(g_inbb_d_t.inbb014)) AND cl_null(g_inbb_d[l_ac].inbb014))) THEN
         
         IF NOT aint302_del_inbc() THEN
            LET r_success = FALSE
            RETURN r_success
         ELSE
            IF NOT aint302_ins_inbc() THEN
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
      END IF

      #2.修改時若有修改到單位、參考單位時，需同步更新[T:雜項庫存異動庫儲批明細檔]相對的欄位值
      IF ((g_inbb_d[l_ac].inbb010 != g_inbb_d_t.inbb010) OR ((NOT cl_null(g_inbb_d[l_ac].inbb010)) AND cl_null(g_inbb_d_t.inbb010)) OR ((NOT cl_null(g_inbb_d_t.inbb010)) AND cl_null(g_inbb_d[l_ac].inbb010))) OR
         ((g_inbb_d[l_ac].inbb013 != g_inbb_d_t.inbb013) OR ((NOT cl_null(g_inbb_d[l_ac].inbb013)) AND cl_null(g_inbb_d_t.inbb013)) OR ((NOT cl_null(g_inbb_d_t.inbb013)) AND cl_null(g_inbb_d[l_ac].inbb013))) THEN
         
         UPDATE inbc_t 
            SET (inbc009,inbc011) = (g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb013)
              WHERE inbcent = g_enterprise AND inbcsite = g_site 
                AND inbcdocno = g_inba_m.inbadocno 
                AND inbcseq = g_inbb_d_t.inbbseq #項次
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = ""
            LET g_errparam.popup = FALSE
            CALL cl_err()
 
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      #3.若有修改到存貨備註時，需開窗詢問是否同步更新[T:雜項庫存異動庫儲批明細檔].[C:存貨備註]
      IF ((g_inbb_d[l_ac].inbb021 != g_inbb_d_t.inbb021) OR ((NOT cl_null(g_inbb_d[l_ac].inbb021)) AND cl_null(g_inbb_d_t.inbb021)) OR ((NOT cl_null(g_inbb_d_t.inbb021)) AND cl_null(g_inbb_d[l_ac].inbb021))) THEN
         IF cl_ask_confirm('ain-00021') THEN
            UPDATE inbc_t SET inbc017 = g_inbb_d[l_ac].inbb021
              WHERE inbcent = g_enterprise AND inbcsite = g_site 
                AND inbcdocno = g_inba_m.inbadocno 
                AND inbcseq = g_inbb_d_t.inbbseq #項次
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = ""
            LET g_errparam.popup = FALSE
            CALL cl_err()
 
               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
      END IF
      
      RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint302_del_inbc" order="16" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_del_inbc()
DEFINE r_success  LIKE type_t.num5

       LET r_success = TRUE
       DELETE FROM inbc_t
           WHERE inbcent = g_enterprise AND inbcsite = g_site 
             AND inbcdocno = g_inba_m.inbadocno 
             AND inbcseq = g_inbb_d_t.inbbseq #項次
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = ""
            LET g_errparam.popup = FALSE
            CALL cl_err()
 
            LET r_success = FALSE
            RETURN r_success
         END IF
         RETURN r_success
         
END FUNCTION]]>
  </point>
  <point name="function.aint302_del_inao" order="17" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_del_inao()
DEFINE r_success  LIKE type_t.num5

       LET r_success = TRUE
       
       DELETE FROM inao_t
           WHERE inaoent = g_enterprise AND inaosite = g_site 
             AND inaodocno = g_inba_m.inbadocno 
             AND inaoseq = g_inbb_d_t.inbbseq #項次
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = ""
            LET g_errparam.popup = FALSE
            CALL cl_err()
 
            LET r_success = FALSE
            RETURN r_success
         END IF
         RETURN r_success
         
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbc_fill" order="18" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_inbc_fill(p_inbbseq)
DEFINE p_inbbseq   LIKE inbb_t.inbbseq
DEFINE l_ac1       LIKE type_t.num5
DEFINE l_success   LIKE type_t.num5

   CALL g_inbc_d.clear()
   
   
   #LET g_sql = "SELECT  UNIQUE inbcseq,inbcseq1,inbc018,inbc019,inbc020,'',inbc001,'','',inbc002,inbc004,inbc003,inbc005,",
   #            "               inbc006,inbc007,inbc009,inbc010,inbc011,inbc015,inbc016,inbc017 ",
   #            "  FROM inbc_t ",
   #            " INNER JOIN inba_t ON inbadocno = inbcdocno AND inbaent = inbcent AND inbasite = inbcsite ",
   #
   #            " WHERE inbcent=? AND inbcsite=? AND inbcdocno=?"
   #
   #IF NOT cl_null(g_wc2_table1) THEN
   #   LET g_sql = g_sql CLIPPED, " AND inbcseq IN ( SELECT inbbseq FROM inbb_t WHERE inbbent='",g_enterprise,"' AND inbbsite='",g_site,"' AND inbbdocno='",g_inba_m.inbadocno,"' AND ", g_wc2_table1 CLIPPED, " ) "
   #END IF
   #
   #IF NOT cl_null(p_inbbseq) THEN
   #   LET g_sql = g_sql CLIPPED, " AND inbcseq = '",p_inbbseq,"' "
   #END IF
   #LET g_sql = g_sql, " ORDER BY inbc_t.inbcseq,inbcseq1"
 
   LET g_sql = "SELECT * FROM ",
               " ( SELECT  UNIQUE inbcseq,inbcseq1,inbc018,inbc019,inbc020,inbc001,inbc002,inbc004,inbc003,inbc005, ",               
               "          inbc006,inbc007,inbc009,inbc010,inbc011,inbc015,inbc016,inbc017,inbc021,inbc022,inbc023,t1.qcaol004,t2.imaal003,t3.imaal004,t4.oocal001,t5.oocal001 oocal001_1,t6.inayl003,t7.inab003, ",
               "          t8.pjbal003,t9.pjbbl004,t10.pjbml004 ",
               "    FROM inbc_t ",
               "     LEFT JOIN qcaol_t t1 ON t1.qcaolent='"||g_enterprise||"' AND t1.qcaol001='"||g_ooef025||"' AND t1.qcaol002=inbc020 AND t1.qcaol003='"||g_dlang||"' ",
               "     LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=inbc001 AND t2.imaal002='"||g_dlang||"' ",
               "     LEFT JOIN imaal_t t3 ON t3.imaalent='"||g_enterprise||"' AND t3.imaal001=inbc001 AND t3.imaal002='"||g_dlang||"' ",
               "     LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=inbc009 AND t4.oocal002='"||g_dlang||"' ",
               "     LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=inbc011 AND t5.oocal002='"||g_dlang||"' ",
               "     LEFT JOIN inayl_t t6 ON t6.inaylent='"||g_enterprise||"' AND t6.inayl001=inbc005 AND t6.inayl002='"||g_dlang||"' ",
               "     LEFT JOIN inab_t  t7 ON t7.inabent='"||g_enterprise||"' AND t7.inabsite='"||g_site||"' AND t7.inab001=inbc005 AND t7.inab002=inbc006 ",
               "     LEFT JOIN pjbal_t t8 ON t8.pjbalent='"||g_enterprise||"' AND t8.pjbal001=inbc021 AND t8.pjbal002='"||g_dlang||"' ",
               "     LEFT JOIN pjbbl_t t9 ON t9.pjbblent='"||g_enterprise||"' AND t9.pjbbl001=inbc021 AND t9.pjbbl002=inbc022 AND t9.pjbbl003='"||g_dlang||"' ",
               "     LEFT JOIN pjbml_t t10 ON t10.pjbmlent='"||g_enterprise||"' AND t10.pjbml001=inbc021 AND t10.pjbml002=inbc023 AND t10.pjbml003='"||g_dlang||"' ",
               "    ,inba_t ",
               "    WHERE inbaent = inbcent AND inbasite = inbcsite AND inbadocno = inbcdocno AND inbcent=? AND inbcsite=? AND inbcdocno=? ",
               "    ORDER BY inbc_t.inbcseq,inbcseq1 )"
                      
   LET g_sql = g_sql CLIPPED, " WHERE ROWNUM <= '",g_max_rec,"' "  
   
   
   PREPARE aint302_inbc_pb FROM g_sql
   DECLARE inbc_b_fill_cs CURSOR FOR aint302_inbc_pb
 
   LET g_cnt = l_ac1
   LET l_ac1 = 1
 
   OPEN inbc_b_fill_cs USING g_enterprise, g_site,g_inba_m.inbadocno

                                            
   FOREACH inbc_b_fill_cs INTO g_inbc_d[l_ac1].inbcseq,g_inbc_d[l_ac1].inbcseq1,g_inbc_d[l_ac1].inbc018,g_inbc_d[l_ac1].inbc019,g_inbc_d[l_ac1].inbc020,
                               g_inbc_d[l_ac1].inbc001,
                               g_inbc_d[l_ac1].inbc002,g_inbc_d[l_ac1].inbc004,g_inbc_d[l_ac1].inbc003,g_inbc_d[l_ac1].inbc005,
                               g_inbc_d[l_ac1].inbc006,g_inbc_d[l_ac1].inbc007,g_inbc_d[l_ac1].inbc009,g_inbc_d[l_ac1].inbc010,
                               g_inbc_d[l_ac1].inbc011,g_inbc_d[l_ac1].inbc015,g_inbc_d[l_ac1].inbc016,g_inbc_d[l_ac1].inbc017,
                               g_inbc_d[l_ac1].inbc021,g_inbc_d[l_ac1].inbc022,g_inbc_d[l_ac1].inbc023,
                               g_inbc_d[l_ac1].inbc020_desc,g_inbc_d[l_ac1].inbc001_desc,g_inbc_d[l_ac1].inbc001_desc2,
                               g_inbc_d[l_ac1].inbc009_desc,g_inbc_d[l_ac1].inbc011_desc,g_inbc_d[l_ac1].inbc005_desc,
                               g_inbc_d[l_ac1].inbc006_desc,
                               g_inbc_d[l_ac1].inbc021_desc,g_inbc_d[l_ac1].inbc022_desc,g_inbc_d[l_ac1].inbc023_desc
                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充
      #CALL aint302_inbb001_desc(g_inbc_d[l_ac1].inbc001) RETURNING g_inbc_d[l_ac1].inbc001_desc,g_inbc_d[l_ac1].inbc001_desc2
      #DISPLAY BY NAME g_inbc_d[l_ac1].inbc001_desc,g_inbc_d[l_ac1].inbc001_desc2
      
      CALL s_feature_description(g_inbc_d[l_ac1].inbc001,g_inbc_d[l_ac1].inbc002) RETURNING l_success,g_inbc_d[l_ac1].inbc002_desc
      DISPLAY BY NAME g_inbc_d[l_ac1].inbc002_desc
      
      #CALL s_desc_get_stock_desc(g_site,g_inbc_d[l_ac1].inbc005) RETURNING g_inbc_d[l_ac1].inbc005_desc
      #DISPLAY BY NAME g_inbc_d[l_ac1].inbc005_desc
      
      #CALL s_desc_get_locator_desc(g_site,g_inbc_d[l_ac1].inbc005,g_inbc_d[l_ac1].inbc006) RETURNING g_inbc_d[l_ac1].inbc006_desc
      #DISPLAY BY NAME g_inbc_d[l_ac1].inbc006_desc

      #CALL aint302_inbb010_ref(g_inbc_d[l_ac1].inbc009) RETURNING g_inbc_d[l_ac1].inbc009_desc
      #DISPLAY BY NAME g_inbc_d[l_ac1].inbc009_desc
      #
      #CALL aint302_inbb010_ref(g_inbc_d[l_ac1].inbc011) RETURNING g_inbc_d[l_ac1].inbc011_desc
      #DISPLAY BY NAME g_inbc_d[l_ac1].inbc011_desc
      #
      #CALL aint302_inbc020_ref(g_inbc_d[l_ac1].inbc020) RETURNING g_inbc_d[l_ac1].inbc020_desc
      #DISPLAY BY NAME g_inbc_d[l_ac1].inbc020_desc
      
      CALL aint302_inao_fill2()   #add by lixh 20150909
      
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   

   
   CALL g_inbc_d.deleteElement(g_inbc_d.getLength())

   
   LET g_rec_b2 = g_inbc_d.getLength()
   LET l_ac1 = g_cnt
   LET g_cnt = 0  
   
   FREE aint302_inbc_pb
   
END FUNCTION]]>
  </point>
  <point name="function.aint302_inba002_upd" order="19" ver="17" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#維護扣帳日期:開放單頭[C:扣帳日期]欄位維護
PRIVATE FUNCTION aint302_inba002_upd()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_inbamoddt LIKE inba_t.inbamoddt
   DEFINE l_gzsz008   LIKE gzsz_t.gzsz008
   DEFINE l_forupd_sql STRING

   LET r_success = TRUE
   LET l_gzsz008 = ''
   
   IF g_inba_m.inbadocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      LET r_success = FALSE
      RETURN r_success
   END IF

   SELECT UNIQUE inbadocno,inbadocdt,inba003,inba002,inba004,#inbastus, 
                 inba005,inba006,inba007,inba008,inbaownid,inbaowndp,inbacrtid,inbacrtdp,inbacrtdt,inbamodid,inbamoddt,inbacnfid,inbacnfdt,inbapstid,inbapstdt
     INTO g_inba_m.inbadocno,g_inba_m.inbadocdt,g_inba_m.inba003,g_inba_m.inba002,g_inba_m.inba004,#g_inba_m.inbastus,
          g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbaowndp,g_inba_m.inbacrtid,g_inba_m.inbacrtdp,g_inba_m.inbacrtdt,g_inba_m.inbamodid,g_inba_m.inbamoddt,g_inba_m.inbacnfid,g_inba_m.inbacnfdt,g_inba_m.inbapstid,g_inba_m.inbapstdt
     FROM inba_t
    WHERE inbaent = g_enterprise AND inbasite = g_site AND inbadocno = g_inba_m.inbadocno
   
   LET l_forupd_sql = " SELECT inbadocno,inbasite,inbadocdt,inba002,inba003,inba004,",  #inbastus, ",
                      "  inba005,inba006,inba007,inba008,inbaownid,inbacrtdp,inbaowndp,inbacrtdt,inbacrtid, ",
                      "  inbamodid,inbacnfdt,inbamoddt,inbapstid,inbacnfid,inbapstdt", 
                      " FROM inba_t ",
                      " WHERE inbaent= ? AND inbadocno=? FOR UPDATE"

   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)                #轉換不同資料庫語法
   LET l_forupd_sql = cl_sql_add_mask(l_forupd_sql)              #遮蔽特定資料
   DECLARE aint302_inba002_cl CURSOR FROM l_forupd_sql
   
   OPEN aint302_inba002_cl USING g_enterprise,g_inba_m.inbadocno

   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN aint302_inba002_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE aint302_inba002_cl
      LET r_success = FALSE
      RETURN r_success
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aint302_inba002_cl INTO g_inba_m.inbadocno,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,#g_inba_m.inbastus, 
                                 g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp,g_inba_m.inbacrtdt,g_inba_m.inbacrtid, 
                                 g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt,g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_inba_m.inbadocno
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE aint302_inba002_cl
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   CALL aint302_show()
   
   INPUT BY NAME g_inba_m.inba002 WITHOUT DEFAULTS
             
      AFTER INPUT
         #若取消則直接結束
         IF INT_FLAG = 1 THEN
            LET INT_FLAG = 0
            LET r_success = FALSE
            RETURN r_success
         END IF

      AFTER FIELD inba002
         #維護的日期不可小於庫存關帳日
         LET l_gzsz008 = cl_get_para(g_enterprise,g_site,'S-MFG-0031') 
         IF g_inba_m.inba002 <= l_gzsz008 THEN
            LET r_success = FALSE
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'sub-00306'
            LET g_errparam.extend = g_inba_m.inba002
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN r_success
         END IF
      #維護的日期不可大於現行年月，錯誤訊息「扣帳日期大於會計年度期別，請重新輸入]
      
   END INPUT
   
   IF INT_FLAG OR g_inba_m.inba002 IS NULL THEN
      LET INT_FLAG = 0
      CLOSE aint302_inba002_cl
      LET r_success = FALSE
      RETURN r_success
   END IF

   LET l_inbamoddt = cl_get_current()

   UPDATE inba_t SET inba002 = g_inba_m.inba002,
                     inbamodid = g_user,
                     inbamoddt = l_inbamoddt
     WHERE inbaent = g_enterprise AND inbasite = g_site AND inbadocno = g_inba_m.inbadocno

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "g_inba_m"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CLOSE aint302_inba002_cl
      
      LET r_success = FALSE
      RETURN r_success 
   END IF

   CLOSE aint302_inba002_cl
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint302_set_no_required_b" order="20" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION aint302_set_no_required_b()
   CALL cl_set_comp_required("inbb003",FALSE)
  
END FUNCTION]]>
  </point>
  <point name="function.aint302_inao_fill1" order="21" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#申請明細單身 inao000 = '1'
PRIVATE FUNCTION aint302_inao_fill1()
DEFINE l_ac1       LIKE type_t.num5

   CALL g_inao_d.clear()
   
   
   LET g_sql = "SELECT  UNIQUE inaoseq,inaoseq1,inaoseq2,inao001,'','',inao008,inao009,inao010,inao012 ",
               "  FROM inao_t ",
               " INNER JOIN inba_t ON inbadocno = inaodocno AND inbaent = inaoent AND inbasite = inaosite ",

               " WHERE inaoent=? AND inaosite=? AND inaodocno=? AND inao000 = '1'"
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND inaoseq IN ( SELECT inbbseq FROM inbb_t WHERE inbbent='",g_enterprise,"' AND inbbsite='",g_site,"' AND inbbdocno='",g_inba_m.inbadocno,"' AND ", g_wc2_table1 CLIPPED, " ) "
   END IF

   LET g_sql = g_sql, " ORDER BY inaoseq,inaoseq1,inaoseq2"
 
   #add-point:單身填充控制

   #end add-point
   
   PREPARE aint302_inao_pb1 FROM g_sql
   DECLARE inao_b_fill_cs1 CURSOR FOR aint302_inao_pb1
 
   LET g_cnt = l_ac1
   LET l_ac1 = 1
 
   OPEN inao_b_fill_cs1 USING g_enterprise, g_site,g_inba_m.inbadocno

                                            
   FOREACH inao_b_fill_cs1 INTO g_inao_d[l_ac1].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充
      CALL aint302_inbb001_desc(g_inao_d[l_ac1].inao001) RETURNING g_inao_d[l_ac1].inao001_desc,g_inao_d[l_ac1].inao001_desc2
      DISPLAY BY NAME g_inao_d[l_ac1].inao001_desc,g_inao_d[l_ac1].inao001_desc2
      
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   

   
   CALL g_inao_d.deleteElement(g_inao_d.getLength())

   
   LET g_rec_b3 = g_inao_d.getLength()
   LET l_ac1 = g_cnt
   LET g_cnt = 0  
   
   FREE aint302_inao_pb1
   
END FUNCTION]]>
  </point>
  <point name="function.aint302_inao_fill2" order="22" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#入庫明細單身 inao000 = '2'
PRIVATE FUNCTION aint302_inao_fill2()
DEFINE l_ac1       LIKE type_t.num5

   CALL g_inao_d2.clear()
   
   
   LET g_sql = "SELECT  UNIQUE inaoseq,inaoseq1,inaoseq2,inao001,'','',inao008,inao009,inao010,inao012 ",
               "  FROM inao_t ",
               " INNER JOIN inba_t ON inbadocno = inaodocno AND inbaent = inaoent AND inbasite = inaosite ",

               " WHERE inaoent=? AND inaosite=? AND inaodocno=? AND inao000 = '2'"
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND inaoseq IN ( SELECT inbbseq FROM inbb_t WHERE inbbent='",g_enterprise,"' AND inbbsite='",g_site,"' AND inbbdocno='",g_inba_m.inbadocno,"' AND ", g_wc2_table1 CLIPPED, " ) "
   END IF

   LET g_sql = g_sql, " ORDER BY inaoseq,inaoseq1,inaoseq2"

   
   PREPARE aint302_inao_pb2 FROM g_sql
   DECLARE inao_b_fill_cs2 CURSOR FOR aint302_inao_pb2
 
   LET g_cnt = l_ac1
   LET l_ac1 = 1
 
   OPEN inao_b_fill_cs2 USING g_enterprise, g_site,g_inba_m.inbadocno

                                            
   FOREACH inao_b_fill_cs2 INTO g_inao_d2[l_ac1].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充
      CALL aint302_inbb001_desc(g_inao_d2[l_ac1].inao001_1) RETURNING g_inao_d2[l_ac1].inao001_1_desc,g_inao_d2[l_ac1].inao001_1_desc2
      DISPLAY BY NAME g_inao_d2[l_ac1].inao001_1_desc,g_inao_d2[l_ac1].inao001_1_desc2
      
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   

   
   CALL g_inao_d2.deleteElement(g_inao_d2.getLength())

   
   LET g_rec_b4 = g_inao_d2.getLength()
   LET l_ac1 = g_cnt
   LET g_cnt = 0  
   
   FREE aint302_inao_pb2
   
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb004_ref" order="23" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aint302_inbb004_ref(p_inbb004)
DEFINE p_inbb004      LIKE inbb_t.inbb004
DEFINE r_inbb004_desc LIKE imaal_t.imaal003

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_inbb004
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET r_inbb004_desc =  g_rtn_fields[1]
      RETURN r_inbb004_desc
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_reproduce_init" order="24" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aint302_reproduce_init()
      LET g_inba_m.inbadocno = ''
      LET g_inba_m.inbadocno_desc = ''
      LET g_inba_m.inbadocdt = g_today
      LET g_inba_m.inba002 = g_today
      DISPLAY BY NAME g_inba_m.inbadocno,g_inba_m.inbadocno_desc,g_inba_m.inbadocdt,g_inba_m.inba002
      LET g_inba_m.inbastus = 'N'
      CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
      DISPLAY BY NAME g_inba_m.inbastus
      LET g_inba_m.inba003 = g_user
      LET g_inba_m.inba004 = g_dept
      CALL aint302_inba003_ref(g_inba_m.inba003) RETURNING g_inba_m.inba003_desc
      DISPLAY BY NAME g_inba_m.inba003,g_inba_m.inba003_desc
      
      CALL aint302_inba004_ref(g_inba_m.inba004) RETURNING g_inba_m.inba004_desc
      DISPLAY BY NAME g_inba_m.inba004,g_inba_m.inba004_desc
      
      LET g_inba_m.inbaownid = g_user
      LET g_inba_m.inbaowndp = g_dept
      LET g_inba_m.inbacrtid = g_user
      LET g_inba_m.inbacrtdp = g_dept 
      LET g_inba_m.inbacrtdt = cl_get_current()
      LET g_inba_m.inbamodid = NULL
      LET g_inba_m.inbamodid_desc = NULL
      LET g_inba_m.inbamoddt = NULL
      LET g_inba_m.inbacnfid = NULL
      LET g_inba_m.inbacnfid_desc = NULL
      LET g_inba_m.inbacnfdt = NULL
      LET g_inba_m.inbapstid = NULL
      LET g_inba_m.inbapstid_desc = NULL
      LET g_inba_m.inbapstdt = NULL

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inba_m.inbaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_inba_m.inbaownid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_inba_m.inbaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inba_m.inbaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inba_m.inbaowndp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_inba_m.inbaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inba_m.inbacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_inba_m.inbacrtid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_inba_m.inbacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inba_m.inbacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inba_m.inbacrtdp_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_inba_m.inbacrtdp_desc
            


      DISPLAY BY NAME g_inba_m.inbaownid,g_inba_m.inbaownid_desc,g_inba_m.inbaowndp,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid,g_inba_m.inbacrtid_desc,g_inba_m.inbacrtdp,g_inba_m.inbacrtdp_desc,g_inba_m.inbacrtdt,g_inba_m.inbamodid,g_inba_m.inbamodid_desc,g_inba_m.inbamoddt,g_inba_m.inbacnfid,g_inba_m.inbacnfid_desc,g_inba_m.inbacnfdt,g_inba_m.inbapstid,g_inba_m.inbapstid_desc,g_inba_m.inbapstdt
   
      
      INITIALIZE g_inba_m_t.* TO NULL
      LET g_inba_m_t.* = g_inba_m.*
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_get_col_default" order="25" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 取得單據別設定的欄位預設值
# Memo...........: 需搭配單據別aooi200的設定
# Usage..........: CALL aint302_get_col_default()
# Date & Author..: 2014/01/23 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint302_get_col_default()
   LET g_inba_m.inbadocdt = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inbadocdt',g_inba_m.inbadocdt) 
   LET g_inba_m.inba002 = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inba002',g_inba_m.inba002)
   LET g_inba_m.inba003 = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inba003',g_inba_m.inba003)
   LET g_inba_m.inba004 = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inba004',g_inba_m.inba004)
   LET g_inba_m.inba005 = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inba005',g_inba_m.inba005) 
   LET g_inba_m.inba006 = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inba006',g_inba_m.inba006) 
   LET g_inba_m.inba007 = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inba007',g_inba_m.inba007)
   LET g_inba_m.inba008 = s_aooi200_get_doc_default(g_site,'1',g_inba_m.inbadocno,'inba008',g_inba_m.inba008) 

   DISPLAY g_inba_m.inbadocdt TO inbadocdt
   DISPLAY g_inba_m.inba002 TO inba002
   DISPLAY g_inba_m.inba003 TO inba003
   DISPLAY g_inba_m.inba004 TO inba004
   DISPLAY g_inba_m.inba005 TO inba005
   DISPLAY g_inba_m.inba006 TO inba006
   DISPLAY g_inba_m.inba007 TO inba007
   DISPLAY g_inba_m.inba008 TO inba008
   
   CALL aint302_inba007_ref(g_inba_m.inba007) RETURNING g_inba_m.inba007_desc
   DISPLAY BY NAME g_inba_m.inba007_desc
END FUNCTION]]>
  </point>
  <point name="function.aint302_get_imaa005" order="26" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 取得產品特徵類別
# Memo...........:
# Usage..........: CALL s_aint302_get_imaa005(p_enterprise,p_imaa001)
#                  RETURNING r_imaa005
# Input parameter: p_enterprise   企業編號
#                : p_imaa001      料號
# Return code....: r_imaa005      特徵類別
# Date & Author..: 2014/02/05 By Lori
# Modify.........:
################################################################################
PRIVATE FUNCTION aint302_get_imaa005(p_enterprise,p_imaa001)
   DEFINE p_enterprise   LIKE type_t.num5,
          p_imaa001      LIKE imaa_t.imaa001
   DEFINE r_imaa005      LIKE imaa_t.imaa005

   LET r_imaa005 = ''
   SELECT imaa005 INTO r_imaa005 
     FROM imaa_t 
    WHERE imaaent = p_enterprise 
      AND imaa001 = p_imaa001
      
   RETURN r_imaa005   
END FUNCTION]]>
  </point>
  <point name="function.aint302_chk_inag004" order="27" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
PRIVATE FUNCTION aint302_chk_inag004(p_inbb007)
DEFINE p_inbb007   LIKE inbb_t.inbb007
DEFINE r_success   LIKE type_t.num5
      
      LET r_success = TRUE
      
      IF cl_null(g_inbb_d[l_ac].inbb002) THEN
         LET g_inbb_d[l_ac].inbb002 = ' '
      END IF
      IF cl_null(g_inbb_d[l_ac].inbb003) THEN
         LET g_inbb_d[l_ac].inbb003 = ' '
      END IF
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_site
      LET g_chkparam.arg2 = g_inbb_d[l_ac].inbb001
      LET g_chkparam.arg3 = g_inbb_d[l_ac].inbb002
      LET g_chkparam.arg4 = g_inbb_d[l_ac].inbb003
      LET g_chkparam.arg5 = p_inbb007
      
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_inag004") THEN
         LET r_success = FALSE
         RETURN r_success  
      END IF
         
      RETURN r_success
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_chk_inag005" order="28" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#輸入的料件+產品特徵+庫存管理特徵+庫位+儲位必須存在[T:庫存明細檔]中
PRIVATE FUNCTION aint302_chk_inag005(p_inbb007,p_inbb008)
DEFINE p_inbb007   LIKE inbb_t.inbb007
DEFINE p_inbb008   LIKE inbb_t.inbb008
DEFINE r_success   LIKE type_t.num5

      LET r_success = TRUE   
      
      IF cl_null(p_inbb008) THEN
         LET p_inbb008 = ' '
      END IF
      IF cl_null(g_inbb_d[l_ac].inbb003) THEN
         LET g_inbb_d[l_ac].inbb003 = ' '
      END IF

      #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
      IF cl_null(g_inbb_d[l_ac].inbb002) THEN
         LET g_inbb_d[l_ac].inbb002 = ' '
      END IF
      IF cl_null(g_inbb_d[l_ac].inbb003) THEN
         LET g_inbb_d[l_ac].inbb003 = ' '
      END IF
      IF cl_null(p_inbb008) THEN
         LET p_inbb008 = ' '
      END IF
      #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
      INITIALIZE g_chkparam.* TO NULL
      
      #設定g_chkparam.*的參數
      LET g_chkparam.arg1 = g_site
      LET g_chkparam.arg2 = g_inbb_d[l_ac].inbb001
      LET g_chkparam.arg3 = g_inbb_d[l_ac].inbb002
      LET g_chkparam.arg4 = g_inbb_d[l_ac].inbb003
      LET g_chkparam.arg5 = p_inbb007
      LET g_chkparam.arg6 = p_inbb008
      
      #呼叫檢查存在並帶值的library
      IF NOT cl_chk_exist("v_inag005") THEN
         LET r_success = FALSE
         RETURN r_success  
      END IF
      RETURN r_success  
      
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbb007_chk_group" order="29" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#檢查當前庫位與單身中的其他項次對應的庫位是否存在相同的控制組
PRIVATE FUNCTION aint302_inbb007_chk_group(p_inbb007)
DEFINE p_inbb007    LIKE inbb_t.inbb007
DEFINE l_inbb007    LIKE inbb_t.inbb007
DEFINE l_oohl001    LIKE oohl_t.oohl001
DEFINE l_n          LIKE type_t.num5
DEFINE l_flag       LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5
DEFINE l_inbbseq    LIKE inbb_t.inbbseq
DEFINE l_i          LIKE type_t.num5
DEFINE l_cn         LIKE type_t.num5

    LET r_success = TRUE
    LET l_flag = TRUE
    LET l_i = 0
    LET l_cn = 0
    
    IF cl_null(g_inbb_d_t.inbbseq) THEN
       LET l_inbbseq = g_inbb_d[l_ac].inbbseq
    ELSE
       LET l_inbbseq = g_inbb_d_t.inbbseq
    END IF
    
    DECLARE inbb007_cs1 CURSOR FOR
        SELECT DISTINCT inbb007 FROM inbb_t 
          WHERE inbbent = g_enterprise AND inbbdocno = g_inba_m.inbadocno
            AND inbbseq <> l_inbbseq     #考慮到修改資料時，修改前的資料不需要再進行檢查          
    FOREACH inbb007_cs1 INTO l_inbb007
       
       LET l_cn = l_cn + 1  #單身是否有資料
       
       DECLARE inbb007_cs2 CURSOR FOR
          SELECT oohl001 FROM oohl_t WHERE oohlent = g_enterprise AND oohl002 = g_site AND oohl003 = l_inbb007
       FOREACH inbb007_cs2 INTO l_oohl001   #獲得控制組編號
          
          LET l_i = l_i +1   #用于判断是否有走进foreach,即判断其他单身的库位是否存在控制组
          
          #判斷當前輸入的庫位編號是否存在其他庫位編號的控制組中
          LET l_n = 0
          SELECT COUNT(*) INTO l_n FROM oohl_t 
             WHERE oohlent = g_enterprise AND oohl001 = l_oohl001
               AND oohl002 = g_site AND oohl003 = p_inbb007
          IF l_n > 0 THEN  #存在相同的控制組編號
             LET l_flag = TRUE
             EXIT FOREACH   #存在一個相同的控制組編號，則其他的控制組編號無需再判斷
          ELSE
             LET l_flag = FALSE
          END IF
          
       END FOREACH
       
       IF NOT l_flag THEN   #如果已經有一筆庫位的控制組編號與當前庫位不存在相同的控制組，則其他的單身庫位也無需在進行檢查
          EXIT FOREACH
       END IF 
       
    END FOREACH
    
    #如果其他单身的库位都不存在控制组中且單身有其他資料，再判断当前库位是否有控制组，若有，则报错
    IF l_i = 0 AND l_cn > 0 THEN
       LET l_n = 0
       SELECT COUNT(oohl001) INTO l_n FROM oohl_t 
         WHERE oohlent = g_enterprise AND oohl002 = g_site AND oohl003 = p_inbb007
       IF l_n > 0 THEN
          LET l_flag = FALSE
       END IF
    END IF
    
    IF NOT l_flag THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = 'ain-00274'
       LET g_errparam.extend = p_inbb007
       LET g_errparam.popup = TRUE
       CALL cl_err()

       LET r_success = FALSE
       RETURN r_success
    END IF
    
    RETURN r_success
    
END FUNCTION]]>
  </point>
  <point name="function.aint302_inbc020_ref" order="30" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#判定結果說明
PRIVATE FUNCTION aint302_inbc020_ref(p_inbc020)
DEFINE p_inbc020      LIKE inbc_t.inbc020
DEFINE r_qcaol004     LIKE qcaol_t.qcaol004

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_inbc020
      CALL ap_ref_array2(g_ref_fields,"SELECT qcaol004 FROM qcaol_t WHERE qcaolent='"||g_enterprise||"' AND qcaol001='"||g_ooef025||"' AND qcaol002=? AND qcaol003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET r_qcaol004 = '', g_rtn_fields[1] , ''
      RETURN r_qcaol004

END FUNCTION]]>
  </point>
  <point name="function.aint302_gen_detail" order="31" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#整批產生單身
PRIVATE FUNCTION aint302_gen_detail()
DEFINE r_success    LIKE type_t.num5
DEFINE l_success    LIKE type_t.num5
DEFINE l_detail     DYNAMIC ARRAY OF RECORD
   inbb001      LIKE inbb_t.inbb001,
   imaal003     LIKE imaal_t.imaal003,
   imaal004     LIKE imaal_t.imaal004,
   inbb002      LIKE inbb_t.inbb002,
   inbb002_desc LIKE type_t.chr500,
   inbb010      LIKE inbb_t.inbb010,
   inbb010_desc LIKE type_t.chr80,
   inbb011      LIKE inbb_t.inbb011,
   inbb007      LIKE inbb_t.inbb007,
   inbb007_desc LIKE type_t.chr80,
   inbb008      LIKE inbb_t.inbb008,
   inbb008_desc LIKE type_t.chr80,
   inbb009      LIKE inbb_t.inbb009,
   inbb003      LIKE inbb_t.inbb003
       END RECORD
DEFINE l_inbb       RECORD LIKE inbb_t.*
DEFINE l_inbbseq    LIKE inbb_t.inbbseq   
DEFINE l_inbc016    LIKE inbc_t.inbc016   #有效日期
DEFINE l_imaf032    LIKE imaf_t.imaf032   #有效期加天數
DEFINE l_inbcseq1   LIKE inbc_t.inbcseq1
DEFINE  l_i         LIKE type_t.num10

    LET r_success = TRUE
    
    IF cl_null(g_inba_m.inbadocno) THEN
       LET r_success = FALSE
       RETURN r_success
    END IF
    
    CALL s_gen_detail(g_inba_m.inbadocno) RETURNING l_success,l_detail
    IF NOT l_success THEN
       LET r_success = FALSE
       RETURN r_success
    END IF
    IF l_detail.getLength() <= 0 THEN
       LET r_success = FALSE
       RETURN r_success
    END IF
    IF l_detail.getLength() > 0 THEN  #因為第一筆資料已呈現在畫面並寫入DB, 從第二筆開始處理           
       IF cl_null(l_inbbseq) OR l_inbbseq = 0 THEN   
          SELECT MAX(inbbseq) INTO l_inbbseq
            FROM inbb_t
           WHERE inbbent   = g_enterprise
             AND inbbdocno = g_inba_m.inbadocno                     
       END IF 

       FOR l_i = 1 TO l_detail.getLength() 
          IF cl_null(l_inbbseq) OR l_inbbseq = 0 THEN
             LET l_inbbseq = 1
          ELSE
             LET l_inbbseq = l_inbbseq + 1             
          END IF 
          
          INITIALIZE l_inbb.* TO NULL 
          
          LET l_inbb.inbbseq = l_inbbseq
          
          LET l_inbb.inbbdocno = g_inba_m.inbadocno
          LET l_inbb.inbbent = g_enterprise
          LET l_inbb.inbbsite = g_site
          
          LET l_inbb.inbb001 = l_detail[l_i].inbb001
          LET l_inbb.inbb002 = l_detail[l_i].inbb002
          LET l_inbb.inbb003 = l_detail[l_i].inbb003
          LET l_inbb.inbb010 = l_detail[l_i].inbb010
          LET l_inbb.inbb011 = l_detail[l_i].inbb011
          LET l_inbb.inbb012 = l_detail[l_i].inbb011
          LET l_inbb.inbb007 = l_detail[l_i].inbb007
          LET l_inbb.inbb008 = l_detail[l_i].inbb008
          LET l_inbb.inbb009 = l_detail[l_i].inbb009
          
          LET l_inbb.inbb016 = g_inba_m.inba007
          
          #參考單位、包裝容器
          SELECT imaf015,imaf123 INTO l_inbb.inbb013,l_inbb.inbb004
             FROM imaf_t WHERE imafent = g_enterprise AND imafsite = g_site AND imaf001 = l_inbb.inbb001
    
    
          IF (NOT cl_null(l_inbb.inbb001)) AND (NOT cl_null(l_inbb.inbb010)) AND (NOT cl_null(l_inbb.inbb013)) THEN
              CALL s_aooi250_convert_qty(l_inbb.inbb001,l_inbb.inbb010,l_inbb.inbb013,l_inbb.inbb011) RETURNING l_success,l_inbb.inbb014
             IF l_success THEN
                LET l_inbb.inbb015 = l_inbb.inbb014
             END IF
          END IF
          
          IF cl_null(l_inbb.inbb008) THEN
             LET l_inbb.inbb008 = ' '
          END IF
          #檢驗否為'N'
          LET l_inbb.inbb018 = 'N'   
          LET l_inbb.inbb019 = l_inbb.inbb011
    
          INSERT INTO inbb_t
                      (inbbent, inbbsite, inbbdocno, inbbseq,
                       inbb001,inbb002,inbb003,inbb004,inbb007,
                       inbb008,inbb009,inbb010,inbb011,inbb012,
                       inbb013,inbb014,inbb015,inbb016,inbb017,
                       inbb018,inbb019,inbb020,inbb021,
                       inbb023,inbb024,inbb025) 
                VALUES(l_inbb.inbbent,l_inbb.inbbsite,l_inbb.inbbdocno,l_inbbseq,
                       l_inbb.inbb001,l_inbb.inbb002 ,l_inbb.inbb003,l_inbb.inbb004,l_inbb.inbb007,
                       l_inbb.inbb008,l_inbb.inbb009, l_inbb.inbb010,l_inbb.inbb011,l_inbb.inbb012, 
                       l_inbb.inbb013,l_inbb.inbb014, l_inbb.inbb015,l_inbb.inbb016,l_inbb.inbb017, 
                       l_inbb.inbb018,l_inbb.inbb019, l_inbb.inbb020,l_inbb.inbb021,
                       l_inbb.inbb023,l_inbb.inbb024,l_inbb.inbb025) 
          IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = "inbb_t"
             LET g_errparam.popup = FALSE
             CALL cl_err()
             LET r_success = FALSE    
             RETURN r_success             
          ELSE
             #同步新增[T:雜項庫存異動庫儲批明細檔]
             LET l_inbc016 = g_today
             LET l_imaf032 = NULL                        
             LET l_inbcseq1 = 0
             #如果料件有做批號控管時，則[C:有效日期]=g_today+[T:料件集團檔].[C:有效天數]                       
             SELECT imaf032 INTO l_imaf032 
               FROM imaf_t 
              WHERE imafent = g_enterprise 
                AND imafsite = 'ALL' 
                AND imaf001 = l_inbb.inbb001
             IF NOT cl_null(l_imaf032) THEN
                LET l_inbc016 = l_inbc016 + l_imaf032
             END IF
             
             IF cl_null(l_inbcseq1) THEN   
                SELECT MAX(inbcseq1) INTO l_inbcseq1
                  FROM inbc_t
                 WHERE inbcent   = g_enterprise
                   AND inbcsite  = g_site
                   AND inbcdocno = g_inba_m.inbadocno 
                   AND inbcseq   = l_inbbseq                              
             END IF 
             IF cl_null(l_inbcseq1) THEN
                LET l_inbcseq1 = 1
             ELSE
                LET l_inbcseq1 = l_inbcseq1 + 1             
             END IF
           
             INSERT INTO inbc_t
                        (inbcent,inbcsite,inbcdocno,inbcseq,inbcseq1,                                   
                         inbc001,inbc002,inbc003,inbc004,inbc005,
                         inbc006,inbc007,inbc009,inbc010,inbc011,
                         inbc015,inbc016,inbc017,inbc021,inbc022,inbc023) 
                  VALUES(l_inbb.inbbent,l_inbb.inbbsite,l_inbb.inbbdocno,l_inbbseq,l_inbcseq1,
                         l_inbb.inbb001,l_inbb.inbb002,l_inbb.inbb003,l_inbb.inbb004,l_inbb.inbb007,
                         l_inbb.inbb008,l_inbb.inbb009,l_inbb.inbb010,l_inbb.inbb011,l_inbb.inbb013,
                         l_inbb.inbb015,l_inbb.inbb022,l_inbb.inbb021,
                         l_inbb.inbb023,l_inbb.inbb024,l_inbb.inbb025)
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "inbc_t"
                LET g_errparam.popup = FALSE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success                
             END IF
          END IF
       END FOR                   
    END IF
    
    RETURN r_success
    
END FUNCTION]]>
  </point>
  <point name="function.aint302_inao012_chk" order="32" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 批序號數量與申請數量是否一致
# Memo...........:
# Usage..........: CALL aint302_inao012_chk()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint302_inao012_chk()
DEFINE  l_s_inao012      LIKE inao_t.inao012
   IF l_ac <> 0 THEN
      SELECT SUM(inao012) INTO l_s_inao012 FROM inao_t
       WHERE inaoent = g_enterprise
         AND inaodocno = g_inba_m.inbadocno
         AND inaoseq = g_inbb_d[l_ac].inbbseq
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aint302_ins_inao_2" order="33" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 產生申請資料的同時產生實際異動資料
# Memo...........:
# Usage..........: CALL aint302_ins_inao_2()
#                  RETURNING TRUE/FALSE
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint302_ins_inao_2()
DEFINE  l_sql       STRING
DEFINE  l_inao      RECORD LIKE inao_t.*
DEFINE  r_success   LIKE type_t.num5

   #先刪除實際資料
   DELETE FROM inao_t 
    WHERE inaodocno = g_inba_m.inbadocno
      AND inaosite = g_site
      AND inaoseq = g_inbb_d[g_detail_idx].inbbseq
      AND inao000 = '2'
            
   LET l_sql = "SELECT * FROM inao_t ",
               " WHERE inaodocno = '",g_inba_m.inbadocno,"'",
               "   AND inaoseq = ",g_inbb_d[g_detail_idx].inbbseq,
               "   AND inao000 = '1' "
               
   PREPARE aint302_inao_pre FROM l_sql
   DECLARE aint302_inao_ins CURSOR FOR aint302_inao_pre  
   
   LET r_success = TRUE
   FOREACH aint302_inao_ins INTO l_inao.*
      LET l_inao.inao000 = '2'
      LET l_inao.inaoseq1 = 1
      INSERT INTO inao_t (inaoent,inaosite,inaodocno,inaoseq,inaoseq1,inaoseq2,inao000,inao001,inao002,inao003,inao004,inao005,inao006,
                          inao007,inao008,inao009,inao010,inao011,inao012,inao013,inao014,inao020,inao021,inao022,inao023,inao024)
                  VALUES (g_enterprise,g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,l_inao.inaoseq1,l_inao.inaoseq2,l_inao.inao000,
                          l_inao.inao001,l_inao.inao002,l_inao.inao003,l_inao.inao004,l_inao.inao005,l_inao.inao006,l_inao.inao007,l_inao.inao008,
                          l_inao.inao009,l_inao.inao010,l_inao.inao011,l_inao.inao012,l_inao.inao013,l_inao.inao014,l_inao.inao020,l_inao.inao021,
                          l_inao.inao022,l_inao.inao023,l_inao.inao024)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inao_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         LET r_success = FALSE               
      END IF                          
   END FOREACH                    
   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.define" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5      ]]>
  </point>
  <point name="b_fill.fill" order="" ver="19" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL aint302_inbb001_desc(g_inbb_d[l_ac].inbb001) RETURNING g_inbb_d[l_ac].inbb001_desc,g_inbb_d[l_ac].imaal004
         
#         INITIALIZE g_ref_fields TO NULL
#         LET g_ref_fields[1] = g_inbb_d[l_ac].inbb004
#         CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#         LET g_inbb_d[l_ac].inbb004_desc =  g_rtn_fields[1]
         
         CALL s_feature_description(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002) RETURNING l_success,g_inbb_d[l_ac].inbb002_desc
         
#         CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
         
         CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
         
#         CALL aint302_inbb010_ref(g_inbb_d[l_ac].inbb010) RETURNING g_inbb_d[l_ac].inbb010_desc
         
#         CALL aint302_inbb010_ref(g_inbb_d[l_ac].inbb013) RETURNING g_inbb_d[l_ac].inbb013_desc
         
         CALL aint302_inba007_ref(g_inbb_d[l_ac].inbb016) RETURNING g_inbb_d[l_ac].inbb016_desc
         
         CALL s_desc_get_project_desc(g_inbb_d[l_ac].inbb023) RETURNING g_inbb_d[l_ac].inbb023_desc
          
         CALL s_desc_get_wbs_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb024) RETURNING g_inbb_d[l_ac].inbb024_desc
            
         CALL s_desc_get_activity_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb025) RETURNING g_inbb_d[l_ac].inbb025_desc
         
         #add by lixh 20150826 
         IF g_argv[1] = '1' THEN
            CALL s_lot_b_fill('2',g_site,'1',g_inba_m.inbadocno,'','','-1')
         ELSE
            CALL s_lot_b_fill('2',g_site,'1',g_inba_m.inbadocno,'','','1')
         END IF 
         #add by lixh 20150826
         ]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="b_fill2.after_fill" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="b_fill2.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.after" order="" ver="17" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #add by lixh 20151010
   CALL aint302_set_act_visible() 
   CALL aint302_set_act_no_visible() 
   CALL aint302_set_act_visible_b() 
   CALL aint302_set_act_no_visible_b() 
   #add by lixh 20151010   ]]>
  </point>
  <point name="browser_fill.before_browser_fill" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #add by lixh 20150901
   CALL cl_set_toolbaritem_visible("s_lot_ins,s_lot_sel,s_lot_sel1",TRUE)  
   #aint301單身異動申請明細頁籤與入庫明細頁籤的[有效日期]、[存貨備註]欄位需隱藏不可維護
   IF g_argv[1] = '1' THEN
      #CALL cl_set_comp_visible("inbb021,inbb022,inbc016,inbc017",FALSE)
      CALL cl_set_toolbaritem_visible("s_lot_ins",FALSE)
   ELSE
      CALL cl_set_toolbaritem_visible("s_lot_sel1",FALSE)
   END IF 
   #add by lixh 20150901 ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   IF cl_null(g_wc) THEN
      LET g_wc = " inbasite = '",g_site,"' "
   ELSE
      LET g_wc = g_wc," AND inbasite = '",g_site,"' "
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc," AND inba001 = '", g_argv[01], "' "
   END IF
   
   LET l_wc  = g_wc.trim()
   ]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.open" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="browser_search.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="construct.a.inba002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inba003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inba004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inba005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inba006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inba007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inba008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbacnfid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbacrtdp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbacrtid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbamodid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbaowndp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbaownid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbapstid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.inbastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb014" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb016_desc" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbb021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.a.page1.inbbseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inba002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inba003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inba004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inba005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inba006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inba007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inba008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbacnfdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbacnfid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbacrtdp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbacrtdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbacrtid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbamoddt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbamodid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbaowndp" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbaownid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbapstdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbapstid" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.inbastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb014" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb016_desc" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbb021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.b.page1.inbbseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.inba002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.inba005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.inba006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.inba008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.inbadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.inbadocno" order="" ver="12" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            IF g_argv[1] = '1' THEN
               LET g_qryparam.where = " inba001 = '1' "
            ELSE
               LET g_qryparam.where = " inba001 = '2' "
            END IF
            CALL q_inbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbadocno  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO inbadocdt #輸入日期 
               #DISPLAY g_qryparam.return3 TO inba003 #申請人員 
               #DISPLAY g_qryparam.return4 TO inba004 #申請部門 
               #DISPLAY g_qryparam.return5 TO inbastus #狀態碼 

            NEXT FIELD inbadocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.inbastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb007" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_2()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb007  #顯示到畫面上
            NEXT FIELD inbb007                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.inbb008" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inab002()                    #呼叫開窗
            DISPLAY g_qryparam.return2 TO inbb008  #顯示到畫面上
            NEXT FIELD inbb008                     #返回原欄位
 ]]>
  </point>
  <point name="construct.c.page1.inbb009" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #INITIALIZE g_qryparam.* TO NULL
            #LET g_qryparam.state = 'c'
            #LET g_qryparam.reqry = FALSE
            #CALL q_inag004_13()                    #呼叫開窗
            #DISPLAY g_qryparam.return3 TO inbb009  #顯示到畫面上
            #NEXT FIELD inbb009                     #返回原欄位
]]>
  </point>
  <point name="construct.c.page1.inbb011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb014" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb016_desc" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="construct.c.page1.inbb023" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb023  #顯示到畫面上
            NEXT FIELD inbb023                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.inbb024" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb024  #顯示到畫面上
            NEXT FIELD inbb024                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.inbb025" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbm002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbb025  #顯示到畫面上
            NEXT FIELD inbb025                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.inbbseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.add_cs" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="cs.b_dialog" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="cs.body.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="cs.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="cs.head.before_construct" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="default_search.after" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc , " AND inba001 = '", g_argv[01], "' "
   END IF]]>
  </point>
  <point name="default_search.after_sql" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET ls_wc= ''
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = " inbadocno = '", g_argv[02], "' AND "
   END IF]]>
  </point>
  <point name="default_search.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="default_search.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="delete.before_ask" order="" ver="12" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #add by lixh 20150526
   IF g_inba_m.inba005 = '10' AND NOT cl_null(g_inba_m.inba006) THEN
      RETURN
   END IF
   #add by lixh 20150526]]>
  </point>
  <point name="delete.body.a_delete" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        #同步刪除對應的[T:雜項庫存異動庫儲批明細檔]與[T:製造批序號庫存異動明細檔]
      DELETE FROM inbc_t
         WHERE inbcent = g_enterprise AND inbcsite = g_site AND inbcdocno = g_inba_m.inbadocno 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inbc_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      DELETE FROM inao_t
         WHERE inaoent = g_enterprise AND inaosite = g_site AND inaodocno = g_inba_m.inbadocno 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inao_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      IF g_inba_m.inba005 = '8' THEN
         UPDATE sfja_t SET sfja004 = NULL
          WHERE sfjaent = g_enterprise
            AND sfjadocno = g_inba_m.inba006
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "upd sfja004"
            LET g_errparam.popup = FALSE
            CALL cl_err()
         
            CALL s_transaction_end('N','0')
            RETURN
         END IF 
      END IF


      #151202 By TSD.robert ----start----
      #條碼異動檔一併刪除
      IF g_prog = 'aint301' THEN
         DELETE FROM bcae_t
          WHERE bcaeent = g_enterprise AND bcaesite = g_site
            AND bcae002 = g_inba_m.inbadocno 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "bcae_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
         
            CALL s_transaction_end('N','0')
            RETURN
         END IF 
         
         DELETE FROM bcaf_t
          WHERE bcafent = g_enterprise AND bcafsite = g_site
            AND bcaf002 = g_inba_m.inbadocno 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "bcaf_t"
            LET g_errparam.popup = FALSE
            CALL cl_err()
         
            CALL s_transaction_end('N','0')
            RETURN
         END IF 
      END IF
      #151202 By TSD.robert ----end----]]>
  </point>
  <point name="delete.body.b_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.body.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                        IF NOT s_aooi200_del_docno(g_inba_m.inbadocno,g_inba_m.inbadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="delete.head.b_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.head.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete.lang.before_delete" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #add by lixh 20150909
      CALL g_inbc_d.clear()
      CALL g_inao_d.clear()
      CALL g_inao_d2.clear()
      #add by lixh 20150909]]>
  </point>
  <point name="delete_b.a_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.b_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="delete_b.other" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF ls_group.getIndexOf(ps_page,1) > 0 THEN

      DELETE FROM inbc_t
       WHERE inbcent = g_enterprise AND
         inbcdocno = ps_keys_bak[1] AND inbcseq = ps_keys_bak[2]
  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      CALL g_inbc_d.deleteElement(li_idx)
      
   END IF ]]>
  </point>
  <point name="detail_reproduce.body.table1.a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint302_detail AS ",
                "SELECT * FROM inbc_t "
   PREPARE repro_tb2 FROM ls_sql
   EXECUTE repro_tb2
   FREE repro_tb2
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint302_detail SELECT * FROM inbc_t 
                                         WHERE inbcent = g_enterprise AND inbcdocno = g_inbadocno_t
 
   
   #將key修正為調整後   
   UPDATE aint302_detail 
      #更新key欄位
      SET inbcdocno = g_inba_m.inbadocno
   
   INSERT INTO inbc_t SELECT * FROM aint302_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF

   DROP TABLE aint302_detail      ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.body.table1.m_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_reproduce.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_show.after" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_show.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="detail_show.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="fetch.action_control" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete,query,modify_detail",TRUE)
   IF g_inba_m.inbastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF
   IF NOT cl_null(g_argv[02]) THEN
      CALL cl_set_act_visible("query",FALSE)
   END IF
   #add by lixh 20150818
   IF g_prog = 'aint301' THEN
      CALL cl_set_act_visible("gen_qc,qc_query,storage_by_qc",FALSE)
   END IF   
   #add by lixh 20150818
   
   #add by lixh 20150901
   #CALL cl_set_toolbaritem_visible("s_lot_ins,s_lot_sel,s_lot_sel1",TRUE)  #mark by lixh 20151010
   #aint301單身異動申請明細頁籤與入庫明細頁籤的[有效日期]、[存貨備註]欄位需隱藏不可維護
   IF g_argv[1] = '1' THEN
      CALL cl_set_toolbaritem_visible("s_lot_ins",FALSE)
   ELSE
      CALL cl_set_toolbaritem_visible("s_lot_sel1",FALSE)
   END IF   
   #add by lixh 20150901  ]]>
  </point>
  <point name="fetch.after" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="fetch.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="fill_chk.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="fill_chk.other_chk" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="filter.add_cs" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="filter.b_dialog" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="filter.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="filter_parser.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="global.import" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[IMPORT FGL sub_s_lot]]>
  </point>
  <point name="global.variable" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ TYPE type_g_inbc_d        RECORD
    inbcseq       LIKE inbc_t.inbcseq,
    inbcseq1      LIKE inbc_t.inbcseq1,
    inbc018       LIKE inbc_t.inbc018,
    inbc019       LIKE inbc_t.inbc019,
    inbc020       LIKE inbc_t.inbc020,
    inbc020_desc  LIKE type_t.chr80,
    inbc001       LIKE inbc_t.inbc001,
    inbc001_desc  LIKE imaal_t.imaal003,
    inbc001_desc2 LIKE imaal_t.imaal004,
    inbc002       LIKE inbc_t.inbc002,
    inbc002_desc  LIKE type_t.chr80,
    inbc004       LIKE inbc_t.inbc004,
    inbc003       LIKE inbc_t.inbc003,
    inbc005       LIKE inbc_t.inbc005,
    inbc005_desc  LIKE type_t.chr80,
    inbc006       LIKE inbc_t.inbc006,
    inbc006_desc  LIKE type_t.chr80,
    inbc007       LIKE inbc_t.inbc007,
    inbc009       LIKE inbc_t.inbc009,
    inbc009_desc  LIKE type_t.chr80,
    inbc010       LIKE inbc_t.inbc010,
    inbc011       LIKE inbc_t.inbc011,
    inbc011_desc  LIKE type_t.chr80,
    inbc015       LIKE inbc_t.inbc015,
    inbc021       LIKE inbc_t.inbc021,
    inbc021_desc  LIKE pjbal_t.pjbal003,
    inbc022       LIKE inbc_t.inbc022,
    inbc022_desc  LIKE pjbbl_t.pjbbl004,
    inbc023       LIKE inbc_t.inbc023,
    inbc023_desc  LIKE pjbml_t.pjbml004,
    inbc016       LIKE inbc_t.inbc016,
    inbc017       LIKE inbc_t.inbc017
       END RECORD
       
# TYPE type_g_inao_d        RECORD
#    inaoseq       LIKE inao_t.inaoseq,
#    inaoseq1      LIKE inao_t.inaoseq1,
#    inaoseq2      LIKE inao_t.inaoseq2,
#    inao001       LIKE inao_t.inao001,
#    inao001_desc  LIKE imaal_t.imaal003,
#    inao001_desc2 LIKE imaal_t.imaal004,
#    inao008       LIKE inao_t.inao008,
#    inao009       LIKE inao_t.inao009,
#    inao010       LIKE inao_t.inao010,
#    inao012       LIKE inao_t.inao012
#       END RECORD
 
 TYPE type_g_inao_d2        RECORD
    inaoseq_1       LIKE inao_t.inaoseq,
    inaoseq1_1      LIKE inao_t.inaoseq1,
    inaoseq2_1      LIKE inao_t.inaoseq2,
    inao001_1       LIKE inao_t.inao001,
    inao001_1_desc  LIKE imaal_t.imaal003,
    inao001_1_desc2 LIKE imaal_t.imaal004,
    inao008_1       LIKE inao_t.inao008,
    inao009_1       LIKE inao_t.inao009,
    inao010_1       LIKE inao_t.inao010,
    inao012_1       LIKE inao_t.inao012
       END RECORD 
DEFINE g_inbc_d          DYNAMIC ARRAY OF type_g_inbc_d
#DEFINE g_inao_d          DYNAMIC ARRAY OF type_g_inao_d
DEFINE g_inao_d2         DYNAMIC ARRAY OF type_g_inao_d2
DEFINE l_ac2                 LIKE type_t.num5 
DEFINE l_ac3                 LIKE type_t.num5 
DEFINE l_ac4                 LIKE type_t.num5 
DEFINE g_rec_b2              LIKE type_t.num5 
DEFINE g_rec_b3              LIKE type_t.num5 
DEFINE g_rec_b4              LIKE type_t.num5 

DEFINE g_type     LIKE type_t.chr1   #'1'時代表是 庫存雜項發料維護作業  '2'時代表是 庫存雜項收料維護作業
DEFINE g_acc      LIKE gzcb_t.gzcb007
DEFINE g_ooef025  LIKE ooef_t.ooef025  #品管參照表號
DEFINE g_flag     LIKE type_t.num5

GLOBALS
   DEFINE g_d_idx_display   LIKE type_t.num5   #製造批序號明細所在筆數
   DEFINE g_d_cnt_display   LIKE type_t.num5   #製造批序號明細總筆數
   DEFINE g_appoint_idx     LIKE type_t.num5   #指定進入單身行數
 TYPE type_g_inao_d        RECORD
    inaoseq       LIKE inao_t.inaoseq,
    inaoseq1      LIKE inao_t.inaoseq1,
    inaoseq2      LIKE inao_t.inaoseq2,
    inao001       LIKE inao_t.inao001,
    inao001_desc  LIKE imaal_t.imaal003,
    inao001_desc2 LIKE imaal_t.imaal004,
    inao008       LIKE inao_t.inao008,
    inao009       LIKE inao_t.inao009,
    inao010       LIKE inao_t.inao010,
    inao012       LIKE inao_t.inao012
       END RECORD 
DEFINE g_inao_d          DYNAMIC ARRAY OF type_g_inao_d       
END GLOBALS]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="idx_chk.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_inbc_d.getLength() THEN
         LET g_detail_idx2 = g_inbc_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_inbc_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_inbc_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 3 OR g_current_page = 4 THEN
      DISPLAY g_d_idx_display, g_d_cnt_display TO FORMONLY.idx, FORMONLY.cnt
   END IF]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="init.init" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   CALL cl_set_toolbaritem_visible("s_lot_ins,s_lot_sel,s_lot_sel1",TRUE)
   #aint301單身異動申請明細頁籤與入庫明細頁籤的[有效日期]、[存貨備註]欄位需隱藏不可維護
   IF g_argv[1] = '1' THEN
      CALL cl_set_comp_visible("inbb021,inbb022,inbc016,inbc017",FALSE)
      CALL cl_set_toolbaritem_visible("s_lot_ins",FALSE)
   ELSE
      CALL cl_set_toolbaritem_visible("s_lot_sel1",FALSE)
   END IF
   
   #判斷據點參數若不使用參考單位時，則參考單位、數量需隱藏不可以維護(據點參數:S-BAS-0028)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN
      CALL cl_set_comp_visible("inbb013,inbb013_desc,inbb014,inbb015",FALSE)
   END IF
   
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("inbb002,inbb002_desc,inbc002,inbc002_desc",FALSE)
   END IF
   
   CALL cl_ui_replace_sub_window(cl_ap_formpath("sub", "s_lot_s01"), "grid_s_lot", "Table", "s_detail1_s_lot_s01")

   CALL s_lot_ins_create_tmp()
   CALL s_lot_sel_create_tmp()

   #add by lixh 20150818
   IF g_prog = 'aint301' THEN
      CALL cl_set_act_visible("gen_qc,qc_query,storage_by_qc",FALSE)
   END IF
   #add by lixh 20150818]]>
  </point>
  <point name="input.a.inba002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.inba005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.inba006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.inba008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.inbadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #IF NOT cl_null(g_inba_m.inbadocdt) THEN
            #   IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inba_m.inbadocdt != g_inba_m_t.inbadocdt)) THEN
            #      LET g_inba_m.inbadocdt = g_inba_m_t.inbadocdt
            #      DISPLAY g_inba_m.inbadocdt TO inbadocdt
            #   END IF
            #ELSE
            #   NEXT FIELD inbadocdt
            #END IF
            #CALL cl_set_comp_entry("inbadocno,inbadocdt",FALSE)]]>
  </point>
  <point name="input.a.inbadocno" order="" ver="18" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #此段落由子樣板a05產生
            CALL s_aooi200_get_slip_desc(g_inba_m.inbadocno) RETURNING g_inba_m.inbadocno_desc
            DISPLAY BY NAME g_inba_m.inbadocno_desc
            IF NOT cl_null(g_inba_m.inbadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inba_m.inbadocno != g_inbadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inba_t WHERE "||"inbaent = '" ||g_enterprise|| "' AND inbasite = '" ||g_site|| "' AND "||"inbadocno = '"||g_inba_m.inbadocno ||"'",'std-00004',0) THEN 
                     LET g_inba_m.inbadocno =  g_inba_m_t.inbadocno
                     CALL s_aooi200_get_slip_desc(g_inba_m.inbadocno) RETURNING g_inba_m.inbadocno_desc
                     DISPLAY BY NAME g_inba_m.inbadocno_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  #20151029 by stellar add ----- (S)
                  CALL s_control_chk_doc('1',g_inba_m.inbadocno,'5',g_user,g_dept,'','') RETURNING l_success,l_flag1
                  IF NOT l_success OR NOT l_flag1 THEN
                     LET g_inba_m.inbadocno =  g_inba_m_t.inbadocno
                     CALL s_aooi200_get_slip_desc(g_inba_m.inbadocno) RETURNING g_inba_m.inbadocno_desc
                     DISPLAY BY NAME g_inba_m.inbadocno_desc
                     NEXT FIELD CURRENT
                  END IF
                  #20151029 by stellar add ----- (E)
                  
                  IF NOT s_aooi200_chk_slip(g_site,'',g_inba_m.inbadocno,g_prog) THEN
                     LET g_inba_m.inbadocno =  g_inba_m_t.inbadocno
                     CALL s_aooi200_get_slip_desc(g_inba_m.inbadocno) RETURNING g_inba_m.inbadocno_desc
                     DISPLAY BY NAME g_inba_m.inbadocno_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL aint302_get_col_default()   #取得欄位預設值
               CALL aint302_set_entry(p_cmd)
               CALL aint302_set_no_entry(p_cmd)   
            END IF
]]>
  </point>
  <point name="input.a.inbastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page1.inbb001" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                    
            IF NOT cl_null(g_inbb_d[l_ac].inbb001) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb001 != g_inbb_d_o.inbb001)) THEN 
                  CALL aint302_inbb001_ref(g_inbb_d[l_ac].inbb001) 
                  
                  IF NOT aint302_inbb001_chk(g_inbb_d[l_ac].inbb001) THEN
                     LET g_inbb_d[l_ac].inbb001 = g_inbb_d_o.inbb001
                     LET g_inbb_d[l_ac].inbb001_desc = g_inbb_d_o.inbb001_desc
                     LET g_inbb_d[l_ac].imaal004 = g_inbb_d_o.imaal004
                     NEXT FIELD CURRENT
                  END IF
                                    
                  #抓取料件據點進銷存相關資訊
                   LET l_imaf071 = NULL
                   LET l_imaf081 = NULL
                   SELECT imaf071,imaf081 INTO l_imaf071,l_imaf081 FROM imaf_t WHERE imafent = g_enterprise
                     AND imafsite = g_site AND imaf001 = g_inbb_d[l_ac].inbb001
                  
                  #清空產品特徵的值
                  #LET g_inbb_d[l_ac].inbb002 = ''
                  #LET g_inbb_d[l_ac].inbb003 = ''
                  
               END IF
            END IF
            CALL aint302_set_entry_b(l_cmd)
            CALL aint302_set_no_required_b()
            CALL aint302_set_required_b()               
            CALL aint302_set_no_entry_b(l_cmd)
            
            LET g_inbb_d_o.inbb001 = g_inbb_d[l_ac].inbb001 
            
            LET l_imaa005 = ''
            CALL aint302_get_imaa005(g_enterprise,g_inbb_d[l_ac].inbb001) RETURNING l_imaa005
               
            CALL l_inam.clear()
            IF NOT cl_null(l_imaa005) THEN
               IF l_cmd = 'a' THEN            
                  #CALL l_inam.clear()            
                  CALL s_feature(l_cmd,g_inbb_d[l_ac].inbb001,'','',g_site,g_inba_m.inbadocno) RETURNING l_success,l_inam
                  LET g_inbb_d[l_ac].inbb002 = l_inam[1].inam002
                  LET g_inbb_d[l_ac].inbb011 = l_inam[1].inam004
                  DISPLAY BY NAME g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb011 
                  
                  LET g_inbb_d[l_ac].inbb012 = g_inbb_d[l_ac].inbb011
                  #檢驗否為'N'
                  IF g_inbb_d[l_ac].inbb018 = 'N' THEN
                     LET g_inbb_d[l_ac].inbb019 = g_inbb_d[l_ac].inbb011
                  ELSE
                     LET g_inbb_d[l_ac].inbb019 = 0
                  END IF
                  
                  #計算參考數量
                  IF (NOT cl_null(g_inbb_d[l_ac].inbb001)) AND (NOT cl_null(g_inbb_d[l_ac].inbb011)) AND (NOT cl_null(g_inbb_d[l_ac].inbb013)) THEN
#                     CALL s_aimi190_get_convert(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb013) RETURNING l_success,l_rate  #xj mod
                     CALL s_aooi250_convert_qty(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb011)
                        RETURNING l_success,g_inbb_d[l_ac].inbb014
                     IF l_success THEN
#                        LET g_inbb_d[l_ac].inbb014 = g_inbb_d[l_ac].inbb011 * l_rate   #xj mod
                        LET g_inbb_d[l_ac].inbb015 = g_inbb_d[l_ac].inbb014
                     END IF
                  END IF
                  DISPLAY BY NAME g_inbb_d[l_ac].inbb014,g_inbb_d[l_ac].inbb015                   
               END IF
            END IF 
                      
            ]]>
  </point>
  <point name="input.a.page1.inbb002" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_feature_description(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002) RETURNING l_success,g_inbb_d[l_ac].inbb002_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb002_desc 
            IF NOT cl_null(g_inbb_d[l_ac].inbb002) THEN
               IF NOT s_feature_check(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002) THEN
                  LET g_inbb_d[l_ac].inbb002 = g_inbb_d_t.inbb002
                  CALL s_feature_description(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002) RETURNING l_success,g_inbb_d[l_ac].inbb002_desc
                  DISPLAY BY NAME g_inbb_d[l_ac].inbb002_desc
                  NEXT FIELD CURRENT
               END IF
            END IF   ]]>
  </point>
  <point name="input.a.page1.inbb003" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #IF cl_null(g_inbb_d[l_ac].inbb003) THEN
            #   LET g_inbb_d[l_ac].inbb003 = ' '
            #END IF]]>
  </point>
  <point name="input.a.page1.inbb004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                CALL aint302_inbb004_ref(g_inbb_d[l_ac].inbb004) RETURNING g_inbb_d[l_ac].inbb004_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb004_desc
            IF NOT cl_null(g_inbb_d[l_ac].inbb004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb004 != g_inbb_d_t.inbb004)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
   
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_inbb_d[l_ac].inbb004
   
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imaa001_3") THEN
                     LET g_inbb_d[l_ac].inbb004 = g_inbb_d_t.inbb004
                     CALL aint302_inbb004_ref(g_inbb_d[l_ac].inbb004) RETURNING g_inbb_d[l_ac].inbb004_desc
                     DISPLAY BY NAME g_inbb_d[l_ac].inbb004_desc
                     NEXT FIELD CURRENT 
                  END IF
               END IF
            END IF
            ]]>
  </point>
  <point name="input.a.page1.inbb007" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inbb_d[l_ac].inbb007_desc = ''
            DISPLAY BY NAME g_inbb_d[l_ac].inbb007_desc
            IF NOT cl_null(g_inbb_d[l_ac].inbb007) THEN 
            
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb007 != g_inbb_d_o.inbb007)) THEN 
                  IF NOT aint302_inbb007_chk(g_inbb_d[l_ac].inbb007) THEN
                     LET g_inbb_d[l_ac].inbb007 = g_inbb_d_o.inbb007
                     LET g_inbb_d[l_ac].inbb008 = g_inbb_d_o.inbb008
                     LET g_inbb_d[l_ac].inbb009 = g_inbb_d_o.inbb009
                     CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
                     CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF g_inbb_d[l_ac].inbb007 != g_inbb_d_o.inbb007 THEN                   
                  #mark by lixh 20151127
#                     LET g_inbb_d[l_ac].inbb008 = ''
#                     LET g_inbb_d[l_ac].inbb009 = ''   
                  #mark by lixh 20151127
                  
                  #add by lixh 20151127
                      IF NOT cl_null(g_inbb_d[l_ac].inbb007) AND NOT cl_null(g_inbb_d[l_ac].inbb008)  THEN
                         LET l_cnt = 0
                         SELECT COUNT(*) INTO l_cnt FROM inab_t
                          WHERE inabent = g_enterprise
                            AND inabsite = g_site
                            AND inab001 = g_inbb_d[l_ac].inbb007
                            AND inab002 = g_inbb_d[l_ac].inbb008
                         IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                         IF l_cnt = 0 THEN 
                            LET g_inbb_d[l_ac].inbb008 = ' '                            
                         END IF                                              
                      END IF
                  #add by lixh 20151127                  
                  END IF                  
                  #[C:庫位]有值時，需呼叫應用元件取得該庫位是否有設置在庫存控制組中，
                  #若有時需判斷該控制組是否與其他項次的庫位所對應的控制組一樣
                  #若不一樣則需訊息告知，並將游標跳到[C:庫位]欄位供修改
                  IF NOT cl_null(g_inbb_d[l_ac].inbb007) AND l_ac > 1 THEN

                  END IF
                  
                  IF NOT cl_null(g_inbb_d[l_ac].inbb008) THEN
                     IF NOT aint302_inbb008_chk(g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) THEN
                        LET g_inbb_d[l_ac].inbb007 = g_inbb_d_o.inbb007
                        LET g_inbb_d[l_ac].inbb008 = g_inbb_d_o.inbb008
                        LET g_inbb_d[l_ac].inbb009 = g_inbb_d_o.inbb009
                        CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
                        CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  
               END IF
               #add by lixh 20151111
               IF s_lot_batch_number(g_inbb_d[l_ac].inbb001,g_site) THEN
                  IF g_inbb_d[l_ac].inbb007 != g_inbb_d_o.inbb007 OR g_inbb_d_o.inbb007 IS NULL OR
                     g_inbb_d[l_ac].inbb008 != g_inbb_d_o.inbb008 OR g_inbb_d_o.inbb008 IS NULL OR
                     g_inbb_d[l_ac].inbb009 != g_inbb_d_o.inbb009 OR g_inbb_d_o.inbb009 IS NULL  THEN  #變更倉庫
                     IF g_prog = 'aint302' THEN   #雜收
                        CALL s_lot_upd_inao(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',' ',g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,'')
                             RETURNING r_success 
                        IF NOT r_success THEN
                           NEXT FIELD CURRENT
                        END IF                        
                        CALL aint302_inao_fill2()                            
                     END IF
                     IF g_prog = 'aint301' THEN   #雜發
                        CALL s_lot_inao_chk(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',' ',g_site) RETURNING l_success,l_count
                        IF l_count > 0 THEN
                           IF l_success  THEN
                              CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'-1','aint301','','','','','0')   
                                   RETURNING l_success  
                                   
                              IF NOT aint302_ins_inao_2() THEN
                                 NEXT FIELD CURRENT
                              END IF
                              CALL aint302_inao_fill2() 
                           ELSE
                              LET g_inbb_d[l_ac].inbb007 = g_inbb_d_o.inbb007    
                              LET g_inbb_d[l_ac].inbb008 = g_inbb_d_o.inbb008
                              LET g_inbb_d[l_ac].inbb009 = g_inbb_d_o.inbb009                           
                           END IF
                        #add by lixh 20151204
                        ELSE
                           CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'-1','aint301','','','','','0')   
                                RETURNING l_success  
                                
                           IF NOT aint302_ins_inao_2() THEN
                              NEXT FIELD CURRENT
                           END IF
                           CALL aint302_inao_fill2()                      
                        #add by lixh 20151204                     
                        END IF                     
                     END IF 
                  END IF 
               END IF
               #add by lixh 20151111
               CALL aint302_set_entry_b(l_cmd)
               CALL aint302_set_no_required_b()
               CALL aint302_set_required_b()
               CALL aint302_set_no_entry_b(l_cmd)
            END IF
            LET g_inbb_d_o.inbb007 = g_inbb_d[l_ac].inbb007
            LET g_inbb_d_o.inbb008 = g_inbb_d[l_ac].inbb008
            LET g_inbb_d_o.inbb009 = g_inbb_d[l_ac].inbb009
            CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
            CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
]]>
  </point>
  <point name="input.a.page1.inbb008" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inbb_d[l_ac].inbb008_desc = ''
            DISPLAY BY NAME g_inbb_d[l_ac].inbb008_desc
            #add by lixh 20151204
            IF g_inbb_d[l_ac].inbb008 IS NULL THEN
               LET g_inbb_d[l_ac].inbb008 = ' '
            END IF
            #add by lixh 20151204
            IF (g_inbb_d[l_ac].inbb008 IS NOT NULL) AND (NOT cl_null(g_inbb_d[l_ac].inbb007)) THEN 
            #IF (NOT cl_null(g_inbb_d[l_ac].inbb008)) AND (NOT cl_null(g_inbb_d[l_ac].inbb007)) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb008 != g_inbb_d_o.inbb008 OR cl_null(g_inbb_d_o.inbb008))) THEN 
                  #雜收時若輸入的庫位+儲位不存在[T:儲位資料檔]時，則呼叫應用元件判斷是否需要新增儲位基本資料 
                  IF g_type = '2' THEN
                     #檢核傳入的庫位、儲位是否存在儲為基本資料檔中，若存在則不需要新增
                     LET l_n = 0
                     SELECT count(*) INTO l_n FROM inab_t WHERE inabent = g_enterprise AND inabsite = g_site
                         AND inab001 = g_inbb_d[l_ac].inbb007 AND inab002 = g_inbb_d[l_ac].inbb008
                     IF l_n = 0 OR cl_null(l_n) THEN
                        IF NOT s_aini002_ins_inab(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'ain-00282'
                           LET g_errparam.extend = "inab_t"
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           LET g_inbb_d[l_ac].inbb007 = g_inbb_d_o.inbb007
                           LET g_inbb_d[l_ac].inbb008 = g_inbb_d_o.inbb008
                           LET g_inbb_d[l_ac].inbb009 = g_inbb_d_o.inbb009
                           CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
                           CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF 
                  
                  IF NOT aint302_inbb008_chk(g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) THEN
                     LET g_inbb_d[l_ac].inbb007 = g_inbb_d_o.inbb007
                     LET g_inbb_d[l_ac].inbb008 = g_inbb_d_o.inbb008
                     LET g_inbb_d[l_ac].inbb009 = g_inbb_d_o.inbb009
                     CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
                     CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF cl_null(g_inbb_d[l_ac].inbb008) THEN
               LET g_inbb_d[l_ac].inbb008 = ' '
            END IF
            #add by lixh 20151111
            IF s_lot_batch_number(g_inbb_d[l_ac].inbb001,g_site) THEN
               IF g_inbb_d[l_ac].inbb007 != g_inbb_d_o.inbb007 OR g_inbb_d_o.inbb007 IS NULL OR
                  g_inbb_d[l_ac].inbb008 != g_inbb_d_o.inbb008 OR g_inbb_d_o.inbb008 IS NULL OR
                  g_inbb_d[l_ac].inbb009 != g_inbb_d_o.inbb009 OR g_inbb_d_o.inbb009 IS NULL  THEN  #變更倉庫   
                  
                  IF g_prog = 'aint302' THEN   #雜收
                     CALL s_lot_upd_inao(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',' ',g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,'')
                          RETURNING r_success   
                     IF NOT r_success THEN
                        NEXT FIELD CURRENT
                     END IF                             
                     CALL aint302_inao_fill2()                       
                  END IF
                  IF g_prog = 'aint301' THEN   #雜發                
                     CALL s_lot_inao_chk(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',' ',g_site) RETURNING l_success,l_count
                     IF l_count > 0 THEN
                        IF l_success THEN
                           CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'-1','aint301','','','','','0')   
                                RETURNING l_success  
                                
                           IF NOT aint302_ins_inao_2() THEN
                           END IF
                           CALL aint302_inao_fill2()  
                        ELSE
                           LET g_inbb_d[l_ac].inbb008 = g_inbb_d_o.inbb008                  
                        END IF 
                    #add by lixh 20151204    
                     ELSE
                        CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'-1','aint301','','','','','0')   
                             RETURNING l_success  
                             
                        IF NOT aint302_ins_inao_2() THEN
                        END IF
                        CALL aint302_inao_fill2()                    
                    #add by lixh 20151204                  
                     END IF                  
                  END IF 
               END IF 
            END IF
            #add by lixh 20151111            
            LET g_inbb_d_o.inbb007 = g_inbb_d[l_ac].inbb007
            LET g_inbb_d_o.inbb008 = g_inbb_d[l_ac].inbb008
            LET g_inbb_d_o.inbb009 = g_inbb_d[l_ac].inbb009
            CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
            CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
]]>
  </point>
  <point name="input.a.page1.inbb009" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #add by lixh 20151204
            IF g_inbb_d[l_ac].inbb009 IS NULL THEN
               LET g_inbb_d[l_ac].inbb009 = ' '
            END IF
            #add by lixh 20151204
            #IF NOT cl_null(g_inbb_d[l_ac].inbb009) THEN   #mark by lixh 20151204 
            IF g_inbb_d[l_ac].inbb009 IS NOT NULL THEN     #add by lixh 20151204            
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb009 != g_inbb_d_o.inbb009 OR cl_null(g_inbb_d_o.inbb009))) THEN 
                  IF NOT aint302_inbb009_chk() THEN
                     LET g_inbb_d[l_ac].inbb007 = g_inbb_d_o.inbb007
                     LET g_inbb_d[l_ac].inbb008 = g_inbb_d_o.inbb008
                     LET g_inbb_d[l_ac].inbb009 = g_inbb_d_o.inbb009
                     CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
                     CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF g_type = '2' AND cl_null(g_inbb_d[l_ac].inbb022) THEN
                     #雜收作業若料件要做批號管理且又有做有效期管理時，需要自動計算該批的有效日期
                     CALL s_aini010_calculate_effdt(g_site,g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb009,g_inba_m.inbadocdt) RETURNING g_inbb_d[l_ac].inbb022                  
                     DISPLAY BY NAME g_inbb_d[l_ac].inbb022
                  END IF
                 
               END IF
               #add by lixh 20151111
               IF cl_null(g_inbb_d[l_ac].inbb009) THEN
                  LET g_inbb_d[l_ac].inbb009 = ' '
               END IF        
               IF s_lot_batch_number(g_inbb_d[l_ac].inbb001,g_site) THEN                  
                  IF g_inbb_d[l_ac].inbb007 != g_inbb_d_o.inbb007 OR g_inbb_d_o.inbb007 IS NULL OR
                     g_inbb_d[l_ac].inbb008 != g_inbb_d_o.inbb008 OR g_inbb_d_o.inbb008 IS NULL OR
                     g_inbb_d[l_ac].inbb009 != g_inbb_d_o.inbb009 OR g_inbb_d_o.inbb009 IS NULL  THEN  #變更倉庫                      
                     IF g_prog = 'aint302' THEN   #雜收
                        CALL s_lot_upd_inao(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',' ',g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,'')
                             RETURNING r_success   
                        IF NOT r_success THEN
                           NEXT FIELD CURRENT
                        END IF                                
                        CALL aint302_inao_fill2()                             
                     END IF
                     IF g_prog = 'aint301' THEN   #雜發
                        CALL s_lot_inao_chk(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',' ',g_site) RETURNING l_success,l_count
                        IF l_count > 0 THEN
                           IF l_success THEN
                              CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'-1','aint301','','','','','0')   
                                   RETURNING l_success  
                                   
                              IF NOT aint302_ins_inao_2() THEN
                                 NEXT FIELD CURRENT
                              END IF
                              CALL aint302_inao_fill2() 
                           ELSE
                              LET g_inbb_d[l_ac].inbb009 = g_inbb_d_o.inbb009                    
                           END IF
                       #add by lixh 20151204    
                        ELSE
                           CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'-1','aint301','','','','','0')   
                                RETURNING l_success  
                                
                           IF NOT aint302_ins_inao_2() THEN
                              NEXT FIELD CURRENT
                           END IF
                           CALL aint302_inao_fill2()                           
                       #add by lixh 20151204  
                        END IF                        
                     END IF
#                     IF NOT r_success THEN
#                        NEXT FIELD CURRENT
#                     END IF 
                  END IF
               END IF                  
               #add by lixh 20151111                
            END IF
            IF cl_null(g_inbb_d[l_ac].inbb009) THEN
               LET g_inbb_d[l_ac].inbb009 = ' '
            END IF
            LET g_inbb_d_o.inbb007 = g_inbb_d[l_ac].inbb007
            LET g_inbb_d_o.inbb008 = g_inbb_d[l_ac].inbb008
            LET g_inbb_d_o.inbb009 = g_inbb_d[l_ac].inbb009
            CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
            CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
]]>
  </point>
  <point name="input.a.page1.inbb010" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                CALL aint302_inbb010_ref(g_inbb_d[l_ac].inbb010) RETURNING g_inbb_d[l_ac].inbb010_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb010_desc
            
            IF NOT cl_null(g_inbb_d[l_ac].inbb010) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb010 != g_inbb_d_t.inbb010)) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
        
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_inbb_d[l_ac].inbb001
                  LET g_chkparam.arg2 = g_inbb_d[l_ac].inbb010
        
                  #呼叫檢查存在並帶值的library
#                  IF NOT cl_chk_exist("v_ooca001") THEN
                  IF NOT cl_chk_exist("v_imao002") THEN
                     LET g_inbb_d[l_ac].inbb010 = g_inbb_d_t.inbb010
                     CALL aint302_inbb010_ref(g_inbb_d[l_ac].inbb010) RETURNING g_inbb_d[l_ac].inbb010_desc
                     DISPLAY BY NAME g_inbb_d[l_ac].inbb010_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT cl_null(g_inbb_d[l_ac].inbb011) THEN
                     CALL s_aooi250_take_decimals(g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011)
                        RETURNING l_success,g_inbb_d[l_ac].inbb011
                     DISPLAY BY NAME g_inbb_d[l_ac].inbb011
                  END IF
                  
                  IF (NOT cl_null(g_inbb_d[l_ac].inbb001)) AND (NOT cl_null(g_inbb_d[l_ac].inbb011)) AND (NOT cl_null(g_inbb_d[l_ac].inbb013)) THEN
#                     CALL s_aimi190_get_convert(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb013) RETURNING l_success,l_rate #xj mod
                     CALL s_aooi250_convert_qty(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb011)
                        RETURNING l_success,g_inbb_d[l_ac].inbb014
                     IF l_success THEN
#                        LET g_inbb_d[l_ac].inbb014 = g_inbb_d[l_ac].inbb011 * l_rate #xj mod
                        LET g_inbb_d[l_ac].inbb015 = g_inbb_d[l_ac].inbb014
                     END IF
                  END IF                  
               END IF
            END IF
            ]]>
  </point>
  <point name="input.a.page1.inbb011" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inbb_d[l_ac].inbb011) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb011 != g_inbb_d_o.inbb011)) THEN
                  #申請件數不可為0
                  IF g_inbb_d[l_ac].inbb011 = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ain-00019'
                     LET g_errparam.extend = g_inbb_d[l_ac].inbb011
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_inbb_d[l_ac].inbb011 = g_inbb_d_o.inbb011
                     NEXT FIELD CURRENT
                  END IF
                 
                  #依據單據別參數控管判斷是否允許輸入小於0
                  #CALL aint302_get_ooac004() RETURNING l_ooac004
                  CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_flag1,l_ooac002
                  CALL cl_get_doc_para(g_enterprise,g_site,l_ooac002,'D-BAS-0058') RETURNING l_ooac004
                  #CALL cl_get_doc_para(g_enterprise,g_site,g_inba_m.inbadocno,'D-BAS-0058') RETURNING l_ooac004
                  IF l_ooac004 = 'N' AND g_inbb_d[l_ac].inbb011 < 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ain-00020'
                     LET g_errparam.extend = g_inbb_d[l_ac].inbb011
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_inbb_d[l_ac].inbb011 = g_inbb_d_o.inbb011
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT cl_null(g_inbb_d[l_ac].inbb010) THEN
                     CALL s_aooi250_take_decimals(g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011)
                        RETURNING l_success,g_inbb_d[l_ac].inbb011
                     DISPLAY BY NAME g_inbb_d[l_ac].inbb011
                  END IF
                 
                  #檢核目前庫存量-已在揀量後是否還足夠進行發料，若不夠則show錯誤訊息告知
                  IF g_argv[1] = '1' THEN
                     #出庫單據考慮再揀量
                     CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_flag1,l_ooac002
                     CALL cl_get_doc_para(g_enterprise,g_site,l_ooac002,'D-BAS-0070') RETURNING l_ooac004
                     IF l_ooac004 = 'Y' THEN
                        CALL s_inventory_check_inan(g_site,g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,
                                                    g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,
                                                    g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,g_inba_m.inbadocno,
                                                    g_inbb_d[l_ac].inbbseq,'0')
                             RETURNING l_success,l_flag1
                        IF NOT l_success OR l_flag1 = 0 THEN
                           LET g_inbb_d[l_ac].inbb011 = g_inbb_d_o.inbb011
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
                  
                  #當申請數量是打負數時代表是出庫行為，檢核庫存量是否足夠
                  IF g_argv[1] = '2' AND g_inbb_d[l_ac].inbb011 < 0 THEN
                     #庫儲需存在與庫存明細檔中
                     IF NOT cl_null(g_inbb_d[l_ac].inbb007) THEN
                        IF NOT aint302_chk_inag004(g_inbb_d[l_ac].inbb007) THEN
                           LET g_inbb_d[l_ac].inbb011 = g_inbb_d_o.inbb011
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                     
                     IF (NOT cl_null(g_inbb_d[l_ac].inbb007)) AND g_inbb_d[l_ac].inbb008 IS NOT NULL THEN
                        IF NOT aint302_chk_inag005(g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) THEN
                           LET g_inbb_d[l_ac].inbb011 = g_inbb_d_o.inbb011
                           NEXT FIELD CURRENT
                        END IF
                     END IF 
                     
                     LET l_success = ''
                     LET l_flag1 = ''
                     CALL s_inventory_check_inag008('-1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb003,
                                                 g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,
                                                 g_inbb_d[l_ac].inbb011*(-1),g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,
                                                 '0',g_inbb_d[l_ac].inbb010,'')
                          RETURNING l_success,l_flag1
                     IF NOT l_success THEN      #處理狀況
                        LET g_inbb_d[l_ac].inbb011 = g_inbb_d_o.inbb011
                        NEXT FIELD CURRENT
                     ELSE
                        IF l_flag1 = 0 THEN      #庫存量足夠否
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = 'ain-00270'
                           LET g_errparam.extend = ''
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                           LET g_inbb_d[l_ac].inbb011 = g_inbb_d_o.inbb011
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
                  
               END IF      
            END IF
             
            #若料件設置要做製造批序號管理時，新增時維護完數量時自動開啟批序號維護作業維護相關資料
            
            #add by lixh 20150826
            LET l_imaf071 = NULL
            LET l_imaf081 = NULL
            SELECT imaf071,imaf081 INTO l_imaf071,l_imaf081 FROM imaf_t WHERE imafent = g_enterprise
              AND imafsite = g_site AND imaf001 = g_inbb_d[l_ac].inbb001            
            #add by lixh 20150826
            
            #IF l_cmd = 'a' AND (l_imaf071 = '1' OR l_imaf081 = '1') THEN #mark by lixh 20150826
            IF (l_cmd = 'a' AND (l_imaf071 = '1' OR l_imaf081 = '1')) OR (g_inbb_d[l_ac].inbb011 <> g_inbb_d_o.inbb011 AND (l_imaf071 = '1' OR l_imaf081 = '1'))  THEN  #add by lixh 20150826
               IF g_type = '2' AND g_inbb_d[l_ac].inbb011 > 0 THEN 
               #   CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'0',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'1',g_inba_m.inba003,'2','')
                  CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'1',g_inba_m.inba003,'1','',
                                 g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009)   #add by lixh 20150909     
                       RETURNING l_success,l_amount
                  IF g_inbb_d[l_ac].inbb011 <> l_amount THEN
                     IF cl_ask_confirm('ain-00249') THEN
                        CALL s_aooi250_convert_qty(g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,
                                                   g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb014)                                                   
                           RETURNING l_success,g_inbb_d[l_ac].inbb014 
                           
                        LET g_inbb_d[l_ac].inbb011 = l_amount
                        LET g_inbb_d[l_ac].inbb012 = l_amount   #add by lixh 20150820
                        #add by lixh 20150820
                        UPDATE inbb_t SET inbb011 = l_amount,
                                          inbb012 = l_amount, 
                                          inbb019 = l_amount,  #add by lixh 20151010                                          
                                          inbb014 = g_inbb_d[l_ac].inbb014
                         WHERE inbbent = g_enterprise AND inbbsite = g_site
                           AND inbbdocno = g_inba_m.inbadocno AND inbbseq = g_inbb_d[l_ac].inbbseq
                        IF SQLCA.sqlcode THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.extend = "inbb_t"
                           LET g_errparam.popup = FALSE
                           CALL cl_err()  
                        END IF 
                        #add by lixh 20150820   
                        #add by lixh 20151010   
                        UPDATE inbc_t SET inbc010 = l_amount
                         WHERE inbcent = g_enterprise AND inbcsite = g_site
                           AND inbcdocno = g_inba_m.inbadocno AND inbcseq = g_inbb_d[l_ac].inbbseq  
                        LET g_inbc_d[l_ac].inbc010 = l_amount                           
                        #add by lixh 20151010                          
                     END IF
                  END IF
               ELSE    
                  #add by lixh 20151210                  
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt FROM inao_t
                   WHERE inaoent = g_enterprise
                     AND inaodocno = g_inba_m.inbadocno
                     AND inaoseq = g_inbb_d[g_detail_idx].inbbseq
                     AND inaoseq1 = 1
                     AND inao000 = '2'
                     AND inao013 = '-1'   
                  IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
                  IF l_cnt <> g_inbb_d[l_ac].inbb011 THEN
                  #add by lixh 20151210 
                     CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'1',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb003,g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008,g_inbb_d[g_detail_idx].inbb009,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'-1','aint301','','','','','0')   #add by lixh 20150901                       
                          RETURNING l_success                     
                  END IF  #add by lixh 20151210                         
               END IF
               #add by lixh 20150909
               IF NOT aint302_ins_inao_2() THEN
               END IF
               #add by lixh 20150909 
               CALL aint302_inao_fill2()     #add by lixh 20151010               
            END IF
            
            LET g_inbb_d[l_ac].inbb012 = g_inbb_d[l_ac].inbb011
            
            IF (NOT cl_null(g_inbb_d[l_ac].inbb001)) AND (NOT cl_null(g_inbb_d[l_ac].inbb010)) AND (NOT cl_null(g_inbb_d[l_ac].inbb013)) THEN
#               CALL s_aimi190_get_convert(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb013) RETURNING l_success,l_rate  #xj mod
               CALL s_aooi250_convert_qty(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb011) RETURNING l_success,g_inbb_d[l_ac].inbb014
               IF l_success THEN
#                  LET g_inbb_d[l_ac].inbb014 = g_inbb_d[l_ac].inbb011 * l_rate #xj mod
                  LET g_inbb_d[l_ac].inbb015 = g_inbb_d[l_ac].inbb014
               END IF
            END IF
            
            #檢驗否為'N'
            IF g_inbb_d[l_ac].inbb018 = 'N' THEN
               LET g_inbb_d[l_ac].inbb019 = g_inbb_d[l_ac].inbb011
            ELSE
               LET g_inbb_d[l_ac].inbb019 = 0
            END IF
            
            LET g_inbb_d_o.inbb011 = g_inbb_d[l_ac].inbb011]]>
  </point>
  <point name="input.a.page1.inbb012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page1.inbb014" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                IF NOT cl_null(g_inbb_d[l_ac].inbb014) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb014 != g_inbb_d_o.inbb014)) THEN 
               
                  #依據單據別參數控管判斷是否允許輸入小於0
                  #CALL aint302_get_ooac004() RETURNING l_ooac004
                  CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_flag1,l_ooac002
                  CALL cl_get_doc_para(g_enterprise,g_site,l_ooac002,'D-BAS-0058') RETURNING l_ooac004
                  #CALL cl_get_doc_para(g_enterprise,g_site,g_inba_m.inbadocno,'D-BAS-0058') RETURNING l_ooac004
                  IF l_ooac004 = 'N' AND g_inbb_d[l_ac].inbb011 < 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ain-00020'
                     LET g_errparam.extend = g_inbb_d[l_ac].inbb014
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_inbb_d[l_ac].inbb014 = g_inbb_d_o.inbb014
                     NEXT FIELD CURRENT
                  END IF
                  #IF (NOT cl_null(g_inbb_d[l_ac].inbb001)) AND (NOT cl_null(g_inbb_d[l_ac].inbb010)) AND (NOT cl_null(g_inbb_d[l_ac].inbb013)) THEN
#                 #    CALL s_aimi190_get_convert(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb010) RETURNING l_success,l_rate #xj mod
                  #   CALL s_aooi250_convert_qty(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb014)
                  #      RETURNING l_success,g_inbb_d[l_ac].inbb011
                  #   IF l_success THEN
#                 #       LET g_inbb_d[l_ac].inbb011 = g_inbb_d[l_ac].inbb014 * l_rate  #xj mod
                  #      LET g_inbb_d[l_ac].inbb012 = g_inbb_d[l_ac].inbb011
                  #   END IF
                  #END IF 
                  LET g_inbb_d[l_ac].inbb015 = g_inbb_d[l_ac].inbb014
               END IF      
            END IF
            LET g_inbb_d_o.inbb014 = g_inbb_d[l_ac].inbb014]]>
  </point>
  <point name="input.a.page1.inbb015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page1.inbb016" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint302_inba007_ref(g_inbb_d[l_ac].inbb016) RETURNING g_inbb_d[l_ac].inbb016_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb016_desc
            IF NOT cl_null(g_inbb_d[l_ac].inbb016) THEN 
            #2015/09/09 by stellar mark ----- (S)
            #整批產生後，理由碼有可能沒值           
               #IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbb_d[l_ac].inbb016 != g_inbb_d_t.inbb016)) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND ((g_inbb_d_t.inbb016 IS NULL) OR (g_inbb_d[l_ac].inbb016 != g_inbb_d_t.inbb016))) THEN
            #2015/09/09 by stellar mark ----- (E)   
                  IF NOT aint302_inba007_chk(g_inbb_d[l_ac].inbb016) THEN
                     LET g_inbb_d[l_ac].inbb016 = g_inbb_d_t.inbb016
                     CALL aint302_inba007_ref(g_inbb_d[l_ac].inbb016) RETURNING g_inbb_d[l_ac].inbb016_desc
                     DISPLAY BY NAME g_inbb_d[l_ac].inbb016_desc
                     NEXT FIELD inbb016
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.inbb016_desc" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page1.inbb017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page1.inbb018" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_inbb_d[l_ac].inbb018 = 'N' THEN
               LET g_inbb_d[l_ac].inbb019 = g_inbb_d[l_ac].inbb011
            ELSE
               LET g_inbb_d[l_ac].inbb019 = 0
            END IF               ]]>
  </point>
  <point name="input.a.page1.inbb020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page1.inbb021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.a.page1.inbb023" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_project_desc(g_inbb_d[l_ac].inbb023) RETURNING g_inbb_d[l_ac].inbb023_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb023_desc
            
            IF NOT cl_null(g_inbb_d[l_ac].inbb023) THEN 
               IF g_inbb_d[l_ac].inbb023 != g_inbb_d_o.inbb023 OR cl_null(g_inbb_d_o.inbb023) THEN
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_inbb_d[l_ac].inbb023
                     
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_pjba001") THEN
                     #檢查成功時後續處理
                     LET g_inbb_d[l_ac].inbb023 = g_inbb_d_o.inbb023
                     CALL s_desc_get_project_desc(g_inbb_d[l_ac].inbb023) RETURNING g_inbb_d[l_ac].inbb023_desc
                     DISPLAY BY NAME g_inbb_d[l_ac].inbb023_desc
                     NEXT FIELD CURRENT
                  END IF
                  LET g_inbb_d[l_ac].inbb024 = ''
                  LET g_inbb_d[l_ac].inbb024_desc = ''
                  LET g_inbb_d[l_ac].inbb025 = ''
                  LET g_inbb_d[l_ac].inbb025_desc = ''
               END IF
            END IF 
            LET g_inbb_d_o.inbb023 = g_inbb_d[l_ac].inbb023
            CALL aint302_set_entry_b(l_cmd)            
            CALL aint302_set_no_entry_b(l_cmd)
]]>
  </point>
  <point name="input.a.page1.inbb024" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_wbs_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb024) RETURNING g_inbb_d[l_ac].inbb024_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb024_desc
            
            IF NOT cl_null(g_inbb_d[l_ac].inbb024) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_inbb_d[l_ac].inbb023
               LET g_chkparam.arg2 = g_inbb_d[l_ac].inbb024
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbb002") THEN
                  #檢查失敗時後續處理
                  LET g_inbb_d[l_ac].inbb024 = g_inbb_d_t.inbb024
                  CALL s_desc_get_wbs_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb024) RETURNING g_inbb_d[l_ac].inbb024_desc
                  DISPLAY BY NAME g_inbb_d[l_ac].inbb024_desc
                  NEXT FIELD CURRENT
               END IF

            END IF
]]>
  </point>
  <point name="input.a.page1.inbb025" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_activity_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb025) RETURNING g_inbb_d[l_ac].inbb025_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb025_desc
            
            IF NOT cl_null(g_inbb_d[l_ac].inbb025) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_inbb_d[l_ac].inbb023
               LET g_chkparam.arg2 = g_inbb_d[l_ac].inbb025
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbm002") THEN
                  #檢查失敗時後續處理
                  LET g_inbb_d[l_ac].inbb025 = g_inbb_d_t.inbb025
                  CALL s_desc_get_activity_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb025) RETURNING g_inbb_d[l_ac].inbb025_desc
                  DISPLAY BY NAME g_inbb_d[l_ac].inbb025_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            
]]>
  </point>
  <point name="input.a.page4.inbcseq1" order="" ver="1" cite_std="" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inba_m.inbadocno IS NOT NULL AND g_inbb_d[g_detail_idx].inbbseq IS NOT NULL AND g_inbb4_d[g_detail_idx2].inbcseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inba_m.inbadocno != g_inbadocno_t OR g_inbb_d[g_detail_idx].inbbseq != g_inbb_d[g_detail_idx].inbbseq OR g_inbb4_d[g_detail_idx2].inbcseq1 != g_inbb4_d_t.inbcseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inbc_t WHERE "||"inbcent = '" ||g_enterprise|| "' AND "||"inbcdocno = '"||g_inba_m.inbadocno ||"' AND "|| "inbcseq = '"||g_inbb_d[g_detail_idx].inbbseq ||"' AND "|| "inbcseq1 = '"||g_inbb4_d[g_detail_idx2].inbcseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.after_define_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_input" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_flag THEN
      CALL aint302_input('u')
   END IF      ]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.b.inba002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inba003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inba004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inba005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inba006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inba007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inba008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inbadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.inbadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.inbastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                     
            ##取得料件產品特徵
            #LET l_imaa005 = ''
            #CALL aint302_get_imaa005(g_enterprise,g_inbb_d[l_ac].inbb001) RETURNING l_imaa005
            #   
            #IF NOT cl_null(l_imaa005) THEN
            #   IF l_cmd = 'a' THEN            
            #      CALL l_inam.clear()            
            #      CALL s_feature(l_cmd,g_inbb_d[l_ac].inbb001,'','',g_site,g_inba_m.inbadocno) RETURNING l_success,l_inam
            #      LET g_inbb_d[l_ac].inbb002 = l_inam[1].inam002
            #      LET g_inbb_d[l_ac].inbb011 = l_inam[1].inam004
            #      DISPLAY BY NAME g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb011 
            #   END IF
            #   IF l_cmd = 'u' THEN
            #      CALL s_feature_single(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_site,g_inba_m.inbadocno)
            #         RETURNING l_success,g_inbb_d[l_ac].inbb002
            #      DISPLAY BY NAME g_inbb_d[l_ac].inbb002
            #   END IF
            #END IF 
          ]]>
  </point>
  <point name="input.b.page1.inbb003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.b.page1.inbb008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #若料件據點資料設置批號自動編碼，則進欄位之前自動編號
            #IF cl_null(g_inbb_d[l_ac].inbb009) THEN
            #   LET l_imaf062 = ''
            #   LET l_imaf063 = ''
            #   SELECT imaf062,imaf063 INTO l_imaf062,l_imaf063 FROM imaf_t 
            #      WHERE imafent = g_enterprise AND imaf001 = g_inbb_d[l_ac].inbb001 AND imafsite = g_site
            #   IF l_imaf062 = 'Y' AND (NOT cl_null(l_imaf063)) THEN  #自動編碼
            #       CALL s_aooi390_1('6',l_imaf063) RETURNING l_success,g_inbb_d[l_ac].inbb009
            #   END IF
            #END IF              ]]>
  </point>
  <point name="input.b.page1.inbb010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb014" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb016_desc" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbb021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.b.page1.inbbseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                #SELECT MAX(inbbseq)+1 INTO g_inbb_d[l_ac].inbbseq FROM inbb_t
            #   WHERE inbbent = g_enterprise AND inbbsite = g_site AND inbbdocno = g_inba_m.inbadocno
            #IF cl_null(g_inbb_d[l_ac].inbbseq) OR g_inbb_d[l_ac].inbbseq = 0 THEN
            #   LET g_inbb_d[l_ac].inbbseq = 1
            #END IF]]>
  </point>
  <point name="input.before_dialog" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF g_flag THEN
            LET g_flag = FALSE
            NEXT FIELD inbb001
         END IF            ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_errshow = 1]]>
  </point>
  <point name="input.body.a_delete" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                                        #同步刪除對應的[T:雜項庫存異動庫儲批明細檔]與[T:製造批序號庫存異動明細檔]
                  IF NOT aint302_del_inbc() THEN
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF
                  IF NOT aint302_del_inao() THEN
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF]]>
  </point>
  <point name="input.body.a_insert" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #151202 By TSD.robert ---start---
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM inbc_t
                WHERE inbcent = g_enterprise
                  AND inbcdocno = g_inba_m.inbadocno
                  AND inbcseq = g_inbb_d[l_ac].inbbseq
               IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
               IF g_prog = 'aint301' AND l_cnt <= 1 THEN
                  WHILE TRUE
                     #料號是否產生條碼
                     LET l_imaf177 = NULL
                     SELECT imaf177 INTO l_imaf177
                       FROM imaf_t
                      WHERE imafent = g_enterprise 
                        AND imafsite = g_site
                        AND imaf001 = g_inbb_d[l_ac].inbb001
                     IF cl_null(l_imaf177) THEN LET l_imaf177 = 'N' END IF
                     IF l_imaf177 = 'N' THEN 
                        EXIT WHILE 
                     ELSE
#                        CALL s_barcode_01(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,1,0,g_prog)
#                                          RETURNING l_success
                     END IF
                     EXIT WHILE      
                  END WHILE
               END IF
               #151202 By TSD.robert ----end----                                             ]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #新增一筆資料後需同步新增一筆[T:雜項庫存異動庫儲批明細檔]
               IF NOT aint302_ins_inbc() THEN
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
               END IF
               
               #將其他產品特徵資料寫入DB,並新增[T:雜項庫存異動庫儲批明細檔]
               LET l_inbbseq = NULL
               
               INITIALIZE l_inbb.* TO NULL               
               SELECT inbbent, inbbsite, inbbdocno,
                      inbb001,inbb002,inbb003,inbb004,inbb007,
                      inbb008,inbb009,inbb010,inbb011,inbb012,
                      inbb013,inbb014,inbb015,inbb016,inbb017,
                      inbb018,inbb019,inbb020,inbb021,
                      inbb023,inbb024,inbb025
                 INTO l_inbb.inbbent,l_inbb.inbbsite,l_inbb.inbbdocno,
                      l_inbb.inbb001,l_inbb.inbb002,l_inbb.inbb003,l_inbb.inbb004,l_inbb.inbb007,
                      l_inbb.inbb008,l_inbb.inbb009,l_inbb.inbb010,l_inbb.inbb011,l_inbb.inbb012,
                      l_inbb.inbb013,l_inbb.inbb014,l_inbb.inbb015,l_inbb.inbb016,l_inbb.inbb017,
                      l_inbb.inbb018,l_inbb.inbb019,l_inbb.inbb020,l_inbb.inbb021,
                      l_inbb.inbb023,l_inbb.inbb024,l_inbb.inbb025
                      
                 FROM inbb_t 
                WHERE inbbent = g_enterprise
                  AND inbbsite = g_site
                  AND inbbdocno = g_inba_m.inbadocno
                  AND inbbseq = g_inbb_d[l_ac].inbbseq
               
               IF l_inam.getLength() > 1 THEN  #因為第一筆資料已呈現在畫面並寫入DB, 從第二筆開始處理           
                  IF cl_null(l_inbbseq) THEN   
                     SELECT MAX(inbbseq) INTO l_inbbseq
                       FROM inbb_t
                      WHERE inbbent   = g_enterprise
                        AND inbbsite  = g_site
                        AND inbbdocno = g_inba_m.inbadocno                     
                  END IF 
                  
                  FOR l_i = 2 TO l_inam.getLength() 
                     IF cl_null(l_inbbseq) THEN
                        LET l_inbbseq = 1
                     ELSE
                        LET l_inbbseq = l_inbbseq + 1             
                     END IF  
                     
                     #根據數量計算參數數量
                     IF (NOT cl_null(l_inbb.inbb001)) AND (NOT cl_null(l_inbb.inbb010)) AND (NOT cl_null(l_inbb.inbb013)) THEN
#                        CALL s_aimi190_get_convert(l_inbb.inbb001,l_inbb.inbb010,l_inbb.inbb013) RETURNING l_success,l_rate #xj mod
                        CALL s_aooi250_convert_qty(l_inbb.inbb001,l_inbb.inbb010,l_inbb.inbb013,l_inam[l_i].inam004)
                           RETURNING l_success,l_inbb.inbb014
                        IF l_success THEN
#                           LET l_inbb.inbb014 = l_inam[l_i].inam004 * l_rate #xj mod
                           LET l_inbb.inbb015 = l_inbb.inbb014
                        END IF
                     END IF
                     
                     LET l_inbb.inbb012 = l_inam[l_i].inam004
                     #檢驗否為'N'
                     IF l_inbb.inbb018 = 'N' THEN
                        LET l_inbb.inbb019 = l_inam[l_i].inam004
                     ELSE
                        LET l_inbb.inbb019 = 0
                     END IF
            
                     
                     INSERT INTO inbb_t
                                 (inbbent, inbbsite, inbbdocno, inbbseq,
                                  inbb001,inbb002,inbb003,inbb004,inbb007,
                                  inbb008,inbb009,inbb010,inbb011,inbb012,
                                  inbb013,inbb014,inbb015,inbb016,inbb017,
                                  inbb018,inbb019,inbb020,inbb021,inbb023,inbb024,inbb025) 
                           VALUES(l_inbb.inbbent,l_inbb.inbbsite,l_inbb.inbbdocno,l_inbbseq,
                                  l_inbb.inbb001,l_inam[l_i].inam002,l_inbb.inbb003,l_inbb.inbb004,     l_inbb.inbb007,
                                  l_inbb.inbb008,l_inbb.inbb009,     l_inbb.inbb010,l_inam[l_i].inam004,l_inbb.inbb012, 
                                  l_inbb.inbb013,l_inbb.inbb014,     l_inbb.inbb015,l_inbb.inbb016,     l_inbb.inbb017, 
                                  l_inbb.inbb018,l_inbb.inbb019,     l_inbb.inbb020,l_inbb.inbb021,
                                  l_inbb.inbb023,l_inbb.inbb024,     l_inbb.inbb025) 
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "inbb_t"
                        LET g_errparam.popup = FALSE
                        CALL cl_err()

                     ELSE
                        #同步新增[T:雜項庫存異動庫儲批明細檔]
                        LET l_inbc016 = g_today
                        LET l_imaf032 = NULL                        
                        LET l_inbcseq1 = 0
                        #如果料件有做批號控管時，則[C:有效日期]=g_today+[T:料件集團檔].[C:有效天數]                       
                        SELECT imaf032 INTO l_imaf032 
                          FROM imaf_t 
                         WHERE imafent = g_enterprise 
                           AND imafsite = 'ALL' 
                           AND imaf001 = l_inbb.inbb001
                        IF NOT cl_null(l_imaf032) THEN
                           LET l_inbc016 = l_inbc016 + l_imaf032
                        END IF
                        
                        IF cl_null(l_inbcseq1) THEN   
                           SELECT MAX(inbcseq1) INTO l_inbcseq1
                             FROM inbc_t
                            WHERE inbcent   = g_enterprise
                              AND inbcsite  = g_site
                              AND inbcdocno = g_inba_m.inbadocno 
                              AND inbcseq   = l_inbbseq                              
                        END IF 
                        IF cl_null(l_inbcseq1) THEN
                           LET l_inbcseq1 = 1
                        ELSE
                           LET l_inbcseq1 = l_inbcseq1 + 1             
                        END IF
                  
                        INSERT INTO inbc_t
                                   (inbcent,inbcsite,inbcdocno,inbcseq,inbcseq1,                                   
                                    inbc001,inbc002,inbc003,inbc004,inbc005,
                                    inbc006,inbc007,inbc009,inbc010,inbc011,
                                    inbc015,inbc016,inbc017,inbc021,inbc022,inbc023) 
                             VALUES(l_inbb.inbbent,l_inbb.inbbsite,l_inbb.inbbdocno,l_inbbseq,l_inbcseq1,
                                    l_inbb.inbb001,l_inam[l_i].inam002,l_inbb.inbb003,l_inbb.inbb004,l_inbb.inbb007,
                                    l_inbb.inbb008,l_inbb.inbb009,l_inbb.inbb010,l_inam[l_i].inam004,l_inbb.inbb013,
                                    l_inbb.inbb015,l_inbb.inbb022,l_inbb.inbb021,l_inbb.inbb023,l_inbb.inbb024,l_inbb.inbb025)
                        IF SQLCA.sqlcode THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.extend = "inbc_t"
                           LET g_errparam.popup = FALSE
                           CALL cl_err()

                        END IF
                     END IF
                  END FOR
                  
                  LET g_rec_b = l_inam.getLength() - 1
               END IF
               CALL aint302_b_fill()
               CALL aint302_inbc_fill('')
               CALL aint302_inao_fill2()   #add by lixh 20150909]]>
  </point>
  <point name="input.body.a_update" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT aint302_upd_inbc() THEN
                  LET g_inbb_d[l_ac].* = g_inbb_d_t.*
                  CALL s_transaction_end('N','0')
               END IF
               CALL aint302_b_fill()
               CALL aint302_inbc_fill('')
               CALL aint302_inao_fill2()   #add by lixh 20150909
               
               #151202 By TSD.robert ---start---
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM inbc_t
                WHERE inbcent = g_enterprise
                  AND inbcdocno = g_inba_m.inbadocno
                  AND inbcseq = g_inbb_d[l_ac].inbbseq
               IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
               IF g_prog = 'aint301' AND l_cnt <= 1 THEN
                  WHILE TRUE
                     #料號是否產生條碼
                     LET l_imaf177 = NULL
                     SELECT imaf177 INTO l_imaf177
                       FROM imaf_t
                      WHERE imafent = g_enterprise 
                        AND imafsite = g_site
                        AND imaf001 = g_inbb_d[l_ac].inbb001
                     IF cl_null(l_imaf177) THEN LET l_imaf177 = 'N' END IF
                     IF l_imaf177 = 'N' THEN 
                        EXIT WHILE 
                     ELSE
#                        CALL s_barcode_01(g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,1,0,g_prog)
#                                          RETURNING l_success
                     END IF
                     EXIT WHILE      
                  END WHILE
               END IF
               #151202 By TSD.robert ----end----  ]]>
  </point>
  <point name="input.body.after_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.after_delete_d" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_transaction_end('N','0')   #add by lixh 20151010]]>
  </point>
  <point name="input.body.after_input" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.after_row2" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.b_delete" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #151202 By TSD.robert ---start---
               IF g_prog = 'aint301' THEN
                  DELETE FROM bcaf_t
                   WHERE bcafent = g_enterprise 
                     AND bcafsite = g_site
                     AND bcaf002 = g_inba_m.inbadocno 
                     AND bcaf020 = g_inba_m.inbadocno 
                     AND bcaf021 = g_inbb_d_t.inbbseq
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bcaf_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
                  
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF 
               END IF
               #151202 By TSD.robert ----end----             ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="12" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_transaction_begin()
            
            IF NOT cl_null(g_inba_m.inba006) THEN
               LET g_inbb_d[l_ac].inbb017 = g_inba_m.inba006
            END IF
            IF l_ac > 1 THEN
               LET g_inbb_d[l_ac].inbb016 = g_inbb_d[l_ac-1].inbb016
            END IF              
            IF NOT cl_null(g_inba_m.inba007) AND cl_null(g_inbb_d[l_ac].inbb016) THEN
               LET g_inbb_d[l_ac].inbb016 = g_inba_m.inba007
               CALL aint302_inba007_ref(g_inbb_d[l_ac].inbb016) RETURNING g_inbb_d[l_ac].inbb016_desc
               DISPLAY BY NAME g_inbb_d[l_ac].inbb016_desc
            END IF
            CALL aint302_inba007_ref(g_inbb_d[l_ac].inbb016) RETURNING g_inbb_d[l_ac].inbb016_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb016_desc            
            
            SELECT MAX(inbbseq)+1 INTO g_inbb_d[l_ac].inbbseq FROM inbb_t
               WHERE inbbent = g_enterprise AND inbbsite = g_site AND inbbdocno = g_inba_m.inbadocno
            IF cl_null(g_inbb_d[l_ac].inbbseq) OR g_inbb_d[l_ac].inbbseq = 0 THEN
               LET g_inbb_d[l_ac].inbbseq = 1
            END IF
            
            LET g_inbb_d[l_ac].inbb002 = ''
            LET g_inbb_d[l_ac].inbb003 = ''
            LET g_inbb_d[l_ac].inbbsite = g_site
            
            LET g_inbb_d_o.* = g_inbb_d[l_ac].*]]>
  </point>
  <point name="input.body.before_row" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.before_row2" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inbb_d[l_ac].inbb019 = 0]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.c.inba002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.inba005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.inba006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.inba008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.inbadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.inbadocno" order="" ver="18" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inba_m.inbadocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #參照表編號
            LET g_qryparam.arg2 = g_prog #單據性質
            
            #20151029 by stellar add ----- (S)
            CALL s_control_get_docno_sql(g_user,g_dept)
                 RETURNING l_success,l_sql1
            IF NOT cl_null(l_sql1) THEN
               LET g_qryparam.where = l_sql1
            END IF
            #20151029 by stellar add ----- (E)

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_inba_m.inbadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_inba_m.inbadocno TO inbadocno              #顯示到畫面上
            CALL s_aooi200_get_slip_desc(g_inba_m.inbadocno) RETURNING g_inba_m.inbadocno_desc
            DISPLAY BY NAME g_inba_m.inbadocno_desc

            NEXT FIELD inbadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.inbastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb002" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #取得料件產品特徵
            LET l_imaa005 = ''
            CALL aint302_get_imaa005(g_enterprise,g_inbb_d[l_ac].inbb001) RETURNING l_imaa005
               
            IF NOT cl_null(l_imaa005) THEN
               IF l_cmd = 'a' THEN            
                  CALL l_inam.clear()            
                  CALL s_feature(l_cmd,g_inbb_d[l_ac].inbb001,'','',g_site,g_inba_m.inbadocno) RETURNING l_success,l_inam
                  LET g_inbb_d[l_ac].inbb002 = l_inam[1].inam002
                  LET g_inbb_d[l_ac].inbb011 = l_inam[1].inam004
                  DISPLAY BY NAME g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb011 
                  
                  LET g_inbb_d[l_ac].inbb012 = g_inbb_d[l_ac].inbb011
                  #檢驗否為'N'
                  IF g_inbb_d[l_ac].inbb018 = 'N' THEN
                     LET g_inbb_d[l_ac].inbb019 = g_inbb_d[l_ac].inbb011
                  ELSE
                     LET g_inbb_d[l_ac].inbb019 = 0
                  END IF
                  
               END IF
               IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_site,g_inba_m.inbadocno)
                     RETURNING l_success,g_inbb_d[l_ac].inbb002
                  DISPLAY BY NAME g_inbb_d[l_ac].inbb002
               END IF
            END IF                                     ]]>
  </point>
  <point name="input.c.page1.inbb003" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb003             #給予default值

            #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
            IF g_type = '1' THEN
               LET g_qryparam.where = " inag001 = '",g_inbb_d[l_ac].inbb001,"' AND inag002 = '",g_inbb_d[l_ac].inbb002,"' "
               CALL q_inag004_13()
               LET g_inbb_d[l_ac].inbb007 = g_qryparam.return1
               LET g_inbb_d[l_ac].inbb008 = g_qryparam.return2              #將開窗取得的值回傳到變數
               LET g_inbb_d[l_ac].inbb009 = g_qryparam.return3
               LET g_inbb_d[l_ac].inbb003 = g_qryparam.return4
               DISPLAY g_inbb_d[l_ac].inbb007 TO inbb007
               DISPLAY g_inbb_d[l_ac].inbb008 TO inbb008
               DISPLAY g_inbb_d[l_ac].inbb009 TO inbb009
               DISPLAY g_inbb_d[l_ac].inbb003 TO inbb003
            END IF
            
            NEXT FIELD inbb003                     ]]>
  </point>
  <point name="input.c.page1.inbb007" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
			   
			   LET g_qryparam.where = "1=1 "
            LET l_sql1 = ''
            CALL s_control_get_doc_sql("inaa001",g_inba_m.inbadocno,'6') RETURNING l_success,l_sql1
            IF l_success THEN
               LET g_qryparam.where = g_qryparam.where ," AND ",l_sql1
            END IF
            #LET l_sql2 = ''
            #CALL s_control_get_sql("inaa001",'9','5',g_user,g_dept) RETURNING l_success,l_sql2
            #IF l_success THEN
            #   LET g_qryparam.where = g_qryparam.where ," AND ",l_sql2
            #END IF
            
            #雜收時，庫位開窗與檢核需排除待報廢庫位
            IF g_type = '2' THEN
               LET g_qryparam.where = g_qryparam.where ," AND inaa016 = 'N' "
            END IF
            
            #給予default值
            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb007

            #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
            IF g_type = '1' THEN
               #給予arg
               LET g_qryparam.arg1 = g_inbb_d[l_ac].inbb001
               LET g_qryparam.arg2 = g_inbb_d[l_ac].inbb002
               #呼叫開窗
               CALL q_inag004_13()
               #將開窗取得的值回傳到變數
               LET g_inbb_d[l_ac].inbb007 = g_qryparam.return1
               LET g_inbb_d[l_ac].inbb008 = g_qryparam.return2
               LET g_inbb_d[l_ac].inbb009 = g_qryparam.return3
               LET g_inbb_d[l_ac].inbb003 = g_qryparam.return4
            #若是雜項庫存收料作業時
            ELSE
               CALL q_inaa001_2()
               #CALL q_inaa001_21()
               LET g_inbb_d[l_ac].inbb007 = g_qryparam.return1
               #LET g_inbb_d[l_ac].inbb008 = g_qryparam.return2
            END IF
            
            #顯示到畫面上
            DISPLAY g_inbb_d[l_ac].inbb007 TO inbb007
            DISPLAY g_inbb_d[l_ac].inbb008 TO inbb008
            DISPLAY g_inbb_d[l_ac].inbb009 TO inbb009
            DISPLAY g_inbb_d[l_ac].inbb003 TO inbb003
            
            CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
            CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb007_desc,g_inbb_d[l_ac].inbb008_desc

            #返回原欄位
            NEXT FIELD inbb007

]]>
  </point>
  <point name="input.c.page1.inbb008" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            #給予default值
            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb008

            #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
            IF g_type = '1' THEN
               LET g_qryparam.arg1 = g_inbb_d[l_ac].inbb001
               LET g_qryparam.arg2 = g_inbb_d[l_ac].inbb002
               CALL q_inag004_13()
               #將開窗取得的值回傳到變數
               LET g_inbb_d[l_ac].inbb007 = g_qryparam.return1
               LET g_inbb_d[l_ac].inbb008 = g_qryparam.return2
               LET g_inbb_d[l_ac].inbb009 = g_qryparam.return3
               LET g_inbb_d[l_ac].inbb003 = g_qryparam.return4
            #若是雜項庫存收料作業時
            ELSE
               LET g_qryparam.where = " inab001 = '",g_inbb_d[l_ac].inbb007,"' "
               CALL q_inab002()
               LET g_inbb_d[l_ac].inbb008 = g_qryparam.return1
            END IF       

            DISPLAY g_inbb_d[l_ac].inbb007 TO inbb007
            DISPLAY g_inbb_d[l_ac].inbb008 TO inbb008
            DISPLAY g_inbb_d[l_ac].inbb009 TO inbb009
            DISPLAY g_inbb_d[l_ac].inbb003 TO inbb003
            CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
            CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb007_desc,g_inbb_d[l_ac].inbb008_desc
            NEXT FIELD inbb008
]]>
  </point>
  <point name="input.c.page1.inbb009" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            #給予default值
            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb009

            #若是雜項庫存發料作業時，輸入的料件+產品特徵+庫存管理特徵+庫位必須存在[T:庫存明細檔]中
            IF g_type = '1' THEN
               LET g_qryparam.arg1 = g_inbb_d[l_ac].inbb001
               LET g_qryparam.arg2 = g_inbb_d[l_ac].inbb002
               CALL q_inag004_13()
               #將開窗取得的值回傳到變數
               LET g_inbb_d[l_ac].inbb007 = g_qryparam.return1
               LET g_inbb_d[l_ac].inbb008 = g_qryparam.return2
               LET g_inbb_d[l_ac].inbb009 = g_qryparam.return3
               LET g_inbb_d[l_ac].inbb003 = g_qryparam.return4
            END IF
            
            DISPLAY g_inbb_d[l_ac].inbb007 TO inbb007
            DISPLAY g_inbb_d[l_ac].inbb008 TO inbb008
            DISPLAY g_inbb_d[l_ac].inbb009 TO inbb009
            DISPLAY g_inbb_d[l_ac].inbb003 TO inbb003
            CALL s_desc_get_stock_desc(g_site,g_inbb_d[l_ac].inbb007) RETURNING g_inbb_d[l_ac].inbb007_desc
            CALL s_desc_get_locator_desc(g_site,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008) RETURNING g_inbb_d[l_ac].inbb008_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb007_desc,g_inbb_d[l_ac].inbb008_desc
            
            NEXT FIELD inbb009]]>
  </point>
  <point name="input.c.page1.inbb010" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    #此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb010             #給予default值

            #給予arg

            #CALL q_ooca001_1()                                #呼叫開窗
            
            LET g_qryparam.arg1 = g_inbb_d[l_ac].inbb001
            
            CALL q_imao002()

            LET g_inbb_d[l_ac].inbb010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_inbb_d[l_ac].inbb010 TO inbb010              #顯示到畫面上
            
            CALL aint302_inbb010_ref(g_inbb_d[l_ac].inbb010) RETURNING g_inbb_d[l_ac].inbb010_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb010_desc

            NEXT FIELD inbb010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inbb011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb014" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb016_desc" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.c.page1.inbb023" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb023             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_pjba001()                                #呼叫開窗

            LET g_inbb_d[l_ac].inbb023 = g_qryparam.return1              

            DISPLAY g_inbb_d[l_ac].inbb023 TO inbb023              #
            CALL s_desc_get_project_desc(g_inbb_d[l_ac].inbb023) RETURNING g_inbb_d[l_ac].inbb023_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb023_desc

            NEXT FIELD inbb023                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inbb024" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb024             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_inbb_d[l_ac].inbb023  #s


            CALL q_pjbb002_1()                                #呼叫開窗

            LET g_inbb_d[l_ac].inbb024 = g_qryparam.return1              

            DISPLAY g_inbb_d[l_ac].inbb024 TO inbb024              #
            CALL s_desc_get_wbs_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb024) RETURNING g_inbb_d[l_ac].inbb024_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb024_desc

            NEXT FIELD inbb024                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inbb025" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbb_d[l_ac].inbb025             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_inbb_d[l_ac].inbb023   #s


            CALL q_pjbm002()                                #呼叫開窗

            LET g_inbb_d[l_ac].inbb025 = g_qryparam.return1              

            DISPLAY g_inbb_d[l_ac].inbb025 TO inbb025              #
            CALL s_desc_get_activity_desc(g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb025) RETURNING g_inbb_d[l_ac].inbb025_desc
            DISPLAY BY NAME g_inbb_d[l_ac].inbb025_desc

            NEXT FIELD inbb025                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inbbseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.d.before_input" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.define" order="" ver="20" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_ooef004       LIKE ooef_t.ooef004
   DEFINE  l_ooac004       LIKE ooac_t.ooac004
   DEFINE  l_inaa007       LIKE inaa_t.inaa007
   DEFINE  l_rate          LIKE inaj_t.inaj014
   DEFINE  l_ooba002       LIKE ooba_t.ooba002
   DEFINE  l_ooba015       LIKE ooba_t.ooba015
   DEFINE  l_site          LIKE ooef_t.ooef001
   DEFINE  l_ooba014       LIKE ooba_t.ooba014
   DEFINE  l_flag1         LIKE type_t.num5
   DEFINE  l_ooac002       LIKE ooac_t.ooac002
   DEFINE  l_imaa005       LIKE imaa_t.imaa005       #特徵類別
   DEFINE  l_inam          DYNAMIC ARRAY OF RECORD   #記錄產品特徵
              inam001      LIKE inam_t.inam001,
              inam002      LIKE inam_t.inam002,
              inam004      LIKE inam_t.inam004
                        END RECORD
   DEFINE l_inbb           RECORD LIKE inbb_t.*
   DEFINE l_inbbseq        LIKE inbb_t.inbbseq   
   DEFINE l_inbc016        LIKE inbc_t.inbc016   #有效日期
   DEFINE l_imaf032        LIKE imaf_t.imaf032   #有效期加天數
   DEFINE l_inbcseq1       LIKE inbc_t.inbcseq1
   DEFINE l_amount         LIKE inbb_t.inbb011
   DEFINE l_sql1           STRING
   DEFINE l_sql2           STRING
   DEFINE l_imaf062        LIKE imaf_t.imaf062
   DEFINE l_imaf063        LIKE imaf_t.imaf063
   DEFINE l_imaf061        LIKE imaf_t.imaf061
   DEFINE l_imaf031        LIKE imaf_t.imaf031  
   DEFINE l_inad011        LIKE inad_t.inad011    
   DEFINE l_imaf071        LIKE imaf_t.imaf071
   DEFINE l_imaf081        LIKE imaf_t.imaf081
   DEFINE r_success        LIKE type_t.num5
   #151202 By TSD.robert ---start---
   DEFINE l_imaf177        LIKE imaf_t.imaf177
   #151202 By TSD.robert ----end----]]>
  </point>
  <point name="input.define_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.detail_input.page1.gen_detail" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inba_m.inbadocno) THEN
                  IF NOT aint302_gen_detail() THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                     CALL aint302_b_fill()
                     CALL aint302_inbc_fill('')
                     IF g_rec_b > 0 THEN
                        LET g_flag = TRUE
                        EXIT DIALOG
                     END IF
                  END IF
               END IF]]>
  </point>
  <point name="input.detail_input.page1.open_detail_memo" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                 IF NOT cl_null(g_inba_m.inbadocno) AND NOT cl_null(g_inbb_d[l_ac].inbbseq)  THEN
                    CALL aooi360_02('7',g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'','','','','','','','',4)
                 END IF]]>
  </point>
  <point name="input.detail_input.page1.s_lot_ins" order="" ver="19" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inba_m.inbadocno) AND g_prog = 'aint302' AND
                  NOT cl_null(g_inbb_d[l_ac].inbbseq) AND
                  NOT cl_null(g_inbb_d[l_ac].inbb001) AND
                  NOT cl_null(g_inbb_d[l_ac].inbb010) AND
                  NOT cl_null(g_inbb_d[l_ac].inbb011) AND
                  NOT cl_null(g_inba_m.inba003) THEN
                  LET l_success = ''
                  LET l_amount = ''
                  #CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'0',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'1',g_inba_m.inba003,'2','')
                  CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'1',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'1',g_inba_m.inba003,'1','',
                                 g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009)  #add by lixh 20150909
                       RETURNING l_success,l_amount
                  IF l_success THEN
                     IF g_inbb_d[l_ac].inbb011 <> l_amount THEN
                        IF cl_ask_confirm('ain-00249') THEN
                           CALL s_aooi250_convert_qty(g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,
                                                      g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb014)
                                                      
                            RETURNING l_success,g_inbb_d[l_ac].inbb014                          
                           LET g_inbb_d[l_ac].inbb011 = l_amount
                           LET g_inbb_d[l_ac].inbb012 = l_amount   #add by lixh 20150820 
                           
                           UPDATE inbb_t SET inbb011 = l_amount,
                                             inbb012 = l_amount,
                                             inbb019 = l_amount,    #add by lixh 20151010
                                             inbb014 = g_inbb_d[l_ac].inbb014
                            WHERE inbbent = g_enterprise AND inbbsite = g_site
                              AND inbbdocno = g_inba_m.inbadocno AND inbbseq = g_inbb_d[l_ac].inbbseq
                           IF SQLCA.sqlcode THEN
                              INITIALIZE g_errparam TO NULL
                              LET g_errparam.code = SQLCA.sqlcode
                              LET g_errparam.extend = "inbb_t"
                              LET g_errparam.popup = FALSE
                              CALL cl_err()  
                           END IF   
                           #add by lixh 20101010
                           UPDATE inbc_t SET inbc010 = l_amount    
                            WHERE inbcent = g_enterprise AND inbcsite = g_site
                              AND inbcdocno = g_inba_m.inbadocno AND inbcseq = g_inbb_d[l_ac].inbbseq 
                           LET g_inbc_d[l_ac].inbc010 = l_amount 
                           #add by lixh 20101010                           
                        END IF
                     END IF
                     #add by lixh 20150909
                     IF NOT aint302_ins_inao_2() THEN
                        
                     END IF
                     #add by lixh 20150909
                     CALL aint302_inao_fill2()     #add by lixh 20151010 
                  ELSE
                     #CALL s_transaction_end('N','0')   #add by lixh 20150819 事務暫時不提交OR回滾
                  END IF
               END IF]]>
  </point>
  <point name="input.detail_input.page1.s_lot_ins1" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inbb_d[l_ac].inbbseq) AND 
                  NOT cl_null(g_inbb_d[l_ac].inbb001) AND
                  NOT cl_null(g_inbb_d[l_ac].inbb002) AND
                  NOT cl_null(g_inbb_d[l_ac].inbb010) AND
                  NOT cl_null(g_inbb_d[l_ac].inbb011) THEN
                  LET l_success = ''
                  CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[l_ac].inbbseq,'0',g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb011,'1',g_inba_m.inba003)
                       RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     RETURN
                  END IF
               END IF]]>
  </point>
  <point name="input.detail_input.page1.s_lot_sel1" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inba_m.inbadocno) AND g_prog = 'aint301' AND 
                  NOT cl_null(g_inbb_d[g_detail_idx].inbbseq) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb001) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb010) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb011) AND
                  NOT cl_null(g_inba_m.inba003) THEN
                  LET l_success = ''
                  #CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'0',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb003,g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008,g_inbb_d[g_detail_idx].inbb009,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'-1','aint301','')
                  CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'1',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb003,g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008,g_inbb_d[g_detail_idx].inbb009,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'-1','aint301','','','','','0')   #add by lixh 20150901
                       RETURNING l_success  
                  #add by lixh 20150909
                  IF NOT aint302_ins_inao_2() THEN
                  END IF
                  #add by lixh 20150909 
                  CALL aint302_inao_fill2()     #add by lixh 20151010                  
                  IF NOT l_success THEN
                     #CALL s_transaction_end('N','0')   #add by lixh 20150909
                  END IF                                                                                     
               END IF
               ]]>
  </point>
  <point name="input.g.inba002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inba003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inba004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inba005" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inba006" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inba007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inba008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inbadocdt" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inbadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.inbastus" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb001" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb002" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb004" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb007" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb008" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb009" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb010" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb011" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb012" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb013" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb014" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb015" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb016" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb016_desc" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb017" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb018" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb020" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbb021" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.g.page1.inbbseq" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                                               UPDATE inba_t SET inba001 = g_type WHERE inbaent = g_enterprise AND inbasite = g_site AND inbadocno = g_inba_m.inbadocno]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_site,g_inba_m.inbadocno,g_inba_m.inbadocdt,g_prog) RETURNING l_success,g_inba_m.inbadocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_inba_m.inbadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD inbadocno 
               END IF]]>
  </point>
  <point name="input.head.b_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                   ]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd_t = 'r' THEN
               CALL aint302_reproduce_init()
            END IF
            CALL cl_showmsg_init()            
            CALL aint302_set_entry(p_cmd)
            CALL aint302_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.master_input.open_detail_memo" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #modify by lixiang 2015/08/4--start----
               #單身備註需傳入項次
               #IF NOT cl_null(g_inba_m.inbadocno) THEN
               #   CALL aooi360_01('7',g_inba_m.inbadocno,'','','','','','','','','')
               #END IF
               
               IF NOT cl_null(g_inba_m.inbadocno) AND g_detail_idx > 0 THEN
                  CALL aooi360_01('7',g_inba_m.inbadocno,g_inbc_d[g_detail_idx2].inbcseq,'','','','','','','','')
               END IF
               #modify by lixiang 2015/08/4--end----]]>
  </point>
  <point name="input.master_input.open_memo" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  IF NOT cl_null(g_inba_m.inbadocno) THEN
                    CALL aooi360_02('6',g_inba_m.inbadocno,'','','','','','','','','','4')
                 END IF]]>
  </point>
  <point name="input.more_input" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      DISPLAY ARRAY g_inbc_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b2) #page2  

            BEFORE ROW
               CALL aint302_idx_chk()
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac2

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               CALL aint302_idx_chk()
               LET g_current_page = 2
 
         END DISPLAY
         
         DISPLAY ARRAY g_inao_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b3) #page3 
    
            BEFORE ROW
               CALL aint302_idx_chk()
            #   LET l_ac = DIALOG.getCurrentRow("s_detail3")
            #   LET g_detail_idx = l_ac

            BEFORE DISPLAY
            #   CALL FGL_SET_ARR_CURR(g_detail_idx)
            #   LET l_ac = DIALOG.getCurrentRow("s_detail3")
               CALL aint302_idx_chk()
               LET g_current_page = 3
 
         END DISPLAY
         
         DISPLAY ARRAY g_inao_d2 TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b4) #page4 
    
            BEFORE ROW
               CALL aint302_idx_chk()
            #   LET l_ac4 = DIALOG.getCurrentRow("s_detail4")
            #   LET g_detail_idx = l_ac4
            #   

            BEFORE DISPLAY
            #   CALL FGL_SET_ARR_CURR(g_detail_idx)
            #   LET l_ac4 = DIALOG.getCurrentRow("s_detail4")
               CALL aint302_idx_chk()
               LET g_current_page = 4
 
         END DISPLAY
         ]]>
  </point>
  <point name="input.other_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="insert.after_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert.default" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL g_inbc_d.clear()
      CALL g_inao_d.clear()
      CALL g_inao_d2.clear()
      
      LET g_inba_m.inbasite = g_site
      LET g_inba_m.inbastus = "N"

      LET g_inba_m.inbadocdt = g_today
      LET g_inba_m.inba002 = g_today
      LET g_inba_m.inba003 = g_user
      CALL aint302_inba003_ref(g_inba_m.inba003) RETURNING g_inba_m.inba003_desc
      DISPLAY BY NAME g_inba_m.inba003_desc
      
      LET g_inba_m.inba004 = g_dept
      CALL aint302_inba004_ref(g_inba_m.inba004) RETURNING g_inba_m.inba004_desc
      DISPLAY BY NAME g_inba_m.inba004_desc
      
      INITIALIZE g_inba_m_t.* TO NULL
      LET g_inba_m_t.* = g_inba_m.*
      
      CALL s_lot_clear_detail()]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #新增前,若當下有資料先備份單別/單號,作為後續欄位控制條件
   IF NOT cl_null(g_inba_m.inbadocno) THEN
      LET g_inbadocno_t = g_inba_m.inbadocno
   END IF]]>
  </point>
  <point name="insert_b.after_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.before_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="insert_b.m_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="insert_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="lock_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="lock_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.before_close" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_lot_ins_drop_tmp() 
      CALL s_lot_sel_drop_tmp() 
                  ]]>
  </point>
  <point name="main.define" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success    LIKE type_t.num5   #add--2015/03/19 By shiun]]>
  </point>
  <point name="main.define_sql" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="main.exit" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi390_drop_tmp_table()   #add--2015/03/19 By shiun]]>
  </point>
  <point name="main.init" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_argv[1]) THEN
      LET g_type = g_argv[1]
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET g_inba_m.inbadocno = g_argv[02]
   END IF
   LET g_acc = ''
   #抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位二]的欄位值
   SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = g_prog
   
   LET g_ooef025 = ''
   SELECT ooef025 INTO g_ooef025 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   IF cl_null(g_ooef025) THEN
      LET g_ooef025 = ' '
   END IF     
   CALL s_aooi390_cre_tmp_table() RETURNING l_success   #add--2015/03/19 By shiun]]>
  </point>
  <point name="main.servicecall" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="menu.aint302_01" order="" ver="9" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inba_m.inbadocno) THEN
                  CALL aint302_01(g_type,g_inba_m.inbadocno)
                  CALL aint302_inbc_fill('')
               END IF]]>
  </point>
  <point name="menu.default.insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="menu.delete" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.detail_show.page1.open_detail_memo" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                 IF NOT cl_null(g_inba_m.inbadocno)  THEN
                    CALL aooi360_01('7',g_inba_m.inbadocno,'','','','','','','','','')
                 END IF]]>
  </point>
  <point name="menu.detail_show.page1.s_lot_ins" order="" ver="19" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF cl_null(g_detail_idx) OR g_detail_idx = 0 OR g_prog = 'aint301' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  #add by lixh 20151010
                  #組合新增資料的條件
                  LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
                   
                  LET g_current_row = g_current_idx #目前指標  
                   #add by lixh 20151010  
                  EXIT DIALOG
               END IF
               
               IF g_inba_m.inbastus <> 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00035'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  #add by lixh 20151010
                  #組合新增資料的條件
                  LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
                   
                  LET g_current_row = g_current_idx #目前指標  
                   #add by lixh 20151010  
                  EXIT DIALOG
               END IF
               
               IF NOT cl_null(g_inba_m.inbadocno) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbbseq) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb001) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb010) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb011) AND
                  NOT cl_null(g_inba_m.inba003) THEN
                  LET l_success = ''
                  LET l_amount = ''
                  CALL s_transaction_begin()
                  #CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'0',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'1',g_inba_m.inba003,'2','') #mark by lixh 20150909 
                  CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'1',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'1',g_inba_m.inba003,'1','',
                                 g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008,g_inbb_d[g_detail_idx].inbb009)  #add by lixh 20150909  
                                 #add by lixh 201511106 add inbb007,inbb008,inbb009
                       RETURNING l_success,l_amount
                  IF l_success THEN
                  #add by lixh 20150909
                     IF NOT aint302_ins_inao_2() THEN
                        CALL s_transaction_end('N','0')   
                        EXIT DIALOG
                     END IF
                  #add by lixh 20150909
                     #CALL s_transaction_end('Y','0')
                     IF g_inbb_d[g_detail_idx].inbb011 <> l_amount THEN
                        IF cl_ask_confirm('ain-00249') THEN
                           CALL s_aooi250_convert_qty(g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,
                                                      g_inbb_d[g_detail_idx].inbb013,g_inbb_d[g_detail_idx].inbb014)
                                                      
                            RETURNING l_success,g_inbb_d[g_detail_idx].inbb014   
                            
                           UPDATE inbb_t SET inbb011 = l_amount,
                                             inbb012 = l_amount,     #add by lixh 20150820
                                             inbb019 = l_amount,     #add by lixh 20151010
                                             inbb014 = g_inbb_d[g_detail_idx].inbb014  #add by lixh 20150820
                            WHERE inbbent = g_enterprise AND inbbsite = g_site
                              AND inbbdocno = g_inba_m.inbadocno AND inbbseq = g_inbb_d[g_detail_idx].inbbseq
                           IF SQLCA.sqlcode THEN
                              INITIALIZE g_errparam TO NULL
                              LET g_errparam.code = SQLCA.sqlcode
                              LET g_errparam.extend = "inbb_t"
                              LET g_errparam.popup = FALSE
                              CALL cl_err()
                           #add by lixh 20150820
                           ELSE
                              LET g_inbb_d[g_detail_idx].inbb011 = l_amount
                              LET g_inbb_d[g_detail_idx].inbb012 = l_amount
                              #add by lixh 20101010
                              UPDATE inbc_t SET inbc010 = l_amount
                               WHERE inbcent = g_enterprise AND inbcsite = g_site
                                 AND inbcdocno = g_inba_m.inbadocno AND inbcseq = g_inbb_d[g_detail_idx].inbbseq  
                              LET g_inbc_d[g_detail_idx].inbc010 = l_amount 
                              #add by lixh 20101010                              
                           #add by lixh 20150820
                           END IF
                        END IF
                     END IF
                     CALL aint302_inao_fill2()        #add by lixh 20151010
                     CALL s_transaction_end('Y','0')  #add by lixh 20150909
                  ELSE
                     CALL s_transaction_end('N','0')   
                  END IF
                  #add by lixh 20151010
                  #組合新增資料的條件
                  LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
                   
                  LET g_current_row = g_current_idx #目前指標  
                   #add by lixh 20151010                   
               END IF]]>
  </point>
  <point name="menu.detail_show.page1.s_lot_ins1" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="menu.detail_show.page1.s_lot_sel1" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF cl_null(g_detail_idx) OR g_detail_idx = 0 OR g_prog = 'aint302' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  EXIT DIALOG
               END IF
               
               IF g_inba_m.inbastus <> 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00035'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  EXIT DIALOG
               END IF
               
               IF NOT cl_null(g_inba_m.inbadocno) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbbseq) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb001) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb010) AND
                  NOT cl_null(g_inbb_d[g_detail_idx].inbb011) AND
                  NOT cl_null(g_inba_m.inba003) THEN
                  LET l_success = ''
                  CALL s_transaction_begin()
                  #CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'0',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb003,g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008,g_inbb_d[g_detail_idx].inbb009,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'-1','aint301','')
                  CALL s_lot_sel('1','1',g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'1',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb003,g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008,g_inbb_d[g_detail_idx].inbb009,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'-1','aint301','','','','','0')   #add by lixh 20150901
                       RETURNING l_success  
                       
                  #add by lixh 20150909
                  IF NOT aint302_ins_inao_2() THEN
                  END IF
                  #add by lixh 20150909
                  CALL aint302_inao_fill2()   #add by lixh 20151010
                  IF l_success THEN
                     CALL s_transaction_end('Y','0')
                  ELSE
                     CALL s_transaction_end('N','0')
                  END IF
                  #add by lixh 20151010
                  #組合新增資料的條件
                  LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
                   
                  LET g_current_row = g_current_idx #目前指標  
                   #add by lixh 20151010                   
               END IF
               ]]>
  </point>
  <point name="menu.exporttoexcel" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  #add by lixh 20150109
                  LET g_export_node[2] = base.typeInfo.create(g_inbc_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_inao_d)
                  LET g_export_id[3]   = "s_detail1_s_lot_s01"    
                  LET g_export_node[4] = base.typeInfo.create(g_inao_d2)
                  LET g_export_id[4]   = "s_detail4"               ]]>
  </point>
  <point name="menu.gen_detail" order="" ver="13" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inba_m.inbadocno) THEN
                  CALL s_transaction_begin()
                  IF NOT aint302_gen_detail() THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')       
                     CALL aint302_b_fill()
                     CALL aint302_inbc_fill('')                   
                  END IF
               END IF]]>
  </point>
  <point name="menu.gen_qc" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inba_m.inbadocno) THEN
                  CALL s_transaction_begin()
                  CALL aint302_02(g_inba_m.inbadocno)
                  LET g_action_choice=''
                  CALL aint302_b_fill()
               END IF]]>
  </point>
  <point name="menu.insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.modify" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.modify_detail" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.open_detail_memo" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #modify by lixiang 2015/08/4--start----
               #單身備註需傳入項次
               #IF NOT cl_null(g_inba_m.inbadocno) THEN
               #   CALL aooi360_01('7',g_inba_m.inbadocno,'','','','','','','','','')
               #END IF
               
               IF NOT cl_null(g_inba_m.inbadocno) AND g_detail_idx > 0 THEN
                  CALL aooi360_01('7',g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'','','','','','','','')
               END IF
               #modify by lixiang 2015/08/4--end----  ]]>
  </point>
  <point name="menu.open_memo" order="" ver="10" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                 IF NOT cl_null(g_inba_m.inbadocno) THEN
                    CALL aooi360_02('6',g_inba_m.inbadocno,'','','','','','','','','','4')
                 END IF]]>
  </point>
  <point name="menu.output" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_rep_wc = " inbaent = ",g_enterprise," AND inbadocno ='",g_inba_m.inbadocno,"'"]]>
  </point>
  <point name="menu.prog_inba003" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #+ 此段落由子樣板a45產生
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_inba_m.inba003)

]]>
  </point>
  <point name="menu.qc_query" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_detail_idx2 <> 0 THEN
                  SELECT inbc018 INTO l_inbc018 FROM inbc_t 
                   WHERE inbcent = g_enterprise
                     AND inbcsite = g_site
                     AND inbcdocno = g_inba_m.inbadocno
                     AND inbcseq = g_inbc_d[g_detail_idx2].inbcseq
                     AND inbcseq1 = g_inbc_d[g_detail_idx2].inbcseq1
                  LET la_param.prog = 'aqct300'
                  LET la_param.param[1] = l_inbc018
                  LET ls_js = util.JSON.stringify( la_param )
                  CALL cl_cmdrun(ls_js) 
               END IF]]>
  </point>
  <point name="menu.query" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.reproduce" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="menu.storage_by_qc" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_inba_m.inbadocno) THEN
                  CALL s_transaction_begin()
                  CALL s_aint302_gen_storage_by_qc(g_inba_m.inbadocno)
                       RETURNING l_success
                  IF l_success THEN
                     CALL s_transaction_end('Y',1)
                  ELSE
                     CALL s_transaction_end('N',1)
                  END IF
                  LET g_action_choice=''
                  CALL aint302_b_fill()
               END IF]]>
  </point>
  <point name="menu.unposted" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                             ]]>
  </point>
  <point name="modify.after_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="modify.before_input" order="" ver="6" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_inba_m.inbastus MATCHES "[DR]" THEN 
         LET g_inba_m.inbastus = "N"
      END IF
            ]]>
  </point>
  <point name="modify.body.a_fk_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.b_fk_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.body.m_fk_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                           ]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="reproduce.a.inbadocno" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF NOT cl_null(l_newno) THEN 
            IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inba_t WHERE "||"inbaent = '" ||g_enterprise|| "' AND inbasite = '" ||g_site|| "' AND "||"inbadocno = '"||l_newno ||"'",'std-00004',0) THEN 
               LET l_newno =  ''
               NEXT FIELD CURRENT
            END IF
            IF NOT aint302_inbadocno_chk(l_newno) THEN
               LET l_newno =  ''
               NEXT FIELD CURRENT
            END IF
         END IF
         CALL aint302_get_oobal004(l_newno) RETURNING g_inba_m.inbadocno_desc
         DISPLAY BY NAME g_inba_m.inbadocno_desc
         
         CALL s_aooi200_gen_docno(g_site,l_newno,g_today,g_prog) RETURNING l_success,l_newno
         IF NOT l_success THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'apm-00003'
            LET g_errparam.extend = l_newno
            LET g_errparam.popup = TRUE
            CALL cl_err()

            NEXT FIELD inbadocno
         END IF
         
         
         ON ACTION controlp INFIELD inbadocno           
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inba_m.inbadocno             #給予default值

            #給予arg
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #參照表編號
            LET g_qryparam.arg2 = g_code #單據性質

            CALL q_ooba002_1()                                #呼叫開窗

            LET l_newno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY l_newno TO inbadocno              #顯示到畫面上
            CALL aint302_get_oobal004(l_newno) RETURNING g_inba_m.inbadocno_desc
            DISPLAY BY NAME g_inba_m.inbadocno_desc

            NEXT FIELD inbadocno                          #返回原欄位]]>
  </point>
  <point name="reproduce.after_reproduce" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="reproduce.before_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_transaction_begin()
         DISPLAY g_today TO inbadocdt
         DISPLAY 'N' TO inbastus
         ]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            DEFINE l_ooef004   LIKE ooef_t.ooef004
   DEFINE l_detai2    RECORD LIKE inbc_t.*
   DEFINE l_success   LIKE type_t.num5]]>
  </point>
  <point name="reproduce.head.a_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = "SELECT * FROM inbc_t WHERE inbcent = '" ||g_enterprise|| "' AND inbcsite = '" ||g_site|| "' AND ",
               " inbcdocno = '",g_inba_m.inbadocno,"'"

   DECLARE aint302_reproduce2 CURSOR FROM g_sql
 
   FOREACH aint302_reproduce2 INTO l_detai2.*
      LET l_detai2.inbcdocno = l_newno
      
      INSERT INTO inbc_t VALUES (l_detai2.*) #複製單身
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'Insert error!'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

   END FOREACH]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="reproduce.head.b_insert" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_master.inbastus = "N"
   LET l_master.inbadocdt = g_today]]>
  </point>
  <point name="send.before_send" order="" ver="6" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #確認前檢核段
   IF NOT s_aint302_conf_chk(g_inba_m.inbadocno) THEN
      CLOSE aint302_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_inba_m.inbastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改      
      CALL cl_set_act_visible("modify,delete,modify_detail,s_lot_ins,s_lot_sel1", FALSE)   #add by lixh 20151010  #add s_lot_ins,s_lot_sel1
   END IF
   #add by lixh 20151010
   IF g_argv[1] = '1' THEN
      CALL cl_set_act_visible("s_lot_ins",FALSE)
   ELSE
      CALL cl_set_act_visible("s_lot_sel1",FALSE)
   END IF 
   #add by lixh 20151010    ]]>
  </point>
  <point name="set_act_no_visible_b.define" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE   l_imaf071     LIKE imaf_t.imaf071
   DEFINE   l_imaf081     LIKE imaf_t.imaf081]]>
  </point>
  <point name="set_act_no_visible_b.set_act_no_visible_b" order="" ver="17" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #add by lixh 20151010
   IF l_ac = 0 OR cl_null(l_ac) THEN
      RETURN
   END IF
   SELECT DISTINCT imaf071,imaf081 INTO l_imaf071,l_imaf081 FROM imaf_t
    WHERE imafent = g_enterprise
      AND imafsite = g_site
      AND imaf001 = g_inbb_d[l_ac].inbb001
      
   IF l_imaf071 <> '1' AND l_imaf081 <> '1' THEN
      CALL cl_set_act_visible("s_lot_ins,s_lot_sel,s_lot_sel1",FALSE)
   END IF
   IF g_inba_m.inbastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改      
      CALL cl_set_act_visible("modify,delete,modify_detail,s_lot_ins,s_lot_sel1", FALSE)   #add by lixh 20151010  #add s_lot_ins,s_lot_sel1
   END IF   
   IF g_argv[1] = '1' THEN
      CALL cl_set_act_visible("s_lot_ins",FALSE)
   ELSE
      CALL cl_set_act_visible("s_lot_sel1",FALSE)
   END IF   
   #add by lixh 20151010]]>
  </point>
  <point name="set_act_visible.define" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete,modify_detail,s_lot_ins,s_lot_sel1", TRUE)  #add by lixh 20151010 ]]>
  </point>
  <point name="set_act_visible_b.define" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("s_lot_ins,s_lot_sel,s_lot_sel1",TRUE)  #add by lixh 20151010]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("inba002,inba003,inba004,inba005,inba006,inba007,inba008",TRUE)]]>
  </point>
  <point name="set_entry.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            DEFINE l_fields   STRING]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("inbadocdt",TRUE)
      ]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("inbb003,inbb009,inbb008,inbbseq,inbb002",TRUE)
   CALL cl_set_comp_entry("inbb014",TRUE)         ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #依目前的單別控制欄位是否可輸入
   IF NOT cl_null(g_inba_m.inbadocno) THEN
      LET l_fields = s_aooi200_get_doc_fields(g_site,'1',g_inba_m.inbadocno)
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            DEFINE l_fields   STRING]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("inbadocdt",FALSE)                   ]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            DEFINE l_imaf055  LIKE imaf_t.imaf055
   DEFINE l_inaa007  LIKE inaa_t.inaa007
   DEFINE l_imaf061  LIKE imaf_t.imaf061 
   DEFINE l_imaa005  LIKE imaa_t.imaa005  
   DEFINE l_imea002  LIKE imea_t.imea002
   DEFINE l_imaf015  LIKE imaf_t.imaf015  
   DEFINE l_pjaa013  LIKE pjaa_t.pjaa013   ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[    
   LET l_imaf015 = ''
   
   #若設定imaf055(庫存管理特徵)等於'2.不可有庫存管理特徵'時，則[C:庫存管理特徵]欄位不可輸入
   SELECT imaf015,imaf055,imaf061 INTO l_imaf015,l_imaf055,l_imaf061 FROM imaf_t WHERE imafent = g_enterprise AND imaf001 = g_inbb_d[l_ac].inbb001 AND imafsite = g_site
   IF l_imaf055 = '2' THEN
      CALL cl_set_comp_entry("inbb003",FALSE)
      LET g_inbb_d[l_ac].inbb003 = ' '
   END IF
   #[T:料件據點進銷存檔].[C:庫存批號控管]=2時,[C:不可有批號]欄位不可輸入
   IF l_imaf061 = '2' THEN
      CALL cl_set_comp_entry("inbb009",FALSE)
      LET g_inbb_d[l_ac].inbb009 = ''      
   END IF
   
   #當料件不使用參考單位管理時，則參考數量不允許輸入
   IF cl_null(l_imaf015) THEN
      CALL cl_set_comp_entry("inbb014",FALSE)
      LET g_inbb_d[l_ac].inbb013 = ''
      LET g_inbb_d[l_ac].inbb013_desc = ''
      LET g_inbb_d[l_ac].inbb014 = ''
      LET g_inbb_d[l_ac].inbb015 = ''
   END IF
   
   #若[T:庫位資料檔].[C:儲位管理]='5'(不使用儲位管理)時，則[C:限定儲位]不可以維護
   SELECT inaa007 INTO l_inaa007 FROM inaa_t WHERE inaaent = g_enterprise AND inaasite = g_site AND inaa001 = g_inbb_d[l_ac].inbb007
   IF l_inaa007 = '5' THEN
      CALL cl_set_comp_entry("inbb008",FALSE)
      LET g_inbb_d[l_ac].inbb008 = ' '
      LET g_inbb_d[l_ac].inbb008_desc = ''
   END IF
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("inbbseq",FALSE)
   END IF
   
   #判斷料件是否存在產品特徵功能
   LET l_imaa005 = ''
   CALL aint302_get_imaa005(g_enterprise,g_inbb_d[l_ac].inbb001) RETURNING l_imaa005
   IF cl_null(l_imaa005) THEN
      CALL cl_set_comp_entry("inbb002",FALSE)
      LET g_inbb_d[l_ac].inbb002 = ' '
   ELSE
      IF cl_null(g_inbb_d[l_ac].inbb002) THEN
         LET g_inbb_d[l_ac].inbb002 = ''
      END IF
   END IF
   
   #有專案代號且"專案庫存控管"="Y"時，自動將專案代號帶入庫存管理特徵欄位中，不可修改
   IF NOT cl_null(g_inbb_d[l_ac].inbb023) THEN
      SELECT pjaa013 INTO l_pjaa013 FROM pjaa_t,pjba_t
         WHERE pjaaent = pjbaent AND pjaa001 = pjba000 AND pjaaent = g_enterprise AND pjba001 = g_inbb_d[l_ac].inbb023
      IF l_pjaa013 = 'Y' THEN
         LET g_inbb_d[l_ac].inbb003 = g_inbb_d[l_ac].inbb023
         CALL cl_set_comp_entry("inbb003",FALSE)
      END IF
   END IF
   ]]>
  </point>
  <point name="show.after" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL aint302_inbc_fill('')
   #CALL aint302_inao_fill1()
   CALL aint302_inao_fill2()]]>
  </point>
  <point name="show.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="show.body.reference" order="" ver="19" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5
   DEFINE l_ooba002   LIKE ooba_t.ooba002       ]]>
  </point>
  <point name="show.head.reference" order="" ver="19" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_inba_m.inbadocno) THEN
      CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_success,l_ooba002
      CALL s_aooi200_get_slip_desc(l_ooba002) RETURNING g_inba_m.inbadocno_desc
   END IF
   DISPLAY BY NAME g_inba_m.inbadocno_desc
   
   CALL aint302_inba003_ref(g_inba_m.inba003) RETURNING g_inba_m.inba003_desc
   DISPLAY BY NAME g_inba_m.inba003_desc
    
   CALL aint302_inba004_ref(g_inba_m.inba004) RETURNING g_inba_m.inba004_desc
   DISPLAY BY NAME g_inba_m.inba004_desc
   
   CALL aint302_inba007_ref(g_inba_m.inba007) RETURNING g_inba_m.inba007_desc
   DISPLAY BY NAME g_inba_m.inba007_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inba_m.inbamodid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_inba_m.inbamodid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_inba_m.inbamodid_desc
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inba_m.inbaownid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_inba_m.inbaownid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_inba_m.inbaownid_desc
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inba_m.inbaowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inba_m.inbaowndp_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_inba_m.inbaowndp_desc
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inba_m.inbacrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_inba_m.inbacrtid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_inba_m.inbacrtid_desc
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inba_m.inbacrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inba_m.inbacrtdp_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_inba_m.inbacrtdp_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inba_m.inbacnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_inba_m.inbacnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_inba_m.inbacnfid_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inba_m.inbapstid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_inba_m.inbapstid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_inba_m.inbapstid_desc
    ]]>
  </point>
  <point name="show.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.a_update" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL aint302_show()    #add by lixh 20150901 ]]>
  </point>
  <point name="statechange.after" order="" ver="16" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL aint302_set_act_visible()       #add by lixh 20151010
   CALL aint302_set_act_no_visible()    #add by lixh 20151010         ]]>
  </point>
  <point name="statechange.b_update" order="" ver="6" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ##單別若設置確認時自動過帳，則在確認後需自動過帳(單據別參數:D-BAS-0083)
   #CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_flag1,l_ooac002
   #CALL cl_get_doc_para(g_enterprise,g_site,l_ooac002,'D-BAS-0083') RETURNING l_ooac004
   #IF l_ooac004 = 'Y' THEN
   #   LET lc_state = "S"
   #END IF  
   SELECT inbastus INTO lc_state FROM inba_t WHERE inbaent = g_enterprise AND inbadocno = g_inba_m.inbadocno]]>
  </point>
  <point name="statechange.before" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_inba_m.inbastus = 'X' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,posted,unposted,invalid,confirmed",TRUE)
         CASE g_inba_m.inbastus
            WHEN "N"
               #HIDE OPTION "open"
               CALL cl_set_act_visible("unconfirmed,posted,unposted",FALSE)
               #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                   CALL cl_set_act_visible("signing",TRUE)
                   CALL cl_set_act_visible("confirmed",FALSE)
               END IF
    
            WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)
          
            WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted",FALSE)

               
            WHEN "S"
               #HIDE OPTION "posted"
               CALL cl_set_act_visible("unconfirmed,posted,invalid,confirmed",FALSE)

            WHEN "X"
               #HIDE OPTION "invalid"
               CALL cl_set_act_visible("unconfirmed,posted,invalid,confirmed,unposted",FALSE)

            WHEN "Y"
               #HIDE OPTION "confirmed"
               CALL cl_set_act_visible("invalid,confirmed,unposted",FALSE)
               
            WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
                CALL cl_set_act_visible("withdraw",TRUE)  
                CALL cl_set_act_visible("unconfirmed,invalid,confirmed,posted,unposted",FALSE)
            
            WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
                CALL cl_set_act_visible("confirmed ",TRUE)  
                CALL cl_set_act_visible("unconfirmed,invalid,posted,unposted",FALSE)


         END CASE
         #add by lixh 20150525
         IF g_type = '1' AND g_inba_m.inba005 = '10' AND NOT cl_null(g_inba_m.inba006) THEN
            CALL cl_set_act_visible("unconfirmed,posted,unposted,invalid,confirmed,approved,rejection,withdraw,signing",TRUE)
         END IF
         #add by lixh 20150525]]>
  </point>
  <point name="statechange.confirmed" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_transaction_begin()
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL cl_err_collect_init() 
            #add by lixh 20150820
            IF NOT s_aint302_conf_chk(g_inba_m.inbadocno) THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            END IF
            #add by lixh 20150820
            IF NOT s_aint302_conf(g_inba_m.inbadocno) THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               #單別若設置確認時自動過帳，則在確認後需自動過帳(單據別參數:D-BAS-0083)
               CALL s_aooi200_get_slip(g_inba_m.inbadocno) RETURNING l_flag1,l_ooac002
               CALL cl_get_doc_para(g_enterprise,g_site,l_ooac002,'D-BAS-0083') RETURNING l_ooac004
               IF l_ooac004 = 'Y' THEN
                  LET lc_state = "S"
                  IF aint302_inba002_upd() THEN
                     IF NOT s_aint302_posted(g_inba_m.inbadocno) THEN
                        CALL s_transaction_end('N','0')
                        CALL cl_err_collect_show()
                        RETURN
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
                     CALL cl_err_collect_show()
                  ELSE
                     CALL s_transaction_end('N','0')
                     RETURN
                  END IF
               END IF   
               CALL s_transaction_end('Y','0')
            END IF
            CALL cl_err_collect_show()
         END IF]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_ooac004         LIKE ooac_t.ooac004
   DEFINE l_ooac002         LIKE ooac_t.ooac002
   DEFINE l_flag1           LIKE type_t.num5       ]]>
  </point>
  <point name="statechange.invalid" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_transaction_begin()
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL cl_err_collect_init() 
            IF NOT s_aint302_invalid(g_inba_m.inbadocno) THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            CALL cl_err_collect_show()
         END IF]]>
  </point>
  <point name="statechange.more_control" order="" ver="12" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #ON ACTION unposted
      #   #add by lixh 20150525
      #   IF g_type = '1' AND g_inba_m.inba005 = '10' THEN         
      #      RETURN
      #   END IF
      #   #add by lixh 20150525         
      #   LET lc_state = "Y"
      #
      #   CALL s_transaction_begin()
      #   IF NOT cl_ask_confirm('sub-00233') THEN
      #      CALL s_transaction_end('N','0')
      #      RETURN
      #   ELSE
      #      CALL cl_err_collect_init() 
      #      IF NOT s_aint302_unposted(g_inba_m.inbadocno) THEN
      #         CALL s_transaction_end('N','0')
      #         CALL cl_err_collect_show()
      #         RETURN
      #      ELSE
      #         CALL s_transaction_end('Y','0')
      #      END IF
      #      CALL cl_err_collect_show()
      #   END IF
      #
      #   EXIT MENU]]>
  </point>
  <point name="statechange.open" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    CALL s_transaction_begin()
         IF NOT cl_ask_confirm('aim-00110') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            IF NOT s_aint302_unconf(g_inba_m.inbadocno) THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         END IF]]>
  </point>
  <point name="statechange.posted" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #add by lixh 20150525
         IF g_type = '1' AND g_inba_m.inba005 = '10' THEN         
            RETURN
         END IF
         #add by lixh 20150525         
         CALL s_transaction_begin()

         IF NOT cl_ask_confirm('sub-00232') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            IF aint302_inba002_upd() THEN
               CALL cl_err_collect_init() 
               IF NOT s_aint302_posted(g_inba_m.inbadocno) THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               CALL cl_err_collect_show()
            ELSE
               RETURN
            END IF
         END IF]]>
  </point>
  <point name="statechange.unconfirmed" order="" ver="11" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_transaction_begin()
         IF NOT cl_ask_confirm('aim-00110') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL cl_err_collect_init() 
            IF NOT s_aint302_unconf(g_inba_m.inbadocno) THEN
               CALL s_transaction_end('N','0')
                CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            CALL cl_err_collect_show()
         END IF]]>
  </point>
  <point name="statechange.unposted" order="" ver="12" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #add by lixh 20150525
            IF g_type = '1' AND g_inba_m.inba005 = '10' THEN         
               RETURN
            END IF
            #add by lixh 20150525         
            LET lc_state = "Y"
           
            CALL s_transaction_begin()
            IF NOT cl_ask_confirm('sub-00233') THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL cl_err_collect_init() 
               IF NOT s_aint302_unposted(g_inba_m.inbadocno) THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               CALL cl_err_collect_show()
            END IF
           
            EXIT MENU]]>
  </point>
  <point name="ui_browser_refresh.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx2)      
   END IF]]>
  </point>
  <point name="ui_detailshow.before" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_detailshow.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="ui_dialog.action_default" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="ui_dialog.before_dialog" order="" ver="14" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #add by lixh 20150901
   CALL cl_set_toolbaritem_visible("s_lot_ins,s_lot_sel,s_lot_sel1",TRUE)
   #aint301單身異動申請明細頁籤與入庫明細頁籤的[有效日期]、[存貨備註]欄位需隱藏不可維護
   IF g_argv[1] = '1' THEN
      #CALL cl_set_comp_visible("inbb021,inbb022,inbc016,inbc017",FALSE)
      CALL cl_set_toolbaritem_visible("s_lot_ins",FALSE)
   ELSE
      CALL cl_set_toolbaritem_visible("s_lot_sel1",FALSE)
   END IF 
   #add by lixh 20150901   ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="4" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ON ACTION s_lot
            CALL cl_set_act_visible("s_lot_ins,s_lot_sel,s_lot_sel1",FALSE)
            IF NOT cl_null(g_detail_idx) AND g_detail_idx <> 0 THEN
               IF g_argv[1] = '1' THEN
                  CALL s_lot_b_fill('2',g_site,'1',g_inba_m.inbadocno,'','','-1')
               ELSE
                  CALL s_lot_b_fill('2',g_site,'1',g_inba_m.inbadocno,'','','1')
               END IF
            END IF
            LET lb_first = FALSE
]]>
  </point>
  <point name="ui_dialog.body1.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #CALL aint302_inbc_fill(g_inbb_d[l_ac].inbbseq)]]>
  </point>
  <point name="ui_dialog.define" order="" ver="17" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5
   DEFINE l_amount  LIKE inbb_t.inbb011
   DEFINE l_inbc018 LIKE inbc_t.inbc018
   DEFINE l_inao012 LIKE inao_t.inao012
   DEFINE l_imaf053 LIKE imaf_t.imaf053
   DEFINE l_imaf054 LIKE imaf_t.imaf054
   DEFINE l_cnt     LIKE type_t.num5]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="19" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_inbc_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b2) #page2  
    
         ON ACTION s_lot_sel
            LET g_action_choice="s_lot_sel"
            IF cl_auth_chk_act("s_lot_sel") THEN
               IF cl_null(g_detail_idx2) OR g_detail_idx2 = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
               
                  EXIT DIALOG
               END IF
               
               IF g_inba_m.inbastus <> 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00024'
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
               
                  EXIT DIALOG
               END IF
               
               IF NOT cl_null(g_inbc_d[g_detail_idx2].inbcseq) THEN
                  LET l_success = ''
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt FROM inao_t
                   WHERE inaoent = g_enterprise
                     AND inaosite = g_site
                     AND inaodocno = g_inba_m.inbadocno
                     AND inaoseq = g_inbc_d[g_detail_idx2].inbcseq
                     AND inao000 = '1'  #申請
                  IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF  
                  CALL s_transaction_begin()
                  IF g_type = '1' THEN    
                     IF l_cnt <> 0 THEN     #add by lixh 20151010                 
                        CALL s_lot_sel('2','2',g_site,g_inba_m.inbadocno,g_inbc_d[g_detail_idx2].inbcseq,g_inbc_d[g_detail_idx2].inbcseq1,g_inbc_d[g_detail_idx2].inbc001,g_inbc_d[g_detail_idx2].inbc002,g_inbc_d[g_detail_idx2].inbc003,g_inbc_d[g_detail_idx2].inbc005,g_inbc_d[g_detail_idx2].inbc006,g_inbc_d[g_detail_idx2].inbc007,g_inbc_d[g_detail_idx2].inbc009,g_inbc_d[g_detail_idx2].inbc010,'-1','aint301','','','','','0')
                             RETURNING l_success
                     #add by lixh 20151010         
                     ELSE
                        CALL s_lot_sel('1','2',g_site,g_inba_m.inbadocno,g_inbc_d[g_detail_idx2].inbcseq,g_inbc_d[g_detail_idx2].inbcseq1,g_inbc_d[g_detail_idx2].inbc001,g_inbc_d[g_detail_idx2].inbc002,g_inbc_d[g_detail_idx2].inbc003,g_inbc_d[g_detail_idx2].inbc005,g_inbc_d[g_detail_idx2].inbc006,g_inbc_d[g_detail_idx2].inbc007,g_inbc_d[g_detail_idx2].inbc009,g_inbc_d[g_detail_idx2].inbc010,'-1','aint301','','','','','0')
                             RETURNING l_success                     
                     END IF                 

                     LET l_inao012 = 0                     
                     SELECT SUM(inao012) INTO l_inao012 FROM inao_t 
                      WHERE inaoent = g_enterprise 
                        AND inaodocno = g_inba_m.inbadocno
                        AND inaoseq = g_inbc_d[g_detail_idx2].inbcseq
                        AND inao000 = '2'
                        AND inao013 = '-1'
                     IF cl_null(l_inao012) THEN LET l_inao012 = 0 END IF                     
                     #add by lixh 20151010          
                     
                  ELSE
                     IF l_cnt <> 0 THEN   #add by lixh 20151010   
                        CALL s_lot_sel('2','2',g_site,g_inba_m.inbadocno,g_inbc_d[g_detail_idx2].inbcseq,g_inbc_d[g_detail_idx2].inbcseq1,g_inbc_d[g_detail_idx2].inbc001,g_inbc_d[g_detail_idx2].inbc002,g_inbc_d[g_detail_idx2].inbc003,g_inbc_d[g_detail_idx2].inbc005,g_inbc_d[g_detail_idx2].inbc006,g_inbc_d[g_detail_idx2].inbc007,g_inbc_d[g_detail_idx2].inbc009,g_inbc_d[g_detail_idx2].inbc010,'1','aint302','','','','','0')
                             RETURNING l_success
                     #add by lixh 20151010        
                     ELSE                     
                        CALL s_lot_ins(g_site,g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq,'1',g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb011,'2',g_inba_m.inba003,'1','',
                                       g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008,g_inbb_d[g_detail_idx].inbb009)  #add by lixh 20151106
                             RETURNING l_success,l_amount                     
                     END IF     
                     #add by lixh 20151010   
                     LET l_inao012 = 0                      
                     SELECT SUM(inao012) INTO l_inao012 FROM inao_t 
                      WHERE inaoent = g_enterprise 
                        AND inaodocno = g_inba_m.inbadocno
                        AND inaoseq = g_inbc_d[g_detail_idx2].inbcseq
                        AND inao000 = '2'
                        AND inao013 = '1'
                     IF cl_null(l_inao012) THEN LET l_inao012 = 0 END IF   

                     #add by lixh 20151010                           
                  END IF
                  IF l_success THEN
                     #add by lixh 20151010 
                     SELECT imaf053,imaf054 INTO l_imaf053,l_imaf054 FROM imaf_t
                      WHERE imafent = g_enterprise
                        AND imafsite = g_site
                        AND imaf001 = g_inbc_d[g_detail_idx2].inbc001
                        
                     IF l_imaf054 = 'N' THEN   #不走多倉儲批
                        CALL s_aooi250_convert_qty(g_inbc_d[g_detail_idx2].inbc001,l_imaf053,g_inbc_d[g_detail_idx2].inbc009,l_inao012) 
                             RETURNING l_success,l_inao012                          
                     END IF      
                                                         
                     LET g_inbc_d[g_detail_idx2].inbc010 = l_inao012                     
                     CALL s_aooi250_convert_qty(g_inbc_d[g_detail_idx2].inbc009,g_inbc_d[g_detail_idx2].inbc010,
                                                g_inbc_d[g_detail_idx2].inbc011,g_inbc_d[g_detail_idx2].inbc015)
                                                
                      RETURNING l_success,g_inbc_d[g_detail_idx2].inbc015
                     IF g_inbb_d[g_detail_idx2].inbb019 < l_inao012 THEN 
                        LET g_inbb_d[g_detail_idx2].inbb019 = l_inao012
                     END IF
                     UPDATE inbb_t SET inbb012 = l_inao012,
                                       inbb019 = g_inbb_d[g_detail_idx2].inbb019
                      WHERE inbbent = g_enterprise  
                        AND inbbdocno = g_inba_m.inbadocno
                        AND inbbseq = g_inbc_d[g_detail_idx2].inbcseq  
                        
                     UPDATE inbc_t SET inbc010 = l_inao012,
                                       inbc015 = g_inbc_d[g_detail_idx2].inbc015
                      WHERE inbcent = g_enterprise  
                        AND inbcdocno = g_inba_m.inbadocno
                        AND inbcseq = g_inbc_d[g_detail_idx2].inbcseq 
                                              
                     LET g_inbc_d[g_detail_idx2].inbc010 = l_inao012
                     LET g_inbb_d[g_detail_idx2].inbb012 = l_inao012                     
                     #add by lixh 20151010                      
                     CALL s_transaction_end('Y','0')
                  ELSE                  
                     CALL s_transaction_end('N','0')
                  END IF
                  #add by lixh 20150918
                  #組合新增資料的條件
                  LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
                  #add by lixh 20150918 
                  LET g_current_row = g_current_idx #目前指標
               END IF
               EXIT DIALOG
            END IF

            BEFORE ROW
               CALL aint302_idx_chk()
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac2

            BEFORE DISPLAY
               CALL cl_set_act_visible("s_lot_ins,s_lot_sel,s_lot_sel1",TRUE)
               CALL aint302_set_act_no_visible_b()   #add by lixh 20151010
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
               LET l_ac2 = DIALOG.getCurrentRow("s_detail2")
               CALL aint302_idx_chk()
               LET g_current_page = 2
 
         END DISPLAY
         
         DISPLAY ARRAY g_inao_d2 TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b4) #page4 
    
            BEFORE ROW
               CALL aint302_idx_chk()
            #   LET l_ac4 = DIALOG.getCurrentRow("s_detail4")
            #   LET g_detail_idx = l_ac4
            #   

            BEFORE DISPLAY
            #   CALL FGL_SET_ARR_CURR(g_detail_idx)
            #   LET l_ac4 = DIALOG.getCurrentRow("s_detail4")
               CALL cl_set_act_visible("s_lot_ins,s_lot_sel,s_lot_sel1",FALSE)
               CALL aint302_idx_chk()
               LET g_current_page = 4
 
         END DISPLAY         
         
         SUBDIALOG sub_s_lot.s_lot_display
         ]]>
  </point>
  <point name="ui_dialog.page1.action" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                                    ]]>
  </point>
  <point name="ui_dialog.page1.before_display" order="" ver="15" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL cl_set_act_visible("s_lot_ins,s_lot_sel,s_lot_sel1",TRUE)
               CALL aint302_set_act_no_visible_b()   #add by lixh 20151010]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_headershow.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="unlock_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="unlock_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="update_b.after_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.before_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.define" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="update_b.m_update" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  ]]>
  </point>
  <point name="update_b.other" order="" ver="1" cite_std="N" new="Y" ch="" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <section id="aint302.description" ver="247" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:20,PR版次:20) Build-000950
#+ 
#+ Filename...: aint302
#+ Description: 雜項庫存收料作業
#+ Creator....: 02294(2013-10-15 14:04:49)
#+ Modifier...: 02294(2015-07-01 17:24:24) -SD/PR-
]]>
  </section>
  <section id="aint302.global" ver="65" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:50)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_inba_m        RECORD
       inbadocno LIKE inba_t.inbadocno, 
   inbadocno_desc LIKE type_t.chr80, 
   inbasite LIKE inba_t.inbasite, 
   inbadocdt LIKE inba_t.inbadocdt, 
   inba002 LIKE inba_t.inba002, 
   inba003 LIKE inba_t.inba003, 
   inba003_desc LIKE type_t.chr80, 
   inba004 LIKE inba_t.inba004, 
   inba004_desc LIKE type_t.chr80, 
   inbastus LIKE inba_t.inbastus, 
   inba005 LIKE inba_t.inba005, 
   inba006 LIKE inba_t.inba006, 
   inba007 LIKE inba_t.inba007, 
   inba007_desc LIKE type_t.chr80, 
   inba008 LIKE inba_t.inba008, 
   inbaownid LIKE inba_t.inbaownid, 
   inbaownid_desc LIKE type_t.chr80, 
   inbacrtdp LIKE inba_t.inbacrtdp, 
   inbacrtdp_desc LIKE type_t.chr80, 
   inbaowndp LIKE inba_t.inbaowndp, 
   inbaowndp_desc LIKE type_t.chr80, 
   inbacrtdt LIKE inba_t.inbacrtdt, 
   inbacrtid LIKE inba_t.inbacrtid, 
   inbacrtid_desc LIKE type_t.chr80, 
   inbamodid LIKE inba_t.inbamodid, 
   inbamodid_desc LIKE type_t.chr80, 
   inbacnfdt LIKE inba_t.inbacnfdt, 
   inbamoddt LIKE inba_t.inbamoddt, 
   inbapstid LIKE inba_t.inbapstid, 
   inbapstid_desc LIKE type_t.chr80, 
   inbacnfid LIKE inba_t.inbacnfid, 
   inbacnfid_desc LIKE type_t.chr80, 
   inbapstdt LIKE inba_t.inbapstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_inbb_d        RECORD
       inbbsite LIKE inbb_t.inbbsite, 
   inbbseq LIKE inbb_t.inbbseq, 
   inbb001 LIKE inbb_t.inbb001, 
   inbb001_desc LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   inbb002 LIKE inbb_t.inbb002, 
   inbb002_desc LIKE type_t.chr500, 
   inbb004 LIKE inbb_t.inbb004, 
   inbb004_desc LIKE type_t.chr500, 
   inbb007 LIKE inbb_t.inbb007, 
   inbb007_desc LIKE type_t.chr500, 
   inbb008 LIKE inbb_t.inbb008, 
   inbb008_desc LIKE type_t.chr500, 
   inbb009 LIKE inbb_t.inbb009, 
   inbb010 LIKE inbb_t.inbb010, 
   inbb010_desc LIKE type_t.chr500, 
   inbb003 LIKE inbb_t.inbb003, 
   inbb011 LIKE inbb_t.inbb011, 
   inbb012 LIKE inbb_t.inbb012, 
   inbb013 LIKE inbb_t.inbb013, 
   inbb013_desc LIKE type_t.chr500, 
   inbb014 LIKE inbb_t.inbb014, 
   inbb015 LIKE inbb_t.inbb015, 
   inbb016 LIKE inbb_t.inbb016, 
   inbb016_desc LIKE type_t.chr500, 
   inbb017 LIKE inbb_t.inbb017, 
   inbb018 LIKE inbb_t.inbb018, 
   inbb019 LIKE inbb_t.inbb019, 
   inbb023 LIKE inbb_t.inbb023, 
   inbb023_desc LIKE type_t.chr500, 
   inbb024 LIKE inbb_t.inbb024, 
   inbb024_desc LIKE type_t.chr500, 
   inbb025 LIKE inbb_t.inbb025, 
   inbb025_desc LIKE type_t.chr500, 
   inbb020 LIKE inbb_t.inbb020, 
   inbb022 LIKE inbb_t.inbb022, 
   inbb021 LIKE inbb_t.inbb021
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_inbadocno LIKE inba_t.inbadocno,
      b_inbadocdt LIKE inba_t.inbadocdt,
      b_inba002 LIKE inba_t.inba002,
      b_inba003 LIKE inba_t.inba003,
   b_inba003_desc LIKE type_t.chr80,
      b_inba004 LIKE inba_t.inba004,
   b_inba004_desc LIKE type_t.chr80
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_inba_m          type_g_inba_m
DEFINE g_inba_m_t        type_g_inba_m
DEFINE g_inba_m_o        type_g_inba_m
DEFINE g_inba_m_mask_o   type_g_inba_m #轉換遮罩前資料
DEFINE g_inba_m_mask_n   type_g_inba_m #轉換遮罩後資料
 
   DEFINE g_inbadocno_t LIKE inba_t.inbadocno
 
 
DEFINE g_inbb_d          DYNAMIC ARRAY OF type_g_inbb_d
DEFINE g_inbb_d_t        type_g_inbb_d
DEFINE g_inbb_d_o        type_g_inbb_d
DEFINE g_inbb_d_mask_o   DYNAMIC ARRAY OF type_g_inbb_d #轉換遮罩前資料
DEFINE g_inbb_d_mask_n   DYNAMIC ARRAY OF type_g_inbb_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint302.main" ver="24" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:5)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT inbadocno,'',inbasite,inbadocdt,inba002,inba003,'',inba004,'',inbastus, 
       inba005,inba006,inba007,'',inba008,inbaownid,'',inbacrtdp,'',inbaowndp,'',inbacrtdt,inbacrtid, 
       '',inbamodid,'',inbacnfdt,inbamoddt,inbapstid,'',inbacnfid,'',inbapstdt", 
                      " FROM inba_t",
                      " WHERE inbaent= ? AND inbadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint302_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.inbadocno,t0.inbasite,t0.inbadocdt,t0.inba002,t0.inba003,t0.inba004, 
       t0.inbastus,t0.inba005,t0.inba006,t0.inba007,t0.inba008,t0.inbaownid,t0.inbacrtdp,t0.inbaowndp, 
       t0.inbacrtdt,t0.inbacrtid,t0.inbamodid,t0.inbacnfdt,t0.inbamoddt,t0.inbapstid,t0.inbacnfid,t0.inbapstdt, 
       t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooefl003 ,t6.ooag011 ,t7.ooag011 ,t8.ooag011 , 
       t9.ooag011",
               " FROM inba_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.inba003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.inba004 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.inbaownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.inbacrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.inbaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.inbacrtid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.inbamodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.inbapstid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.inbacnfid  ",
 
               " WHERE t0.inbaent = '" ||g_enterprise|| "' AND t0.inbadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint302_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint302 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint302_init()   
 
      #進入選單 Menu (="N")
      CALL aint302_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint302
      
   END IF 
   
   CLOSE aint302_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aint302.init" ver="13" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint302_init()
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('inbastus','13','N,S,Y,A,D,R,W,Z,X')
 
      CALL cl_set_combo_scc('inba005','2051') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aint302_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aint302.ui_dialog" ver="143" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aint302_ui_dialog()
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint302_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_inba_m.* TO NULL
         CALL g_inbb_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aint302_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint302_fetch('') # reload data
               LET l_ac = 1
               CALL aint302_ui_detailshow() #Setting the current row 
         
               CALL aint302_idx_chk()
               #NEXT FIELD inbbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_inbb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint302_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aint302_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION s_lot_sel1
            LET g_action_choice="s_lot_sel1"
            IF cl_auth_chk_act("s_lot_sel1") THEN
               
               #add-point:ON ACTION s_lot_sel1
               {<point name="menu.detail_show.page1.s_lot_sel1" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION s_lot_ins
            LET g_action_choice="s_lot_ins"
            IF cl_auth_chk_act("s_lot_ins") THEN
               
               #add-point:ON ACTION s_lot_ins
               {<point name="menu.detail_show.page1.s_lot_ins" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aint302_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint302_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint302_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint302_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint302_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aint302_set_act_visible()   
            CALL aint302_set_act_no_visible()
            IF NOT (g_inba_m.inbadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                                  " inbadocno = '", g_inba_m.inbadocno, "' "
 
               #填到對應位置
               CALL aint302_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "inba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "inbb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aint302_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "inba_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "inbb_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint302_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aint302_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint302_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aint302_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint302_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aint302_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint302_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aint302_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint302_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aint302_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint302_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aint302_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint302_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_inbb_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inbbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION aint302_01
            LET g_action_choice="aint302_01"
            IF cl_auth_chk_act("aint302_01") THEN
               
               #add-point:ON ACTION aint302_01
               {<point name="menu.aint302_01" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint302_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint302_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION gen_detail
            LET g_action_choice="gen_detail"
            IF cl_auth_chk_act("gen_detail") THEN
               
               #add-point:ON ACTION gen_detail
               {<point name="menu.gen_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION unposted
            LET g_action_choice="unposted"
            IF cl_auth_chk_act("unposted") THEN
               
               #add-point:ON ACTION unposted
               {<point name="menu.unposted" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint302_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint302_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_memo
            LET g_action_choice="open_memo"
            IF cl_auth_chk_act("open_memo") THEN
               
               #add-point:ON ACTION open_memo
               {<point name="menu.open_memo" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/ain/aint302_rep.4gl"
               #add-point:ON ACTION output.after
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION qc_query
            LET g_action_choice="qc_query"
            IF cl_auth_chk_act("qc_query") THEN
               
               #add-point:ON ACTION qc_query
               {<point name="menu.qc_query" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint302_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_detail_memo
            LET g_action_choice="open_detail_memo"
            IF cl_auth_chk_act("open_detail_memo") THEN
               
               #add-point:ON ACTION open_detail_memo
               {<point name="menu.open_detail_memo" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint302_query()
               #add-point:ON ACTION query
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION gen_qc
            LET g_action_choice="gen_qc"
            IF cl_auth_chk_act("gen_qc") THEN
               
               #add-point:ON ACTION gen_qc
               {<point name="menu.gen_qc" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION storage_by_qc
            LET g_action_choice="storage_by_qc"
            IF cl_auth_chk_act("storage_by_qc") THEN
               
               #add-point:ON ACTION storage_by_qc
               {<point name="menu.storage_by_qc" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION prog_inba003
            LET g_action_choice="prog_inba003"
            IF cl_auth_chk_act("prog_inba003") THEN
               
               #add-point:ON ACTION prog_inba003
               {<point name="menu.prog_inba003" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aint302_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint302_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint302_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_inba_m.inbadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aint302.browser_fill" ver="42" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint302_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE inbadocno ",
                      " FROM inba_t ",
                      " ",
                      " LEFT JOIN inbb_t ON inbbent = inbaent AND inbadocno = inbbdocno ", "  ",
                      #add-point:browser_fill段sql(inbb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE inbaent = '" ||g_enterprise|| "' AND inbbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("inba_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE inbadocno ",
                      " FROM inba_t ", 
                      "  ",
                      "  ",
                      " WHERE inbaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("inba_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_inba_m.* TO NULL
      CALL g_inbb_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.inbadocno,t0.inbadocdt,t0.inba002,t0.inba003,t0.inba004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.inbastus,t0.inbadocno,t0.inbadocdt,t0.inba002,t0.inba003,t0.inba004, 
       t1.ooag011 ,t2.ooefl003 ",
               " FROM inba_t t0",
               "  ",
               "  LEFT JOIN inbb_t ON inbbent = inbaent AND inbadocno = inbbdocno ", "  ", 
               #add-point:browser_fill段sql(inbb_t1)
               {<point name="browser_fill.join.inbb_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.inba003  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.inba004 AND t2.ooefl002='"||g_dlang||"' ",
 
               " WHERE t0.inbaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("inba_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY inbadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"inba_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_inbadocno,g_browser[g_cnt].b_inbadocdt, 
       g_browser[g_cnt].b_inba002,g_browser[g_cnt].b_inba003,g_browser[g_cnt].b_inba004,g_browser[g_cnt].b_inba003_desc, 
       g_browser[g_cnt].b_inba004_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aint302_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_inbadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aint302.ui_headershow" ver="13" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint302_ui_headershow()
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理 
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_inba_m.inbadocno = g_browser[g_current_idx].b_inbadocno   
 
   EXECUTE aint302_master_referesh USING g_inba_m.inbadocno INTO g_inba_m.inbadocno,g_inba_m.inbasite, 
       g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005, 
       g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
       g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt,g_inba_m.inba003_desc,g_inba_m.inba004_desc, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid_desc, 
       g_inba_m.inbamodid_desc,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid_desc
   CALL aint302_inba_t_mask()
   CALL aint302_show()
      
END FUNCTION
]]>
  </section>
  <section id="aint302.ui_detailshow" ver="9" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint302_ui_detailshow()
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint302.ui_browser_refresh" ver="13" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint302_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_inbadocno = g_inba_m.inbadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint302.construct" ver="30" ch="" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint302_construct()
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_inba_m.* TO NULL
   CALL g_inbb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON inbadocno,inbadocno_desc,inbasite,inbadocdt,inba002,inba003,inba004, 
          inbastus,inba005,inba006,inba007,inba007_desc,inba008,inbaownid,inbacrtdp,inbaowndp,inbacrtdt, 
          inbacrtid,inbamodid,inbacnfdt,inbamoddt,inbapstid,inbacnfid,inbapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<inbacrtdt>>----
         AFTER FIELD inbacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<inbamoddt>>----
         AFTER FIELD inbamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inbacnfdt>>----
         AFTER FIELD inbacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inbapstdt>>----
         AFTER FIELD inbapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.inbadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbadocno
            #add-point:ON ACTION controlp INFIELD inbadocno
            {<point name="construct.c.inbadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbadocno
            #add-point:BEFORE FIELD inbadocno
            {<point name="construct.b.inbadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbadocno
            
            #add-point:AFTER FIELD inbadocno
            {<point name="construct.a.inbadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbadocno_desc
            #add-point:BEFORE FIELD inbadocno_desc
            {<point name="construct.b.inbadocno_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbadocno_desc
            
            #add-point:AFTER FIELD inbadocno_desc
            {<point name="construct.a.inbadocno_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbadocno_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbadocno_desc
            #add-point:ON ACTION controlp INFIELD inbadocno_desc
            {<point name="construct.c.inbadocno_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbasite
            #add-point:BEFORE FIELD inbasite
            {<point name="construct.b.inbasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbasite
            
            #add-point:AFTER FIELD inbasite
            {<point name="construct.a.inbasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbasite
            #add-point:ON ACTION controlp INFIELD inbasite
            {<point name="construct.c.inbasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbadocdt
            #add-point:BEFORE FIELD inbadocdt
            {<point name="construct.b.inbadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbadocdt
            
            #add-point:AFTER FIELD inbadocdt
            {<point name="construct.a.inbadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbadocdt
            #add-point:ON ACTION controlp INFIELD inbadocdt
            {<point name="construct.c.inbadocdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba002
            #add-point:BEFORE FIELD inba002
            {<point name="construct.b.inba002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba002
            
            #add-point:AFTER FIELD inba002
            {<point name="construct.a.inba002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inba002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba002
            #add-point:ON ACTION controlp INFIELD inba002
            {<point name="construct.c.inba002" />}
            #END add-point
 
         #Ctrlp:construct.c.inba003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba003
            #add-point:ON ACTION controlp INFIELD inba003
            {<point name="construct.c.inba003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba003
            #add-point:BEFORE FIELD inba003
            {<point name="construct.b.inba003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba003
            
            #add-point:AFTER FIELD inba003
            {<point name="construct.a.inba003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inba004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba004
            #add-point:ON ACTION controlp INFIELD inba004
            {<point name="construct.c.inba004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba004
            #add-point:BEFORE FIELD inba004
            {<point name="construct.b.inba004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba004
            
            #add-point:AFTER FIELD inba004
            {<point name="construct.a.inba004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbastus
            #add-point:BEFORE FIELD inbastus
            {<point name="construct.b.inbastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbastus
            
            #add-point:AFTER FIELD inbastus
            {<point name="construct.a.inbastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbastus
            #add-point:ON ACTION controlp INFIELD inbastus
            {<point name="construct.c.inbastus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba005
            #add-point:BEFORE FIELD inba005
            {<point name="construct.b.inba005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba005
            
            #add-point:AFTER FIELD inba005
            {<point name="construct.a.inba005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inba005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba005
            #add-point:ON ACTION controlp INFIELD inba005
            {<point name="construct.c.inba005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba006
            #add-point:BEFORE FIELD inba006
            {<point name="construct.b.inba006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba006
            
            #add-point:AFTER FIELD inba006
            {<point name="construct.a.inba006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inba006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba006
            #add-point:ON ACTION controlp INFIELD inba006
            {<point name="construct.c.inba006" />}
            #END add-point
 
         #Ctrlp:construct.c.inba007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba007
            #add-point:ON ACTION controlp INFIELD inba007
            {<point name="construct.c.inba007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba007
            #add-point:BEFORE FIELD inba007
            {<point name="construct.b.inba007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba007
            
            #add-point:AFTER FIELD inba007
            {<point name="construct.a.inba007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba007_desc
            #add-point:BEFORE FIELD inba007_desc
            {<point name="construct.b.inba007_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba007_desc
            
            #add-point:AFTER FIELD inba007_desc
            {<point name="construct.a.inba007_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inba007_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba007_desc
            #add-point:ON ACTION controlp INFIELD inba007_desc
            {<point name="construct.c.inba007_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba008
            #add-point:BEFORE FIELD inba008
            {<point name="construct.b.inba008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba008
            
            #add-point:AFTER FIELD inba008
            {<point name="construct.a.inba008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inba008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba008
            #add-point:ON ACTION controlp INFIELD inba008
            {<point name="construct.c.inba008" />}
            #END add-point
 
         #Ctrlp:construct.c.inbaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbaownid
            #add-point:ON ACTION controlp INFIELD inbaownid
            {<point name="construct.c.inbaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbaownid
            #add-point:BEFORE FIELD inbaownid
            {<point name="construct.b.inbaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbaownid
            
            #add-point:AFTER FIELD inbaownid
            {<point name="construct.a.inbaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbacrtdp
            #add-point:ON ACTION controlp INFIELD inbacrtdp
            {<point name="construct.c.inbacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbacrtdp
            #add-point:BEFORE FIELD inbacrtdp
            {<point name="construct.b.inbacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbacrtdp
            
            #add-point:AFTER FIELD inbacrtdp
            {<point name="construct.a.inbacrtdp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbaowndp
            #add-point:ON ACTION controlp INFIELD inbaowndp
            {<point name="construct.c.inbaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbaowndp
            #add-point:BEFORE FIELD inbaowndp
            {<point name="construct.b.inbaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbaowndp
            
            #add-point:AFTER FIELD inbaowndp
            {<point name="construct.a.inbaowndp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbacrtdt
            #add-point:BEFORE FIELD inbacrtdt
            {<point name="construct.b.inbacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inbacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbacrtid
            #add-point:ON ACTION controlp INFIELD inbacrtid
            {<point name="construct.c.inbacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbacrtid
            #add-point:BEFORE FIELD inbacrtid
            {<point name="construct.b.inbacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbacrtid
            
            #add-point:AFTER FIELD inbacrtid
            {<point name="construct.a.inbacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbamodid
            #add-point:ON ACTION controlp INFIELD inbamodid
            {<point name="construct.c.inbamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbamodid
            #add-point:BEFORE FIELD inbamodid
            {<point name="construct.b.inbamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbamodid
            
            #add-point:AFTER FIELD inbamodid
            {<point name="construct.a.inbamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbacnfdt
            #add-point:BEFORE FIELD inbacnfdt
            {<point name="construct.b.inbacnfdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbamoddt
            #add-point:BEFORE FIELD inbamoddt
            {<point name="construct.b.inbamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.inbapstid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbapstid
            #add-point:ON ACTION controlp INFIELD inbapstid
            {<point name="construct.c.inbapstid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbapstid
            #add-point:BEFORE FIELD inbapstid
            {<point name="construct.b.inbapstid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbapstid
            
            #add-point:AFTER FIELD inbapstid
            {<point name="construct.a.inbapstid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbacnfid
            #add-point:ON ACTION controlp INFIELD inbacnfid
            {<point name="construct.c.inbacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbacnfid
            #add-point:BEFORE FIELD inbacnfid
            {<point name="construct.b.inbacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbacnfid
            
            #add-point:AFTER FIELD inbacnfid
            {<point name="construct.a.inbacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbapstdt
            #add-point:BEFORE FIELD inbapstdt
            {<point name="construct.b.inbapstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON inbbseq,inbb001,inbb002,inbb004,inbb007,inbb008,inbb009,inbb010,inbb003, 
          inbb011,inbb012,inbb013,inbb014,inbb015,inbb016,inbb016_desc,inbb017,inbb018,inbb019,inbb023, 
          inbb024,inbb025,inbb020,inbb022,inbb021
           FROM s_detail1[1].inbbseq,s_detail1[1].inbb001,s_detail1[1].inbb002,s_detail1[1].inbb004, 
               s_detail1[1].inbb007,s_detail1[1].inbb008,s_detail1[1].inbb009,s_detail1[1].inbb010,s_detail1[1].inbb003, 
               s_detail1[1].inbb011,s_detail1[1].inbb012,s_detail1[1].inbb013,s_detail1[1].inbb014,s_detail1[1].inbb015, 
               s_detail1[1].inbb016,s_detail1[1].inbb016_desc,s_detail1[1].inbb017,s_detail1[1].inbb018, 
               s_detail1[1].inbb019,s_detail1[1].inbb023,s_detail1[1].inbb024,s_detail1[1].inbb025,s_detail1[1].inbb020, 
               s_detail1[1].inbb022,s_detail1[1].inbb021
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbbseq
            #add-point:BEFORE FIELD inbbseq
            {<point name="construct.b.page1.inbbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbbseq
            
            #add-point:AFTER FIELD inbbseq
            {<point name="construct.a.page1.inbbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbbseq
            #add-point:ON ACTION controlp INFIELD inbbseq
            {<point name="construct.c.page1.inbbseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inbb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb001
            #add-point:ON ACTION controlp INFIELD inbb001
            {<point name="construct.c.page1.inbb001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb001
            #add-point:BEFORE FIELD inbb001
            {<point name="construct.b.page1.inbb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb001
            
            #add-point:AFTER FIELD inbb001
            {<point name="construct.a.page1.inbb001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb002
            #add-point:BEFORE FIELD inbb002
            {<point name="construct.b.page1.inbb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb002
            
            #add-point:AFTER FIELD inbb002
            {<point name="construct.a.page1.inbb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb002
            #add-point:ON ACTION controlp INFIELD inbb002
            {<point name="construct.c.page1.inbb002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inbb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb004
            #add-point:ON ACTION controlp INFIELD inbb004
            {<point name="construct.c.page1.inbb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb004
            #add-point:BEFORE FIELD inbb004
            {<point name="construct.b.page1.inbb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb004
            
            #add-point:AFTER FIELD inbb004
            {<point name="construct.a.page1.inbb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb007
            #add-point:ON ACTION controlp INFIELD inbb007
            {<point name="construct.c.page1.inbb007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb007
            #add-point:BEFORE FIELD inbb007
            {<point name="construct.b.page1.inbb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb007
            
            #add-point:AFTER FIELD inbb007
            {<point name="construct.a.page1.inbb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb008
            #add-point:ON ACTION controlp INFIELD inbb008
            {<point name="construct.c.page1.inbb008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb008
            #add-point:BEFORE FIELD inbb008
            {<point name="construct.b.page1.inbb008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb008
            
            #add-point:AFTER FIELD inbb008
            {<point name="construct.a.page1.inbb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb009
            #add-point:ON ACTION controlp INFIELD inbb009
            {<point name="construct.c.page1.inbb009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb009
            #add-point:BEFORE FIELD inbb009
            {<point name="construct.b.page1.inbb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb009
            
            #add-point:AFTER FIELD inbb009
            {<point name="construct.a.page1.inbb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb010
            #add-point:ON ACTION controlp INFIELD inbb010
            {<point name="construct.c.page1.inbb010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb010
            #add-point:BEFORE FIELD inbb010
            {<point name="construct.b.page1.inbb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb010
            
            #add-point:AFTER FIELD inbb010
            {<point name="construct.a.page1.inbb010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb003
            #add-point:BEFORE FIELD inbb003
            {<point name="construct.b.page1.inbb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb003
            
            #add-point:AFTER FIELD inbb003
            {<point name="construct.a.page1.inbb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb003
            #add-point:ON ACTION controlp INFIELD inbb003
            {<point name="construct.c.page1.inbb003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb011
            #add-point:BEFORE FIELD inbb011
            {<point name="construct.b.page1.inbb011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb011
            
            #add-point:AFTER FIELD inbb011
            {<point name="construct.a.page1.inbb011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb011
            #add-point:ON ACTION controlp INFIELD inbb011
            {<point name="construct.c.page1.inbb011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb012
            #add-point:BEFORE FIELD inbb012
            {<point name="construct.b.page1.inbb012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb012
            
            #add-point:AFTER FIELD inbb012
            {<point name="construct.a.page1.inbb012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb012
            #add-point:ON ACTION controlp INFIELD inbb012
            {<point name="construct.c.page1.inbb012" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inbb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb013
            #add-point:ON ACTION controlp INFIELD inbb013
            {<point name="construct.c.page1.inbb013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb013
            #add-point:BEFORE FIELD inbb013
            {<point name="construct.b.page1.inbb013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb013
            
            #add-point:AFTER FIELD inbb013
            {<point name="construct.a.page1.inbb013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb014
            #add-point:BEFORE FIELD inbb014
            {<point name="construct.b.page1.inbb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb014
            
            #add-point:AFTER FIELD inbb014
            {<point name="construct.a.page1.inbb014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb014
            #add-point:ON ACTION controlp INFIELD inbb014
            {<point name="construct.c.page1.inbb014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb015
            #add-point:BEFORE FIELD inbb015
            {<point name="construct.b.page1.inbb015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb015
            
            #add-point:AFTER FIELD inbb015
            {<point name="construct.a.page1.inbb015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb015
            #add-point:ON ACTION controlp INFIELD inbb015
            {<point name="construct.c.page1.inbb015" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inbb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb016
            #add-point:ON ACTION controlp INFIELD inbb016
            {<point name="construct.c.page1.inbb016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb016
            #add-point:BEFORE FIELD inbb016
            {<point name="construct.b.page1.inbb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb016
            
            #add-point:AFTER FIELD inbb016
            {<point name="construct.a.page1.inbb016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb016_desc
            #add-point:BEFORE FIELD inbb016_desc
            {<point name="construct.b.page1.inbb016_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb016_desc
            
            #add-point:AFTER FIELD inbb016_desc
            {<point name="construct.a.page1.inbb016_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb016_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb016_desc
            #add-point:ON ACTION controlp INFIELD inbb016_desc
            {<point name="construct.c.page1.inbb016_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb017
            #add-point:BEFORE FIELD inbb017
            {<point name="construct.b.page1.inbb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb017
            
            #add-point:AFTER FIELD inbb017
            {<point name="construct.a.page1.inbb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb017
            #add-point:ON ACTION controlp INFIELD inbb017
            {<point name="construct.c.page1.inbb017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb018
            #add-point:BEFORE FIELD inbb018
            {<point name="construct.b.page1.inbb018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb018
            
            #add-point:AFTER FIELD inbb018
            {<point name="construct.a.page1.inbb018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb018
            #add-point:ON ACTION controlp INFIELD inbb018
            {<point name="construct.c.page1.inbb018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb019
            #add-point:BEFORE FIELD inbb019
            {<point name="construct.b.page1.inbb019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb019
            
            #add-point:AFTER FIELD inbb019
            {<point name="construct.a.page1.inbb019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb019
            #add-point:ON ACTION controlp INFIELD inbb019
            {<point name="construct.c.page1.inbb019" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inbb023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb023
            #add-point:ON ACTION controlp INFIELD inbb023
            {<point name="construct.c.page1.inbb023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb023
            #add-point:BEFORE FIELD inbb023
            {<point name="construct.b.page1.inbb023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb023
            
            #add-point:AFTER FIELD inbb023
            {<point name="construct.a.page1.inbb023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb024
            #add-point:ON ACTION controlp INFIELD inbb024
            {<point name="construct.c.page1.inbb024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb024
            #add-point:BEFORE FIELD inbb024
            {<point name="construct.b.page1.inbb024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb024
            
            #add-point:AFTER FIELD inbb024
            {<point name="construct.a.page1.inbb024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb025
            #add-point:ON ACTION controlp INFIELD inbb025
            {<point name="construct.c.page1.inbb025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb025
            #add-point:BEFORE FIELD inbb025
            {<point name="construct.b.page1.inbb025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb025
            
            #add-point:AFTER FIELD inbb025
            {<point name="construct.a.page1.inbb025" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb020
            #add-point:BEFORE FIELD inbb020
            {<point name="construct.b.page1.inbb020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb020
            
            #add-point:AFTER FIELD inbb020
            {<point name="construct.a.page1.inbb020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb020
            #add-point:ON ACTION controlp INFIELD inbb020
            {<point name="construct.c.page1.inbb020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb022
            #add-point:BEFORE FIELD inbb022
            {<point name="construct.b.page1.inbb022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb022
            
            #add-point:AFTER FIELD inbb022
            {<point name="construct.a.page1.inbb022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb022
            #add-point:ON ACTION controlp INFIELD inbb022
            {<point name="construct.c.page1.inbb022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb021
            #add-point:BEFORE FIELD inbb021
            {<point name="construct.b.page1.inbb021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb021
            
            #add-point:AFTER FIELD inbb021
            {<point name="construct.a.page1.inbb021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbb021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb021
            #add-point:ON ACTION controlp INFIELD inbb021
            {<point name="construct.c.page1.inbb021" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "inba_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "inbb_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint302.filter" ver="13" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:7)
#+ filter過濾功能
PRIVATE FUNCTION aint302_filter()
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON inbadocno,inbadocdt,inba002,inba003,inba004
                          FROM s_browse[1].b_inbadocno,s_browse[1].b_inbadocdt,s_browse[1].b_inba002, 
                              s_browse[1].b_inba003,s_browse[1].b_inba004
 
         BEFORE CONSTRUCT
               DISPLAY aint302_filter_parser('inbadocno') TO s_browse[1].b_inbadocno
            DISPLAY aint302_filter_parser('inbadocdt') TO s_browse[1].b_inbadocdt
            DISPLAY aint302_filter_parser('inba002') TO s_browse[1].b_inba002
            DISPLAY aint302_filter_parser('inba003') TO s_browse[1].b_inba003
            DISPLAY aint302_filter_parser('inba004') TO s_browse[1].b_inba004
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint302_filter_show('inbadocno')
   CALL aint302_filter_show('inbadocdt')
   CALL aint302_filter_show('inba002')
   CALL aint302_filter_show('inba003')
   CALL aint302_filter_show('inba004')
 
END FUNCTION
]]>
  </section>
  <section id="aint302.filter_parser" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint302_filter_parser(ps_field)
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aint302.filter_show" ver="2" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint302_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint302_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aint302.query" ver="18" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint302_query()
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_inbb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aint302_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL aint302_browser_fill("")
      CALL aint302_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint302_filter_show('inbadocno')
   CALL aint302_filter_show('inbadocdt')
   CALL aint302_filter_show('inba002')
   CALL aint302_filter_show('inba003')
   CALL aint302_filter_show('inba004')
   CALL aint302_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aint302_fetch("F") 
      #顯示單身筆數
      CALL aint302_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint302.fetch" ver="29" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint302_fetch(p_flag)
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_inba_m.inbadocno = g_browser[g_current_idx].b_inbadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint302_master_referesh USING g_inba_m.inbadocno INTO g_inba_m.inbadocno,g_inba_m.inbasite, 
       g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005, 
       g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
       g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt,g_inba_m.inba003_desc,g_inba_m.inba004_desc, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid_desc, 
       g_inba_m.inbamodid_desc,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid_desc
   
   #遮罩相關處理
   LET g_inba_m_mask_o.* =  g_inba_m.*
   CALL aint302_inba_t_mask()
   LET g_inba_m_mask_n.* =  g_inba_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint302_set_act_visible()   
   CALL aint302_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_inba_m_t.* = g_inba_m.*
   LET g_inba_m_o.* = g_inba_m.*
   
   LET g_data_owner = g_inba_m.inbaownid      
   LET g_data_dept  = g_inba_m.inbaowndp
   
   #重新顯示   
   CALL aint302_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aint302.insert" ver="35" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint302_insert()
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_inbb_d.clear()   
 
 
   INITIALIZE g_inba_m.* LIKE inba_t.*             #DEFAULT 設定
   
   LET g_inbadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_inba_m.inbaownid = g_user
      LET g_inba_m.inbaowndp = g_dept
      LET g_inba_m.inbacrtid = g_user
      LET g_inba_m.inbacrtdp = g_dept 
      LET g_inba_m.inbacrtdt = cl_get_current()
      LET g_inba_m.inbamodid = g_user
      LET g_inba_m.inbamoddt = cl_get_current()
      LET g_inba_m.inbastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_inba_m.inba005 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_inba_m_t.* = g_inba_m.*
      LET g_inba_m_o.* = g_inba_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inba_m.inbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL aint302_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_inba_m.* TO NULL
         INITIALIZE g_inbb_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aint302_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_inbb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint302_set_act_visible()   
   CALL aint302_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_inbadocno_t = g_inba_m.inbadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint302_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aint302_cl
   
   CALL aint302_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aint302_master_referesh USING g_inba_m.inbadocno INTO g_inba_m.inbadocno,g_inba_m.inbasite, 
       g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005, 
       g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
       g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt,g_inba_m.inba003_desc,g_inba_m.inba004_desc, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid_desc, 
       g_inba_m.inbamodid_desc,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid_desc
   
   #遮罩相關處理
   LET g_inba_m_mask_o.* =  g_inba_m.*
   CALL aint302_inba_t_mask()
   LET g_inba_m_mask_n.* =  g_inba_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_inba_m.inbadocno,g_inba_m.inbadocno_desc,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002, 
       g_inba_m.inba003,g_inba_m.inba003_desc,g_inba_m.inba004,g_inba_m.inba004_desc,g_inba_m.inbastus, 
       g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba007_desc,g_inba_m.inba008,g_inba_m.inbaownid, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp,g_inba_m.inbaowndp_desc, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbacrtid_desc,g_inba_m.inbamodid,g_inba_m.inbamodid_desc, 
       g_inba_m.inbacnfdt,g_inba_m.inbamoddt,g_inba_m.inbapstid,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid, 
       g_inba_m.inbacnfid_desc,g_inba_m.inbapstdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aint302_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="aint302.modify" ver="36" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint302_modify()
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_inba_m_t.* = g_inba_m.*
   LET g_inba_m_o.* = g_inba_m.*
   
   IF g_inba_m.inbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_inbadocno_t = g_inba_m.inbadocno
 
   CALL s_transaction_begin()
   
   OPEN aint302_cl USING g_enterprise,g_inba_m.inbadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint302_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint302_master_referesh USING g_inba_m.inbadocno INTO g_inba_m.inbadocno,g_inba_m.inbasite, 
       g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005, 
       g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
       g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt,g_inba_m.inba003_desc,g_inba_m.inba004_desc, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid_desc, 
       g_inba_m.inbamodid_desc,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid_desc
   
   #檢查是否允許此動作
   IF NOT aint302_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_inba_m_mask_o.* =  g_inba_m.*
   CALL aint302_inba_t_mask()
   LET g_inba_m_mask_n.* =  g_inba_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL aint302_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_inbadocno_t = g_inba_m.inbadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_inba_m.inbamodid = g_user 
LET g_inba_m.inbamoddt = cl_get_current()
LET g_inba_m.inbamodid_desc = cl_get_username(g_inba_m.inbamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aint302_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE inba_t SET (inbamodid,inbamoddt) = (g_inba_m.inbamodid,g_inba_m.inbamoddt)
          WHERE inbaent = g_enterprise AND inbadocno = g_inbadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inba_m.* = g_inba_m_t.*
         CALL aint302_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_inba_m.inbadocno != g_inbadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE inbb_t SET inbbdocno = g_inba_m.inbadocno
 
          WHERE inbbent = g_enterprise AND inbbdocno = g_inbadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inbb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inbb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint302_set_act_visible()   
   CALL aint302_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
 
   #填到對應位置
   CALL aint302_browser_fill("")
 
   CLOSE aint302_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint302_msgcentre_notify('modify')
 
END FUNCTION 
]]>
  </section>
  <section id="aint302.input" ver="24" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint302_input(p_cmd)
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inba_m.inbadocno,g_inba_m.inbadocno_desc,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002, 
       g_inba_m.inba003,g_inba_m.inba003_desc,g_inba_m.inba004,g_inba_m.inba004_desc,g_inba_m.inbastus, 
       g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba007_desc,g_inba_m.inba008,g_inba_m.inbaownid, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp,g_inba_m.inbaowndp_desc, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbacrtid_desc,g_inba_m.inbamodid,g_inba_m.inbamodid_desc, 
       g_inba_m.inbacnfdt,g_inba_m.inbamoddt,g_inba_m.inbapstid,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid, 
       g_inba_m.inbacnfid_desc,g_inba_m.inbapstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inbbsite,inbbseq,inbb001,inbb002,inbb004,inbb007,inbb008,inbb009,inbb010, 
       inbb003,inbb011,inbb012,inbb013,inbb014,inbb015,inbb016,inbb017,inbb018,inbb019,inbb023,inbb024, 
       inbb025,inbb020,inbb022,inbb021 FROM inbb_t WHERE inbbent=? AND inbbdocno=? AND inbbseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint302_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint302_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint302_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_inba_m.inbadocno,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003, 
       g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008 

   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aint302.input.head" ver="35" ch="" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_inba_m.inbadocno,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003, 
          g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_memo
            LET g_action_choice="open_memo"
            IF cl_auth_chk_act("open_memo") THEN
               
               #add-point:ON ACTION open_memo
               {<point name="input.master_input.open_memo" mark="Y"/>}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_detail_memo
            LET g_action_choice="open_detail_memo"
            IF cl_auth_chk_act("open_detail_memo") THEN
               
               #add-point:ON ACTION open_detail_memo
               {<point name="input.master_input.open_detail_memo" mark="Y"/>}
               #END add-point
            END IF
 
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aint302_cl USING g_enterprise,g_inba_m.inbadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint302_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint302_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aint302_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aint302_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbadocno
            
            #add-point:AFTER FIELD inbadocno
            {<point name="input.a.inbadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbadocno
            #add-point:BEFORE FIELD inbadocno
            {<point name="input.b.inbadocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbadocno
            #add-point:ON CHANGE inbadocno
            {<point name="input.g.inbadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbasite
            #add-point:BEFORE FIELD inbasite
            {<point name="input.b.inbasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbasite
            
            #add-point:AFTER FIELD inbasite
            {<point name="input.a.inbasite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbasite
            #add-point:ON CHANGE inbasite
            {<point name="input.g.inbasite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbadocdt
            #add-point:BEFORE FIELD inbadocdt
            {<point name="input.b.inbadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbadocdt
            
            #add-point:AFTER FIELD inbadocdt
            {<point name="input.a.inbadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbadocdt
            #add-point:ON CHANGE inbadocdt
            {<point name="input.g.inbadocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba002
            #add-point:BEFORE FIELD inba002
            {<point name="input.b.inba002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba002
            
            #add-point:AFTER FIELD inba002
            {<point name="input.a.inba002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba002
            #add-point:ON CHANGE inba002
            {<point name="input.g.inba002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba003
            
            #add-point:AFTER FIELD inba003
            {<point name="input.a.inba003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba003
            #add-point:BEFORE FIELD inba003
            {<point name="input.b.inba003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba003
            #add-point:ON CHANGE inba003
            {<point name="input.g.inba003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba004
            
            #add-point:AFTER FIELD inba004
            {<point name="input.a.inba004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba004
            #add-point:BEFORE FIELD inba004
            {<point name="input.b.inba004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba004
            #add-point:ON CHANGE inba004
            {<point name="input.g.inba004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbastus
            #add-point:BEFORE FIELD inbastus
            {<point name="input.b.inbastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbastus
            
            #add-point:AFTER FIELD inbastus
            {<point name="input.a.inbastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbastus
            #add-point:ON CHANGE inbastus
            {<point name="input.g.inbastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba005
            #add-point:BEFORE FIELD inba005
            {<point name="input.b.inba005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba005
            
            #add-point:AFTER FIELD inba005
            {<point name="input.a.inba005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba005
            #add-point:ON CHANGE inba005
            {<point name="input.g.inba005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba006
            #add-point:BEFORE FIELD inba006
            {<point name="input.b.inba006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba006
            
            #add-point:AFTER FIELD inba006
            {<point name="input.a.inba006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba006
            #add-point:ON CHANGE inba006
            {<point name="input.g.inba006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba007
            
            #add-point:AFTER FIELD inba007
            {<point name="input.a.inba007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba007
            #add-point:BEFORE FIELD inba007
            {<point name="input.b.inba007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba007
            #add-point:ON CHANGE inba007
            {<point name="input.g.inba007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba008
            #add-point:BEFORE FIELD inba008
            {<point name="input.b.inba008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba008
            
            #add-point:AFTER FIELD inba008
            {<point name="input.a.inba008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba008
            #add-point:ON CHANGE inba008
            {<point name="input.g.inba008" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.inbadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbadocno
            #add-point:ON ACTION controlp INFIELD inbadocno
            {<point name="input.c.inbadocno" />}
            #END add-point
 
         #Ctrlp:input.c.inbasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbasite
            #add-point:ON ACTION controlp INFIELD inbasite
            {<point name="input.c.inbasite" />}
            #END add-point
 
         #Ctrlp:input.c.inbadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbadocdt
            #add-point:ON ACTION controlp INFIELD inbadocdt
            {<point name="input.c.inbadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.inba002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba002
            #add-point:ON ACTION controlp INFIELD inba002
            {<point name="input.c.inba002" />}
            #END add-point
 
         #Ctrlp:input.c.inba003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba003
            #add-point:ON ACTION controlp INFIELD inba003
            {<point name="input.c.inba003" />}
            #END add-point
 
         #Ctrlp:input.c.inba004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba004
            #add-point:ON ACTION controlp INFIELD inba004
            {<point name="input.c.inba004" />}
            #END add-point
 
         #Ctrlp:input.c.inbastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbastus
            #add-point:ON ACTION controlp INFIELD inbastus
            {<point name="input.c.inbastus" />}
            #END add-point
 
         #Ctrlp:input.c.inba005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba005
            #add-point:ON ACTION controlp INFIELD inba005
            {<point name="input.c.inba005" />}
            #END add-point
 
         #Ctrlp:input.c.inba006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba006
            #add-point:ON ACTION controlp INFIELD inba006
            {<point name="input.c.inba006" />}
            #END add-point
 
         #Ctrlp:input.c.inba007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba007
            #add-point:ON ACTION controlp INFIELD inba007
            {<point name="input.c.inba007" />}
            #END add-point
 
         #Ctrlp:input.c.inba008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba008
            #add-point:ON ACTION controlp INFIELD inba008
            {<point name="input.c.inba008" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_inba_m.inbadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO inba_t (inbaent,inbadocno,inbasite,inbadocdt,inba002,inba003,inba004,inbastus, 
                   inba005,inba006,inba007,inba008,inbaownid,inbacrtdp,inbaowndp,inbacrtdt,inbacrtid, 
                   inbamodid,inbacnfdt,inbamoddt,inbapstid,inbacnfid,inbapstdt)
               VALUES (g_enterprise,g_inba_m.inbadocno,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002, 
                   g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005,g_inba_m.inba006, 
                   g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
                   g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
                   g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_inba_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint302_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aint302_b_fill()
                  CALL aint302_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aint302_inba_t_mask_restore('restore_mask_o')
               
               UPDATE inba_t SET (inbadocno,inbasite,inbadocdt,inba002,inba003,inba004,inbastus,inba005, 
                   inba006,inba007,inba008,inbaownid,inbacrtdp,inbaowndp,inbacrtdt,inbacrtid,inbamodid, 
                   inbacnfdt,inbamoddt,inbapstid,inbacnfid,inbapstdt) = (g_inba_m.inbadocno,g_inba_m.inbasite, 
                   g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus, 
                   g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid, 
                   g_inba_m.inbacrtdp,g_inba_m.inbaowndp,g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid, 
                   g_inba_m.inbacnfdt,g_inba_m.inbamoddt,g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt) 

                WHERE inbaent = g_enterprise AND inbadocno = g_inbadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "inba_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aint302_inba_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_inba_m_t)
               LET g_log2 = util.JSON.stringify(g_inba_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_inbadocno_t = g_inba_m.inbadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="aint302.input.body" ver="53" ch="" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_inbb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION gen_detail
            LET g_action_choice="gen_detail"
            IF cl_auth_chk_act("gen_detail") THEN
               
               #add-point:ON ACTION gen_detail
               {<point name="input.detail_input.page1.gen_detail" mark="Y"/>}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION s_lot_sel1
            LET g_action_choice="s_lot_sel1"
            IF cl_auth_chk_act("s_lot_sel1") THEN
               
               #add-point:ON ACTION s_lot_sel1
               {<point name="input.detail_input.page1.s_lot_sel1" mark="Y"/>}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION open_detail_memo
            LET g_action_choice="open_detail_memo"
            IF cl_auth_chk_act("open_detail_memo") THEN
               
               #add-point:ON ACTION open_detail_memo
               {<point name="input.detail_input.page1.open_detail_memo" mark="Y"/>}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:3)
         ON ACTION s_lot_ins
            LET g_action_choice="s_lot_ins"
            IF cl_auth_chk_act("s_lot_ins") THEN
               
               #add-point:ON ACTION s_lot_ins
               {<point name="input.detail_input.page1.s_lot_ins" mark="Y"/>}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inbb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint302_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_inbb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint302_cl USING g_enterprise,g_inba_m.inbadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint302_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint302_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_inbb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_inbb_d[l_ac].inbbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_inbb_d_t.* = g_inbb_d[l_ac].*  #BACKUP
               LET g_inbb_d_o.* = g_inbb_d[l_ac].*  #BACKUP
               CALL aint302_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint302_set_no_entry_b(l_cmd)
               IF NOT aint302_lock_b("inbb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint302_bcl INTO g_inbb_d[l_ac].inbbsite,g_inbb_d[l_ac].inbbseq,g_inbb_d[l_ac].inbb001, 
                      g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb004,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008, 
                      g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb011, 
                      g_inbb_d[l_ac].inbb012,g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb014,g_inbb_d[l_ac].inbb015, 
                      g_inbb_d[l_ac].inbb016,g_inbb_d[l_ac].inbb017,g_inbb_d[l_ac].inbb018,g_inbb_d[l_ac].inbb019, 
                      g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb024,g_inbb_d[l_ac].inbb025,g_inbb_d[l_ac].inbb020, 
                      g_inbb_d[l_ac].inbb022,g_inbb_d[l_ac].inbb021
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_inbb_d_t.inbbseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_inbb_d_mask_o[l_ac].* =  g_inbb_d[l_ac].*
                  CALL aint302_inbb_t_mask()
                  LET g_inbb_d_mask_n[l_ac].* =  g_inbb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint302_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inbb_d[l_ac].* TO NULL 
            INITIALIZE g_inbb_d_t.* TO NULL 
            INITIALIZE g_inbb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_inbb_d[l_ac].inbb011 = "0"
      LET g_inbb_d[l_ac].inbb012 = "0"
      LET g_inbb_d[l_ac].inbb014 = "0"
      LET g_inbb_d[l_ac].inbb015 = "0"
      LET g_inbb_d[l_ac].inbb018 = "N"
      LET g_inbb_d[l_ac].inbb019 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_inbb_d_t.* = g_inbb_d[l_ac].*     #新輸入資料
            LET g_inbb_d_o.* = g_inbb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint302_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint302_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inbb_d[li_reproduce_target].* = g_inbb_d[li_reproduce].*
 
               LET g_inbb_d[li_reproduce_target].inbbseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM inbb_t 
             WHERE inbbent = g_enterprise AND inbbdocno = g_inba_m.inbadocno
 
               AND inbbseq = g_inbb_d[l_ac].inbbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inba_m.inbadocno
               LET gs_keys[2] = g_inbb_d[g_detail_idx].inbbseq
               CALL aint302_insert_b('inbb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_inbb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inbb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint302_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_inba_m.inbadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_inbb_d_t.inbbseq
 
            
               #刪除同層單身
               IF NOT aint302_delete_b('inbb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint302_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint302_key_delete_b(gs_keys,'inbb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint302_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aint302_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_inbb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_inbb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbbseq
            #add-point:BEFORE FIELD inbbseq
            {<point name="input.b.page1.inbbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbbseq
            
            #add-point:AFTER FIELD inbbseq
            {<point name="input.a.page1.inbbseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbbseq
            #add-point:ON CHANGE inbbseq
            {<point name="input.g.page1.inbbseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb001
            
            #add-point:AFTER FIELD inbb001
            {<point name="input.a.page1.inbb001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb001
            #add-point:BEFORE FIELD inbb001
            {<point name="input.b.page1.inbb001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb001
            #add-point:ON CHANGE inbb001
            {<point name="input.g.page1.inbb001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb002
            
            #add-point:AFTER FIELD inbb002
            {<point name="input.a.page1.inbb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb002
            #add-point:BEFORE FIELD inbb002
            {<point name="input.b.page1.inbb002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb002
            #add-point:ON CHANGE inbb002
            {<point name="input.g.page1.inbb002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb004
            
            #add-point:AFTER FIELD inbb004
            {<point name="input.a.page1.inbb004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb004
            #add-point:BEFORE FIELD inbb004
            {<point name="input.b.page1.inbb004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb004
            #add-point:ON CHANGE inbb004
            {<point name="input.g.page1.inbb004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb007
            
            #add-point:AFTER FIELD inbb007
            {<point name="input.a.page1.inbb007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb007
            #add-point:BEFORE FIELD inbb007
            {<point name="input.b.page1.inbb007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb007
            #add-point:ON CHANGE inbb007
            {<point name="input.g.page1.inbb007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb008
            
            #add-point:AFTER FIELD inbb008
            {<point name="input.a.page1.inbb008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb008
            #add-point:BEFORE FIELD inbb008
            {<point name="input.b.page1.inbb008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb008
            #add-point:ON CHANGE inbb008
            {<point name="input.g.page1.inbb008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb009
            #add-point:BEFORE FIELD inbb009
            {<point name="input.b.page1.inbb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb009
            
            #add-point:AFTER FIELD inbb009
            {<point name="input.a.page1.inbb009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb009
            #add-point:ON CHANGE inbb009
            {<point name="input.g.page1.inbb009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb010
            
            #add-point:AFTER FIELD inbb010
            {<point name="input.a.page1.inbb010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb010
            #add-point:BEFORE FIELD inbb010
            {<point name="input.b.page1.inbb010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb010
            #add-point:ON CHANGE inbb010
            {<point name="input.g.page1.inbb010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb003
            #add-point:BEFORE FIELD inbb003
            {<point name="input.b.page1.inbb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb003
            
            #add-point:AFTER FIELD inbb003
            {<point name="input.a.page1.inbb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb003
            #add-point:ON CHANGE inbb003
            {<point name="input.g.page1.inbb003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb011
            #add-point:BEFORE FIELD inbb011
            {<point name="input.b.page1.inbb011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb011
            
            #add-point:AFTER FIELD inbb011
            {<point name="input.a.page1.inbb011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb011
            #add-point:ON CHANGE inbb011
            {<point name="input.g.page1.inbb011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb012
            #add-point:BEFORE FIELD inbb012
            {<point name="input.b.page1.inbb012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb012
            
            #add-point:AFTER FIELD inbb012
            {<point name="input.a.page1.inbb012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb012
            #add-point:ON CHANGE inbb012
            {<point name="input.g.page1.inbb012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb013
            
            #add-point:AFTER FIELD inbb013
            {<point name="input.a.page1.inbb013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb013
            #add-point:BEFORE FIELD inbb013
            {<point name="input.b.page1.inbb013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb013
            #add-point:ON CHANGE inbb013
            {<point name="input.g.page1.inbb013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb014
            #add-point:BEFORE FIELD inbb014
            {<point name="input.b.page1.inbb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb014
            
            #add-point:AFTER FIELD inbb014
            {<point name="input.a.page1.inbb014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb014
            #add-point:ON CHANGE inbb014
            {<point name="input.g.page1.inbb014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb015
            #add-point:BEFORE FIELD inbb015
            {<point name="input.b.page1.inbb015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb015
            
            #add-point:AFTER FIELD inbb015
            {<point name="input.a.page1.inbb015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb015
            #add-point:ON CHANGE inbb015
            {<point name="input.g.page1.inbb015" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb016
            
            #add-point:AFTER FIELD inbb016
            {<point name="input.a.page1.inbb016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb016
            #add-point:BEFORE FIELD inbb016
            {<point name="input.b.page1.inbb016" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb016
            #add-point:ON CHANGE inbb016
            {<point name="input.g.page1.inbb016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb016_desc
            #add-point:BEFORE FIELD inbb016_desc
            {<point name="input.b.page1.inbb016_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb016_desc
            
            #add-point:AFTER FIELD inbb016_desc
            {<point name="input.a.page1.inbb016_desc" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb016_desc
            #add-point:ON CHANGE inbb016_desc
            {<point name="input.g.page1.inbb016_desc" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb017
            #add-point:BEFORE FIELD inbb017
            {<point name="input.b.page1.inbb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb017
            
            #add-point:AFTER FIELD inbb017
            {<point name="input.a.page1.inbb017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb017
            #add-point:ON CHANGE inbb017
            {<point name="input.g.page1.inbb017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb018
            #add-point:BEFORE FIELD inbb018
            {<point name="input.b.page1.inbb018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb018
            
            #add-point:AFTER FIELD inbb018
            {<point name="input.a.page1.inbb018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb018
            #add-point:ON CHANGE inbb018
            {<point name="input.g.page1.inbb018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb019
            #add-point:BEFORE FIELD inbb019
            {<point name="input.b.page1.inbb019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb019
            
            #add-point:AFTER FIELD inbb019
            {<point name="input.a.page1.inbb019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb019
            #add-point:ON CHANGE inbb019
            {<point name="input.g.page1.inbb019" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb023
            
            #add-point:AFTER FIELD inbb023
            {<point name="input.a.page1.inbb023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb023
            #add-point:BEFORE FIELD inbb023
            {<point name="input.b.page1.inbb023" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb023
            #add-point:ON CHANGE inbb023
            {<point name="input.g.page1.inbb023" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb024
            
            #add-point:AFTER FIELD inbb024
            {<point name="input.a.page1.inbb024" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb024
            #add-point:BEFORE FIELD inbb024
            {<point name="input.b.page1.inbb024" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb024
            #add-point:ON CHANGE inbb024
            {<point name="input.g.page1.inbb024" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb025
            
            #add-point:AFTER FIELD inbb025
            {<point name="input.a.page1.inbb025" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb025
            #add-point:BEFORE FIELD inbb025
            {<point name="input.b.page1.inbb025" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb025
            #add-point:ON CHANGE inbb025
            {<point name="input.g.page1.inbb025" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb020
            #add-point:BEFORE FIELD inbb020
            {<point name="input.b.page1.inbb020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb020
            
            #add-point:AFTER FIELD inbb020
            {<point name="input.a.page1.inbb020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb020
            #add-point:ON CHANGE inbb020
            {<point name="input.g.page1.inbb020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb022
            #add-point:BEFORE FIELD inbb022
            {<point name="input.b.page1.inbb022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb022
            
            #add-point:AFTER FIELD inbb022
            {<point name="input.a.page1.inbb022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb022
            #add-point:ON CHANGE inbb022
            {<point name="input.g.page1.inbb022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbb021
            #add-point:BEFORE FIELD inbb021
            {<point name="input.b.page1.inbb021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbb021
            
            #add-point:AFTER FIELD inbb021
            {<point name="input.a.page1.inbb021" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbb021
            #add-point:ON CHANGE inbb021
            {<point name="input.g.page1.inbb021" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.inbbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbbseq
            #add-point:ON ACTION controlp INFIELD inbbseq
            {<point name="input.c.page1.inbbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb001
            #add-point:ON ACTION controlp INFIELD inbb001
            {<point name="input.c.page1.inbb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb002
            #add-point:ON ACTION controlp INFIELD inbb002
            {<point name="input.c.page1.inbb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb004
            #add-point:ON ACTION controlp INFIELD inbb004
            {<point name="input.c.page1.inbb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb007
            #add-point:ON ACTION controlp INFIELD inbb007
            {<point name="input.c.page1.inbb007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb008
            #add-point:ON ACTION controlp INFIELD inbb008
            {<point name="input.c.page1.inbb008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb009
            #add-point:ON ACTION controlp INFIELD inbb009
            {<point name="input.c.page1.inbb009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb010
            #add-point:ON ACTION controlp INFIELD inbb010
            {<point name="input.c.page1.inbb010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb003
            #add-point:ON ACTION controlp INFIELD inbb003
            {<point name="input.c.page1.inbb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb011
            #add-point:ON ACTION controlp INFIELD inbb011
            {<point name="input.c.page1.inbb011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb012
            #add-point:ON ACTION controlp INFIELD inbb012
            {<point name="input.c.page1.inbb012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb013
            #add-point:ON ACTION controlp INFIELD inbb013
            {<point name="input.c.page1.inbb013" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb014
            #add-point:ON ACTION controlp INFIELD inbb014
            {<point name="input.c.page1.inbb014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb015
            #add-point:ON ACTION controlp INFIELD inbb015
            {<point name="input.c.page1.inbb015" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb016
            #add-point:ON ACTION controlp INFIELD inbb016
            {<point name="input.c.page1.inbb016" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb016_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb016_desc
            #add-point:ON ACTION controlp INFIELD inbb016_desc
            {<point name="input.c.page1.inbb016_desc" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb017
            #add-point:ON ACTION controlp INFIELD inbb017
            {<point name="input.c.page1.inbb017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb018
            #add-point:ON ACTION controlp INFIELD inbb018
            {<point name="input.c.page1.inbb018" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb019
            #add-point:ON ACTION controlp INFIELD inbb019
            {<point name="input.c.page1.inbb019" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb023
            #add-point:ON ACTION controlp INFIELD inbb023
            {<point name="input.c.page1.inbb023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb024
            #add-point:ON ACTION controlp INFIELD inbb024
            {<point name="input.c.page1.inbb024" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb025
            #add-point:ON ACTION controlp INFIELD inbb025
            {<point name="input.c.page1.inbb025" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb020
            #add-point:ON ACTION controlp INFIELD inbb020
            {<point name="input.c.page1.inbb020" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb022
            #add-point:ON ACTION controlp INFIELD inbb022
            {<point name="input.c.page1.inbb022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbb021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbb021
            #add-point:ON ACTION controlp INFIELD inbb021
            {<point name="input.c.page1.inbb021" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_inbb_d[l_ac].* = g_inbb_d_t.*
               CLOSE aint302_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_inbb_d[l_ac].inbbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_inbb_d[l_ac].* = g_inbb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aint302_inbb_t_mask_restore('restore_mask_o')
      
               UPDATE inbb_t SET (inbbdocno,inbbsite,inbbseq,inbb001,inbb002,inbb004,inbb007,inbb008, 
                   inbb009,inbb010,inbb003,inbb011,inbb012,inbb013,inbb014,inbb015,inbb016,inbb017,inbb018, 
                   inbb019,inbb023,inbb024,inbb025,inbb020,inbb022,inbb021) = (g_inba_m.inbadocno,g_inbb_d[l_ac].inbbsite, 
                   g_inbb_d[l_ac].inbbseq,g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002,g_inbb_d[l_ac].inbb004, 
                   g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009,g_inbb_d[l_ac].inbb010, 
                   g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb011,g_inbb_d[l_ac].inbb012,g_inbb_d[l_ac].inbb013, 
                   g_inbb_d[l_ac].inbb014,g_inbb_d[l_ac].inbb015,g_inbb_d[l_ac].inbb016,g_inbb_d[l_ac].inbb017, 
                   g_inbb_d[l_ac].inbb018,g_inbb_d[l_ac].inbb019,g_inbb_d[l_ac].inbb023,g_inbb_d[l_ac].inbb024, 
                   g_inbb_d[l_ac].inbb025,g_inbb_d[l_ac].inbb020,g_inbb_d[l_ac].inbb022,g_inbb_d[l_ac].inbb021) 

                WHERE inbbent = g_enterprise AND inbbdocno = g_inba_m.inbadocno 
 
                  AND inbbseq = g_inbb_d_t.inbbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inbb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_inbb_d[l_ac].* = g_inbb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inbb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_inbb_d[l_ac].* = g_inbb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inba_m.inbadocno
               LET gs_keys_bak[1] = g_inbadocno_t
               LET gs_keys[2] = g_inbb_d[g_detail_idx].inbbseq
               LET gs_keys_bak[2] = g_inbb_d_t.inbbseq
               CALL aint302_update_b('inbb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aint302_inbb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_inbb_d[g_detail_idx].inbbseq = g_inbb_d_t.inbbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_inba_m.inbadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_inbb_d_t.inbbseq
 
                  CALL aint302_key_update_b(gs_keys,'inbb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_inba_m),util.JSON.stringify(g_inbb_d_t)
               LET g_log2 = util.JSON.stringify(g_inba_m),util.JSON.stringify(g_inbb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint302_unlock_b("inbb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_inbb_d[li_reproduce_target].* = g_inbb_d[li_reproduce].*
 
               LET g_inbb_d[li_reproduce_target].inbbseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_inbb_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_inbb_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="aint302.input.other" ver="16" ch="" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD inbadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD inbbsite
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aint302.show" ver="27" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint302_show()
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint302_b_fill() #單身填充
      CALL aint302_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aint302_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_inba_m_mask_o.* =  g_inba_m.*
   CALL aint302_inba_t_mask()
   LET g_inba_m_mask_n.* =  g_inba_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inba_m.inbadocno,g_inba_m.inbadocno_desc,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002, 
       g_inba_m.inba003,g_inba_m.inba003_desc,g_inba_m.inba004,g_inba_m.inba004_desc,g_inba_m.inbastus, 
       g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba007_desc,g_inba_m.inba008,g_inba_m.inbaownid, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp,g_inba_m.inbaowndp_desc, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbacrtid_desc,g_inba_m.inbamodid,g_inba_m.inbamodid_desc, 
       g_inba_m.inbacnfdt,g_inba_m.inbamoddt,g_inba_m.inbapstid,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid, 
       g_inba_m.inbacnfid_desc,g_inba_m.inbapstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inba_m.inbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_inbb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint302_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint302.detail_show" ver="10" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint302_detail_show()
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint302.reproduce" ver="31" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aint302_reproduce()
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE inba_t.inbadocno 
   DEFINE l_oldno     LIKE inba_t.inbadocno 
 
   DEFINE l_master    RECORD LIKE inba_t.*
   DEFINE l_detail    RECORD LIKE inbb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_inba_m.inbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_inbadocno_t = g_inba_m.inbadocno
 
    
   LET g_inba_m.inbadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_inba_m.inbaownid = g_user
      LET g_inba_m.inbaowndp = g_dept
      LET g_inba_m.inbacrtid = g_user
      LET g_inba_m.inbacrtdp = g_dept 
      LET g_inba_m.inbacrtdt = cl_get_current()
      LET g_inba_m.inbamodid = g_user
      LET g_inba_m.inbamoddt = cl_get_current()
      LET g_inba_m.inbastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inba_m.inbastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_inba_m.inbadocno_desc = ''
   DISPLAY BY NAME g_inba_m.inbadocno_desc
 
   
   CALL aint302_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_inba_m.* TO NULL
      INITIALIZE g_inbb_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aint302_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint302_set_act_visible()   
   CALL aint302_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_inbadocno_t = g_inba_m.inbadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " inbaent = '" ||g_enterprise|| "' AND",
                      " inbadocno = '", g_inba_m.inbadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint302_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aint302_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aint302_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="aint302.detail_reproduce" ver="16" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint302_detail_reproduce()
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE inbb_t.*
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint302_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM inbb_t
    WHERE inbbent = g_enterprise AND inbbdocno = g_inbadocno_t
 
    INTO TEMP aint302_detail
 
   #將key修正為調整後   
   UPDATE aint302_detail 
      #更新key欄位
      SET inbbdocno = g_inba_m.inbadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO inbb_t SELECT * FROM aint302_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint302_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_inbadocno_t = g_inba_m.inbadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="aint302.delete" ver="42" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint302_delete()
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_inba_m.inbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aint302_cl USING g_enterprise,g_inba_m.inbadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint302_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint302_master_referesh USING g_inba_m.inbadocno INTO g_inba_m.inbadocno,g_inba_m.inbasite, 
       g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005, 
       g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
       g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt,g_inba_m.inba003_desc,g_inba_m.inba004_desc, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid_desc, 
       g_inba_m.inbamodid_desc,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid_desc
   
   #檢查是否允許此動作
   IF NOT aint302_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_inba_m_mask_o.* =  g_inba_m.*
   CALL aint302_inba_t_mask()
   LET g_inba_m_mask_n.* =  g_inba_m.*
   
   CALL aint302_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aint302_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_inbadocno_t = g_inba_m.inbadocno
 
 
      DELETE FROM inba_t
       WHERE inbaent = g_enterprise AND inbadocno = g_inba_m.inbadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_inba_m.inbadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM inbb_t
       WHERE inbbent = g_enterprise AND inbbdocno = g_inba_m.inbadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inbb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aint302_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_inbb_d.clear() 
 
     
      CALL aint302_ui_browser_refresh()  
      #CALL aint302_ui_headershow()  
      #CALL aint302_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aint302_browser_fill("")
         CALL aint302_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aint302_cl
 
   #功能已完成,通報訊息中心
   CALL aint302_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="aint302.b_fill" ver="40" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint302_b_fill()
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_inbb_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint302_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE inbbsite,inbbseq,inbb001,inbb002,inbb004,inbb007,inbb008,inbb009, 
             inbb010,inbb003,inbb011,inbb012,inbb013,inbb014,inbb015,inbb016,inbb017,inbb018,inbb019, 
             inbb023,inbb024,inbb025,inbb020,inbb022,inbb021 ,t1.imaal003 ,t2.imaal003 ,t3.inayl003 , 
             t4.oocal003 ,t5.oocal003 ,t6.pjbal003 ,t7.pjbbl004 ,t8.pjbml004 FROM inbb_t",   
                     " INNER JOIN inba_t ON inbadocno = inbbdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=inbb001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=inbb004 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t3 ON t3.inaylent='"||g_enterprise||"' AND t3.inayl001=inbb007 AND t3.inayl002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=inbb010 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=inbb013 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN pjbal_t t6 ON t6.pjbalent='"||g_enterprise||"' AND t6.pjbal001=inbb023 AND t6.pjbal002='"||g_dlang||"' ",
               " LEFT JOIN pjbbl_t t7 ON t7.pjbblent='"||g_enterprise||"' AND t7.pjbbl001=inbb023 AND t7.pjbbl002=inbb024 AND t7.pjbbl003='"||g_dlang||"' ",
               " LEFT JOIN pjbml_t t8 ON t8.pjbmlent='"||g_enterprise||"' AND t8.pjbml001=inbb023 AND t8.pjbml002=inbb025 AND t8.pjbml003='"||g_dlang||"' ",
 
                     " WHERE inbbent=? AND inbbdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY inbb_t.inbbseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint302_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aint302_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_inba_m.inbadocno
                                               
      FOREACH b_fill_cs INTO g_inbb_d[l_ac].inbbsite,g_inbb_d[l_ac].inbbseq,g_inbb_d[l_ac].inbb001,g_inbb_d[l_ac].inbb002, 
          g_inbb_d[l_ac].inbb004,g_inbb_d[l_ac].inbb007,g_inbb_d[l_ac].inbb008,g_inbb_d[l_ac].inbb009, 
          g_inbb_d[l_ac].inbb010,g_inbb_d[l_ac].inbb003,g_inbb_d[l_ac].inbb011,g_inbb_d[l_ac].inbb012, 
          g_inbb_d[l_ac].inbb013,g_inbb_d[l_ac].inbb014,g_inbb_d[l_ac].inbb015,g_inbb_d[l_ac].inbb016, 
          g_inbb_d[l_ac].inbb017,g_inbb_d[l_ac].inbb018,g_inbb_d[l_ac].inbb019,g_inbb_d[l_ac].inbb023, 
          g_inbb_d[l_ac].inbb024,g_inbb_d[l_ac].inbb025,g_inbb_d[l_ac].inbb020,g_inbb_d[l_ac].inbb022, 
          g_inbb_d[l_ac].inbb021,g_inbb_d[l_ac].inbb001_desc,g_inbb_d[l_ac].inbb004_desc,g_inbb_d[l_ac].inbb007_desc, 
          g_inbb_d[l_ac].inbb010_desc,g_inbb_d[l_ac].inbb013_desc,g_inbb_d[l_ac].inbb023_desc,g_inbb_d[l_ac].inbb024_desc, 
          g_inbb_d[l_ac].inbb025_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_inbb_d.deleteElement(g_inbb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint302_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_inbb_d.getLength()
      LET g_inbb_d_mask_o[l_ac].* =  g_inbb_d[l_ac].*
      CALL aint302_inbb_t_mask()
      LET g_inbb_d_mask_n[l_ac].* =  g_inbb_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aint302.delete_b" ver="19" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint302_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM inbb_t
       WHERE inbbent = g_enterprise AND
         inbbdocno = ps_keys_bak[1] AND inbbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_inbb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint302.insert_b" ver="20" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint302_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO inbb_t
                  (inbbent,
                   inbbdocno,
                   inbbseq
                   ,inbbsite,inbb001,inbb002,inbb004,inbb007,inbb008,inbb009,inbb010,inbb003,inbb011,inbb012,inbb013,inbb014,inbb015,inbb016,inbb017,inbb018,inbb019,inbb023,inbb024,inbb025,inbb020,inbb022,inbb021) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_inbb_d[g_detail_idx].inbbsite,g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002, 
                       g_inbb_d[g_detail_idx].inbb004,g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008, 
                       g_inbb_d[g_detail_idx].inbb009,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb003, 
                       g_inbb_d[g_detail_idx].inbb011,g_inbb_d[g_detail_idx].inbb012,g_inbb_d[g_detail_idx].inbb013, 
                       g_inbb_d[g_detail_idx].inbb014,g_inbb_d[g_detail_idx].inbb015,g_inbb_d[g_detail_idx].inbb016, 
                       g_inbb_d[g_detail_idx].inbb017,g_inbb_d[g_detail_idx].inbb018,g_inbb_d[g_detail_idx].inbb019, 
                       g_inbb_d[g_detail_idx].inbb023,g_inbb_d[g_detail_idx].inbb024,g_inbb_d[g_detail_idx].inbb025, 
                       g_inbb_d[g_detail_idx].inbb020,g_inbb_d[g_detail_idx].inbb022,g_inbb_d[g_detail_idx].inbb021) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inbb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_inbb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aint302.update_b" ver="21" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint302_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inbb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aint302_inbb_t_mask_restore('restore_mask_o')
               
      UPDATE inbb_t 
         SET (inbbdocno,
              inbbseq
              ,inbbsite,inbb001,inbb002,inbb004,inbb007,inbb008,inbb009,inbb010,inbb003,inbb011,inbb012,inbb013,inbb014,inbb015,inbb016,inbb017,inbb018,inbb019,inbb023,inbb024,inbb025,inbb020,inbb022,inbb021) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_inbb_d[g_detail_idx].inbbsite,g_inbb_d[g_detail_idx].inbb001,g_inbb_d[g_detail_idx].inbb002, 
                  g_inbb_d[g_detail_idx].inbb004,g_inbb_d[g_detail_idx].inbb007,g_inbb_d[g_detail_idx].inbb008, 
                  g_inbb_d[g_detail_idx].inbb009,g_inbb_d[g_detail_idx].inbb010,g_inbb_d[g_detail_idx].inbb003, 
                  g_inbb_d[g_detail_idx].inbb011,g_inbb_d[g_detail_idx].inbb012,g_inbb_d[g_detail_idx].inbb013, 
                  g_inbb_d[g_detail_idx].inbb014,g_inbb_d[g_detail_idx].inbb015,g_inbb_d[g_detail_idx].inbb016, 
                  g_inbb_d[g_detail_idx].inbb017,g_inbb_d[g_detail_idx].inbb018,g_inbb_d[g_detail_idx].inbb019, 
                  g_inbb_d[g_detail_idx].inbb023,g_inbb_d[g_detail_idx].inbb024,g_inbb_d[g_detail_idx].inbb025, 
                  g_inbb_d[g_detail_idx].inbb020,g_inbb_d[g_detail_idx].inbb022,g_inbb_d[g_detail_idx].inbb021)  

         WHERE inbbent = g_enterprise AND inbbdocno = ps_keys_bak[1] AND inbbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inbb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inbb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint302_inbb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint302.key_update_b" ver="7" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aint302_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aint302.key_delete_b" ver="8" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aint302_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint302.lock_b" ver="14" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint302_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理 
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL aint302_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "inbb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint302_bcl USING g_enterprise,
                                       g_inba_m.inbadocno,g_inbb_d[g_detail_idx].inbbseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint302_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint302.unlock_b" ver="10" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint302_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint302_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aint302.set_entry" ver="11" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint302_set_entry(p_cmd)
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理 
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("inbadocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("inbadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint302.set_no_entry" ver="12" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint302_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("inbadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("inbadocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("inbadocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint302.set_entry_b" ver="9" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint302_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理 
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aint302.set_no_entry_b" ver="9" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint302_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aint302.set_act_visible" ver="6" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aint302_set_act_visible()
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint302.set_act_no_visible" ver="6" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aint302_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint302.set_act_visible_b" ver="6" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aint302_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint302.set_act_no_visible_b" ver="6" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aint302_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint302.default_search" ver="16" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint302_default_search()
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " inbadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "inba_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "inbb_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aint302.state_change" ver="24" ch="" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:14)
#+ 確認碼變更 
PRIVATE FUNCTION aint302_statechange()
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_inba_m.inbadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aint302_cl USING g_enterprise,g_inba_m.inbadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint302_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aint302_master_referesh USING g_inba_m.inbadocno INTO g_inba_m.inbadocno,g_inba_m.inbasite, 
       g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005, 
       g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
       g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt,g_inba_m.inba003_desc,g_inba_m.inba004_desc, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid_desc, 
       g_inba_m.inbamodid_desc,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid_desc
 
   #檢查是否允許此動作
   IF NOT aint302_action_chk() THEN
      CLOSE aint302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_inba_m.inbadocno,g_inba_m.inbadocno_desc,g_inba_m.inbasite,g_inba_m.inbadocdt,g_inba_m.inba002, 
       g_inba_m.inba003,g_inba_m.inba003_desc,g_inba_m.inba004,g_inba_m.inba004_desc,g_inba_m.inbastus, 
       g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba007_desc,g_inba_m.inba008,g_inba_m.inbaownid, 
       g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp,g_inba_m.inbaowndp_desc, 
       g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbacrtid_desc,g_inba_m.inbamodid,g_inba_m.inbamodid_desc, 
       g_inba_m.inbacnfdt,g_inba_m.inbamoddt,g_inba_m.inbapstid,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid, 
       g_inba_m.inbacnfid_desc,g_inba_m.inbapstdt
 
   CASE g_inba_m.inbastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_inba_m.inbastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aint302_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint302_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aint302_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint302_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制
            {<point name="statechange.unposted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "S"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "Z"
      AND lc_state <> "X"
      ) OR 
      g_inba_m.inbastus = lc_state OR cl_null(lc_state) THEN
      CLOSE aint302_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_inba_m.inbamodid = g_user
   LET g_inba_m.inbamoddt = cl_get_current()
   LET g_inba_m.inbastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE inba_t 
      SET (inbastus,inbamodid,inbamoddt) 
        = (g_inba_m.inbastus,g_inba_m.inbamodid,g_inba_m.inbamoddt)     
    WHERE inbaent = g_enterprise AND inbadocno = g_inba_m.inbadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aint302_master_referesh USING g_inba_m.inbadocno INTO g_inba_m.inbadocno,g_inba_m.inbasite, 
          g_inba_m.inbadocdt,g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba004,g_inba_m.inbastus,g_inba_m.inba005, 
          g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbacrtdp,g_inba_m.inbaowndp, 
          g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbamodid,g_inba_m.inbacnfdt,g_inba_m.inbamoddt, 
          g_inba_m.inbapstid,g_inba_m.inbacnfid,g_inba_m.inbapstdt,g_inba_m.inba003_desc,g_inba_m.inba004_desc, 
          g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp_desc,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtid_desc, 
          g_inba_m.inbamodid_desc,g_inba_m.inbapstid_desc,g_inba_m.inbacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_inba_m.inbadocno,g_inba_m.inbadocno_desc,g_inba_m.inbasite,g_inba_m.inbadocdt, 
          g_inba_m.inba002,g_inba_m.inba003,g_inba_m.inba003_desc,g_inba_m.inba004,g_inba_m.inba004_desc, 
          g_inba_m.inbastus,g_inba_m.inba005,g_inba_m.inba006,g_inba_m.inba007,g_inba_m.inba007_desc, 
          g_inba_m.inba008,g_inba_m.inbaownid,g_inba_m.inbaownid_desc,g_inba_m.inbacrtdp,g_inba_m.inbacrtdp_desc, 
          g_inba_m.inbaowndp,g_inba_m.inbaowndp_desc,g_inba_m.inbacrtdt,g_inba_m.inbacrtid,g_inba_m.inbacrtid_desc, 
          g_inba_m.inbamodid,g_inba_m.inbamodid_desc,g_inba_m.inbacnfdt,g_inba_m.inbamoddt,g_inba_m.inbapstid, 
          g_inba_m.inbapstid_desc,g_inba_m.inbacnfid,g_inba_m.inbacnfid_desc,g_inba_m.inbapstdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aint302_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint302_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint302.idx_chk" ver="10" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aint302_idx_chk()
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_inbb_d.getLength() THEN
         LET g_detail_idx = g_inbb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_inbb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_inbb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint302.b_fill2" ver="15" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint302_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint302_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
]]>
  </section>
  <section id="aint302.fill_chk" ver="15" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint302_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint302.status_show" ver="4" ch="" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aint302_status_show()
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aint302.mask_functions" ver="1" ch="" status="" src="s" readonly="">
    <![CDATA[&include "erp/ain/aint302_mask.4gl"
]]>
  </section>
  <section id="aint302.signature" ver="11" ch="" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:9)
#+ BPM提交
PRIVATE FUNCTION aint302_send()
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理 
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aint302_show()
   CALL aint302_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_inba_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_inbb_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aint302_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint302_ui_headershow()
   CALL aint302_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:7)
#+ BPM抽單
PRIVATE FUNCTION aint302_draw_out()
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint302_ui_headershow()  
   CALL aint302_ui_detailshow()
 
   #add-point:Function後置處理 
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aint302.set_pk_array" ver="7" ch="" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:7)
#+ 給予pk_array內容
PRIVATE FUNCTION aint302_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_inba_m.inbadocno
   LET g_pk_array[1].column = 'inbadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint302.other_dialog" ver="2" ch="" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aint302.msgcentre_notify" ver="5" ch="" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:5)
PRIVATE FUNCTION aint302_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理 
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aint302_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_inba_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aint302.action_chk" ver="6" ch="" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aint302_action_chk()
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理)
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint302.other_function" ver="2" ch="" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
</add_points>
