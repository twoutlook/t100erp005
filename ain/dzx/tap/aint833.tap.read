<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint833" std_prog="aint833" erpver="1.0" module="AIN" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.page1.inpd014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd014  #顯示到畫面上
            NEXT FIELD inpd014                     #返回原欄位
    

]]>
  </point>
  <point name="detail_show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            LET g_ref_fields[3] = g_inpd_d[l_ac].inpd006
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd006_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd010_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd012_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd040
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd040_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd040_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd014_desc
]]>
  </point>
  <point name="detail_show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdcnfid_desc
]]>
  </point>
  <point name="detail_show.body3.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd3_d[l_ac].inpe038
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd3_d[l_ac].inpe038_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd3_d[l_ac].inpe038_desc
]]>
  </point>
  <point name="input.a.page1.inpd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd001   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaf001_7") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd001_desc

]]>
  </point>
  <point name="input.a.page1.inpd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd004  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaf001_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd004_desc

]]>
  </point>
  <point name="input.a.page1.inpd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_inpd_d[l_ac].inpd005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd005_desc

]]>
  </point>
  <point name="input.a.page1.inpd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_inpd_d[l_ac].inpd005
               LET g_chkparam.arg3 = g_inpd_d[l_ac].inpd006
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inab002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            LET g_ref_fields[3] = g_inpd_d[l_ac].inpd006
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd006_desc

]]>
  </point>
  <point name="input.a.page1.inpd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd010    
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd010_desc

]]>
  </point>
  <point name="input.a.page1.inpd012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd012) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd012   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd012_desc

]]>
  </point>
  <point name="input.a.page1.inpd014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd014_desc

]]>
  </point>
  <point name="input.a.page1.inpd040" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd040) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd040   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd040
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd040_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd040_desc

]]>
  </point>
  <point name="input.a.page1.inpddocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd_d[g_detail_idx].inpdsite != g_inpd_d_t.inpdsite OR g_inpd_d[g_detail_idx].inpddocno != g_inpd_d_t.inpddocno OR g_inpd_d[g_detail_idx].inpdseq != g_inpd_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inpdseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd_d[g_detail_idx].inpdsite != g_inpd_d_t.inpdsite OR g_inpd_d[g_detail_idx].inpddocno != g_inpd_d_t.inpddocno OR g_inpd_d[g_detail_idx].inpdseq != g_inpd_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inpdsite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd_d[g_detail_idx].inpdsite != g_inpd_d_t.inpdsite OR g_inpd_d[g_detail_idx].inpddocno != g_inpd_d_t.inpddocno OR g_inpd_d[g_detail_idx].inpdseq != g_inpd_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inpddocno_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd2_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd2_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd2_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd2_d[g_detail_idx].inpdsite != g_inpd2_d_t.inpdsite OR g_inpd2_d[g_detail_idx].inpddocno != g_inpd2_d_t.inpddocno OR g_inpd2_d[g_detail_idx].inpdseq != g_inpd2_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd2_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd2_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd2_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inpdseq_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd2_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd2_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd2_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd2_d[g_detail_idx].inpdsite != g_inpd2_d_t.inpdsite OR g_inpd2_d[g_detail_idx].inpddocno != g_inpd2_d_t.inpddocno OR g_inpd2_d[g_detail_idx].inpdseq != g_inpd2_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd2_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd2_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd2_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inpdsite_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd2_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd2_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd2_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd2_d[g_detail_idx].inpdsite != g_inpd2_d_t.inpdsite OR g_inpd2_d[g_detail_idx].inpddocno != g_inpd2_d_t.inpddocno OR g_inpd2_d[g_detail_idx].inpdseq != g_inpd2_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd2_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd2_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd2_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.inpe038" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd3_d[l_ac].inpe038
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd3_d[l_ac].inpe038_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd3_d[l_ac].inpe038_desc

]]>
  </point>
  <point name="input.a.page3.inpeseq2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd_d[g_detail_idx].inpdseq IS NOT NULL AND g_inpd3_d[g_detail_idx2].inpeseq2 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd_d[g_detail_idx].inpdsite != g_inpd_d[g_detail_idx].inpdsite OR g_inpd_d[g_detail_idx].inpddocno != g_inpd_d[g_detail_idx].inpddocno OR g_inpd_d[g_detail_idx].inpdseq != g_inpd_d[g_detail_idx].inpdseq OR g_inpd3_d[g_detail_idx2].inpeseq2 != g_inpd3_d_t.inpeseq2)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpe_t WHERE "||"inpeent = '" ||g_enterprise|| "' AND "||"inpesite = '"||g_inpd_d[g_detail_idx].inpdsite ||"' AND "|| "inpedocno = '"||g_inpd_d[g_detail_idx].inpddocno ||"' AND "|| "inpeseq = '"||g_inpd_d[g_detail_idx].inpdseq ||"' AND "|| "inpeseq2 = '"||g_inpd3_d[g_detail_idx2].inpeseq2 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.c.page1.inpd001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd001 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd001 TO inpd001              #

            NEXT FIELD inpd001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001_12()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd004 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd004 TO inpd004              #

            NEXT FIELD inpd004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaa001_12()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd005 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd005 TO inpd005              #

            NEXT FIELD inpd005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inab002_3()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd006 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd006 TO inpd006              #

            NEXT FIELD inpd006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd010 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd010 TO inpd010              #

            NEXT FIELD inpd010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd012" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd012 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd012 TO inpd012              #

            NEXT FIELD inpd012                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd014             #給予default值
            LET g_qryparam.default2 = "" #g_inpd_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd014 = g_qryparam.return1              
            #LET g_inpd_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_inpd_d[l_ac].inpd014 TO inpd014              #
            #DISPLAY g_inpd_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD inpd014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd040" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd040             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd040 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd040 TO inpd040              #

            NEXT FIELD inpd040                          #返回原欄位

]]>
  </point>
  <section id="aint833.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint833_b_fill(p_wc2)
   DEFINE p_wc2           STRING
   DEFINE l_ac_t          LIKE type_t.num5
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   LET g_sql = "SELECT  UNIQUE inpdsite,inpd009,inpddocno,inpdseq,inpd001,inpd005,inpd006,inpd007,inpd002, 
       inpd003,inpd004,inpd010,inpd036,inpd012,inpd037,inpd040,inpd041,inpd014,inpd015,inpdsite,inpddocno, 
       inpdseq,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt , 
       t1.imaal003 ,t2.imaal004 ,t3.inaa002 ,t5.imaal003 ,t6.oocal003 ,t7.oocal003 ,t8.oofa011 ,t9.oofa011 , 
       t10.ooefl003 ,t11.oofa011 ,t12.ooefl003 ,t13.oofa011 ,t14.oofa011 FROM inpd_t",
 
               " LEFT JOIN inpe_t ON inpeent = inpdent AND inpdsite = inpesite AND inpddocno = inpedocno AND inpdseq = inpeseq",
 
 
               "",
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=inpd001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=inpd001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inaa_t t3 ON t3.inaaent='"||g_enterprise||"' AND t3.inaasite=inpdsite AND t3.inaa001=inpd005  ",
               " LEFT JOIN imaal_t t5 ON t5.imaalent='"||g_enterprise||"' AND t5.imaal001=inpd004 AND t5.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent='"||g_enterprise||"' AND t6.oocal001=inpd010 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t7 ON t7.oocalent='"||g_enterprise||"' AND t7.oocal001=inpd012 AND t7.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=inpd040  ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=inpdownid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent='"||g_enterprise||"' AND t10.ooefl001=inpdowndp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=inpdcrtid  ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent='"||g_enterprise||"' AND t12.ooefl001=inpdcrtdp AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t13 ON t13.oofaent='"||g_enterprise||"' AND t13.oofa002='2' AND t13.oofa003=inpdmodid  ",
               " LEFT JOIN oofa_t t14 ON t14.oofaent='"||g_enterprise||"' AND t14.oofa002='2' AND t14.oofa003=inpdcnfid  ",
 
               " WHERE inpdent= ? AND 1=1 AND ", p_wc2
    
   LET g_sql = g_sql, cl_sql_add_filter("inpd_t"),
                      " ORDER BY inpd_t.inpdsite,inpd_t.inpddocno,inpd_t.inpdseq"
  
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE aint833_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aint833_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_inpd_d.clear()
   CALL g_inpd2_d.clear()   
   CALL g_inpd3_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_inpd_d[l_ac].inpdsite,g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpddocno, 
       g_inpd_d[l_ac].inpdseq,g_inpd_d[l_ac].inpd001,g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006,g_inpd_d[l_ac].inpd007, 
       g_inpd_d[l_ac].inpd002,g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004,g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd036, 
       g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd037,g_inpd_d[l_ac].inpd040,g_inpd_d[l_ac].inpd041,g_inpd_d[l_ac].inpd014, 
       g_inpd_d[l_ac].inpd015,g_inpd2_d[l_ac].inpdsite,g_inpd2_d[l_ac].inpddocno,g_inpd2_d[l_ac].inpdseq, 
       g_inpd2_d[l_ac].inpdownid,g_inpd2_d[l_ac].inpdowndp,g_inpd2_d[l_ac].inpdcrtid,g_inpd2_d[l_ac].inpdcrtdp, 
       g_inpd2_d[l_ac].inpdcrtdt,g_inpd2_d[l_ac].inpdmodid,g_inpd2_d[l_ac].inpdmoddt,g_inpd2_d[l_ac].inpdcnfid, 
       g_inpd2_d[l_ac].inpdcnfdt,g_inpd_d[l_ac].inpd001_desc,g_inpd_d[l_ac].inpd001_desc_desc,g_inpd_d[l_ac].inpd005_desc, 
       g_inpd_d[l_ac].inpd004_desc,g_inpd_d[l_ac].inpd010_desc,g_inpd_d[l_ac].inpd012_desc,g_inpd_d[l_ac].inpd040_desc, 
       g_inpd2_d[l_ac].inpdownid_desc,g_inpd2_d[l_ac].inpdowndp_desc,g_inpd2_d[l_ac].inpdcrtid_desc, 
       g_inpd2_d[l_ac].inpdcrtdp_desc,g_inpd2_d[l_ac].inpdmodid_desc,g_inpd2_d[l_ac].inpdcnfid_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aint833_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            CALL cl_err( "", 9035, 1 )
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
 
   CALL g_inpd_d.deleteElement(g_inpd_d.getLength())   
   CALL g_inpd2_d.deleteElement(g_inpd2_d.getLength())
   CALL g_inpd3_d.deleteElement(g_inpd3_d.getLength())
 
   
   #確定指標無超過上限, 超過則指到最後一筆
   IF g_detail_idx > g_inpd_d.getLength() THEN
      LET g_detail_idx = g_inpd_d.getLength()
   END IF
   
   #將key欄位填到每個page
   LET l_ac_t = g_detail_idx
   FOR g_detail_idx = 1 TO g_inpd_d.getLength()
      LET g_inpd2_d[g_detail_idx].inpdsite = g_inpd_d[g_detail_idx].inpdsite 
      LET g_inpd2_d[g_detail_idx].inpddocno = g_inpd_d[g_detail_idx].inpddocno 
      LET g_inpd2_d[g_detail_idx].inpdseq = g_inpd_d[g_detail_idx].inpdseq 
      #LET g_inpd3_d[g_detail_idx2].inpeseq2 = g_inpd_d[g_detail_idx].inpdsite 
 
   END FOR
   LET g_detail_idx = l_ac_t
   
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
    
   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE aint833_pb
   
   LET l_ac = 1
   IF g_inpd_d.getLength() > 0 THEN
      CALL aint833_fetch()
   END IF
   
   ERROR "" 
   
END FUNCTION
]]>
  </section>
  <section id="aint833.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint833_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " inpdsite = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " inpddocno = ", g_argv[02], " AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " inpdseq = ", g_argv[03], " AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc = ls_wc
   ELSE
      LET g_wc = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint833.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint833_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   IF NOT cl_ask_delete() THEN
      #不刪除
      RETURN
   END IF
   
   LET li_ac = ARR_CURR()
   LET g_inpd_d_t.* = g_inpd_d[li_ac].*
   
   CALL s_transaction_begin()  
   
   #add-point:delete段刪除前
   {<point name="delete.before_delete" mark="Y"/>}
   #end add-point 
   
   #刪除單頭
   DELETE FROM inpd_t 
         WHERE inpdsite = g_inpd_d_t.inpdsite
           AND inpddocno = g_inpd_d_t.inpddocno
           AND inpdseq = g_inpd_d_t.inpdseq
 
           
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
           
   IF SQLCA.sqlcode THEN
      CALL cl_err("inpd_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段刪除後
   {<point name="delete.after_delete"/>}
   #end add-point 
   
   #刪除單頭
   #add-point:delete段刪除前
   {<point name="delete.before_delete2" mark="Y"/>}
   #end add-point 
   DELETE FROM inpd_t 
         WHERE inpesite = g_inpd_d_t.inpdsite
           AND inpedocno = g_inpd_d_t.inpddocno
           AND inpeseq = g_inpd_d_t.inpdseq
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete2"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("inpd_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
      RETURN
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.after_delete2"/>}
   #end add-point 
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aint833.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint833_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "inpd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_delete" mark="Y"/>}
      #end add-point  
      DELETE FROM inpd_t
       WHERE inpdent = g_enterprise AND
         inpdsite = ps_keys_bak[1] AND inpddocno = ps_keys_bak[2] AND inpdseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_delete"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "inpe_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_delete2" mark="Y"/>}
      #end add-point  
      DELETE FROM inpe_t
       WHERE inpeent = g_enterprise AND
         inpesite = ps_keys_bak[1] AND inpedocno = ps_keys_bak[2] AND inpeseq = ps_keys_bak[3] AND inpeseq2 = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("inpe_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_delete2"/>}
      #end add-point  
      RETURN
   END IF
 
 
   
   #單頭刪除, 連帶刪除單身
   LET ls_group = "inpd_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.before_body_delete2" mark="Y"/>}
      #end add-point  
      DELETE FROM inpe_t
       WHERE inpeent = g_enterprise AND
         inpesite = ps_keys_bak[1] AND inpedocno = ps_keys_bak[2] AND inpeseq = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_body_delete2"/>}
      #end add-point  
      IF SQLCA.sqlcode THEN
         CALL cl_err("inpe_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.after_body_delete2"/>}
      #end add-point  
      RETURN
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aint833.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000012
#+ 
#+ Filename...: aint833
#+ Description: 現有庫存初盤二維護作業（多欄）
#+ Creator....: 01534(2014/05/30)
#+ Modifier...: 01534(2014/06/28)
#+ Buildtype..: 應用 t02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aint833.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aint833_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_inpd2_d[l_ac].inpdownid_desc = cl_get_username(g_inpd2_d[l_ac].inpdownid)
      #LET g_inpd2_d[l_ac].inpdowndp_desc = cl_get_deptname(g_inpd2_d[l_ac].inpdowndp)
      #LET g_inpd2_d[l_ac].inpdcrtid_desc = cl_get_username(g_inpd2_d[l_ac].inpdcrtid)
      #LET g_inpd2_d[l_ac].inpdcrtdp_desc = cl_get_deptname(g_inpd2_d[l_ac].inpdcrtdp)
      #LET g_inpd2_d[l_ac].inpdmodid_desc = cl_get_username(g_inpd2_d[l_ac].inpdmodid)
      #LET g_inpd2_d[l_ac].inpdcnfid_desc = cl_get_deptname(g_inpd2_d[l_ac].inpdcnfid)
      
 
 
   #帶出公用欄位reference值page3
   
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.body.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
   #add-point:show段單身reference
   {<point name="detail_show.body3.reference"/>}
   #end add-point
 
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aint833.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint833_fetch()
   DEFINE li_ac           LIKE type_t.num5
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point
   
   #判定單頭是否有資料
   IF g_detail_idx <= 0 OR g_inpd_d.getLength() = 0 THEN
      RETURN
   END IF
   
   #CALL g_inpd2_d.clear()
   CALL g_inpd3_d.clear()
 
   
   LET li_ac = l_ac 
   
   LET g_sql = "SELECT  UNIQUE inpeseq2,inpe008,inpe009,inpe012,inpe035,inpe010,inpe011,inpe037,inpe038 , 
       t15.oofa011 FROM inpe_t",    
               "",
                              " LEFT JOIN oofa_t t15 ON t15.oofaent='"||g_enterprise||"' AND t15.oofa002='2' AND t15.oofa003=inpe038  ",
 
               " WHERE inpeent=? AND inpesite=? AND inpedocno=? AND inpeseq=?"
 
   IF NOT cl_null(g_wc2_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY inpe_t.inpeseq2" 
                      
   #add-point:單身填充前
   {<point name="fetch.before_fill" />}
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料    
   PREPARE aint833_pb2 FROM g_sql
   DECLARE b_fill_curs2 CURSOR FOR aint833_pb2
   
   OPEN b_fill_curs2 USING g_enterprise,g_inpd_d[l_ac].inpdsite,g_inpd_d[l_ac].inpddocno,g_inpd_d[l_ac].inpdseq 

   LET l_ac = 1
   FOREACH b_fill_curs2 INTO g_inpd3_d[l_ac].inpeseq2,g_inpd3_d[l_ac].inpe008,g_inpd3_d[l_ac].inpe009, 
       g_inpd3_d[l_ac].inpe012,g_inpd3_d[l_ac].inpe035,g_inpd3_d[l_ac].inpe010,g_inpd3_d[l_ac].inpe011, 
       g_inpd3_d[l_ac].inpe037,g_inpd3_d[l_ac].inpe038,g_inpd3_d[l_ac].inpe038_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
      {<point name="fetch.fill2"/>}
      #end add-point
      
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
 
 
 
   #add-point:單身填充後
   {<point name="fetch.after_fill" />}
   #end add-point
   
   #CALL g_inpd2_d.deleteElement(g_inpd2_d.getLength())   
   CALL g_inpd3_d.deleteElement(g_inpd3_d.getLength())   
 
   
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="aint833.func_signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aint833.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
    
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_inpd_d RECORD
       inpdsite LIKE inpd_t.inpdsite, 
   inpd009 LIKE inpd_t.inpd009, 
   inpddocno LIKE inpd_t.inpddocno, 
   inpdseq LIKE inpd_t.inpdseq, 
   inpd001 LIKE inpd_t.inpd001, 
   inpd001_desc LIKE type_t.chr500, 
   inpd001_desc_desc LIKE type_t.chr500, 
   inpd005 LIKE type_t.chr10, 
   inpd005_desc LIKE type_t.chr500, 
   inpd006 LIKE inpd_t.inpd006, 
   inpd006_desc LIKE type_t.chr500, 
   inpd007 LIKE inpd_t.inpd007, 
   inpd002 LIKE inpd_t.inpd002, 
   inpd003 LIKE inpd_t.inpd003, 
   inpd004 LIKE inpd_t.inpd004, 
   inpd004_desc LIKE type_t.chr500, 
   inpd010 LIKE inpd_t.inpd010, 
   inpd010_desc LIKE type_t.chr500, 
   inpd036 LIKE inpd_t.inpd036, 
   inpd012 LIKE inpd_t.inpd012, 
   inpd012_desc LIKE type_t.chr500, 
   inpd037 LIKE inpd_t.inpd037, 
   inpd040 LIKE inpd_t.inpd040, 
   inpd040_desc LIKE type_t.chr500, 
   inpd041 LIKE inpd_t.inpd041, 
   inpd014 LIKE inpd_t.inpd014, 
   inpd014_desc LIKE type_t.chr80, 
   inpd015 LIKE inpd_t.inpd015
       END RECORD
PRIVATE TYPE type_g_inpd2_d RECORD
       inpdsite LIKE inpd_t.inpdsite, 
   inpddocno LIKE inpd_t.inpddocno, 
   inpdseq LIKE inpd_t.inpdseq, 
   inpdownid LIKE inpd_t.inpdownid, 
   inpdownid_desc LIKE type_t.chr500, 
   inpdowndp LIKE inpd_t.inpdowndp, 
   inpdowndp_desc LIKE type_t.chr500, 
   inpdcrtid LIKE inpd_t.inpdcrtid, 
   inpdcrtid_desc LIKE type_t.chr500, 
   inpdcrtdp LIKE inpd_t.inpdcrtdp, 
   inpdcrtdp_desc LIKE type_t.chr500, 
   inpdcrtdt DATETIME YEAR TO SECOND, 
   inpdmodid LIKE inpd_t.inpdmodid, 
   inpdmodid_desc LIKE type_t.chr500, 
   inpdmoddt DATETIME YEAR TO SECOND, 
   inpdcnfid LIKE inpd_t.inpdcnfid, 
   inpdcnfid_desc LIKE type_t.chr500, 
   inpdcnfdt DATETIME YEAR TO SECOND
       END RECORD
PRIVATE TYPE type_g_inpd3_d RECORD
       inpeseq2 LIKE inpe_t.inpeseq2, 
   inpe008 LIKE inpe_t.inpe008, 
   inpe009 LIKE inpe_t.inpe009, 
   inpe012 LIKE inpe_t.inpe012, 
   inpe035 LIKE inpe_t.inpe035, 
   inpe010 LIKE inpe_t.inpe010, 
   inpe011 LIKE inpe_t.inpe011, 
   inpe037 LIKE inpe_t.inpe037, 
   inpe038 LIKE inpe_t.inpe038, 
   inpe038_desc LIKE type_t.chr500
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_inpd_d
DEFINE g_master_t                   type_g_inpd_d
DEFINE g_inpd_d          DYNAMIC ARRAY OF type_g_inpd_d
DEFINE g_inpd_d_t        type_g_inpd_d
DEFINE g_inpd2_d   DYNAMIC ARRAY OF type_g_inpd2_d
DEFINE g_inpd2_d_t type_g_inpd2_d
DEFINE g_inpd3_d   DYNAMIC ARRAY OF type_g_inpd3_d
DEFINE g_inpd3_d_t type_g_inpd3_d
 
      
DEFINE g_wc                 STRING
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_detail_idx         LIKE type_t.num5              #單身所在筆數(第一階單身)
DEFINE g_detail_idx2        LIKE type_t.num5              #單身所在筆數(第二階單身)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身總筆數 (第一階單身)
DEFINE g_detail_cnt2        LIKE type_t.num5              #單身總筆數 (第二階單身)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_current_page       LIKE type_t.num5              #判斷單身筆數用
DEFINE g_loc                LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
DEFINE g_wc2_table2   STRING
 
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint833.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aint833_idx_chk(ps_loc)
   DEFINE ps_loc   LIKE type_t.chr10
   DEFINE li_idx   LIKE type_t.num5
   DEFINE li_cnt   LIKE type_t.num5
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_inpd_d.getLength() THEN
         LET g_detail_idx = g_inpd_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_inpd_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      LET li_idx = g_detail_idx
      LET li_cnt = g_inpd_d.getLength()
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_inpd2_d.getLength() THEN
         LET g_detail_idx = g_inpd2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_inpd2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      LET li_idx = g_detail_idx
      LET li_cnt = g_inpd2_d.getLength()
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx2 > g_inpd3_d.getLength() THEN
         LET g_detail_idx2 = g_inpd3_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_inpd3_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      LET li_idx = g_detail_idx2
      LET li_cnt = g_inpd3_d.getLength()
   END IF
 
    
   IF ps_loc = 'm' THEN
      DISPLAY li_idx TO FORMONLY.h_index
      DISPLAY li_cnt TO FORMONLY.h_count
      IF g_inpd3_d.getLength() = 0 THEN
         DISPLAY '' TO FORMONLY.idx
         DISPLAY '' TO FORMONLY.cnt
      ELSE
         DISPLAY 1 TO FORMONLY.idx
         DISPLAY g_inpd3_d.getLength() TO FORMONLY.cnt
      END IF
 
   ELSE
      DISPLAY li_idx TO FORMONLY.idx
      DISPLAY li_cnt TO FORMONLY.cnt
   END IF
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint833.init" ver="2" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aint833_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show = 1
   
   
   LET l_ac = 1
   
   
   
 
   #避免USER直接進入第二單身時無資料
   IF g_inpd_d.getLength() > 0 THEN
      LET g_master_t.* = g_inpd_d[1].*
      LET g_master.* = g_inpd_d[1].*
   END IF
 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aint833_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="aint833.input" ver="8" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint833_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inpdsite,inpd009,inpddocno,inpdseq,inpd001,inpd005,inpd006,inpd007,inpd002, 
       inpd003,inpd004,inpd010,inpd036,inpd012,inpd037,inpd040,inpd041,inpd014,inpd015,inpdsite,inpddocno, 
       inpdseq,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt  
       FROM inpd_t WHERE inpdent=? AND inpddocno=? AND inpdseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aint833_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inpeseq2,inpe008,inpe009,inpe012,inpe035,inpe010,inpe011,inpe037,inpe038  
       FROM inpe_t WHERE inpeent=? AND inpesite=? AND inpedocno=? AND inpeseq=? AND inpeseq2=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aint833_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   LET lb_reproduce = FALSE
   
   #add-point:input段修改前
   {<point name="input.before_input"/>}
   #end add-point
 
   LET INT_FLAG = 0
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_inpd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inpd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_current_page = 1
            IF p_cmd = 'u' THEN
               CALL aint833_b_fill(g_wc)
            END IF
            LET g_detail_cnt = g_inpd_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
            
         BEFORE ROW
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_master_t.* = g_inpd_d[l_ac].*
            LET g_master.* = g_inpd_d[l_ac].*
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_detail_idx = l_ac
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_inpd_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_inpd_d[l_ac].inpdsite IS NOT NULL
               AND g_inpd_d[l_ac].inpddocno IS NOT NULL
               AND g_inpd_d[l_ac].inpdseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_inpd_d_t.* = g_inpd_d[l_ac].*  #BACKUP
               IF NOT aint833_lock_b("inpd_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint833_bcl INTO g_inpd_d[l_ac].inpdsite,g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpddocno, 
                      g_inpd_d[l_ac].inpdseq,g_inpd_d[l_ac].inpd001,g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006, 
                      g_inpd_d[l_ac].inpd007,g_inpd_d[l_ac].inpd002,g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004, 
                      g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd036,g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd037, 
                      g_inpd_d[l_ac].inpd040,g_inpd_d[l_ac].inpd041,g_inpd_d[l_ac].inpd014,g_inpd_d[l_ac].inpd015 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_inpd_d_t.inpdsite,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aint833_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL aint833_set_entry_b(l_cmd)
            CALL aint833_set_no_entry_b(l_cmd)
            #add-point:input段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            #讀取對應的單身資料
            CALL aint833_fetch()
            CALL aint833_idx_chk('m')
        
         BEFORE INSERT
            
            #判斷能否在此頁面進行資料新增
            
            #清空下層單身
                        CALL g_inpd3_d.clear()
 
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inpd_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_inpd2_d[l_ac].inpdownid = g_user
      LET g_inpd2_d[l_ac].inpdowndp = g_dept
      LET g_inpd2_d[l_ac].inpdcrtid = g_user
      LET g_inpd2_d[l_ac].inpdcrtdp = g_dept 
      LET g_inpd2_d[l_ac].inpdcrtdt = cl_get_current()
      LET g_inpd2_d[l_ac].inpdmodid = ""
      LET g_inpd2_d[l_ac].inpdmoddt = ""
 
 
            
            LET g_inpd_d_t.* = g_inpd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint833_set_entry_b("a")
            CALL aint833_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inpd_d[li_reproduce_target].* = g_inpd_d[li_reproduce].*
               LET g_inpd2_d[li_reproduce_target].* = g_inpd2_d[li_reproduce].*
 
               LET g_inpd_d[g_inpd_d.getLength()].inpdsite = NULL
               LET g_inpd_d[g_inpd_d.getLength()].inpddocno = NULL
               LET g_inpd_d[g_inpd_d.getLength()].inpdseq = NULL
 
            END IF
            #add-point:input段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
            
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inpd_t 
             WHERE inpdent = g_enterprise AND inpdsite = g_inpd_d[l_ac].inpdsite 
                                       AND inpddocno = g_inpd_d[l_ac].inpddocno 
                                       AND inpdseq = g_inpd_d[l_ac].inpdseq 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
               CALL aint833_insert_b('inpd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_inpd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint833_b_fill(g_wc)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               LET g_master.* = g_inpd_d[l_ac].*
            END IF
              
         BEFORE DELETE  #是否取消單身
            IF l_cmd = 'a' AND g_inpd_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_inpd_d.deleteElement(l_ac)
               NEXT FIELD inpdsite
            END IF
            IF g_inpd_d[l_ac].inpdsite IS NOT NULL
               AND g_inpd_d_t.inpddocno IS NOT NULL
               AND g_inpd_d_t.inpdseq IS NOT NULL
 
               THEN
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point
               
               DELETE FROM inpd_t
                WHERE inpdent = g_enterprise AND 
                      inpdsite = g_inpd_d_t.inpdsite
                      AND inpddocno = g_inpd_d_t.inpddocno
                      AND inpdseq = g_inpd_d_t.inpdseq
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("inpd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aint833_bcl
               LET l_count = g_inpd_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aint833_delete_b('inpd_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD inpdsite
            #add-point:BEFORE FIELD inpdsite
            {<point name="input.b.page1.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdsite
            
            #add-point:AFTER FIELD inpdsite
            {<point name="input.a.page1.inpdsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpdsite
            #add-point:ON CHANGE inpdsite
            {<point name="input.g.page1.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd009
            #add-point:BEFORE FIELD inpd009
            {<point name="input.b.page1.inpd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd009
            
            #add-point:AFTER FIELD inpd009
            {<point name="input.a.page1.inpd009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd009
            #add-point:ON CHANGE inpd009
            {<point name="input.g.page1.inpd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpddocno
            
            #add-point:AFTER FIELD inpddocno
            {<point name="input.a.page1.inpddocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpddocno
            #add-point:BEFORE FIELD inpddocno
            {<point name="input.b.page1.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpddocno
            #add-point:ON CHANGE inpddocno
            {<point name="input.g.page1.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdseq
            #add-point:BEFORE FIELD inpdseq
            {<point name="input.b.page1.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdseq
            
            #add-point:AFTER FIELD inpdseq
            {<point name="input.a.page1.inpdseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpdseq
            #add-point:ON CHANGE inpdseq
            {<point name="input.g.page1.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd001
            
            #add-point:AFTER FIELD inpd001
            {<point name="input.a.page1.inpd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd001
            #add-point:BEFORE FIELD inpd001
            {<point name="input.b.page1.inpd001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd001
            #add-point:ON CHANGE inpd001
            {<point name="input.g.page1.inpd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd005
            
            #add-point:AFTER FIELD inpd005
            {<point name="input.a.page1.inpd005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd005
            #add-point:BEFORE FIELD inpd005
            {<point name="input.b.page1.inpd005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd005
            #add-point:ON CHANGE inpd005
            {<point name="input.g.page1.inpd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd006
            
            #add-point:AFTER FIELD inpd006
            {<point name="input.a.page1.inpd006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd006
            #add-point:BEFORE FIELD inpd006
            {<point name="input.b.page1.inpd006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd006
            #add-point:ON CHANGE inpd006
            {<point name="input.g.page1.inpd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd007
            #add-point:BEFORE FIELD inpd007
            {<point name="input.b.page1.inpd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd007
            
            #add-point:AFTER FIELD inpd007
            {<point name="input.a.page1.inpd007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd007
            #add-point:ON CHANGE inpd007
            {<point name="input.g.page1.inpd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd002
            #add-point:BEFORE FIELD inpd002
            {<point name="input.b.page1.inpd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd002
            
            #add-point:AFTER FIELD inpd002
            {<point name="input.a.page1.inpd002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd002
            #add-point:ON CHANGE inpd002
            {<point name="input.g.page1.inpd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd003
            #add-point:BEFORE FIELD inpd003
            {<point name="input.b.page1.inpd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd003
            
            #add-point:AFTER FIELD inpd003
            {<point name="input.a.page1.inpd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd003
            #add-point:ON CHANGE inpd003
            {<point name="input.g.page1.inpd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd004
            
            #add-point:AFTER FIELD inpd004
            {<point name="input.a.page1.inpd004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd004
            #add-point:BEFORE FIELD inpd004
            {<point name="input.b.page1.inpd004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd004
            #add-point:ON CHANGE inpd004
            {<point name="input.g.page1.inpd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd010
            
            #add-point:AFTER FIELD inpd010
            {<point name="input.a.page1.inpd010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd010
            #add-point:BEFORE FIELD inpd010
            {<point name="input.b.page1.inpd010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd010
            #add-point:ON CHANGE inpd010
            {<point name="input.g.page1.inpd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd036
            #add-point:BEFORE FIELD inpd036
            {<point name="input.b.page1.inpd036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd036
            
            #add-point:AFTER FIELD inpd036
            {<point name="input.a.page1.inpd036" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd036
            #add-point:ON CHANGE inpd036
            {<point name="input.g.page1.inpd036" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd012
            
            #add-point:AFTER FIELD inpd012
            {<point name="input.a.page1.inpd012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd012
            #add-point:BEFORE FIELD inpd012
            {<point name="input.b.page1.inpd012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd012
            #add-point:ON CHANGE inpd012
            {<point name="input.g.page1.inpd012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd037
            #add-point:BEFORE FIELD inpd037
            {<point name="input.b.page1.inpd037" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd037
            
            #add-point:AFTER FIELD inpd037
            {<point name="input.a.page1.inpd037" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd037
            #add-point:ON CHANGE inpd037
            {<point name="input.g.page1.inpd037" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd040
            
            #add-point:AFTER FIELD inpd040
            {<point name="input.a.page1.inpd040" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd040
            #add-point:BEFORE FIELD inpd040
            {<point name="input.b.page1.inpd040" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd040
            #add-point:ON CHANGE inpd040
            {<point name="input.g.page1.inpd040" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd041
            #add-point:BEFORE FIELD inpd041
            {<point name="input.b.page1.inpd041" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd041
            
            #add-point:AFTER FIELD inpd041
            {<point name="input.a.page1.inpd041" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd041
            #add-point:ON CHANGE inpd041
            {<point name="input.g.page1.inpd041" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd014
            
            #add-point:AFTER FIELD inpd014
            {<point name="input.a.page1.inpd014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd014
            #add-point:BEFORE FIELD inpd014
            {<point name="input.b.page1.inpd014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd014
            #add-point:ON CHANGE inpd014
            {<point name="input.g.page1.inpd014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd015
            #add-point:BEFORE FIELD inpd015
            {<point name="input.b.page1.inpd015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd015
            
            #add-point:AFTER FIELD inpd015
            {<point name="input.a.page1.inpd015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd015
            #add-point:ON CHANGE inpd015
            {<point name="input.g.page1.inpd015" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.inpdsite
         ON ACTION controlp INFIELD inpdsite
            #add-point:ON ACTION controlp INFIELD inpdsite
            {<point name="input.c.page1.inpdsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd009
         ON ACTION controlp INFIELD inpd009
            #add-point:ON ACTION controlp INFIELD inpd009
            {<point name="input.c.page1.inpd009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpddocno
         ON ACTION controlp INFIELD inpddocno
            #add-point:ON ACTION controlp INFIELD inpddocno
            {<point name="input.c.page1.inpddocno" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpdseq
         ON ACTION controlp INFIELD inpdseq
            #add-point:ON ACTION controlp INFIELD inpdseq
            {<point name="input.c.page1.inpdseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd001
         ON ACTION controlp INFIELD inpd001
            #add-point:ON ACTION controlp INFIELD inpd001
            {<point name="input.c.page1.inpd001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd005
         ON ACTION controlp INFIELD inpd005
            #add-point:ON ACTION controlp INFIELD inpd005
            {<point name="input.c.page1.inpd005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd006
         ON ACTION controlp INFIELD inpd006
            #add-point:ON ACTION controlp INFIELD inpd006
            {<point name="input.c.page1.inpd006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd007
         ON ACTION controlp INFIELD inpd007
            #add-point:ON ACTION controlp INFIELD inpd007
            {<point name="input.c.page1.inpd007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd002
         ON ACTION controlp INFIELD inpd002
            #add-point:ON ACTION controlp INFIELD inpd002
            {<point name="input.c.page1.inpd002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd003
         ON ACTION controlp INFIELD inpd003
            #add-point:ON ACTION controlp INFIELD inpd003
            {<point name="input.c.page1.inpd003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd004
         ON ACTION controlp INFIELD inpd004
            #add-point:ON ACTION controlp INFIELD inpd004
            {<point name="input.c.page1.inpd004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd010
         ON ACTION controlp INFIELD inpd010
            #add-point:ON ACTION controlp INFIELD inpd010
            {<point name="input.c.page1.inpd010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd036
         ON ACTION controlp INFIELD inpd036
            #add-point:ON ACTION controlp INFIELD inpd036
            {<point name="input.c.page1.inpd036" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd012
         ON ACTION controlp INFIELD inpd012
            #add-point:ON ACTION controlp INFIELD inpd012
            {<point name="input.c.page1.inpd012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd037
         ON ACTION controlp INFIELD inpd037
            #add-point:ON ACTION controlp INFIELD inpd037
            {<point name="input.c.page1.inpd037" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd040
         ON ACTION controlp INFIELD inpd040
            #add-point:ON ACTION controlp INFIELD inpd040
            {<point name="input.c.page1.inpd040" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd041
         ON ACTION controlp INFIELD inpd041
            #add-point:ON ACTION controlp INFIELD inpd041
            {<point name="input.c.page1.inpd041" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd014
         ON ACTION controlp INFIELD inpd014
            #add-point:ON ACTION controlp INFIELD inpd014
            {<point name="input.c.page1.inpd014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd015
         ON ACTION controlp INFIELD inpd015
            #add-point:ON ACTION controlp INFIELD inpd015
            {<point name="input.c.page1.inpd015" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_inpd_d[l_ac].* = g_inpd_d_t.*
               CLOSE aint833_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_inpd_d[l_ac].inpdsite,-263,1)
               LET g_inpd_d[l_ac].* = g_inpd_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_inpd2_d[l_ac].inpdmodid = g_user 
LET g_inpd2_d[l_ac].inpdmoddt = cl_get_current()
 
               
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE inpd_t SET (inpdsite,inpd009,inpddocno,inpdseq,inpd001,inpd005,inpd006,inpd007, 
                   inpd002,inpd003,inpd004,inpd010,inpd036,inpd012,inpd037,inpd040,inpd041,inpd014,inpd015, 
                   inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt) = (g_inpd_d[l_ac].inpdsite, 
                   g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpddocno,g_inpd_d[l_ac].inpdseq,g_inpd_d[l_ac].inpd001, 
                   g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006,g_inpd_d[l_ac].inpd007,g_inpd_d[l_ac].inpd002, 
                   g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004,g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd036, 
                   g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd037,g_inpd_d[l_ac].inpd040,g_inpd_d[l_ac].inpd041, 
                   g_inpd_d[l_ac].inpd014,g_inpd_d[l_ac].inpd015,g_inpd2_d[l_ac].inpdownid,g_inpd2_d[l_ac].inpdowndp, 
                   g_inpd2_d[l_ac].inpdcrtid,g_inpd2_d[l_ac].inpdcrtdp,g_inpd2_d[l_ac].inpdcrtdt,g_inpd2_d[l_ac].inpdmodid, 
                   g_inpd2_d[l_ac].inpdmoddt,g_inpd2_d[l_ac].inpdcnfid,g_inpd2_d[l_ac].inpdcnfdt)
                WHERE inpdent = g_enterprise AND
                  inpdsite = g_inpd_d_t.inpdsite #項次   
                  AND inpddocno = g_inpd_d_t.inpddocno  
                  AND inpdseq = g_inpd_d_t.inpdseq  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inpd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_inpd_d[l_ac].* = g_inpd_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_inpd_d[l_ac].* = g_inpd_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys_bak[1] = g_inpd_d_t.inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys_bak[2] = g_inpd_d_t.inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
               LET gs_keys_bak[3] = g_inpd_d_t.inpdseq
               CALL aint833_update_b('inpd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     
                     LET g_log1 = util.JSON.stringify(g_inpd_d_t)
                     LET g_log2 = util.JSON.stringify(g_inpd_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #若Key欄位有變動
               LET g_master.* = g_inpd_d[l_ac].*
               CALL aint833_key_update_b()
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aint833_unlock_b("inpd_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point   
              
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_inpd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inpd_d.getLength()+1
              
      END INPUT
      
 
      
      #實際單身段落
      INPUT ARRAY g_inpd3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inpd3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_detail_cnt = g_inpd3_d.getLength()
            LET g_current_page = 3
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
 
         BEFORE INSERT
            IF g_inpd_d.getLength() = 0 THEN
               CALL cl_err('','std-00013',1)
               NEXT FIELD inpdsite
            END IF 
            #判斷能否在此頁面進行資料新增
            
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inpd3_d[l_ac].* TO NULL 
            
            LET g_inpd3_d_t.* = g_inpd3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint833_set_entry_b("a")
            CALL aint833_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inpd3_d[li_reproduce_target].* = g_inpd3_d[li_reproduce].*
 
               LET g_inpd3_d[li_reproduce_target].inpeseq2 = NULL
            END IF
            #add-point:input段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW 
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            CALL s_transaction_begin()
            LET g_detail_cnt = g_inpd3_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_inpd3_d[l_ac].inpeseq2 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_inpd3_d_t.* = g_inpd3_d[l_ac].*  #BACKUP
               IF NOT aint833_lock_b("inpe_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint833_bcl2 INTO g_inpd3_d[l_ac].inpeseq2,g_inpd3_d[l_ac].inpe008,g_inpd3_d[l_ac].inpe009, 
                      g_inpd3_d[l_ac].inpe012,g_inpd3_d[l_ac].inpe035,g_inpd3_d[l_ac].inpe010,g_inpd3_d[l_ac].inpe011, 
                      g_inpd3_d[l_ac].inpe037,g_inpd3_d[l_ac].inpe038
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  CALL cl_show_fld_cont()
                  CALL aint833_detail_show()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            CALL aint833_set_entry_b(l_cmd)
            CALL aint833_set_no_entry_b(l_cmd)
            #add-point:input段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            CALL aint833_idx_chk('d')
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_inpd3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_inpd3_d.deleteElement(l_ac)
               NEXT FIELD inpeseq2
            END IF
            IF g_inpd3_d[l_ac].inpeseq2 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point  
               
               DELETE FROM inpe_t
                WHERE inpeent = g_enterprise AND
                   inpesite = g_master.inpdsite
                   AND inpedocno = g_master.inpddocno
                   AND inpeseq = g_master.inpdseq
                   AND inpeseq2 = g_inpd3_d_t.inpeseq2
                   
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point  
                   
               IF SQLCA.sqlcode THEN
                  CALL cl_err("inpd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aint833_bcl
               LET l_count = g_inpd_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
               LET gs_keys[4] = g_inpd3_d[g_detail_idx2].inpeseq2
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL aint833_delete_b('inpe_t',gs_keys,"'3'")
 
         AFTER INSERT    
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inpe_t 
             WHERE inpeent = g_enterprise AND
                   inpesite = g_master.inpdsite
                   AND inpedocno = g_master.inpddocno
                   AND inpeseq = g_master.inpdseq
                   AND inpeseq2 = g_inpd3_d[g_detail_idx2].inpeseq2
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
               LET gs_keys[4] = g_inpd3_d[g_detail_idx2].inpeseq2
               CALL aint833_insert_b('inpe_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_inpd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("inpe_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint833_b_fill(g_wc)
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_inpd3_d[l_ac].* = g_inpd3_d_t.*
               CLOSE aint833_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_inpd3_d[l_ac].* = g_inpd3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身3)
               
               
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE inpe_t SET (inpeseq2,inpe008,inpe009,inpe012,inpe035,inpe010,inpe011,inpe037,inpe038) = (g_inpd3_d[l_ac].inpeseq2, 
                   g_inpd3_d[l_ac].inpe008,g_inpd3_d[l_ac].inpe009,g_inpd3_d[l_ac].inpe012,g_inpd3_d[l_ac].inpe035, 
                   g_inpd3_d[l_ac].inpe010,g_inpd3_d[l_ac].inpe011,g_inpd3_d[l_ac].inpe037,g_inpd3_d[l_ac].inpe038)  
                   #自訂欄位頁簽
                WHERE inpeent = g_enterprise AND
                   inpesite = g_master.inpdsite
                   AND inpedocno = g_master.inpddocno
                   AND inpeseq = g_master.inpdseq
                   AND inpeseq2 = g_inpd3_d_t.inpeseq2
                   
               #add-point:單身修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                   
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inpe_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_inpd3_d[l_ac].* = g_inpd3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("inpe_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_inpd3_d[l_ac].* = g_inpd3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys_bak[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys_bak[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
               LET gs_keys_bak[3] = g_inpd_d[g_detail_idx].inpdseq
               LET gs_keys[4] = g_inpd3_d[g_detail_idx2].inpeseq2
               LET gs_keys_bak[4] = g_inpd3_d_t.inpeseq2
               CALL aint833_update_b('inpe_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_inpd3_d_t)
                     LET g_log2 = util.JSON.stringify(g_inpd3_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD inpeseq2
            #add-point:BEFORE FIELD inpeseq2
            {<point name="input.b.page3.inpeseq2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpeseq2
            
            #add-point:AFTER FIELD inpeseq2
            {<point name="input.a.page3.inpeseq2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpeseq2
            #add-point:ON CHANGE inpeseq2
            {<point name="input.g.page3.inpeseq2" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe008
            #add-point:BEFORE FIELD inpe008
            {<point name="input.b.page3.inpe008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe008
            
            #add-point:AFTER FIELD inpe008
            {<point name="input.a.page3.inpe008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpe008
            #add-point:ON CHANGE inpe008
            {<point name="input.g.page3.inpe008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe009
            #add-point:BEFORE FIELD inpe009
            {<point name="input.b.page3.inpe009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe009
            
            #add-point:AFTER FIELD inpe009
            {<point name="input.a.page3.inpe009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpe009
            #add-point:ON CHANGE inpe009
            {<point name="input.g.page3.inpe009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe012
            #add-point:BEFORE FIELD inpe012
            {<point name="input.b.page3.inpe012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe012
            
            #add-point:AFTER FIELD inpe012
            {<point name="input.a.page3.inpe012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpe012
            #add-point:ON CHANGE inpe012
            {<point name="input.g.page3.inpe012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe035
            #add-point:BEFORE FIELD inpe035
            {<point name="input.b.page3.inpe035" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe035
            
            #add-point:AFTER FIELD inpe035
            {<point name="input.a.page3.inpe035" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpe035
            #add-point:ON CHANGE inpe035
            {<point name="input.g.page3.inpe035" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe010
            #add-point:BEFORE FIELD inpe010
            {<point name="input.b.page3.inpe010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe010
            
            #add-point:AFTER FIELD inpe010
            {<point name="input.a.page3.inpe010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpe010
            #add-point:ON CHANGE inpe010
            {<point name="input.g.page3.inpe010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe011
            #add-point:BEFORE FIELD inpe011
            {<point name="input.b.page3.inpe011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe011
            
            #add-point:AFTER FIELD inpe011
            {<point name="input.a.page3.inpe011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpe011
            #add-point:ON CHANGE inpe011
            {<point name="input.g.page3.inpe011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe037
            #add-point:BEFORE FIELD inpe037
            {<point name="input.b.page3.inpe037" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe037
            
            #add-point:AFTER FIELD inpe037
            {<point name="input.a.page3.inpe037" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpe037
            #add-point:ON CHANGE inpe037
            {<point name="input.g.page3.inpe037" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpe038
            
            #add-point:AFTER FIELD inpe038
            {<point name="input.a.page3.inpe038" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpe038
            #add-point:BEFORE FIELD inpe038
            {<point name="input.b.page3.inpe038" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpe038
            #add-point:ON CHANGE inpe038
            {<point name="input.g.page3.inpe038" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.inpeseq2
         ON ACTION controlp INFIELD inpeseq2
            #add-point:ON ACTION controlp INFIELD inpeseq2
            {<point name="input.c.page3.inpeseq2" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe008
         ON ACTION controlp INFIELD inpe008
            #add-point:ON ACTION controlp INFIELD inpe008
            {<point name="input.c.page3.inpe008" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe009
         ON ACTION controlp INFIELD inpe009
            #add-point:ON ACTION controlp INFIELD inpe009
            {<point name="input.c.page3.inpe009" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe012
         ON ACTION controlp INFIELD inpe012
            #add-point:ON ACTION controlp INFIELD inpe012
            {<point name="input.c.page3.inpe012" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe035
         ON ACTION controlp INFIELD inpe035
            #add-point:ON ACTION controlp INFIELD inpe035
            {<point name="input.c.page3.inpe035" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe010
         ON ACTION controlp INFIELD inpe010
            #add-point:ON ACTION controlp INFIELD inpe010
            {<point name="input.c.page3.inpe010" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe011
         ON ACTION controlp INFIELD inpe011
            #add-point:ON ACTION controlp INFIELD inpe011
            {<point name="input.c.page3.inpe011" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe037
         ON ACTION controlp INFIELD inpe037
            #add-point:ON ACTION controlp INFIELD inpe037
            {<point name="input.c.page3.inpe037" />}
            #END add-point
 
         #Ctrlp:input.c.page3.inpe038
         ON ACTION controlp INFIELD inpe038
            #add-point:ON ACTION controlp INFIELD inpe038
            {<point name="input.c.page3.inpe038" />}
            #END add-point
 
 
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_inpd3_d[l_ac].* = g_inpd3_d_t.*
               END IF
               CLOSE aint833_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
 
            CALL aint833_unlock_b("inpe_t")
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
 
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_inpd3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inpd3_d.getLength()+1
 
      END INPUT
 
      
      DISPLAY ARRAY g_inpd2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            CALL aint833_b_fill(g_wc)
            LET g_current_page = 2
        
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            CALL cl_show_fld_cont() 
            CALL aint833_fetch()
            CALL aint833_idx_chk('m')
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
    
 
      
      #add-point:input段input_array"
      {<point name="input.more_inputarray"/>}
      #end add-point
      
      BEFORE DIALOG 
         LET g_curr_diag = ui.DIALOG.getCurrent()
         IF g_detail_idx > 0 THEN
            IF g_detail_idx > g_inpd_d.getLength() THEN
               LET g_detail_idx = g_inpd_d.getLength()
            END IF
            CALL DIALOG.setCurrentRow("s_detail1", g_detail_idx)
            LET l_ac = g_detail_idx
         END IF 
         LET g_detail_idx = l_ac
         #add-point:input段input_array"
         {<point name="input.before_dialog"/>}
         #end add-point
         #先確定單頭(第一單身)是否有資料
         IF g_inpd_d.getLength() > 0 THEN
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD inpdsite
               WHEN "s_detail2"
                  NEXT FIELD inpdsite_2
               WHEN "s_detail3"
                  NEXT FIELD inpeseq2
 
            END CASE
         ELSE
            NEXT FIELD inpdsite
         END IF
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:input段修改後
   {<point name="input.after_input"/>}
   #end add-point
 
   CLOSE aint833_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="aint833.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint833_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point 
 
   #add-point:insert段新增前
   {<point name="insert.before_insert"/>}
   #end add-point 
   
   #進入資料輸入段落
   CALL g_inpd_d.clear() 
   CALL g_inpd2_d.clear() 
   CALL g_inpd3_d.clear() 
 
   CALL aint833_input('a')
   
   CALL aint833_b_fill(g_wc)
   
   #add-point:insert段新增後
   {<point name="insert.after_insert"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint833.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint833_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point
 
   #判斷是否是同一群組的table
   LET ls_group = "inpd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point
      INSERT INTO inpd_t
                  (inpdent,
                   inpdsite,inpddocno,inpdseq
                   ,inpd009,inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd036,inpd012,inpd037,inpd040,inpd041,inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_inpd_d[g_detail_idx].inpd009,g_inpd_d[g_detail_idx].inpd001,g_inpd_d[g_detail_idx].inpd005, 
                       g_inpd_d[g_detail_idx].inpd006,g_inpd_d[g_detail_idx].inpd007,g_inpd_d[g_detail_idx].inpd002, 
                       g_inpd_d[g_detail_idx].inpd003,g_inpd_d[g_detail_idx].inpd004,g_inpd_d[g_detail_idx].inpd010, 
                       g_inpd_d[g_detail_idx].inpd036,g_inpd_d[g_detail_idx].inpd012,g_inpd_d[g_detail_idx].inpd037, 
                       g_inpd_d[g_detail_idx].inpd040,g_inpd_d[g_detail_idx].inpd041,g_inpd_d[g_detail_idx].inpd014, 
                       g_inpd_d[g_detail_idx].inpd015,g_inpd2_d[g_detail_idx].inpdownid,g_inpd2_d[g_detail_idx].inpdowndp, 
                       g_inpd2_d[g_detail_idx].inpdcrtid,g_inpd2_d[g_detail_idx].inpdcrtdp,g_inpd2_d[g_detail_idx].inpdcrtdt, 
                       g_inpd2_d[g_detail_idx].inpdmodid,g_inpd2_d[g_detail_idx].inpdmoddt,g_inpd2_d[g_detail_idx].inpdcnfid, 
                       g_inpd2_d[g_detail_idx].inpdcnfdt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("inpd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point
   END IF
   
 
   
   LET ls_group = "inpe_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point
      INSERT INTO inpe_t
                  (inpeent,
                   inpesite,inpedocno,inpeseq,inpeseq2
                   ,inpe008,inpe009,inpe012,inpe035,inpe010,inpe011,inpe037,inpe038) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_inpd3_d[g_detail_idx2].inpe008,g_inpd3_d[g_detail_idx2].inpe009,g_inpd3_d[g_detail_idx2].inpe012, 
                       g_inpd3_d[g_detail_idx2].inpe035,g_inpd3_d[g_detail_idx2].inpe010,g_inpd3_d[g_detail_idx2].inpe011, 
                       g_inpd3_d[g_detail_idx2].inpe037,g_inpd3_d[g_detail_idx2].inpe038)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         RETURN
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aint833.key_update_b" ver="1" status="" src="s">
    <![CDATA[#+ 單頭key欄位變動後, 連帶修正其他單身table
PRIVATE FUNCTION aint833_key_update_b()
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="key_update_b.define"/>}
   #end add-point
 
   #判斷key是否有改變
   LET lb_chk = TRUE
   
   IF g_master.inpdsite <> g_master_t.inpdsite THEN
      LET lb_chk = FALSE
   END IF
   IF g_master.inpddocno <> g_master_t.inpddocno THEN
      LET lb_chk = FALSE
   END IF
   IF g_master.inpdseq <> g_master_t.inpdseq THEN
      LET lb_chk = FALSE
   END IF
 
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #add-point:update_b段修改前
   {<point name="key_update_b.before_update2" mark="Y"/>}
   #end add-point
   
   UPDATE inpe_t 
      SET (inpesite,inpedocno,inpeseq) 
           = 
          (g_master.inpdsite,g_master.inpddocno,g_master.inpdseq) 
      WHERE 
           inpesite = g_master_t.inpdsite
           AND inpedocno = g_master_t.inpddocno
           AND inpeseq = g_master_t.inpdseq
 
           
   #add-point:update_b段修改中
   {<point name="key_update_b.m_update2"/>}
   #end add-point
           
   CASE
      #WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
      #   CALL cl_err("inpe_t","std-00009",1)
      #   CALL s_transaction_end('N','0')
      WHEN SQLCA.sqlcode #其他錯誤
         CALL cl_err("inpe_t",SQLCA.sqlcode,1)  
         CALL s_transaction_end('N','0')
      OTHERWISE
         #若有多語言table資料一同更新
         
   END CASE
   
   #add-point:update_b段修改後
   {<point name="key_update_b.after_update2"/>}
   #end add-point
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aint833.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint833_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aint833_b_fill(g_wc)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "inpd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aint833_bcl USING g_enterprise,
                                       g_inpd_d[g_detail_idx].inpdsite,g_inpd_d[g_detail_idx].inpddocno, 
                                           g_inpd_d[g_detail_idx].inpdseq
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aint833_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "inpe_t,"
   #僅鎖定自身table
   LET ls_group = "inpe_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint833_bcl2 USING g_enterprise,
                                             g_master.inpdsite,g_master.inpddocno,g_master.inpdseq,
                                             g_inpd3_d[g_detail_idx2].inpeseq2
      IF SQLCA.sqlcode THEN
         CALL cl_err("aint833_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint833.main" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint833 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint833_init()   
 
      #進入選單 Menu (="N")
      CALL aint833_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint833
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aint833.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint833_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
 
   #add-point:modify段新增前
   {<point name="modify.before_modify"/>}
   #end add-point 
   
   #進入資料輸入段落
   CALL aint833_input('u')
   
   #add-point:modify段新增後
   {<point name="modify.after_modify"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint833.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="aint833.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint833.query" ver="3" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint833_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_inpd_d.clear()
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET g_detail_idx = l_ac
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON inpdsite,inpd014,inpd015
           FROM s_detail1[1].inpdsite,s_detail1[1].inpd014,s_detail1[1].inpd015
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<inpdcrtdt>>----
         AFTER FIELD inpdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdmoddt>>----
         AFTER FIELD inpdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdcnfdt>>----
         AFTER FIELD inpdcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdpstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON NULL
           FROM NULL
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
 
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="query.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
         CALL cl_qbe_list('m') RETURNING ls_wc
 
      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = ls_wc
   ELSE
      LET g_detail_idx = 1
   END IF
   
   LET g_wc = g_wc_table 
 
              , " AND ", g_wc2_table2
 
 
        
   LET g_wc2 = " 1=1"
               , " AND ", g_wc2_table2
 
 
        
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
        
   LET g_error_show = 1
   CALL aint833_b_fill(g_wc)
   LET l_ac = g_detail_idx
   CALL aint833_fetch()
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="aint833.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint833_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
                                                                     
END FUNCTION                                                                    
]]>
  </section>
  <section id="aint833.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint833_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
                                                                          
END FUNCTION  
]]>
  </section>
  <section id="aint833.state_change" ver="1" status="" src="s">
    <![CDATA[    
]]>
  </section>
  <section id="aint833.ui_dialog" ver="3" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION aint833_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx   LIKE type_t.num5
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm() 
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      #add-point:ui_dialog段before while
      {<point name="ui_dialog.before_while"/>}
      #end add-point
   
      CALL aint833_b_fill(g_wc)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_inpd_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET g_current_page = 1
      
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_master.* = g_inpd_d[g_detail_idx].*
               CALL cl_show_fld_cont()
               CALL aint833_fetch()
               CALL aint833_idx_chk('m')
               
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_inpd2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET g_current_page = 2
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_master.* = g_inpd_d[g_detail_idx].*
               CALL cl_show_fld_cont() 
               CALL aint833_fetch()
               CALL aint833_idx_chk('m')
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
         
         DISPLAY ARRAY g_inpd3_d TO s_detail3.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET g_current_page = 3
         
            BEFORE ROW
               LET g_detail_idx2 = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx2
               CALL aint833_idx_chk('d')
               LET g_master.* = g_inpd_d[g_detail_idx].*
               CALL cl_show_fld_cont() 
               
            #自訂ACTION(detail_show,page_3)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            IF g_detail_idx > 0 THEN
               IF g_detail_idx > g_inpd_d.getLength() THEN
                  LET g_detail_idx = g_inpd_d.getLength()
               END IF
               CALL DIALOG.setCurrentRow("s_detail1", g_detail_idx)
               LET l_ac = g_detail_idx
            END IF 
            LET g_detail_idx = l_ac
            NEXT FIELD CURRENT
         
         AFTER DIALOG
            #add-point:ui_dialog段after dialog
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
         
         
         #+ 此段落由子樣板a43產生
         ON ACTION batch_confirm
            LET g_action_choice="batch_confirm"
            IF cl_auth_chk_act("batch_confirm") THEN
               
               #add-point:ON ACTION batch_confirm
               {<point name="menu.batch_confirm" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint833_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint833_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint833_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION store_query
            LET g_action_choice="store_query"
            IF cl_auth_chk_act("store_query") THEN
               
               #add-point:ON ACTION store_query
               {<point name="menu.store_query" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
           
         
      
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="aint833.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint833_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aint833_bcl
   END IF
   
 
    
   LET ls_group = "inpe_t,"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aint833_bcl2
   END IF
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aint833.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint833_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "inpd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "inpd_t" THEN
   
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
   
      UPDATE inpd_t 
         SET (inpdsite,inpddocno,inpdseq
              ,inpd009,inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd036,inpd012,inpd037,inpd040,inpd041,inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_inpd_d[g_detail_idx].inpd009,g_inpd_d[g_detail_idx].inpd001,g_inpd_d[g_detail_idx].inpd005, 
                  g_inpd_d[g_detail_idx].inpd006,g_inpd_d[g_detail_idx].inpd007,g_inpd_d[g_detail_idx].inpd002, 
                  g_inpd_d[g_detail_idx].inpd003,g_inpd_d[g_detail_idx].inpd004,g_inpd_d[g_detail_idx].inpd010, 
                  g_inpd_d[g_detail_idx].inpd036,g_inpd_d[g_detail_idx].inpd012,g_inpd_d[g_detail_idx].inpd037, 
                  g_inpd_d[g_detail_idx].inpd040,g_inpd_d[g_detail_idx].inpd041,g_inpd_d[g_detail_idx].inpd014, 
                  g_inpd_d[g_detail_idx].inpd015,g_inpd2_d[g_detail_idx].inpdownid,g_inpd2_d[g_detail_idx].inpdowndp, 
                  g_inpd2_d[g_detail_idx].inpdcrtid,g_inpd2_d[g_detail_idx].inpdcrtdp,g_inpd2_d[g_detail_idx].inpdcrtdt, 
                  g_inpd2_d[g_detail_idx].inpdmodid,g_inpd2_d[g_detail_idx].inpdmoddt,g_inpd2_d[g_detail_idx].inpdcnfid, 
                  g_inpd2_d[g_detail_idx].inpdcnfdt) 
         WHERE inpdsite = ps_keys_bak[1] AND inpddocno = ps_keys_bak[2] AND inpdseq = ps_keys_bak[3]
 
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
         
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("inpd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
   LET ls_group = "inpe_t,"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "inpe_t" THEN
   
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point    
      
      UPDATE inpe_t 
         SET (inpesite,inpedocno,inpeseq,inpeseq2
              ,inpe008,inpe009,inpe012,inpe035,inpe010,inpe011,inpe037,inpe038) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_inpd3_d[g_detail_idx2].inpe008,g_inpd3_d[g_detail_idx2].inpe009,g_inpd3_d[g_detail_idx2].inpe012, 
                  g_inpd3_d[g_detail_idx2].inpe035,g_inpd3_d[g_detail_idx2].inpe010,g_inpd3_d[g_detail_idx2].inpe011, 
                  g_inpd3_d[g_detail_idx2].inpe037,g_inpd3_d[g_detail_idx2].inpe038) 
         WHERE inpesite = ps_keys_bak[1] AND inpedocno = ps_keys_bak[2] AND inpeseq = ps_keys_bak[3] AND inpeseq2 = ps_keys_bak[4]
 
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point 
         
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("inpe_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("inpe_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point 
      
      RETURN
   END IF
 
 
   
END FUNCTION
]]>
  </section>
</add_points>
