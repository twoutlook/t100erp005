<add_points prog="aint161" std_prog="aint161" erpver="1.0" module="AIN" ver="4" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.aint161_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 单头相关ref栏位显示
################################################################################
PRIVATE FUNCTION aint161_desc()
   DEFINE l_success   LIKE type_t.num5                 
   DEFINE l_slip      STRING
   IF NOT cl_null(g_inbd_m.inbddocno) THEN
      CALL s_aooi200_get_slip(g_inbd_m.inbddocno) RETURNING l_success,l_slip
      CALL s_aooi200_get_slip_desc(l_slip) RETURNING g_inbd_m.oobxl003
      DISPLAY BY NAME g_inbd_m.oobxl003
   END IF
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inbd_m.inbd001
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_inbd_m.inbd001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_inbd_m.inbd001_desc
 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inbd_m.inbd002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inbd_m.inbd002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_inbd_m.inbd002_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inbd_m.inbd005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '"||g_acc||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inbd_m.inbd005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_inbd_m.inbd005_desc
END FUNCTION]]>
</point>
  <point name="function.aint161_b_inbe_where" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 查询时组的where条件
################################################################################
PRIVATE FUNCTION aint161_b_inbe_where(p_field,p_inag001,p_inag002,p_inag003,p_inag004,p_inag005,p_inag006,p_inag007)
DEFINE p_field                  LIKE type_t.chr10
DEFINE p_inag001                LIKE inag_t.inag001
DEFINE p_inag002                LIKE inag_t.inag002
DEFINE p_inag003                LIKE inag_t.inag003
DEFINE p_inag004                LIKE inag_t.inag004
DEFINE p_inag005                LIKE inag_t.inag005
DEFINE p_inag006                LIKE inag_t.inag006
DEFINE p_inag007                LIKE inag_t.inag007
DEFINE g_wc                     STRING

   LET g_wc = " inag019 = 'Y' "
   IF p_inag001 IS NOT NULL AND p_field != 'inag001' THEN
      LET g_wc = g_wc," AND inag001='",p_inag001,"'"
   END IF
   IF p_inag002 IS NOT NULL AND p_field != 'inag002' THEN
      LET g_wc = g_wc," AND inag002='",p_inag002,"'"
   END IF
   IF p_inag003 IS NOT NULL AND p_field != 'inag003' THEN
      LET g_wc = g_wc," AND inag003='",p_inag003,"'"
   END IF
   IF p_inag004 IS NOT NULL AND p_field != 'inag004' THEN
      LET g_wc = g_wc," AND inag004='",p_inag004,"'"
   END IF
   IF p_inag005 IS NOT NULL AND p_field != 'inag005' THEN
      LET g_wc = g_wc," AND inag005='",p_inag005,"'"
   END IF
   IF p_inag006 IS NOT NULL AND p_field != 'inag006' THEN
      LET g_wc = g_wc," AND inag006='",p_inag006,"'"
   END IF
   IF p_inag007 IS NOT NULL AND p_field != 'inag007' THEN
      LET g_wc = g_wc," AND inag007='",p_inag007,"'"
   END IF
   RETURN g_wc
END FUNCTION]]>
</point>
  <point name="function.aint161_b_desc" cite_std="N" status="" ver="2" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 单身ref栏位显示
################################################################################
PRIVATE FUNCTION aint161_b_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inbe_d[l_ac].inbe001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inbe_d[l_ac].inbe001_desc = '', g_rtn_fields[1] , ''
   LET g_inbe_d[l_ac].inbe001_desc_desc = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_inbe_d[l_ac].inbe001_desc,g_inbe_d[l_ac].inbe001_desc_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inbe_d[l_ac].inbe007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inbe_d[l_ac].inbe007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_inbe_d[l_ac].inbe007_desc
   
   IF g_inbe_d[l_ac].inbe004 IS NOT NULL THEN
      LET g_inbe_d[l_ac].inbe004_desc = s_desc_get_stock_desc(g_site,g_inbe_d[l_ac].inbe004) 
      DISPLAY BY NAME g_inbe_d[l_ac].inbe004_desc
   END IF
   
   IF g_inbe_d[l_ac].inbe004 IS NOT NULL AND g_inbe_d[l_ac].inbe005 IS NOT NULL THEN
      LET g_inbe_d[l_ac].inbe005_desc = s_desc_get_locator_desc(g_site,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005)  
      DISPLAY BY NAME g_inbe_d[l_ac].inbe005_desc
   END IF
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inbe_d[l_ac].inbe008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '"||g_acc||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inbe_d[l_ac].inbe008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_inbe_d[l_ac].inbe008_desc
END FUNCTION]]>
</point>
  <point name="function.aint161_b_inbe" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: AFTER FIELD栏位检查
################################################################################
PRIVATE FUNCTION aint161_b_inbe(p_inag001,p_inag002,p_inag003,p_inag004,p_inag005,p_inag006,p_inag007)
DEFINE p_inag001                LIKE inag_t.inag001
DEFINE p_inag002                LIKE inag_t.inag002
DEFINE p_inag003                LIKE inag_t.inag003
DEFINE p_inag004                LIKE inag_t.inag004
DEFINE p_inag005                LIKE inag_t.inag005
DEFINE p_inag006                LIKE inag_t.inag006
DEFINE p_inag007                LIKE inag_t.inag007
DEFINE l_sql                    STRING
DEFINE l_n                      LIKE type_t.num5

   LET l_sql = "SELECT COUNT(*) FROM inag_t WHERE inagent=",g_enterprise," AND inagsite='",g_site,"' AND inag008 >0 AND inag019 = 'Y' "
   IF p_inag001 IS NOT NULL THEN
      LET l_sql = l_sql," AND inag001='",p_inag001,"'"
   END IF
   IF p_inag002 IS NOT NULL THEN
      LET l_sql = l_sql," AND inag002='",p_inag002,"'"
   END IF
   IF p_inag003 IS NOT NULL THEN
      LET l_sql = l_sql," AND inag003='",p_inag003,"'"
   END IF
   IF p_inag004 IS NOT NULL THEN
      LET l_sql = l_sql," AND inag004='",p_inag004,"'"
   END IF
   IF p_inag005 IS NOT NULL THEN
      LET l_sql = l_sql," AND inag005='",p_inag005,"'"
   END IF
   IF p_inag006 IS NOT NULL THEN
      LET l_sql = l_sql," AND inag006='",p_inag006,"'"
   END IF
   IF p_inag007 IS NOT NULL THEN
      LET l_sql = l_sql," AND inag007='",p_inag007,"'"
   END IF
   PREPARE aint161_b_inbe_pre FROM l_sql
   EXECUTE aint161_b_inbe_pre INTO l_n
   IF l_n = 0 THEN
      CALL cl_err(p_inag001,'ain-00160',1)
      RETURN FALSE
   END IF
   RETURN TRUE

END FUNCTION]]>
</point>
  <point name="function.aint161_ins_inbe" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 根據來源留置單號插入單身
################################################################################
PRIVATE FUNCTION aint161_ins_inbe()
DEFINE l_sql      STRING
DEFINE l_inbe     RECORD LIKE inbe_t.*
    LET l_sql = "SELECT * FROM inbe_t ", 
                " WHERE inbeent = ",g_enterprise," AND inbesite = '",g_site,"' AND inbedocno = '",g_inbd_m.inbd004,"'" 
    PREPARE aint161_ins_pre FROM l_sql
    DECLARE aint161_ins_cs CURSOR FOR aint161_ins_pre 
    FOREACH aint161_ins_cs INTO l_inbe.*
       IF SQLCA.sqlcode THEN
          CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
          EXIT FOREACH
       END IF
       SELECT MAX(inbeseq)+1 INTO l_inbe.inbeseq FROM inbe_t WHERE inbeent=g_enterprise AND inbesite=g_site AND inbedocno=g_inbd_m.inbddocno
       IF cl_null(l_inbe.inbeseq) THEN 
          LET l_inbe.inbeseq = 1
       END IF
       LET l_inbe.inbedocno = g_inbd_m.inbddocno
       LET l_inbe.inbe008 = g_inbd_m.inbd005
       INSERT INTO inbe_t VALUES l_inbe.*
       IF SQLCA.sqlcode THEN
          CALL cl_err("ins inbe_t",SQLCA.sqlcode,1)
          RETURN FALSE
       END IF
    END FOREACH 
    RETURN TRUE    
END FUNCTION]]>
</point>
  <point name="function.aint161_inag_chk" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
################################################################################
# Descriptions...: 確認時需檢核輸入的條件在對應的inag_t資料中是否已經有留置的資料，若完全沒有則不允許新增成功
################################################################################
PRIVATE FUNCTION aint161_inag_chk()
DEFINE l_sql    STRING 
DEFINE l_inbe   RECORD
       inbe001  LIKE inbe_t.inbe001,
       inbe002  LIKE inbe_t.inbe002,
       inbe003  LIKE inbe_t.inbe003,
       inbe004  LIKE inbe_t.inbe004,
       inbe005  LIKE inbe_t.inbe005,
       inbe006  LIKE inbe_t.inbe006,
       inbe007  LIKE inbe_t.inbe007
                END RECORD
   LET l_sql = " SELECT inbe001,inbe002,inbe003,inbe004,inbe005,inbe006,inbe007 FROM inbe_t",
                " WHERE inbeent = ",g_enterprise," AND inbesite = '",g_site,"' AND inbedocno = '",g_inbd_m.inbddocno,"'"
   PREPARE aint161_chk_pre FROM l_sql
   DECLARE aint161_chk_cs CURSOR FOR aint161_chk_pre 
   FOREACH aint161_chk_cs INTO l_inbe.*    
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF        
      IF NOT aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
         RETURN FALSE
      END IF
   END FOREACH
   RETURN TRUE   
END FUNCTION]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_wc = g_wc," AND inbd003 = '2' "
   LET g_wc = g_wc, " AND inbdsite = '",g_site,"' "
   LET l_wc = g_wc.trim()]]>
</point>
  <point name="construct.c.inbd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbd001  #顯示到畫面上
            NEXT FIELD inbd001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbd002  #顯示到畫面上
            NEXT FIELD inbd002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbd004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " inbd003 = '1' AND inbdstus = 'Y' "
            CALL q_inbddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbd004  #顯示到畫面上
            NEXT FIELD inbd004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbd005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbd005  #顯示到畫面上
            NEXT FIELD inbd005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbdcnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbdcnfid  #顯示到畫面上
            NEXT FIELD inbdcnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbdcrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbdcrtdp  #顯示到畫面上
            NEXT FIELD inbdcrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbdcrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbdcrtid  #顯示到畫面上
            NEXT FIELD inbdcrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbddocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " inbd003 = '2' "
            CALL q_inbddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbddocno  #顯示到畫面上
            NEXT FIELD inbddocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbdmodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbdmodid  #顯示到畫面上
            NEXT FIELD inbdmodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbdowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbdowndp  #顯示到畫面上
            NEXT FIELD inbdowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.inbdownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbdownid  #顯示到畫面上
            NEXT FIELD inbdownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.inbe001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbe001  #顯示到畫面上
            NEXT FIELD inbe001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.inbe003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag003_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbe003  #顯示到畫面上
            NEXT FIELD inbe003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.inbe004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag004_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbe004  #顯示到畫面上
            NEXT FIELD inbe004                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.inbe005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag005_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbe005  #顯示到畫面上
            NEXT FIELD inbe005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.inbe006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag006_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbe006  #顯示到畫面上
            NEXT FIELD inbe006                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.inbe007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inag007()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbe007  #顯示到畫面上
            NEXT FIELD inbe007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.inbe008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbe008  #顯示到畫面上
            NEXT FIELD inbe008                     #返回原欄位
    

]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF NOT s_aooi200_del_docno(g_inbd_m.inbddocno,g_inbd_m.inbddocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF NOT cl_null(g_inbd_m.inbd004) THEN   
      IF cl_null(g_inbd_m_t.inbd004) OR g_inbd_m.inbd004 <> g_inbd_m_t.inbd004 THEN            
          IF cl_ask_confirm('ain-00168') THEN
            DELETE FROM inbe_t
             WHERE inbeent = g_enterprise AND inbedocno = g_inbd_m.inbddocno
            IF aint161_ins_inbe() THEN
               CALL aint161_b_fill()
               CALL aint161_b_desc()  
               RETURN               
            END IF 
         END IF
      END IF                   
   END IF ]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_inbd_m.inbdstus != 'N' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   END IF]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_acc                 LIKE gzcb_t.gzcb007]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="4" src="s" new="N" mark_hard="N">
<![CDATA[   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("inbe002",FALSE)
   END IF]]>
</point>
  <point name="input.a.inbd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint161_desc()
            IF NOT cl_null(g_inbd_m.inbd001) AND (cl_null(g_inbd_m_t.inbd001) OR g_inbd_m_t.inbd001 != g_inbd_m.inbd001) THEN  
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_inbd_m.inbd001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  SELECT ooag003 INTO g_inbd_m.inbd002 FROM ooag_t WHERE ooagent = g_enterprise AND ooag001 = g_inbd_m.inbd001
                  DISPLAY BY NAME g_inbd_m.inbd002
                  CALL aint161_desc() 
               ELSE
                  LET g_inbd_m.inbd001 = g_inbd_m_t.inbd001
                  CALL aint161_desc()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
</point>
  <point name="input.a.inbd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint161_desc()
            IF NOT cl_null(g_inbd_m.inbd002) AND (cl_null(g_inbd_m_t.inbd002) OR g_inbd_m_t.inbd002 != g_inbd_m.inbd002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_inbd_m.inbd002
               LET g_chkparam.arg2 = g_inbd_m.inbddocdt
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  LET g_inbd_m.inbd002 = g_inbd_m_t.inbd002
                  CALL aint161_desc()
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
]]>
</point>
  <point name="input.a.inbd004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_inbd_m.inbd004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_inbd_m.inbd004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inbddocno") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inbd_m.inbd004 = g_inbd_m_o.inbd004
                  NEXT FIELD CURRENT
               END IF                  
            END IF 
            
            LET g_inbd_m_o.inbd004 = g_inbd_m.inbd004]]>
</point>
  <point name="input.a.inbd005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint161_desc()
            IF NOT cl_null(g_inbd_m.inbd005) AND (cl_null(g_inbd_m_t.inbd005) OR g_inbd_m.inbd005 != g_inbd_m_t.inbd005) THEN
               CALL s_azzi650_chk_exist(g_acc,g_inbd_m.inbd005) RETURNING l_success
               IF NOT l_success THEN
                  LET g_inbd_m.inbd005 = g_inbd_m_t.inbd005
                  CALL aint161_desc()
                  NEXT FIELD inbd005
               END IF
             
               #檢核輸入的理由碼是否在單據別限制範圍內，若不在限制內則不允許使用此理由碼
               CALL s_control_chk_doc('8',g_inbd_m.inbddocno,g_inbd_m.inbd005,'','','','') RETURNING l_success,l_flag
               IF NOT l_success THEN
                  LET g_inbd_m.inbd005 = g_inbd_m_t.inbd005
                  CALL aint161_desc()
                  NEXT FIELD inbd005
               ELSE
                  IF NOT l_flag THEN
                     LET g_inbd_m.inbd005 = g_inbd_m_t.inbd005
                     CALL aint161_desc()
                     NEXT FIELD inbd005
                  END IF
               END IF
               CALL aint161_desc()
            END IF
]]>
</point>
  <point name="input.a.inbddocno" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL s_aooi200_get_slip_desc(g_inbd_m.inbddocno) RETURNING g_inbd_m.oobxl003
            DISPLAY BY NAME g_inbd_m.oobxl003
            IF  NOT cl_null(g_inbd_m.inbddocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inbd_m.inbddocno != g_inbddocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inbd_t WHERE "||"inbdent = '" ||g_enterprise|| "' AND "||"inbddocno = '"||g_inbd_m.inbddocno ||"'",'std-00004',0) THEN 
                     LET g_inbd_m.inbddocno = g_inbddocno_t
                     CALL s_aooi200_get_slip_desc(g_inbd_m.inbddocno) RETURNING g_inbd_m.oobxl003
                     DISPLAY BY NAME g_inbd_m.oobxl003
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT s_aooi200_chk_slip(g_site,'',g_inbd_m.inbddocno,g_code) THEN
                  LET g_inbd_m.inbddocno = g_inbddocno_t
                  CALL s_aooi200_get_slip_desc(g_inbd_m.inbddocno) RETURNING g_inbd_m.oobxl003
                  DISPLAY BY NAME g_inbd_m.oobxl003
                  NEXT FIELD CURRENT
               END IF   
               
               CALL aint161_docno_default()
            END IF


]]>
</point>
  <point name="input.a.page1.inbe001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint161_b_desc()
            IF NOT cl_null(g_inbe_d[l_ac].inbe001) AND (cl_null(g_inbe_d_t.inbe001) OR g_inbe_d[l_ac].inbe001 != g_inbe_d_t.inbe001) THEN 
               IF aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
                  #檢查成功時後續處理
                  #檢核輸入的料件的生命週期是否在單據別限制範圍內，若不在限制內則不允許請購此料
                  CALL s_control_chk_doc('4',g_inbd_m.inbddocno,g_inbe_d[l_ac].inbe001,'','','','') RETURNING l_success,l_flag
                  IF NOT l_success THEN
                     LET g_inbe_d[l_ac].inbe001 = g_inbe_d_t.inbe001
                     CALL aint161_b_desc()
                     NEXT FIELD CURRENT
                  ELSE
                     IF NOT l_flag THEN
                      #  CALL cl_err(g_inbe_d[l_ac].inbe001,'ain-00015',1)
                        LET g_inbe_d[l_ac].inbe001 = g_inbe_d_t.inbe001
                        CALL aint161_b_desc()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
         
                  #檢核輸入的料件的產品分類是否在單據別限制範圍內，若不在限制內則不允許請購此料
                  CALL s_control_chk_doc('5',g_inbd_m.inbddocno,g_inbe_d[l_ac].inbe001,'','','','') RETURNING l_success,l_flag
                  IF NOT l_success THEN
                     LET g_inbe_d[l_ac].inbe001 = g_inbe_d_t.inbe001
                     CALL aint161_b_desc()
                     NEXT FIELD CURRENT
                  ELSE
                     IF NOT l_flag THEN
                      #  CALL cl_err(g_inbe_d[l_ac].inbe001,'ain-00015',1)
                        LET g_inbe_d[l_ac].inbe001 = g_inbe_d_t.inbe001
                        CALL aint161_b_desc()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  LET g_inbe_d[l_ac].inbe001 = g_inbe_d_t.inbe001
                  CALL aint161_b_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_inbe_d[l_ac].inbe001) THEN
               CALL aint161_b_desc()
               LET l_imaf054 = ''
               LET l_imaf055 = ''
               LET l_imaf061 = ''
               LET l_imaa005 = ''
               CALL cl_set_comp_entry("inbe002,inbe003,inbe006,inbe007",TRUE)
               SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_inbe_d[l_ac].inbe001
               IF cl_null(l_imaa005) THEN
                  CALL cl_set_comp_entry("inbe002",FALSE)
               ELSE   
                  CALL cl_set_comp_entry("inbe002",TRUE)             
               END IF
               SELECT imaf054,imaf055,imaf061 INTO l_imaf054,l_imaf055,l_imaf061 FROM imaf_t
                WHERE imafent = g_enterprise AND imafsite = g_site
                  AND imaf001 = g_inbe_d[l_ac].inbe001
               IF l_imaf054 = 'N' OR cl_null(l_imaf054) THEN
                  CALL cl_set_comp_entry("inbe007",FALSE)
               END IF              
               IF l_imaf055 = '0' OR cl_null(l_imaf055) THEN
                  CALL cl_set_comp_entry("inbe003",FALSE)
               END IF
               IF l_imaf061 = '2' OR cl_null(l_imaf061) THEN
                  CALL cl_set_comp_entry("inbe006",FALSE)
               END IF                                
            END IF 
            ]]>
</point>
  <point name="input.a.page1.inbe002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_inbe_d[l_ac].inbe002) AND (cl_null(g_inbe_d_t.inbe002) OR g_inbe_d[l_ac].inbe002 != g_inbe_d_t.inbe002) THEN 
               IF NOT aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
                  LET g_inbe_d[l_ac].inbe002 = g_inbe_d_t.inbe002
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.inbe003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_inbe_d[l_ac].inbe003) AND (cl_null(g_inbe_d_t.inbe003) OR g_inbe_d[l_ac].inbe003 != g_inbe_d_t.inbe003) THEN 
               IF NOT aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
                  LET g_inbe_d[l_ac].inbe003 = g_inbe_d_t.inbe003
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
</point>
  <point name="input.a.page1.inbe004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL s_desc_get_stock_desc(g_site,g_inbe_d[l_ac].inbe004) RETURNING g_inbe_d[l_ac].inbe004_desc
            IF NOT cl_null(g_inbe_d[l_ac].inbe004) AND (cl_null(g_inbe_d_t.inbe004) OR g_inbe_d[l_ac].inbe004 != g_inbe_d_t.inbe004) THEN 
               IF aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
                  #檢查成功時後續處理
                  CALL s_control_chk_doc('6',g_inbd_m.inbddocno,g_inbe_d[l_ac].inbe004,'','','','') RETURNING l_success,l_flag
                  IF NOT l_success THEN
                     LET g_inbe_d[l_ac].inbe004 = g_inbe_d_t.inbe004
                     LET g_inbe_d[l_ac].inbe004_desc = s_desc_get_stock_desc(g_site,g_inbe_d[l_ac].inbe004)
                     DISPLAY BY NAME g_inbe_d[l_ac].inbe004_desc
                     NEXT FIELD CURRENT
                  ELSE
                     IF NOT l_flag THEN
                        LET g_inbe_d[l_ac].inbe004 = g_inbe_d_t.inbe004
                        LET g_inbe_d[l_ac].inbe004_desc = s_desc_get_stock_desc(g_site,g_inbe_d[l_ac].inbe004)
                        DISPLAY BY NAME g_inbe_d[l_ac].inbe004_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF   
               ELSE
                  #檢查失敗時後續處理
                  LET g_inbe_d[l_ac].inbe004 = g_inbe_d_t.inbe004
                  LET g_inbe_d[l_ac].inbe004_desc = s_desc_get_stock_desc(g_site,g_inbe_d[l_ac].inbe004)
                  DISPLAY BY NAME g_inbe_d[l_ac].inbe004_desc
                  NEXT FIELD CURRENT
               END IF
            END IF 
]]>
</point>
  <point name="input.a.page1.inbe005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL s_desc_get_locator_desc(g_site,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005) RETURNING g_inbe_d[l_ac].inbe005_desc
            IF g_inbe_d[l_ac].inbe005 IS NOT NULL AND (cl_null(g_inbe_d_t.inbe005) OR g_inbe_d[l_ac].inbe005 != g_inbe_d_t.inbe005) THEN 
#此段落由子樣板a19產生
               IF NOT cl_null(g_inbe_d[l_ac].inbe004) THEN
                     
                  #呼叫檢查存在並帶值的library
                  IF aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
                     CALL s_control_chk_doc('6',g_inbd_m.inbddocno,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,'','','') RETURNING l_success,l_flag
                     IF NOT l_success THEN
                        LET g_inbe_d[l_ac].inbe005 = g_inbe_d_t.inbe005
                        LET g_inbe_d[l_ac].inbe005_desc = s_desc_get_locator_desc(g_site,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005) 
                        DISPLAY BY NAME g_inbe_d[l_ac].inbe005_desc
                        NEXT FIELD CURRENT
                     ELSE
                        IF NOT l_flag THEN
                           LET g_inbe_d[l_ac].inbe005 = g_inbe_d_t.inbe005
                           LET g_inbe_d[l_ac].inbe005_desc = s_desc_get_locator_desc(g_site,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005) 
                           DISPLAY BY NAME g_inbe_d[l_ac].inbe005_desc
                           NEXT FIELD CURRENT
                        END IF
                     END IF                        
                  ELSE
                     #檢查失敗時後續處理
                     LET g_inbe_d[l_ac].inbe005 = g_inbe_d_t.inbe005
                     LET g_inbe_d[l_ac].inbe005_desc = s_desc_get_locator_desc(g_site,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005) 
                     DISPLAY BY NAME g_inbe_d[l_ac].inbe005_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 

]]>
</point>
  <point name="input.a.page1.inbe006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_inbe_d[l_ac].inbe006) AND (cl_null(g_inbe_d_t.inbe006) OR g_inbe_d[l_ac].inbe006 != g_inbe_d_t.inbe006) THEN 
               IF aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inbe_d[l_ac].inbe006 = g_inbe_d_t.inbe006
                  NEXT FIELD CURRENT
               END IF
            

            END IF ]]>
</point>
  <point name="input.a.page1.inbe007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint161_b_desc()
            IF NOT cl_null(g_inbe_d[l_ac].inbe007) AND (cl_null(g_inbe_d_t.inbe007) OR g_inbe_d[l_ac].inbe007 = g_inbe_d_t.inbe007) THEN 
               IF aint161_b_inbe(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) THEN
                  #檢查成功時後續處理
                  CALL aint161_b_desc()
               ELSE
                  #檢查失敗時後續處理
                  LET g_inbe_d[l_ac].inbe007 = g_inbe_d_t.inbe007
                  CALL aint161_b_desc()
                  NEXT FIELD CURRENT
               END IF
           
            END IF ]]>
</point>
  <point name="input.a.page1.inbe008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL aint161_b_desc()
            IF NOT cl_null(g_inbe_d[l_ac].inbe008) AND (cl_null(g_inbe_d_t.inbe008) OR g_inbe_d[l_ac].inbe008 != g_inbe_d_t.inbe008) THEN
               CALL s_azzi650_chk_exist(g_acc,g_inbe_d[l_ac].inbe008) RETURNING l_success
               IF NOT l_success THEN
                   LET g_inbe_d[l_ac].inbe008 = g_inbe_d_t.inbe008
                   CALL aint161_b_desc()
                   NEXT FIELD inbe008
               END IF
             
               #檢核輸入的理由碼是否在單據別限制範圍內，若不在限制內則不允許使用此理由碼
               CALL s_control_chk_doc('8',g_inbd_m.inbddocno,g_inbe_d[l_ac].inbe008,'','','','') RETURNING l_success,l_flag
               IF NOT l_success THEN
                  LET g_inbe_d[l_ac].inbe008 = g_inbe_d_t.inbe008
                  NEXT FIELD inbe008
               ELSE
                  IF NOT l_flag THEN
                     LET g_inbe_d[l_ac].inbe008 = g_inbe_d_t.inbe008
                     NEXT FIELD inbe008
                  END IF
               END IF
               CALL aint161_b_desc()
            END IF

]]>
</point>
  <point name="input.a.page1.inbeseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_inbe_d[l_ac].inbeseq) THEN 
            END IF 


            #此段落由子樣板a05產生
            IF  g_inbd_m.inbddocno IS NOT NULL AND g_inbe_d[g_detail_idx].inbeseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inbd_m.inbddocno != g_inbddocno_t OR g_inbe_d[g_detail_idx].inbeseq != g_inbe_d_t.inbeseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inbe_t WHERE "||"inbeent = '" ||g_enterprise|| "' AND "||"inbedocno = '"||g_inbd_m.inbddocno ||"' AND "|| "inbeseq = '"||g_inbe_d[g_detail_idx].inbeseq ||"'",'std-00004',0) THEN 
                     LET g_inbe_d[g_detail_idx].inbeseq = g_inbe_d_t.inbeseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.b.page1.inbe002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET l_imaa005 = ''
            SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_inbe_d[l_ac].inbe001
            IF cl_null(l_imaa005) THEN
               CALL cl_set_comp_entry("inbe002",FALSE)
            ELSE
               CALL cl_set_comp_entry("inbe002",TRUE)
               IF cl_null(g_inbe_d[l_ac].inbe002) THEN               
                  CALL s_feature_single(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_site,g_inbd_m.inbddocno) RETURNING l_success,g_inbe_d[l_ac].inbe002                                  
               END IF
            END IF ]]>
</point>
  <point name="input.b.page1.inbe003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET l_imaf055 = ''
            CALL cl_set_comp_entry("inbe003",TRUE)
            SELECT imaf055 INTO l_imaf055 FROM imaf_t
             WHERE imafent = g_enterprise AND imafsite = g_site
               AND imaf001 = g_inbe_d[l_ac].inbe001             
            IF l_imaf055 = '0' OR cl_null(l_imaf055) THEN
               CALL cl_set_comp_entry("inbe003",FALSE)
            END IF]]>
</point>
  <point name="input.b.page1.inbe006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET l_imaf061 = ''
            CALL cl_set_comp_entry("inbe006",TRUE)
            SELECT imaf061 INTO l_imaf061 FROM imaf_t
             WHERE imafent = g_enterprise AND imafsite = g_site
               AND imaf001 = g_inbe_d[l_ac].inbe001             
            IF l_imaf061 = '2' OR cl_null(l_imaf061) THEN
               CALL cl_set_comp_entry("inbe006",FALSE)
            END IF ]]>
</point>
  <point name="input.b.page1.inbe007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET l_imaf054 = ''
            CALL cl_set_comp_entry("inbe007",TRUE)
            SELECT imaf054 INTO l_imaf054 FROM imaf_t
             WHERE imafent = g_enterprise AND imafsite = g_site
               AND imaf001 = g_inbe_d[l_ac].inbe001             
            IF l_imaf054 = 'N' OR cl_null(l_imaf054) THEN
               CALL cl_set_comp_entry("inbe007",FALSE)
            END IF]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_errshow = 1]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="4" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_inbe_d[l_ac].inbe002) THEN
               LET g_inbe_d[l_ac].inbe002 = " "
            END IF
            IF cl_null(g_inbe_d[l_ac].inbe001) AND cl_null(g_inbe_d[l_ac].inbe002) AND cl_null(g_inbe_d[l_ac].inbe003) AND cl_null(g_inbe_d[l_ac].inbe004) AND cl_null(g_inbe_d[l_ac].inbe005) AND cl_null(g_inbe_d[l_ac].inbe006) AND cl_null(g_inbe_d[l_ac].inbe007) THEN
               CALL cl_err('','ain-00129',1)
               CANCEL INSERT
            END IF]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF cl_null(g_inbe_d[l_ac].inbe001) AND cl_null(g_inbe_d[l_ac].inbe002) AND cl_null(g_inbe_d[l_ac].inbe003) AND cl_null(g_inbe_d[l_ac].inbe004) AND cl_null(g_inbe_d[l_ac].inbe005) AND cl_null(g_inbe_d[l_ac].inbe006) AND cl_null(g_inbe_d[l_ac].inbe007) THEN
                  CALL cl_err('','ain-00129',1)
                  EXIT DIALOG
               END IF]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            LET g_inbe_d[l_ac].inbesite = g_site           
            IF NOT cl_null(g_inbd_m.inbd005) THEN
               LET g_inbe_d[l_ac].inbe008 = g_inbd_m.inbd005
               CALL aint161_b_desc()
            END IF
            LET g_inbe_d[l_ac].inbesite = g_site
            SELECT MAX(inbeseq)+1 INTO g_inbe_d[l_ac].inbeseq FROM inbe_t
               WHERE inbeent = g_enterprise AND inbedocno = g_inbd_m.inbddocno
            IF cl_null(g_inbe_d[l_ac].inbeseq) OR g_inbe_d[l_ac].inbeseq = 0 THEN
               LET g_inbe_d[l_ac].inbeseq = 1
            END IF ]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               LET l_inbdmoddt = cl_get_current()
               UPDATE inbd_t SET inbdmodid = g_user,
                                 inbdmoddt = l_inbdmoddt 
               WHERE inbdent = g_enterprise AND inbddocno = g_inbd_m.inbddocno                  ]]>
</point>
  <point name="input.c.inbd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbd_m.inbd001             #給予default值

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inbd_m.inbd001 = g_qryparam.return1              

            DISPLAY g_inbd_m.inbd001 TO inbd001              #

            NEXT FIELD inbd001                          #返回原欄位

]]>
</point>
  <point name="input.c.inbd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbd_m.inbd002             #給予default值
            LET g_qryparam.arg1 = g_inbd_m.inbddocdt
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_inbd_m.inbd002 = g_qryparam.return1              

            DISPLAY g_inbd_m.inbd002 TO inbd002              #

            NEXT FIELD inbd002                          #返回原欄位

]]>
</point>
  <point name="input.c.inbd004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " inbd003 = '1' AND inbdstus = 'Y' "
            LET g_qryparam.default1 = g_inbd_m.inbd004             #給予default值
            
            CALL q_inbddocno()                                #呼叫開窗

            LET g_inbd_m.inbd004 = g_qryparam.return1              

            DISPLAY g_inbd_m.inbd004 TO inbd004              #

            NEXT FIELD inbd004                          #返回原欄位

]]>
</point>
  <point name="input.c.inbd005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbd_m.inbd005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_acc

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_inbd_m.inbd005 = g_qryparam.return1              

            DISPLAY g_inbd_m.inbd005 TO inbd005              #

            NEXT FIELD inbd005                          #返回原欄位

]]>
</point>
  <point name="input.c.inbddocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbd_m.inbddocno             #給予default值

            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooef001 = g_site
               AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_inbd_m.inbddocno = g_qryparam.return1              

            DISPLAY g_inbd_m.inbddocno TO inbddocno              #

            NEXT FIELD inbddocno                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.inbe001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbe_d[l_ac].inbe001             #給予default值
            CALL aint161_b_inbe_where('inag001',g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) RETURNING g_qryparam.where
                       
            CALL q_inag001()                                #呼叫開窗

            LET g_inbe_d[l_ac].inbe001 = g_qryparam.return1              

            DISPLAY g_inbe_d[l_ac].inbe001 TO inbe001              #

            NEXT FIELD inbe001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.inbe002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL s_feature_single(g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_site,g_inbd_m.inbddocno) RETURNING l_success,g_inbe_d[l_ac].inbe002
            DISPLAY BY NAME g_inbe_d[l_ac].inbe002
             NEXT FIELD inbe002]]>
</point>
  <point name="input.c.page1.inbe003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbe_d[l_ac].inbe003             #給予default值
            CALL aint161_b_inbe_where('inag003',g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) RETURNING g_qryparam.where               
            
            CALL q_inag003_1()                                #呼叫開窗

            LET g_inbe_d[l_ac].inbe003 = g_qryparam.return1              

            DISPLAY g_inbe_d[l_ac].inbe003 TO inbe003              #

            NEXT FIELD inbe003                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.inbe004" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbe_d[l_ac].inbe004             #給予default值

            CALL aint161_b_inbe_where('inag004',g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) RETURNING g_qryparam.where            
            
            CALL q_inag004_5()                                #呼叫開窗

            LET g_inbe_d[l_ac].inbe004 = g_qryparam.return1              

            DISPLAY g_inbe_d[l_ac].inbe004 TO inbe004              #

            NEXT FIELD inbe004                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.inbe005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbe_d[l_ac].inbe005             #給予default值

            #給予arg
            CALL aint161_b_inbe_where('inag005',g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) RETURNING g_qryparam.where      
            
            CALL q_inag005_7()                                #呼叫開窗

            LET g_inbe_d[l_ac].inbe005 = g_qryparam.return1              

            DISPLAY g_inbe_d[l_ac].inbe005 TO inbe005              #

            NEXT FIELD inbe005                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.inbe006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbe_d[l_ac].inbe006             #給予default值

            #給予arg
            CALL aint161_b_inbe_where('inag006',g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) RETURNING g_qryparam.where
            
            CALL q_inag006_1()                                #呼叫開窗

            LET g_inbe_d[l_ac].inbe006 = g_qryparam.return1              

            DISPLAY g_inbe_d[l_ac].inbe006 TO inbe006              #

            NEXT FIELD inbe006                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.inbe007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbe_d[l_ac].inbe007             #給予default值

            CALL aint161_b_inbe_where('inag007',g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe007) RETURNING g_qryparam.where
                       
            CALL q_inag007()                                #呼叫開窗

            LET g_inbe_d[l_ac].inbe007 = g_qryparam.return1              

            DISPLAY g_inbe_d[l_ac].inbe007 TO inbe007              #

            NEXT FIELD inbe007                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.inbe008" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inbe_d[l_ac].inbe008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_acc

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_inbe_d[l_ac].inbe008 = g_qryparam.return1              

            DISPLAY g_inbe_d[l_ac].inbe008 TO inbe008              #

            NEXT FIELD inbe008                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_flag                LIKE type_t.num5
   DEFINE  l_imaa005             LIKE imaa_t.imaa005
   DEFINE  l_imaf054             LIKE imaf_t.imaf054
   DEFINE  l_imaf055             LIKE imaf_t.imaf055
   DEFINE  l_imaf061             LIKE imaf_t.imaf061
   DEFINE  l_sql                 STRING
   DEFINE l_inbdmoddt            DATETIME YEAR TO SECOND]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF NOT cl_null(g_inbd_m.inbd004) THEN 
                  IF NOT (l_cmd_t = 'r' AND p_cmd = 'a') THEN
                     IF cl_ask_confirm('ain-00158') THEN
                       #LET l_sql = "INSERT INTO inbe_t(inbeent,inbedocno,inbeseq,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005,inbe006,inbe008,inbe009,inbesite) ",
                       #            "SELECT inbeent,'",g_inbd_m.inbddocno,"',inbeseq,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005,inbe006,'",g_inbd_m.inbd005,"',inbe009,inbesite FROM inbe_t ", 
                       #            " WHERE inbeent = ",g_enterprise," AND inbesite = '",g_site,"' AND inbedocno = '",g_inbd_m.inbd004,"'" 
                       #PREPARE aint161_ins_pre FROM l_sql
                       #EXECUTE aint161_ins_pre 
                        IF NOT aint161_ins_inbe() THEN
                           CALL s_transaction_end('N','0')  
                        END IF                       
                     END IF 
                  END IF  
               END IF]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_aooi200_gen_docno(g_site,g_inbd_m.inbddocno,g_inbd_m.inbddocdt,g_prog) RETURNING l_success,g_inbd_m.inbddocno
               IF NOT l_success THEN
                  CALL cl_err(g_inbd_m.inbddocno,'apm-00003',1)
                  LET g_inbd_m.inbddocno = g_inbd_m_t.inbddocno
                  DISPLAY g_inbd_m.inbddocno TO pmdidocno
                  NEXT FIELD inbddocno           
               END IF]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               IF NOT cl_null(g_inbd_m.inbd004) THEN    
                  IF p_cmd = 'u' AND (cl_null(g_inbd_m_t.inbd004) OR g_inbd_m.inbd004 <> g_inbd_m_t.inbd004) THEN            
                      IF cl_ask_confirm('ain-00168') THEN
                        DELETE FROM inbe_t
                         WHERE inbeent = g_enterprise AND inbedocno = g_inbd_m.inbddocno
                        IF NOT aint161_ins_inbe() THEN
                           LET g_inbd_m.inbd004 = g_inbd_m_o.inbd004
                           NEXT FIELD CURRENT 
                        ELSE
                           CALL aint161_b_fill()
                           CALL aint161_b_desc()        
                        END IF 
                     END IF
                  END IF 
               END IF                  ]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_inbd_m.inbdsite = g_site
      LET g_inbd_m.inbddocdt = g_today
      LET g_inbd_m.inbd001 = g_user
      LET g_inbd_m.inbd002 = g_dept
      LET g_inbd_m.inbd003 = '2'
      CALL aint161_desc()
      LET g_inbd_m_t.* = g_inbd_m.*
      LET g_inbd_m_o.* = g_inbd_m.*]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_acc = ''
   #抓取[T:系統分類值檔].[C:系統分類碼]=24且[T:系統分類值檔].[C:系統分類碼]=g_prog 的[T:系統分類值檔].[C:參考欄位>
   SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = g_prog]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_inbd_m.oobxl003 = ""
   DISPLAY BY NAME g_inbd_m.oobxl003
   LET g_inbd_m.inbdstus = "N"
   CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
   LET g_inbd_m.inbdcnfid = ""
   LET g_inbd_m.inbdcnfdt = ""
   LET g_inbd_m.inbddocdt = g_today
   LET g_inbd_m.inbd001 = g_user
   LET g_inbd_m.inbd002 = g_dept 
   CALL aint161_desc()]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("inbe002,inbe003,inbe006,inbe007",TRUE)  ]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_inbd_m_o.* = g_inbd_m.*]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="2" src="s" new="N" mark_hard="N">
<![CDATA[
#           CALL aint161_b_desc()
]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="3" src="s" new="N" mark_hard="N">
<![CDATA[   CALL s_aooi200_get_slip_desc(g_inbd_m.inbddocno) RETURNING g_inbd_m.oobxl003
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbd001
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbd001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbd001_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbd002
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbd002_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbd002_desc
#
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_inbd_m.inbd005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001= '"||g_acc||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_inbd_m.inbd005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_inbd_m.inbd005_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbdownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbdownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbdownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbdowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbdowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbdowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbdcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbdcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbdcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbdcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbdcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbdcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbdmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbdmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbdmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inbd_m.inbdcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inbd_m.inbdcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inbd_m.inbdcnfid_desc
            
#            CALL aint161_desc()]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF g_inbd_m.inbdstus = "Y" THEN
       RETURN
   END IF  ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      CALL cl_set_act_visible("open,invalid,confirmed",TRUE)
      CASE g_inbd_m.inbdstus  
         WHEN "N"
            CALL cl_set_act_visible("open",FALSE)
            
         WHEN "Y"
            CALL cl_set_act_visible("open,invalid,confirmed",FALSE)

         WHEN "X"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)
      END CASE ]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         IF NOT cl_ask_confirm('aim-00108') THEN
            RETURN
         ELSE
            IF aint161_inag_chk() THEN 
               IF s_aint161(g_inbd_m.inbddocno) THEN
               END IF
            END IF
         END IF            
         RETURN]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         IF g_inbd_m.inbdstus != 'N' THEN
            CALL cl_err(g_inbd_m.inbddocno,'art-00263',1)
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00109') THEN
               RETURN
            END IF            
         END IF]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         IF g_inbd_m.inbdstus = 'Y' THEN
            CALL cl_err(g_inbd_m.inbddocno,'ain-00161',1)
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00110') THEN
               RETURN
            END IF            
         END IF]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.inbdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.inbddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.inbd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.inbd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.inbdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdcrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdcrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdcrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdmodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdmoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.inbdcnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.inbdcnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.inbeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.inbe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbe009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbe009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.inbe009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.inbesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.inbesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.inbesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.inbdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbddocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.inbddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.inbd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbd005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.inbd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.inbdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.inbdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.inbdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.inbdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.inbddocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.inbd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.inbd006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.inbdstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.inbeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.inbe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.inbe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.inbe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.inbe008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.inbe009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.inbe009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbe009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.inbesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.inbesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.inbesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.inbeseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.inbe009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.inbesite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="function.aint161_docno_default" cite_std="N" status="u" ver="" src="s" new="Y" order="7">
<![CDATA[
PRIVATE FUNCTION aint161_docno_default()
   LET g_inbd_m.inbddocdt = s_aooi200_get_doc_default(g_site,'1',g_inbd_m.inbddocno,'inbddocdt',g_inbd_m.inbddocdt)
   LET g_inbd_m.inbd001   = s_aooi200_get_doc_default(g_site,'1',g_inbd_m.inbddocno,'inbd001',g_inbd_m.inbd001)
   LET g_inbd_m.inbd002   = s_aooi200_get_doc_default(g_site,'1',g_inbd_m.inbddocno,'inbd002',g_inbd_m.inbd002)
   LET g_inbd_m.inbd003   = s_aooi200_get_doc_default(g_site,'1',g_inbd_m.inbddocno,'inbd003',g_inbd_m.inbd003)
   LET g_inbd_m.inbd004   = s_aooi200_get_doc_default(g_site,'1',g_inbd_m.inbddocno,'inbd004',g_inbd_m.inbd004)
   LET g_inbd_m.inbd005   = s_aooi200_get_doc_default(g_site,'1',g_inbd_m.inbddocno,'inbd005',g_inbd_m.inbd005)
   LET g_inbd_m.inbd006   = s_aooi200_get_doc_default(g_site,'1',g_inbd_m.inbddocno,'inbd006',g_inbd_m.inbd006)
   DISPLAY BY NAME g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002,g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005,g_inbd_m.inbd006
   CALL aint161_desc()
END FUNCTION]]>
</point>
  <section id="aint161.b_fill" ver="4" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint161_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_inbe_d.clear()    #g_inbe_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint161_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE inbeseq,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005,inbe006,inbe008, 
          inbe009,inbesite ,t1.imaal003 ,t2.imaal004 ,t3.oocal003 ,t4.inaa002 ,t5.inab003 ,t6.oocql004 FROM inbe_t", 
             
                  " INNER JOIN inbd_t ON inbddocno = inbedocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=inbe001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=inbe001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=inbe007 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inaa_t t4 ON t4.inaaent='"||g_enterprise||"' AND t4.inaasite=inbesite AND t4.inaa001=inbe004  ",
               " LEFT JOIN inab_t t5 ON t5.inabent='"||g_enterprise||"' AND t5.inabsite=inbesite AND t5.inab002=inbe005  ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='265' AND t6.oocql002=inbe008 AND t6.oocql003='"||g_dlang||"' ",
 
                  " WHERE inbeent=? AND inbedocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY inbe_t.inbeseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE aint161_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aint161_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_inbd_m.inbddocno
                                               
      FOREACH b_fill_cs INTO g_inbe_d[l_ac].inbeseq,g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003, 
          g_inbe_d[l_ac].inbe007,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006, 
          g_inbe_d[l_ac].inbe008,g_inbe_d[l_ac].inbe009,g_inbe_d[l_ac].inbesite,g_inbe_d[l_ac].inbe001_desc, 
          g_inbe_d[l_ac].inbe001_desc_desc,g_inbe_d[l_ac].inbe007_desc,g_inbe_d[l_ac].inbe004_desc,g_inbe_d[l_ac].inbe005_desc, 
          g_inbe_d[l_ac].inbe008_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_inbe_d.deleteElement(g_inbe_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint161_pb
 
   
END FUNCTION
]]>
</section>
  <section id="aint161.b_fill2" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint161_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint161_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="aint161.browser_fill" ver="11" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint161_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_inbd_m.* TO NULL
   CALL g_inbe_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "inbddocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE inbddocno ",
                      " FROM inbd_t ",
                      " ",
                      " LEFT JOIN inbe_t ON inbeent = inbdent AND inbddocno = inbedocno ",
 
 
                      " ", 
                      " ", 
                      " WHERE inbdent = '" ||g_enterprise|| "' AND inbeent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("inbd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE inbddocno ",
                      " FROM inbd_t ", 
                      "  ",
                      "  ",
                      " WHERE inbdent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("inbd_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照inbddocno,inbd004,inbddocdt,inbd001,'',inbd002,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT inbdstus,inbddocno,inbd004,inbddocdt,inbd001,'',inbd002,'',t1.ooag011 , 
       t2.ooefl003 ",
               " FROM inbd_t ",
               "  ",
               "  LEFT JOIN inbe_t ON inbeent = inbdent AND inbddocno = inbedocno ",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=inbd001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=inbd002 AND t2.ooefl002='"||g_lang||"' ",
 
               " WHERE inbdent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("inbd_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_inbddocno,g_browser[g_cnt].b_inbd004, 
       g_browser[g_cnt].b_inbddocdt,g_browser[g_cnt].b_inbd001,g_browser[g_cnt].b_inbd001_desc,g_browser[g_cnt].b_inbd002, 
       g_browser[g_cnt].b_inbd002_desc,g_browser[g_cnt].b_inbd001_desc,g_browser[g_cnt].b_inbd002_desc 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="aint161.browser_search" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aint161_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY inbddocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aint161_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aint161.construct" ver="6" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint161_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_inbd_m.* TO NULL
   CALL g_inbe_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON inbdsite,inbddocno,inbddocdt,inbd001,inbd002,inbd003,inbd004,inbd005, 
          inbd006,inbdstus,inbdownid,inbdowndp,inbdcrtid,inbdcrtdp,inbdcrtdt,inbdmodid,inbdmoddt,inbdcnfid, 
          inbdcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<inbdcrtdt>>----
         AFTER FIELD inbdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inbdmoddt>>----
         AFTER FIELD inbdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inbdcnfdt>>----
         AFTER FIELD inbdcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inbdpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD inbdsite
            #add-point:BEFORE FIELD inbdsite
            {<point name="construct.b.inbdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdsite
            
            #add-point:AFTER FIELD inbdsite
            {<point name="construct.a.inbdsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbdsite
         ON ACTION controlp INFIELD inbdsite
            #add-point:ON ACTION controlp INFIELD inbdsite
            {<point name="construct.c.inbdsite" />}
            #END add-point
 
         #Ctrlp:construct.c.inbddocno
         ON ACTION controlp INFIELD inbddocno
            #add-point:ON ACTION controlp INFIELD inbddocno
            {<point name="construct.c.inbddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbddocno
            #add-point:BEFORE FIELD inbddocno
            {<point name="construct.b.inbddocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbddocno
            
            #add-point:AFTER FIELD inbddocno
            {<point name="construct.a.inbddocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbddocdt
            #add-point:BEFORE FIELD inbddocdt
            {<point name="construct.b.inbddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbddocdt
            
            #add-point:AFTER FIELD inbddocdt
            {<point name="construct.a.inbddocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbddocdt
         ON ACTION controlp INFIELD inbddocdt
            #add-point:ON ACTION controlp INFIELD inbddocdt
            {<point name="construct.c.inbddocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inbd001
         ON ACTION controlp INFIELD inbd001
            #add-point:ON ACTION controlp INFIELD inbd001
            {<point name="construct.c.inbd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd001
            #add-point:BEFORE FIELD inbd001
            {<point name="construct.b.inbd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd001
            
            #add-point:AFTER FIELD inbd001
            {<point name="construct.a.inbd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbd002
         ON ACTION controlp INFIELD inbd002
            #add-point:ON ACTION controlp INFIELD inbd002
            {<point name="construct.c.inbd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd002
            #add-point:BEFORE FIELD inbd002
            {<point name="construct.b.inbd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd002
            
            #add-point:AFTER FIELD inbd002
            {<point name="construct.a.inbd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd003
            #add-point:BEFORE FIELD inbd003
            {<point name="construct.b.inbd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd003
            
            #add-point:AFTER FIELD inbd003
            {<point name="construct.a.inbd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbd003
         ON ACTION controlp INFIELD inbd003
            #add-point:ON ACTION controlp INFIELD inbd003
            {<point name="construct.c.inbd003" />}
            #END add-point
 
         #Ctrlp:construct.c.inbd004
         ON ACTION controlp INFIELD inbd004
            #add-point:ON ACTION controlp INFIELD inbd004
            {<point name="construct.c.inbd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd004
            #add-point:BEFORE FIELD inbd004
            {<point name="construct.b.inbd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd004
            
            #add-point:AFTER FIELD inbd004
            {<point name="construct.a.inbd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbd005
         ON ACTION controlp INFIELD inbd005
            #add-point:ON ACTION controlp INFIELD inbd005
            {<point name="construct.c.inbd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd005
            #add-point:BEFORE FIELD inbd005
            {<point name="construct.b.inbd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd005
            
            #add-point:AFTER FIELD inbd005
            {<point name="construct.a.inbd005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd006
            #add-point:BEFORE FIELD inbd006
            {<point name="construct.b.inbd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd006
            
            #add-point:AFTER FIELD inbd006
            {<point name="construct.a.inbd006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbd006
         ON ACTION controlp INFIELD inbd006
            #add-point:ON ACTION controlp INFIELD inbd006
            {<point name="construct.c.inbd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdstus
            #add-point:BEFORE FIELD inbdstus
            {<point name="construct.b.inbdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdstus
            
            #add-point:AFTER FIELD inbdstus
            {<point name="construct.a.inbdstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbdstus
         ON ACTION controlp INFIELD inbdstus
            #add-point:ON ACTION controlp INFIELD inbdstus
            {<point name="construct.c.inbdstus" />}
            #END add-point
 
         #Ctrlp:construct.c.inbdownid
         ON ACTION controlp INFIELD inbdownid
            #add-point:ON ACTION controlp INFIELD inbdownid
            {<point name="construct.c.inbdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdownid
            #add-point:BEFORE FIELD inbdownid
            {<point name="construct.b.inbdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdownid
            
            #add-point:AFTER FIELD inbdownid
            {<point name="construct.a.inbdownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbdowndp
         ON ACTION controlp INFIELD inbdowndp
            #add-point:ON ACTION controlp INFIELD inbdowndp
            {<point name="construct.c.inbdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdowndp
            #add-point:BEFORE FIELD inbdowndp
            {<point name="construct.b.inbdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdowndp
            
            #add-point:AFTER FIELD inbdowndp
            {<point name="construct.a.inbdowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbdcrtid
         ON ACTION controlp INFIELD inbdcrtid
            #add-point:ON ACTION controlp INFIELD inbdcrtid
            {<point name="construct.c.inbdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdcrtid
            #add-point:BEFORE FIELD inbdcrtid
            {<point name="construct.b.inbdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdcrtid
            
            #add-point:AFTER FIELD inbdcrtid
            {<point name="construct.a.inbdcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inbdcrtdp
         ON ACTION controlp INFIELD inbdcrtdp
            #add-point:ON ACTION controlp INFIELD inbdcrtdp
            {<point name="construct.c.inbdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdcrtdp
            #add-point:BEFORE FIELD inbdcrtdp
            {<point name="construct.b.inbdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdcrtdp
            
            #add-point:AFTER FIELD inbdcrtdp
            {<point name="construct.a.inbdcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdcrtdt
            #add-point:BEFORE FIELD inbdcrtdt
            {<point name="construct.b.inbdcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inbdmodid
         ON ACTION controlp INFIELD inbdmodid
            #add-point:ON ACTION controlp INFIELD inbdmodid
            {<point name="construct.c.inbdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdmodid
            #add-point:BEFORE FIELD inbdmodid
            {<point name="construct.b.inbdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdmodid
            
            #add-point:AFTER FIELD inbdmodid
            {<point name="construct.a.inbdmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdmoddt
            #add-point:BEFORE FIELD inbdmoddt
            {<point name="construct.b.inbdmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.inbdcnfid
         ON ACTION controlp INFIELD inbdcnfid
            #add-point:ON ACTION controlp INFIELD inbdcnfid
            {<point name="construct.c.inbdcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdcnfid
            #add-point:BEFORE FIELD inbdcnfid
            {<point name="construct.b.inbdcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdcnfid
            
            #add-point:AFTER FIELD inbdcnfid
            {<point name="construct.a.inbdcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdcnfdt
            #add-point:BEFORE FIELD inbdcnfdt
            {<point name="construct.b.inbdcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON inbeseq,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005,inbe006,inbe008, 
          inbe009,inbesite
           FROM s_detail1[1].inbeseq,s_detail1[1].inbe001,s_detail1[1].inbe002,s_detail1[1].inbe003, 
               s_detail1[1].inbe007,s_detail1[1].inbe004,s_detail1[1].inbe005,s_detail1[1].inbe006,s_detail1[1].inbe008, 
               s_detail1[1].inbe009,s_detail1[1].inbesite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD inbeseq
            #add-point:BEFORE FIELD inbeseq
            {<point name="construct.b.page1.inbeseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbeseq
            
            #add-point:AFTER FIELD inbeseq
            {<point name="construct.a.page1.inbeseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbeseq
         ON ACTION controlp INFIELD inbeseq
            #add-point:ON ACTION controlp INFIELD inbeseq
            {<point name="construct.c.page1.inbeseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inbe001
         ON ACTION controlp INFIELD inbe001
            #add-point:ON ACTION controlp INFIELD inbe001
            {<point name="construct.c.page1.inbe001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe001
            #add-point:BEFORE FIELD inbe001
            {<point name="construct.b.page1.inbe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe001
            
            #add-point:AFTER FIELD inbe001
            {<point name="construct.a.page1.inbe001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe002
            #add-point:BEFORE FIELD inbe002
            {<point name="construct.b.page1.inbe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe002
            
            #add-point:AFTER FIELD inbe002
            {<point name="construct.a.page1.inbe002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbe002
         ON ACTION controlp INFIELD inbe002
            #add-point:ON ACTION controlp INFIELD inbe002
            {<point name="construct.c.page1.inbe002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inbe003
         ON ACTION controlp INFIELD inbe003
            #add-point:ON ACTION controlp INFIELD inbe003
            {<point name="construct.c.page1.inbe003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe003
            #add-point:BEFORE FIELD inbe003
            {<point name="construct.b.page1.inbe003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe003
            
            #add-point:AFTER FIELD inbe003
            {<point name="construct.a.page1.inbe003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbe007
         ON ACTION controlp INFIELD inbe007
            #add-point:ON ACTION controlp INFIELD inbe007
            {<point name="construct.c.page1.inbe007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe007
            #add-point:BEFORE FIELD inbe007
            {<point name="construct.b.page1.inbe007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe007
            
            #add-point:AFTER FIELD inbe007
            {<point name="construct.a.page1.inbe007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbe004
         ON ACTION controlp INFIELD inbe004
            #add-point:ON ACTION controlp INFIELD inbe004
            {<point name="construct.c.page1.inbe004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe004
            #add-point:BEFORE FIELD inbe004
            {<point name="construct.b.page1.inbe004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe004
            
            #add-point:AFTER FIELD inbe004
            {<point name="construct.a.page1.inbe004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbe005
         ON ACTION controlp INFIELD inbe005
            #add-point:ON ACTION controlp INFIELD inbe005
            {<point name="construct.c.page1.inbe005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe005
            #add-point:BEFORE FIELD inbe005
            {<point name="construct.b.page1.inbe005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe005
            
            #add-point:AFTER FIELD inbe005
            {<point name="construct.a.page1.inbe005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbe006
         ON ACTION controlp INFIELD inbe006
            #add-point:ON ACTION controlp INFIELD inbe006
            {<point name="construct.c.page1.inbe006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe006
            #add-point:BEFORE FIELD inbe006
            {<point name="construct.b.page1.inbe006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe006
            
            #add-point:AFTER FIELD inbe006
            {<point name="construct.a.page1.inbe006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbe008
         ON ACTION controlp INFIELD inbe008
            #add-point:ON ACTION controlp INFIELD inbe008
            {<point name="construct.c.page1.inbe008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe008
            #add-point:BEFORE FIELD inbe008
            {<point name="construct.b.page1.inbe008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe008
            
            #add-point:AFTER FIELD inbe008
            {<point name="construct.a.page1.inbe008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe009
            #add-point:BEFORE FIELD inbe009
            {<point name="construct.b.page1.inbe009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe009
            
            #add-point:AFTER FIELD inbe009
            {<point name="construct.a.page1.inbe009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbe009
         ON ACTION controlp INFIELD inbe009
            #add-point:ON ACTION controlp INFIELD inbe009
            {<point name="construct.c.page1.inbe009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbesite
            #add-point:BEFORE FIELD inbesite
            {<point name="construct.b.page1.inbesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbesite
            
            #add-point:AFTER FIELD inbesite
            {<point name="construct.a.page1.inbesite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inbesite
         ON ACTION controlp INFIELD inbesite
            #add-point:ON ACTION controlp INFIELD inbesite
            {<point name="construct.c.page1.inbesite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aint161.default_search" ver="2" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint161_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " inbddocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aint161.delete" ver="8" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint161_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_inbd_m.inbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL aint161_show()
   
   CALL s_transaction_begin()
 
   OPEN aint161_cl USING g_enterprise,g_inbd_m.inbddocno
   IF STATUS THEN
      CALL cl_err("OPEN aint161_cl:", STATUS, 1)
      CLOSE aint161_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint161_master_referesh USING g_inbd_m.inbddocno INTO g_inbd_m.inbdsite,g_inbd_m.inbddocno, 
       g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002,g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005, 
       g_inbd_m.inbd006,g_inbd_m.inbdstus,g_inbd_m.inbdownid,g_inbd_m.inbdowndp,g_inbd_m.inbdcrtid,g_inbd_m.inbdcrtdp, 
       g_inbd_m.inbdcrtdt,g_inbd_m.inbdmodid,g_inbd_m.inbdmoddt,g_inbd_m.inbdcnfid,g_inbd_m.inbdcnfdt, 
       g_inbd_m.inbd001_desc,g_inbd_m.inbd002_desc,g_inbd_m.inbdownid_desc,g_inbd_m.inbdowndp_desc,g_inbd_m.inbdcrtid_desc, 
       g_inbd_m.inbdcrtdp_desc,g_inbd_m.inbdmodid_desc,g_inbd_m.inbdcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_inbd_m.inbddocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aint161_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_inbddocno_t = g_inbd_m.inbddocno
 
 
      DELETE FROM inbd_t
       WHERE inbdent = g_enterprise AND inbddocno = g_inbd_m.inbddocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_inbd_m.inbddocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM inbe_t
       WHERE inbeent = g_enterprise AND inbedocno = g_inbd_m.inbddocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("inbe_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_inbe_d.clear() 
 
     
      #CALL aint161_ui_browser_refresh()  
      CALL aint161_ui_headershow()  
      CALL aint161_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aint161_browser_fill("")
         CALL aint161_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL aint161_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE aint161_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_inbd_m.inbddocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="aint161.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint161_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM inbe_t
       WHERE inbeent = g_enterprise AND
         inbedocno = ps_keys_bak[1] AND inbeseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aint161.description" ver="70" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:4,PR版次:4) Build-000087
#+ 
#+ Filename...: aint161
#+ Description: 庫位取消留置維護作業
#+ Creator....: 02587(2014/03/21)
#+ Modifier...: 02587(2014/07/07)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="aint161.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint161_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE inbe_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint161_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint161_detail AS ",
                "SELECT * FROM inbe_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint161_detail SELECT * FROM inbe_t 
                                         WHERE inbeent = g_enterprise AND inbedocno = g_inbddocno_t
 
   
   #將key修正為調整後   
   UPDATE aint161_detail 
      #更新key欄位
      SET inbedocno = g_inbd_m.inbddocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO inbe_t SELECT * FROM aint161_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint161_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_inbddocno_t = g_inbd_m.inbddocno
 
   
   DROP TABLE aint161_detail
   
END FUNCTION
]]>
</section>
  <section id="aint161.detail_show" ver="2" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint161_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aint161.fetch" ver="7" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint161_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_inbd_m.inbddocno = g_browser[g_current_idx].b_inbddocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint161_master_referesh USING g_inbd_m.inbddocno INTO g_inbd_m.inbdsite,g_inbd_m.inbddocno, 
       g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002,g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005, 
       g_inbd_m.inbd006,g_inbd_m.inbdstus,g_inbd_m.inbdownid,g_inbd_m.inbdowndp,g_inbd_m.inbdcrtid,g_inbd_m.inbdcrtdp, 
       g_inbd_m.inbdcrtdt,g_inbd_m.inbdmodid,g_inbd_m.inbdmoddt,g_inbd_m.inbdcnfid,g_inbd_m.inbdcnfdt, 
       g_inbd_m.inbd001_desc,g_inbd_m.inbd002_desc,g_inbd_m.inbdownid_desc,g_inbd_m.inbdowndp_desc,g_inbd_m.inbdcrtid_desc, 
       g_inbd_m.inbdcrtdp_desc,g_inbd_m.inbdmodid_desc,g_inbd_m.inbdcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("inbd_t",SQLCA.sqlcode,1)
      INITIALIZE g_inbd_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_inbd_m_t.* = g_inbd_m.*
   LET g_inbd_m_o.* = g_inbd_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aint161_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="aint161.fill_chk" ver="3" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint161_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="aint161.filter" ver="2" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aint161_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON inbddocno,inbd004,inbddocdt,inbd001,inbd002
                          FROM s_browse[1].b_inbddocno,s_browse[1].b_inbd004,s_browse[1].b_inbddocdt, 
                              s_browse[1].b_inbd001,s_browse[1].b_inbd002
 
         BEFORE CONSTRUCT
               DISPLAY aint161_filter_parser('inbddocno') TO s_browse[1].b_inbddocno
            DISPLAY aint161_filter_parser('inbd004') TO s_browse[1].b_inbd004
            DISPLAY aint161_filter_parser('inbddocdt') TO s_browse[1].b_inbddocdt
            DISPLAY aint161_filter_parser('inbd001') TO s_browse[1].b_inbd001
            DISPLAY aint161_filter_parser('inbd002') TO s_browse[1].b_inbd002
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint161_filter_show('inbddocno')
   CALL aint161_filter_show('inbd004')
   CALL aint161_filter_show('inbddocdt')
   CALL aint161_filter_show('inbd001')
   CALL aint161_filter_show('inbd002')
 
END FUNCTION
]]>
</section>
  <section id="aint161.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint161_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="aint161.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint161_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint161_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="aint161.global" ver="8" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_inbd_m        RECORD
       inbdsite LIKE inbd_t.inbdsite, 
   inbddocno LIKE inbd_t.inbddocno, 
   oobxl003 LIKE type_t.chr80, 
   inbddocdt LIKE inbd_t.inbddocdt, 
   inbd001 LIKE inbd_t.inbd001, 
   inbd001_desc LIKE type_t.chr80, 
   inbd002 LIKE inbd_t.inbd002, 
   inbd002_desc LIKE type_t.chr80, 
   inbd003 LIKE inbd_t.inbd003, 
   inbd004 LIKE inbd_t.inbd004, 
   inbd005 LIKE inbd_t.inbd005, 
   inbd005_desc LIKE type_t.chr80, 
   inbd006 LIKE inbd_t.inbd006, 
   inbdstus LIKE inbd_t.inbdstus, 
   inbdownid LIKE inbd_t.inbdownid, 
   inbdownid_desc LIKE type_t.chr80, 
   inbdowndp LIKE inbd_t.inbdowndp, 
   inbdowndp_desc LIKE type_t.chr80, 
   inbdcrtid LIKE inbd_t.inbdcrtid, 
   inbdcrtid_desc LIKE type_t.chr80, 
   inbdcrtdp LIKE inbd_t.inbdcrtdp, 
   inbdcrtdp_desc LIKE type_t.chr80, 
   inbdcrtdt DATETIME YEAR TO SECOND, 
   inbdmodid LIKE inbd_t.inbdmodid, 
   inbdmodid_desc LIKE type_t.chr80, 
   inbdmoddt DATETIME YEAR TO SECOND, 
   inbdcnfid LIKE inbd_t.inbdcnfid, 
   inbdcnfid_desc LIKE type_t.chr80, 
   inbdcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_inbe_d        RECORD
       inbeseq LIKE inbe_t.inbeseq, 
   inbe001 LIKE inbe_t.inbe001, 
   inbe001_desc LIKE type_t.chr500, 
   inbe001_desc_desc LIKE type_t.chr500, 
   inbe002 LIKE inbe_t.inbe002, 
   inbe003 LIKE inbe_t.inbe003, 
   inbe007 LIKE inbe_t.inbe007, 
   inbe007_desc LIKE type_t.chr500, 
   inbe004 LIKE inbe_t.inbe004, 
   inbe004_desc LIKE type_t.chr500, 
   inbe005 LIKE inbe_t.inbe005, 
   inbe005_desc LIKE type_t.chr500, 
   inbe006 LIKE inbe_t.inbe006, 
   inbe008 LIKE inbe_t.inbe008, 
   inbe008_desc LIKE type_t.chr500, 
   inbe009 LIKE inbe_t.inbe009, 
   inbesite LIKE inbe_t.inbesite
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_inbd_m          type_g_inbd_m
DEFINE g_inbd_m_t        type_g_inbd_m
DEFINE g_inbd_m_o        type_g_inbd_m
 
   DEFINE g_inbddocno_t LIKE inbd_t.inbddocno
 
 
DEFINE g_inbe_d          DYNAMIC ARRAY OF type_g_inbe_d
DEFINE g_inbe_d_t        type_g_inbe_d
DEFINE g_inbe_d_o        type_g_inbe_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_inbddocno LIKE inbd_t.inbddocno,
      b_inbd004 LIKE inbd_t.inbd004,
      b_inbddocdt LIKE inbd_t.inbddocdt,
      b_inbd001 LIKE inbd_t.inbd001,
   b_inbd001_desc LIKE type_t.chr80,
      b_inbd002 LIKE inbd_t.inbd002,
   b_inbd002_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_inbddocno LIKE inbd_t.inbddocno,
      b_inbd004 LIKE inbd_t.inbd004,
      b_inbddocdt LIKE inbd_t.inbddocdt,
      b_inbd001 LIKE inbd_t.inbd001,
   b_inbd001_desc LIKE type_t.chr80,
      b_inbd002 LIKE inbd_t.inbd002,
   b_inbd002_desc LIKE type_t.chr80
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aint161.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION aint161_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_inbe_d.getLength() THEN
         LET g_detail_idx = g_inbe_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_inbe_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_inbe_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="aint161.init" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint161_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('inbdstus','13','N,X,Y')
 
      CALL cl_set_combo_scc('inbd003','2079') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aint161_default_search()
    
END FUNCTION
]]>
</section>
  <section id="aint161.input" ver="2" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint161_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inbeseq,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005,inbe006,inbe008, 
       inbe009,inbesite FROM inbe_t WHERE inbeent=? AND inbedocno=? AND inbeseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint161_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint161_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint161_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_inbd_m.inbdsite,g_inbd_m.inbddocno,g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002, 
       g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005,g_inbd_m.inbd006,g_inbd_m.inbdstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="aint161.input.body" ver="6" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_inbe_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inbe_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint161_b_fill()
            LET g_rec_b = g_inbe_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint161_cl USING g_enterprise,g_inbd_m.inbddocno
            IF STATUS THEN
               CALL cl_err("OPEN aint161_cl:", STATUS, 1)
               CLOSE aint161_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_inbe_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_inbe_d[l_ac].inbeseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_inbe_d_t.* = g_inbe_d[l_ac].*  #BACKUP
               LET g_inbe_d_o.* = g_inbe_d[l_ac].*  #BACKUP
               CALL aint161_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint161_set_no_entry_b(l_cmd)
               IF NOT aint161_lock_b("inbe_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint161_bcl INTO g_inbe_d[l_ac].inbeseq,g_inbe_d[l_ac].inbe001,g_inbe_d[l_ac].inbe002, 
                      g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe007,g_inbe_d[l_ac].inbe004,g_inbe_d[l_ac].inbe005, 
                      g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe008,g_inbe_d[l_ac].inbe009,g_inbe_d[l_ac].inbesite 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_inbe_d_t.inbeseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL aint161_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inbe_d[l_ac].* TO NULL 
            INITIALIZE g_inbe_d_t.* TO NULL 
            INITIALIZE g_inbe_d_o.* TO NULL 
            
            LET g_inbe_d_t.* = g_inbe_d[l_ac].*     #新輸入資料
            LET g_inbe_d_o.* = g_inbe_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint161_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint161_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inbe_d[li_reproduce_target].* = g_inbe_d[li_reproduce].*
 
               LET g_inbe_d[li_reproduce_target].inbeseq = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inbe_t 
             WHERE inbeent = g_enterprise AND inbedocno = g_inbd_m.inbddocno
 
               AND inbeseq = g_inbe_d[l_ac].inbeseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inbd_m.inbddocno
               LET gs_keys[2] = g_inbe_d[g_detail_idx].inbeseq
               CALL aint161_insert_b('inbe_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_inbe_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("inbe_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint161_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_inbe_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_inbe_d.deleteElement(l_ac)
               NEXT FIELD inbeseq
            END IF
         
            IF g_inbe_d[l_ac].inbeseq IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM inbe_t
                WHERE inbeent = g_enterprise AND inbedocno = g_inbd_m.inbddocno AND
 
                      inbeseq = g_inbe_d_t.inbeseq
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("inbe_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aint161_bcl
               LET l_count = g_inbe_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inbd_m.inbddocno
               LET gs_keys[2] = g_inbe_d[g_detail_idx].inbeseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aint161_delete_b('inbe_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD inbeseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_inbe_d[l_ac].inbeseq,"1","1","","","azz-00079",1) THEN
               NEXT FIELD inbeseq
            END IF
 
 
            #add-point:AFTER FIELD inbeseq
            {<point name="input.a.page1.inbeseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbeseq
            #add-point:BEFORE FIELD inbeseq
            {<point name="input.b.page1.inbeseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbeseq
            #add-point:ON CHANGE inbeseq
            {<point name="input.g.page1.inbeseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe001
            
            #add-point:AFTER FIELD inbe001
            {<point name="input.a.page1.inbe001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe001
            #add-point:BEFORE FIELD inbe001
            {<point name="input.b.page1.inbe001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbe001
            #add-point:ON CHANGE inbe001
            {<point name="input.g.page1.inbe001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe002
            #add-point:BEFORE FIELD inbe002
            {<point name="input.b.page1.inbe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe002
            
            #add-point:AFTER FIELD inbe002
            {<point name="input.a.page1.inbe002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbe002
            #add-point:ON CHANGE inbe002
            {<point name="input.g.page1.inbe002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe003
            #add-point:BEFORE FIELD inbe003
            {<point name="input.b.page1.inbe003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe003
            
            #add-point:AFTER FIELD inbe003
            {<point name="input.a.page1.inbe003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbe003
            #add-point:ON CHANGE inbe003
            {<point name="input.g.page1.inbe003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe007
            
            #add-point:AFTER FIELD inbe007
            {<point name="input.a.page1.inbe007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe007
            #add-point:BEFORE FIELD inbe007
            {<point name="input.b.page1.inbe007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbe007
            #add-point:ON CHANGE inbe007
            {<point name="input.g.page1.inbe007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe004
            
            #add-point:AFTER FIELD inbe004
            {<point name="input.a.page1.inbe004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe004
            #add-point:BEFORE FIELD inbe004
            {<point name="input.b.page1.inbe004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbe004
            #add-point:ON CHANGE inbe004
            {<point name="input.g.page1.inbe004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe005
            
            #add-point:AFTER FIELD inbe005
            {<point name="input.a.page1.inbe005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe005
            #add-point:BEFORE FIELD inbe005
            {<point name="input.b.page1.inbe005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbe005
            #add-point:ON CHANGE inbe005
            {<point name="input.g.page1.inbe005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe006
            #add-point:BEFORE FIELD inbe006
            {<point name="input.b.page1.inbe006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe006
            
            #add-point:AFTER FIELD inbe006
            {<point name="input.a.page1.inbe006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbe006
            #add-point:ON CHANGE inbe006
            {<point name="input.g.page1.inbe006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe008
            
            #add-point:AFTER FIELD inbe008
            {<point name="input.a.page1.inbe008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe008
            #add-point:BEFORE FIELD inbe008
            {<point name="input.b.page1.inbe008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbe008
            #add-point:ON CHANGE inbe008
            {<point name="input.g.page1.inbe008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbe009
            #add-point:BEFORE FIELD inbe009
            {<point name="input.b.page1.inbe009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbe009
            
            #add-point:AFTER FIELD inbe009
            {<point name="input.a.page1.inbe009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbe009
            #add-point:ON CHANGE inbe009
            {<point name="input.g.page1.inbe009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbesite
            #add-point:BEFORE FIELD inbesite
            {<point name="input.b.page1.inbesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbesite
            
            #add-point:AFTER FIELD inbesite
            {<point name="input.a.page1.inbesite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbesite
            #add-point:ON CHANGE inbesite
            {<point name="input.g.page1.inbesite" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.inbeseq
         ON ACTION controlp INFIELD inbeseq
            #add-point:ON ACTION controlp INFIELD inbeseq
            {<point name="input.c.page1.inbeseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe001
         ON ACTION controlp INFIELD inbe001
            #add-point:ON ACTION controlp INFIELD inbe001
            {<point name="input.c.page1.inbe001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe002
         ON ACTION controlp INFIELD inbe002
            #add-point:ON ACTION controlp INFIELD inbe002
            {<point name="input.c.page1.inbe002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe003
         ON ACTION controlp INFIELD inbe003
            #add-point:ON ACTION controlp INFIELD inbe003
            {<point name="input.c.page1.inbe003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe007
         ON ACTION controlp INFIELD inbe007
            #add-point:ON ACTION controlp INFIELD inbe007
            {<point name="input.c.page1.inbe007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe004
         ON ACTION controlp INFIELD inbe004
            #add-point:ON ACTION controlp INFIELD inbe004
            {<point name="input.c.page1.inbe004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe005
         ON ACTION controlp INFIELD inbe005
            #add-point:ON ACTION controlp INFIELD inbe005
            {<point name="input.c.page1.inbe005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe006
         ON ACTION controlp INFIELD inbe006
            #add-point:ON ACTION controlp INFIELD inbe006
            {<point name="input.c.page1.inbe006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe008
         ON ACTION controlp INFIELD inbe008
            #add-point:ON ACTION controlp INFIELD inbe008
            {<point name="input.c.page1.inbe008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbe009
         ON ACTION controlp INFIELD inbe009
            #add-point:ON ACTION controlp INFIELD inbe009
            {<point name="input.c.page1.inbe009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inbesite
         ON ACTION controlp INFIELD inbesite
            #add-point:ON ACTION controlp INFIELD inbesite
            {<point name="input.c.page1.inbesite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_inbe_d[l_ac].* = g_inbe_d_t.*
               CLOSE aint161_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_inbe_d[l_ac].inbeseq,-263,1)
               LET g_inbe_d[l_ac].* = g_inbe_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE inbe_t SET (inbedocno,inbeseq,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005, 
                   inbe006,inbe008,inbe009,inbesite) = (g_inbd_m.inbddocno,g_inbe_d[l_ac].inbeseq,g_inbe_d[l_ac].inbe001, 
                   g_inbe_d[l_ac].inbe002,g_inbe_d[l_ac].inbe003,g_inbe_d[l_ac].inbe007,g_inbe_d[l_ac].inbe004, 
                   g_inbe_d[l_ac].inbe005,g_inbe_d[l_ac].inbe006,g_inbe_d[l_ac].inbe008,g_inbe_d[l_ac].inbe009, 
                   g_inbe_d[l_ac].inbesite)
                WHERE inbeent = g_enterprise AND inbedocno = g_inbd_m.inbddocno 
 
                  AND inbeseq = g_inbe_d_t.inbeseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inbe_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_inbe_d[l_ac].* = g_inbe_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("inbe_t",SQLCA.sqlcode,1)
                     LET g_inbe_d[l_ac].* = g_inbe_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inbd_m.inbddocno
               LET gs_keys_bak[1] = g_inbddocno_t
               LET gs_keys[2] = g_inbe_d[g_detail_idx].inbeseq
               LET gs_keys_bak[2] = g_inbe_d_t.inbeseq
               CALL aint161_update_b('inbe_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_inbd_m),util.JSON.stringify(g_inbe_d_t)
               LET g_log2 = util.JSON.stringify(g_inbd_m),util.JSON.stringify(g_inbe_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint161_unlock_b("inbe_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_inbe_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inbe_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="aint161.input.head" ver="6" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_inbd_m.inbdsite,g_inbd_m.inbddocno,g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002, 
          g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005,g_inbd_m.inbd006,g_inbd_m.inbdstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD inbdsite
            #add-point:BEFORE FIELD inbdsite
            {<point name="input.b.inbdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdsite
            
            #add-point:AFTER FIELD inbdsite
            {<point name="input.a.inbdsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbdsite
            #add-point:ON CHANGE inbdsite
            {<point name="input.g.inbdsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbddocno
            #add-point:BEFORE FIELD inbddocno
            {<point name="input.b.inbddocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbddocno
            
            #add-point:AFTER FIELD inbddocno
            {<point name="input.a.inbddocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbddocno
            #add-point:ON CHANGE inbddocno
            {<point name="input.g.inbddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbddocdt
            #add-point:BEFORE FIELD inbddocdt
            {<point name="input.b.inbddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbddocdt
            
            #add-point:AFTER FIELD inbddocdt
            {<point name="input.a.inbddocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbddocdt
            #add-point:ON CHANGE inbddocdt
            {<point name="input.g.inbddocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd001
            
            #add-point:AFTER FIELD inbd001
            {<point name="input.a.inbd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd001
            #add-point:BEFORE FIELD inbd001
            {<point name="input.b.inbd001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbd001
            #add-point:ON CHANGE inbd001
            {<point name="input.g.inbd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd002
            
            #add-point:AFTER FIELD inbd002
            {<point name="input.a.inbd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd002
            #add-point:BEFORE FIELD inbd002
            {<point name="input.b.inbd002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbd002
            #add-point:ON CHANGE inbd002
            {<point name="input.g.inbd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd003
            #add-point:BEFORE FIELD inbd003
            {<point name="input.b.inbd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd003
            
            #add-point:AFTER FIELD inbd003
            {<point name="input.a.inbd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbd003
            #add-point:ON CHANGE inbd003
            {<point name="input.g.inbd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd004
            
            #add-point:AFTER FIELD inbd004
            {<point name="input.a.inbd004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd004
            #add-point:BEFORE FIELD inbd004
            {<point name="input.b.inbd004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbd004
            #add-point:ON CHANGE inbd004
            {<point name="input.g.inbd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd005
            
            #add-point:AFTER FIELD inbd005
            {<point name="input.a.inbd005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd005
            #add-point:BEFORE FIELD inbd005
            {<point name="input.b.inbd005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inbd005
            #add-point:ON CHANGE inbd005
            {<point name="input.g.inbd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbd006
            #add-point:BEFORE FIELD inbd006
            {<point name="input.b.inbd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbd006
            
            #add-point:AFTER FIELD inbd006
            {<point name="input.a.inbd006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbd006
            #add-point:ON CHANGE inbd006
            {<point name="input.g.inbd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inbdstus
            #add-point:BEFORE FIELD inbdstus
            {<point name="input.b.inbdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inbdstus
            
            #add-point:AFTER FIELD inbdstus
            {<point name="input.a.inbdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inbdstus
            #add-point:ON CHANGE inbdstus
            {<point name="input.g.inbdstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.inbdsite
         ON ACTION controlp INFIELD inbdsite
            #add-point:ON ACTION controlp INFIELD inbdsite
            {<point name="input.c.inbdsite" />}
            #END add-point
 
         #Ctrlp:input.c.inbddocno
         ON ACTION controlp INFIELD inbddocno
            #add-point:ON ACTION controlp INFIELD inbddocno
            {<point name="input.c.inbddocno" />}
            #END add-point
 
         #Ctrlp:input.c.inbddocdt
         ON ACTION controlp INFIELD inbddocdt
            #add-point:ON ACTION controlp INFIELD inbddocdt
            {<point name="input.c.inbddocdt" />}
            #END add-point
 
         #Ctrlp:input.c.inbd001
         ON ACTION controlp INFIELD inbd001
            #add-point:ON ACTION controlp INFIELD inbd001
            {<point name="input.c.inbd001" />}
            #END add-point
 
         #Ctrlp:input.c.inbd002
         ON ACTION controlp INFIELD inbd002
            #add-point:ON ACTION controlp INFIELD inbd002
            {<point name="input.c.inbd002" />}
            #END add-point
 
         #Ctrlp:input.c.inbd003
         ON ACTION controlp INFIELD inbd003
            #add-point:ON ACTION controlp INFIELD inbd003
            {<point name="input.c.inbd003" />}
            #END add-point
 
         #Ctrlp:input.c.inbd004
         ON ACTION controlp INFIELD inbd004
            #add-point:ON ACTION controlp INFIELD inbd004
            {<point name="input.c.inbd004" />}
            #END add-point
 
         #Ctrlp:input.c.inbd005
         ON ACTION controlp INFIELD inbd005
            #add-point:ON ACTION controlp INFIELD inbd005
            {<point name="input.c.inbd005" />}
            #END add-point
 
         #Ctrlp:input.c.inbd006
         ON ACTION controlp INFIELD inbd006
            #add-point:ON ACTION controlp INFIELD inbd006
            {<point name="input.c.inbd006" />}
            #END add-point
 
         #Ctrlp:input.c.inbdstus
         ON ACTION controlp INFIELD inbdstus
            #add-point:ON ACTION controlp INFIELD inbdstus
            {<point name="input.c.inbdstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_inbd_m.inbddocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO inbd_t (inbdent,inbdsite,inbddocno,inbddocdt,inbd001,inbd002,inbd003,inbd004, 
                   inbd005,inbd006,inbdstus,inbdownid,inbdowndp,inbdcrtid,inbdcrtdp,inbdcrtdt,inbdcnfid, 
                   inbdcnfdt)
               VALUES (g_enterprise,g_inbd_m.inbdsite,g_inbd_m.inbddocno,g_inbd_m.inbddocdt,g_inbd_m.inbd001, 
                   g_inbd_m.inbd002,g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005,g_inbd_m.inbd006, 
                   g_inbd_m.inbdstus,g_inbd_m.inbdownid,g_inbd_m.inbdowndp,g_inbd_m.inbdcrtid,g_inbd_m.inbdcrtdp, 
                   g_inbd_m.inbdcrtdt,g_inbd_m.inbdcnfid,g_inbd_m.inbdcnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_inbd_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint161_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE inbd_t SET (inbdsite,inbddocno,inbddocdt,inbd001,inbd002,inbd003,inbd004,inbd005, 
                   inbd006,inbdstus,inbdownid,inbdowndp,inbdcrtid,inbdcrtdp,inbdcrtdt,inbdcnfid,inbdcnfdt) = (g_inbd_m.inbdsite, 
                   g_inbd_m.inbddocno,g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002,g_inbd_m.inbd003, 
                   g_inbd_m.inbd004,g_inbd_m.inbd005,g_inbd_m.inbd006,g_inbd_m.inbdstus,g_inbd_m.inbdownid, 
                   g_inbd_m.inbdowndp,g_inbd_m.inbdcrtid,g_inbd_m.inbdcrtdp,g_inbd_m.inbdcrtdt,g_inbd_m.inbdcnfid, 
                   g_inbd_m.inbdcnfdt)
                WHERE inbdent = g_enterprise AND inbddocno = g_inbddocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("inbd_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_inbd_m_t)
               LET g_log2 = util.JSON.stringify(g_inbd_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_inbddocno_t = g_inbd_m.inbddocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="aint161.input.other" ver="3" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD inbddocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD inbeseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="aint161.insert" ver="5" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aint161_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_inbe_d.clear()   
 
 
   INITIALIZE g_inbd_m.* LIKE inbd_t.*             #DEFAULT 設定
   
   LET g_inbddocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_inbd_m.inbdownid = g_user
      LET g_inbd_m.inbdowndp = g_dept
      LET g_inbd_m.inbdcrtid = g_user
      LET g_inbd_m.inbdcrtdp = g_dept 
      LET g_inbd_m.inbdcrtdt = cl_get_current()
      LET g_inbd_m.inbdmodid = ""
      LET g_inbd_m.inbdmoddt = ""
      LET g_inbd_m.inbdstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_inbd_m.inbd003 = "2"
      LET g_inbd_m.inbdstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL aint161_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inbd_m.* = g_inbd_m_t.*
         CALL aint161_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_inbe_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_inbddocno_t = g_inbd_m.inbddocno
 
   
   LET g_wc = "(",g_wc,  
              " OR ( inbdent = '" ||g_enterprise|| "' AND",
              " inbddocno = '", g_inbd_m.inbddocno CLIPPED, "' "
 
              , ")) "
   
   CLOSE aint161_cl
   
END FUNCTION
]]>
</section>
  <section id="aint161.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint161_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO inbe_t
                  (inbeent,
                   inbedocno,
                   inbeseq
                   ,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005,inbe006,inbe008,inbe009,inbesite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_inbe_d[g_detail_idx].inbe001,g_inbe_d[g_detail_idx].inbe002,g_inbe_d[g_detail_idx].inbe003, 
                       g_inbe_d[g_detail_idx].inbe007,g_inbe_d[g_detail_idx].inbe004,g_inbe_d[g_detail_idx].inbe005, 
                       g_inbe_d[g_detail_idx].inbe006,g_inbe_d[g_detail_idx].inbe008,g_inbe_d[g_detail_idx].inbe009, 
                       g_inbe_d[g_detail_idx].inbesite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("inbe_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="aint161.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint161_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aint161_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "inbe_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint161_bcl USING g_enterprise,
                                       g_inbd_m.inbddocno,g_inbe_d[g_detail_idx].inbeseq     
      IF SQLCA.sqlcode THEN
         CALL cl_err("aint161_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aint161.main" ver="8" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT inbdsite,inbddocno,'',inbddocdt,inbd001,'',inbd002,'',inbd003,inbd004, 
       inbd005,'',inbd006,inbdstus,inbdownid,'',inbdowndp,'',inbdcrtid,'',inbdcrtdp,'',inbdcrtdt,inbdmodid, 
       '',inbdmoddt,inbdcnfid,'',inbdcnfdt", 
                      " FROM inbd_t",
                      " WHERE inbdent= ? AND inbddocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint161_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE inbdsite,inbddocno,inbddocdt,inbd001,inbd002,inbd003,inbd004,inbd005, 
       inbd006,inbdstus,inbdownid,inbdowndp,inbdcrtid,inbdcrtdp,inbdcrtdt,inbdmodid,inbdmoddt,inbdcnfid, 
       inbdcnfdt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 , 
       t8.ooag011",
               " FROM inbd_t",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=inbd001  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=inbd002 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=inbdownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=inbdowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=inbdcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=inbdcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=inbdmodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=inbdcnfid  ",
 
               " WHERE inbdent = '" ||g_enterprise|| "' AND inbddocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint161_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint161 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint161_init()   
 
      #進入選單 Menu (="N")
      CALL aint161_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint161
      
   END IF 
   
   CLOSE aint161_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="aint161.modify" ver="8" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aint161_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_inbd_m.inbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_inbddocno_t = g_inbd_m.inbddocno
 
   CALL s_transaction_begin()
   
   OPEN aint161_cl USING g_enterprise,g_inbd_m.inbddocno
   IF STATUS THEN
      CALL cl_err("OPEN aint161_cl:", STATUS, 1)
      CLOSE aint161_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint161_master_referesh USING g_inbd_m.inbddocno INTO g_inbd_m.inbdsite,g_inbd_m.inbddocno, 
       g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002,g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005, 
       g_inbd_m.inbd006,g_inbd_m.inbdstus,g_inbd_m.inbdownid,g_inbd_m.inbdowndp,g_inbd_m.inbdcrtid,g_inbd_m.inbdcrtdp, 
       g_inbd_m.inbdcrtdt,g_inbd_m.inbdmodid,g_inbd_m.inbdmoddt,g_inbd_m.inbdcnfid,g_inbd_m.inbdcnfdt, 
       g_inbd_m.inbd001_desc,g_inbd_m.inbd002_desc,g_inbd_m.inbdownid_desc,g_inbd_m.inbdowndp_desc,g_inbd_m.inbdcrtid_desc, 
       g_inbd_m.inbdcrtdp_desc,g_inbd_m.inbdmodid_desc,g_inbd_m.inbdcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_inbd_m.inbddocno,SQLCA.sqlcode,0)
      CLOSE aint161_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL aint161_show()
   WHILE TRUE
      LET g_inbddocno_t = g_inbd_m.inbddocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_inbd_m.inbdmodid = g_user 
LET g_inbd_m.inbdmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL aint161_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inbd_m.* = g_inbd_m_t.*
         CALL aint161_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE inbd_t SET (inbdmodid,inbdmoddt) = (g_inbd_m.inbdmodid,g_inbd_m.inbdmoddt)
       WHERE inbdent = g_enterprise AND inbddocno = g_inbddocno_t
 
                  
      #若單頭key欄位有變更
      IF g_inbd_m.inbddocno != g_inbddocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE inbe_t SET inbedocno = g_inbd_m.inbddocno
 
          WHERE inbeent = g_enterprise AND inbedocno = g_inbddocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("inbe_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("inbe_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_inbd_m.inbddocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aint161_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_inbd_m.inbddocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="aint161.other_dialog" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aint161.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aint161.query" ver="2" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint161_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_inbe_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aint161_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint161_browser_fill("")
      CALL aint161_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint161_filter_show('inbddocno')
   CALL aint161_filter_show('inbd004')
   CALL aint161_filter_show('inbddocdt')
   CALL aint161_filter_show('inbd001')
   CALL aint161_filter_show('inbd002')
   CALL aint161_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aint161_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="aint161.reproduce" ver="5" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION aint161_reproduce()
   DEFINE l_newno     LIKE inbd_t.inbddocno 
   DEFINE l_oldno     LIKE inbd_t.inbddocno 
 
   DEFINE l_master    RECORD LIKE inbd_t.*
   DEFINE l_detail    RECORD LIKE inbe_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_inbd_m.inbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_inbddocno_t = g_inbd_m.inbddocno
 
    
   LET g_inbd_m.inbddocno = ""
 
    
   CALL aint161_set_entry('a')
   CALL aint161_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_inbd_m.inbdownid = g_user
      LET g_inbd_m.inbdowndp = g_dept
      LET g_inbd_m.inbdcrtid = g_user
      LET g_inbd_m.inbdcrtdp = g_dept 
      LET g_inbd_m.inbdcrtdt = cl_get_current()
      LET g_inbd_m.inbdmodid = ""
      LET g_inbd_m.inbdmoddt = ""
      LET g_inbd_m.inbdstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aint161_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " inbddocno = '", g_inbd_m.inbddocno CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aint161.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint161_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("inbddocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aint161.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint161_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="aint161.set_no_entry" ver="2" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint161_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("inbddocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aint161.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint161_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="aint161.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aint161_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_inbd_m.inbddocno
   LET g_pk_array[1].column = 'inbddocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aint161.show" ver="7" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint161_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint161_b_fill() #單身填充
      CALL aint161_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_inbd_m.inbdownid_desc = cl_get_username(g_inbd_m.inbdownid)
      #LET g_inbd_m.inbdowndp_desc = cl_get_deptname(g_inbd_m.inbdowndp)
      #LET g_inbd_m.inbdcrtid_desc = cl_get_username(g_inbd_m.inbdcrtid)
      #LET g_inbd_m.inbdcrtdp_desc = cl_get_deptname(g_inbd_m.inbdcrtdp)
      #LET g_inbd_m.inbdmodid_desc = cl_get_username(g_inbd_m.inbdmodid)
      #LET g_inbd_m.inbdcnfid_desc = cl_get_deptname(g_inbd_m.inbdcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aint161_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inbd_m.inbdsite,g_inbd_m.inbddocno,g_inbd_m.oobxl003,g_inbd_m.inbddocdt,g_inbd_m.inbd001, 
       g_inbd_m.inbd001_desc,g_inbd_m.inbd002,g_inbd_m.inbd002_desc,g_inbd_m.inbd003,g_inbd_m.inbd004, 
       g_inbd_m.inbd005,g_inbd_m.inbd005_desc,g_inbd_m.inbd006,g_inbd_m.inbdstus,g_inbd_m.inbdownid, 
       g_inbd_m.inbdownid_desc,g_inbd_m.inbdowndp,g_inbd_m.inbdowndp_desc,g_inbd_m.inbdcrtid,g_inbd_m.inbdcrtid_desc, 
       g_inbd_m.inbdcrtdp,g_inbd_m.inbdcrtdp_desc,g_inbd_m.inbdcrtdt,g_inbd_m.inbdmodid,g_inbd_m.inbdmodid_desc, 
       g_inbd_m.inbdmoddt,g_inbd_m.inbdcnfid,g_inbd_m.inbdcnfid_desc,g_inbd_m.inbdcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_inbd_m.inbdstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_inbe_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint161_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="aint161.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="aint161.state_change" ver="3" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aint161_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_inbd_m.inbddocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_inbd_m.inbdstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE inbd_t SET inbdstus = lc_state 
    WHERE inbdent = g_enterprise AND inbddocno = g_inbd_m.inbddocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_inbd_m.inbdstus = lc_state
      DISPLAY BY NAME g_inbd_m.inbdstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="aint161.ui_browser_refresh" ver="2" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint161_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_inbddocno = g_inbd_m.inbddocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="aint161.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint161_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="aint161.ui_dialog" ver="32" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION aint161_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint161_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL aint161_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_inbddocno = g_inbddocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint161_fetch('') # reload data
               LET l_ac = 1
               CALL aint161_ui_detailshow() #Setting the current row 
      
               CALL aint161_idx_chk()
               #NEXT FIELD inbeseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_inbe_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL aint161_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL aint161_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint161_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint161_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint161_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint161_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aint161_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aint161_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aint161_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint161_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL aint161_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint161_idx_chk()
            
         ON ACTION previous
            CALL aint161_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint161_idx_chk()
            
         ON ACTION jump
            CALL aint161_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint161_idx_chk()
            
         ON ACTION next
            CALL aint161_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint161_idx_chk()
            
         ON ACTION last
            CALL aint161_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint161_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inbeseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint161_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint161_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint161_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint161_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint161_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint161_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aint161_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint161_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint161_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_inbd_m.inbddocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="aint161.ui_headershow" ver="6" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint161_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_inbd_m.inbddocno = g_browser[g_current_idx].b_inbddocno   
 
   EXECUTE aint161_master_referesh USING g_inbd_m.inbddocno INTO g_inbd_m.inbdsite,g_inbd_m.inbddocno, 
       g_inbd_m.inbddocdt,g_inbd_m.inbd001,g_inbd_m.inbd002,g_inbd_m.inbd003,g_inbd_m.inbd004,g_inbd_m.inbd005, 
       g_inbd_m.inbd006,g_inbd_m.inbdstus,g_inbd_m.inbdownid,g_inbd_m.inbdowndp,g_inbd_m.inbdcrtid,g_inbd_m.inbdcrtdp, 
       g_inbd_m.inbdcrtdt,g_inbd_m.inbdmodid,g_inbd_m.inbdmoddt,g_inbd_m.inbdcnfid,g_inbd_m.inbdcnfdt, 
       g_inbd_m.inbd001_desc,g_inbd_m.inbd002_desc,g_inbd_m.inbdownid_desc,g_inbd_m.inbdowndp_desc,g_inbd_m.inbdcrtid_desc, 
       g_inbd_m.inbdcrtdp_desc,g_inbd_m.inbdmodid_desc,g_inbd_m.inbdcnfid_desc
   CALL aint161_show()
   
END FUNCTION
]]>
</section>
  <section id="aint161.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint161_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint161_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aint161.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint161_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inbe_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE inbe_t 
         SET (inbedocno,
              inbeseq
              ,inbe001,inbe002,inbe003,inbe007,inbe004,inbe005,inbe006,inbe008,inbe009,inbesite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_inbe_d[g_detail_idx].inbe001,g_inbe_d[g_detail_idx].inbe002,g_inbe_d[g_detail_idx].inbe003, 
                  g_inbe_d[g_detail_idx].inbe007,g_inbe_d[g_detail_idx].inbe004,g_inbe_d[g_detail_idx].inbe005, 
                  g_inbe_d[g_detail_idx].inbe006,g_inbe_d[g_detail_idx].inbe008,g_inbe_d[g_detail_idx].inbe009, 
                  g_inbe_d[g_detail_idx].inbesite) 
         WHERE inbeent = g_enterprise AND inbedocno = ps_keys_bak[1] AND inbeseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("inbe_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("inbe_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>