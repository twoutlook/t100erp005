<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint350" std_prog="aint350" erpver="1.0" module="AIN" ver="17" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.aint350_inaa010_chk" order="1" ver="14" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 成本性質是否一致
# Memo...........:
# Usage..........: CALL aint350_inaa010_chk()
#                  RETURNING TRUE/FALSE
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_inaa010_chk()
DEFINE  r_success    LIKE type_t.num5
DEFINE  l_inaa010    LIKE inaa_t.inaa010
DEFINE  l_inaa010_1  LIKE inaa_t.inaa010

   LET r_success = TRUE
   LET l_inaa010 = ''
   LET l_inaa010_1 = ''
   #撥出營運據點
   IF NOT cl_null(g_indd_d[l_ac].indd022) THEN
      SELECT inaa010 INTO l_inaa010 FROM inaa_t
       WHERE inaaent = g_enterprise
         AND inaasite = g_indc_m.indc005
         AND inaa001 = g_indd_d[l_ac].indd022
   END IF 
   ##撥入營運據點
   IF NOT cl_null(g_indd_d[l_ac].indd032) THEN
      SELECT inaa010 INTO l_inaa010_1 FROM inaa_t
       WHERE inaaent = g_enterprise
         AND inaasite = g_site
         AND inaa001 = g_indd_d[l_ac].indd032
   END IF  
   IF NOT cl_null(l_inaa010) AND NOT cl_null(l_inaa010_1) THEN
      IF l_inaa010 <> l_inaa010_1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ain-00490'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()         
         LET r_success = FALSE
      END IF
   END IF
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint350_set_required" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_set_required()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_set_required()
   IF l_ac > 0 THEN
      IF g_indd_d[l_ac].indd110 > 0 THEN
         CALL cl_set_comp_required('indd111',TRUE)
      END IF
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.aint350_set_no_required" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_set_no_required()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_set_no_required()
   CALL cl_set_comp_required('indd111',FALSE)
END FUNCTION]]>
  </point>
  <point name="function.aint350_indd032_ref" order="3" ver="4" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indd032_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indd032_ref()
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_site
#            LET g_ref_fields[2] = g_indd_d[l_ac].indd032
#            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite = ? AND inaa001=? ","") RETURNING g_rtn_fields
#            LET g_indd_d[l_ac].indd032_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indd_d[l_ac].indd032_desc
    CALL s_desc_get_stock_desc(g_site,g_indd_d[l_ac].indd032) RETURNING g_indd_d[l_ac].indd032_desc
    DISPLAY BY NAME g_indd_d[l_ac].indd032_desc             
END FUNCTION]]>
  </point>
  <point name="function.aint350_indd033_ref" order="4" ver="4" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indd033_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indd033_ref()
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_site
#            LET g_ref_fields[2] = g_indd_d[l_ac].indd032
#            LET g_ref_fields[3] = g_indd_d[l_ac].indd033
#            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite = ? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
#            LET g_indd_d[l_ac].indd033_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indd_d[l_ac].indd033_desc
   IF NOT cl_null(g_indd_d[l_ac].indd033) THEN
      CALL s_desc_get_locator_desc(g_site,g_indd_d[l_ac].indd032,g_indd_d[l_ac].indd033) RETURNING g_indd_d[l_ac].indd033_desc
   END IF
   DISPLAY BY NAME g_indd_d[l_ac].indd033_desc
END FUNCTION]]>
  </point>
  <point name="function.aint350_indd032_chk" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indd032_chk()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indd032_chk()
DEFINE  l_inaa010      LIKE inaa_t.inaa010
DEFINE  l_inaa010_new  LIKE inaa_t.inaa010
   IF g_indc_m.indc005 = g_site THEN
            IF NOT cl_null(g_indd_d[l_ac].indd022) THEN
               LET l_inaa010 = ''
               SELECT inaa010 INTO l_inaa010 FROM inaa_t
                WHERE inaaent = g_enterprise
                  AND inaasite = g_indc_m.indc005
                  AND inaa001 = g_indd_d[l_ac].indd022
               LET l_inaa010_new = '' 
               SELECT inaa010 INTO l_inaa010_new FROM inaa_t
                WHERE inaaent = g_enterprise
                  AND inaasite = g_site
                  AND inaa001 = g_indd_d[l_ac].indd032
               IF l_inaa010 = l_inaa010_new THEN
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = ''
                  LET g_errparam.extend = g_indd_d[l_ac].indd032
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  RETURN FALSE
               END IF
            END IF
   END IF         
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.aint350_indd151_desc" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indd151_desc()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indd151_desc()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_acc        
            LET g_ref_fields[2] = g_indd_d[l_ac].indd151
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = ? AND oocql002=? ","") RETURNING g_rtn_fields
            LET g_indd_d[l_ac].indd151_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indd_d[l_ac].indd151_desc
END FUNCTION]]>
  </point>
  <point name="function.aint350_indc105_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indc105_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indc105_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_oofa001
            LET g_ref_fields[2] = g_indc_m.indc105
            CALL ap_ref_array2(g_ref_fields,"SELECT oofb011 FROM oofb_t WHERE oofbent='"||g_enterprise||"' AND oofb002=? AND oofb019 = ? ","") RETURNING g_rtn_fields
            LET g_indc_m.indc105_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indc105_desc
END FUNCTION]]>
  </point>
  <point name="function.aint350_indc106_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indc106_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indc106_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indc_m.indc106
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indc_m.indc106_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indc106_desc
END FUNCTION]]>
  </point>
  <point name="function.aint350_indc107_desc" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indc107_desc(p_indc107)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indc107_desc(p_indc107)
DEFINE p_indc107      LIKE indc_t.indc107
DEFINE p_oocq019      LIKE oocq_t.oocq019
DEFINE r_indc107_desc LIKE oockl_t.oockl005

   IF NOT cl_null(g_indc_m.indc106) THEN
      SELECT oocq019 INTO p_oocq019
        FROM oocq_t WHERE oocq001='263' AND oocq002= g_indc_m.indc106
   END IF

   IF NOT cl_null(p_oocq019) THEN
      CASE
         WHEN p_oocq019 ='1' OR p_oocq019 ='4'
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = p_indc107
           CALL ap_ref_array2(g_ref_fields,"SELECT oockl005 FROM oockl_t WHERE oocklent='"||g_enterprise||"' AND oockl003=? AND oockl004='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET r_indc107_desc = '', g_rtn_fields[1] , ''
           RETURN r_indc107_desc

         WHEN p_oocq019 ='2'
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = p_indc107
           CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql001 = '262' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET r_indc107_desc = '', g_rtn_fields[1] , ''
           RETURN r_indc107_desc

         WHEN p_oocq019 ='3'
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = p_indc107
           CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql001 = '276' AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET r_indc107_desc = '', g_rtn_fields[1] , ''
           RETURN r_indc107_desc
      END CASE
   ELSE
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = p_indc107
      CALL ap_ref_array2(g_ref_fields,"SELECT oockl005 FROM oockl_t WHERE oocklent='"||g_enterprise||"' AND oockl003=? AND oocql001 = '262' AND oockl004='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET r_indc107_desc = '', g_rtn_fields[1] , ''
      RETURN r_indc107_desc
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aint350_indc151_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_indc151_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indc151_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_acc        
            LET g_ref_fields[2] = g_indc_m.indc151
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = ? AND oocql002=? ","") RETURNING g_rtn_fields
            LET g_indc_m.indc151_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indc151_desc
END FUNCTION]]>
  </point>
  <point name="function.aint350_unit_round" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint350_unit_round(p_indd006,p_indd103)
#                  RETURNING r_indd103
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_unit_round(p_indd006,p_indd103)
DEFINE p_indd006   LIKE indd_t.indd006
DEFINE p_indd103   LIKE indd_t.indd103
DEFINE l_success   LIKE type_t.num5
DEFINE l_ooca002   LIKE ooca_t.ooca002      #小数位数
DEFINE l_ooca004   LIKE ooca_t.ooca004      #舍入类型 
DEFINE r_indd103   LIKE indd_t.indd103      #數量

       LET l_success = NULL
       LET l_ooca002 = 0
       LET l_ooca004 = NULL
       LET r_indd103 = 0
       
       IF cl_null(p_indd006) OR cl_null(p_indd103) THEN
          RETURN p_indd103
       END IF
       
       #抓取单位档中的小数位数和舍入类型
       IF NOT cl_null(p_indd006) THEN
          CALL s_aooi250_get_msg(p_indd006) RETURNING l_success,l_ooca002,l_ooca004
          IF l_success THEN
             IF NOT cl_null(p_indd103) THEN
                CALL s_num_round(l_ooca004,p_indd103,l_ooca002) RETURNING r_indd103
                RETURN r_indd103
             END IF
          END IF
       END IF
       RETURN r_indd103
END FUNCTION]]>
  </point>
  <point name="function.aint350_get_ooef004" order="12" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 獲取參照表
# Memo...........:
# Usage..........: CALL aint350_get_ooef004()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_get_ooef004()
DEFINE  l_ooef004    LIKE ooef_t.ooef004
   SELECT ooef004 INTO l_ooef004 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   RETURN l_ooef004   
END FUNCTION]]>
  </point>
  <point name="function.aint350_indd151_ref" order="13" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 理由碼說明
# Memo...........:
# Usage..........: CALL aint350_indd151_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indd151_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_acc        
            LET g_ref_fields[2] = g_indd_d[l_ac].indd151
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = ? AND oocql002=? ","") RETURNING g_rtn_fields
            LET g_indd_d[l_ac].indd151_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indd_d[l_ac].indd151_desc
END FUNCTION]]>
  </point>
  <point name="function.aint350_indd111_ref" order="14" ver="4" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 理由碼说明
# Memo...........:
# Usage..........: CALL aint350_indd111_ref()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint350_indd111_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_acc1        
            LET g_ref_fields[2] = g_indd_d[l_ac].indd111
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = ? AND oocql002=? ","") RETURNING g_rtn_fields
            LET g_indd_d[l_ac].indd111_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indd_d[l_ac].indd111_desc
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_desc_get_project_desc(g_indd_d[l_ac].indd042) RETURNING g_indd_d[l_ac].indd042_desc
         DISPLAY BY NAME g_indd_d[l_ac].indd042_desc

         CALL s_desc_get_wbs_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd043) RETURNING g_indd_d[l_ac].indd043_desc
         DISPLAY BY NAME g_indd_d[l_ac].indd043_desc

         CALL s_desc_get_activity_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd044) RETURNING g_indd_d[l_ac].indd044_desc
         DISPLAY BY NAME g_indd_d[l_ac].indd044_desc]]>
  </point>
  <point name="b_fill.sql" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc = g_wc," AND indc000 = '3' AND indcsite = '",g_site,"'"]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_wc = l_wc," AND indc000 = '3' AND indcsite = '",g_site,"'"]]>
  </point>
  <point name="construct.c.indc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indc001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc001  #顯示到畫面上
            NEXT FIELD indc001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indc003_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc003  #顯示到畫面上
            NEXT FIELD indc003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc004  #顯示到畫面上
            NEXT FIELD indc004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_12()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc005  #顯示到畫面上
            NEXT FIELD indc005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc101" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc101  #顯示到畫面上
            NEXT FIELD indc101                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc105" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indc105_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc105  #顯示到畫面上
            NEXT FIELD indc105                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc106" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '263'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc106  #顯示到畫面上
            NEXT FIELD indc106                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc107" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indc107_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc107  #顯示到畫面上
            NEXT FIELD indc107                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc108" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indc108_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc108  #顯示到畫面上
            NEXT FIELD indc108                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indc151" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indc151  #顯示到畫面上
            NEXT FIELD indc151                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indccnfid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indccnfid  #顯示到畫面上
            NEXT FIELD indccnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indccrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indccrtdp  #顯示到畫面上
            NEXT FIELD indccrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indccrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indccrtid  #顯示到畫面上
            NEXT FIELD indccrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indcdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indcdocno_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indcdocno  #顯示到畫面上
            NEXT FIELD indcdocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indcmodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indcmodid  #顯示到畫面上
            NEXT FIELD indcmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indcowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indcowndp  #顯示到畫面上
            NEXT FIELD indcowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indcownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indcownid  #顯示到畫面上
            NEXT FIELD indcownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indcpstid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indcpstid  #顯示到畫面上
            NEXT FIELD indcpstid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imay001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd002  #顯示到畫面上
            NEXT FIELD indd002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indd004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd004  #顯示到畫面上
            NEXT FIELD indd004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd006" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd006  #顯示到畫面上
            NEXT FIELD indd006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd022  #顯示到畫面上
            NEXT FIELD indd022                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd023" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indd023()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd023  #顯示到畫面上
            NEXT FIELD indd023                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd024" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inai006()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd024  #顯示到畫面上
            NEXT FIELD indd024                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd032" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_inaa001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd032  #顯示到畫面上
            NEXT FIELD indd032                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.indd033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_inab002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd033  #顯示到畫面上
            NEXT FIELD indd033                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd042" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd042  #顯示到畫面上
            NEXT FIELD indd042                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd043" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbb002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd043  #顯示到畫面上
            NEXT FIELD indd043                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd044" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_pjbm002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd044  #顯示到畫面上
            NEXT FIELD indd044                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd101" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indc003_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd101  #顯示到畫面上
            NEXT FIELD indd101                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd102" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_indd102()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd102  #顯示到畫面上
            NEXT FIELD indd102                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd104" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd104  #顯示到畫面上
            NEXT FIELD indd104                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd111" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_acc1
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd111  #顯示到畫面上
            NEXT FIELD indd111                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indd151" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_acc
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indd151  #顯示到畫面上
            NEXT FIELD indd151                     #返回原欄位
    

]]>
  </point>
  <point name="cs.after_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF cl_null(g_wc) THEN LET g_wc = " 1=1" END IF
   LET g_wc = g_wc," AND indc000 = '3' AND indcsite = '",g_site,"'"]]>
  </point>
  <point name="delete.before_ask" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_indc_m.indcstus <> 'N' THEN
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')   
      RETURN 
   END IF]]>
  </point>
  <point name="delete.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("insert,delete,reproduce", FALSE)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN   
      CALL cl_set_comp_visible("indd104,indd104_desc,indd105,indd106,indd108,indd109",FALSE)
   END IF 
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN   
      CALL cl_set_comp_visible("indd004",FALSE)
   END IF     ]]>
  </point>
  <point name="global.variable" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_acc                 LIKE gzcb_t.gzcb004
DEFINE g_acc1                LIKE gzcb_t.gzcb004
DEFINE g_oofa001             LIKE oofa_t.oofa001
DEFINE g_ooef004             LIKE ooef_t.ooef004]]>
  </point>
  <point name="init.init" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('indc102','2081')
   CALL cl_set_combo_scc('indd111','3084') 
   SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = 'aint330'
   SELECT gzcb004 INTO g_acc1 FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = 'aint350'   
   SELECT oofa001 INTO g_oofa001 FROM oofa_t 
    WHERE oofaent = g_enterprise AND oofa002 = '1' AND oofa003 = g_site 
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0028') = 'N' THEN   
      CALL cl_set_comp_visible("indd104,indd104_desc,indd105,indd106,indd108,indd109",FALSE)
   END IF 
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN   
      CALL cl_set_comp_visible("indd004,indd004_desc",FALSE)
   END IF 
   CALL aint350_get_ooef004() RETURNING g_ooef004   ]]>
  </point>
  <point name="input.a.indc003" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indc_m.indc003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_ooef004
               LET g_chkparam.arg2 = g_indc_m.indc003
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_indadocno") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.indc004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indc_m.indc004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indc_m.indc004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_indc_m.indc004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indc004_desc

]]>
  </point>
  <point name="input.a.indc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indc_m.indc005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indc_m.indc005

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_13") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indc_m.indc005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indc_m.indc005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indc005_desc

]]>
  </point>
  <point name="input.a.indc101" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indc_m.indc101) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = '參數2'
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indc_m.indc101
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indc_m.indc101_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indc101_desc

]]>
  </point>
  <point name="input.a.indc105" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indc_m.indc105) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = '參數2'
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oofb019_5") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indc_m.indc105
            CALL ap_ref_array2(g_ref_fields,"SELECT oofb011 FROM oofb_t WHERE oofbent='"||g_enterprise||"' AND oofb001=? ","") RETURNING g_rtn_fields
            LET g_indc_m.indc105_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indc105_desc

]]>
  </point>
  <point name="input.a.indc106" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint350_indc106_ref()
            IF NOT cl_null(g_indc_m.indc106) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = '263'
               LET g_chkparam.arg2 = g_indc_m.indc106
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indc_m.indc106 = g_indc_m_t.indc106
                  CALL aint350_indc106_ref()
                  NEXT FIELD CURRENT
               END IF
           
            END IF 
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indc106
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indc_m.indc106_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indc106_desc

]]>
  </point>
  <point name="input.a.indc107" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.indc108" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.indc151" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indc_m.indc151) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = '參數2'
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.indcdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indc_m.indcdocno) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = '參數2'
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooba002_9") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indc_m.indcdocno
            CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indc_m.indcdocno_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indc_m.indcdocno_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_indc_m.indcdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_indc_m.indcdocno != g_indcdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indc_t WHERE "||"indcent = '" ||g_enterprise|| "' AND "||"indcdocno = '"||g_indc_m.indcdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.indd002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaa001_5") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indd_d[l_ac].indd002
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indd_d[l_ac].indd002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indd_d[l_ac].indd002_desc

]]>
  </point>
  <point name="input.a.page1.indd004" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.page1.indd006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indd_d[l_ac].indd006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indd_d[l_ac].indd006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indd_d[l_ac].indd006_desc

]]>
  </point>
  <point name="input.a.page1.indd021" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd021) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.indd022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd022) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indc_m.indc005
               LET g_chkparam.arg2 = g_indd_d[l_ac].indd022
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.page1.indd023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd023) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
#               LET g_chkparam.arg2 = '參數2'
#               LET g_chkparam.arg3 = 
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inab002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            
            END IF 

]]>
  </point>
  <point name="input.a.page1.indd024" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd024) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inai006") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.page1.indd031" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd031) THEN 
               CALL aint350_unit_round(g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd031) RETURNING g_indd_d[l_ac].indd031
               #add by lixh 20150227
               CALL s_aooi250_convert_qty(g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd041,g_indd_d[l_ac].indd021)      
                   RETURNING r_success,r_indd021       
               #add by lixh 20150227                 
            #   IF g_indd_d[l_ac].indd031 > g_indd_d[l_ac].indd021 THEN
               IF g_indd_d[l_ac].indd031 > r_indd021 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00293'
                  LET g_errparam.extend = g_indd_d[l_ac].indd031
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_indd_d[l_ac].indd031 = g_indd_d_t.indd031                  
                  NEXT FIELD indd031
               END IF               
#               IF g_indd_d[l_ac].indd031 <> g_indd_d[l_ac].indd021 THEN
#                  LET g_indd_d[l_ac].indd110 = g_indd_d[l_ac].indd021 - g_indd_d[l_ac].indd031
#               END IF
#               LET g_indd_d[l_ac].indd110 = g_indd_d[l_ac].indd021 - g_indd_d[l_ac].indd031

               #add by lixh 20150227
               IF g_indd_d[l_ac].indd031 <> r_indd021 THEN
                  LET g_indd_d[l_ac].indd110 = r_indd021 - g_indd_d[l_ac].indd031
               ELSE
                  LET g_indd_d[l_ac].indd110 = 0               
               END IF
               #add by lixh 20150227
               
               IF g_indd_d[l_ac].indd110 = 0 THEN
                  LET g_indd_d[l_ac].indd111 = ''
               END IF               
               CALL aint350_unit_round(g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd110) RETURNING g_indd_d[l_ac].indd110
               IF NOT cl_null(g_indd_d[l_ac].indd104) THEN       
                  IF g_indd_d[l_ac].indd031 <> g_indd_d_t.indd031 OR g_indd_d_t.indd031 IS NULL THEN             
#                     CALL s_aimi190_get_convert(g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd104) 
#                     RETURNING r_success,r_rate    #xj mod
                     CALL s_aooi250_convert_qty(g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd104,g_indd_d[l_ac].indd031)
                        RETURNING r_success,g_indd_d[l_ac].indd109
#                     LET g_indd_d[l_ac].indd109 = g_indd_d[l_ac].indd031 * r_rate  #xj mod
                     CALL aint350_unit_round(g_indd_d[l_ac].indd104,g_indd_d[l_ac].indd109) RETURNING g_indd_d[l_ac].indd109                    
                  END IF                                  
               END IF                  
            END IF 

            CALL aint350_set_entry_b(l_cmd)
            CALL aint350_set_no_required()
            CALL aint350_set_required()
            CALL aint350_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.indd032" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd032) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_indd_d[l_ac].indd032
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET  g_indd_d[l_ac].indd032 = g_indd_d_t.indd032 
                  CALL aint350_indd032_ref()                  
                  NEXT FIELD CURRENT
               END IF
               #add by lixh 20150225
               IF NOT aint350_inaa010_chk() THEN
                  LET  g_indd_d[l_ac].indd032 = g_indd_d_t.indd032 
                  CALL aint350_indd032_ref()                  
                  NEXT FIELD indd032               
               END IF               
               #add by lixh 20150225
               IF NOT aint350_indd032_chk() THEN
                  LET  g_indd_d[l_ac].indd032 = g_indd_d_t.indd032 
                  CALL aint350_indd032_ref()                  
                  NEXT FIELD indd032                  
               END IF               
               CALL s_control_chk_doc('7',g_indc_m.indcdocno,g_indd_d[l_ac].indd032,g_indd_d[l_ac].indd033,'','','') RETURNING r_success,l_flag
               IF r_success THEN
                  IF NOT l_flag THEN
                     LET  g_indd_d[l_ac].indd032 = g_indd_d_t.indd032 
                     CALL aint350_indd032_ref()
                     NEXT FIELD indd032
                  END IF
               ELSE
                  LET g_indd_d[l_ac].indd032 = g_indd_d_t.indd032
                  CALL aint350_indd032_ref()
                  NEXT FIELD indd032
               END IF                
               CALL aint350_set_entry_b(l_cmd)
               CALL aint350_set_no_required()
               CALL aint350_set_required()
               CALL aint350_set_no_entry_b(l_cmd)
               CALL aint350_indd032_ref()
            END IF 


]]>
  </point>
  <point name="input.a.page1.indd033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd033) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               SELECT inaa007 INTO l_inaa007 FROM inaa_t
                WHERE inaaent = g_enterprise
                  AND inaasite = g_site
                  AND inaa001 = g_indd_d[l_ac].indd032        
               IF l_inaa007 = '1' THEN                
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_site
                  LET g_chkparam.arg2 = g_indd_d[l_ac].indd032
                  LET g_chkparam.arg3 = g_indd_d[l_ac].indd033
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_inab002") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET  g_indd_d[l_ac].indd033 = g_indd_d_t.indd033 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL s_control_chk_doc('7',g_indc_m.indcdocno,g_indd_d[l_ac].indd032,g_indd_d[l_ac].indd033,'','','') RETURNING r_success,l_flag
               IF r_success THEN
                  IF NOT l_flag THEN
                     LET  g_indd_d[l_ac].indd033 = g_indd_d_t.indd033 
                     CALL aint350_indd033_ref()
                     NEXT FIELD indd033
                  END IF
               ELSE
                  LET  g_indd_d[l_ac].indd033 = g_indd_d_t.indd033 
                  CALL aint350_indd033_ref()
                  NEXT FIELD indd033
               END IF 
               CALL aint350_indd033_ref()                
            END IF 
]]>
  </point>
  <point name="input.a.page1.indd041" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indd_d[l_ac].indd041
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indd_d[l_ac].indd041_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indd_d[l_ac].indd041_desc

]]>
  </point>
  <point name="input.a.page1.indd042" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_project_desc(g_indd_d[l_ac].indd042) RETURNING g_indd_d[l_ac].indd042_desc
            DISPLAY BY NAME g_indd_d[l_ac].indd042_desc
            
            IF NOT cl_null(g_indd_d[l_ac].indd042) THEN 
               IF g_indd_d[l_ac].indd042 != g_indd_d_o.indd042 OR cl_null(g_indd_d_o.indd042) THEN
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
                  
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_indd_d[l_ac].indd042
                     
                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_pjba001") THEN
                     #檢查成功時後續處理
                     LET g_indd_d[l_ac].indd042 = g_indd_d_o.indd042
                     CALL s_desc_get_project_desc(g_indd_d[l_ac].indd042) RETURNING g_indd_d[l_ac].indd042_desc
                     DISPLAY BY NAME g_indd_d[l_ac].indd042_desc
                     NEXT FIELD CURRENT
                  END IF
                  LET g_indd_d[l_ac].indd043 = ''
                  LET g_indd_d[l_ac].indd043_desc = ''
                  LET g_indd_d[l_ac].indd044 = ''
                  LET g_indd_d[l_ac].indd044_desc = ''
               END IF
            END IF 
            LET g_indd_d_o.indd042 = g_indd_d[l_ac].indd042
            
]]>
  </point>
  <point name="input.a.page1.indd043" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_wbs_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd043) RETURNING g_indd_d[l_ac].indd043_desc
            DISPLAY BY NAME g_indd_d[l_ac].indd043_desc
            
            IF NOT cl_null(g_indd_d[l_ac].indd043) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indd_d[l_ac].indd042
               LET g_chkparam.arg2 = g_indd_d[l_ac].indd043
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbb002") THEN
                  #檢查失敗時後續處理
                  LET g_indd_d[l_ac].indd043 = g_indd_d_t.indd043
                  CALL s_desc_get_wbs_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd043) RETURNING g_indd_d[l_ac].indd043_desc
                  DISPLAY BY NAME g_indd_d[l_ac].indd043_desc
                  NEXT FIELD CURRENT
               END IF

            END IF

]]>
  </point>
  <point name="input.a.page1.indd044" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_activity_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd044) RETURNING g_indd_d[l_ac].indd044_desc
            DISPLAY BY NAME g_indd_d[l_ac].indd044_desc
            
            IF NOT cl_null(g_indd_d[l_ac].indd044) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indd_d[l_ac].indd042
               LET g_chkparam.arg2 = g_indd_d[l_ac].indd044
                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbm002") THEN
                  #檢查失敗時後續處理
                  LET g_indd_d[l_ac].indd044 = g_indd_d_t.indd044
                  CALL s_desc_get_activity_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd044) RETURNING g_indd_d[l_ac].indd044_desc
                  DISPLAY BY NAME g_indd_d[l_ac].indd044_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            
]]>
  </point>
  <point name="input.a.page1.indd101" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd101) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = '參數2'
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_indadocno") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.page1.indd104" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indd_d[l_ac].indd104
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indd_d[l_ac].indd104_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indd_d[l_ac].indd104_desc

]]>
  </point>
  <point name="input.a.page1.indd108" order="" ver="3" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd108) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.indd109" order="" ver="3" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].indd109) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.indd111" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint350_indd111_ref()
            IF NOT cl_null(g_indd_d[l_ac].indd111) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_acc1
#               LET g_chkparam.arg2 = g_indd_d[l_ac].indd111
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_oocq002_1") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  LET g_indd_d[l_ac].indd111 = g_indd_d_t.indd111
#                  CALL aint350_indd111_ref()
#                  NEXT FIELD CURRENT
#               END IF
               IF NOT s_azzi650_chk_exist(g_acc1,g_indd_d[l_ac].indd111) THEN
                  LET g_indd_d[l_ac].indd111 = g_indd_d_t.indd111
                  CALL aint350_indd111_ref()
                  NEXT FIELD CURRENT
               END IF  
               CALL aint350_indd111_ref()

            END IF 

]]>
  </point>
  <point name="input.a.page1.indd151" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint350_indd151_ref()
            IF NOT cl_null(g_indd_d[l_ac].indd151) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_acc
               LET g_chkparam.arg2 = g_indd_d[l_ac].indd151
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_oocq002_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indd_d[l_ac].indd151 = g_indd_d_t.indd151
                  CALL aint350_indd151_ref()
                  NEXT FIELD CURRENT
               END IF
            
               CALL aint350_indd151_ref()
            END IF 

]]>
  </point>
  <point name="input.a.page1.indddocno" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_indc_m.indcdocno IS NOT NULL AND g_indd_d[g_detail_idx].indddocno IS NOT NULL AND g_indd_d[g_detail_idx].inddseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indc_m.indcdocno != g_indcdocno_t OR g_indd_d[g_detail_idx].indddocno != g_indd_d_t.indddocno OR g_indd_d[g_detail_idx].inddseq != g_indd_d_t.inddseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indd_t WHERE "||"inddent = '" ||g_enterprise|| "' AND "||"indddocno = '"||g_indc_m.indcdocno ||"' AND "|| "inddseq = '"||g_indd_d[g_detail_idx].indddocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inddseq" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indd_d[l_ac].inddseq) THEN 
            END IF 


            #此段落由子樣板a05產生
            IF  g_indc_m.indcdocno IS NOT NULL AND g_indd_d[g_detail_idx].inddseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indc_m.indcdocno != g_indcdocno_t OR g_indd_d[g_detail_idx].inddseq != g_indd_d_t.inddseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indd_t WHERE "||"inddent = '" ||g_enterprise|| "' AND "||"indddocno = '"||g_indc_m.indcdocno ||"' AND "|| "inddseq = '"||g_indd_d[g_detail_idx].inddseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL cl_set_combo_scc('indd111','3084') ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aint350_set_no_required()
               CALL aint350_set_required()]]>
  </point>
  <point name="input.body.insert.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint350_set_no_required()
            CALL aint350_set_required()]]>
  </point>
  <point name="input.c.indc003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indc003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_indadocno()                                #呼叫開窗

            LET g_indc_m.indc003 = g_qryparam.return1              

            DISPLAY g_indc_m.indc003 TO indc003              #

            NEXT FIELD indc003                          #返回原欄位

]]>
  </point>
  <point name="input.c.indc004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indc004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_indc_m.indc004 = g_qryparam.return1              

            DISPLAY g_indc_m.indc004 TO indc004              #

            NEXT FIELD indc004                          #返回原欄位

]]>
  </point>
  <point name="input.c.indc005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indc005             #給予default值
            LET g_qryparam.default2 = "" #g_indc_m.ooefl003 #說明(簡稱)
            #給予arg
#            LET g_qryparam.arg1 = "" #
#            LET g_qryparam.arg2 = "" #
            
            CALL q_ooef001_12()                                #呼叫開窗

            LET g_indc_m.indc005 = g_qryparam.return1              
            #LET g_indc_m.ooefl003 = g_qryparam.return2 
            DISPLAY g_indc_m.indc005 TO indc005              #
            #DISPLAY g_indc_m.ooefl003 TO ooefl003 #說明(簡稱)
            NEXT FIELD indc005                          #返回原欄位

]]>
  </point>
  <point name="input.c.indc101" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indc101             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_indc_m.indc101 = g_qryparam.return1              

            DISPLAY g_indc_m.indc101 TO indc101              #

            NEXT FIELD indc101                          #返回原欄位

]]>
  </point>
  <point name="input.c.indc105" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indc105             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oofb019_1()                                #呼叫開窗

            LET g_indc_m.indc105 = g_qryparam.return1              

            DISPLAY g_indc_m.indc105 TO indc105              #

            NEXT FIELD indc105                          #返回原欄位

]]>
  </point>
  <point name="input.c.indc106" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indc106             #給予default值
            LET g_qryparam.default2 = "" #g_indc_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = '263'

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_indc_m.indc106 = g_qryparam.return1              
            #LET g_indc_m.oocq002 = g_qryparam.return2 
            DISPLAY g_indc_m.indc106 TO indc106              #
            #DISPLAY g_indc_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD indc106                          #返回原欄位

]]>
  </point>
  <point name="input.c.indc151" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indc151             #給予default值
            LET g_qryparam.default2 = "" #g_indc_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = g_acc

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_indc_m.indc151 = g_qryparam.return1              
            #LET g_indc_m.oocq002 = g_qryparam.return2 
            DISPLAY g_indc_m.indc151 TO indc151              #
            #DISPLAY g_indc_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD indc151                          #返回原欄位

]]>
  </point>
  <point name="input.c.indcdocno" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indc_m.indcdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.arg2 = "" #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_indc_m.indcdocno = g_qryparam.return1              

            DISPLAY g_indc_m.indcdocno TO indcdocno              #

            NEXT FIELD indcdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imay001()                                #呼叫開窗

            LET g_indd_d[l_ac].indd002 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd002 TO indd002              #

            NEXT FIELD indd002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd006" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_indd_d[l_ac].indd006 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd006 TO indd006              #

            NEXT FIELD indd006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd022" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd022             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaa001_5()                                #呼叫開窗

            LET g_indd_d[l_ac].indd022 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd022 TO indd022              #

            NEXT FIELD indd022                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd023" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd023             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.arg2 = "" #
            
            CALL q_inab002_6()                                #呼叫開窗

            LET g_indd_d[l_ac].indd023 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd023 TO indd023              #

            NEXT FIELD indd023                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd024" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd024             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inai006()                                #呼叫開窗

            LET g_indd_d[l_ac].indd024 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd024 TO indd024              #

            NEXT FIELD indd024                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd032" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd032             #給予default值

            IF NOT cl_null(g_indd_d[l_ac].indd022) AND g_indc_m.indc005 = g_site THEN
               LET l_inaa010 = ''
               SELECT inaa010 INTO l_inaa010 FROM inaa_t
                WHERE inaaent = g_enterprise
                  AND inaasite = g_site
                  AND inaa001 = g_indd_d[l_ac].indd022
               IF l_inaa010 = 'Y' THEN                  
                  LET g_qryparam.where = " inaa010 = 'Y' "
               ELSE               
                  LET g_qryparam.where = " inaa010 = 'N' "
               END IF
            END IF 
            #給予arg
            LET g_qryparam.arg1 = g_site

            
            CALL q_inaa001_4()                                #呼叫開窗

            LET g_indd_d[l_ac].indd032 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd032 TO indd032              #

            NEXT FIELD indd032                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd033" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd033             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = g_indd_d[l_ac].indd032
            
            CALL q_inab002_6()                                #呼叫開窗

            LET g_indd_d[l_ac].indd033 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd033 TO indd033              #

            NEXT FIELD indd033                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd042" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd042             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_pjba001()                                #呼叫開窗

            LET g_indd_d[l_ac].indd042 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd042 TO indd042              #
            CALL s_desc_get_project_desc(g_indd_d[l_ac].indd042) RETURNING g_indd_d[l_ac].indd042_desc
            DISPLAY BY NAME g_indd_d[l_ac].indd042_desc

            NEXT FIELD indd042                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd043" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd043             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_indd_d[l_ac].indd042  #s


            CALL q_pjbb002_1()                                #呼叫開窗

            LET g_indd_d[l_ac].indd043 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd043 TO indd043              #
            CALL s_desc_get_wbs_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd043) RETURNING g_indd_d[l_ac].indd043_desc
            DISPLAY BY NAME g_indd_d[l_ac].indd043_desc

            NEXT FIELD indd043                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd044" order="" ver="17" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd044             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_indd_d[l_ac].indd042  #s


            CALL q_pjbm002()                                #呼叫開窗

            LET g_indd_d[l_ac].indd044 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd044 TO indd044              #
            CALL s_desc_get_activity_desc(g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd044) RETURNING g_indd_d[l_ac].indd044_desc
            DISPLAY BY NAME g_indd_d[l_ac].indd044_desc

            NEXT FIELD indd044                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd101" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd101             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_indadocno_2()                                #呼叫開窗

            LET g_indd_d[l_ac].indd101 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd101 TO indd101              #

            NEXT FIELD indd101                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd104" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd104             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_indd_d[l_ac].indd104 = g_qryparam.return1              

            DISPLAY g_indd_d[l_ac].indd104 TO indd104              #

            NEXT FIELD indd104                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd111" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd111             #給予default值
            LET g_qryparam.default2 = "" #g_indd_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = g_acc1

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_indd_d[l_ac].indd111 = g_qryparam.return1              
            #LET g_indd_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_indd_d[l_ac].indd111 TO indd111              #
            #DISPLAY g_indd_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD indd111                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indd151" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indd_d[l_ac].indd151             #給予default值
            LET g_qryparam.default2 = "" #g_indd_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = g_acc

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_indd_d[l_ac].indd151 = g_qryparam.return1              
            #LET g_indd_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_indd_d[l_ac].indd151 TO indd151              #
            #DISPLAY g_indd_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD indd151                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="14" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  r_success             LIKE type_t.num5
   DEFINE  l_flag                LIKE type_t.num5  
   DEFINE  l_inaa010             LIKE inaa_t.inaa010
   DEFINE  r_rate                LIKE inaj_t.inaj014
   DEFINE  l_inaa007             LIKE inaa_t.inaa007 
   DEFINE  r_indd021             LIKE indd_t.indd021   #add by lixh 20150227    ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="menu.detail_show.page1_sub.prog_aint320" order="" ver="16" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aint320'
               LET la_param.param[1] = g_indd_d[l_ac].indd101

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 

]]>
  </point>
  <point name="menu.prog_indc003" order="" ver="16" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               INITIALIZE la_param.* TO NULL
               LET la_param.prog     = 'aint330'
               LET la_param.param[1] = g_indc_m.indc003

               LET ls_js = util.JSON.stringify(la_param)
               CALL cl_cmdrun_wait(ls_js)
 

]]>
  </point>
  <point name="menu.prog_indc004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #+ 此段落由子樣板a45產生
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",'')

]]>
  </point>
  <point name="modify.before_input" order="" ver="16" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #2015-4-24 zhujing add--(S)
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_indc_m.indcstus MATCHES "[DR]" THEN
         LET g_indc_m.indcstus = "N"
      END IF
      #2015-4-24 zhujing add--(E)]]>
  </point>
  <point name="modify.before_show" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT indc000 INTO l_indc000 FROM indc_t 
    WHERE indcent = g_enterprise
      AND indcdocno = g_indc_m.indc001
   IF l_indc000 = '1' THEN
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')   
      RETURN 
   END IF
   IF g_indc_m.indcstus <> 'P' THEN
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')   
      RETURN 
   END IF]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_indc000    LIKE indc_t.indc000]]>
  </point>
  <point name="send.before_send" order="" ver="16" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="13" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_indc_m.indcstus NOT MATCHES "[OPNDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   CALL cl_set_act_visible("delete", FALSE) ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("indd031,indd033,indd109,indd111",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("indc024",FALSE)]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_inaa007  LIKE inaa_t.inaa007  ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="15" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_indc_m.indc102 = '3' THEN
      CALL cl_set_comp_entry("indd031,indd109",FALSE) 
   END IF   
   IF NOT cl_null(g_indd_d[l_ac].indd032) AND l_ac > 0 THEN
      SELECT inaa007 INTO l_inaa007 FROM inaa_t
       WHERE inaaent = g_enterprise
         AND inaasite = g_site
         AND inaa001 = g_indd_d[l_ac].indd032
      IF l_inaa007 = '5' THEN
         CALL cl_set_comp_entry("indd033",FALSE) 
         LET g_indd_d[l_ac].indd033 = ' '     #add by lixh 20150310
      END IF      
   END IF    
   IF g_indd_d[l_ac].indd110 > 0 THEN
   ELSE
      CALL cl_set_comp_entry("indd111",FALSE) 
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indd_d[l_ac].indd002
#            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indd_d[l_ac].indd002_desc = '', g_rtn_fields[1] , ''
#            LET g_indd_d[l_ac].indd002_desc_desc = '', g_rtn_fields[2] , ''
#            DISPLAY BY NAME g_indd_d[l_ac].indd002_desc
#            DISPLAY BY NAME g_indd_d[l_ac].indd002_desc_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indd_d[l_ac].indd006
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indd_d[l_ac].indd006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indd_d[l_ac].indd006_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indd_d[l_ac].indd104
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indd_d[l_ac].indd104_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indd_d[l_ac].indd104_desc

#            CALL aint350_indd032_ref()
#            CALL aint350_indd033_ref()
            CALL aint350_indd151_desc()
            CALL aint350_indd111_ref()
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indc005
#            LET g_ref_fields[2] = g_indd_d[l_ac].indd022
#            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite = ? AND inaa001=? ","") RETURNING g_rtn_fields
#            LET g_indd_d[l_ac].indd022_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indd_d[l_ac].indd022_desc
            CALL s_desc_get_stock_desc(g_indc_m.indc005,g_indd_d[l_ac].indd022) RETURNING g_indd_d[l_ac].indd022_desc 
            DISPLAY BY NAME g_indd_d[l_ac].indd022_desc 

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indc005
#            LET g_ref_fields[2] = g_indd_d[l_ac].indd022
#            LET g_ref_fields[3] = g_indd_d[l_ac].indd023
#            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite = ? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
#            LET g_indd_d[l_ac].indd023_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indd_d[l_ac].indd023_desc
           IF NOT cl_null(g_indd_d[l_ac].indd023) THEN
              CALL s_desc_get_locator_desc(g_indc_m.indc005,g_indd_d[l_ac].indd022,g_indd_d[l_ac].indd023)
                   RETURNING g_indd_d[l_ac].indd023_desc
           END IF
           CALL s_feature_description(g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd004)
                RETURNING r_success,g_indd_d[l_ac].indd004_desc ]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE r_success LIKE type_t.num5]]>
  </point>
  <point name="show.head.reference" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_oofa001 = ''
            SELECT oofa001 INTO g_oofa001 FROM oofa_t 
             WHERE oofaent = g_enterprise AND oofa002 = '1' AND oofa003 = g_site        
            
            CALL s_aooi200_get_slip_desc(g_indc_m.indcdocno) RETURNING g_indc_m.indcdocno_desc
            DISPLAY BY NAME g_indc_m.indcdocno_desc 
#            CALL s_desc_get_department_desc(g_indc_m.indc005) RETURNING g_indc_m.indc005_desc
#            DISPLAY BY NAME g_indc_m.indc005_desc
            CALL aint350_indc105_ref()  
#            CALL aint350_indc106_ref()   
            CALL aint350_indc151_ref()    
            IF NOT cl_null(g_indc_m.indc105) THEN
               CALL s_aooi350_get_address(g_oofa001,g_indc_m.indc105,g_lang) RETURNING r_success,g_indc_m.l_indc105_desc
            END IF                        
            CALL aint350_indc107_desc(g_indc_m.indc107) RETURNING g_indc_m.indc107_desc 
            CALL aint350_indc107_desc(g_indc_m.indc108) RETURNING g_indc_m.indc108_desc             

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indc004
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_indc_m.indc004_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indc004_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indc101
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indc_m.indc101_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indc101_desc


#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indc105
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofb011 FROM oofb_t WHERE oofbent='"||g_enterprise||"' AND oofb001=? ","") RETURNING g_rtn_fields
#            LET g_indc_m.indc105_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indc105_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indc106
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='263' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indc_m.indc106_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indc106_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indcownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_indc_m.indcownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indcownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indcowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indc_m.indcowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indcowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indccrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_indc_m.indccrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indccrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indccrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indc_m.indccrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indccrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indcmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_indc_m.indcmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indcmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indc_m.indccnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_indc_m.indccnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indc_m.indccnfid_desc
]]>
  </point>
  <point name="statechange.b_update" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF lc_state = 'P' AND g_indc_m.indcstus = 'S' THEN     
      CALL s_transaction_begin()
      IF NOT cl_ask_confirm('sub-00233') THEN
         RETURN
      ELSE
         CALL cl_err_collect_init()
         IF NOT s_aint350_unpost_chk(g_indc_m.indcdocno) THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            IF NOT s_aint350_unpost_upd(g_indc_m.indcdocno) THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               LET g_indc_m.indc024 = ''
               DISPLAY BY NAME g_indc_m.indc024
            END IF
         END IF
      END IF 
   END IF     ]]>
  </point>
  <point name="statechange.before" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT indc000 INTO l_indc000 FROM indc_t 
    WHERE indcent = g_enterprise
      AND indcdocno = g_indc_m.indc001
   IF l_indc000 = '1' THEN   #一階段調撥
      RETURN 
   END IF
   IF g_indc_m.indcstus MATCHES '[XYC]'  THEN
      RETURN 
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="16" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL cl_set_act_visible("invalid,confirmed,unconfirmed,closed,confirm_transfer_in,confirm_transfer_out,posted,unposted",FALSE)
         CALL cl_set_act_visible("confirm_transfer_in,posted,unposted",TRUE)
         CALL cl_set_act_visible("signing,withdraw",FALSE)  #2015-4-24 zhujing add
         CASE g_indc_m.indcstus
            WHEN "N"
               CALL cl_set_act_visible("confirm_transfer_in,posted,unposted",FALSE)
               #2015-4-24 zhujing add--(S)
               #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
               IF cl_bpm_chk() THEN
                  CALL cl_set_act_visible("signing",TRUE)
                  CALL cl_set_act_visible("confirmed",FALSE)
               END IF
            WHEN "R"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
            WHEN "D"    #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
               CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)
            WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
               CALL cl_set_act_visible("withdraw",TRUE)
               CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
            WHEN "A"    #只能顯示確認; 其餘應用功能皆隱藏
               CALL cl_set_act_visible("confirmed",TRUE)
               CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)
               #2015-4-24 zhujing add--(E)

            WHEN "X"
               CALL cl_set_act_visible("confirm_transfer_in,posted,unposted",FALSE)
            
            WHEN "O" 
               CALL cl_set_act_visible("confirm_transfer_out,posted,unposted",FALSE)
               
            WHEN "P"
               CALL cl_set_act_visible("confirm_transfer_in,unposted",FALSE)
               
            WHEN "S"
               CALL cl_set_act_visible("confirm_transfer_in,posted",FALSE)  

            WHEN "Y"
               CALL cl_set_act_visible("confirm_transfer_in,posted,unposted",FALSE)
               
            WHEN "C"
               CALL cl_set_act_visible("confirm_transfer_in,posted,unposted",FALSE)               
                             
         END CASE           ]]>
  </point>
  <point name="statechange.confirm_transfer_in" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#         CALL s_transaction_begin()
#         IF NOT cl_ask_confirm('sub-00233') THEN
#            RETURN
#         ELSE
#            IF NOT s_aint350_unpost_chk(g_indc_m.indcdocno) THEN
#               CALL s_transaction_end('N','0')
#               RETURN
#            ELSE
#               IF NOT s_aint350_unpost_upd(g_indc_m.indcdocno) THEN
#                  CALL s_transaction_end('N','0')
#                  RETURN
#               ELSE
#                  CALL s_transaction_end('Y','0')
#               END IF
#            END IF
#         END IF ]]>
  </point>
  <point name="statechange.confirm_transfer_out" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_indc005   LIKE indc_t.indc005
   DEFINE l_date      LIKE indc_t.indc024
   DEFINE l_indc000   LIKE indc_t.indc000]]>
  </point>
  <point name="statechange.more_control" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ON ACTION unposted
         LET lc_state = 'P']]>
  </point>
  <point name="statechange.posted" order="" ver="15" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_transaction_begin()
         IF NOT cl_ask_confirm('sub-00232') THEN
            RETURN
         ELSE        
            CALL cl_err_collect_init()         
            IF NOT s_aint350_post_chk(g_indc_m.indcdocno) THEN
               CALL cl_err_collect_show()
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               SELECT indc005 INTO l_indc005 FROM indc_t
                WHERE indcent = g_enterprise
                  AND indcdocno = g_indc_m.indcdocno
               CALL cl_set_comp_entry("indc024",TRUE)      
               DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
                  INPUT BY NAME g_indc_m.indc024
                        ATTRIBUTE(WITHOUT DEFAULTS)    
                     BEFORE INPUT
#                        LET g_indc_m.indc024 = cl_get_current()
                        IF cl_null(g_indc_m.indc024) THEN    #add by lixh 20150305
                           LET g_indc_m.indc024 = g_today
                        END IF   
                        DISPLAY BY NAME g_indc_m.indc024
                     AFTER FIELD indc022
                        IF cl_null(g_indc_m.indc024) THEN
                            NEXT FIELD indc024
                        END IF   
                        IF NOT cl_null(g_indc_m.indc024) AND NOT cl_null(l_indc005) THEN
                           #檢查年度不小於成本關賬日期的年度
                           CALL cl_get_para(g_enterprise,l_indc005,'S-FIN-6012') RETURNING l_date
                           IF g_indc_m.indc024 < l_date THEN
                              INITIALIZE g_errparam TO NULL
                              LET g_errparam.code = 'ain-00225'
                              LET g_errparam.extend = l_date
                              LET g_errparam.popup = TRUE
                              CALL cl_err()
                              LET g_indc_m.indc024 = g_indc_m_t.indc024
                              NEXT FIELD indc024
                           END IF
                        END IF                   
                    END INPUT                     
               BEFORE DIALOG      
                  ON ACTION accept
                     ACCEPT DIALOG
 
                  ON ACTION cancel
                     LET INT_FLAG = 1
                     EXIT DIALOG       
               END DIALOG  
               IF cl_null(g_indc_m.indc024) THEN
                  RETURN
               END IF                  
               IF NOT s_aint350_post_upd(g_indc_m.indcdocno,g_indc_m.indc024,g_prog) THEN
                  CALL cl_err_collect_show()
                  CALL s_transaction_end('N','0')
                  LET g_indc_m.indc024 = ''
                  DISPLAY BY NAME g_indc_m.indc024
                  RETURN
               ELSE
                  DISPLAY BY NAME g_indc_m.indc024
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL cl_set_act_visible("insert,delete,reproduce", FALSE)]]>
  </point>
  <section id="aint350.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aint350_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint350.b_fill" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint350_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_indd_d.clear()    #g_indd_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint350_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE inddsite,inddseq,indd101,indd001,indd002,indd004,indd024,indd102, 
             indd006,indd021,indd104,indd106,indd041,indd107,indd031,indd108,indd109,indd110,indd111, 
             indd032,indd033,indd151,indd022,indd023,indd042,indd043,indd044,indd152 ,t1.imaal003 ,t2.imaal004 , 
             t3.oocal003 ,t4.oocal003 ,t5.oocal003 ,t6.inayl003 ,t7.inab003 FROM indd_t",   
                     " INNER JOIN indc_t ON indcdocno = indddocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=indd002 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=indd002 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t3 ON t3.oocalent='"||g_enterprise||"' AND t3.oocal001=indd006 AND t3.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=indd104 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=indd041 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t6 ON t6.inaylent='"||g_enterprise||"' AND t6.inayl001=indd032 AND t6.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t7 ON t7.inabent='"||g_enterprise||"' AND t7.inabsite=inddsite AND t7.inab001=indd032 AND t7.inab002=indd033  ",
 
                     " WHERE inddent=? AND indddocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY indd_t.inddseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint350_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aint350_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_indc_m.indcdocno
                                               
      FOREACH b_fill_cs INTO g_indd_d[l_ac].inddsite,g_indd_d[l_ac].inddseq,g_indd_d[l_ac].indd101,g_indd_d[l_ac].indd001, 
          g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd004,g_indd_d[l_ac].indd024,g_indd_d[l_ac].indd102, 
          g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd021,g_indd_d[l_ac].indd104,g_indd_d[l_ac].indd106, 
          g_indd_d[l_ac].indd041,g_indd_d[l_ac].indd107,g_indd_d[l_ac].indd031,g_indd_d[l_ac].indd108, 
          g_indd_d[l_ac].indd109,g_indd_d[l_ac].indd110,g_indd_d[l_ac].indd111,g_indd_d[l_ac].indd032, 
          g_indd_d[l_ac].indd033,g_indd_d[l_ac].indd151,g_indd_d[l_ac].indd022,g_indd_d[l_ac].indd023, 
          g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd043,g_indd_d[l_ac].indd044,g_indd_d[l_ac].indd152, 
          g_indd_d[l_ac].indd002_desc,g_indd_d[l_ac].indd002_desc_desc,g_indd_d[l_ac].indd006_desc,g_indd_d[l_ac].indd104_desc, 
          g_indd_d[l_ac].indd041_desc,g_indd_d[l_ac].indd032_desc,g_indd_d[l_ac].indd033_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_indd_d.deleteElement(g_indd_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint350_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_indd_d.getLength()
      LET g_indd_d_mask_o[l_ac].* =  g_indd_d[l_ac].*
      CALL aint350_indd_t_mask()
      LET g_indd_d_mask_n[l_ac].* =  g_indd_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aint350.b_fill2" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint350_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint350_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aint350.browser_fill" ver="28" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint350_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE indcdocno ",
                      " FROM indc_t ",
                      " ",
                      " LEFT JOIN indd_t ON inddent = indcent AND indcdocno = indddocno ", "  ",
                      #add-point:browser_fill段sql(indd_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE indcent = '" ||g_enterprise|| "' AND inddent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("indc_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE indcdocno ",
                      " FROM indc_t ", 
                      "  ",
                      "  ",
                      " WHERE indcent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("indc_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_indc_m.* TO NULL
      CALL g_indd_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.indcdocno,t0.indcdocdt,t0.indc024,t0.indc004,t0.indc101,t0.indc005 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.indcstus,t0.indcdocno,t0.indcdocdt,t0.indc024,t0.indc004,t0.indc101, 
       t0.indc005,t1.ooag011 ,t2.ooefl003 ,t3.ooefl003 ",
               " FROM indc_t t0",
               "  ",
               "  LEFT JOIN indd_t ON inddent = indcent AND indcdocno = indddocno ", "  ", 
               #add-point:browser_fill段sql(indd_t1)
               {<point name="browser_fill.join.indd_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.indc004  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.indc101 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.indc005 AND t3.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.indcent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("indc_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY indcdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"indc_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_indcdocno,g_browser[g_cnt].b_indcdocdt, 
       g_browser[g_cnt].b_indc024,g_browser[g_cnt].b_indc004,g_browser[g_cnt].b_indc101,g_browser[g_cnt].b_indc005, 
       g_browser[g_cnt].b_indc004_desc,g_browser[g_cnt].b_indc101_desc,g_browser[g_cnt].b_indc005_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aint350_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "O"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirm_transfer_out.png"
         WHEN "P"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirm_transfer_in.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_indcdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aint350.construct" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint350_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_indc_m.* TO NULL
   CALL g_indd_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON indcdocno,indcdocdt,indc004,indc024,indc101,indcstus,indc002,indc003, 
          indc005,indc151,indc102,indc103,indc104,indc009,indc001,indc008,indc105,l_indc105_desc,indc106, 
          indc107,indc108,indcownid,indcowndp,indccrtid,indccrtdp,indccrtdt,indcmodid,indcpstid,indcmoddt, 
          indcpstdt,indccnfid,indccnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<indccrtdt>>----
         AFTER FIELD indccrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<indcmoddt>>----
         AFTER FIELD indcmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indccnfdt>>----
         AFTER FIELD indccnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indcpstdt>>----
         AFTER FIELD indcpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.indcdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcdocno
            #add-point:ON ACTION controlp INFIELD indcdocno
            {<point name="construct.c.indcdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcdocno
            #add-point:BEFORE FIELD indcdocno
            {<point name="construct.b.indcdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcdocno
            
            #add-point:AFTER FIELD indcdocno
            {<point name="construct.a.indcdocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcdocdt
            #add-point:BEFORE FIELD indcdocdt
            {<point name="construct.b.indcdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcdocdt
            
            #add-point:AFTER FIELD indcdocdt
            {<point name="construct.a.indcdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indcdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcdocdt
            #add-point:ON ACTION controlp INFIELD indcdocdt
            {<point name="construct.c.indcdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc004
            #add-point:ON ACTION controlp INFIELD indc004
            {<point name="construct.c.indc004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc004
            #add-point:BEFORE FIELD indc004
            {<point name="construct.b.indc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc004
            
            #add-point:AFTER FIELD indc004
            {<point name="construct.a.indc004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc024
            #add-point:BEFORE FIELD indc024
            {<point name="construct.b.indc024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc024
            
            #add-point:AFTER FIELD indc024
            {<point name="construct.a.indc024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc024
            #add-point:ON ACTION controlp INFIELD indc024
            {<point name="construct.c.indc024" />}
            #END add-point
 
         #Ctrlp:construct.c.indc101
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc101
            #add-point:ON ACTION controlp INFIELD indc101
            {<point name="construct.c.indc101" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc101
            #add-point:BEFORE FIELD indc101
            {<point name="construct.b.indc101" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc101
            
            #add-point:AFTER FIELD indc101
            {<point name="construct.a.indc101" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcstus
            #add-point:BEFORE FIELD indcstus
            {<point name="construct.b.indcstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcstus
            
            #add-point:AFTER FIELD indcstus
            {<point name="construct.a.indcstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indcstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcstus
            #add-point:ON ACTION controlp INFIELD indcstus
            {<point name="construct.c.indcstus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc002
            #add-point:BEFORE FIELD indc002
            {<point name="construct.b.indc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc002
            
            #add-point:AFTER FIELD indc002
            {<point name="construct.a.indc002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc002
            #add-point:ON ACTION controlp INFIELD indc002
            {<point name="construct.c.indc002" />}
            #END add-point
 
         #Ctrlp:construct.c.indc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc003
            #add-point:ON ACTION controlp INFIELD indc003
            {<point name="construct.c.indc003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc003
            #add-point:BEFORE FIELD indc003
            {<point name="construct.b.indc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc003
            
            #add-point:AFTER FIELD indc003
            {<point name="construct.a.indc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc005
            #add-point:ON ACTION controlp INFIELD indc005
            {<point name="construct.c.indc005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc005
            #add-point:BEFORE FIELD indc005
            {<point name="construct.b.indc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc005
            
            #add-point:AFTER FIELD indc005
            {<point name="construct.a.indc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc151
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc151
            #add-point:ON ACTION controlp INFIELD indc151
            {<point name="construct.c.indc151" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc151
            #add-point:BEFORE FIELD indc151
            {<point name="construct.b.indc151" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc151
            
            #add-point:AFTER FIELD indc151
            {<point name="construct.a.indc151" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc102
            #add-point:BEFORE FIELD indc102
            {<point name="construct.b.indc102" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc102
            
            #add-point:AFTER FIELD indc102
            {<point name="construct.a.indc102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc102
            #add-point:ON ACTION controlp INFIELD indc102
            {<point name="construct.c.indc102" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc103
            #add-point:BEFORE FIELD indc103
            {<point name="construct.b.indc103" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc103
            
            #add-point:AFTER FIELD indc103
            {<point name="construct.a.indc103" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc103
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc103
            #add-point:ON ACTION controlp INFIELD indc103
            {<point name="construct.c.indc103" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc104
            #add-point:BEFORE FIELD indc104
            {<point name="construct.b.indc104" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc104
            
            #add-point:AFTER FIELD indc104
            {<point name="construct.a.indc104" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc104
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc104
            #add-point:ON ACTION controlp INFIELD indc104
            {<point name="construct.c.indc104" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc009
            #add-point:BEFORE FIELD indc009
            {<point name="construct.b.indc009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc009
            
            #add-point:AFTER FIELD indc009
            {<point name="construct.a.indc009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc009
            #add-point:ON ACTION controlp INFIELD indc009
            {<point name="construct.c.indc009" />}
            #END add-point
 
         #Ctrlp:construct.c.indc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc001
            #add-point:ON ACTION controlp INFIELD indc001
            {<point name="construct.c.indc001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc001
            #add-point:BEFORE FIELD indc001
            {<point name="construct.b.indc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc001
            
            #add-point:AFTER FIELD indc001
            {<point name="construct.a.indc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc008
            #add-point:BEFORE FIELD indc008
            {<point name="construct.b.indc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc008
            
            #add-point:AFTER FIELD indc008
            {<point name="construct.a.indc008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc008
            #add-point:ON ACTION controlp INFIELD indc008
            {<point name="construct.c.indc008" />}
            #END add-point
 
         #Ctrlp:construct.c.indc105
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc105
            #add-point:ON ACTION controlp INFIELD indc105
            {<point name="construct.c.indc105" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc105
            #add-point:BEFORE FIELD indc105
            {<point name="construct.b.indc105" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc105
            
            #add-point:AFTER FIELD indc105
            {<point name="construct.a.indc105" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc105_desc
            #add-point:BEFORE FIELD indc105_desc
            {<point name="construct.b.indc105_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc105_desc
            
            #add-point:AFTER FIELD indc105_desc
            {<point name="construct.a.indc105_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc105_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc105_desc
            #add-point:ON ACTION controlp INFIELD indc105_desc
            {<point name="construct.c.indc105_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_indc105_desc
            #add-point:BEFORE FIELD l_indc105_desc
            {<point name="construct.b.l_indc105_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_indc105_desc
            
            #add-point:AFTER FIELD l_indc105_desc
            {<point name="construct.a.l_indc105_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.l_indc105_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_indc105_desc
            #add-point:ON ACTION controlp INFIELD l_indc105_desc
            {<point name="construct.c.l_indc105_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.indc106
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc106
            #add-point:ON ACTION controlp INFIELD indc106
            {<point name="construct.c.indc106" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc106
            #add-point:BEFORE FIELD indc106
            {<point name="construct.b.indc106" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc106
            
            #add-point:AFTER FIELD indc106
            {<point name="construct.a.indc106" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc107
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc107
            #add-point:ON ACTION controlp INFIELD indc107
            {<point name="construct.c.indc107" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc107
            #add-point:BEFORE FIELD indc107
            {<point name="construct.b.indc107" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc107
            
            #add-point:AFTER FIELD indc107
            {<point name="construct.a.indc107" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indc108
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc108
            #add-point:ON ACTION controlp INFIELD indc108
            {<point name="construct.c.indc108" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc108
            #add-point:BEFORE FIELD indc108
            {<point name="construct.b.indc108" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc108
            
            #add-point:AFTER FIELD indc108
            {<point name="construct.a.indc108" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indcownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcownid
            #add-point:ON ACTION controlp INFIELD indcownid
            {<point name="construct.c.indcownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcownid
            #add-point:BEFORE FIELD indcownid
            {<point name="construct.b.indcownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcownid
            
            #add-point:AFTER FIELD indcownid
            {<point name="construct.a.indcownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indcowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcowndp
            #add-point:ON ACTION controlp INFIELD indcowndp
            {<point name="construct.c.indcowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcowndp
            #add-point:BEFORE FIELD indcowndp
            {<point name="construct.b.indcowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcowndp
            
            #add-point:AFTER FIELD indcowndp
            {<point name="construct.a.indcowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indccrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indccrtid
            #add-point:ON ACTION controlp INFIELD indccrtid
            {<point name="construct.c.indccrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indccrtid
            #add-point:BEFORE FIELD indccrtid
            {<point name="construct.b.indccrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indccrtid
            
            #add-point:AFTER FIELD indccrtid
            {<point name="construct.a.indccrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indccrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indccrtdp
            #add-point:ON ACTION controlp INFIELD indccrtdp
            {<point name="construct.c.indccrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indccrtdp
            #add-point:BEFORE FIELD indccrtdp
            {<point name="construct.b.indccrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indccrtdp
            
            #add-point:AFTER FIELD indccrtdp
            {<point name="construct.a.indccrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indccrtdt
            #add-point:BEFORE FIELD indccrtdt
            {<point name="construct.b.indccrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indcmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcmodid
            #add-point:ON ACTION controlp INFIELD indcmodid
            {<point name="construct.c.indcmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcmodid
            #add-point:BEFORE FIELD indcmodid
            {<point name="construct.b.indcmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcmodid
            
            #add-point:AFTER FIELD indcmodid
            {<point name="construct.a.indcmodid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indcpstid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcpstid
            #add-point:ON ACTION controlp INFIELD indcpstid
            {<point name="construct.c.indcpstid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcpstid
            #add-point:BEFORE FIELD indcpstid
            {<point name="construct.b.indcpstid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcpstid
            
            #add-point:AFTER FIELD indcpstid
            {<point name="construct.a.indcpstid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcmoddt
            #add-point:BEFORE FIELD indcmoddt
            {<point name="construct.b.indcmoddt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcpstdt
            #add-point:BEFORE FIELD indcpstdt
            {<point name="construct.b.indcpstdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indccnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indccnfid
            #add-point:ON ACTION controlp INFIELD indccnfid
            {<point name="construct.c.indccnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indccnfid
            #add-point:BEFORE FIELD indccnfid
            {<point name="construct.b.indccnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indccnfid
            
            #add-point:AFTER FIELD indccnfid
            {<point name="construct.a.indccnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indccnfdt
            #add-point:BEFORE FIELD indccnfdt
            {<point name="construct.b.indccnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON inddsite,inddseq,indd101,indd001,indd002,indd004,indd024,indd102,indd006, 
          indd021,indd104,indd106,indd041,indd107,indd031,indd108,indd109,indd110,indd111,indd032,indd033, 
          indd151,indd022,indd023,indd042,indd043,indd044,indd152
           FROM s_detail1[1].inddsite,s_detail1[1].inddseq,s_detail1[1].indd101,s_detail1[1].indd001, 
               s_detail1[1].indd002,s_detail1[1].indd004,s_detail1[1].indd024,s_detail1[1].indd102,s_detail1[1].indd006, 
               s_detail1[1].indd021,s_detail1[1].indd104,s_detail1[1].indd106,s_detail1[1].indd041,s_detail1[1].indd107, 
               s_detail1[1].indd031,s_detail1[1].indd108,s_detail1[1].indd109,s_detail1[1].indd110,s_detail1[1].indd111, 
               s_detail1[1].indd032,s_detail1[1].indd033,s_detail1[1].indd151,s_detail1[1].indd022,s_detail1[1].indd023, 
               s_detail1[1].indd042,s_detail1[1].indd043,s_detail1[1].indd044,s_detail1[1].indd152
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inddsite
            #add-point:BEFORE FIELD inddsite
            {<point name="construct.b.page1.inddsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inddsite
            
            #add-point:AFTER FIELD inddsite
            {<point name="construct.a.page1.inddsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inddsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inddsite
            #add-point:ON ACTION controlp INFIELD inddsite
            {<point name="construct.c.page1.inddsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inddseq
            #add-point:BEFORE FIELD inddseq
            {<point name="construct.b.page1.inddseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inddseq
            
            #add-point:AFTER FIELD inddseq
            {<point name="construct.a.page1.inddseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inddseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inddseq
            #add-point:ON ACTION controlp INFIELD inddseq
            {<point name="construct.c.page1.inddseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indd101
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd101
            #add-point:ON ACTION controlp INFIELD indd101
            {<point name="construct.c.page1.indd101" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd101
            #add-point:BEFORE FIELD indd101
            {<point name="construct.b.page1.indd101" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd101
            
            #add-point:AFTER FIELD indd101
            {<point name="construct.a.page1.indd101" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd001
            #add-point:BEFORE FIELD indd001
            {<point name="construct.b.page1.indd001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd001
            
            #add-point:AFTER FIELD indd001
            {<point name="construct.a.page1.indd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd001
            #add-point:ON ACTION controlp INFIELD indd001
            {<point name="construct.c.page1.indd001" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd002
            #add-point:ON ACTION controlp INFIELD indd002
            {<point name="construct.c.page1.indd002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd002
            #add-point:BEFORE FIELD indd002
            {<point name="construct.b.page1.indd002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd002
            
            #add-point:AFTER FIELD indd002
            {<point name="construct.a.page1.indd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd004
            #add-point:ON ACTION controlp INFIELD indd004
            {<point name="construct.c.page1.indd004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd004
            #add-point:BEFORE FIELD indd004
            {<point name="construct.b.page1.indd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd004
            
            #add-point:AFTER FIELD indd004
            {<point name="construct.a.page1.indd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd024
            #add-point:ON ACTION controlp INFIELD indd024
            {<point name="construct.c.page1.indd024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd024
            #add-point:BEFORE FIELD indd024
            {<point name="construct.b.page1.indd024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd024
            
            #add-point:AFTER FIELD indd024
            {<point name="construct.a.page1.indd024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd102
            #add-point:ON ACTION controlp INFIELD indd102
            {<point name="construct.c.page1.indd102" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd102
            #add-point:BEFORE FIELD indd102
            {<point name="construct.b.page1.indd102" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd102
            
            #add-point:AFTER FIELD indd102
            {<point name="construct.a.page1.indd102" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd006
            #add-point:ON ACTION controlp INFIELD indd006
            {<point name="construct.c.page1.indd006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd006
            #add-point:BEFORE FIELD indd006
            {<point name="construct.b.page1.indd006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd006
            
            #add-point:AFTER FIELD indd006
            {<point name="construct.a.page1.indd006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd021
            #add-point:BEFORE FIELD indd021
            {<point name="construct.b.page1.indd021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd021
            
            #add-point:AFTER FIELD indd021
            {<point name="construct.a.page1.indd021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd021
            #add-point:ON ACTION controlp INFIELD indd021
            {<point name="construct.c.page1.indd021" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indd104
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd104
            #add-point:ON ACTION controlp INFIELD indd104
            {<point name="construct.c.page1.indd104" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd104
            #add-point:BEFORE FIELD indd104
            {<point name="construct.b.page1.indd104" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd104
            
            #add-point:AFTER FIELD indd104
            {<point name="construct.a.page1.indd104" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd106
            #add-point:BEFORE FIELD indd106
            {<point name="construct.b.page1.indd106" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd106
            
            #add-point:AFTER FIELD indd106
            {<point name="construct.a.page1.indd106" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd106
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd106
            #add-point:ON ACTION controlp INFIELD indd106
            {<point name="construct.c.page1.indd106" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd041
            #add-point:BEFORE FIELD indd041
            {<point name="construct.b.page1.indd041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd041
            
            #add-point:AFTER FIELD indd041
            {<point name="construct.a.page1.indd041" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd041
            #add-point:ON ACTION controlp INFIELD indd041
            {<point name="construct.c.page1.indd041" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd107
            #add-point:BEFORE FIELD indd107
            {<point name="construct.b.page1.indd107" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd107
            
            #add-point:AFTER FIELD indd107
            {<point name="construct.a.page1.indd107" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd107
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd107
            #add-point:ON ACTION controlp INFIELD indd107
            {<point name="construct.c.page1.indd107" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd031
            #add-point:BEFORE FIELD indd031
            {<point name="construct.b.page1.indd031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd031
            
            #add-point:AFTER FIELD indd031
            {<point name="construct.a.page1.indd031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd031
            #add-point:ON ACTION controlp INFIELD indd031
            {<point name="construct.c.page1.indd031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd108
            #add-point:BEFORE FIELD indd108
            {<point name="construct.b.page1.indd108" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd108
            
            #add-point:AFTER FIELD indd108
            {<point name="construct.a.page1.indd108" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd108
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd108
            #add-point:ON ACTION controlp INFIELD indd108
            {<point name="construct.c.page1.indd108" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd109
            #add-point:BEFORE FIELD indd109
            {<point name="construct.b.page1.indd109" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd109
            
            #add-point:AFTER FIELD indd109
            {<point name="construct.a.page1.indd109" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd109
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd109
            #add-point:ON ACTION controlp INFIELD indd109
            {<point name="construct.c.page1.indd109" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd110
            #add-point:BEFORE FIELD indd110
            {<point name="construct.b.page1.indd110" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd110
            
            #add-point:AFTER FIELD indd110
            {<point name="construct.a.page1.indd110" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd110
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd110
            #add-point:ON ACTION controlp INFIELD indd110
            {<point name="construct.c.page1.indd110" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indd111
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd111
            #add-point:ON ACTION controlp INFIELD indd111
            {<point name="construct.c.page1.indd111" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd111
            #add-point:BEFORE FIELD indd111
            {<point name="construct.b.page1.indd111" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd111
            
            #add-point:AFTER FIELD indd111
            {<point name="construct.a.page1.indd111" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd032
            #add-point:ON ACTION controlp INFIELD indd032
            {<point name="construct.c.page1.indd032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd032
            #add-point:BEFORE FIELD indd032
            {<point name="construct.b.page1.indd032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd032
            
            #add-point:AFTER FIELD indd032
            {<point name="construct.a.page1.indd032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd033
            #add-point:ON ACTION controlp INFIELD indd033
            {<point name="construct.c.page1.indd033" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd033
            #add-point:BEFORE FIELD indd033
            {<point name="construct.b.page1.indd033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd033
            
            #add-point:AFTER FIELD indd033
            {<point name="construct.a.page1.indd033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd151
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd151
            #add-point:ON ACTION controlp INFIELD indd151
            {<point name="construct.c.page1.indd151" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd151
            #add-point:BEFORE FIELD indd151
            {<point name="construct.b.page1.indd151" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd151
            
            #add-point:AFTER FIELD indd151
            {<point name="construct.a.page1.indd151" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd022
            #add-point:ON ACTION controlp INFIELD indd022
            {<point name="construct.c.page1.indd022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd022
            #add-point:BEFORE FIELD indd022
            {<point name="construct.b.page1.indd022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd022
            
            #add-point:AFTER FIELD indd022
            {<point name="construct.a.page1.indd022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd023
            #add-point:ON ACTION controlp INFIELD indd023
            {<point name="construct.c.page1.indd023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd023
            #add-point:BEFORE FIELD indd023
            {<point name="construct.b.page1.indd023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd023
            
            #add-point:AFTER FIELD indd023
            {<point name="construct.a.page1.indd023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd042
            #add-point:ON ACTION controlp INFIELD indd042
            {<point name="construct.c.page1.indd042" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd042
            #add-point:BEFORE FIELD indd042
            {<point name="construct.b.page1.indd042" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd042
            
            #add-point:AFTER FIELD indd042
            {<point name="construct.a.page1.indd042" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd043
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd043
            #add-point:ON ACTION controlp INFIELD indd043
            {<point name="construct.c.page1.indd043" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd043
            #add-point:BEFORE FIELD indd043
            {<point name="construct.b.page1.indd043" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd043
            
            #add-point:AFTER FIELD indd043
            {<point name="construct.a.page1.indd043" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd044
            #add-point:ON ACTION controlp INFIELD indd044
            {<point name="construct.c.page1.indd044" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd044
            #add-point:BEFORE FIELD indd044
            {<point name="construct.b.page1.indd044" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd044
            
            #add-point:AFTER FIELD indd044
            {<point name="construct.a.page1.indd044" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd152
            #add-point:BEFORE FIELD indd152
            {<point name="construct.b.page1.indd152" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd152
            
            #add-point:AFTER FIELD indd152
            {<point name="construct.a.page1.indd152" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indd152
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd152
            #add-point:ON ACTION controlp INFIELD indd152
            {<point name="construct.c.page1.indd152" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "indc_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "indd_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint350.default_search" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint350_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " indcdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "indc_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "indd_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aint350.delete" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint350_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aint350_cl USING g_enterprise,g_indc_m.indcdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint350_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint350_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcdocno,g_indc_m.indcdocdt, 
       g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
       g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108, 
       g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt, 
       g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
       g_indc_m.indccnfdt,g_indc_m.indc004_desc,g_indc_m.indc101_desc,g_indc_m.indc005_desc,g_indc_m.indc106_desc, 
       g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc, 
       g_indc_m.indcmodid_desc,g_indc_m.indcpstid_desc,g_indc_m.indccnfid_desc
   
   #檢查是否允許此動作
   IF NOT aint350_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint350_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   CALL aint350_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aint350_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_indcdocno_t = g_indc_m.indcdocno
 
 
      DELETE FROM indc_t
       WHERE indcent = g_enterprise AND indcdocno = g_indc_m.indcdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_indc_m.indcdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM indd_t
       WHERE inddent = g_enterprise AND indddocno = g_indc_m.indcdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aint350_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_indd_d.clear() 
 
     
      CALL aint350_ui_browser_refresh()  
      #CALL aint350_ui_headershow()  
      #CALL aint350_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aint350_browser_fill("")
         CALL aint350_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE aint350_cl
 
   #功能已完成,通報訊息中心
   CALL aint350_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="aint350.delete_b" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint350_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM indd_t
       WHERE inddent = g_enterprise AND
         indddocno = ps_keys_bak[1] AND inddseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indd_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint350.description" ver="10" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:17,PR版次:17) Build-000179
#+ 
#+ Filename...: aint350
#+ Description: 調撥撥入作業
#+ Creator....: 01534(2014-05-08 14:12:14)
#+ Modifier...: 02294(2015-06-16 15:42:13) -SD/PR-
]]>
  </section>
  <section id="aint350.detail_reproduce" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint350_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE indd_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint350_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint350_detail AS ",
                "SELECT * FROM indd_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint350_detail SELECT * FROM indd_t 
                                         WHERE inddent = g_enterprise AND indddocno = g_indcdocno_t
 
   
   #將key修正為調整後   
   UPDATE aint350_detail 
      #更新key欄位
      SET indddocno = g_indc_m.indcdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO indd_t SELECT * FROM aint350_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint350_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="aint350.detail_show" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint350_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint350.fetch" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint350_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_indc_m.indcdocno = g_browser[g_current_idx].b_indcdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint350_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcdocno,g_indc_m.indcdocdt, 
       g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
       g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108, 
       g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt, 
       g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
       g_indc_m.indccnfdt,g_indc_m.indc004_desc,g_indc_m.indc101_desc,g_indc_m.indc005_desc,g_indc_m.indc106_desc, 
       g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc, 
       g_indc_m.indcmodid_desc,g_indc_m.indcpstid_desc,g_indc_m.indccnfid_desc
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint350_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint350_set_act_visible()   
   CALL aint350_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_indc_m_t.* = g_indc_m.*
   LET g_indc_m_o.* = g_indc_m.*
   
   LET g_data_owner = g_indc_m.indcownid      
   LET g_data_dept  = g_indc_m.indcowndp
   
   #重新顯示   
   CALL aint350_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="aint350.fill_chk" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint350_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint350.filter" ver="6" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION aint350_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON indcdocno,indcdocdt,indc024,indc004,indc101,indc005
                          FROM s_browse[1].b_indcdocno,s_browse[1].b_indcdocdt,s_browse[1].b_indc024, 
                              s_browse[1].b_indc004,s_browse[1].b_indc101,s_browse[1].b_indc005
 
         BEFORE CONSTRUCT
               DISPLAY aint350_filter_parser('indcdocno') TO s_browse[1].b_indcdocno
            DISPLAY aint350_filter_parser('indcdocdt') TO s_browse[1].b_indcdocdt
            DISPLAY aint350_filter_parser('indc024') TO s_browse[1].b_indc024
            DISPLAY aint350_filter_parser('indc004') TO s_browse[1].b_indc004
            DISPLAY aint350_filter_parser('indc101') TO s_browse[1].b_indc101
            DISPLAY aint350_filter_parser('indc005') TO s_browse[1].b_indc005
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint350_filter_show('indcdocno')
   CALL aint350_filter_show('indcdocdt')
   CALL aint350_filter_show('indc024')
   CALL aint350_filter_show('indc004')
   CALL aint350_filter_show('indc101')
   CALL aint350_filter_show('indc005')
 
END FUNCTION
]]>
  </section>
  <section id="aint350.filter_parser" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint350_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aint350.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint350_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint350_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aint350.global" ver="34" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_indc_m        RECORD
       indcdocno LIKE indc_t.indcdocno, 
   indcdocdt LIKE indc_t.indcdocdt, 
   indc004 LIKE indc_t.indc004, 
   indc004_desc LIKE type_t.chr80, 
   indcdocno_desc LIKE type_t.chr80, 
   indc024 LIKE indc_t.indc024, 
   indc101 LIKE indc_t.indc101, 
   indc101_desc LIKE type_t.chr80, 
   indcstus LIKE indc_t.indcstus, 
   indc002 LIKE indc_t.indc002, 
   indc003 LIKE indc_t.indc003, 
   indc005 LIKE indc_t.indc005, 
   indc005_desc LIKE type_t.chr80, 
   indc151 LIKE indc_t.indc151, 
   indc151_desc LIKE type_t.chr80, 
   indc102 LIKE indc_t.indc102, 
   indc103 LIKE indc_t.indc103, 
   indc104 LIKE indc_t.indc104, 
   indc009 LIKE indc_t.indc009, 
   indc001 LIKE indc_t.indc001, 
   indc008 LIKE indc_t.indc008, 
   indc105 LIKE indc_t.indc105, 
   indc105_desc LIKE type_t.chr80, 
   l_indc105_desc LIKE type_t.chr500, 
   indc106 LIKE indc_t.indc106, 
   indc106_desc LIKE type_t.chr80, 
   indc107 LIKE indc_t.indc107, 
   indc107_desc LIKE type_t.chr80, 
   indc108 LIKE indc_t.indc108, 
   indc108_desc LIKE type_t.chr80, 
   indcownid LIKE indc_t.indcownid, 
   indcownid_desc LIKE type_t.chr80, 
   indcowndp LIKE indc_t.indcowndp, 
   indcowndp_desc LIKE type_t.chr80, 
   indccrtid LIKE indc_t.indccrtid, 
   indccrtid_desc LIKE type_t.chr80, 
   indccrtdp LIKE indc_t.indccrtdp, 
   indccrtdp_desc LIKE type_t.chr80, 
   indccrtdt LIKE indc_t.indccrtdt, 
   indcmodid LIKE indc_t.indcmodid, 
   indcmodid_desc LIKE type_t.chr80, 
   indcpstid LIKE indc_t.indcpstid, 
   indcpstid_desc LIKE type_t.chr80, 
   indcmoddt LIKE indc_t.indcmoddt, 
   indcpstdt LIKE indc_t.indcpstdt, 
   indccnfid LIKE indc_t.indccnfid, 
   indccnfid_desc LIKE type_t.chr80, 
   indccnfdt LIKE indc_t.indccnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_indd_d        RECORD
       inddsite LIKE indd_t.inddsite, 
   inddseq LIKE indd_t.inddseq, 
   indd101 LIKE indd_t.indd101, 
   indd001 LIKE indd_t.indd001, 
   indd002 LIKE indd_t.indd002, 
   indd002_desc LIKE type_t.chr500, 
   indd002_desc_desc LIKE type_t.chr500, 
   indd004 LIKE indd_t.indd004, 
   indd004_desc LIKE type_t.chr500, 
   indd024 LIKE indd_t.indd024, 
   indd102 LIKE indd_t.indd102, 
   indd006 LIKE indd_t.indd006, 
   indd006_desc LIKE type_t.chr500, 
   indd021 LIKE indd_t.indd021, 
   indd104 LIKE indd_t.indd104, 
   indd104_desc LIKE type_t.chr500, 
   indd106 LIKE indd_t.indd106, 
   indd041 LIKE indd_t.indd041, 
   indd041_desc LIKE type_t.chr500, 
   indd107 LIKE indd_t.indd107, 
   indd031 LIKE indd_t.indd031, 
   indd108 LIKE indd_t.indd108, 
   indd109 LIKE indd_t.indd109, 
   indd110 LIKE indd_t.indd110, 
   indd111 LIKE indd_t.indd111, 
   indd111_desc LIKE type_t.chr500, 
   indd032 LIKE indd_t.indd032, 
   indd032_desc LIKE type_t.chr500, 
   indd033 LIKE indd_t.indd033, 
   indd033_desc LIKE type_t.chr500, 
   indd151 LIKE indd_t.indd151, 
   indd151_desc LIKE type_t.chr500, 
   indd022 LIKE indd_t.indd022, 
   indd022_desc LIKE type_t.chr500, 
   indd023 LIKE indd_t.indd023, 
   indd023_desc LIKE type_t.chr500, 
   indd042 LIKE indd_t.indd042, 
   indd042_desc LIKE type_t.chr500, 
   indd043 LIKE indd_t.indd043, 
   indd043_desc LIKE type_t.chr500, 
   indd044 LIKE indd_t.indd044, 
   indd044_desc LIKE type_t.chr500, 
   indd152 LIKE indd_t.indd152
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_indcdocno LIKE indc_t.indcdocno,
      b_indcdocdt LIKE indc_t.indcdocdt,
      b_indc024 LIKE indc_t.indc024,
      b_indc004 LIKE indc_t.indc004,
   b_indc004_desc LIKE type_t.chr80,
      b_indc101 LIKE indc_t.indc101,
   b_indc101_desc LIKE type_t.chr80,
      b_indc005 LIKE indc_t.indc005,
   b_indc005_desc LIKE type_t.chr80
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_indc_m          type_g_indc_m
DEFINE g_indc_m_t        type_g_indc_m
DEFINE g_indc_m_o        type_g_indc_m
DEFINE g_indc_m_mask_o   type_g_indc_m #轉換遮罩前資料
DEFINE g_indc_m_mask_n   type_g_indc_m #轉換遮罩後資料
 
   DEFINE g_indcdocno_t LIKE indc_t.indcdocno
 
 
DEFINE g_indd_d          DYNAMIC ARRAY OF type_g_indd_d
DEFINE g_indd_d_t        type_g_indd_d
DEFINE g_indd_d_o        type_g_indd_d
DEFINE g_indd_d_mask_o   DYNAMIC ARRAY OF type_g_indd_d #轉換遮罩前資料
DEFINE g_indd_d_mask_n   DYNAMIC ARRAY OF type_g_indd_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint350.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aint350_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_indd_d.getLength() THEN
         LET g_detail_idx = g_indd_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_indd_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_indd_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint350.init" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint350_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('indcstus','13','N,Y,S,C,O,P,X')
 
      CALL cl_set_combo_scc('indc002','6016') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aint350_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aint350.input" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint350_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indcdocno_desc, 
       g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc151,g_indc_m.indc151_desc,g_indc_m.indc102, 
       g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105, 
       g_indc_m.indc105_desc,g_indc_m.l_indc105_desc,g_indc_m.indc106,g_indc_m.indc106_desc,g_indc_m.indc107, 
       g_indc_m.indc107_desc,g_indc_m.indc108,g_indc_m.indc108_desc,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcpstid, 
       g_indc_m.indcpstid_desc,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid,g_indc_m.indccnfid_desc, 
       g_indc_m.indccnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inddsite,inddseq,indd101,indd001,indd002,indd004,indd024,indd102,indd006, 
       indd021,indd104,indd106,indd041,indd107,indd031,indd108,indd109,indd110,indd111,indd032,indd033, 
       indd151,indd022,indd023,indd042,indd043,indd044,indd152 FROM indd_t WHERE inddent=? AND indddocno=?  
       AND inddseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint350_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint350_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint350_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101, 
       g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102, 
       g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105, 
       g_indc_m.l_indc105_desc,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aint350.input.body" ver="36" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_indd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_indd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint350_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_indd_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint350_cl USING g_enterprise,g_indc_m.indcdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint350_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint350_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_indd_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_indd_d[l_ac].inddseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_indd_d_t.* = g_indd_d[l_ac].*  #BACKUP
               LET g_indd_d_o.* = g_indd_d[l_ac].*  #BACKUP
               CALL aint350_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint350_set_no_entry_b(l_cmd)
               IF NOT aint350_lock_b("indd_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint350_bcl INTO g_indd_d[l_ac].inddsite,g_indd_d[l_ac].inddseq,g_indd_d[l_ac].indd101, 
                      g_indd_d[l_ac].indd001,g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd004,g_indd_d[l_ac].indd024, 
                      g_indd_d[l_ac].indd102,g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd021,g_indd_d[l_ac].indd104, 
                      g_indd_d[l_ac].indd106,g_indd_d[l_ac].indd041,g_indd_d[l_ac].indd107,g_indd_d[l_ac].indd031, 
                      g_indd_d[l_ac].indd108,g_indd_d[l_ac].indd109,g_indd_d[l_ac].indd110,g_indd_d[l_ac].indd111, 
                      g_indd_d[l_ac].indd032,g_indd_d[l_ac].indd033,g_indd_d[l_ac].indd151,g_indd_d[l_ac].indd022, 
                      g_indd_d[l_ac].indd023,g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd043,g_indd_d[l_ac].indd044, 
                      g_indd_d[l_ac].indd152
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_indd_d_t.inddseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_indd_d_mask_o[l_ac].* =  g_indd_d[l_ac].*
                  CALL aint350_indd_t_mask()
                  LET g_indd_d_mask_n[l_ac].* =  g_indd_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint350_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_indd_d[l_ac].* TO NULL 
            INITIALIZE g_indd_d_t.* TO NULL 
            INITIALIZE g_indd_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_indd_d[l_ac].indd021 = "0"
      LET g_indd_d[l_ac].indd106 = "0"
      LET g_indd_d[l_ac].indd107 = "0"
      LET g_indd_d[l_ac].indd031 = "0"
      LET g_indd_d[l_ac].indd108 = "0"
      LET g_indd_d[l_ac].indd109 = "0"
      LET g_indd_d[l_ac].indd110 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_indd_d_t.* = g_indd_d[l_ac].*     #新輸入資料
            LET g_indd_d_o.* = g_indd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint350_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint350_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_indd_d[li_reproduce_target].* = g_indd_d[li_reproduce].*
 
               LET g_indd_d[li_reproduce_target].inddseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM indd_t 
             WHERE inddent = g_enterprise AND indddocno = g_indc_m.indcdocno
 
               AND inddseq = g_indd_d[l_ac].inddseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indc_m.indcdocno
               LET gs_keys[2] = g_indd_d[g_detail_idx].inddseq
               CALL aint350_insert_b('indd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_indd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint350_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_indc_m.indcdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_indd_d_t.inddseq
 
            
               #刪除同層單身
               IF NOT aint350_delete_b('indd_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint350_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint350_key_delete_b(gs_keys,'indd_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint350_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aint350_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_indd_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_indd_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inddsite
            #add-point:BEFORE FIELD inddsite
            {<point name="input.b.page1.inddsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inddsite
            
            #add-point:AFTER FIELD inddsite
            {<point name="input.a.page1.inddsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inddsite
            #add-point:ON CHANGE inddsite
            {<point name="input.g.page1.inddsite" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inddseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].inddseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD inddseq
            END IF 
 
 
            #add-point:AFTER FIELD inddseq
            {<point name="input.a.page1.inddseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inddseq
            #add-point:BEFORE FIELD inddseq
            {<point name="input.b.page1.inddseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inddseq
            #add-point:ON CHANGE inddseq
            {<point name="input.g.page1.inddseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd101
            
            #add-point:AFTER FIELD indd101
            {<point name="input.a.page1.indd101" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd101
            #add-point:BEFORE FIELD indd101
            {<point name="input.b.page1.indd101" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd101
            #add-point:ON CHANGE indd101
            {<point name="input.g.page1.indd101" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd001
            #add-point:BEFORE FIELD indd001
            {<point name="input.b.page1.indd001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd001
            
            #add-point:AFTER FIELD indd001
            {<point name="input.a.page1.indd001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd001
            #add-point:ON CHANGE indd001
            {<point name="input.g.page1.indd001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd002
            
            #add-point:AFTER FIELD indd002
            {<point name="input.a.page1.indd002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd002
            #add-point:BEFORE FIELD indd002
            {<point name="input.b.page1.indd002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd002
            #add-point:ON CHANGE indd002
            {<point name="input.g.page1.indd002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd004
            #add-point:BEFORE FIELD indd004
            {<point name="input.b.page1.indd004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd004
            
            #add-point:AFTER FIELD indd004
            {<point name="input.a.page1.indd004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd004
            #add-point:ON CHANGE indd004
            {<point name="input.g.page1.indd004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd024
            
            #add-point:AFTER FIELD indd024
            {<point name="input.a.page1.indd024" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd024
            #add-point:BEFORE FIELD indd024
            {<point name="input.b.page1.indd024" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd024
            #add-point:ON CHANGE indd024
            {<point name="input.g.page1.indd024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd102
            #add-point:BEFORE FIELD indd102
            {<point name="input.b.page1.indd102" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd102
            
            #add-point:AFTER FIELD indd102
            {<point name="input.a.page1.indd102" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd102
            #add-point:ON CHANGE indd102
            {<point name="input.g.page1.indd102" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd006
            
            #add-point:AFTER FIELD indd006
            {<point name="input.a.page1.indd006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd006
            #add-point:BEFORE FIELD indd006
            {<point name="input.b.page1.indd006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd006
            #add-point:ON CHANGE indd006
            {<point name="input.g.page1.indd006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd021
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd021,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD indd021
            END IF 
 
 
            #add-point:AFTER FIELD indd021
            {<point name="input.a.page1.indd021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd021
            #add-point:BEFORE FIELD indd021
            {<point name="input.b.page1.indd021" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd021
            #add-point:ON CHANGE indd021
            {<point name="input.g.page1.indd021" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd104
            
            #add-point:AFTER FIELD indd104
            {<point name="input.a.page1.indd104" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd104
            #add-point:BEFORE FIELD indd104
            {<point name="input.b.page1.indd104" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd104
            #add-point:ON CHANGE indd104
            {<point name="input.g.page1.indd104" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd106
            #add-point:BEFORE FIELD indd106
            {<point name="input.b.page1.indd106" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd106
            
            #add-point:AFTER FIELD indd106
            {<point name="input.a.page1.indd106" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd106
            #add-point:ON CHANGE indd106
            {<point name="input.g.page1.indd106" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd041
            
            #add-point:AFTER FIELD indd041
            {<point name="input.a.page1.indd041" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd041
            #add-point:BEFORE FIELD indd041
            {<point name="input.b.page1.indd041" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd041
            #add-point:ON CHANGE indd041
            {<point name="input.g.page1.indd041" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd107
            #add-point:BEFORE FIELD indd107
            {<point name="input.b.page1.indd107" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd107
            
            #add-point:AFTER FIELD indd107
            {<point name="input.a.page1.indd107" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd107
            #add-point:ON CHANGE indd107
            {<point name="input.g.page1.indd107" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd031
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd031,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD indd031
            END IF 
 
 
            #add-point:AFTER FIELD indd031
            {<point name="input.a.page1.indd031" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd031
            #add-point:BEFORE FIELD indd031
            {<point name="input.b.page1.indd031" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd031
            #add-point:ON CHANGE indd031
            {<point name="input.g.page1.indd031" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd108
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd108,"0","0","","","azz-00079",1) THEN
               NEXT FIELD indd108
            END IF 
 
 
            #add-point:AFTER FIELD indd108
            {<point name="input.a.page1.indd108" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd108
            #add-point:BEFORE FIELD indd108
            {<point name="input.b.page1.indd108" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd108
            #add-point:ON CHANGE indd108
            {<point name="input.g.page1.indd108" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd109
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd109,"0","0","","","azz-00079",1) THEN
               NEXT FIELD indd109
            END IF 
 
 
            #add-point:AFTER FIELD indd109
            {<point name="input.a.page1.indd109" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd109
            #add-point:BEFORE FIELD indd109
            {<point name="input.b.page1.indd109" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd109
            #add-point:ON CHANGE indd109
            {<point name="input.g.page1.indd109" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd110
            #add-point:BEFORE FIELD indd110
            {<point name="input.b.page1.indd110" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd110
            
            #add-point:AFTER FIELD indd110
            {<point name="input.a.page1.indd110" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd110
            #add-point:ON CHANGE indd110
            {<point name="input.g.page1.indd110" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd111
            
            #add-point:AFTER FIELD indd111
            {<point name="input.a.page1.indd111" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd111
            #add-point:BEFORE FIELD indd111
            {<point name="input.b.page1.indd111" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd111
            #add-point:ON CHANGE indd111
            {<point name="input.g.page1.indd111" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd032
            
            #add-point:AFTER FIELD indd032
            {<point name="input.a.page1.indd032" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd032
            #add-point:BEFORE FIELD indd032
            {<point name="input.b.page1.indd032" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd032
            #add-point:ON CHANGE indd032
            {<point name="input.g.page1.indd032" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd033
            
            #add-point:AFTER FIELD indd033
            {<point name="input.a.page1.indd033" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd033
            #add-point:BEFORE FIELD indd033
            {<point name="input.b.page1.indd033" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd033
            #add-point:ON CHANGE indd033
            {<point name="input.g.page1.indd033" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd151
            
            #add-point:AFTER FIELD indd151
            {<point name="input.a.page1.indd151" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd151
            #add-point:BEFORE FIELD indd151
            {<point name="input.b.page1.indd151" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd151
            #add-point:ON CHANGE indd151
            {<point name="input.g.page1.indd151" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd022
            
            #add-point:AFTER FIELD indd022
            {<point name="input.a.page1.indd022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd022
            #add-point:BEFORE FIELD indd022
            {<point name="input.b.page1.indd022" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd022
            #add-point:ON CHANGE indd022
            {<point name="input.g.page1.indd022" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd023
            
            #add-point:AFTER FIELD indd023
            {<point name="input.a.page1.indd023" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd023
            #add-point:BEFORE FIELD indd023
            {<point name="input.b.page1.indd023" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd023
            #add-point:ON CHANGE indd023
            {<point name="input.g.page1.indd023" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd042
            
            #add-point:AFTER FIELD indd042
            {<point name="input.a.page1.indd042" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd042
            #add-point:BEFORE FIELD indd042
            {<point name="input.b.page1.indd042" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd042
            #add-point:ON CHANGE indd042
            {<point name="input.g.page1.indd042" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd043
            
            #add-point:AFTER FIELD indd043
            {<point name="input.a.page1.indd043" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd043
            #add-point:BEFORE FIELD indd043
            {<point name="input.b.page1.indd043" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd043
            #add-point:ON CHANGE indd043
            {<point name="input.g.page1.indd043" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd044
            
            #add-point:AFTER FIELD indd044
            {<point name="input.a.page1.indd044" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd044
            #add-point:BEFORE FIELD indd044
            {<point name="input.b.page1.indd044" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd044
            #add-point:ON CHANGE indd044
            {<point name="input.g.page1.indd044" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indd152
            #add-point:BEFORE FIELD indd152
            {<point name="input.b.page1.indd152" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indd152
            
            #add-point:AFTER FIELD indd152
            {<point name="input.a.page1.indd152" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indd152
            #add-point:ON CHANGE indd152
            {<point name="input.g.page1.indd152" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.inddsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inddsite
            #add-point:ON ACTION controlp INFIELD inddsite
            {<point name="input.c.page1.inddsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inddseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inddseq
            #add-point:ON ACTION controlp INFIELD inddseq
            {<point name="input.c.page1.inddseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd101
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd101
            #add-point:ON ACTION controlp INFIELD indd101
            {<point name="input.c.page1.indd101" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd001
            #add-point:ON ACTION controlp INFIELD indd001
            {<point name="input.c.page1.indd001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd002
            #add-point:ON ACTION controlp INFIELD indd002
            {<point name="input.c.page1.indd002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd004
            #add-point:ON ACTION controlp INFIELD indd004
            {<point name="input.c.page1.indd004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd024
            #add-point:ON ACTION controlp INFIELD indd024
            {<point name="input.c.page1.indd024" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd102
            #add-point:ON ACTION controlp INFIELD indd102
            {<point name="input.c.page1.indd102" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd006
            #add-point:ON ACTION controlp INFIELD indd006
            {<point name="input.c.page1.indd006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd021
            #add-point:ON ACTION controlp INFIELD indd021
            {<point name="input.c.page1.indd021" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd104
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd104
            #add-point:ON ACTION controlp INFIELD indd104
            {<point name="input.c.page1.indd104" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd106
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd106
            #add-point:ON ACTION controlp INFIELD indd106
            {<point name="input.c.page1.indd106" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd041
            #add-point:ON ACTION controlp INFIELD indd041
            {<point name="input.c.page1.indd041" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd107
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd107
            #add-point:ON ACTION controlp INFIELD indd107
            {<point name="input.c.page1.indd107" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd031
            #add-point:ON ACTION controlp INFIELD indd031
            {<point name="input.c.page1.indd031" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd108
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd108
            #add-point:ON ACTION controlp INFIELD indd108
            {<point name="input.c.page1.indd108" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd109
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd109
            #add-point:ON ACTION controlp INFIELD indd109
            {<point name="input.c.page1.indd109" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd110
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd110
            #add-point:ON ACTION controlp INFIELD indd110
            {<point name="input.c.page1.indd110" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd111
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd111
            #add-point:ON ACTION controlp INFIELD indd111
            {<point name="input.c.page1.indd111" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd032
            #add-point:ON ACTION controlp INFIELD indd032
            {<point name="input.c.page1.indd032" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd033
            #add-point:ON ACTION controlp INFIELD indd033
            {<point name="input.c.page1.indd033" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd151
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd151
            #add-point:ON ACTION controlp INFIELD indd151
            {<point name="input.c.page1.indd151" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd022
            #add-point:ON ACTION controlp INFIELD indd022
            {<point name="input.c.page1.indd022" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd023
            #add-point:ON ACTION controlp INFIELD indd023
            {<point name="input.c.page1.indd023" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd042
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd042
            #add-point:ON ACTION controlp INFIELD indd042
            {<point name="input.c.page1.indd042" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd043
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd043
            #add-point:ON ACTION controlp INFIELD indd043
            {<point name="input.c.page1.indd043" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd044
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd044
            #add-point:ON ACTION controlp INFIELD indd044
            {<point name="input.c.page1.indd044" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indd152
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indd152
            #add-point:ON ACTION controlp INFIELD indd152
            {<point name="input.c.page1.indd152" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_indd_d[l_ac].* = g_indd_d_t.*
               CLOSE aint350_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_indd_d[l_ac].inddseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_indd_d[l_ac].* = g_indd_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aint350_indd_t_mask_restore('restore_mask_o')
      
               UPDATE indd_t SET (indddocno,inddsite,inddseq,indd101,indd001,indd002,indd004,indd024, 
                   indd102,indd006,indd021,indd104,indd106,indd041,indd107,indd031,indd108,indd109,indd110, 
                   indd111,indd032,indd033,indd151,indd022,indd023,indd042,indd043,indd044,indd152) = (g_indc_m.indcdocno, 
                   g_indd_d[l_ac].inddsite,g_indd_d[l_ac].inddseq,g_indd_d[l_ac].indd101,g_indd_d[l_ac].indd001, 
                   g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd004,g_indd_d[l_ac].indd024,g_indd_d[l_ac].indd102, 
                   g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd021,g_indd_d[l_ac].indd104,g_indd_d[l_ac].indd106, 
                   g_indd_d[l_ac].indd041,g_indd_d[l_ac].indd107,g_indd_d[l_ac].indd031,g_indd_d[l_ac].indd108, 
                   g_indd_d[l_ac].indd109,g_indd_d[l_ac].indd110,g_indd_d[l_ac].indd111,g_indd_d[l_ac].indd032, 
                   g_indd_d[l_ac].indd033,g_indd_d[l_ac].indd151,g_indd_d[l_ac].indd022,g_indd_d[l_ac].indd023, 
                   g_indd_d[l_ac].indd042,g_indd_d[l_ac].indd043,g_indd_d[l_ac].indd044,g_indd_d[l_ac].indd152) 

                WHERE inddent = g_enterprise AND indddocno = g_indc_m.indcdocno 
 
                  AND inddseq = g_indd_d_t.inddseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indd_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_indd_d[l_ac].* = g_indd_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indd_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_indd_d[l_ac].* = g_indd_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indc_m.indcdocno
               LET gs_keys_bak[1] = g_indcdocno_t
               LET gs_keys[2] = g_indd_d[g_detail_idx].inddseq
               LET gs_keys_bak[2] = g_indd_d_t.inddseq
               CALL aint350_update_b('indd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aint350_indd_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_indd_d[g_detail_idx].inddseq = g_indd_d_t.inddseq 
 
                  ) THEN
                  LET gs_keys[01] = g_indc_m.indcdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_indd_d_t.inddseq
 
                  CALL aint350_key_update_b(gs_keys,'indd_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_indc_m),util.JSON.stringify(g_indd_d_t)
               LET g_log2 = util.JSON.stringify(g_indc_m),util.JSON.stringify(g_indd_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint350_unlock_b("indd_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_indd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_indd_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="aint350.input.head" ver="25" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101, 
          g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102, 
          g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105, 
          g_indc_m.l_indc105_desc,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aint350_cl USING g_enterprise,g_indc_m.indcdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint350_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint350_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aint350_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aint350_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcdocno
            
            #add-point:AFTER FIELD indcdocno
            {<point name="input.a.indcdocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcdocno
            #add-point:BEFORE FIELD indcdocno
            {<point name="input.b.indcdocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indcdocno
            #add-point:ON CHANGE indcdocno
            {<point name="input.g.indcdocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcdocdt
            #add-point:BEFORE FIELD indcdocdt
            {<point name="input.b.indcdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcdocdt
            
            #add-point:AFTER FIELD indcdocdt
            {<point name="input.a.indcdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indcdocdt
            #add-point:ON CHANGE indcdocdt
            {<point name="input.g.indcdocdt" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc004
            
            #add-point:AFTER FIELD indc004
            {<point name="input.a.indc004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc004
            #add-point:BEFORE FIELD indc004
            {<point name="input.b.indc004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc004
            #add-point:ON CHANGE indc004
            {<point name="input.g.indc004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc024
            #add-point:BEFORE FIELD indc024
            {<point name="input.b.indc024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc024
            
            #add-point:AFTER FIELD indc024
            {<point name="input.a.indc024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc024
            #add-point:ON CHANGE indc024
            {<point name="input.g.indc024" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc101
            
            #add-point:AFTER FIELD indc101
            {<point name="input.a.indc101" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc101
            #add-point:BEFORE FIELD indc101
            {<point name="input.b.indc101" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc101
            #add-point:ON CHANGE indc101
            {<point name="input.g.indc101" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indcstus
            #add-point:BEFORE FIELD indcstus
            {<point name="input.b.indcstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indcstus
            
            #add-point:AFTER FIELD indcstus
            {<point name="input.a.indcstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indcstus
            #add-point:ON CHANGE indcstus
            {<point name="input.g.indcstus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc002
            #add-point:BEFORE FIELD indc002
            {<point name="input.b.indc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc002
            
            #add-point:AFTER FIELD indc002
            {<point name="input.a.indc002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc002
            #add-point:ON CHANGE indc002
            {<point name="input.g.indc002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc003
            
            #add-point:AFTER FIELD indc003
            {<point name="input.a.indc003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc003
            #add-point:BEFORE FIELD indc003
            {<point name="input.b.indc003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc003
            #add-point:ON CHANGE indc003
            {<point name="input.g.indc003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc005
            
            #add-point:AFTER FIELD indc005
            {<point name="input.a.indc005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc005
            #add-point:BEFORE FIELD indc005
            {<point name="input.b.indc005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc005
            #add-point:ON CHANGE indc005
            {<point name="input.g.indc005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc151
            
            #add-point:AFTER FIELD indc151
            {<point name="input.a.indc151" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc151
            #add-point:BEFORE FIELD indc151
            {<point name="input.b.indc151" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc151
            #add-point:ON CHANGE indc151
            {<point name="input.g.indc151" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc102
            #add-point:BEFORE FIELD indc102
            {<point name="input.b.indc102" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc102
            
            #add-point:AFTER FIELD indc102
            {<point name="input.a.indc102" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc102
            #add-point:ON CHANGE indc102
            {<point name="input.g.indc102" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc103
            #add-point:BEFORE FIELD indc103
            {<point name="input.b.indc103" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc103
            
            #add-point:AFTER FIELD indc103
            {<point name="input.a.indc103" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc103
            #add-point:ON CHANGE indc103
            {<point name="input.g.indc103" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc104
            #add-point:BEFORE FIELD indc104
            {<point name="input.b.indc104" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc104
            
            #add-point:AFTER FIELD indc104
            {<point name="input.a.indc104" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc104
            #add-point:ON CHANGE indc104
            {<point name="input.g.indc104" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc009
            #add-point:BEFORE FIELD indc009
            {<point name="input.b.indc009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc009
            
            #add-point:AFTER FIELD indc009
            {<point name="input.a.indc009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc009
            #add-point:ON CHANGE indc009
            {<point name="input.g.indc009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc001
            #add-point:BEFORE FIELD indc001
            {<point name="input.b.indc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc001
            
            #add-point:AFTER FIELD indc001
            {<point name="input.a.indc001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc001
            #add-point:ON CHANGE indc001
            {<point name="input.g.indc001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc008
            #add-point:BEFORE FIELD indc008
            {<point name="input.b.indc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc008
            
            #add-point:AFTER FIELD indc008
            {<point name="input.a.indc008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc008
            #add-point:ON CHANGE indc008
            {<point name="input.g.indc008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc105
            
            #add-point:AFTER FIELD indc105
            {<point name="input.a.indc105" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc105
            #add-point:BEFORE FIELD indc105
            {<point name="input.b.indc105" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc105
            #add-point:ON CHANGE indc105
            {<point name="input.g.indc105" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc105_desc
            #add-point:BEFORE FIELD indc105_desc
            {<point name="input.b.indc105_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc105_desc
            
            #add-point:AFTER FIELD indc105_desc
            {<point name="input.a.indc105_desc" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc105_desc
            #add-point:ON CHANGE indc105_desc
            {<point name="input.g.indc105_desc" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_indc105_desc
            #add-point:BEFORE FIELD l_indc105_desc
            {<point name="input.b.l_indc105_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_indc105_desc
            
            #add-point:AFTER FIELD l_indc105_desc
            {<point name="input.a.l_indc105_desc" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_indc105_desc
            #add-point:ON CHANGE l_indc105_desc
            {<point name="input.g.l_indc105_desc" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc106
            
            #add-point:AFTER FIELD indc106
            {<point name="input.a.indc106" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc106
            #add-point:BEFORE FIELD indc106
            {<point name="input.b.indc106" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc106
            #add-point:ON CHANGE indc106
            {<point name="input.g.indc106" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc107
            
            #add-point:AFTER FIELD indc107
            {<point name="input.a.indc107" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc107
            #add-point:BEFORE FIELD indc107
            {<point name="input.b.indc107" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc107
            #add-point:ON CHANGE indc107
            {<point name="input.g.indc107" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indc108
            
            #add-point:AFTER FIELD indc108
            {<point name="input.a.indc108" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indc108
            #add-point:BEFORE FIELD indc108
            {<point name="input.b.indc108" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indc108
            #add-point:ON CHANGE indc108
            {<point name="input.g.indc108" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.indcdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcdocno
            #add-point:ON ACTION controlp INFIELD indcdocno
            {<point name="input.c.indcdocno" />}
            #END add-point
 
         #Ctrlp:input.c.indcdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcdocdt
            #add-point:ON ACTION controlp INFIELD indcdocdt
            {<point name="input.c.indcdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.indc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc004
            #add-point:ON ACTION controlp INFIELD indc004
            {<point name="input.c.indc004" />}
            #END add-point
 
         #Ctrlp:input.c.indc024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc024
            #add-point:ON ACTION controlp INFIELD indc024
            {<point name="input.c.indc024" />}
            #END add-point
 
         #Ctrlp:input.c.indc101
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc101
            #add-point:ON ACTION controlp INFIELD indc101
            {<point name="input.c.indc101" />}
            #END add-point
 
         #Ctrlp:input.c.indcstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indcstus
            #add-point:ON ACTION controlp INFIELD indcstus
            {<point name="input.c.indcstus" />}
            #END add-point
 
         #Ctrlp:input.c.indc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc002
            #add-point:ON ACTION controlp INFIELD indc002
            {<point name="input.c.indc002" />}
            #END add-point
 
         #Ctrlp:input.c.indc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc003
            #add-point:ON ACTION controlp INFIELD indc003
            {<point name="input.c.indc003" />}
            #END add-point
 
         #Ctrlp:input.c.indc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc005
            #add-point:ON ACTION controlp INFIELD indc005
            {<point name="input.c.indc005" />}
            #END add-point
 
         #Ctrlp:input.c.indc151
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc151
            #add-point:ON ACTION controlp INFIELD indc151
            {<point name="input.c.indc151" />}
            #END add-point
 
         #Ctrlp:input.c.indc102
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc102
            #add-point:ON ACTION controlp INFIELD indc102
            {<point name="input.c.indc102" />}
            #END add-point
 
         #Ctrlp:input.c.indc103
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc103
            #add-point:ON ACTION controlp INFIELD indc103
            {<point name="input.c.indc103" />}
            #END add-point
 
         #Ctrlp:input.c.indc104
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc104
            #add-point:ON ACTION controlp INFIELD indc104
            {<point name="input.c.indc104" />}
            #END add-point
 
         #Ctrlp:input.c.indc009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc009
            #add-point:ON ACTION controlp INFIELD indc009
            {<point name="input.c.indc009" />}
            #END add-point
 
         #Ctrlp:input.c.indc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc001
            #add-point:ON ACTION controlp INFIELD indc001
            {<point name="input.c.indc001" />}
            #END add-point
 
         #Ctrlp:input.c.indc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc008
            #add-point:ON ACTION controlp INFIELD indc008
            {<point name="input.c.indc008" />}
            #END add-point
 
         #Ctrlp:input.c.indc105
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc105
            #add-point:ON ACTION controlp INFIELD indc105
            {<point name="input.c.indc105" />}
            #END add-point
 
         #Ctrlp:input.c.indc105_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc105_desc
            #add-point:ON ACTION controlp INFIELD indc105_desc
            {<point name="input.c.indc105_desc" />}
            #END add-point
 
         #Ctrlp:input.c.l_indc105_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_indc105_desc
            #add-point:ON ACTION controlp INFIELD l_indc105_desc
            {<point name="input.c.l_indc105_desc" />}
            #END add-point
 
         #Ctrlp:input.c.indc106
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc106
            #add-point:ON ACTION controlp INFIELD indc106
            {<point name="input.c.indc106" />}
            #END add-point
 
         #Ctrlp:input.c.indc107
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc107
            #add-point:ON ACTION controlp INFIELD indc107
            {<point name="input.c.indc107" />}
            #END add-point
 
         #Ctrlp:input.c.indc108
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indc108
            #add-point:ON ACTION controlp INFIELD indc108
            {<point name="input.c.indc108" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_indc_m.indcdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO indc_t (indcent,indcdocno,indcdocdt,indc004,indc024,indc101,indcstus,indc002, 
                   indc003,indc005,indc151,indc102,indc103,indc104,indc009,indc001,indc008,indc105,indc106, 
                   indc107,indc108,indcownid,indcowndp,indccrtid,indccrtdp,indccrtdt,indcmodid,indcpstid, 
                   indcmoddt,indcpstdt,indccnfid,indccnfdt)
               VALUES (g_enterprise,g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc024, 
                   g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc005, 
                   g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
                   g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107, 
                   g_indc_m.indc108,g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp, 
                   g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt, 
                   g_indc_m.indccnfid,g_indc_m.indccnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_indc_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint350_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aint350_b_fill()
                  CALL aint350_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aint350_indc_t_mask_restore('restore_mask_o')
               
               UPDATE indc_t SET (indcdocno,indcdocdt,indc004,indc024,indc101,indcstus,indc002,indc003, 
                   indc005,indc151,indc102,indc103,indc104,indc009,indc001,indc008,indc105,indc106,indc107, 
                   indc108,indcownid,indcowndp,indccrtid,indccrtdp,indccrtdt,indcmodid,indcpstid,indcmoddt, 
                   indcpstdt,indccnfid,indccnfdt) = (g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004, 
                   g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
                   g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104, 
                   g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106, 
                   g_indc_m.indc107,g_indc_m.indc108,g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid, 
                   g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt, 
                   g_indc_m.indcpstdt,g_indc_m.indccnfid,g_indc_m.indccnfdt)
                WHERE indcent = g_enterprise AND indcdocno = g_indcdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "indc_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aint350_indc_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_indc_m_t)
               LET g_log2 = util.JSON.stringify(g_indc_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_indcdocno_t = g_indc_m.indcdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="aint350.input.other" ver="9" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD indcdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD inddsite
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aint350.insert" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint350_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_indd_d.clear()   
 
 
   INITIALIZE g_indc_m.* LIKE indc_t.*             #DEFAULT 設定
   
   LET g_indcdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_indc_m.indcownid = g_user
      LET g_indc_m.indcowndp = g_dept
      LET g_indc_m.indccrtid = g_user
      LET g_indc_m.indccrtdp = g_dept 
      LET g_indc_m.indccrtdt = cl_get_current()
      LET g_indc_m.indcmodid = g_user
      LET g_indc_m.indcmoddt = cl_get_current()
      LET g_indc_m.indcstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_indc_m.indcstus = "N"
      LET g_indc_m.indc002 = "1"
      LET g_indc_m.indc102 = "1"
      LET g_indc_m.indc103 = "N"
      LET g_indc_m.indc104 = "N"
      LET g_indc_m.indc009 = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_indc_m_t.* = g_indc_m.*
      LET g_indc_m_o.* = g_indc_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indc_m.indcstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL aint350_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_indc_m.* TO NULL
         INITIALIZE g_indd_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aint350_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_indd_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint350_set_act_visible()   
   CALL aint350_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indcent = '" ||g_enterprise|| "' AND",
                      " indcdocno = '", g_indc_m.indcdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint350_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aint350_cl
   
   CALL aint350_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aint350_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcdocno,g_indc_m.indcdocdt, 
       g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
       g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108, 
       g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt, 
       g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
       g_indc_m.indccnfdt,g_indc_m.indc004_desc,g_indc_m.indc101_desc,g_indc_m.indc005_desc,g_indc_m.indc106_desc, 
       g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc, 
       g_indc_m.indcmodid_desc,g_indc_m.indcpstid_desc,g_indc_m.indccnfid_desc
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint350_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indcdocno_desc, 
       g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc151,g_indc_m.indc151_desc,g_indc_m.indc102, 
       g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105, 
       g_indc_m.indc105_desc,g_indc_m.l_indc105_desc,g_indc_m.indc106,g_indc_m.indc106_desc,g_indc_m.indc107, 
       g_indc_m.indc107_desc,g_indc_m.indc108,g_indc_m.indc108_desc,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcpstid, 
       g_indc_m.indcpstid_desc,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid,g_indc_m.indccnfid_desc, 
       g_indc_m.indccnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aint350_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="aint350.insert_b" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint350_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO indd_t
                  (inddent,
                   indddocno,
                   inddseq
                   ,inddsite,indd101,indd001,indd002,indd004,indd024,indd102,indd006,indd021,indd104,indd106,indd041,indd107,indd031,indd108,indd109,indd110,indd111,indd032,indd033,indd151,indd022,indd023,indd042,indd043,indd044,indd152) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_indd_d[g_detail_idx].inddsite,g_indd_d[g_detail_idx].indd101,g_indd_d[g_detail_idx].indd001, 
                       g_indd_d[g_detail_idx].indd002,g_indd_d[g_detail_idx].indd004,g_indd_d[g_detail_idx].indd024, 
                       g_indd_d[g_detail_idx].indd102,g_indd_d[g_detail_idx].indd006,g_indd_d[g_detail_idx].indd021, 
                       g_indd_d[g_detail_idx].indd104,g_indd_d[g_detail_idx].indd106,g_indd_d[g_detail_idx].indd041, 
                       g_indd_d[g_detail_idx].indd107,g_indd_d[g_detail_idx].indd031,g_indd_d[g_detail_idx].indd108, 
                       g_indd_d[g_detail_idx].indd109,g_indd_d[g_detail_idx].indd110,g_indd_d[g_detail_idx].indd111, 
                       g_indd_d[g_detail_idx].indd032,g_indd_d[g_detail_idx].indd033,g_indd_d[g_detail_idx].indd151, 
                       g_indd_d[g_detail_idx].indd022,g_indd_d[g_detail_idx].indd023,g_indd_d[g_detail_idx].indd042, 
                       g_indd_d[g_detail_idx].indd043,g_indd_d[g_detail_idx].indd044,g_indd_d[g_detail_idx].indd152) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indd_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indd_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aint350.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aint350_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint350.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aint350_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aint350.lock_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint350_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL aint350_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "indd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint350_bcl USING g_enterprise,
                                       g_indc_m.indcdocno,g_indd_d[g_detail_idx].inddseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint350_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint350.main" ver="17" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT indcdocno,indcdocdt,indc004,'','',indc024,indc101,'',indcstus,indc002, 
       indc003,indc005,'',indc151,'',indc102,indc103,indc104,indc009,indc001,indc008,indc105,'','',indc106, 
       '',indc107,'',indc108,'',indcownid,'',indcowndp,'',indccrtid,'',indccrtdp,'',indccrtdt,indcmodid, 
       '',indcpstid,'',indcmoddt,indcpstdt,indccnfid,'',indccnfdt", 
                      " FROM indc_t",
                      " WHERE indcent= ? AND indcdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint350_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.indcdocno,t0.indcdocdt,t0.indc004,t0.indc024,t0.indc101,t0.indcstus, 
       t0.indc002,t0.indc003,t0.indc005,t0.indc151,t0.indc102,t0.indc103,t0.indc104,t0.indc009,t0.indc001, 
       t0.indc008,t0.indc105,t0.indc106,t0.indc107,t0.indc108,t0.indcownid,t0.indcowndp,t0.indccrtid, 
       t0.indccrtdp,t0.indccrtdt,t0.indcmodid,t0.indcpstid,t0.indcmoddt,t0.indcpstdt,t0.indccnfid,t0.indccnfdt, 
       t1.ooag011 ,t2.ooefl003 ,t3.ooefl003 ,t4.oocql004 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 , 
       t9.ooag011 ,t10.ooag011 ,t11.ooag011",
               " FROM indc_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.indc004  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.indc101 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.indc005 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='263' AND t4.oocql002=t0.indc106 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.indcownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.indcowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.indccrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=t0.indccrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.indcmodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.indcpstid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=t0.indccnfid  ",
 
               " WHERE t0.indcent = '" ||g_enterprise|| "' AND t0.indcdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint350_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint350 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint350_init()   
 
      #進入選單 Menu (="N")
      CALL aint350_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint350
      
   END IF 
   
   CLOSE aint350_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aint350.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ain/aint350_mask.4gl"
]]>
  </section>
  <section id="aint350.modify" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint350_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_indc_m_t.* = g_indc_m.*
   LET g_indc_m_o.* = g_indc_m.*
   
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   CALL s_transaction_begin()
   
   OPEN aint350_cl USING g_enterprise,g_indc_m.indcdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint350_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint350_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcdocno,g_indc_m.indcdocdt, 
       g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
       g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108, 
       g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt, 
       g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
       g_indc_m.indccnfdt,g_indc_m.indc004_desc,g_indc_m.indc101_desc,g_indc_m.indc005_desc,g_indc_m.indc106_desc, 
       g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc, 
       g_indc_m.indcmodid_desc,g_indc_m.indcpstid_desc,g_indc_m.indccnfid_desc
   
   #檢查是否允許此動作
   IF NOT aint350_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint350_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL aint350_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_indcdocno_t = g_indc_m.indcdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_indc_m.indcmodid = g_user 
LET g_indc_m.indcmoddt = cl_get_current()
LET g_indc_m.indcmodid_desc = cl_get_username(g_indc_m.indcmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aint350_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE indc_t SET (indcmodid,indcmoddt) = (g_indc_m.indcmodid,g_indc_m.indcmoddt)
          WHERE indcent = g_enterprise AND indcdocno = g_indcdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_indc_m.* = g_indc_m_t.*
         CALL aint350_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_indc_m.indcdocno != g_indcdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE indd_t SET indddocno = g_indc_m.indcdocno
 
          WHERE inddent = g_enterprise AND indddocno = g_indcdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indd_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indd_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint350_set_act_visible()   
   CALL aint350_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " indcent = '" ||g_enterprise|| "' AND",
                      " indcdocno = '", g_indc_m.indcdocno, "' "
 
   #填到對應位置
   CALL aint350_browser_fill("")
 
   CLOSE aint350_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint350_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="aint350.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION aint350_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aint350_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_indc_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aint350.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aint350.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint350.query" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint350_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_indd_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aint350_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint350_browser_fill("")
      CALL aint350_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint350_filter_show('indcdocno')
   CALL aint350_filter_show('indcdocdt')
   CALL aint350_filter_show('indc024')
   CALL aint350_filter_show('indc004')
   CALL aint350_filter_show('indc101')
   CALL aint350_filter_show('indc005')
   CALL aint350_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aint350_fetch("F") 
      #顯示單身筆數
      CALL aint350_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint350.reproduce" ver="20" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aint350_reproduce()
   DEFINE l_newno     LIKE indc_t.indcdocno 
   DEFINE l_oldno     LIKE indc_t.indcdocno 
 
   DEFINE l_master    RECORD LIKE indc_t.*
   DEFINE l_detail    RECORD LIKE indd_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_indcdocno_t = g_indc_m.indcdocno
 
    
   LET g_indc_m.indcdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_indc_m.indcownid = g_user
      LET g_indc_m.indcowndp = g_dept
      LET g_indc_m.indccrtid = g_user
      LET g_indc_m.indccrtdp = g_dept 
      LET g_indc_m.indccrtdt = cl_get_current()
      LET g_indc_m.indcmodid = g_user
      LET g_indc_m.indcmoddt = cl_get_current()
      LET g_indc_m.indcstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indc_m.indcstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_indc_m.indcdocno_desc = ''
   DISPLAY BY NAME g_indc_m.indcdocno_desc
 
   
   CALL aint350_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_indc_m.* TO NULL
      INITIALIZE g_indd_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aint350_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint350_set_act_visible()   
   CALL aint350_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indcent = '" ||g_enterprise|| "' AND",
                      " indcdocno = '", g_indc_m.indcdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint350_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aint350_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aint350_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="aint350.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aint350_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint350.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aint350_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint350.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aint350_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint350.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aint350_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint350.set_entry" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint350_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("indcdocno,indcdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("indcdocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint350.set_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint350_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aint350.set_no_entry" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint350_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("indcdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("indcdocno,indcdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint350.set_no_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint350_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aint350.set_pk_array" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aint350_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_indc_m.indcdocno
   LET g_pk_array[1].column = 'indcdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint350.show" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint350_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint350_b_fill() #單身填充
      CALL aint350_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aint350_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint350_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indcdocno_desc, 
       g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc151,g_indc_m.indc151_desc,g_indc_m.indc102, 
       g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105, 
       g_indc_m.indc105_desc,g_indc_m.l_indc105_desc,g_indc_m.indc106,g_indc_m.indc106_desc,g_indc_m.indc107, 
       g_indc_m.indc107_desc,g_indc_m.indc108,g_indc_m.indc108_desc,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcpstid, 
       g_indc_m.indcpstid_desc,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid,g_indc_m.indccnfid_desc, 
       g_indc_m.indccnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indc_m.indcstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_indd_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint350_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint350.signature" ver="4" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aint350.state_change" ver="12" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION aint350_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aint350_cl USING g_enterprise,g_indc_m.indcdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint350_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aint350_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcdocno,g_indc_m.indcdocdt, 
       g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
       g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108, 
       g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt, 
       g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
       g_indc_m.indccnfdt,g_indc_m.indc004_desc,g_indc_m.indc101_desc,g_indc_m.indc005_desc,g_indc_m.indc106_desc, 
       g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc, 
       g_indc_m.indcmodid_desc,g_indc_m.indcpstid_desc,g_indc_m.indccnfid_desc
 
   #檢查是否允許此動作
   IF NOT aint350_action_chk() THEN
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indcdocno_desc, 
       g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc151,g_indc_m.indc151_desc,g_indc_m.indc102, 
       g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105, 
       g_indc_m.indc105_desc,g_indc_m.l_indc105_desc,g_indc_m.indc106,g_indc_m.indc106_desc,g_indc_m.indc107, 
       g_indc_m.indc107_desc,g_indc_m.indc108,g_indc_m.indc108_desc,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcpstid, 
       g_indc_m.indcpstid_desc,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid,g_indc_m.indccnfid_desc, 
       g_indc_m.indccnfdt
 
   CASE g_indc_m.indcstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "O"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
      WHEN "P"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_indc_m.indcstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "O"
               HIDE OPTION "confirm_transfer_out"
            WHEN "P"
               HIDE OPTION "confirm_transfer_in"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制
            {<point name="statechange.closed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirm_transfer_out
         IF cl_auth_chk_act("confirm_transfer_out") THEN
            LET lc_state = "O"
            #add-point:action控制
            {<point name="statechange.confirm_transfer_out"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirm_transfer_in
         IF cl_auth_chk_act("confirm_transfer_in") THEN
            LET lc_state = "P"
            #add-point:action控制
            {<point name="statechange.confirm_transfer_in"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "C"
      AND lc_state <> "O"
      AND lc_state <> "P"
      AND lc_state <> "X"
      ) OR 
      g_indc_m.indcstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aint350_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_indc_m.indcmodid = g_user
   LET g_indc_m.indcmoddt = cl_get_current()
   LET g_indc_m.indcstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE indc_t 
      SET (indcstus,indcmodid,indcmoddt) 
        = (g_indc_m.indcstus,g_indc_m.indcmodid,g_indc_m.indcmoddt)     
    WHERE indcent = g_enterprise AND indcdocno = g_indc_m.indcdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aint350_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcdocno,g_indc_m.indcdocdt, 
          g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
          g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
          g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108, 
          g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt, 
          g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
          g_indc_m.indccnfdt,g_indc_m.indc004_desc,g_indc_m.indc101_desc,g_indc_m.indc005_desc,g_indc_m.indc106_desc, 
          g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc, 
          g_indc_m.indcmodid_desc,g_indc_m.indcpstid_desc,g_indc_m.indccnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_indc_m.indcdocno,g_indc_m.indcdocdt,g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indcdocno_desc, 
          g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcstus,g_indc_m.indc002, 
          g_indc_m.indc003,g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc151,g_indc_m.indc151_desc, 
          g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009,g_indc_m.indc001,g_indc_m.indc008, 
          g_indc_m.indc105,g_indc_m.indc105_desc,g_indc_m.l_indc105_desc,g_indc_m.indc106,g_indc_m.indc106_desc, 
          g_indc_m.indc107,g_indc_m.indc107_desc,g_indc_m.indc108,g_indc_m.indc108_desc,g_indc_m.indcownid, 
          g_indc_m.indcownid_desc,g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc, 
          g_indc_m.indccrtdp,g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc, 
          g_indc_m.indcpstid,g_indc_m.indcpstid_desc,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
          g_indc_m.indccnfid_desc,g_indc_m.indccnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aint350_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint350_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint350.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aint350_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aint350.ui_browser_refresh" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint350_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_indcdocno = g_indc_m.indcdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint350.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint350_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint350.ui_dialog" ver="38" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aint350_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint350_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_indc_m.* TO NULL
         CALL g_indd_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aint350_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint350_fetch('') # reload data
               LET l_ac = 1
               CALL aint350_ui_detailshow() #Setting the current row 
         
               CALL aint350_idx_chk()
               #NEXT FIELD inddseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_indd_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint350_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aint350_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION detail_qrystr
               MENU "" ATTRIBUTE(STYLE="popup")
                  #add-point:ON ACTION detail_qrystr相關動作
                  {<point name="menu.detail_show.page1_sub.detail_qrystr" />}
                  #END add-point
                                 #應用 a43 樣板自動產生(Version:2)
               ON ACTION prog_aint320
                  LET g_action_choice="prog_aint320"
                  IF cl_auth_chk_act("prog_aint320") THEN
                     
                     #add-point:ON ACTION prog_aint320
                     {<point name="menu.detail_show.page1_sub.prog_aint320" />}
                     #END add-point
                     
                  END IF
 
 
 
               END MENU
 
 
               #add-point:ON ACTION detail_qrystr
               {<point name="menu.detail_show.page1.detail_qrystr" />}
               #END add-point
 
 
 
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aint350_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint350_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint350_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint350_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint350_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aint350_set_act_visible()   
            CALL aint350_set_act_no_visible()
            IF NOT (g_indc_m.indcdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " indcent = '" ||g_enterprise|| "' AND",
                                  " indcdocno = '", g_indc_m.indcdocno, "' "
 
               #填到對應位置
               CALL aint350_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indc_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indd_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aint350_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indc_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indd_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint350_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aint350_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint350_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aint350_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint350_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aint350_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint350_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aint350_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint350_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aint350_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint350_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aint350_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint350_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_indd_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inddseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint350_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint350_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint350_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/ain/aint350_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint350_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint350_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint350_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_indc003
            LET g_action_choice="prog_indc003"
            IF cl_auth_chk_act("prog_indc003") THEN
               
               #add-point:ON ACTION prog_indc003
               {<point name="menu.prog_indc003" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aint350_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint350_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint350_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_indc_m.indcdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aint350.ui_headershow" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint350_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_indc_m.indcdocno = g_browser[g_current_idx].b_indcdocno   
 
   EXECUTE aint350_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcdocno,g_indc_m.indcdocdt, 
       g_indc_m.indc004,g_indc_m.indc024,g_indc_m.indc101,g_indc_m.indcstus,g_indc_m.indc002,g_indc_m.indc003, 
       g_indc_m.indc005,g_indc_m.indc151,g_indc_m.indc102,g_indc_m.indc103,g_indc_m.indc104,g_indc_m.indc009, 
       g_indc_m.indc001,g_indc_m.indc008,g_indc_m.indc105,g_indc_m.indc106,g_indc_m.indc107,g_indc_m.indc108, 
       g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt, 
       g_indc_m.indcmodid,g_indc_m.indcpstid,g_indc_m.indcmoddt,g_indc_m.indcpstdt,g_indc_m.indccnfid, 
       g_indc_m.indccnfdt,g_indc_m.indc004_desc,g_indc_m.indc101_desc,g_indc_m.indc005_desc,g_indc_m.indc106_desc, 
       g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc, 
       g_indc_m.indcmodid_desc,g_indc_m.indcpstid_desc,g_indc_m.indccnfid_desc
   CALL aint350_indc_t_mask()
   CALL aint350_show()
      
END FUNCTION
]]>
  </section>
  <section id="aint350.unlock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint350_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint350_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aint350.update_b" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint350_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "indd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aint350_indd_t_mask_restore('restore_mask_o')
               
      UPDATE indd_t 
         SET (indddocno,
              inddseq
              ,inddsite,indd101,indd001,indd002,indd004,indd024,indd102,indd006,indd021,indd104,indd106,indd041,indd107,indd031,indd108,indd109,indd110,indd111,indd032,indd033,indd151,indd022,indd023,indd042,indd043,indd044,indd152) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_indd_d[g_detail_idx].inddsite,g_indd_d[g_detail_idx].indd101,g_indd_d[g_detail_idx].indd001, 
                  g_indd_d[g_detail_idx].indd002,g_indd_d[g_detail_idx].indd004,g_indd_d[g_detail_idx].indd024, 
                  g_indd_d[g_detail_idx].indd102,g_indd_d[g_detail_idx].indd006,g_indd_d[g_detail_idx].indd021, 
                  g_indd_d[g_detail_idx].indd104,g_indd_d[g_detail_idx].indd106,g_indd_d[g_detail_idx].indd041, 
                  g_indd_d[g_detail_idx].indd107,g_indd_d[g_detail_idx].indd031,g_indd_d[g_detail_idx].indd108, 
                  g_indd_d[g_detail_idx].indd109,g_indd_d[g_detail_idx].indd110,g_indd_d[g_detail_idx].indd111, 
                  g_indd_d[g_detail_idx].indd032,g_indd_d[g_detail_idx].indd033,g_indd_d[g_detail_idx].indd151, 
                  g_indd_d[g_detail_idx].indd022,g_indd_d[g_detail_idx].indd023,g_indd_d[g_detail_idx].indd042, 
                  g_indd_d[g_detail_idx].indd043,g_indd_d[g_detail_idx].indd044,g_indd_d[g_detail_idx].indd152)  

         WHERE inddent = g_enterprise AND indddocno = ps_keys_bak[1] AND inddseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indd_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indd_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint350_indd_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
