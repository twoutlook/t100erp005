<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ainp860" std_prog="ainp860" erpver="1.0" module="AIN" ver="1" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="P" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="input.a.inpadocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.c.inpadocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_master.inpadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inpadocno_3()                                #呼叫開窗

            LET g_master.inpadocno = g_qryparam.return1              

            DISPLAY g_master.inpadocno TO inpadocno              #

            NEXT FIELD inpadocno                          #返回原欄位

]]>
  </point>
  <section id="ainp860.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000005
#+ 
#+ Filename...: ainp860
#+ Description: 盤點標籤重新計算作業
#+ Creator....: 01534(2014/07/08)
#+ Modifier...: 01534(2014/07/08)
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="ainp860.global" ver="1" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       inpadocno LIKE inpa_t.inpadocno, 
   inpa002 LIKE inpa_t.inpa002, 
   inpa002_desc LIKE type_t.chr80, 
   inpadocno_desc LIKE type_t.chr80, 
   date LIKE type_t.dat, 
   stock LIKE type_t.chr1, 
   blank1 LIKE type_t.chr1, 
   number1 LIKE type_t.num10, 
   work LIKE type_t.chr1, 
   blank2 LIKE type_t.chr1, 
   number2 LIKE type_t.num10, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ainp860.init" ver="1" status="" src="s">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION ainp860_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ainp860.main" ver="1" status="" src="s">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL ainp860_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ainp860 WITH FORM cl_ap_formpath("ain",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL ainp860_init()
 
      #進入選單 Menu (="N")
      CALL ainp860_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_ainp860
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="ainp860.other_function" ver="1" status="" src="s">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="ainp860.process" ver="1" status="" src="s">
    <![CDATA[#+ 資料處理
PRIVATE FUNCTION ainp860_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE ainp860_process_cs CURSOR FROM ls_sql
#  FOREACH ainp860_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION
]]>
  </section>
  <section id="ainp860.transfer_argv" ver="1" status="" src="s">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION ainp860_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="ainp860.ui_dialog" ver="2" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ainp860_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #+ 此段落由子樣板a57產生
         INPUT BY NAME g_master.inpadocno,g_master.stock,g_master.blank1,g_master.number1,g_master.work, 
             g_master.blank2,g_master.number2 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #此段落由子樣板a02產生
         AFTER FIELD inpadocno
            
            #add-point:AFTER FIELD inpadocno
            {<point name="input.a.inpadocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpadocno
            #add-point:BEFORE FIELD inpadocno
            {<point name="input.b.inpadocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpadocno
            #add-point:ON CHANGE inpadocno
            {<point name="input.g.inpadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD stock
            #add-point:BEFORE FIELD stock
            {<point name="input.b.stock" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stock
            
            #add-point:AFTER FIELD stock
            {<point name="input.a.stock" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE stock
            #add-point:ON CHANGE stock
            {<point name="input.g.stock" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD blank1
            #add-point:BEFORE FIELD blank1
            {<point name="input.b.blank1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD blank1
            
            #add-point:AFTER FIELD blank1
            {<point name="input.a.blank1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE blank1
            #add-point:ON CHANGE blank1
            {<point name="input.g.blank1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD number1
            #add-point:BEFORE FIELD number1
            {<point name="input.b.number1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD number1
            
            #add-point:AFTER FIELD number1
            {<point name="input.a.number1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE number1
            #add-point:ON CHANGE number1
            {<point name="input.g.number1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD work
            #add-point:BEFORE FIELD work
            {<point name="input.b.work" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD work
            
            #add-point:AFTER FIELD work
            {<point name="input.a.work" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE work
            #add-point:ON CHANGE work
            {<point name="input.g.work" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD blank2
            #add-point:BEFORE FIELD blank2
            {<point name="input.b.blank2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD blank2
            
            #add-point:AFTER FIELD blank2
            {<point name="input.a.blank2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE blank2
            #add-point:ON CHANGE blank2
            {<point name="input.g.blank2" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD number2
            #add-point:BEFORE FIELD number2
            {<point name="input.b.number2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD number2
            
            #add-point:AFTER FIELD number2
            {<point name="input.a.number2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE number2
            #add-point:ON CHANGE number2
            {<point name="input.g.number2" />}
            #END add-point
 
 
                     #Ctrlp:input.c.inpadocno
         ON ACTION controlp INFIELD inpadocno
            #add-point:ON ACTION controlp INFIELD inpadocno
            {<point name="input.c.inpadocno" />}
            #END add-point
 
         #Ctrlp:input.c.stock
         ON ACTION controlp INFIELD stock
            #add-point:ON ACTION controlp INFIELD stock
            {<point name="input.c.stock" />}
            #END add-point
 
         #Ctrlp:input.c.blank1
         ON ACTION controlp INFIELD blank1
            #add-point:ON ACTION controlp INFIELD blank1
            {<point name="input.c.blank1" />}
            #END add-point
 
         #Ctrlp:input.c.number1
         ON ACTION controlp INFIELD number1
            #add-point:ON ACTION controlp INFIELD number1
            {<point name="input.c.number1" />}
            #END add-point
 
         #Ctrlp:input.c.work
         ON ACTION controlp INFIELD work
            #add-point:ON ACTION controlp INFIELD work
            {<point name="input.c.work" />}
            #END add-point
 
         #Ctrlp:input.c.blank2
         ON ACTION controlp INFIELD blank2
            #add-point:ON ACTION controlp INFIELD blank2
            {<point name="input.c.blank2" />}
            #END add-point
 
         #Ctrlp:input.c.number2
         ON ACTION controlp INFIELD number2
            #add-point:ON ACTION controlp INFIELD number2
            {<point name="input.c.number2" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
               
         END INPUT
 
 
         
         
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         LET g_jobid = cl_schedule_get_jobid(g_prog)
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL ainp860_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = ainp860_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
         INITIALIZE lc_param.*  TO NULL 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
