<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="ainr305" std_prog="ainr305" erpver="1.0" module="AIN" ver="3" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="R" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="construct.a.xxxxdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.xxxx003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xxxx003  #顯示到畫面上
            LET g_master.xxxx003 = g_qryparam.return1
            NEXT FIELD xxxx003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xxxx004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xxxx004  #顯示到畫面上
            LET g_master.xxxx004 = g_qryparam.return1
            NEXT FIELD xxxx004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.xxxxdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:1)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CALL q_inbadocno_inbidocn()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xxxxdocno  #顯示到畫面上
            LET g_master.xxxxdocno = g_qryparam.return1
            NEXT FIELD xxxxdocno                     #返回原欄位
    

]]>
  </point>
  <point name="init.init" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc_part("l_type","4043","1,2,3,4") 
   CALL cl_set_combo_scc_part("inbastus","18003","1,2,3,4,5")
   LET g_master.l_pr = 'N'
   INITIALIZE g_master.inbadocdt TO NULL
   INITIALIZE g_master.inba002 TO NULL
#   LET g_master.l_type = '1'
   LET g_master.l_ck1 = 'Y'
   LET g_master.l_ck2 = 'N'
   LET g_master.l_ck3 = 'N'
   LET g_master.l_ck4 = 'N'
   LET g_master.inbastus = '1']]>
  </point>
  <point name="input.a.inba003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_master.inba003) THEN 
##應用 a19 樣板自動產生(Version:1)
#               #校驗代值
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_master.inba003
#
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist_and_ref_val("v_ooag001") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
#            
#
#            END IF 

]]>
  </point>
  <point name="input.a.inba004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_master.inba004) THEN 
##應用 a19 樣板自動產生(Version:1)
#               #校驗代值
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_master.inba004
#               LET g_chkparam.arg2 = '參數2'
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist_and_ref_val("v_ooeg001") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
#            
#
#            END IF 
#
#]]>
  </point>
  <point name="input.a.l_type" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_master.l_type = '3' OR g_master.l_type = '4' THEN
               CALL cl_set_comp_entry("xxxx002",FALSE)  
            ELSE
               CALL cl_set_comp_entry("xxxx002",TRUE)  
            END IF]]>
  </point>
  <point name="input.a.xxxx003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_master.xxxx003) THEN 
##應用 a19 樣板自動產生(Version:1)
#               #校驗代值
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_master.xxxx003
#
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist_and_ref_val("v_ooag001") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
#            
#
#            END IF 
#
]]>
  </point>
  <point name="input.a.xxxx004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_master.xxxx004) THEN 
##應用 a19 樣板自動產生(Version:1)
#               #校驗代值
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_master.xxxx004
#               LET g_chkparam.arg2 = '參數2'
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist_and_ref_val("v_ooeg001") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
#            
#
#            END IF 
#
#]]>
  </point>
  <point name="input.b.xxxxdocno" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_master.l_ck1 = 'N' AND g_master.l_ck2 = 'N' AND g_master.l_ck3 = 'N' AND g_master.l_ck4 = 'N' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code   = 'ain-00538'
               LET g_errparam.popup  = TRUE
               CALL cl_err()   
               NEXT FIELD l_ck1
            END IF]]>
  </point>
  <point name="input.c.inba003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inba003  #顯示到畫面上
            LET g_master.inba003 = g_qryparam.return1
            NEXT FIELD inba003                     #返回原欄位
    
]]>
  </point>
  <point name="input.c.inba004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inba004  #顯示到畫面上
            LET g_master.inba004 = g_qryparam.return1
            NEXT FIELD inba004                     #返回原欄位
    
]]>
  </point>
  <point name="input.c.inbadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            CALL q_inbadocno_inbidocn()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inbadocno  #顯示到畫面上
            LET g_master.inbadocno = g_qryparam.return1
            NEXT FIELD inbadocno                     #返回原欄位
    ]]>
  </point>
  <point name="input.c.xxxx003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xxxx003  #顯示到畫面上
            LET g_master.xxxx003 = g_qryparam.return1
            NEXT FIELD xxxx003                     #返回原欄位
    
]]>
  </point>
  <point name="input.c.xxxx004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO xxxx004  #顯示到畫面上
            LET g_master.xxxx004 = g_qryparam.return1
            NEXT FIELD xxxx004                     #返回原欄位
    ]]>
  </point>
  <point name="input.c.xxxxdocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.xxxxdocno" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '0'
            LET g_qryparam.arg2 = '0'
            LET g_qryparam.arg3 = '0'
            LET g_qryparam.arg4 = '0'
            IF g_master.l_ck1 = 'Y' THEN
               LET g_qryparam.arg3 = '1'
            END IF
            IF g_master.l_ck2 = 'Y' THEN
               LET g_qryparam.arg4 = '2'
            END IF
            IF g_master.l_ck3 = 'Y' THEN
               LET g_qryparam.arg1 = '1'
            END IF
            IF g_master.l_ck4 = 'Y' THEN
               LET g_qryparam.arg2 = '2'
            END IF
            CALL q_inbadocno_inbidocn() 

            DISPLAY g_qryparam.return1 TO xxxxdocno  #顯示到畫面上
            LET g_master.xxxxdocno = g_qryparam.return1
            NEXT FIELD xxxxdocno                     #返回原欄位]]>
  </point>
  <point name="input.m.after_input" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_master.l_ck1 = 'N' AND g_master.l_ck2 = 'N' AND g_master.l_ck3 = 'N' AND g_master.l_ck4 = 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code   = 'ain-00538'
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()   
                  NEXT FIELD l_ck1
               END IF]]>
  </point>
  <point name="process.define" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_tmp       STRING
   DEFINE l_where1 STRING 
   DEFINE l_where2 STRING 
   DEFINE l_where3 STRING 
   DEFINE l_where4 STRING 
   DEFINE l_type      LIKE type_t.num5
   DEFINE l_type2     LIKE type_t.num5
   DEFINE l_count   LIKE type_t.num5]]>
  </point>
  <point name="process.pre_process" order="" ver="3" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_master.wc = " 1=1 "
   LET l_count = 0
   LET l_tmp = g_master.inbadocdt
   LET l_type = NULL
   LET l_type2 = NULL
   IF (l_tmp.getIndexOf(':',1)!=0) THEN
      LET l_type = 1  #日期查询中有‘：’               
   END IF
   IF (l_tmp.getIndexOf('>',1)!=0) THEN
      LET l_type = 2  #日期查询中有‘>’               
   END IF
   IF (l_tmp.getIndexOf('>=',1)!=0) THEN
      LET l_type = 3  #日期查询中有‘>=’               
   END IF
   IF (l_tmp.getIndexOf('<',1)!=0) THEN
      LET l_type = 4  #日期查询中有‘<’               
   END IF
   IF (l_tmp.getIndexOf('<=',1)!=0) THEN
      LET l_type = 5  #日期查询中有‘<=’               
   END IF
   
   LET l_tmp = g_master.inba002#扣帐日期
   IF (l_tmp.getIndexOf(':',1)!=0) THEN
      LET l_type2 = 1  #日期查询中有‘：’               
   END IF
   IF (l_tmp.getIndexOf('>',1)!=0) THEN
      LET l_type2 = 2  #日期查询中有‘>’               
   END IF
   IF (l_tmp.getIndexOf('>=',1)!=0) THEN
      LET l_type2 = 3  #日期查询中有‘>=’               
   END IF
   IF (l_tmp.getIndexOf('<',1)!=0) THEN
      LET l_type2 = 4  #日期查询中有‘<’               
   END IF
   IF (l_tmp.getIndexOf('<=',1)!=0) THEN
      LET l_type2 = 5  #日期查询中有‘<=’               
   END IF
   INITIALIZE l_where1 TO NULL
   IF g_master.l_ck1 = 'Y' THEN
      LET l_count = l_count+1
      LET l_where1 = " inba001 = '1' AND inbasite = '",g_site CLIPPED,"' AND inbaent = '",g_enterprise CLIPPED,"' "
      IF NOT cl_null(g_master.xxxxdocno) THEN
         LET l_tmp = g_master.xxxxdocno
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where1 = l_where1 CLIPPED," AND inbadocno IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where1 = l_where1 CLIPPED," AND inbadocno IS NOT NULL "
            ELSE
               LET l_where1 = l_where1 CLIPPED," AND inbadocno = '",l_tmp CLIPPED,"' "
            END IF
         END IF
      END IF
      IF NOT cl_null(g_master.inbadocdt) THEN
          
         LET l_tmp = g_master.inbadocdt
         CASE l_type
            WHEN 1 
               CALL cl_replace_str(l_tmp,":","','YY-MM-DD') AND TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inbadocdt BETWEEN TO_DATE('",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 2      #>
               CALL cl_replace_str(l_tmp,">","> TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 3      #>=
               CALL cl_replace_str(l_tmp,">=",">= TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 4      #<
               CALL cl_replace_str(l_tmp,"<","< TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 5      #<=
               CALL cl_replace_str(l_tmp,"<=","<= TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
         END CASE
         IF l_tmp = '*' THEN
            LET l_where1 = l_where1 CLIPPED," AND inbadocdt IS NOT NULL "
         ELSE
            IF cl_null(l_type) THEN 
               LET l_where1 = l_where1 CLIPPED," AND inbadocdt = '",g_master.inbadocdt CLIPPED,"' "
            END IF
         END IF
            
      END IF
      IF NOT cl_null(g_master.xxxx003) THEN
         LET l_tmp = g_master.xxxx003
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where1 = l_where1 CLIPPED," AND inba003 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where1 = l_where1 CLIPPED," AND inba003 IS NOT NULL "
            ELSE
               LET l_where1 = l_where1 CLIPPED," AND inba003 = '",l_tmp CLIPPED,"' "
            END IF
            
         END IF
      END IF
      IF NOT cl_null(g_master.xxxx004) THEN
         LET l_tmp = g_master.xxxx004
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where1 = l_where1 CLIPPED," AND inba004 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where1 = l_where1 CLIPPED," AND inba004 IS NOT NULL "
            ELSE
               LET l_where1 = l_where1 CLIPPED," AND inba004 = '",l_tmp CLIPPED,"' "
            END IF
               
         END IF
      END IF
      IF NOT cl_null(g_master.inba002) THEN
           
         LET l_tmp = g_master.inba002
          
         CASE l_type2
            WHEN 1 
               CALL cl_replace_str(l_tmp,":","','YY-MM-DD') AND TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inba002 BETWEEN TO_DATE('",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 2      #>
               CALL cl_replace_str(l_tmp,">","> TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 3      #>=
               CALL cl_replace_str(l_tmp,">=",">= TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 4      #<
               CALL cl_replace_str(l_tmp,"<","< TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 5      #<=
               CALL cl_replace_str(l_tmp,"<=","<= TO_DATE('") RETURNING l_tmp
               LET l_where1 = l_where1 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
         END CASE
         IF l_tmp = '*' THEN
            LET l_where1 = l_where1 CLIPPED," AND inba002 IS NOT NULL "
         ELSE
            IF cl_null(l_type2) THEN 
               LET l_where1 = l_where1 CLIPPED," AND inba002 = '",g_master.inba002 CLIPPED,"' "
            END IF
         END IF
            
      END IF
      CASE g_master.inbastus
         WHEN '1'
         WHEN '2'
            LET l_where1 = l_where1 CLIPPED," AND inbastus = 'N' "
         WHEN '3'
            LET l_where1 = l_where1 CLIPPED," AND inbastus = 'Y' "
         WHEN '4'
            LET l_where1 = l_where1 CLIPPED," AND inbastus = 'S' "
         WHEN '5'
            LET l_where1 = l_where1 CLIPPED," AND inbastus = 'X' "
      END CASE
      LET g_master.wc = g_master.wc CLIPPED, " AND ((",l_where1 CLIPPED," )"
      
   END IF
      
   INITIALIZE l_where2 TO NULL
   IF g_master.l_ck2 = 'Y' THEN
      LET l_count = l_count + 1
      LET l_where2 = " inba001 = '2' AND inbasite = '",g_site CLIPPED,"' AND inbaent = '",g_enterprise CLIPPED,"' "
      IF NOT cl_null(g_master.xxxxdocno) THEN
         LET l_tmp = g_master.xxxxdocno
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where2 = l_where2 CLIPPED," AND inbadocno IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where2 = l_where2 CLIPPED," AND inbadocno IS NOT NULL "
            ELSE
               LET l_where2 = l_where2 CLIPPED," AND inbadocno = '",l_tmp CLIPPED,"' "
            END IF
         END IF
      END IF
      IF NOT cl_null(g_master.inbadocdt) THEN
          
         LET l_tmp = g_master.inbadocdt
         CASE l_type
            WHEN 1 
               CALL cl_replace_str(l_tmp,":","','YY-MM-DD') AND TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inbadocdt BETWEEN TO_DATE('",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 2      #>
               CALL cl_replace_str(l_tmp,">","> TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 3      #>=
               CALL cl_replace_str(l_tmp,">=",">= TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 4      #<
               CALL cl_replace_str(l_tmp,"<","< TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 5      #<=
               CALL cl_replace_str(l_tmp,"<=","<= TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inbadocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
         END CASE
         IF l_tmp = '*' THEN
            LET l_where2 = l_where2 CLIPPED," AND inbadocdt IS NOT NULL "
         ELSE
            IF cl_null(l_type) THEN 
               LET l_where2 = l_where2 CLIPPED," AND inbadocdt = '",g_master.inbadocdt CLIPPED,"' "
            END IF
         END IF
            
      END IF
      IF NOT cl_null(g_master.xxxx003) THEN
         LET l_tmp = g_master.xxxx003
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where2 = l_where2 CLIPPED," AND inba003 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where2 = l_where2 CLIPPED," AND inba003 IS NOT NULL "
            ELSE
               LET l_where2 = l_where2 CLIPPED," AND inba003 = '",l_tmp CLIPPED,"' "
            END IF
            
         END IF
      END IF
      IF NOT cl_null(g_master.xxxx004) THEN
         LET l_tmp = g_master.xxxx004
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where2 = l_where2 CLIPPED," AND inba004 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where2 = l_where2 CLIPPED," AND inba004 IS NOT NULL "
            ELSE
               LET l_where2 = l_where2 CLIPPED," AND inba004 = '",l_tmp CLIPPED,"' "
            END IF
               
         END IF
      END IF
      IF NOT cl_null(g_master.inba002) THEN
           
         LET l_tmp = g_master.inba002
          
         CASE l_type2
            WHEN 1 
               CALL cl_replace_str(l_tmp,":","','YY-MM-DD') AND TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inba002 BETWEEN TO_DATE('",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 2      #>
               CALL cl_replace_str(l_tmp,">","> TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 3      #>=
               CALL cl_replace_str(l_tmp,">=",">= TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 4      #<
               CALL cl_replace_str(l_tmp,"<","< TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 5      #<=
               CALL cl_replace_str(l_tmp,"<=","<= TO_DATE('") RETURNING l_tmp
               LET l_where2 = l_where2 CLIPPED," AND inba002 ",l_tmp CLIPPED,"','YY-MM-DD') "
         END CASE
         IF l_tmp = '*' THEN
            LET l_where2 = l_where2 CLIPPED," AND inba002 IS NOT NULL "
         ELSE
            IF cl_null(l_type2) THEN 
               LET l_where2 = l_where2 CLIPPED," AND inba002 = '",g_master.inba002 CLIPPED,"' "
            END IF
         END IF
            
      END IF
      CASE g_master.inbastus
         WHEN '1'
         WHEN '2'
            LET l_where2 = l_where2 CLIPPED," AND inbastus = 'N' "
         WHEN '3'
            LET l_where2 = l_where2 CLIPPED," AND inbastus = 'Y' "
         WHEN '4'
            LET l_where2 = l_where2 CLIPPED," AND inbastus = 'S' "
         WHEN '5'
            LET l_where2 = l_where2 CLIPPED," AND inbastus = 'X' "
      END CASE
      IF cl_null(l_where1) THEN
         LET g_master.wc = g_master.wc CLIPPED, " AND ((",l_where2 CLIPPED," )"
      ELSE
         LET g_master.wc = g_master.wc CLIPPED, " OR (",l_where2 CLIPPED," )"
      END IF
   END IF
   IF (g_master.l_ck1='N' OR cl_null(g_master.l_ck1)) AND (g_master.l_ck2='N' OR cl_null(g_master.l_ck2)) THEN
      LET l_where1 = "1=2"
      LET l_where2 = "1=2"
   END IF
   
   INITIALIZE l_where3 TO NULL
   IF g_master.l_ck3 = 'Y' THEN
      LET l_count = l_count + 1
      LET l_where3 = l_where3 CLIPPED,"  inbi000 = '1' AND inbisite = '",g_site CLIPPED,"' AND inbient = '",g_enterprise CLIPPED,"' "
      IF NOT cl_null(g_master.xxxxdocno) THEN
         LET l_tmp = g_master.xxxxdocno
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where3 = l_where3 CLIPPED," AND inbidocno IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where3 = l_where3 CLIPPED," AND inbidocno IS NOT NULL "
            ELSE
               LET l_where3 = l_where3 CLIPPED," AND inbidocno = '",l_tmp CLIPPED,"' "
            END IF
            
         END IF
      END IF
      IF NOT cl_null(g_master.inbadocdt) THEN
         
         LET l_tmp = g_master.inbadocdt
         CASE l_type
            WHEN 1 
               CALL cl_replace_str(l_tmp,":","','YY-MM-DD') AND TO_DATE('") RETURNING l_tmp
               LET l_where3 = l_where3 CLIPPED," AND inbidocdt BETWEEN TO_DATE('",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 2      #>
               CALL cl_replace_str(l_tmp,">","> TO_DATE('") RETURNING l_tmp
               LET l_where3 = l_where3 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 3      #>=
               CALL cl_replace_str(l_tmp,">=",">= TO_DATE('") RETURNING l_tmp
               LET l_where3 = l_where3 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 4      #<
               CALL cl_replace_str(l_tmp,"<","< TO_DATE('") RETURNING l_tmp
               LET l_where3 = l_where3 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 5      #<=
               CALL cl_replace_str(l_tmp,"<=","<= TO_DATE('") RETURNING l_tmp
               LET l_where3 = l_where3 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
         END CASE
         IF l_tmp = '*' THEN
            LET l_where3 = l_where3 CLIPPED," AND inbidocdt IS NOT NULL "
         ELSE
            IF cl_null(l_type) THEN 
               LET l_where3 = l_where3 CLIPPED," AND inbidocdt = '",g_master.inbadocdt CLIPPED,"' "
            END IF
         END IF
         
      END IF
      IF NOT cl_null(g_master.xxxx003) THEN
         LET l_tmp = g_master.xxxx003
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where3 = l_where3 CLIPPED," AND inbi001 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where3 = l_where3 CLIPPED," AND inbi001 IS NOT NULL "
            ELSE
               LET l_where3 = l_where3 CLIPPED," AND inbi001 = '",l_tmp CLIPPED,"' "
            END IF
            
         END IF
      END IF
      IF NOT cl_null(g_master.xxxx004) THEN
         LET l_tmp = g_master.xxxx004
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where3 = l_where3 CLIPPED," AND inbi002 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where3 = l_where3 CLIPPED," AND inbi002 IS NOT NULL "
            ELSE
               LET l_where3 = l_where3 CLIPPED," AND inbi002 = '",l_tmp CLIPPED,"' "
            END IF
         END IF
      END IF
         
      CASE g_master.inbastus
         WHEN '1'
         WHEN '2'
            LET l_where3 = l_where3 CLIPPED," AND inbistus = 'N' "
         WHEN '3'
            LET l_where3 = l_where3 CLIPPED," AND inbistus = 'O' "
         WHEN '4'
            LET l_where3 = l_where3 CLIPPED," AND inbistus = 'S' "
         WHEN '5'
            LET l_where3 = l_where3 CLIPPED," AND inbistus = 'X' "
      END CASE 
      IF cl_null(l_where1) AND cl_null(l_where2) THEN
         LET g_master.wc = g_master.wc CLIPPED, " AND ((",l_where3 CLIPPED," )"
      ELSE
         LET g_master.wc = g_master.wc CLIPPED, " OR (",l_where3 CLIPPED," )"
      END IF
   END IF      
   INITIALIZE l_where4 TO NULL
   IF g_master.l_ck4 = 'Y' THEN
      LET l_count = l_count + 1 
      LET l_where4 = l_where4 CLIPPED,"  inbi000 = '1' AND inbisite = '",g_site CLIPPED,"' AND inbient = '",g_enterprise CLIPPED,"' "
      IF NOT cl_null(g_master.xxxxdocno) THEN
         LET l_tmp = g_master.xxxxdocno
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where4 = l_where4 CLIPPED," AND inbidocno IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where4 = l_where4 CLIPPED," AND inbidocno IS NOT NULL "
            ELSE
               LET l_where4 = l_where4 CLIPPED," AND inbidocno = '",l_tmp CLIPPED,"' "
            END IF
            
         END IF
      END IF
      IF NOT cl_null(g_master.inbadocdt) THEN
         
         LET l_tmp = g_master.inbadocdt
         CASE l_type
            WHEN 1 
               CALL cl_replace_str(l_tmp,":","','YY-MM-DD') AND TO_DATE('") RETURNING l_tmp
               LET l_where4 = l_where4 CLIPPED," AND inbidocdt BETWEEN TO_DATE('",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 2      #>
               CALL cl_replace_str(l_tmp,">","> TO_DATE('") RETURNING l_tmp
               LET l_where4 = l_where4 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 3      #>=
               CALL cl_replace_str(l_tmp,">=",">= TO_DATE('") RETURNING l_tmp
               LET l_where4 = l_where4 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 4      #<
               CALL cl_replace_str(l_tmp,"<","< TO_DATE('") RETURNING l_tmp
               LET l_where4 = l_where4 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
            WHEN 5      #<=
               CALL cl_replace_str(l_tmp,"<=","<= TO_DATE('") RETURNING l_tmp
               LET l_where4 = l_where4 CLIPPED," AND inbidocdt ",l_tmp CLIPPED,"','YY-MM-DD') "
         END CASE
         IF l_tmp = '*' THEN
            LET l_where4 = l_where4 CLIPPED," AND inbidocdt IS NOT NULL "
         ELSE
            IF cl_null(l_type) THEN 
               LET l_where4 = l_where4 CLIPPED," AND inbidocdt = '",g_master.inbadocdt CLIPPED,"' "
            END IF
         END IF
         
      END IF
      IF NOT cl_null(g_master.xxxx003) THEN
         LET l_tmp = g_master.xxxx003
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where4 = l_where4 CLIPPED," AND inbi001 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where4 = l_where4 CLIPPED," AND inbi001 IS NOT NULL "
            ELSE
               LET l_where4 = l_where4 CLIPPED," AND inbi001 = '",l_tmp CLIPPED,"' "
            END IF
            
         END IF
      END IF
      IF NOT cl_null(g_master.xxxx004) THEN
         LET l_tmp = g_master.xxxx004
         IF (l_tmp.getIndexOf('|',1)!=0) THEN
            CALL cl_replace_str(l_tmp,"|","','") RETURNING l_tmp
            LET l_where4 = l_where4 CLIPPED," AND inbi002 IN ('",l_tmp CLIPPED,"') "
         ELSE
            IF l_tmp = '*' THEN
               LET l_where4 = l_where4 CLIPPED," AND inbi002 IS NOT NULL "
            ELSE
               LET l_where4 = l_where4 CLIPPED," AND inbi002 = '",l_tmp CLIPPED,"' "
            END IF
         END IF
      END IF
         
      CASE g_master.inbastus
         WHEN '1'
         WHEN '2'
            LET l_where4 = l_where4 CLIPPED," AND inbistus = 'N' "
         WHEN '3'
            LET l_where4 = l_where4 CLIPPED," AND inbistus = 'O' "
         WHEN '4'
            LET l_where4 = l_where4 CLIPPED," AND inbistus = 'S' "
         WHEN '5'
            LET l_where4 = l_where4 CLIPPED," AND inbistus = 'X' "
      END CASE 
      IF cl_null(l_where1) AND cl_null(l_where2) AND cl_null(l_where3) THEN
         LET g_master.wc = g_master.wc CLIPPED, " AND ((",l_where4 CLIPPED," )"
      ELSE
         LET g_master.wc = g_master.wc CLIPPED, " OR (",l_where4 CLIPPED," )"
      END IF
   END IF 
   IF (g_master.l_ck3='N' OR cl_null(g_master.l_ck3)) AND (g_master.l_ck4='N' OR cl_null(g_master.l_ck4)) THEN
      LET l_where3 = "1=2"
      LET l_where4 = "1=2"
   END IF
   LET g_master.wc = g_master.wc CLIPPED, " )"   
   
   CALL ainr305_x01(g_master.wc,l_where1,l_where2,l_where3,l_where4,g_master.inbastus,g_master.l_pr) #4 args
]]>
  </point>
  <point name="ui_dialog.define" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <section id="ainr305.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000046
#+ 
#+ Filename...: ainr305
#+ Description: 庫存雜項異動資料列印
#+ Creator....: 05423(2014-11-27 11:07:48)
#+ Modifier...: 05423(2015-05-05 13:03:32) -SD/PR-
]]>
  </section>
  <section id="ainr305.get_buffer" ver="14" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION ainr305_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.l_ck1 = p_dialog.getFieldBuffer('l_ck1')
   LET g_master.l_ck2 = p_dialog.getFieldBuffer('l_ck2')
   LET g_master.l_ck3 = p_dialog.getFieldBuffer('l_ck3')
   LET g_master.l_ck4 = p_dialog.getFieldBuffer('l_ck4')
   LET g_master.xxxxdocno = p_dialog.getFieldBuffer('xxxxdocno')
   LET g_master.inbadocdt = p_dialog.getFieldBuffer('inbadocdt')
   LET g_master.xxxx004 = p_dialog.getFieldBuffer('xxxx004')
   LET g_master.xxxx003 = p_dialog.getFieldBuffer('xxxx003')
   LET g_master.inba002 = p_dialog.getFieldBuffer('inba002')
   LET g_master.inbastus = p_dialog.getFieldBuffer('inbastus')
   LET g_master.l_pr = p_dialog.getFieldBuffer('l_pr')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="ainr305.global" ver="19" status="" src="s" readonly="">
    <![CDATA[#應用 r01 樣板自動產生(Version:12)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE gi_hiden_rep_temp    LIKE type_t.num5             
   DEFINE g_chk_jobid          LIKE type_t.num5               
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   {<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       l_ck1 LIKE type_t.chr500, 
   l_ck2 LIKE type_t.chr500, 
   l_ck3 LIKE type_t.chr500, 
   l_ck4 LIKE type_t.chr500, 
   xxxxdocno LIKE type_t.chr500, 
   inbadocdt LIKE type_t.chr500, 
   xxxx004 LIKE type_t.chr500, 
   xxxx003 LIKE type_t.chr500, 
   inba002 LIKE type_t.chr500, 
   inbastus LIKE inba_t.inbastus, 
   l_pr LIKE type_t.chr500,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="ainr305.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 初始化作業
PRIVATE FUNCTION ainr305_init()
   #add-point:init段define 
   {<point name="init.define" edit="s"/>}
   #end add-point
   #add-point:init段define (客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="ainr305.main" ver="6" status="" src="s" readonly="">
    <![CDATA[MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define 
   {<point name="main.define" edit="s"/>}
   #end add-point 
   #add-point:main段define (客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point 
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point   
 
   #背景(Y) 或半背景(T) 時不做主畫面開窗
   IF g_bgjob = "Y" OR g_bgjob = "T" THEN
      #排程參數由01開始，若不是1開始，表示有保留參數
      LET ls_js = g_argv[01]
      CALL util.JSON.parse(ls_js,g_master)      #r類背景參數解析入口
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL ainr305_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ainr305 WITH FORM cl_ap_formpath("ain",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL ainr305_init()
 
      #進入選單 Menu (="N")
      CALL ainr305_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_ainr305
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
]]>
  </section>
  <section id="ainr305.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="ainr305.process" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料處理   (r類使用g_master為主處理/p類使用l_param為主)
PRIVATE FUNCTION ainr305_process(ls_js)
   DEFINE ls_js         STRING
   DEFINE lc_param      type_parameter
   DEFINE li_stus       LIKE type_t.num5
   DEFINE li_count      LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql        STRING             #主SQL
   DEFINE li_r01_status LIKE type_t.num5
   DEFINE l_token       base.StringTokenizer      #cmdrun使用
   DEFINE ls_next       STRING                    #cmdrun使用
   DEFINE l_cnt         LIKE type_t.num5          #cmdrun使用   
   DEFINE l_arg         DYNAMIC ARRAY OF STRING   ##cmdrun使用的陣列 
   #add-point:process段define 
   {<point name="process.define" edit="s"/>}
   #end add-point
   #add-point:process段define (客製用)
   {<point name="process.define_customerization" edit="c"/>}
   #end add-point
 
   INITIALIZE lc_param TO NULL
   CALL util.JSON.parse(ls_js,lc_param)  #r類作業被t類呼叫時使用, p類主要解開參數處
 
  #IF lc_param.wc IS NOT NULL THEN
  #   LET g_bgjob = "T"       #特殊情況,此為t類作業鬆耦合串入報表主程式使用
  #END IF
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數   #r類不用計算進度條
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE ainr305_process_cs CURSOR FROM ls_sql
#  FOREACH ainr305_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" OR g_bgjob = "T" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
      CALL cl_schedule_exec_call(li_r01_status)
   END IF
END FUNCTION
]]>
  </section>
  <section id="ainr305.transfer_argv" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION ainr305_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog       STRING,
             actionid   STRING,
             background LIKE type_t.chr1,
             param      DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
   #add-point:transfer_agrv段define 
   {<point name="transfer_agrv.define" edit="s"/>}
   #end add-point
   #add-point:transfer_agrv段define (客製用)
   {<point name="transfer_agrv.define_customerization" edit="c"/>}
   #end add-point
 
   LET la_cmdrun.prog = g_prog
   LET la_cmdrun.background = "Y"
   LET la_cmdrun.param[1] = ls_js
 
   #add-point:transfer.argv段程式內容
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION
]]>
  </section>
  <section id="ainr305.ui_dialog" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION ainr305_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num10
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define 
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define (客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #應用 a57 樣板自動產生(Version:2)
         INPUT BY NAME g_master.l_ck1,g_master.l_ck2,g_master.l_ck3,g_master.l_ck4,g_master.xxxxdocno, 
             g_master.inbadocdt,g_master.xxxx004,g_master.xxxx003,g_master.inba002,g_master.inbastus, 
             g_master.l_pr 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_ck1
            #add-point:BEFORE FIELD l_ck1
            {<point name="input.b.l_ck1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_ck1
            
            #add-point:AFTER FIELD l_ck1
            {<point name="input.a.l_ck1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_ck1
            #add-point:ON CHANGE l_ck1
            {<point name="input.g.l_ck1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_ck2
            #add-point:BEFORE FIELD l_ck2
            {<point name="input.b.l_ck2" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_ck2
            
            #add-point:AFTER FIELD l_ck2
            {<point name="input.a.l_ck2" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_ck2
            #add-point:ON CHANGE l_ck2
            {<point name="input.g.l_ck2" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_ck3
            #add-point:BEFORE FIELD l_ck3
            {<point name="input.b.l_ck3" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_ck3
            
            #add-point:AFTER FIELD l_ck3
            {<point name="input.a.l_ck3" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_ck3
            #add-point:ON CHANGE l_ck3
            {<point name="input.g.l_ck3" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_ck4
            #add-point:BEFORE FIELD l_ck4
            {<point name="input.b.l_ck4" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_ck4
            
            #add-point:AFTER FIELD l_ck4
            {<point name="input.a.l_ck4" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_ck4
            #add-point:ON CHANGE l_ck4
            {<point name="input.g.l_ck4" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xxxxdocno
            #add-point:BEFORE FIELD xxxxdocno
            {<point name="input.b.xxxxdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xxxxdocno
            
            #add-point:AFTER FIELD xxxxdocno
            {<point name="input.a.xxxxdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xxxxdocno
            #add-point:ON CHANGE xxxxdocno
            {<point name="input.g.xxxxdocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbadocdt
            #add-point:BEFORE FIELD inbadocdt
            {<point name="input.b.inbadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbadocdt
            
            #add-point:AFTER FIELD inbadocdt
            {<point name="input.a.inbadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbadocdt
            #add-point:ON CHANGE inbadocdt
            {<point name="input.g.inbadocdt" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xxxx004
            
            #add-point:AFTER FIELD xxxx004
            {<point name="input.a.xxxx004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xxxx004
            #add-point:BEFORE FIELD xxxx004
            {<point name="input.b.xxxx004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xxxx004
            #add-point:ON CHANGE xxxx004
            {<point name="input.g.xxxx004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD xxxx003
            
            #add-point:AFTER FIELD xxxx003
            {<point name="input.a.xxxx003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD xxxx003
            #add-point:BEFORE FIELD xxxx003
            {<point name="input.b.xxxx003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE xxxx003
            #add-point:ON CHANGE xxxx003
            {<point name="input.g.xxxx003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inba002
            #add-point:BEFORE FIELD inba002
            {<point name="input.b.inba002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inba002
            
            #add-point:AFTER FIELD inba002
            {<point name="input.a.inba002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inba002
            #add-point:ON CHANGE inba002
            {<point name="input.g.inba002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inbastus
            #add-point:BEFORE FIELD inbastus
            {<point name="input.b.inbastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inbastus
            
            #add-point:AFTER FIELD inbastus
            {<point name="input.a.inbastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inbastus
            #add-point:ON CHANGE inbastus
            {<point name="input.g.inbastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_pr
            #add-point:BEFORE FIELD l_pr
            {<point name="input.b.l_pr" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_pr
            
            #add-point:AFTER FIELD l_pr
            {<point name="input.a.l_pr" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE l_pr
            #add-point:ON CHANGE l_pr
            {<point name="input.g.l_pr" />}
            #END add-point 
 
 
                     #Ctrlp:input.c.l_ck1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_ck1
            #add-point:ON ACTION controlp INFIELD l_ck1
            {<point name="input.c.l_ck1" />}
            #END add-point
 
         #Ctrlp:input.c.l_ck2
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_ck2
            #add-point:ON ACTION controlp INFIELD l_ck2
            {<point name="input.c.l_ck2" />}
            #END add-point
 
         #Ctrlp:input.c.l_ck3
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_ck3
            #add-point:ON ACTION controlp INFIELD l_ck3
            {<point name="input.c.l_ck3" />}
            #END add-point
 
         #Ctrlp:input.c.l_ck4
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_ck4
            #add-point:ON ACTION controlp INFIELD l_ck4
            {<point name="input.c.l_ck4" />}
            #END add-point
 
         #Ctrlp:input.c.xxxxdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xxxxdocno
            #add-point:ON ACTION controlp INFIELD xxxxdocno
            {<point name="input.c.xxxxdocno" />}
            #END add-point
 
         #Ctrlp:input.c.inbadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbadocdt
            #add-point:ON ACTION controlp INFIELD inbadocdt
            {<point name="input.c.inbadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.xxxx004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xxxx004
            #add-point:ON ACTION controlp INFIELD xxxx004
            {<point name="input.c.xxxx004" />}
            #END add-point
 
         #Ctrlp:input.c.xxxx003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD xxxx003
            #add-point:ON ACTION controlp INFIELD xxxx003
            {<point name="input.c.xxxx003" />}
            #END add-point
 
         #Ctrlp:input.c.inba002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inba002
            #add-point:ON ACTION controlp INFIELD inba002
            {<point name="input.c.inba002" />}
            #END add-point
 
         #Ctrlp:input.c.inbastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inbastus
            #add-point:ON ACTION controlp INFIELD inbastus
            {<point name="input.c.inbastus" />}
            #END add-point
 
         #Ctrlp:input.c.l_pr
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_pr
            #add-point:ON ACTION controlp INFIELD l_pr
            {<point name="input.c.l_pr" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
         END INPUT
 
 
         
         
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL cl_qbe_display_condition(FGL_GETENV("QUERYPLANID"), g_user)
            CALL ainr305_get_buffer(l_dialog)
 
         ON ACTION qbe_select
            LET ls_wc = ""
            #需要用ITM類程式查詢方案在CONSTRUCT的功能，將值set到畫面上
            CALL cl_qbe_list("c") RETURNING ls_wc
            CALL ainr305_get_buffer(l_dialog)
            IF NOT cl_null(ls_wc) THEN
               LET g_master.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION output
            LET g_action_choice = "output"
            ACCEPT DIALOG
 
         ON ACTION quickprint
            LET g_action_choice = "quickprint"
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE g_master.* TO NULL   #畫面變數清空
            INITIALIZE lc_param.* TO NULL   #傳遞參數變數清空
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         ON ACTION rpt_replang
            CALL cl_gr_set_dlang()
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM   
         INITIALIZE g_master.* TO NULL
         LET g_wc  = ' 1=2'
         LET g_action_choice = ""
         CALL ainr305_init()
         CONTINUE WHILE
      END IF
 
      #檢查批次設定是否有錯(或未設定完成)
      IF NOT cl_schedule_exec_check() THEN
         CONTINUE WHILE
      END IF
 
     #LET lc_param.wc = g_master.wc    #r類主程式不在意lc_param,不使用轉換
      #add-point:ui_dialog段exit dialog 
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(g_master)  #r類使用g_master/p類使用lc_param
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
 
         #依照指定模式執行報表列印
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL ainr305_process(ls_js)
 
            WHEN g_schedule.gzpa003 = "1"
                 LET ls_js = ainr305_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
 
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
 
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
 
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF           
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         LET gi_hiden_rep_temp = FALSE   #報表樣板設定
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
