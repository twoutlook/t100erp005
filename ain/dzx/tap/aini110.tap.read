<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aini110" std_prog="aini110" erpver="1.0" module="AIN" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="Y" status=""/>
  </other>
  <point name="main.define_sql" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_sql = " SELECT UNIQUE inas009,inas010",
               " FROM inas_t",
               " WHERE inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND inas009 = ? AND inas010 = ? "
   #add-point:SQL_define
   
   #end add-point
   PREPARE aini110_master_referesh FROM g_sql

   LET g_forupd_sql = "SELECT inas009,'','',inas010,'','','','' FROM inas_t WHERE inasent= ? AND inassite="]]>
  </point>
  <point name="function.aini110_init" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_init()
   #add-point:init段define

   #end add-point

   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1


   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件

   #add-point:畫面資料初始化

   #end add-point

   

END FUNCTION]]>
  </point>
  <point name="function.aini110_modify" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_modify()
  #add-point:modify段define
   
   #end add-point    
   

   
   EXECUTE aini110_master_referesh USING g_inas_m.inas009,g_inas_m.inas010 INTO g_inas_m.inas009,g_inas_m.inas010
 
   ERROR ""
  
 
   CALL s_transaction_begin()
   
   
   CALL s_transaction_end('Y','0')
 
   CALL aini110_show()
   WHILE TRUE
 
 
      #add-point:modify段修改前
      
      #end add-point
      
      CALL aini110_input("u")     #欄位更改
      
      #add-point:modify段修改後
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inas_m.* = g_inas_m_t.*
         CALL aini110_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
 
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
 
   CALL aini110_b_fill()
END FUNCTION]]>
  </point>
  <point name="function.aini110_ui_dialog" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define

   #end add-point

   CALL cl_set_act_visible("accept,cancel", FALSE)

   LET lb_first = TRUE


   #add-point:ui_dialog段before dialog
   CALL aini110_construct()
   #end add-point

   WHILE TRUE

      CALL aini110_browser_fill("")


      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
#      IF g_state = "Y" THEN
#         FOR li_idx = 1 TO g_browser.getLength()
#            IF g_browser[li_idx].b_inas009 = g_inas009_t
#               AND g_browser[li_idx].b_inas010 = g_inas010_t
#               THEN
#               LET g_current_row = li_idx
#               EXIT FOR
#            END IF
#         END FOR
#         LET g_state = ""
#      END IF

      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)


         DISPLAY ARRAY g_inas_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL aini110_ui_detailshow()

               #add-point:page1自定義行為

               #end add-point

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")

               #控制stus哪個按鈕可以按




            #add-point:page1自定義行為

            #end add-point

         END DISPLAY

         DISPLAY ARRAY g_inas3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL aini110_ui_detailshow()

               #add-point:page1自定義行為

               #end add-point

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)



            #add-point:page2自定義行為

            #end add-point

         END DISPLAY


         #add-point:ui_dialog段自定義display array

         #end add-point


         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE

            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF

            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1
            END IF

            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aini110_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aini110_ui_detailshow() #Setting the current row

            #add-point:ui_dialog段before dialog2

            #end add-point




         ON ACTION first
            CALL aini110_fetch('F')
            LET g_current_row = g_current_idx

         ON ACTION previous
            CALL aini110_fetch('P')
            LET g_current_row = g_current_idx

         ON ACTION jump
            CALL aini110_fetch('/')
            LET g_current_row = g_current_idx

         ON ACTION next
            CALL aini110_fetch('N')
            LET g_current_row = g_current_idx

         ON ACTION last
            CALL aini110_fetch('L')
            LET g_current_row = g_current_idx

         ON ACTION close
            LET INT_FLAG=FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG


         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inas001
            END IF

         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden
            END IF

         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aini110_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF

         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aini110_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aini110_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()


         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aini110_query()
               #add-point:ON ACTION query

               #END add-point

            END IF


         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN

               #add-point:ON ACTION output

               #END add-point
               EXIT DIALOG
            END IF


         #+ 此段落由子樣板a43產生
         ON ACTION rest
            LET g_action_choice="rest"
            IF cl_auth_chk_act("rest") THEN

               #add-point:ON ACTION rest

               #END add-point
               EXIT DIALOG
            END IF


         #+ 此段落由子樣板a43產生

         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aini110_modify()
               #add-point:ON ACTION modify_detail

               #END add-point
               EXIT DIALOG
            END IF





         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aini110_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document

               #END add-point
               CALL cl_doc()
            END IF

         ON ACTION agendum
            CALL aini110_set_pk_array()
            #add-point:ON ACTION agendum

            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()

         ON ACTION followup
            CALL aini110_set_pk_array()
            #add-point:ON ACTION followup

            #END add-point
            CALL cl_user_overview_follow('')



         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG

      END DIALOG

      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE

   CALL cl_set_act_visible("accept,cancel", TRUE)

END FUNCTION]]>
  </point>
  <point name="function.aini110_browser_search" order="3" ver="1" cite_std="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define

   #end add-point

   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE
   END IF

   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF

   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY "
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF

   CALL aini110_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE

END FUNCTION]]>
  </point>
  <point name="function.aini110_browser_fill" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define

   #end add-point

   #add-point:browser_fill段動作開始前

   #end add-point

   CALL g_browser.clear()

   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = ""
   ELSE
      LET l_searchcol = g_searchcol
   END IF

   LET l_wc  = g_wc.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF

   
   #單身未輸入搜尋條件
   LET l_sub_sql = " SELECT UNIQUE inas009,inas010 ",

                   " FROM inas_t ",
                   " ",
                   " ",
                   " WHERE inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("inas_t")
   

   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"

   #add-point:browser_fill,count前

   #end add-point

   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre

   #若超過最大顯示筆數
   LET g_error_show = 0

   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示

   #LET g_page_action = ps_page_action          # Keep Action
   IF ps_page_action = "first" OR
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷
   END IF

   CASE ps_page_action
      WHEN "F"
         LET g_pagestart = 1

      WHEN "P"
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF

      WHEN "N"
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF

      WHEN "L"
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE

      OTHERWISE
         LET g_pagestart = 1

   END CASE

   #單身有輸入查詢條件且非null
   
   #單身無輸入資料
   LET l_sub_sql  = "SELECT DISTINCT inas009,inas010 ",
                    " FROM inas_t ",
                    " WHERE inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND ", g_wc, cl_sql_add_filter("inas_t")
   
   

   #add-point:browser_fill,sql_rank前

   #end add-point

   LET l_sql_rank = "SELECT inas009,inas010,DENSE_RANK() OVER(ORDER BY  ",g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "

   #定義翻頁CURSOR
   LET g_sql= " SELECT inas009,inas010 FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK < ", g_pagestart + g_max_browse,
              " ORDER BY ",l_searchcol, " ", g_order

   #add-point:browser_fill,pre前

   #end add-point

   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre

   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_inas009,g_browser[g_cnt].b_inas010
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF



      #add-point:browser_fill段reference

      #end add-point

      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH

   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND g_wc THEN
      INITIALIZE g_inas_m.* TO NULL
      CALL g_inas_d.clear()
      CALL g_inas3_d.clear()

      #add-point:browser_fill段after_clear

      #end add-point
      CLEAR FORM
   END IF

   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0

   CALL aini110_fetch('')
   FREE browse_pre

   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF

END FUNCTION]]>
  </point>
  <point name="function.aini110_ui_headershow" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_ui_headershow()
   #add-point:ui_headershow段define

   #end add-point

   LET  g_inas_m.inas009 = g_browser[g_current_idx].b_inas009
   LET  g_inas_m.inas010 = g_browser[g_current_idx].b_inas010

   EXECUTE aini110_master_referesh USING g_browser[g_current_idx].b_inas009,g_browser[g_current_idx].b_inas010 INTO g_inas_m.inas009,g_inas_m.inas010
   CALL aini110_show()

END FUNCTION]]>
  </point>
  <point name="function.aini110_ui_detailshow" order="6" ver="1" cite_std="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_ui_detailshow()
   #add-point:ui_detailshow段define

   #end add-point

   #add-point:ui_detailshow段before

   #end add-point

   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)

      #add-point:ui_detailshow段more

      #end add-point
   END IF

   #add-point:ui_detailshow段after

   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.aini110_ui_browser_refresh" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define

   #end add-point

   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_inas009 = g_inas_m.inas009
         AND g_browser[l_i].b_inas010 = g_inas_m.inas010

         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR

   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF

   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示

END FUNCTION]]>
  </point>
  <point name="function.aini110_construct" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING
   DEFINE ls_wc       STRING
   #add-point:cs段define

   #end add-point

   #清除畫面上相關資料
   CLEAR FORM
   INITIALIZE g_inas_m.* TO NULL
   CALL g_inas_d.clear()
   CALL g_inas3_d.clear()

   INITIALIZE g_wc TO NULL
   
   LET g_action_choice = ""

   LET g_qryparam.state = 'c'

   #add-point:cs段construct外

   #end add-point

   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭
      CONSTRUCT BY NAME g_wc ON inas009,inas010

         BEFORE CONSTRUCT
            #add-point:cs段more_construct

            #end add-point

        #---------------------------<  Master  >---------------------------
         #----<<inas009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas009
            #add-point:BEFORE FIELD inas009

            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD inas009

            #add-point:AFTER FIELD inas009

            #END add-point


         #Ctrlp:construct.c.inas009
#         ON ACTION controlp INFIELD inas009
            #add-point:ON ACTION controlp INFIELD inas009

            #END add-point

         #----<<imaal003>>----
         #----<<imaal004>>----
         #----<<inas010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas010
            #add-point:BEFORE FIELD inas010

            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD inas010

            #add-point:AFTER FIELD inas010

            #END add-point


         #Ctrlp:construct.c.inas010
#         ON ACTION controlp INFIELD inas010
            #add-point:ON ACTION controlp INFIELD inas010

            #END add-point

         #----<<sum1>>----
         #----<<sum2>>----
         #----<<sum3>>----
         #----<<imaa006>>----


      END CONSTRUCT

     
      #add-point:cs段more_construct

      #end add-point

      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog

         #end add-point

      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc

      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG

   #add-point:cs段after_construct

   #end add-point

   #組合g_wc2
   
   LET g_current_row = 1

   IF INT_FLAG THEN
      RETURN
   END IF

   LET g_wc_filter = ""

END FUNCTION]]>
  </point>
  <point name="function.aini110_query" order="9" ver="1" cite_std="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_query()
   DEFINE ls_wc STRING
   #add-point:query段define

   #end add-point

   #add-point:query開始前

   #end add-point

   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF

   LET ls_wc = g_wc

   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""

   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()
   CALL g_inas_d.clear()
   CALL g_inas3_d.clear()

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count

   CALL aini110_construct()

   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aini110_browser_fill(g_wc)
      CALL aini110_fetch("")
      RETURN
   END IF

   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1

   LET g_error_show = 1
   CALL aini110_browser_fill("F")

   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")

   #備份搜尋條件
   LET ls_wc = g_wc

   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aini110_fetch("F")
   END IF

   LET g_wc_filter = ""

END FUNCTION]]>
  </point>
  <point name="function.aini110_fetch" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define

   #end add-point

   #add-point:fetch段動作開始前

   #end add-point

   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt
      WHEN 'P'
         IF g_current_idx > 1 THEN
            LET g_current_idx = g_current_idx - 1
         END IF
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF
      WHEN '/'
         IF (NOT g_no_ask) THEN
            CALL cl_set_act_visible("accept,cancel", TRUE)
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0

            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT

            CALL cl_set_act_visible("accept,cancel", FALSE)
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE
            END IF

         END IF

         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF

         LET g_no_ask = FALSE
   END CASE

   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF

   CALL aini110_browser_fill(p_flag)

   LET g_detail_cnt = g_header_cnt

   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx
   END IF

   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數

   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )

   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF

   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF

   LET  g_inas_m.inas009 = g_browser[g_current_idx].b_inas009
   LET  g_inas_m.inas010 = g_browser[g_current_idx].b_inas010

   #重讀DB,因TEMP有不被更新特性
   EXECUTE aini110_master_referesh USING g_browser[g_current_idx].b_inas009,g_browser[g_current_idx].b_inas010 INTO g_inas_m.inas009,g_inas_m.inas010
   IF SQLCA.sqlcode THEN
      CALL cl_err("inas_t",SQLCA.sqlcode,1)
      INITIALIZE g_inas_m.* TO NULL
      RETURN
   END IF

   #LET g_data_owner =
   #LET g_data_group =

   #重新顯示
   CALL aini110_show()

   #檢查此單據是否需顯示BPM簽核狀況按鈕
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF

END FUNCTION]]>
  </point>
  <point name="function.aini110_input" order="13" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define

   #end add-point

   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF

   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF

   CALL cl_set_head_visible("","YES")

   LET l_insert = FALSE
   LET g_action_choice = ""

   #add-point:input段define_sql

   #end add-point
   LET g_forupd_sql = "SELECT '',inas006,inas005,'',inas007,inas001,inas002,inas003,inas004,inas012,
       inas011,inas013,inas015,inas016,'',inas017,'','','','','','','','','','','','' FROM inas_t WHERE
       inasent=? AND inassite=? AND inas001=? AND inas002=? AND inas003=? AND inas004=? FOR UPDATE"
   #add-point:input段define_sql

   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aini110_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR

   LET g_qryparam.state = 'i'

   LET lb_reproduce = FALSE

   #add-point:進入修改段前

   #end add-point

   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #Page1 預設值產生於此處
      INPUT ARRAY g_inas_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = FALSE,
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)

         #自訂單身ACTION


         #+ 此段落由子樣板a43產生
         ON ACTION rest
            LET g_action_choice="rest"
            IF cl_auth_chk_act("rest") THEN

               #add-point:ON ACTION rest

               #END add-point
            END IF



         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_inas_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL aini110_b_fill()
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前

            #end add-point

         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx


            CALL s_transaction_begin()

            #判定新增或修改
            

            LET l_cmd = ''

            IF g_rec_b >= l_ac
               AND g_inas_d[l_ac].inas001 IS NOT NULL
               AND g_inas_d[l_ac].inas002 IS NOT NULL
               AND g_inas_d[l_ac].inas003 IS NOT NULL
               AND g_inas_d[l_ac].inas004 IS NOT NULL

            THEN
               LET l_cmd='u'
               LET g_inas_d_t.* = g_inas_d[l_ac].*  #BACKUP
               
               #add-point:set_entry_b後

               #end add-point
              
               OPEN aini110_bcl USING g_enterprise, g_site,

                                                g_inas_d_t.inas001
                                                ,g_inas_d_t.inas002
                                                ,g_inas_d_t.inas003
                                                ,g_inas_d_t.inas004

               IF STATUS THEN
                  CALL cl_err("OPEN aini110_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aini110_bcl INTO g_inas_d[l_ac].seq,g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005,
                      g_inas_d[l_ac].expect,g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002,
                      g_inas_d[l_ac].inas003,g_inas_d[l_ac].inas004,g_inas_d[l_ac].inas012,g_inas_d[l_ac].inas011,
                      g_inas_d[l_ac].inas013,g_inas_d[l_ac].inas015,g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas016_desc,
                      g_inas_d[l_ac].inas017,g_inas_d[l_ac].inas017_desc,g_inas3_d[l_ac].type,g_inas3_d[l_ac].date,
                      g_inas3_d[l_ac].num1,g_inas3_d[l_ac].num2,g_inas3_d[l_ac].unit,g_inas3_d[l_ac].docno,
                      g_inas3_d[l_ac].seq1,g_inas3_d[l_ac].seq2,g_inas3_d[l_ac].seq3,g_inas3_d[l_ac].user,
                      g_inas3_d[l_ac].dept
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_inas_d_t.inas001,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF

                  CALL aini110_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row

         #----<<seq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq
            #add-point:BEFORE FIELD seq

            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD seq

            #add-point:AFTER FIELD seq

            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE seq
            #add-point:ON CHANGE seq

            #END add-point

         #----<<inas006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas006
            #add-point:BEFORE FIELD inas006

            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD inas006

            #add-point:AFTER FIELD inas006

            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE inas006
            #add-point:ON CHANGE inas006

            #END add-point

         #----<<inas005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas005
            #add-point:BEFORE FIELD inas005

            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD inas005

            #add-point:AFTER FIELD inas005

            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE inas005
            #add-point:ON CHANGE inas005

            #END add-point





         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_inas_d[l_ac].* = g_inas_d_t.*
               CLOSE aini110_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_inas_d[l_ac].inas001,-263,1)
               LET g_inas_d[l_ac].* = g_inas_d_t.*
            ELSE
               #寫入修改者/修改日期資訊


               #add-point:單身修改前

               #end add-point

               UPDATE inas_t SET (inas006,inas005,inas007,inas001,inas002,inas003,inas004,inas012,inas011,
                   inas013,inas015,inas016,inas017) = (g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005,
                   g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002,g_inas_d[l_ac].inas003,
                   g_inas_d[l_ac].inas004,g_inas_d[l_ac].inas012,g_inas_d[l_ac].inas011,g_inas_d[l_ac].inas013,
                   g_inas_d[l_ac].inas015,g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas017)
                WHERE inasent = g_enterprise AND inassite = g_site 

                 AND inas001 = g_inas_d_t.inas001 #項次
                 AND inas002 = g_inas_d_t.inas002
                 AND inas003 = g_inas_d_t.inas003
                 AND inas004 = g_inas_d_t.inas004


               #add-point:單身修改中

               #end add-point

               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inas_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("inas_t",SQLCA.sqlcode,1)
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_inas_d[g_detail_idx].inas001
               LET gs_keys_bak[1] = g_inas_d_t.inas001
               LET gs_keys[2] = g_inas_d[g_detail_idx].inas002
               LET gs_keys_bak[2] = g_inas_d_t.inas002
               LET gs_keys[3] = g_inas_d[g_detail_idx].inas003
               LET gs_keys_bak[3] = g_inas_d_t.inas003
               LET gs_keys[4] = g_inas_d[g_detail_idx].inas004
               LET gs_keys_bak[4] = g_inas_d_t.inas004
               CALL aini110_update_b('inas_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改

               END CASE

               #add-point:單身修改後

               #end add-point
            END IF

         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_inas_d[1].inas001) THEN
               CALL g_inas_d.deleteElement(1)
               NEXT FIELD inas001
            END IF
            #add-point:input段after input

            #end add-point

         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_inas_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inas_d.getLength()+1

      END INPUT

     
      #add-point:input段more_input

      #end add-point

      BEFORE DIALOG
         #add-point:input段before_dialog

         #end add-point
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD seq
               WHEN "s_detail3"
                  NEXT FIELD type

            END CASE
         END IF

      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

      ON ACTION controlr
         CALL cl_show_req_fields()

      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden
         END IF

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG

   #add-point:input段after_input

   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.aini110_show" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_show()
   #add-point:show段define

   #end add-point

   #add-point:show段之前

   #end add-point

   IF g_bfill = "Y" THEN
      CALL aini110_b_fill() #單身填充
      CALL aini110_b_fill2('0') #單身填充
   END IF



   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aini110_set_pk_array()
   #add-point:ON ACTION agendum

   #END add-point
   CALL cl_user_overview_set_follow_pic()



   LET g_inas_m_t.* = g_inas_m.*      #保存單頭舊值

   DISPLAY BY NAME g_inas_m.inas009,g_inas_m.imaal003,g_inas_m.imaal004,g_inas_m.inas010,g_inas_m.sum1,
       g_inas_m.sum2,g_inas_m.sum3,g_inas_m.imaa006
   CALL aini110_b_fill()                 #單身
   CALL aini110_b_fill2('0') #單身填充

   CALL aini110_ref_show()

   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()

   #add-point:show段之後

   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.aini110_ref_show" order="15" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define

   #end add-point

   LET l_ac_t = l_ac

   #讀入ref值(單頭)
   #add-point:ref_show段m_reference

   #end add-point

   #讀入ref值(單身)
   FOR l_ac = 1 TO g_inas_d.getLength()
      #add-point:ref_show段d_reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inas_d[l_ac].inas016
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inas_d[l_ac].inas016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inas_d[l_ac].inas016_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inas_d[l_ac].inas017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inas_d[l_ac].inas017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inas_d[l_ac].inas017_desc

      #end add-point
   END FOR

   FOR l_ac = 1 TO g_inas3_d.getLength()
      #add-point:ref_show段d2_reference

      #end add-point
   END FOR


   #add-point:ref_show段自訂

   #end add-point

   LET l_ac = l_ac_t

END FUNCTION]]>
  </point>
  <point name="function.aini110_b_fill" order="19" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_b_fill()
  
   #add-point:b_fill段define

   #end add-point

   #先清空單身變數內容
   CALL g_inas_d.clear()
  #CALL g_inas2_d.clear()
   CALL g_inas3_d.clear()


   #add-point:b_fill段sql_before

   #end add-point

      LET g_sql = "SELECT  UNIQUE '',inas006,inas005,'',inas007,inas001,inas002,inas003,inas004,inas012,
          inas011,inas013,inas015,inas016,'',inas017,'','','','','','','','','','','','' FROM inas_t",

                  "",

                  " WHERE inasent= ? AND inassite= ? AND inas009 = '",g_inas_m.inas009,"' AND inas010 = '",g_inas_m.inas010,"'"



   #add-point:b_fill段sql_after

   #end add-point

   #子單身的WC


   #判斷是否填充
   
   LET g_sql = g_sql, " ORDER BY inas_t.inas001,inas_t.inas002,inas_t.inas003,inas_t.inas004"
   
   #add-point:b_fill段fill_before
   
   #end add-point
   
   PREPARE aini110_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR aini110_pb
   
   LET g_cnt = l_ac
   LET l_ac = 1
   
   OPEN b_fill_cs USING g_enterprise, g_site
   
   
   FOREACH b_fill_cs INTO g_inas_d[l_ac].seq,g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005,g_inas_d[l_ac].expect,
       g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002,g_inas_d[l_ac].inas003,
       g_inas_d[l_ac].inas004,g_inas_d[l_ac].inas012,g_inas_d[l_ac].inas011,g_inas_d[l_ac].inas013,
       g_inas_d[l_ac].inas015,g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas016_desc,g_inas_d[l_ac].inas017,
       g_inas_d[l_ac].inas017_desc,g_inas3_d[l_ac].type,g_inas3_d[l_ac].date,g_inas3_d[l_ac].num1,
       g_inas3_d[l_ac].num2,g_inas3_d[l_ac].unit,g_inas3_d[l_ac].docno,g_inas3_d[l_ac].seq1,g_inas3_d[l_ac].seq2,
       g_inas3_d[l_ac].seq3,g_inas3_d[l_ac].user,g_inas3_d[l_ac].dept
   
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
   
      #add-point:b_fill段資料填充
   
      #end add-point
   
      #帶出公用欄位reference值
   
   
   
   
   
      #add-point:單身資料抓取
   
      #end add-point
   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
   
   END FOREACH
   
         CALL g_inas_d.deleteElement(g_inas_d.getLength())
   
   
   

   #add-point:b_fill段more

   #end add-point

   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt
   LET l_ac = g_cnt
   LET g_cnt = 0

   FREE aini110_pb

END FUNCTION]]>
  </point>
  <point name="function.aini110_b_fill2" order="20" ver="1" cite_std="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define

   #end add-point

   LET li_ac = l_ac



   #add-point:單身填充後

   #end add-point

   LET l_ac = li_ac

END FUNCTION]]>
  </point>
  <point name="function.aini110_update_b" order="24" ver="1" cite_std="" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define

   #end add-point

   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR

   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF





END FUNCTION]]>
  </point>
  <point name="function.aini110_set_pk_array" order="34" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aini110_set_pk_array()
   #add-point:set_pk_array段define

   #end add-point

   #add-point:set_pk_array段之前

   #end add-point

   CALL g_pk_array.clear()
   LET g_pk_array[1].values = ''
   LET g_pk_array[1].column = ''


   #add-point:set_pk_array段之後

   #end add-point

END FUNCTION]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[ type type_g_inas_m        RECORD
       inas009 LIKE inas_t.inas009, 
   imaal003 LIKE type_t.chr80, 
   imaal004 LIKE type_t.chr80, 
   inas010 LIKE inas_t.inas010, 
   sum1 LIKE type_t.chr80, 
   sum2 LIKE type_t.chr80, 
   sum3 LIKE type_t.chr80, 
   imaa006 LIKE type_t.chr80
       END RECORD
 
#單身 type 宣告
 TYPE type_g_inas_d        RECORD
       seq LIKE type_t.chr80, 
   inas006 LIKE inas_t.inas006, 
   inas005 LIKE inas_t.inas005, 
   expect  LIKE type_t.dat,
   inas007 LIKE inas_t.inas007, 
   inas001 LIKE inas_t.inas001, 
   inas002 LIKE inas_t.inas002, 
   inas003 LIKE inas_t.inas003, 
   inas004 LIKE inas_t.inas004, 
   inas012 LIKE inas_t.inas012, 
   inas011 LIKE inas_t.inas011, 
   inas013 LIKE inas_t.inas013, 
   inas015 LIKE inas_t.inas015, 
   inas016 LIKE inas_t.inas016, 
   inas016_desc LIKE type_t.chr500, 
   inas017 LIKE inas_t.inas017, 
   inas017_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_inas3_d RECORD
       type LIKE type_t.chr80, 
   date LIKE type_t.chr80, 
   num1 LIKE type_t.chr80, 
   num2 LIKE type_t.chr80, 
   unit LIKE type_t.chr80, 
   docno LIKE type_t.chr80, 
   seq1 LIKE type_t.chr80, 
   seq2 LIKE type_t.chr80, 
   seq3 LIKE type_t.chr80, 
   user LIKE type_t.chr80, 
   dept LIKE type_t.chr80
       END RECORD
 
 
#無單頭append欄位定義
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_inas_m          type_g_inas_m
DEFINE g_inas_m_t        type_g_inas_m
 
   
 
DEFINE g_inas_d          DYNAMIC ARRAY OF type_g_inas_d
DEFINE g_inas_d_t        type_g_inas_d
DEFINE g_inas3_d   DYNAMIC ARRAY OF type_g_inas3_d
DEFINE g_inas3_d_t type_g_inas3_d
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING

 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_inas009      LIKE inas_t.inas009,
       b_inas010      LIKE inas_t.inas010
      END RECORD ]]>
  </point>
  <point name="input.a.page1.inas001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas_d[g_detail_idx].inas001 IS NOT NULL AND g_inas_d[g_detail_idx].inas002 IS NOT NULL AND g_inas_d[g_detail_idx].inas003 IS NOT NULL AND g_inas_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas_d[g_detail_idx].inas001 != g_inas_d_t.inas001 OR g_inas_d[g_detail_idx].inas002 != g_inas_d_t.inas002 OR g_inas_d[g_detail_idx].inas003 != g_inas_d_t.inas003 OR g_inas_d[g_detail_idx].inas004 != g_inas_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inas002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas_d[g_detail_idx].inas001 IS NOT NULL AND g_inas_d[g_detail_idx].inas002 IS NOT NULL AND g_inas_d[g_detail_idx].inas003 IS NOT NULL AND g_inas_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas_d[g_detail_idx].inas001 != g_inas_d_t.inas001 OR g_inas_d[g_detail_idx].inas002 != g_inas_d_t.inas002 OR g_inas_d[g_detail_idx].inas003 != g_inas_d_t.inas003 OR g_inas_d[g_detail_idx].inas004 != g_inas_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inas003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas_d[g_detail_idx].inas001 IS NOT NULL AND g_inas_d[g_detail_idx].inas002 IS NOT NULL AND g_inas_d[g_detail_idx].inas003 IS NOT NULL AND g_inas_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas_d[g_detail_idx].inas001 != g_inas_d_t.inas001 OR g_inas_d[g_detail_idx].inas002 != g_inas_d_t.inas002 OR g_inas_d[g_detail_idx].inas003 != g_inas_d_t.inas003 OR g_inas_d[g_detail_idx].inas004 != g_inas_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inas004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas_d[g_detail_idx].inas001 IS NOT NULL AND g_inas_d[g_detail_idx].inas002 IS NOT NULL AND g_inas_d[g_detail_idx].inas003 IS NOT NULL AND g_inas_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas_d[g_detail_idx].inas001 != g_inas_d_t.inas001 OR g_inas_d[g_detail_idx].inas002 != g_inas_d_t.inas002 OR g_inas_d[g_detail_idx].inas003 != g_inas_d_t.inas003 OR g_inas_d[g_detail_idx].inas004 != g_inas_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.inas001_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas3_d[g_detail_idx].inas001 IS NOT NULL AND g_inas3_d[g_detail_idx].inas002 IS NOT NULL AND g_inas3_d[g_detail_idx].inas003 IS NOT NULL AND g_inas3_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas3_d[g_detail_idx].inas001 != g_inas3_d_t.inas001 OR g_inas3_d[g_detail_idx].inas002 != g_inas3_d_t.inas002 OR g_inas3_d[g_detail_idx].inas003 != g_inas3_d_t.inas003 OR g_inas3_d[g_detail_idx].inas004 != g_inas3_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas3_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas3_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas3_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas3_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.inas002_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas3_d[g_detail_idx].inas001 IS NOT NULL AND g_inas3_d[g_detail_idx].inas002 IS NOT NULL AND g_inas3_d[g_detail_idx].inas003 IS NOT NULL AND g_inas3_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas3_d[g_detail_idx].inas001 != g_inas3_d_t.inas001 OR g_inas3_d[g_detail_idx].inas002 != g_inas3_d_t.inas002 OR g_inas3_d[g_detail_idx].inas003 != g_inas3_d_t.inas003 OR g_inas3_d[g_detail_idx].inas004 != g_inas3_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas3_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas3_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas3_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas3_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.inas003_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas3_d[g_detail_idx].inas001 IS NOT NULL AND g_inas3_d[g_detail_idx].inas002 IS NOT NULL AND g_inas3_d[g_detail_idx].inas003 IS NOT NULL AND g_inas3_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas3_d[g_detail_idx].inas001 != g_inas3_d_t.inas001 OR g_inas3_d[g_detail_idx].inas002 != g_inas3_d_t.inas002 OR g_inas3_d[g_detail_idx].inas003 != g_inas3_d_t.inas003 OR g_inas3_d[g_detail_idx].inas004 != g_inas3_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas3_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas3_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas3_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas3_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.inas004_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inas3_d[g_detail_idx].inas001 IS NOT NULL AND g_inas3_d[g_detail_idx].inas002 IS NOT NULL AND g_inas3_d[g_detail_idx].inas003 IS NOT NULL AND g_inas3_d[g_detail_idx].inas004 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inas3_d[g_detail_idx].inas001 != g_inas3_d_t.inas001 OR g_inas3_d[g_detail_idx].inas002 != g_inas3_d_t.inas002 OR g_inas3_d[g_detail_idx].inas003 != g_inas3_d_t.inas003 OR g_inas3_d[g_detail_idx].inas004 != g_inas3_d_t.inas004)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inas_t WHERE "||"inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND "||"inas001 = '"||g_inas3_d[g_detail_idx].inas001 ||"' AND "|| "inas002 = '"||g_inas3_d[g_detail_idx].inas002 ||"' AND "|| "inas003 = '"||g_inas3_d[g_detail_idx].inas003 ||"' AND "|| "inas004 = '"||g_inas3_d[g_detail_idx].inas004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="ref_show.body.reference" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inas_d[l_ac].inas016
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_inas_d[l_ac].inas016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inas_d[l_ac].inas016_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inas_d[l_ac].inas_t.inas017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inas_d[l_ac].inas017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inas_d[l_ac].inas017_desc
]]>
  </point>
  <section id="aini110.b_fill" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aini110_b_fill(p_wc2)
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   #先清空單身變數內容
   CALL g_inas_d.clear()
   CALL g_inas3_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
      LET g_sql = "SELECT  UNIQUE '',inas006,inas005,'',inas007,inas001,inas002,inas003,inas004,inas012, 
          inas011,inas013,inas015,inas016,'',inas017,'','','','','','','','','','','','' FROM inas_t", 
             
                  "",
                  
                  " WHERE inasent= ? AND inassite= ? AND"  
                  
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED
   END IF
   
   #add-point:b_fill段sql_after
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF aini110_fill_chk(1) THEN
      LET g_sql = g_sql, " ORDER BY inas_t.inas001,inas_t.inas002,inas_t.inas003,inas_t.inas004"
      
      #add-point:b_fill段fill_before
      {<point name="b_fill.fill_before"/>}
      #end add-point
      
      PREPARE aini110_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR aini110_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,
 
                                               
      FOREACH b_fill_cs INTO g_inas_d[l_ac].seq,g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005,g_inas_d[l_ac].expect, 
          g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002,g_inas_d[l_ac].inas003, 
          g_inas_d[l_ac].inas004,g_inas_d[l_ac].inas012,g_inas_d[l_ac].inas011,g_inas_d[l_ac].inas013, 
          g_inas_d[l_ac].inas015,g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas016_desc,g_inas_d[l_ac].inas017, 
          g_inas_d[l_ac].inas017_desc,g_inas3_d[l_ac].type,g_inas3_d[l_ac].date,g_inas3_d[l_ac].num1, 
          g_inas3_d[l_ac].num2,g_inas3_d[l_ac].unit,g_inas3_d[l_ac].docno,g_inas3_d[l_ac].seq1,g_inas3_d[l_ac].seq2, 
          g_inas3_d[l_ac].seq3,g_inas3_d[l_ac].user,g_inas3_d[l_ac].dept 
                             
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         #帶出公用欄位reference值
         
         
         
 
        
         #add-point:單身資料抓取
         {<point name="bfill.foreach"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      
            CALL g_inas_d.deleteElement(g_inas_d.getLength())
      CALL g_inas3_d.deleteElement(g_inas3_d.getLength())
 
   END IF
   
   #add-point:b_fill段more
   {<point name="b_fill.more"/>}
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   FREE aini110_pb   
   
END FUNCTION
]]>
  </section>
  <section id="aini110.b_fill2" ver="1" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aini110_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
  </section>
  <section id="aini110.before_delete" ver="1" status="" src="s">
    <![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION aini110_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM inas_t
    WHERE inasent = g_enterprise AND inassite = g_site AND  =  AND
 
          inas001 = g_inas_d_t.inas001
      AND inas002 = g_inas_d_t.inas002
      AND inas003 = g_inas_d_t.inas003
      AND inas004 = g_inas_d_t.inas004
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("inas_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
  </section>
  <section id="aini110.browser_fill" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aini110_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = ""
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE  ",
 
                      " FROM inas_t ",
                      " ",
                      " ",
 
                      " WHERE inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("inas_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE  ",
 
                      " FROM inas_t ",
                      " ",
                      " ",
                      " WHERE inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("inas_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照 Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql  = "SELECT DISTINCT  ",
                       " FROM inas_t ",
 
                       " ",
                       " WHERE inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND ", g_wc," AND ",g_wc2, cl_sql_add_filter("inas_t")
 
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT  ",
                       " FROM inas_t ",
                       " WHERE inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND ", g_wc, cl_sql_add_filter("inas_t")
                 
   END IF
   
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
   
   LET l_sql_rank = "SELECT ,DENSE_RANK() OVER(ORDER BY  ",g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT  FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK < ", g_pagestart + g_max_browse,
              " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO     
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND g_wc THEN
      INITIALIZE g_inas_m.* TO NULL
      CALL g_inas_d.clear()
      CALL g_inas3_d.clear()
 
      #add-point:browser_fill段after_clear
      {<point name="browser_fill.after_clear"/>}
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="aini110.browser_search" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION aini110_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY "
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL aini110_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aini110.construct" ver="1" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aini110_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_inas_m.* TO NULL
   CALL g_inas_d.clear()
   CALL g_inas3_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON inas009,inas010
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
        #---------------------------<  Master  >---------------------------
         #----<<inas009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas009
            #add-point:BEFORE FIELD inas009
            {<point name="construct.b.inas009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inas009
            
            #add-point:AFTER FIELD inas009
            {<point name="construct.a.inas009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inas009
         ON ACTION controlp INFIELD inas009
            #add-point:ON ACTION controlp INFIELD inas009
            {<point name="construct.c.inas009" />}
            #END add-point
 
         #----<<imaal003>>----
         #----<<imaal004>>----
         #----<<inas010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas010
            #add-point:BEFORE FIELD inas010
            {<point name="construct.b.inas010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inas010
            
            #add-point:AFTER FIELD inas010
            {<point name="construct.a.inas010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inas010
         ON ACTION controlp INFIELD inas010
            #add-point:ON ACTION controlp INFIELD inas010
            {<point name="construct.c.inas010" />}
            #END add-point
 
         #----<<sum1>>----
         #----<<sum2>>----
         #----<<sum3>>----
         #----<<imaa006>>----
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON num2,unit,docno,seq1,seq2,seq3,user,dept
           FROM s_detail3[1].num2,s_detail3[1].unit,s_detail3[1].docno,s_detail3[1].seq1,s_detail3[1].seq2, 
               s_detail3[1].seq3,s_detail3[1].user,s_detail3[1].dept
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
         #---------------------<  Detail: page1  >---------------------
         #----<<seq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq
            #add-point:BEFORE FIELD seq
            {<point name="construct.b.page1.seq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq
            
            #add-point:AFTER FIELD seq
            {<point name="construct.a.page1.seq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.seq
         ON ACTION controlp INFIELD seq
            #add-point:ON ACTION controlp INFIELD seq
            {<point name="construct.c.page1.seq" />}
            #END add-point
 
         #----<<inas006>>----
         #----<<inas005>>----
         #----<<expect_date>>----
         #----<<inas007>>----
         #----<<inas001>>----
         #----<<inas002>>----
         #----<<inas003>>----
         #----<<inas004>>----
         #----<<inas012>>----
         #----<<inas011>>----
         #----<<inas013>>----
         #----<<inas015>>----
         #----<<inas016>>----
         #----<<inas016_desc>>----
         #----<<inas017>>----
         #----<<inas017_desc>>----
#---------------------<  Detail: page2  >---------------------
         #----<<type>>----
         #----<<date>>----
         #----<<num1>>----
         #----<<num2>>----
         #此段落由子樣板a01產生
         BEFORE FIELD num2
            #add-point:BEFORE FIELD num2
            {<point name="construct.b.page3.num2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD num2
            
            #add-point:AFTER FIELD num2
            {<point name="construct.a.page3.num2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.num2
         ON ACTION controlp INFIELD num2
            #add-point:ON ACTION controlp INFIELD num2
            {<point name="construct.c.page3.num2" />}
            #END add-point
 
         #----<<unit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD unit
            #add-point:BEFORE FIELD unit
            {<point name="construct.b.page3.unit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD unit
            
            #add-point:AFTER FIELD unit
            {<point name="construct.a.page3.unit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.unit
         ON ACTION controlp INFIELD unit
            #add-point:ON ACTION controlp INFIELD unit
            {<point name="construct.c.page3.unit" />}
            #END add-point
 
         #----<<docno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD docno
            #add-point:BEFORE FIELD docno
            {<point name="construct.b.page3.docno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD docno
            
            #add-point:AFTER FIELD docno
            {<point name="construct.a.page3.docno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.docno
         ON ACTION controlp INFIELD docno
            #add-point:ON ACTION controlp INFIELD docno
            {<point name="construct.c.page3.docno" />}
            #END add-point
 
         #----<<seq1>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq1
            #add-point:BEFORE FIELD seq1
            {<point name="construct.b.page3.seq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq1
            
            #add-point:AFTER FIELD seq1
            {<point name="construct.a.page3.seq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.seq1
         ON ACTION controlp INFIELD seq1
            #add-point:ON ACTION controlp INFIELD seq1
            {<point name="construct.c.page3.seq1" />}
            #END add-point
 
         #----<<seq2>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq2
            #add-point:BEFORE FIELD seq2
            {<point name="construct.b.page3.seq2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq2
            
            #add-point:AFTER FIELD seq2
            {<point name="construct.a.page3.seq2" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.seq2
         ON ACTION controlp INFIELD seq2
            #add-point:ON ACTION controlp INFIELD seq2
            {<point name="construct.c.page3.seq2" />}
            #END add-point
 
         #----<<seq3>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq3
            #add-point:BEFORE FIELD seq3
            {<point name="construct.b.page3.seq3" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq3
            
            #add-point:AFTER FIELD seq3
            {<point name="construct.a.page3.seq3" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.seq3
         ON ACTION controlp INFIELD seq3
            #add-point:ON ACTION controlp INFIELD seq3
            {<point name="construct.c.page3.seq3" />}
            #END add-point
 
         #----<<user>>----
         #此段落由子樣板a01產生
         BEFORE FIELD user
            #add-point:BEFORE FIELD user
            {<point name="construct.b.page3.user" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD user
            
            #add-point:AFTER FIELD user
            {<point name="construct.a.page3.user" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.user
         ON ACTION controlp INFIELD user
            #add-point:ON ACTION controlp INFIELD user
            {<point name="construct.c.page3.user" />}
            #END add-point
 
         #----<<dept>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dept
            #add-point:BEFORE FIELD dept
            {<point name="construct.b.page3.dept" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dept
            
            #add-point:AFTER FIELD dept
            {<point name="construct.a.page3.dept" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.dept
         ON ACTION controlp INFIELD dept
            #add-point:ON ACTION controlp INFIELD dept
            {<point name="construct.c.page3.dept" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
  </section>
  <section id="aini110.default_search" ver="1" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aini110_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, "  = '", g_argv[1], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aini110.delete" ver="1" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aini110_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF  IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE aini110_master_referesh USING  INTO g_inas_m.inas009,g_inas_m.inas010
   
   CALL aini110_show()
   
   CALL s_transaction_begin()
   
   
 
   OPEN aini110_cl USING g_enterprise, g_site,
 
   IF STATUS THEN
      CALL cl_err("OPEN aini110_cl:", STATUS, 1)
      CLOSE aini110_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aini110_cl INTO g_inas_m.inas009,g_inas_m.imaal003,g_inas_m.imaal004,g_inas_m.inas010,g_inas_m.sum1, 
       g_inas_m.sum2,g_inas_m.sum3,g_inas_m.imaa006
   
   #若資料已被他人LOCK
   IF SQLCA.sqlcode THEN
      CALL cl_err(,SQLCA.sqlcode,0)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aini110_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM inas_t WHERE inasent = g_enterprise AND inassite = g_site AND  = 
 
                                                               
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
      
      IF SQLCA.sqlcode THEN
         CALL cl_err("inas_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
 
      
  
      #add-point:單身刪除後 
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
 
      
      CLEAR FORM
      CALL g_inas_d.clear() 
      CALL g_inas3_d.clear()       
 
     
      CALL aini110_ui_browser_refresh()  
      CALL aini110_ui_headershow()  
      CALL aini110_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL aini110_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         LET g_wc2 = " 1=1"
         CALL aini110_browser_fill("F")
      END IF
       
   END IF
 
   CLOSE aini110_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(,'D')
    
END FUNCTION
]]>
  </section>
  <section id="aini110.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aini110_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aini110.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000032
#+ 
#+ Filename...: aini110
#+ Description: 庫存需求等候調整作業
#+ Creator....: 01996(2014/06/06)
#+ Modifier...: 01996(2014/07/07)
#+ Buildtype..: 應用 i00 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aini110.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aini110_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE inas_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aini110_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aini110_detail AS ",
                "SELECT * FROM inas_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aini110_detail SELECT * FROM inas_t 
                                         WHERE inasent = g_enterprise AND inassite = g_site AND  = g__t
 
   
   #將key修正為調整後   
   UPDATE aini110_detail 
      #更新key欄位
      SET  = 
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO inas_t SELECT * FROM aini110_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aini110_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g__t = 
 
   
   DROP TABLE aini110_detail
   
END FUNCTION
]]>
  </section>
  <section id="aini110.fetch" ver="1" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aini110_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL aini110_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET  = g_browser[g_current_idx].b_
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aini110_master_referesh USING  INTO g_inas_m.inas009,g_inas_m.inas010
   IF SQLCA.sqlcode THEN
      CALL cl_err("inas_t",SQLCA.sqlcode,1)
      INITIALIZE g_inas_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL aini110_show()
 
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aini110.fill_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aini110_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="aini110.global" ver="2" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="aini110.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aini110_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
  
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL aini110_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aini110.input" ver="1" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aini110_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT '',inas006,inas005,'',inas007,inas001,inas002,inas003,inas004,inas012, 
       inas011,inas013,inas015,inas016,'',inas017,'','','','','','','','','','','','' FROM inas_t WHERE  
       inasent=? AND inassite=? AND inas001=? AND inas002=? AND inas003=? AND inas004=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE aini110_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aini110_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aini110_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME 
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aini110.input.body" ver="1" status="" src="s">
    <![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_inas_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         #+ 此段落由子樣板a43產生
         ON ACTION rest
            LET g_action_choice="rest"
            IF cl_auth_chk_act("rest") THEN
               
               #add-point:ON ACTION rest
               {<point name="input.detail_input.page1.rest" />}
               #END add-point
            END IF
 
 
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inas_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aini110_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN aini110_cl USING g_enterprise, g_site,
                                               
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN aini110_cl:", STATUS, 1)
                  CLOSE aini110_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_inas_d[l_ac].inas001 IS NOT NULL
               AND g_inas_d[l_ac].inas002 IS NOT NULL
               AND g_inas_d[l_ac].inas003 IS NOT NULL
               AND g_inas_d[l_ac].inas004 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_inas_d_t.* = g_inas_d[l_ac].*  #BACKUP
               CALL aini110_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body.before_row.set_entry_b"/>}
               #end add-point
               CALL aini110_set_no_entry_b(l_cmd)
               OPEN aini110_bcl USING g_enterprise, g_site,,
 
                                                g_inas_d_t.inas001
                                                ,g_inas_d_t.inas002
                                                ,g_inas_d_t.inas003
                                                ,g_inas_d_t.inas004
 
               IF STATUS THEN
                  CALL cl_err("OPEN aini110_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aini110_bcl INTO g_inas_d[l_ac].seq,g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005, 
                      g_inas_d[l_ac].expect,g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002, 
                      g_inas_d[l_ac].inas003,g_inas_d[l_ac].inas004,g_inas_d[l_ac].inas012,g_inas_d[l_ac].inas011, 
                      g_inas_d[l_ac].inas013,g_inas_d[l_ac].inas015,g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas016_desc, 
                      g_inas_d[l_ac].inas017,g_inas_d[l_ac].inas017_desc,g_inas3_d[l_ac].type,g_inas3_d[l_ac].date, 
                      g_inas3_d[l_ac].num1,g_inas3_d[l_ac].num2,g_inas3_d[l_ac].unit,g_inas3_d[l_ac].docno, 
                      g_inas3_d[l_ac].seq1,g_inas3_d[l_ac].seq2,g_inas3_d[l_ac].seq3,g_inas3_d[l_ac].user, 
                      g_inas3_d[l_ac].dept
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_inas_d_t.inas001,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aini110_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_inas_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inas_d[l_ac].* TO NULL
            
            #公用欄位預設值
              
            
            #一般欄位預設值
            
            
            
            LET g_inas_d_t.* = g_inas_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aini110_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body.before_insert.set_entry_b"/>}
            #end add-point
            CALL aini110_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inas_d[li_reproduce_target].* = g_inas_d[li_reproduce].*
               LET g_inas3_d[li_reproduce_target].* = g_inas3_d[li_reproduce].*
 
               LET g_inas_d[g_inas_d.getLength()].inas001 = NULL
               LET g_inas_d[g_inas_d.getLength()].inas002 = NULL
               LET g_inas_d[g_inas_d.getLength()].inas003 = NULL
               LET g_inas_d[g_inas_d.getLength()].inas004 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inas_t 
             WHERE inasent = g_enterprise AND inassite = g_site AND  = 
 
               AND inas001 = g_inas_d[l_ac].inas001
               AND inas002 = g_inas_d[l_ac].inas002
               AND inas003 = g_inas_d[l_ac].inas003
               AND inas004 = g_inas_d[l_ac].inas004
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO inas_t
                           (inasent, inassite,
                            inas009,inas010,
                            inas001,inas002,inas003,inas004
                            ,inas006,inas005,inas007,inas012,inas011,inas013,inas015,inas016,inas017) 
                     VALUES(g_enterprise, g_site,
                            g_inas_m.inas009,g_inas_m.inas010,
                            g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002,g_inas_d[l_ac].inas003,g_inas_d[l_ac].inas004 

                            ,g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005,g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas012, 
                                g_inas_d[l_ac].inas011,g_inas_d[l_ac].inas013,g_inas_d[l_ac].inas015, 
                                g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas017)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_inas_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("inas_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_inas_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_inas_d.deleteElement(l_ac)
               NEXT FIELD inas001
            END IF
            IF g_inas_d_t.inas001 IS NOT NULL
               AND g_inas_d_t.inas002 IS NOT NULL
               AND g_inas_d_t.inas003 IS NOT NULL
               AND g_inas_d_t.inas004 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF aini110_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE aini110_bcl
               LET l_count = g_inas_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
         #---------------------<  Detail: page1  >---------------------
         #----<<seq>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq
            #add-point:BEFORE FIELD seq
            {<point name="input.b.page1.seq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq
            
            #add-point:AFTER FIELD seq
            {<point name="input.a.page1.seq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE seq
            #add-point:ON CHANGE seq
            {<point name="input.g.page1.seq" />}
            #END add-point
 
         #----<<inas006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas006
            #add-point:BEFORE FIELD inas006
            {<point name="input.b.page1.inas006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inas006
            
            #add-point:AFTER FIELD inas006
            {<point name="input.a.page1.inas006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inas006
            #add-point:ON CHANGE inas006
            {<point name="input.g.page1.inas006" />}
            #END add-point
 
         #----<<inas005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD inas005
            #add-point:BEFORE FIELD inas005
            {<point name="input.b.page1.inas005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inas005
            
            #add-point:AFTER FIELD inas005
            {<point name="input.a.page1.inas005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inas005
            #add-point:ON CHANGE inas005
            {<point name="input.g.page1.inas005" />}
            #END add-point
 
         #----<<expect_date>>----
         #----<<inas007>>----
         #----<<inas001>>----
         #----<<inas002>>----
         #----<<inas003>>----
         #----<<inas004>>----
         #----<<inas012>>----
         #----<<inas011>>----
         #----<<inas013>>----
         #----<<inas015>>----
         #----<<inas016>>----
         #----<<inas016_desc>>----
         #----<<inas017>>----
         #----<<inas017_desc>>----
 
         #---------------------<  Detail: page1  >---------------------
         #----<<seq>>----
         #Ctrlp:input.c.page1.seq
         ON ACTION controlp INFIELD seq
            #add-point:ON ACTION controlp INFIELD seq
            {<point name="input.c.page1.seq" />}
            #END add-point
 
         #----<<inas006>>----
         #Ctrlp:input.c.page1.inas006
         ON ACTION controlp INFIELD inas006
            #add-point:ON ACTION controlp INFIELD inas006
            {<point name="input.c.page1.inas006" />}
            #END add-point
 
         #----<<inas005>>----
         #Ctrlp:input.c.page1.inas005
         ON ACTION controlp INFIELD inas005
            #add-point:ON ACTION controlp INFIELD inas005
            {<point name="input.c.page1.inas005" />}
            #END add-point
 
         #----<<expect_date>>----
         #----<<inas007>>----
         #----<<inas001>>----
         #----<<inas002>>----
         #----<<inas003>>----
         #----<<inas004>>----
         #----<<inas012>>----
         #----<<inas011>>----
         #----<<inas013>>----
         #----<<inas015>>----
         #----<<inas016>>----
         #----<<inas016_desc>>----
         #----<<inas017>>----
         #----<<inas017_desc>>----
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_inas_d[l_ac].* = g_inas_d_t.*
               CLOSE aini110_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_inas_d[l_ac].inas001,-263,1)
               LET g_inas_d[l_ac].* = g_inas_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE inas_t SET (inas006,inas005,inas007,inas001,inas002,inas003,inas004,inas012,inas011, 
                   inas013,inas015,inas016,inas017) = (g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005, 
                   g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002,g_inas_d[l_ac].inas003, 
                   g_inas_d[l_ac].inas004,g_inas_d[l_ac].inas012,g_inas_d[l_ac].inas011,g_inas_d[l_ac].inas013, 
                   g_inas_d[l_ac].inas015,g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas017)
                WHERE inasent = g_enterprise AND inassite = g_site AND  =  
 
                 AND inas001 = g_inas_d_t.inas001 #項次   
                 AND inas002 = g_inas_d_t.inas002  
                 AND inas003 = g_inas_d_t.inas003  
                 AND inas004 = g_inas_d_t.inas004  
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inas_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("inas_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inas_d[g_detail_idx].inas001
               LET gs_keys_bak[1] = g_inas_d_t.inas001
               LET gs_keys[2] = g_inas_d[g_detail_idx].inas002
               LET gs_keys_bak[2] = g_inas_d_t.inas002
               LET gs_keys[3] = g_inas_d[g_detail_idx].inas003
               LET gs_keys_bak[3] = g_inas_d_t.inas003
               LET gs_keys[4] = g_inas_d[g_detail_idx].inas004
               LET gs_keys_bak[4] = g_inas_d_t.inas004
               CALL aini110_update_b('inas_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_inas_d[1].inas001) THEN
               CALL g_inas_d.deleteElement(1)
               NEXT FIELD inas001
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_inas_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inas_d.getLength()+1
            
      END INPUT
 
      INPUT ARRAY g_inas3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b, MAXCOUNT = g_max_rec, WITHOUT DEFAULTS, 
                   INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                   DELETE ROW = FALSE,
                   APPEND ROW = FALSE)
 
         #自訂單身ACTION
         
                 
         BEFORE INPUT
            
            CALL aini110_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN             
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
 
         BEFORE ROW 
            LET l_cmd = ''
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()                #returns the current row
            IF l_ac > g_rec_b THEN               #不可超過最後一筆
               CALL fgl_set_arr_curr(g_rec_b)   #moves to a specific row         
            END IF
           
            LET l_lock_sw = 'N'                  #DEFAULT
            LET l_n = ARR_COUNT()                #the number of rows containing  
            
            
            CALL s_transaction_begin()
            IF g_rec_b >= l_ac THEN
               LET l_cmd='u'
               CALL aini110_set_entry_b(l_cmd)
               #add-point:set_entry_b後
               {<point name="input.body3.before_row.set_entry_b"/>}
               #end add-point
               CALL aini110_set_no_entry_b(l_cmd)
               LET g_inas3_d_t.* = g_inas3_d[l_ac].*   #BACKUP  #page1
            END IF 
            
             
         BEFORE INSERT
            LET g_insert = 'Y' 
            NEXT FIELD inas001
 
            INITIALIZE g_inas3_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inas3_d[l_ac].* TO NULL
            
            #公用欄位預設值
              
            
            #一般欄位預設值
            
            
            
            LET g_inas3_d_t.* = g_inas3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aini110_set_entry_b(l_cmd)
            #add-point:set_entry_b後
            {<point name="input.body3.before_insert.set_entry_b"/>}
            #end add-point
            CALL aini110_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inas_d[li_reproduce_target].* = g_inas_d[li_reproduce].*
               LET g_inas3_d[li_reproduce_target].* = g_inas3_d[li_reproduce].*
 
               LET g_inas3_d[li_reproduce_target].inas001 = NULL
               LET g_inas3_d[li_reproduce_target].inas002 = NULL
               LET g_inas3_d[li_reproduce_target].inas003 = NULL
               LET g_inas3_d[li_reproduce_target].inas004 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_inas3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_inas_d.deleteElement(l_ac)
               NEXT FIELD inas001
            END IF
            IF g_inas_d_t.inas001 IS NOT NULL
               AND g_inas_d_t.inas002 IS NOT NULL
               AND g_inas_d_t.inas003 IS NOT NULL
               AND g_inas_d_t.inas004 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF aini110_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE aini110_bcl
               CALL s_transaction_end('Y','0') 
               LET l_count = g_inas3_d.getLength()
            END IF
            
         AFTER DELETE 
 
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_inas3_d[l_ac].* = g_inas3_d_t.*
               CLOSE aini110_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_inas_d[l_ac].inas001,-263,1)
               LET g_inas3_d[l_ac].* = g_inas3_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
                
               #add-point:單身修改前
               {<point name="modify.body3.b_update" mark="Y"/>}
               #end add-point
      
               UPDATE inas_t SET (inas006,inas005,inas007,inas001,inas002,inas003,inas004,inas012,inas011, 
                   inas013,inas015,inas016,inas017) = (g_inas_d[l_ac].inas006,g_inas_d[l_ac].inas005, 
                   g_inas_d[l_ac].inas007,g_inas_d[l_ac].inas001,g_inas_d[l_ac].inas002,g_inas_d[l_ac].inas003, 
                   g_inas_d[l_ac].inas004,g_inas_d[l_ac].inas012,g_inas_d[l_ac].inas011,g_inas_d[l_ac].inas013, 
                   g_inas_d[l_ac].inas015,g_inas_d[l_ac].inas016,g_inas_d[l_ac].inas017) #自訂欄位頁簽 

                WHERE inasent = g_enterprise AND inassite = g_site AND  = 
                 AND inas001 = g_inas3_d_t.inas001 #項次 
                 AND inas002 = g_inas3_d_t.inas002
                 AND inas003 = g_inas3_d_t.inas003
                 AND inas004 = g_inas3_d_t.inas004
               #add-point:單身修改中
               {<point name="modify.body3.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inas_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("inas_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inas3_d[g_detail_idx].inas001
               LET gs_keys_bak[1] = g_inas3_d_t.inas001
               LET gs_keys[2] = g_inas3_d[g_detail_idx].inas002
               LET gs_keys_bak[2] = g_inas3_d_t.inas002
               LET gs_keys[3] = g_inas3_d[g_detail_idx].inas003
               LET gs_keys_bak[3] = g_inas3_d_t.inas003
               LET gs_keys[4] = g_inas3_d[g_detail_idx].inas004
               LET gs_keys_bak[4] = g_inas3_d_t.inas004
               CALL aini110_update_b('inas_t',gs_keys,gs_keys_bak,"'2'")
                     #多語言處理
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="modify.body3.a_update"/>}
               #end add-point
            END IF
         
         #---------------------<  Detail: page2  >---------------------
         #----<<type>>----
         #----<<date>>----
         #----<<num1>>----
         #----<<num2>>----
         #此段落由子樣板a01產生
         BEFORE FIELD num2
            #add-point:BEFORE FIELD num2
            {<point name="input.b.page3.num2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD num2
            
            #add-point:AFTER FIELD num2
            {<point name="input.a.page3.num2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE num2
            #add-point:ON CHANGE num2
            {<point name="input.g.page3.num2" />}
            #END add-point
 
         #----<<unit>>----
         #此段落由子樣板a01產生
         BEFORE FIELD unit
            #add-point:BEFORE FIELD unit
            {<point name="input.b.page3.unit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD unit
            
            #add-point:AFTER FIELD unit
            {<point name="input.a.page3.unit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE unit
            #add-point:ON CHANGE unit
            {<point name="input.g.page3.unit" />}
            #END add-point
 
         #----<<docno>>----
         #此段落由子樣板a01產生
         BEFORE FIELD docno
            #add-point:BEFORE FIELD docno
            {<point name="input.b.page3.docno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD docno
            
            #add-point:AFTER FIELD docno
            {<point name="input.a.page3.docno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE docno
            #add-point:ON CHANGE docno
            {<point name="input.g.page3.docno" />}
            #END add-point
 
         #----<<seq1>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq1
            #add-point:BEFORE FIELD seq1
            {<point name="input.b.page3.seq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq1
            
            #add-point:AFTER FIELD seq1
            {<point name="input.a.page3.seq1" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE seq1
            #add-point:ON CHANGE seq1
            {<point name="input.g.page3.seq1" />}
            #END add-point
 
         #----<<seq2>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq2
            #add-point:BEFORE FIELD seq2
            {<point name="input.b.page3.seq2" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq2
            
            #add-point:AFTER FIELD seq2
            {<point name="input.a.page3.seq2" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE seq2
            #add-point:ON CHANGE seq2
            {<point name="input.g.page3.seq2" />}
            #END add-point
 
         #----<<seq3>>----
         #此段落由子樣板a01產生
         BEFORE FIELD seq3
            #add-point:BEFORE FIELD seq3
            {<point name="input.b.page3.seq3" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD seq3
            
            #add-point:AFTER FIELD seq3
            {<point name="input.a.page3.seq3" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE seq3
            #add-point:ON CHANGE seq3
            {<point name="input.g.page3.seq3" />}
            #END add-point
 
         #----<<user>>----
         #此段落由子樣板a01產生
         BEFORE FIELD user
            #add-point:BEFORE FIELD user
            {<point name="input.b.page3.user" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD user
            
            #add-point:AFTER FIELD user
            {<point name="input.a.page3.user" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE user
            #add-point:ON CHANGE user
            {<point name="input.g.page3.user" />}
            #END add-point
 
         #----<<dept>>----
         #此段落由子樣板a01產生
         BEFORE FIELD dept
            #add-point:BEFORE FIELD dept
            {<point name="input.b.page3.dept" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD dept
            
            #add-point:AFTER FIELD dept
            {<point name="input.a.page3.dept" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE dept
            #add-point:ON CHANGE dept
            {<point name="input.g.page3.dept" />}
            #END add-point
 
 
         #---------------------<  Detail: page2  >---------------------
         #----<<type>>----
         #----<<date>>----
         #----<<num1>>----
         #----<<num2>>----
         #Ctrlp:input.c.page3.num2
         ON ACTION controlp INFIELD num2
            #add-point:ON ACTION controlp INFIELD num2
            {<point name="input.c.page3.num2" />}
            #END add-point
 
         #----<<unit>>----
         #Ctrlp:input.c.page3.unit
         ON ACTION controlp INFIELD unit
            #add-point:ON ACTION controlp INFIELD unit
            {<point name="input.c.page3.unit" />}
            #END add-point
 
         #----<<docno>>----
         #Ctrlp:input.c.page3.docno
         ON ACTION controlp INFIELD docno
            #add-point:ON ACTION controlp INFIELD docno
            {<point name="input.c.page3.docno" />}
            #END add-point
 
         #----<<seq1>>----
         #Ctrlp:input.c.page3.seq1
         ON ACTION controlp INFIELD seq1
            #add-point:ON ACTION controlp INFIELD seq1
            {<point name="input.c.page3.seq1" />}
            #END add-point
 
         #----<<seq2>>----
         #Ctrlp:input.c.page3.seq2
         ON ACTION controlp INFIELD seq2
            #add-point:ON ACTION controlp INFIELD seq2
            {<point name="input.c.page3.seq2" />}
            #END add-point
 
         #----<<seq3>>----
         #Ctrlp:input.c.page3.seq3
         ON ACTION controlp INFIELD seq3
            #add-point:ON ACTION controlp INFIELD seq3
            {<point name="input.c.page3.seq3" />}
            #END add-point
 
         #----<<user>>----
         #Ctrlp:input.c.page3.user
         ON ACTION controlp INFIELD user
            #add-point:ON ACTION controlp INFIELD user
            {<point name="input.c.page3.user" />}
            #END add-point
 
         #----<<dept>>----
         #Ctrlp:input.c.page3.dept
         ON ACTION controlp INFIELD dept
            #add-point:ON ACTION controlp INFIELD dept
            {<point name="input.c.page3.dept" />}
            #END add-point
 
 
 
         AFTER ROW
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_inas3_d[l_ac].* = g_inas3_d_t.*
               END IF
               CLOSE aini110_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
 
            CLOSE aini110_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point    
 
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_inas3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inas3_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD 
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD seq
               WHEN "s_detail3"
                  NEXT FIELD type
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aini110.input.head" ver="1" status="" src="s">
    <![CDATA[   
      #單頭段
      INPUT BY NAME  
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         #+ 此段落由子樣板a43產生
         ON ACTION rest
            LET g_action_choice="rest"
            IF cl_auth_chk_act("rest") THEN
               
               #add-point:ON ACTION rest
               {<point name="input.master_input.rest" />}
               #END add-point
            END IF
 
 
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
         #---------------------------<  Master  >---------------------------
         #----<<inas009>>----
         #----<<imaal003>>----
         #----<<imaal004>>----
         #----<<inas010>>----
         #----<<sum1>>----
         #----<<sum2>>----
         #----<<sum3>>----
         #----<<imaa006>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<inas009>>----
         #----<<imaal003>>----
         #----<<imaal004>>----
         #----<<inas010>>----
         #----<<sum1>>----
         #----<<sum2>>----
         #----<<sum3>>----
         #----<<imaa006>>----
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME              
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE inas_t SET (inas009,inas010) = (g_inas_m.inas009,g_inas_m.inas010)
                WHERE inasent = g_enterprise AND inassite = g_site AND  = g__t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inas_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("inas_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inas_d[g_detail_idx].inas001
               LET gs_keys_bak[1] = g_inas_d_t.inas001
               LET gs_keys[2] = g_inas_d[g_detail_idx].inas002
               LET gs_keys_bak[2] = g_inas_d_t.inas002
               LET gs_keys[3] = g_inas_d[g_detail_idx].inas003
               LET gs_keys_bak[3] = g_inas_d_t.inas003
               LET gs_keys[4] = g_inas_d[g_detail_idx].inas004
               LET gs_keys_bak[4] = g_inas_d_t.inas004
               CALL aini110_update_b('inas_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g__t = 
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aini110_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g__t = 
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           IF cl_null(g_inas_d[1].inas001) THEN
              CALL g_inas_d.deleteElement(1)
              NEXT FIELD inas001
           END IF
 
      END INPUT
]]>
  </section>
  <section id="aini110.insert" ver="1" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aini110_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_inas_d.clear()
   CALL g_inas3_d.clear()
 
 
   INITIALIZE g_inas_m.* LIKE inas_t.*             #DEFAULT 設定
   LET g__t = NULL
 
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      CALL aini110_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inas_m.* = g_inas_m_t.*
         CALL aini110_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      CALL g_inas_d.clear()
      CALL g_inas3_d.clear()
 
      
      #add-point:單頭輸入後2
      {<point name="insert.after_insert2"/>}
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1    
 
   LET g__t = 
 
   
   LET g_wc = g_wc,  
              " OR ( inasent = '" ||g_enterprise|| "' AND inassite = '" ||g_site|| "' AND ",
              "  = '",  CLIPPED, "' "
 
              , ") "
   
END FUNCTION
]]>
  </section>
  <section id="aini110.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aini110_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aini110.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aini110_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aini110_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aini110.main" ver="2" status="" src="s">
    <![CDATA[#+ 作業開始
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point    
 
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init"/>}
   #end add-point
 
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE aini110_cl CURSOR FROM g_forupd_sql 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aini110 WITH FORM cl_ap_formpath("ain",g_code)
   
      #程式初始化
      CALL aini110_init()
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #進入選單 Menu (='N')
      CALL aini110_ui_dialog()
   
      #畫面關閉
      CLOSE WINDOW w_aini110
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
 
END MAIN
]]>
  </section>
  <section id="aini110.modify" ver="1" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aini110_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF  IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE aini110_master_referesh USING  INTO g_inas_m.inas009,g_inas_m.inas010
 
   ERROR ""
  
   LET g__t = 
 
   CALL s_transaction_begin()
   
   OPEN aini110_cl USING g_enterprise, g_site,
 
   IF STATUS THEN
      CALL cl_err("OPEN aini110_cl:", STATUS, 1)
      CLOSE aini110_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH aini110_cl INTO g_inas_m.inas009,g_inas_m.imaal003,g_inas_m.imaal004,g_inas_m.inas010,g_inas_m.sum1, 
       g_inas_m.sum2,g_inas_m.sum3,g_inas_m.imaa006
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(,SQLCA.sqlcode,0)
      CLOSE aini110_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   CALL s_transaction_end('Y','0')
 
   CALL aini110_show()
   WHILE TRUE
      LET g__t = 
 
 
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL aini110_input("u")     #欄位更改
      
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inas_m.* = g_inas_m_t.*
         CALL aini110_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF  != g__t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前
         {<point name="modify.b_key_update" mark="Y"/>}
         #end add-point
         
         #更新單頭key值
         UPDATE inas_t SET  = 
 
          WHERE inasent = g_enterprise AND inassite = g_site AND  = g__t
 
         #add-point:單頭(偽)修改中
         {<point name="modify.m_key_update"/>}
         #end add-point
         
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("inas_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("inas_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
 
 
         
         #add-point:單頭(偽)修改後
         {<point name="modify.a_key_update"/>}
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aini110_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(,'U')
 
   CALL aini110_b_fill("1=1")
   
END FUNCTION   
]]>
  </section>
  <section id="aini110.modify_detail_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aini110_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "seq"
      WHEN "s_detail3"
         LET ls_return = "type"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="aini110.other_function" ver="2" status="" src="s">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
  <section id="aini110.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aini110_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #add-point:query開始前
   {<point name="query.befroe_query"/>}
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_inas_d.clear()
   CALL g_inas3_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL aini110_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aini110_browser_fill(g_wc)
      CALL aini110_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL aini110_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aini110_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="aini110.ref_show" ver="1" status="" src="s">
    <![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION aini110_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_inas_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_inas3_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body3.reference"/>}
      #end add-point
   END FOR
 
 
   #add-point:ref_show段自訂
   {<point name="ref_show.other_reference"/>}
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
  </section>
  <section id="aini110.reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aini110_reproduce()
   DEFINE l_newno     LIKE inas_t. 
   DEFINE l_oldno     LIKE inas_t. 
 
   DEFINE l_master    RECORD LIKE inas_t.*
   DEFINE l_detail    RECORD LIKE inas_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF  IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g__t = 
 
   
   LET  = ""
 
   CALL aini110_set_entry('a')
   CALL aini110_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   CALL s_transaction_begin()
 
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aini110_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   LET g_current_idx = 1   
 
   LET g_wc = g_wc,  
              " OR (",
              "  = '", l_newno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aini110.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aini110_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aini110.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aini110_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aini110.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aini110_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aini110.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aini110_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b段"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="aini110.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aini110_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = 
   LET g_pk_array[1].column = ''
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aini110.show" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aini110_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL aini110_b_fill(g_wc2) #單身填充
      CALL aini110_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aini110_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET g_inas_m_t.* = g_inas_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_inas_m.inas009,g_inas_m.imaal003,g_inas_m.imaal004,g_inas_m.inas010,g_inas_m.sum1, 
       g_inas_m.sum2,g_inas_m.sum3,g_inas_m.imaa006
   CALL aini110_b_fill(g_wc2_table1)                 #單身
   CALL aini110_b_fill2('0') #單身填充
 
   CALL aini110_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
  </section>
  <section id="aini110.state_change" ver="1" status="" src="s">
    <![CDATA[    
]]>
  </section>
  <section id="aini110.ui_browser_refresh" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aini110_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_ =  
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="aini110.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aini110_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
  </section>
  <section id="aini110.ui_dialog" ver="1" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aini110_ui_dialog()
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point  
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET lb_first = TRUE
 
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aini110_browser_fill("")
 
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_ = g__t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
      
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
        
         DISPLAY ARRAY g_inas_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL aini110_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_inas3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
         
            BEFORE ROW
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL aini110_ui_detailshow()
               
               #add-point:page1自定義行為
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
            
            BEFORE DISPLAY 
               CALL FGL_SET_ARR_CURR(g_detail_idx)      
            
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aini110_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aini110_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
  
         
         
         ON ACTION first
            CALL aini110_fetch('F')
            LET g_current_row = g_current_idx         
          
         ON ACTION previous
            CALL aini110_fetch('P')
            LET g_current_row = g_current_idx
          
         ON ACTION jump
            CALL aini110_fetch('/')
            LET g_current_row = g_current_idx
        
         ON ACTION next
            CALL aini110_fetch('N')
            LET g_current_row = g_current_idx
         
         ON ACTION last
            CALL aini110_fetch('L')
            LET g_current_row = g_current_idx
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inas001
            END IF
 
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aini110_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aini110_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL aini110_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aini110_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION rest
            LET g_action_choice="rest"
            IF cl_auth_chk_act("rest") THEN
               
               #add-point:ON ACTION rest
               {<point name="menu.rest" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aini110_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aini110_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aini110_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aini110_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aini110_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
]]>
  </section>
  <section id="aini110.ui_headershow" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aini110_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET  = g_browser[g_current_idx].b_   
 
   EXECUTE aini110_master_referesh USING  INTO g_inas_m.inas009,g_inas_m.inas010
   CALL aini110_show()
   
END FUNCTION
]]>
  </section>
  <section id="aini110.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aini110_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aini110.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aini110_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
