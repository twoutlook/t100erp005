<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint820" std_prog="aint820" erpver="1.0" module="AIN" ver="7" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.aint820_get_ooef004" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 獲取參照表號
# Memo...........:
# Usage..........: CALL aint820_get_ooef004()
#                  RETURNING l_ooef004
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_get_ooef004()
DEFINE  l_ooef004    LIKE ooef_t.ooef004
   SELECT ooef004 INTO l_ooef004 FROM ooef_t
    WHERE ooefent = g_enterprise
      AND ooef001 = g_site
   RETURN l_ooef004 
END FUNCTION]]>
  </point>
  <point name="function.aint820_inpa002_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 人員說明
# Memo...........:
# Usage..........: CALL aint820_inpa002_ref()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_inpa002_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpa_m.inpa002
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_inpa_m.inpa002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpa_m.inpa002_desc
END FUNCTION]]>
  </point>
  <point name="function.aint820_inpa003_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 部門名稱
# Memo...........:
# Usage..........: CALL aint820_inpa003_ref()
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_inpa003_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpa_m.inpa003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpa_m.inpa003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpa_m.inpa003_desc
END FUNCTION]]>
  </point>
  <point name="function.aint820_inpa025_chk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 各選項都僅能選取其中一個，不可重複選擇，除了'7.無' 選項之外
# Memo...........:
# Usage..........: CALL aint820_inpa025_chk(p_order)
#                  RETURNING r_success
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_inpa025_chk(p_order)
DEFINE  p_order    LIKE inpa_t.inpa025
DEFINE  l_cnt      LIKE type_t.num5

   IF p_order = '7' THEN
      RETURN TRUE
   END IF
   SELECT COUNT(*) INTO l_cnt FROM inpa_t
    WHERE inpaent = g_enterprise
      AND inpadocno = g_inpa_m.inpadocno
      AND (inpa025 = p_order OR inpa026 = p_order
        OR inpa027 = p_order OR inpa028 = p_order 
        OR inpa029 = p_order OR inpa030 = p_order)
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   IF l_cnt > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ain-00250'
      LET g_errparam.extend = p_order
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.aint820_inpa037_chk" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 除了'7.無' 選項之外,各選項都僅能選取其中一個，不可重複選擇
# Memo...........:
# Usage..........: CALL aint820_inpa037_chk(p_order)
#                  RETURNING TRUE/FALSE
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_inpa037_chk(p_order)
DEFINE  p_order    LIKE inpa_t.inpa032
DEFINE  l_cnt      LIKE type_t.num5
   IF p_order = '7' THEN
      RETURN TRUE
   END IF
   SELECT COUNT(*) INTO l_cnt FROM inpa_t
    WHERE inpaent = g_enterprise
      AND inpadocno = g_inpa_m.inpadocno
      AND (inpa032 = p_order OR inpa033 = p_order
        OR inpa034 = p_order OR inpa035 = p_order 
        OR inpa036 = p_order OR inpa037 = p_order)
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   IF l_cnt > 0 THEN 
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ain-00250'
      LET g_errparam.extend = p_order
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.aint820_inpa025_chk_a" order="6" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 重複性檢查
# Memo...........:
# Usage..........: CALL aint820_inpa025_chk_a(p_type,p_inpa_num)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_inpa025_chk_a(p_type,p_inpa_num)
DEFINE p_type       LIKE type_t.num5
DEFINE p_inpa_num   LIKE inpa_t.inpa025
DEFINE l_i          LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE
   IF p_inpa_num = '7' THEN
      RETURN r_success
   END IF
   FOR l_i = 1 TO 6
      IF l_i = p_type THEN CONTINUE FOR END IF
      CASE l_i
         WHEN '1'
            IF p_inpa_num = g_inpa_m.inpa025 THEN LET r_success = FALSE END IF
         WHEN '2'
            IF p_inpa_num = g_inpa_m.inpa026 THEN LET r_success = FALSE END IF
         WHEN '3'
            IF p_inpa_num = g_inpa_m.inpa027 THEN LET r_success = FALSE END IF
         WHEN '4'
            IF p_inpa_num = g_inpa_m.inpa028 THEN LET r_success = FALSE END IF
         WHEN '5'
            IF p_inpa_num = g_inpa_m.inpa029 THEN LET r_success = FALSE END IF
         WHEN '6'
            IF p_inpa_num = g_inpa_m.inpa030 THEN LET r_success = FALSE END IF
      END CASE
      IF r_success = FALSE THEN EXIT FOR END IF      
   END FOR
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint820_inpa032_chk_a" order="7" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 重複性檢查
# Memo...........:
# Usage..........: CALL aint820_inpa032_chk_a(p_type,p_inpa_num)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_inpa032_chk_a(p_type,p_inpa_num)
DEFINE p_type       LIKE type_t.num5
DEFINE p_inpa_num   LIKE inpa_t.inpa025
DEFINE l_i          LIKE type_t.num5
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE
   IF p_inpa_num = '7' THEN 
      RETURN r_success
   END IF
   
   FOR l_i = 1 TO 6
      IF l_i = p_type THEN CONTINUE FOR END IF
      CASE l_i
         WHEN '1'
            IF p_inpa_num = g_inpa_m.inpa032 THEN LET r_success = FALSE END IF
         WHEN '2'
            IF p_inpa_num = g_inpa_m.inpa033 THEN LET r_success = FALSE END IF
         WHEN '3'
            IF p_inpa_num = g_inpa_m.inpa034 THEN LET r_success = FALSE END IF
         WHEN '4'
            IF p_inpa_num = g_inpa_m.inpa035 THEN LET r_success = FALSE END IF
         WHEN '5'
            IF p_inpa_num = g_inpa_m.inpa036 THEN LET r_success = FALSE END IF
         WHEN '6'
            IF p_inpa_num = g_inpa_m.inpa037 THEN LET r_success = FALSE END IF
      END CASE
      IF r_success = FALSE THEN EXIT FOR END IF      
   END FOR
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint820_get_col_default" order="8" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取得單據別設定的欄位預設值
# Memo...........: 需搭配單據別aooi200的設定
# Usage..........: CALL aint820_get_col_default()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_get_col_default()
   LET g_inpa_m.inpadocdt = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpadocdt',g_inpa_m.inpadocdt)
   LET g_inpa_m.inpa002 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa002',g_inpa_m.inpa002)
   LET g_inpa_m.inpa003 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa003',g_inpa_m.inpa003)
   LET g_inpa_m.inpa004 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa004',g_inpa_m.inpa004)   
   LET g_inpa_m.inpa005 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa005',g_inpa_m.inpa005)
   LET g_inpa_m.inpa006 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa006',g_inpa_m.inpa006)
   LET g_inpa_m.inpa040 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa040',g_inpa_m.inpa040)
   LET g_inpa_m.inpa008 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa008',g_inpa_m.inpa008)
   LET g_inpa_m.inpa009 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa009',g_inpa_m.inpa009)
   LET g_inpa_m.inpa010 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa010',g_inpa_m.inpa010)
   LET g_inpa_m.inpa011 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa011',g_inpa_m.inpa011)
   LET g_inpa_m.inpa012 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa012',g_inpa_m.inpa012)
   LET g_inpa_m.inpa013 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa013',g_inpa_m.inpa013)
   LET g_inpa_m.inpa014 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa014',g_inpa_m.inpa014)
   LET g_inpa_m.inpa015 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa015',g_inpa_m.inpa015)
   LET g_inpa_m.inpa016 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa016',g_inpa_m.inpa016)
   LET g_inpa_m.inpa017 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa017',g_inpa_m.inpa017)
   LET g_inpa_m.inpa018 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa018',g_inpa_m.inpa018)
   LET g_inpa_m.inpa019 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa019',g_inpa_m.inpa019)
   LET g_inpa_m.inpa020 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa020',g_inpa_m.inpa020)
   LET g_inpa_m.inpa021 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa021',g_inpa_m.inpa021)
   LET g_inpa_m.inpa022 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa022',g_inpa_m.inpa022)
   LET g_inpa_m.inpa050 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa050',g_inpa_m.inpa050)
   LET g_inpa_m.inpa051 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa051',g_inpa_m.inpa051)
   LET g_inpa_m.inpa052 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa052',g_inpa_m.inpa052)
   LET g_inpa_m.inpa053 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa053',g_inpa_m.inpa053)
   LET g_inpa_m.inpa054 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa054',g_inpa_m.inpa054)
   LET g_inpa_m.inpa023 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa023',g_inpa_m.inpa023)
   LET g_inpa_m.inpa024 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa024',g_inpa_m.inpa024)
   LET g_inpa_m.inpa025 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa025',g_inpa_m.inpa025)
   LET g_inpa_m.inpa026 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa026',g_inpa_m.inpa026)
   LET g_inpa_m.inpa027 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa027',g_inpa_m.inpa027)
   LET g_inpa_m.inpa028 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa028',g_inpa_m.inpa028)
   LET g_inpa_m.inpa029 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa029',g_inpa_m.inpa029)
   LET g_inpa_m.inpa030 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa030',g_inpa_m.inpa030)
   LET g_inpa_m.inpa031 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa031',g_inpa_m.inpa031)
   LET g_inpa_m.inpa032 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa032',g_inpa_m.inpa032)
   LET g_inpa_m.inpa033 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa033',g_inpa_m.inpa033)
   LET g_inpa_m.inpa034 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa034',g_inpa_m.inpa034)
   LET g_inpa_m.inpa035 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa035',g_inpa_m.inpa035)
   LET g_inpa_m.inpa036 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa036',g_inpa_m.inpa036)
   LET g_inpa_m.inpa037 = s_aooi200_get_doc_default(g_site,'1',g_inpa_m.inpadocno,'inpa037',g_inpa_m.inpa037)
   
   CALL aint820_inpa002_ref()
   CALL aint820_inpa003_ref()
   CALL s_desc_get_person_desc(g_inpa_m.inpa004) RETURNING g_inpa_m.inpa004_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa018) RETURNING g_inpa_m.inpa018_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa019) RETURNING g_inpa_m.inpa019_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa021) RETURNING g_inpa_m.inpa021_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa022) RETURNING g_inpa_m.inpa022_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa050) RETURNING g_inpa_m.inpa050_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa051) RETURNING g_inpa_m.inpa051_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa052) RETURNING g_inpa_m.inpa052_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa053) RETURNING g_inpa_m.inpa053_desc
   CALL s_aooi200_get_slip_desc(g_inpa_m.inpa054) RETURNING g_inpa_m.inpa054_desc
   
   DISPLAY BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa002_desc,g_inpa_m.inpadocno_desc, 
       g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpa003_desc,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa004_desc, 
       g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008, 
       g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014, 
       g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa018_desc,g_inpa_m.inpa019, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa021_desc,g_inpa_m.inpa022, 
       g_inpa_m.inpa022_desc,g_inpa_m.inpa050,g_inpa_m.inpa050_desc,g_inpa_m.inpa051,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052,g_inpa_m.inpa052_desc,g_inpa_m.inpa053,g_inpa_m.inpa053_desc,g_inpa_m.inpa054, 
       g_inpa_m.inpa054_desc,g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027, 
       g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033, 
       g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037
   
END FUNCTION]]>
  </point>
  <point name="function.aint820_set_required" order="9" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint820_set_required()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_set_required()
DEFINE  l_inpa009   LIKE inpa_t.inpa009
DEFINE  l_inpa010   LIKE inpa_t.inpa009
DEFINE  l_inpa011   LIKE inpa_t.inpa009
DEFINE  l_inpa012   LIKE inpa_t.inpa009
DEFINE  l_inpa013   LIKE inpa_t.inpa009
DEFINE  l_inpa014   LIKE inpa_t.inpa009
DEFINE  l_inpa015   LIKE inpa_t.inpa009
DEFINE  l_inpa016   LIKE inpa_t.inpa009

   SELECT inpa009,inpa010,inpa011,inpa012,inpa013,inpa014,inpa015,inpa016 INTO 
          l_inpa009,l_inpa010,l_inpa011,l_inpa012,l_inpa013,l_inpa014,l_inpa015,l_inpa016
     FROM inpa_t
    WHERE inpaent = g_enterprise
      AND inpasite = g_site
      AND inpadocno = g_inpa_m.inpadocno
   IF l_inpa009 = 'Y' OR l_inpa010 = 'Y' OR l_inpa011 = 'Y' OR l_inpa012 = 'Y' THEN 
      CALL cl_set_comp_required('inpa018,inpa019',TRUE) 
   END IF
   
   IF l_inpa013 = 'Y' OR l_inpa014 = 'Y' OR l_inpa015 = 'Y' OR l_inpa016 = 'Y' THEN 
      CALL cl_set_comp_required('inpa021,inpa022',TRUE) 
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.aint820_set_no_required" order="10" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint820_set_no_required()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_set_no_required()
   CALL cl_set_comp_required('inpa018,inpa019,inpa021,inpa022',FALSE)          
END FUNCTION]]>
  </point>
  <point name="function.aint820_get_multi_inpc001" order="11" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取倉庫
# Memo...........:
# Usage..........: CALL aint820_get_multi_inpc001()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint820_get_multi_inpc001()
DEFINE   tok         base.StringTokenizer
DEFINE   l_inpc001   LIKE inpc_t.inpc001
DEFINE   l_inpcseq   LIKE inpc_t.inpcseq 
DEFINE   r_success   LIKE type_t.num5
DEFINE   l_flag      LIKE type_t.num5
DEFINE   i           LIKE type_t.num5

   LET tok = base.StringTokenizer.create(g_multi_inpc001,"|") 
   LET i = 1
   WHILE tok.hasMoreTokens()  
      LET l_inpc001 = tok.nextToken()
      IF NOT cl_null(l_inpc001) THEN  
         INITIALIZE g_chkparam.* TO NULL
         
         #設定g_chkparam.*的參數
         LET g_chkparam.arg1 = g_site
         LET g_chkparam.arg2 = l_inpc001   
         #呼叫檢查存在並帶值的library
         IF cl_chk_exist("v_inaa001_4") THEN
            #檢查成功時後續處理
            #LET  = g_chkparam.return1
            #DISPLAY BY NAME 
         ELSE
            CONTINUE WHILE
         END IF
         #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
         
         CALL s_control_chk_doc('6',g_inpa_m.inpadocno,l_inpc001,'','','','') RETURNING r_success,l_flag
         IF r_success THEN
            IF NOT l_flag THEN
               CONTINUE WHILE
            END IF
         ELSE
            CONTINUE WHILE
         END IF                    
         #[C:庫位]有值時，需呼叫應用元件取得該庫位是否有設置在庫存控制組中，
         #若有時需判斷該控制組是否與其他項次的庫位所對應的控制組一樣
         #若不一樣則需訊息告知，並將游標跳到[C:庫位]欄位供修改
      END IF   
      LET l_inpc[i].inpc001 = l_inpc001     
#      SELECT MAX(inpcseq)+1 INTO l_inpcseq FROM inpc_t 
#       WHERE inpcent = g_enterprise
#         AND inpcsite = g_site
#         AND inpcdocno = g_inpa_m.inpadocno
#      IF cl_null(l_inpcseq) THEN LET l_inpcseq = 1 END IF
#      INSERT INTO inpc_t (inpcent,inpcsite,inpcdocno,inpcseq,inpc001)
#                  VALUES (g_enterprise,g_site,g_inpa_m.inpadocno,l_inpcseq,l_inpc001)
      LET i = i + 1                     
   END WHILE
   CALL l_inpc.deleteElement(i)
   LET i = i -1 
END FUNCTION]]>
  </point>
  <point name="b_fill.body.fill_sql" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_sql = g_sql CLIPPED," AND inpbsite = '",g_site,"'"]]>
  </point>
  <point name="b_fill.fill" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF cl_null(g_inpb_d[l_ac].inpb003) THEN
            LET g_inpb_d[l_ac].inpb003 = 0
         END IF]]>
  </point>
  <point name="browser_fill.cnt_sqlwc" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_sub_sql = l_sub_sql CLIPPED," AND inpasite = '",g_site,"'"]]>
  </point>
  <point name="browser_fill.fill_sqlwc" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql CLIPPED," AND inpasite = '",g_site,"'"]]>
  </point>
  <point name="construct.c.inpa002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa002  #顯示到畫面上
            NEXT FIELD inpa002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa003  #顯示到畫面上
            NEXT FIELD inpa003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa004  #顯示到畫面上
            NEXT FIELD inpa004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint830'
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa018  #顯示到畫面上
            NEXT FIELD inpa018                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint830'            
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa019  #顯示到畫面上
            NEXT FIELD inpa019                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa021" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint835'            
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa021  #顯示到畫面上
            NEXT FIELD inpa021                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa022" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint835'            
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa022  #顯示到畫面上
            NEXT FIELD inpa022                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa050" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint302'            
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa050  #顯示到畫面上
            NEXT FIELD inpa050                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa051" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint301'             
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa051  #顯示到畫面上
            NEXT FIELD inpa051                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa052" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'asft310'              
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa052  #顯示到畫面上
            NEXT FIELD inpa052                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa053" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'asft320'               
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa053  #顯示到畫面上
            NEXT FIELD inpa053                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpa054" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'asft312'             
            CALL q_ooba002_10()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpa054  #顯示到畫面上
            NEXT FIELD inpa054                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpacnfid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpacnfid  #顯示到畫面上
            NEXT FIELD inpacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpacrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpacrtdp  #顯示到畫面上
            NEXT FIELD inpacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpacrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpacrtid  #顯示到畫面上
            NEXT FIELD inpacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpadocno" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inpadocno_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpadocno  #顯示到畫面上
            NEXT FIELD inpadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpamodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpamodid  #顯示到畫面上
            NEXT FIELD inpamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpaowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpaowndp  #顯示到畫面上
            NEXT FIELD inpaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpaownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpaownid  #顯示到畫面上
            NEXT FIELD inpaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpapstid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpapstid  #顯示到畫面上
            NEXT FIELD inpapstid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.inpb004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpb004  #顯示到畫面上
            NEXT FIELD inpb004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.inpb006" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpb006  #顯示到畫面上
            NEXT FIELD inpb006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inpc001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site 
            CALL q_inaa001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpc001  #顯示到畫面上
            NEXT FIELD inpc001                     #返回原欄位
    

]]>
  </point>
  <point name="delete.before_ask" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_inpa_m.inpastus = 'X' THEN
      RETURN
   END IF   ]]>
  </point>
  <point name="detail_reproduce.body.table1.b_update" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   UPDATE aint820_detail 
      #更新key欄位
      SET inpb002 = 'N',
          inpb003 = 0,
          inpb006 = '',
          inpb007 = '']]>
  </point>
  <point name="global.variable" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE g_multi_inpc001       STRING
DEFINE  l_inpc          DYNAMIC ARRAY OF RECORD   #記錄產品特徵
        inpc001         LIKE inpc_t.inpc001
                        END RECORD]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL aint820_get_ooef004() RETURNING g_ooef004
      CALL cl_set_combo_scc_part('inpa001','2201','1') 
      CALL cl_set_combo_scc('inpa008','2203')
      CALL cl_set_combo_scc('inpa020','2204')
      CALL cl_set_combo_scc('inpa023','2205')
      CALL cl_set_combo_scc('inpa025','2206')
      CALL cl_set_combo_scc('inpa026','2206')
      CALL cl_set_combo_scc('inpa027','2206')
      CALL cl_set_combo_scc('inpa028','2206')
      CALL cl_set_combo_scc('inpa029','2206')
      CALL cl_set_combo_scc('inpa030','2206')
      CALL cl_set_combo_scc('inpa031','2207')
      CALL cl_set_combo_scc('inpa032','2208')
      CALL cl_set_combo_scc('inpa033','2208')
      CALL cl_set_combo_scc('inpa034','2208')
      CALL cl_set_combo_scc('inpa035','2208')
      CALL cl_set_combo_scc('inpa036','2208')
      CALL cl_set_combo_scc('inpa037','2208') 
      CALL cl_set_combo_scc('inpb001','2202')      ]]>
  </point>
  <point name="input.a.inpa002" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_inpa002_ref()
            IF NOT cl_null(g_inpa_m.inpa002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_inpa_m.inpa002
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpa_m.inpa002 = g_inpa_m_t.inpa002
                  CALL aint820_inpa002_ref()
                  NEXT FIELD CURRENT
               END IF
               CALL aint820_inpa002_ref()
            END IF ]]>
  </point>
  <point name="input.a.inpa003" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_inpa003_ref() 
            IF NOT cl_null(g_inpa_m.inpa003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_inpa_m.inpa003
               LET g_chkparam.arg2 = g_today
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpa_m.inpa003 = g_inpa_m_t.inpa003
                  CALL aint820_inpa003_ref() 
                  NEXT FIELD CURRENT
               END IF
               CALL aint820_inpa003_ref() 

            END IF 


]]>
  </point>
  <point name="input.a.inpa004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_person_desc(g_inpa_m.inpa004) RETURNING g_inpa_m.inpa004_desc
            DISPLAY BY NAME g_inpa_m.inpa004_desc
            IF NOT cl_null(g_inpa_m.inpa004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpa_m.inpa004   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpa_m.inpa004 = g_inpa_m_t.inpa004
                  CALL s_desc_get_person_desc(g_inpa_m.inpa004) RETURNING g_inpa_m.inpa004_desc
                  DISPLAY BY NAME g_inpa_m.inpa004_desc                  
                  NEXT FIELD CURRENT
               END IF
               CALL s_desc_get_person_desc(g_inpa_m.inpa004) RETURNING g_inpa_m.inpa004_desc
               DISPLAY BY NAME g_inpa_m.inpa004_desc            
            END IF 

]]>
  </point>
  <point name="input.a.inpa008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_inpa_m.inpa008) THEN   
#               IF NOT s_azzi650_chk_exist('2203',g_inpa_m.inpa008) THEN
#                  LET g_inpa_m.inpa008 = g_inpa_m_t.inpa008
#                  NEXT FIELD inpa008
#               END IF 
#            END IF   ]]>
  </point>
  <point name="input.a.inpa009" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa010" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa011" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa012" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa013" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa014" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa015" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa016" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint820_set_no_required()
            CALL aint820_set_required()]]>
  </point>
  <point name="input.a.inpa018" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa018) THEN 
               IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa018,'aint830') THEN
                  LET g_inpa_m.inpa018 = g_inpa_m_t.inpa018
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa018) RETURNING g_inpa_m.inpa018_desc
                  DISPLAY BY NAME g_inpa_m.inpa018_desc                    
                  NEXT FIELD inpa018
               ELSE   
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa018) RETURNING g_inpa_m.inpa018_desc
                  DISPLAY BY NAME g_inpa_m.inpa018_desc                
               END IF                  
            ELSE
               LET g_inpa_m.inpa018_desc = ''     
               DISPLAY BY NAME g_inpa_m.inpa018_desc               
            END IF]]>
  </point>
  <point name="input.a.inpa019" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa019) THEN
               IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa019,'aint830') THEN
                  LET g_inpa_m.inpa019 = g_inpa_m_t.inpa019
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa019) RETURNING g_inpa_m.inpa019_desc
                  DISPLAY BY NAME g_inpa_m.inpa019_desc                    
                  NEXT FIELD inpa019
               ELSE
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa019) RETURNING g_inpa_m.inpa019_desc
                  DISPLAY BY NAME g_inpa_m.inpa019_desc               
               END IF
            ELSE
               LET g_inpa_m.inpa019_desc = ''       
               DISPLAY BY NAME g_inpa_m.inpa019_desc                
            END IF]]>
  </point>
  <point name="input.a.inpa020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_inpa_m.inpa020) THEN   
#               IF NOT s_azzi650_chk_exist('2204',g_inpa_m.inpa020) THEN
#                  LET g_inpa_m.inpa020 = g_inpa_m_t.inpa020
#                  NEXT FIELD inpa020
#               END IF 
#            END IF ]]>
  </point>
  <point name="input.a.inpa021" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa021) THEN
               IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa021,'aint835') THEN
                  LET g_inpa_m.inpa021 = g_inpa_m_t.inpa021
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa021) RETURNING g_inpa_m.inpa021_desc
                  DISPLAY BY NAME g_inpa_m.inpa021_desc                    
                  NEXT FIELD inpa021
               ELSE
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa021) RETURNING g_inpa_m.inpa021_desc
                  DISPLAY BY NAME g_inpa_m.inpa021_desc                                 
               END IF
            ELSE
               LET g_inpa_m.inpa021_desc = ''
               DISPLAY BY NAME g_inpa_m.inpa021_desc                 
            END IF]]>
  </point>
  <point name="input.a.inpa022" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa022) THEN               
               IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa022,'aint835') THEN
                  LET g_inpa_m.inpa022 = g_inpa_m_t.inpa022
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa022) RETURNING g_inpa_m.inpa022_desc
                  DISPLAY BY NAME g_inpa_m.inpa022_desc                    
                  NEXT FIELD inpa022
               ELSE
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa022) RETURNING g_inpa_m.inpa022_desc
                  DISPLAY BY NAME g_inpa_m.inpa022_desc                     
               END IF
            ELSE 
               LET g_inpa_m.inpa022_desc = ''
               DISPLAY BY NAME g_inpa_m.inpa022_desc                   
            END IF]]>
  </point>
  <point name="input.a.inpa023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_inpa_m.inpa023) THEN                  
#               IF NOT s_azzi650_chk_exist('2205',g_inpa_m.inpa023) THEN
#                  LET g_inpa_m.inpa023 = g_inpa_m_t.inpa023
#                  NEXT FIELD inpa023
#               END IF 
#            END IF ]]>
  </point>
  <point name="input.a.inpa025" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            IF NOT cl_null(g_inpa_m.inpa025) THEN   
#               IF NOT s_azzi650_chk_exist('2206',g_inpa_m.inpa025) THEN
#                  LET g_inpa_m.inpa025 = g_inpa_m_t.inpa025
#                  NEXT FIELD inpa025
#               END IF 
#            END IF 
            IF NOT cl_null(g_inpa_m.inpa025) AND (g_inpa_m.inpa025 <> g_inpa_m_t.inpa025 OR g_inpa_m_t.inpa025 IS NULL) THEN
               IF NOT aint820_inpa025_chk(g_inpa_m.inpa025) THEN
                  LET g_inpa_m.inpa025 = g_inpa_m_t.inpa025
                  NEXT FIELD inpa025
               END IF
               IF NOT aint820_inpa025_chk_a('1',g_inpa_m.inpa025) THEN
                  LET g_inpa_m.inpa025 = g_inpa_m_t.inpa025
                  NEXT FIELD inpa025
               END IF
            END IF  
            CALL aint820_set_entry(p_cmd)
            CALL aint820_set_no_entry(p_cmd)            ]]>
  </point>
  <point name="input.a.inpa026" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa026) AND (g_inpa_m.inpa026 <> g_inpa_m_t.inpa026 OR g_inpa_m_t.inpa026 IS NULL) THEN
               IF NOT aint820_inpa025_chk(g_inpa_m.inpa026) THEN
                  LET g_inpa_m.inpa026 = g_inpa_m_t.inpa026
                  NEXT FIELD inpa026
               END IF
               IF NOT aint820_inpa025_chk_a('2',g_inpa_m.inpa026) THEN
                  LET g_inpa_m.inpa026 = g_inpa_m_t.inpa026
                  NEXT FIELD inpa026
               END IF               
            END IF
            CALL aint820_set_entry(p_cmd)
            CALL aint820_set_no_entry(p_cmd)              ]]>
  </point>
  <point name="input.a.inpa027" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa027) AND (g_inpa_m.inpa027 <> g_inpa_m_t.inpa027 OR g_inpa_m_t.inpa027 IS NULL) THEN
               IF NOT aint820_inpa025_chk(g_inpa_m.inpa027) THEN
                  LET g_inpa_m.inpa027 = g_inpa_m_t.inpa027
                  NEXT FIELD inpa027
               END IF
               IF NOT aint820_inpa025_chk_a('3',g_inpa_m.inpa027) THEN
                  LET g_inpa_m.inpa027 = g_inpa_m_t.inpa027
                  NEXT FIELD inpa027
               END IF                       
            END IF
            CALL aint820_set_entry(p_cmd)
            CALL aint820_set_no_entry(p_cmd)               ]]>
  </point>
  <point name="input.a.inpa028" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa028) AND (g_inpa_m.inpa028 <> g_inpa_m_t.inpa028 OR g_inpa_m_t.inpa028 IS NULL) THEN
               IF NOT aint820_inpa025_chk(g_inpa_m.inpa028) THEN
                  LET g_inpa_m.inpa028 = g_inpa_m_t.inpa028
                  NEXT FIELD inpa028
               END IF
               IF NOT aint820_inpa025_chk_a('4',g_inpa_m.inpa028) THEN
                  LET g_inpa_m.inpa028 = g_inpa_m_t.inpa028
                  NEXT FIELD inpa028
               END IF                       
            END IF      
            CALL aint820_set_entry(p_cmd)
            CALL aint820_set_no_entry(p_cmd)               ]]>
  </point>
  <point name="input.a.inpa029" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa029) AND (g_inpa_m.inpa029 <> g_inpa_m_t.inpa029 OR g_inpa_m_t.inpa029 IS NULL) THEN
               IF NOT aint820_inpa025_chk(g_inpa_m.inpa029) THEN
                  LET g_inpa_m.inpa029 = g_inpa_m_t.inpa029
                  NEXT FIELD inpa029
               END IF
               IF NOT aint820_inpa025_chk_a('5',g_inpa_m.inpa029) THEN
                  LET g_inpa_m.inpa029 = g_inpa_m_t.inpa029
                  NEXT FIELD inpa029
               END IF                      
            END IF    
            CALL aint820_set_entry(p_cmd)
            CALL aint820_set_no_entry(p_cmd)               ]]>
  </point>
  <point name="input.a.inpa030" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa030) AND (g_inpa_m.inpa030 <> g_inpa_m_t.inpa030 OR g_inpa_m_t.inpa030 IS NULL) THEN
               IF NOT aint820_inpa025_chk(g_inpa_m.inpa030) THEN
                  LET g_inpa_m.inpa030 = g_inpa_m_t.inpa030
                  NEXT FIELD inpa030
               END IF
               IF NOT aint820_inpa025_chk_a('6',g_inpa_m.inpa030) THEN
                  LET g_inpa_m.inpa030 = g_inpa_m_t.inpa030
                  NEXT FIELD inpa030
               END IF                       
            END IF
            CALL aint820_set_entry(p_cmd)
            CALL aint820_set_no_entry(p_cmd)               ]]>
  </point>
  <point name="input.a.inpa032" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa032) AND (g_inpa_m.inpa032 <> g_inpa_m_t.inpa032 OR g_inpa_m_t.inpa032 IS NULL) THEN
               IF NOT aint820_inpa037_chk(g_inpa_m.inpa032) THEN
                  LET g_inpa_m.inpa032 = g_inpa_m_t.inpa032
                  NEXT FIELD inpa032
               END IF
               IF NOT aint820_inpa032_chk_a('1',g_inpa_m.inpa032) THEN
                  LET g_inpa_m.inpa032 = g_inpa_m_t.inpa032
                  NEXT FIELD inpa032               
               END IF
            END IF]]>
  </point>
  <point name="input.a.inpa033" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa033) AND (g_inpa_m.inpa033 <> g_inpa_m_t.inpa033 OR g_inpa_m_t.inpa033 IS NULL) THEN
               IF NOT aint820_inpa037_chk(g_inpa_m.inpa033) THEN
                  LET g_inpa_m.inpa033 = g_inpa_m_t.inpa033
                  NEXT FIELD inpa033
               END IF
               IF NOT aint820_inpa032_chk_a('2',g_inpa_m.inpa033) THEN
                  LET g_inpa_m.inpa033 = g_inpa_m_t.inpa033
                  NEXT FIELD inpa033               
               END IF               
            END IF]]>
  </point>
  <point name="input.a.inpa034" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa034) AND (g_inpa_m.inpa034 <> g_inpa_m_t.inpa034 OR g_inpa_m_t.inpa034 IS NULL) THEN
               IF NOT aint820_inpa037_chk(g_inpa_m.inpa034) THEN
                  LET g_inpa_m.inpa034 = g_inpa_m_t.inpa034
                  NEXT FIELD inpa034
               END IF
               IF NOT aint820_inpa032_chk_a('3',g_inpa_m.inpa034) THEN
                  LET g_inpa_m.inpa034 = g_inpa_m_t.inpa034
                  NEXT FIELD inpa034              
               END IF               
            END IF]]>
  </point>
  <point name="input.a.inpa035" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa035) AND (g_inpa_m.inpa035 <> g_inpa_m_t.inpa035 OR g_inpa_m_t.inpa035 IS NULL) THEN
               IF NOT aint820_inpa037_chk(g_inpa_m.inpa035) THEN
                  LET g_inpa_m.inpa035 = g_inpa_m_t.inpa035
                  NEXT FIELD inpa035
               END IF
               IF NOT aint820_inpa032_chk_a('4',g_inpa_m.inpa035) THEN
                  LET g_inpa_m.inpa035 = g_inpa_m_t.inpa035
                  NEXT FIELD inpa035               
               END IF               
            END IF]]>
  </point>
  <point name="input.a.inpa036" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa036) AND (g_inpa_m.inpa036 <> g_inpa_m_t.inpa036 OR g_inpa_m_t.inpa036 IS NULL) THEN
               IF NOT aint820_inpa037_chk(g_inpa_m.inpa036) THEN
                  LET g_inpa_m.inpa036 = g_inpa_m_t.inpa036
                  NEXT FIELD inpa036
               END IF
               IF NOT aint820_inpa032_chk_a('5',g_inpa_m.inpa036) THEN
                  LET g_inpa_m.inpa036 = g_inpa_m_t.inpa036
                  NEXT FIELD inpa036               
               END IF               
            END IF]]>
  </point>
  <point name="input.a.inpa037" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa037) AND (g_inpa_m.inpa037 <> g_inpa_m_t.inpa037 OR g_inpa_m_t.inpa037 IS NULL) THEN
               IF NOT aint820_inpa037_chk(g_inpa_m.inpa037) THEN
                  LET g_inpa_m.inpa037 = g_inpa_m_t.inpa037
                  NEXT FIELD inpa037
               END IF
               IF NOT aint820_inpa032_chk_a('6',g_inpa_m.inpa037) THEN
                  LET g_inpa_m.inpa037 = g_inpa_m_t.inpa037
                  NEXT FIELD inpa037               
               END IF               
            END IF]]>
  </point>
  <point name="input.a.inpa050" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa050) THEN               
               IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa050,'aint302') THEN
                  LET g_inpa_m.inpa050 = g_inpa_m_t.inpa050
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa050) RETURNING g_inpa_m.inpa050_desc
                  DISPLAY BY NAME g_inpa_m.inpa050_desc                    
                  NEXT FIELD inpa050
               ELSE
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpa050) RETURNING g_inpa_m.inpa050_desc
                  DISPLAY BY NAME g_inpa_m.inpa050_desc                
               END IF
            ELSE   
               LET g_inpa_m.inpa050_desc = ''
               DISPLAY BY NAME g_inpa_m.inpa050_desc  
            END IF]]>
  </point>
  <point name="input.a.inpa051" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa051) THEN            
            IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa051,'aint301') THEN
               LET g_inpa_m.inpa051 = g_inpa_m_t.inpa051
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa051) RETURNING g_inpa_m.inpa051_desc
               DISPLAY BY NAME g_inpa_m.inpa051_desc                    
               NEXT FIELD inpa051
            ELSE
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa051) RETURNING g_inpa_m.inpa051_desc
               DISPLAY BY NAME g_inpa_m.inpa051_desc            
            END IF
            ELSE
               LET g_inpa_m.inpa051_desc = ''
               DISPLAY BY NAME g_inpa_m.inpa051_desc 
            END IF]]>
  </point>
  <point name="input.a.inpa052" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa052) THEN
            IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa052,'asft310') THEN
               LET g_inpa_m.inpa052 = g_inpa_m_t.inpa052
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa052) RETURNING g_inpa_m.inpa052_desc
               DISPLAY BY NAME g_inpa_m.inpa052_desc                    
               NEXT FIELD inpa052
            ELSE
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa052) RETURNING g_inpa_m.inpa052_desc
               DISPLAY BY NAME g_inpa_m.inpa052_desc               
            END IF
            ELSE
               LET g_inpa_m.inpa052_desc = ''
               DISPLAY BY NAME g_inpa_m.inpa052_desc        
            END IF]]>
  </point>
  <point name="input.a.inpa053" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa053) THEN
            IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa053,'asft320') THEN
               LET g_inpa_m.inpa053 = g_inpa_m_t.inpa053
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa053) RETURNING g_inpa_m.inpa053_desc
               DISPLAY BY NAME g_inpa_m.inpa053_desc                    
               NEXT FIELD inpa053
            ELSE
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa053) RETURNING g_inpa_m.inpa053_desc
               DISPLAY BY NAME g_inpa_m.inpa053_desc             
            END IF
            ELSE
               LET g_inpa_m.inpa053_desc = ''
               DISPLAY BY NAME g_inpa_m.inpa053_desc 
            END IF]]>
  </point>
  <point name="input.a.inpa054" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpa_m.inpa054) THEN
            IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpa054,'asft312') THEN
               LET g_inpa_m.inpa054 = g_inpa_m_t.inpa054
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa054) RETURNING g_inpa_m.inpa054_desc
               DISPLAY BY NAME g_inpa_m.inpa054_desc                    
               NEXT FIELD inpa054
            ELSE
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpa054) RETURNING g_inpa_m.inpa054_desc
               DISPLAY BY NAME g_inpa_m.inpa054_desc                   
            END IF
            ELSE
               LET g_inpa_m.inpa054_desc = ''
               DISPLAY BY NAME g_inpa_m.inpa054_desc  
            END IF]]>
  </point>
  <point name="input.a.inpadocno" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            #此段落由子樣板a05產生
            CALL s_aooi200_get_slip_desc(g_inpa_m.inpadocno) RETURNING g_inpa_m.inpadocno_desc
            IF  NOT cl_null(g_inpa_m.inpadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inpa_m.inpadocno != g_inpadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpa_t WHERE "||"inpaent = '" ||g_enterprise|| "' AND "||"inpadocno = '"||g_inpa_m.inpadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT s_aooi200_chk_slip(g_site,'',g_inpa_m.inpadocno,g_code) THEN
                  LET g_inpa_m.inpadocno = g_inpadocno_t
                  CALL s_aooi200_get_slip_desc(g_inpa_m.inpadocno) RETURNING g_inpa_m.inpadocno_desc
                  DISPLAY BY NAME g_inpa_m.inpadocno_desc                    
                  NEXT FIELD CURRENT
               END IF 
               CALL s_aooi200_get_slip_desc(g_inpa_m.inpadocno) RETURNING g_inpa_m.inpadocno_desc   
               DISPLAY BY NAME g_inpa_m.inpadocno_desc  
               
               CALL aint820_get_col_default()               
               CALL aint820_set_entry(p_cmd)
               CALL aint820_set_no_entry(p_cmd)  
               
            END IF

]]>
  </point>
  <point name="input.a.page1.inpb003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpb_d[l_ac].inpb003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.inpb004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb004) RETURNING g_inpb_d[l_ac].inpb004_desc
            DISPLAY BY NAME g_inpb_d[l_ac].inpb004_desc
            IF NOT cl_null(g_inpb_d[l_ac].inpb004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpb_d[l_ac].inpb004   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpb_d[l_ac].inpb004 = g_inpb_d_t.inpb004
                  CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb004) RETURNING g_inpb_d[l_ac].inpb004_desc
                  DISPLAY BY NAME g_inpb_d[l_ac].inpb004_desc                  
                  NEXT FIELD CURRENT
               END IF
               CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb004) RETURNING g_inpb_d[l_ac].inpb004_desc
               DISPLAY BY NAME g_inpb_d[l_ac].inpb004_desc            
            END IF ]]>
  </point>
  <point name="input.a.page1.inpb006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb006) RETURNING g_inpb_d[l_ac].inpb006_desc
            DISPLAY BY NAME g_inpb_d[l_ac].inpb006_desc            
            IF NOT cl_null(g_inpb_d[l_ac].inpb006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpb_d[l_ac].inpb006  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb006) RETURNING g_inpb_d[l_ac].inpb006_desc
                  DISPLAY BY NAME g_inpb_d[l_ac].inpb006_desc                  
                  NEXT FIELD CURRENT
               END IF
               CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb006) RETURNING g_inpb_d[l_ac].inpb006_desc
               DISPLAY BY NAME g_inpb_d[l_ac].inpb006_desc            
            END IF ]]>
  </point>
  <point name="input.a.page1.inpbseq" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpa_m.inpadocno IS NOT NULL AND g_inpb_d[g_detail_idx].inpbseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpa_m.inpadocno != g_inpadocno_t OR g_inpb_d[g_detail_idx].inpbseq != g_inpb_d_t.inpbseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpb_t WHERE "||"inpbent = '" ||g_enterprise|| "' AND "||"inpbdocno = '"||g_inpa_m.inpadocno ||"' AND "|| "inpbseq = '"||g_inpb_d[g_detail_idx].inpbseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inpc001" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_stock_desc(g_site,g_inpb2_d[l_ac].inpc001) RETURNING g_inpb2_d[l_ac].inpc001_desc
            DISPLAY BY NAME g_inpb2_d[l_ac].inpc001_desc               
            IF NOT cl_null(g_inpb2_d[l_ac].inpc001) THEN  
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_inpb2_d[l_ac].inpc001   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001_4") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpb2_d[l_ac].inpc001 = g_inpb2_d_t.inpc001
                  CALL s_desc_get_stock_desc(g_site,g_inpb2_d[l_ac].inpc001) RETURNING g_inpb2_d[l_ac].inpc001_desc
                  DISPLAY BY NAME g_inpb2_d[l_ac].inpc001_desc           
                  NEXT FIELD CURRENT
               END IF
               #檢核輸入的庫位是否在單據別限制範圍內，若不在限制內則不允許使用此庫位
            
               CALL s_control_chk_doc('6',g_inpa_m.inpadocno,g_inpb2_d[l_ac].inpc001,'','','','') RETURNING r_success,l_flag
               IF r_success THEN
                  IF NOT l_flag THEN
                     LET  g_inpb2_d[l_ac].inpc001 = g_inpb2_d_t.inpc001 
                     CALL s_desc_get_stock_desc(g_site,g_inpb2_d[l_ac].inpc001) RETURNING g_inpb2_d[l_ac].inpc001_desc
                     DISPLAY BY NAME g_inpb2_d[l_ac].inpc001_desc  
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  LET g_inpb2_d[l_ac].inpc001 = g_inpb2_d_t.inpc001
                  CALL s_desc_get_stock_desc(g_site,g_inpb2_d[l_ac].inpc001) RETURNING g_inpb2_d[l_ac].inpc001_desc
                  DISPLAY BY NAME g_inpb2_d[l_ac].inpc001_desc  
                  NEXT FIELD CURRENT
               END IF                 
               CALL s_desc_get_stock_desc(g_site,g_inpb2_d[l_ac].inpc001) RETURNING g_inpb2_d[l_ac].inpc001_desc
               DISPLAY BY NAME g_inpb2_d[l_ac].inpc001_desc    
               #[C:庫位]有值時，需呼叫應用元件取得該庫位是否有設置在庫存控制組中，
               #若有時需判斷該控制組是否與其他項次的庫位所對應的控制組一樣
               #若不一樣則需訊息告知，並將游標跳到[C:庫位]欄位供修改                           
            END IF   ]]>
  </point>
  <point name="input.a.page2.inpcseq" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpa_m.inpadocno IS NOT NULL AND g_inpb2_d[g_detail_idx].inpcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpa_m.inpadocno != g_inpadocno_t OR g_inpb2_d[g_detail_idx].inpcseq != g_inpb2_d_t.inpcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpc_t WHERE "||"inpcent = '" ||g_enterprise|| "' AND "||"inpcdocno = '"||g_inpa_m.inpadocno ||"' AND "|| "inpcseq = '"||g_inpb2_d[g_detail_idx].inpcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.after_define_sql" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql CLIPPED," AND inpbsite = '",g_site,"'"]]>
  </point>
  <point name="input.b.page1.inpbseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' AND cl_null(g_inpb_d[g_detail_idx].inpbseq) THEN
               SELECT MAX(inpbseq)+1 INTO g_inpb_d[g_detail_idx].inpbseq FROM inpb_t
                WHERE inpbent = g_enterprise
                  AND inpbdocno = g_inpa_m.inpadocno
               IF cl_null(g_inpb_d[g_detail_idx].inpbseq) THEN
                  LET g_inpb_d[g_detail_idx].inpbseq = 1
               END IF
               IF g_inpb_d[g_detail_idx].inpbseq = 1 THEN
                  LET g_inpb_d[g_detail_idx].inpb001 = '1'
               END IF
               CALL aint820_set_entry_b(l_cmd)
               CALL aint820_set_no_entry_b(l_cmd)
            END IF]]>
  </point>
  <point name="input.b.page2.inpcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' AND cl_null(g_inpb2_d[g_detail_idx].inpcseq) THEN 
               SELECT MAX(inpcseq)+1 INTO g_inpb2_d[g_detail_idx].inpcseq FROM inpc_t
                WHERE inpcent = g_enterprise
                  AND inpcdocno = g_inpa_m.inpadocno
               IF cl_null(g_inpb2_d[g_detail_idx].inpcseq) THEN
                  LET g_inpb2_d[g_detail_idx].inpcseq = 1
               END IF
            END IF   ]]>
  </point>
  <point name="input.before_input" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.body.b_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_inpb_d[l_ac].inpbseq = '1' THEN
                  CANCEL DELETE
               END IF]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inpb_d[l_ac].inpb004 = g_inpa_m.inpa002
            LET g_inpb_d[l_ac].inpb002 = 'N'

            CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb004) RETURNING g_inpb_d[l_ac].inpb004_desc
            DISPLAY BY NAME g_inpb_d[l_ac].inpb004_desc  
    
            IF l_cmd = 'a' AND cl_null(g_inpb_d[g_detail_idx].inpbseq) THEN
               SELECT MAX(inpbseq)+1 INTO g_inpb_d[g_detail_idx].inpbseq FROM inpb_t
                WHERE inpbent = g_enterprise
                  AND inpbdocno = g_inpa_m.inpadocno
               IF cl_null(g_inpb_d[g_detail_idx].inpbseq) THEN
                  LET g_inpb_d[g_detail_idx].inpbseq = 1
               END IF
               IF g_inpb_d[g_detail_idx].inpbseq = 1 THEN
                  LET g_inpb_d[g_detail_idx].inpb001 = '1'
               END IF
               CALL aint820_set_entry_b(l_cmd)
               CALL aint820_set_no_entry_b(l_cmd)
            END IF            ]]>
  </point>
  <point name="input.body2.after_insert" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_inpcseq = NULL
               IF l_inpc.getLength() > 1 THEN  #因為第一筆資料已呈現在畫面並寫入DB, 從第二筆開始處理 
                  FOR l_i = 2 TO l_inpc.getLength()
                     SELECT MAX(inpcseq)+1 INTO l_inpcseq FROM inpc_t 
                      WHERE inpcent = g_enterprise
                        AND inpcsite = g_site
                        AND inpcdocno = g_inpa_m.inpadocno
                     IF cl_null(l_inpcseq) THEN LET l_inpcseq = 1 END IF
                     INSERT INTO inpc_t (inpcent,inpcsite,inpcdocno,inpcseq,inpc001)
                                 VALUES (g_enterprise,g_site,g_inpa_m.inpadocno,l_inpcseq,l_inpc[l_i].inpc001)
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "inpc_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()    
                        EXIT FOR                        
                     END IF                                    
                  END FOR    
                  CALL aint820_b_fill()
                  LET g_rec_b = g_rec_b+l_inpc.getLength() - 1                   
               END IF               ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inpb2_d[g_detail_idx].inpcsite = g_site
            IF l_cmd = 'a' AND cl_null(g_inpb2_d[g_detail_idx].inpcseq) THEN 
               SELECT MAX(inpcseq)+1 INTO g_inpb2_d[g_detail_idx].inpcseq FROM inpc_t
                WHERE inpcent = g_enterprise
                  AND inpcdocno = g_inpa_m.inpadocno
               IF cl_null(g_inpb2_d[g_detail_idx].inpcseq) THEN
                  LET g_inpb2_d[g_detail_idx].inpcseq = 1
               END IF
            END IF   ]]>
  </point>
  <point name="input.c.inpa002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpa_m.inpa002 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa002 TO inpa002              #

            NEXT FIELD inpa002                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa003" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_inpa_m.inpa003 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa003 TO inpa003              #

            NEXT FIELD inpa003                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpa_m.inpa004 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa004 TO inpa004              #

            NEXT FIELD inpa004                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa018             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint830'
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa018 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa018 TO inpa018              #

            NEXT FIELD inpa018                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa019             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint830'
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa019 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa019 TO inpa019              #

            NEXT FIELD inpa019                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa021" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa021             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint835'
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa021 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa021 TO inpa021              #

            NEXT FIELD inpa021                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa022" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa022             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint835'
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa022 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa022 TO inpa022              #

            NEXT FIELD inpa022                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa050" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa050             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint302' 
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa050 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa050 TO inpa050              #

            NEXT FIELD inpa050                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa051" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa051             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'aint301'  
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa051 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa051 TO inpa051              #

            NEXT FIELD inpa051                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa052" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa052             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'asft310'   
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa052 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa052 TO inpa052              #

            NEXT FIELD inpa052                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa053" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa053             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'asft320' 
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa053 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa053 TO inpa053              #

            NEXT FIELD inpa053                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpa054" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpa054             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = 'asft312'  
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpa054 = g_qryparam.return1              

            DISPLAY g_inpa_m.inpa054 TO inpa054              #

            NEXT FIELD inpa054                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpa_m.inpadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = "aint820" #
            
            CALL q_ooba002_10()                                #呼叫開窗

            LET g_inpa_m.inpadocno = g_qryparam.return1              

            DISPLAY g_inpa_m.inpadocno TO inpadocno              #

            NEXT FIELD inpadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpb004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpb_d[l_ac].inpb004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpb_d[l_ac].inpb004 = g_qryparam.return1              

            DISPLAY g_inpb_d[l_ac].inpb004 TO inpb004              #

            NEXT FIELD inpb004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpb006" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpb_d[l_ac].inpb006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpb_d[l_ac].inpb006 = g_qryparam.return1              

            DISPLAY g_inpb_d[l_ac].inpb006 TO inpb006              #

            NEXT FIELD inpb006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.inpc001" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'     #add by lixh 20150312
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpb2_d[l_ac].inpc001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site
            
            CALL q_inaa001_4()                                #呼叫開窗
            
            LET g_multi_inpc001 = g_qryparam.return1 
            CALL aint820_get_multi_inpc001()  #add by lixh 20150312
            
           LET g_inpb2_d[l_ac].inpc001 = l_inpc[1].inpc001           

           DISPLAY g_inpb2_d[l_ac].inpc001 TO inpc001              
             
            NEXT FIELD inpc001                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  r_success             LIKE type_t.num5
   DEFINE  l_flag                LIKE type_t.num5 
   DEFINE  l_inpcseq             LIKE inpc_t.inpcseq  
]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_site,g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_prog) 
                    RETURNING r_success,g_inpa_m.inpadocno
                       
               IF NOT r_success THEN 
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF ]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               UPDATE inpa_t SET inpasite = g_site
                WHERE inpaent = g_enterprise
                  AND inpadocno = g_inpa_m.inpadocno
               IF SQLCA.sqlerrd[3] = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "g_inpa_m"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF                  ]]>
  </point>
  <point name="input.m.before_input" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_inpa_m_t.* = g_inpa_m.*]]>
  </point>
  <point name="insert.default" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_inpa_m.inpadocdt = g_today
      LET g_inpa_m.inpa002 = g_user
      CALL s_desc_get_person_desc(g_inpa_m.inpa002) RETURNING g_inpa_m.inpa002_desc
      DISPLAY BY NAME g_inpa_m.inpa002_desc      
      SELECT ooag003 INTO g_inpa_m.inpa003 FROM ooag_t
       WHERE ooagent = g_enterprise
         AND ooag001 = g_user
      CALL aint820_inpa003_ref()
      DISPLAY BY NAME g_inpa_m.inpa003,g_inpa_m.inpa003_desc      
      CALL cl_set_combo_scc_part('inpa001','2201','1') 
      CALL cl_set_combo_scc('inpa008','2203')
      CALL cl_set_combo_scc('inpa020','2204')
      CALL cl_set_combo_scc('inpa023','2205')
      CALL cl_set_combo_scc('inpa025','2206')
      CALL cl_set_combo_scc('inpa026','2206')
      CALL cl_set_combo_scc('inpa027','2206')
      CALL cl_set_combo_scc('inpa028','2206')
      CALL cl_set_combo_scc('inpa029','2206')
      CALL cl_set_combo_scc('inpa030','2206')
      CALL cl_set_combo_scc('inpa031','2207')
      CALL cl_set_combo_scc('inpa032','2208')
      CALL cl_set_combo_scc('inpa033','2208')
      CALL cl_set_combo_scc('inpa034','2208')
      CALL cl_set_combo_scc('inpa035','2208')
      CALL cl_set_combo_scc('inpa036','2208')
      CALL cl_set_combo_scc('inpa037','2208')
      LET g_inpa_m.inpa025 = '7'
      LET g_inpa_m.inpa026 = '7'
      LET g_inpa_m.inpa027 = '7'
      LET g_inpa_m.inpa028 = '7'
      LET g_inpa_m.inpa029 = '7'
      LET g_inpa_m.inpa030 = '7'
      LET g_inpa_m.inpa031 = ''
      LET g_inpa_m.inpa032 = '7'
      LET g_inpa_m.inpa033 = '7'
      LET g_inpa_m.inpa034 = '7'
      LET g_inpa_m.inpa035 = '7'
      LET g_inpa_m.inpa036 = '7'
      LET g_inpa_m.inpa037 = '7']]>
  </point>
  <point name="insert_b.after_insert" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      UPDATE inpb_t SET inpbsite = g_site
       WHERE inpbent = g_enterprise
         AND inpbdocno = ps_keys[1]
         AND inpbseq = ps_keys[2]
         
      IF SQLCA.sqlerrd[3] = 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "inpb_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      ]]>
  </point>
  <point name="main.after_define_sql" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql CLIPPED," AND inpasite = '",g_site,"'"  ]]>
  </point>
  <point name="main.after_refresh_sql" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql CLIPPED," AND t0.inpasite = '",g_site,"'"
               ]]>
  </point>
  <point name="modify.before_input" order="" ver="7" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_inpa_m.inpastus MATCHES "[DR]" THEN 
         LET g_inpa_m.inpastus = "N"
      END IF]]>
  </point>
  <point name="modify.before_show" order="" ver="7" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_inpa_m.inpastus NOT MATCHES '[NDR]' THEN
      RETURN
   END IF   ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_inpa_m.inpadocno_desc = '' 
   DISPLAY BY NAME g_inpa_m.inpadocno_desc
   LET g_inpa_m.inpadocdt = g_today
   LET g_inpa_m.inpa002 = g_user   
   LET g_inpa_m.inpa003 = g_dept
   CALL aint820_inpa002_ref()
   CALL aint820_inpa003_ref()]]>
  </point>
  <point name="send.before_send" order="" ver="7" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT s_aint820_conf_chk(g_inpa_m.inpadocno) THEN
      RETURN
   END IF]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="4" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_inpa_m.inpastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.after_control" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("inpa031",TRUE)
   CALL cl_set_comp_entry("inpadocdt,inpa002,inpa003,inpa004,inpa005,inpa040,inpa008,inpa009,inpa010,inpa011,inpa012,inpa013,inpa014,
                           inpa015,inpa016,inpa017,inpa018,inpa019,inpa020,inpa021,inpa022,inpa050,inpa051,inpa052,inpa053,inpa054,inpa023,
                           inpa024,inpa025,inpa026,inpa027,inpa028,inpa029,inpa030,inpa031,inpa032,inpa033,inpa034,inpa035,inpa036,inpa037",TRUE)]]>
  </point>
  <point name="set_entry.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_fields  STRING]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("inpb001,inpbseq",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_inpa_m.inpa025 <> '6' AND g_inpa_m.inpa026 <> '6' AND g_inpa_m.inpa027 <> '6' AND g_inpa_m.inpa028 <> '6'
      AND g_inpa_m.inpa029 <> '6' AND g_inpa_m.inpa030 <> '6' THEN
      CALL cl_set_comp_entry("inpa031",FALSE)
      LET g_inpa_m.inpa031 = ' '
   END IF  
   
   #依單據別設定判斷欄位是否需要做輸入控制
   IF NOT cl_null(g_inpa_m.inpadocno) THEN
      LET l_fields = ''
      CALL s_aooi200_get_doc_fields(g_site,'1',g_inpa_m.inpadocno) RETURNING l_fields
      CALL cl_set_comp_entry(l_fields,FALSE)
   END IF     ]]>
  </point>
  <point name="set_no_entry.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_fields  STRING]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_inpb_d[g_detail_idx].inpb001 = '1' THEN
      CALL cl_set_comp_entry("inpb001,inpbseq",FALSE)
   END IF
   
 
   ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
      CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb004) RETURNING g_inpb_d[l_ac].inpb004_desc

      CALL s_desc_get_person_desc(g_inpb_d[l_ac].inpb006) RETURNING g_inpb_d[l_ac].inpb006_desc
]]>
  </point>
  <point name="show.body2.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpb2_d[l_ac].inpc001
#            LET g_ref_fields[2] = g_site
#            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? AND inaasite=? ","") RETURNING g_rtn_fields
#            LET g_inpb2_d[l_ac].inpc001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpb2_d[l_ac].inpc001_desc
]]>
  </point>
  <point name="show.head.reference" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi200_get_slip_desc(g_inpa_m.inpadocno) RETURNING g_inpa_m.inpadocno_desc
   CALL s_desc_get_person_desc(g_inpa_m.inpa004) RETURNING g_inpa_m.inpa004_desc
   DISPLAY BY NAME g_inpa_m.inpa004_desc       
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpadocno
#            CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpadocno_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpadocno_desc
#
#            CALL aint820_inpa002_ref()
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpa003
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpa003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpa003_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpa018
#            CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpa018_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpa018_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpa019
#            CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpa019_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpa019_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpa021
#            CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpa021_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpa021_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpaownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpaownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpaownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpaowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpaowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpaowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpacrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpacrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpacrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpacrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpacrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpacrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpamodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpamodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpamodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpacnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpacnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpacnfid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpa_m.inpapstid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_inpa_m.inpapstid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpa_m.inpapstid_desc
]]>
  </point>
  <point name="statechange.b_update" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
      CALL s_transaction_begin()
      IF lc_state = 'Y' THEN
         CALL s_aint820_conf_chk(g_inpa_m.inpadocno) RETURNING r_success
         IF NOT r_success THEN
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00108') THEN
               RETURN
            ELSE
               CALL s_aint820_conf_upd(g_inpa_m.inpadocno) RETURNING r_success
               IF NOT r_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
         CALL aint820_b_fill()
      END IF
      IF lc_state = 'N' THEN
         CALL s_aint820_unconf_chk(g_inpa_m.inpadocno) RETURNING r_success
         IF NOT r_success THEN
            RETURN
         ELSE
            IF NOT cl_ask_confirm('ain-00267') THEN
               RETURN
            ELSE
               CALL s_aint820_unconf_upd(g_inpa_m.inpadocno) RETURNING r_success
               IF NOT r_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
         CALL aint820_b_fill()
      END IF
      IF lc_state = 'X' THEN
         CALL s_aint820_void_chk(g_inpa_m.inpadocno) RETURNING r_success
         IF NOT r_success THEN
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00109') THEN
               RETURN
            ELSE
               CALL s_aint820_void_upd(g_inpa_m.inpadocno) RETURNING r_success
               IF NOT r_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
      END IF
#   LET l_time = cl_get_current()
#   IF lc_state = 'Y' THEN
#      UPDATE inpa_t SET inpacnfid = g_user,
#                        inpacnfdt = l_time
#       WHERE inpaent = g_enterprise AND inpadocno = g_inpa_m.inpadocno          
#   END IF
#   IF lc_state = 'X' THEN
#      UPDATE inpa_t SET inpamodid = g_user,
#                        inpamoddt = l_time
#       WHERE inpaent = g_enterprise AND inpadocno = g_inpa_m.inpadocno          
#   END IF   
#   IF lc_state = 'N' THEN
#      UPDATE inpa_t SET inpacnfid = '',
#                        inpacnfdt = '',
#                        inpamodid = g_user,
#                        inpamoddt = l_time
#       WHERE inpaent = g_enterprise AND inpadocno = g_inpa_m.inpadocno          
#   END IF    ]]>
  </point>
  <point name="statechange.before" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_inpa_m.inpastus = 'X' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="7" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CASE g_inpa_m.inpastus
         WHEN "N"
            CALL cl_set_act_visible("unconfirmed",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE) 
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid",FALSE)

         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
            
         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed",FALSE)   
      END CASE               
               ]]>
  </point>
  <point name="statechange.define" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE r_success      LIKE type_t.num5]]>
  </point>
  <section id="aint820.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aint820_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint820.b_fill" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint820_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_inpb_d.clear()    #g_inpb_d 單頭及單身 
   CALL g_inpb2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint820_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE inpbseq,inpb001,inpb002,inpb003,inpb004,inpb005,inpb006,inpb007 , 
             t1.ooag011 ,t2.ooag011 FROM inpb_t",   
                     " INNER JOIN inpa_t ON inpadocno = inpbdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=inpb004  ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=inpb006  ",
 
                     " WHERE inpbent=? AND inpbdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY inpb_t.inpbseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint820_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aint820_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_inpa_m.inpadocno
                                               
      FOREACH b_fill_cs INTO g_inpb_d[l_ac].inpbseq,g_inpb_d[l_ac].inpb001,g_inpb_d[l_ac].inpb002,g_inpb_d[l_ac].inpb003, 
          g_inpb_d[l_ac].inpb004,g_inpb_d[l_ac].inpb005,g_inpb_d[l_ac].inpb006,g_inpb_d[l_ac].inpb007, 
          g_inpb_d[l_ac].inpb004_desc,g_inpb_d[l_ac].inpb006_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF aint820_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE inpcseq,inpc001,inpcsite ,t3.inayl003 FROM inpc_t",   
                     " INNER JOIN inpa_t ON inpadocno = inpcdocno ",
 
                     "",
                     
                                    " LEFT JOIN inayl_t t3 ON t3.inaylent='"||g_enterprise||"' AND t3.inayl001=inpc001 AND t3.inayl002='"||g_dlang||"' ",
 
                     " WHERE inpcent=? AND inpcdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY inpc_t.inpcseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint820_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR aint820_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_inpa_m.inpadocno
                                               
      FOREACH b_fill_cs2 INTO g_inpb2_d[l_ac].inpcseq,g_inpb2_d[l_ac].inpc001,g_inpb2_d[l_ac].inpcsite, 
          g_inpb2_d[l_ac].inpc001_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_inpb_d.deleteElement(g_inpb_d.getLength())
   CALL g_inpb2_d.deleteElement(g_inpb2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint820_pb
   FREE aint820_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_inpb_d.getLength()
      LET g_inpb_d_mask_o[l_ac].* =  g_inpb_d[l_ac].*
      CALL aint820_inpb_t_mask()
      LET g_inpb_d_mask_n[l_ac].* =  g_inpb_d[l_ac].*
   END FOR
   
   LET g_inpb2_d_mask_o.* =  g_inpb2_d.*
   FOR l_ac = 1 TO g_inpb2_d.getLength()
      LET g_inpb2_d_mask_o[l_ac].* =  g_inpb2_d[l_ac].*
      CALL aint820_inpc_t_mask()
      LET g_inpb2_d_mask_n[l_ac].* =  g_inpb2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aint820.b_fill2" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint820_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint820_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aint820.browser_fill" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint820_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE inpadocno ",
                      " FROM inpa_t ",
                      " ",
                      " LEFT JOIN inpb_t ON inpbent = inpaent AND inpadocno = inpbdocno ", "  ",
                      #add-point:browser_fill段sql(inpb_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN inpc_t ON inpcent = inpaent AND inpadocno = inpcdocno", "  ",
                      #add-point:browser_fill段sql(inpc_t1)
                      {<point name="browser_fill.cnt.join.inpc_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE inpaent = '" ||g_enterprise|| "' AND inpbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("inpa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE inpadocno ",
                      " FROM inpa_t ", 
                      "  ",
                      "  ",
                      " WHERE inpaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("inpa_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_inpa_m.* TO NULL
      CALL g_inpb_d.clear()        
      CALL g_inpb2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.inpadocno,t0.inpadocdt,t0.inpa002,t0.inpa003,t0.inpa004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.inpastus,t0.inpadocno,t0.inpadocdt,t0.inpa002,t0.inpa003,t0.inpa004, 
       t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ",
               " FROM inpa_t t0",
               "  ",
               "  LEFT JOIN inpb_t ON inpbent = inpaent AND inpadocno = inpbdocno ", "  ", 
               #add-point:browser_fill段sql(inpb_t1)
               {<point name="browser_fill.join.inpb_t1"/>}
               #end add-point
               "  LEFT JOIN inpc_t ON inpcent = inpaent AND inpadocno = inpcdocno", "  ", 
               #add-point:browser_fill段sql(inpc_t1)
               {<point name="browser_fill.join.inpc_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.inpa002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.inpa003 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.inpa004  ",
 
               " WHERE t0.inpaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("inpa_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY inpadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"inpa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_inpadocno,g_browser[g_cnt].b_inpadocdt, 
       g_browser[g_cnt].b_inpa002,g_browser[g_cnt].b_inpa003,g_browser[g_cnt].b_inpa004,g_browser[g_cnt].b_inpa002_desc, 
       g_browser[g_cnt].b_inpa003_desc,g_browser[g_cnt].b_inpa004_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aint820_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "T"
            LET g_browser[g_cnt].b_statepic = "stus/16/org_approved.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_inpadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aint820.construct" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint820_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_inpa_m.* TO NULL
   CALL g_inpb_d.clear()        
   CALL g_inpb2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON inpadocno,inpadocdt,inpa002,inpa001,inpa003,inpastus,inpa004,inpa005, 
          inpa006,inpa040,inpa041,inpa007,inpa008,inpa009,inpa010,inpa011,inpa012,inpa013,inpa014,inpa015, 
          inpa016,inpa017,inpa018,inpa019,inpa020,inpa021,inpa022,inpa050,inpa051,inpa052,inpa053,inpa054, 
          inpa023,inpa024,inpa025,inpa026,inpa027,inpa028,inpa029,inpa030,inpa031,inpa032,inpa033,inpa034, 
          inpa035,inpa036,inpa037,inpaownid,inpaowndp,inpacrtid,inpacrtdp,inpacrtdt,inpamodid,inpamoddt, 
          inpacnfid,inpacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<inpacrtdt>>----
         AFTER FIELD inpacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<inpamoddt>>----
         AFTER FIELD inpamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpacnfdt>>----
         AFTER FIELD inpacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.inpadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpadocno
            #add-point:ON ACTION controlp INFIELD inpadocno
            {<point name="construct.c.inpadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpadocno
            #add-point:BEFORE FIELD inpadocno
            {<point name="construct.b.inpadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpadocno
            
            #add-point:AFTER FIELD inpadocno
            {<point name="construct.a.inpadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpadocdt
            #add-point:BEFORE FIELD inpadocdt
            {<point name="construct.b.inpadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpadocdt
            
            #add-point:AFTER FIELD inpadocdt
            {<point name="construct.a.inpadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpadocdt
            #add-point:ON ACTION controlp INFIELD inpadocdt
            {<point name="construct.c.inpadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inpa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa002
            #add-point:ON ACTION controlp INFIELD inpa002
            {<point name="construct.c.inpa002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa002
            #add-point:BEFORE FIELD inpa002
            {<point name="construct.b.inpa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa002
            
            #add-point:AFTER FIELD inpa002
            {<point name="construct.a.inpa002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa001
            #add-point:BEFORE FIELD inpa001
            {<point name="construct.b.inpa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa001
            
            #add-point:AFTER FIELD inpa001
            {<point name="construct.a.inpa001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa001
            #add-point:ON ACTION controlp INFIELD inpa001
            {<point name="construct.c.inpa001" />}
            #END add-point
 
         #Ctrlp:construct.c.inpa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa003
            #add-point:ON ACTION controlp INFIELD inpa003
            {<point name="construct.c.inpa003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa003
            #add-point:BEFORE FIELD inpa003
            {<point name="construct.b.inpa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa003
            
            #add-point:AFTER FIELD inpa003
            {<point name="construct.a.inpa003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpastus
            #add-point:BEFORE FIELD inpastus
            {<point name="construct.b.inpastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpastus
            
            #add-point:AFTER FIELD inpastus
            {<point name="construct.a.inpastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpastus
            #add-point:ON ACTION controlp INFIELD inpastus
            {<point name="construct.c.inpastus" />}
            #END add-point
 
         #Ctrlp:construct.c.inpa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa004
            #add-point:ON ACTION controlp INFIELD inpa004
            {<point name="construct.c.inpa004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa004
            #add-point:BEFORE FIELD inpa004
            {<point name="construct.b.inpa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa004
            
            #add-point:AFTER FIELD inpa004
            {<point name="construct.a.inpa004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa005
            #add-point:BEFORE FIELD inpa005
            {<point name="construct.b.inpa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa005
            
            #add-point:AFTER FIELD inpa005
            {<point name="construct.a.inpa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa005
            #add-point:ON ACTION controlp INFIELD inpa005
            {<point name="construct.c.inpa005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa006
            #add-point:BEFORE FIELD inpa006
            {<point name="construct.b.inpa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa006
            
            #add-point:AFTER FIELD inpa006
            {<point name="construct.a.inpa006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa006
            #add-point:ON ACTION controlp INFIELD inpa006
            {<point name="construct.c.inpa006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa040
            #add-point:BEFORE FIELD inpa040
            {<point name="construct.b.inpa040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa040
            
            #add-point:AFTER FIELD inpa040
            {<point name="construct.a.inpa040" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa040
            #add-point:ON ACTION controlp INFIELD inpa040
            {<point name="construct.c.inpa040" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa041
            #add-point:BEFORE FIELD inpa041
            {<point name="construct.b.inpa041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa041
            
            #add-point:AFTER FIELD inpa041
            {<point name="construct.a.inpa041" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa041
            #add-point:ON ACTION controlp INFIELD inpa041
            {<point name="construct.c.inpa041" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa007
            #add-point:BEFORE FIELD inpa007
            {<point name="construct.b.inpa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa007
            
            #add-point:AFTER FIELD inpa007
            {<point name="construct.a.inpa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa007
            #add-point:ON ACTION controlp INFIELD inpa007
            {<point name="construct.c.inpa007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa008
            #add-point:BEFORE FIELD inpa008
            {<point name="construct.b.inpa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa008
            
            #add-point:AFTER FIELD inpa008
            {<point name="construct.a.inpa008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa008
            #add-point:ON ACTION controlp INFIELD inpa008
            {<point name="construct.c.inpa008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa009
            #add-point:BEFORE FIELD inpa009
            {<point name="construct.b.inpa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa009
            
            #add-point:AFTER FIELD inpa009
            {<point name="construct.a.inpa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa009
            #add-point:ON ACTION controlp INFIELD inpa009
            {<point name="construct.c.inpa009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa010
            #add-point:BEFORE FIELD inpa010
            {<point name="construct.b.inpa010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa010
            
            #add-point:AFTER FIELD inpa010
            {<point name="construct.a.inpa010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa010
            #add-point:ON ACTION controlp INFIELD inpa010
            {<point name="construct.c.inpa010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa011
            #add-point:BEFORE FIELD inpa011
            {<point name="construct.b.inpa011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa011
            
            #add-point:AFTER FIELD inpa011
            {<point name="construct.a.inpa011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa011
            #add-point:ON ACTION controlp INFIELD inpa011
            {<point name="construct.c.inpa011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa012
            #add-point:BEFORE FIELD inpa012
            {<point name="construct.b.inpa012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa012
            
            #add-point:AFTER FIELD inpa012
            {<point name="construct.a.inpa012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa012
            #add-point:ON ACTION controlp INFIELD inpa012
            {<point name="construct.c.inpa012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa013
            #add-point:BEFORE FIELD inpa013
            {<point name="construct.b.inpa013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa013
            
            #add-point:AFTER FIELD inpa013
            {<point name="construct.a.inpa013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa013
            #add-point:ON ACTION controlp INFIELD inpa013
            {<point name="construct.c.inpa013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa014
            #add-point:BEFORE FIELD inpa014
            {<point name="construct.b.inpa014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa014
            
            #add-point:AFTER FIELD inpa014
            {<point name="construct.a.inpa014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa014
            #add-point:ON ACTION controlp INFIELD inpa014
            {<point name="construct.c.inpa014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa015
            #add-point:BEFORE FIELD inpa015
            {<point name="construct.b.inpa015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa015
            
            #add-point:AFTER FIELD inpa015
            {<point name="construct.a.inpa015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa015
            #add-point:ON ACTION controlp INFIELD inpa015
            {<point name="construct.c.inpa015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa016
            #add-point:BEFORE FIELD inpa016
            {<point name="construct.b.inpa016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa016
            
            #add-point:AFTER FIELD inpa016
            {<point name="construct.a.inpa016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa016
            #add-point:ON ACTION controlp INFIELD inpa016
            {<point name="construct.c.inpa016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa017
            #add-point:BEFORE FIELD inpa017
            {<point name="construct.b.inpa017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa017
            
            #add-point:AFTER FIELD inpa017
            {<point name="construct.a.inpa017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa017
            #add-point:ON ACTION controlp INFIELD inpa017
            {<point name="construct.c.inpa017" />}
            #END add-point
 
         #Ctrlp:construct.c.inpa018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa018
            #add-point:ON ACTION controlp INFIELD inpa018
            {<point name="construct.c.inpa018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa018
            #add-point:BEFORE FIELD inpa018
            {<point name="construct.b.inpa018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa018
            
            #add-point:AFTER FIELD inpa018
            {<point name="construct.a.inpa018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa019
            #add-point:ON ACTION controlp INFIELD inpa019
            {<point name="construct.c.inpa019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa019
            #add-point:BEFORE FIELD inpa019
            {<point name="construct.b.inpa019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa019
            
            #add-point:AFTER FIELD inpa019
            {<point name="construct.a.inpa019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa020
            #add-point:BEFORE FIELD inpa020
            {<point name="construct.b.inpa020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa020
            
            #add-point:AFTER FIELD inpa020
            {<point name="construct.a.inpa020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa020
            #add-point:ON ACTION controlp INFIELD inpa020
            {<point name="construct.c.inpa020" />}
            #END add-point
 
         #Ctrlp:construct.c.inpa021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa021
            #add-point:ON ACTION controlp INFIELD inpa021
            {<point name="construct.c.inpa021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa021
            #add-point:BEFORE FIELD inpa021
            {<point name="construct.b.inpa021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa021
            
            #add-point:AFTER FIELD inpa021
            {<point name="construct.a.inpa021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa022
            #add-point:ON ACTION controlp INFIELD inpa022
            {<point name="construct.c.inpa022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa022
            #add-point:BEFORE FIELD inpa022
            {<point name="construct.b.inpa022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa022
            
            #add-point:AFTER FIELD inpa022
            {<point name="construct.a.inpa022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa050
            #add-point:ON ACTION controlp INFIELD inpa050
            {<point name="construct.c.inpa050" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa050
            #add-point:BEFORE FIELD inpa050
            {<point name="construct.b.inpa050" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa050
            
            #add-point:AFTER FIELD inpa050
            {<point name="construct.a.inpa050" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa051
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa051
            #add-point:ON ACTION controlp INFIELD inpa051
            {<point name="construct.c.inpa051" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa051
            #add-point:BEFORE FIELD inpa051
            {<point name="construct.b.inpa051" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa051
            
            #add-point:AFTER FIELD inpa051
            {<point name="construct.a.inpa051" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa052
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa052
            #add-point:ON ACTION controlp INFIELD inpa052
            {<point name="construct.c.inpa052" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa052
            #add-point:BEFORE FIELD inpa052
            {<point name="construct.b.inpa052" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa052
            
            #add-point:AFTER FIELD inpa052
            {<point name="construct.a.inpa052" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa053
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa053
            #add-point:ON ACTION controlp INFIELD inpa053
            {<point name="construct.c.inpa053" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa053
            #add-point:BEFORE FIELD inpa053
            {<point name="construct.b.inpa053" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa053
            
            #add-point:AFTER FIELD inpa053
            {<point name="construct.a.inpa053" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa054
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa054
            #add-point:ON ACTION controlp INFIELD inpa054
            {<point name="construct.c.inpa054" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa054
            #add-point:BEFORE FIELD inpa054
            {<point name="construct.b.inpa054" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa054
            
            #add-point:AFTER FIELD inpa054
            {<point name="construct.a.inpa054" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa023
            #add-point:BEFORE FIELD inpa023
            {<point name="construct.b.inpa023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa023
            
            #add-point:AFTER FIELD inpa023
            {<point name="construct.a.inpa023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa023
            #add-point:ON ACTION controlp INFIELD inpa023
            {<point name="construct.c.inpa023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa024
            #add-point:BEFORE FIELD inpa024
            {<point name="construct.b.inpa024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa024
            
            #add-point:AFTER FIELD inpa024
            {<point name="construct.a.inpa024" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa024
            #add-point:ON ACTION controlp INFIELD inpa024
            {<point name="construct.c.inpa024" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa025
            #add-point:BEFORE FIELD inpa025
            {<point name="construct.b.inpa025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa025
            
            #add-point:AFTER FIELD inpa025
            {<point name="construct.a.inpa025" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa025
            #add-point:ON ACTION controlp INFIELD inpa025
            {<point name="construct.c.inpa025" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa026
            #add-point:BEFORE FIELD inpa026
            {<point name="construct.b.inpa026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa026
            
            #add-point:AFTER FIELD inpa026
            {<point name="construct.a.inpa026" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa026
            #add-point:ON ACTION controlp INFIELD inpa026
            {<point name="construct.c.inpa026" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa027
            #add-point:BEFORE FIELD inpa027
            {<point name="construct.b.inpa027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa027
            
            #add-point:AFTER FIELD inpa027
            {<point name="construct.a.inpa027" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa027
            #add-point:ON ACTION controlp INFIELD inpa027
            {<point name="construct.c.inpa027" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa028
            #add-point:BEFORE FIELD inpa028
            {<point name="construct.b.inpa028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa028
            
            #add-point:AFTER FIELD inpa028
            {<point name="construct.a.inpa028" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa028
            #add-point:ON ACTION controlp INFIELD inpa028
            {<point name="construct.c.inpa028" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa029
            #add-point:BEFORE FIELD inpa029
            {<point name="construct.b.inpa029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa029
            
            #add-point:AFTER FIELD inpa029
            {<point name="construct.a.inpa029" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa029
            #add-point:ON ACTION controlp INFIELD inpa029
            {<point name="construct.c.inpa029" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa030
            #add-point:BEFORE FIELD inpa030
            {<point name="construct.b.inpa030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa030
            
            #add-point:AFTER FIELD inpa030
            {<point name="construct.a.inpa030" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa030
            #add-point:ON ACTION controlp INFIELD inpa030
            {<point name="construct.c.inpa030" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa031
            #add-point:BEFORE FIELD inpa031
            {<point name="construct.b.inpa031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa031
            
            #add-point:AFTER FIELD inpa031
            {<point name="construct.a.inpa031" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa031
            #add-point:ON ACTION controlp INFIELD inpa031
            {<point name="construct.c.inpa031" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa032
            #add-point:BEFORE FIELD inpa032
            {<point name="construct.b.inpa032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa032
            
            #add-point:AFTER FIELD inpa032
            {<point name="construct.a.inpa032" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa032
            #add-point:ON ACTION controlp INFIELD inpa032
            {<point name="construct.c.inpa032" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa033
            #add-point:BEFORE FIELD inpa033
            {<point name="construct.b.inpa033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa033
            
            #add-point:AFTER FIELD inpa033
            {<point name="construct.a.inpa033" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa033
            #add-point:ON ACTION controlp INFIELD inpa033
            {<point name="construct.c.inpa033" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa034
            #add-point:BEFORE FIELD inpa034
            {<point name="construct.b.inpa034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa034
            
            #add-point:AFTER FIELD inpa034
            {<point name="construct.a.inpa034" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa034
            #add-point:ON ACTION controlp INFIELD inpa034
            {<point name="construct.c.inpa034" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa035
            #add-point:BEFORE FIELD inpa035
            {<point name="construct.b.inpa035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa035
            
            #add-point:AFTER FIELD inpa035
            {<point name="construct.a.inpa035" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa035
            #add-point:ON ACTION controlp INFIELD inpa035
            {<point name="construct.c.inpa035" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa036
            #add-point:BEFORE FIELD inpa036
            {<point name="construct.b.inpa036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa036
            
            #add-point:AFTER FIELD inpa036
            {<point name="construct.a.inpa036" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa036
            #add-point:ON ACTION controlp INFIELD inpa036
            {<point name="construct.c.inpa036" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa037
            #add-point:BEFORE FIELD inpa037
            {<point name="construct.b.inpa037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa037
            
            #add-point:AFTER FIELD inpa037
            {<point name="construct.a.inpa037" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpa037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa037
            #add-point:ON ACTION controlp INFIELD inpa037
            {<point name="construct.c.inpa037" />}
            #END add-point
 
         #Ctrlp:construct.c.inpaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpaownid
            #add-point:ON ACTION controlp INFIELD inpaownid
            {<point name="construct.c.inpaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpaownid
            #add-point:BEFORE FIELD inpaownid
            {<point name="construct.b.inpaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpaownid
            
            #add-point:AFTER FIELD inpaownid
            {<point name="construct.a.inpaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpaowndp
            #add-point:ON ACTION controlp INFIELD inpaowndp
            {<point name="construct.c.inpaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpaowndp
            #add-point:BEFORE FIELD inpaowndp
            {<point name="construct.b.inpaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpaowndp
            
            #add-point:AFTER FIELD inpaowndp
            {<point name="construct.a.inpaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpacrtid
            #add-point:ON ACTION controlp INFIELD inpacrtid
            {<point name="construct.c.inpacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpacrtid
            #add-point:BEFORE FIELD inpacrtid
            {<point name="construct.b.inpacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpacrtid
            
            #add-point:AFTER FIELD inpacrtid
            {<point name="construct.a.inpacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpacrtdp
            #add-point:ON ACTION controlp INFIELD inpacrtdp
            {<point name="construct.c.inpacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpacrtdp
            #add-point:BEFORE FIELD inpacrtdp
            {<point name="construct.b.inpacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpacrtdp
            
            #add-point:AFTER FIELD inpacrtdp
            {<point name="construct.a.inpacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpacrtdt
            #add-point:BEFORE FIELD inpacrtdt
            {<point name="construct.b.inpacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inpamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpamodid
            #add-point:ON ACTION controlp INFIELD inpamodid
            {<point name="construct.c.inpamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpamodid
            #add-point:BEFORE FIELD inpamodid
            {<point name="construct.b.inpamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpamodid
            
            #add-point:AFTER FIELD inpamodid
            {<point name="construct.a.inpamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpamoddt
            #add-point:BEFORE FIELD inpamoddt
            {<point name="construct.b.inpamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.inpacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpacnfid
            #add-point:ON ACTION controlp INFIELD inpacnfid
            {<point name="construct.c.inpacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpacnfid
            #add-point:BEFORE FIELD inpacnfid
            {<point name="construct.b.inpacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpacnfid
            
            #add-point:AFTER FIELD inpacnfid
            {<point name="construct.a.inpacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpacnfdt
            #add-point:BEFORE FIELD inpacnfdt
            {<point name="construct.b.inpacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON inpbseq,inpb001,inpb002,inpb004,inpb005,inpb006,inpb007
           FROM s_detail1[1].inpbseq,s_detail1[1].inpb001,s_detail1[1].inpb002,s_detail1[1].inpb004, 
               s_detail1[1].inpb005,s_detail1[1].inpb006,s_detail1[1].inpb007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpbseq
            #add-point:BEFORE FIELD inpbseq
            {<point name="construct.b.page1.inpbseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpbseq
            
            #add-point:AFTER FIELD inpbseq
            {<point name="construct.a.page1.inpbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inpbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpbseq
            #add-point:ON ACTION controlp INFIELD inpbseq
            {<point name="construct.c.page1.inpbseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb001
            #add-point:BEFORE FIELD inpb001
            {<point name="construct.b.page1.inpb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb001
            
            #add-point:AFTER FIELD inpb001
            {<point name="construct.a.page1.inpb001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inpb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb001
            #add-point:ON ACTION controlp INFIELD inpb001
            {<point name="construct.c.page1.inpb001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb002
            #add-point:BEFORE FIELD inpb002
            {<point name="construct.b.page1.inpb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb002
            
            #add-point:AFTER FIELD inpb002
            {<point name="construct.a.page1.inpb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inpb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb002
            #add-point:ON ACTION controlp INFIELD inpb002
            {<point name="construct.c.page1.inpb002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inpb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb004
            #add-point:ON ACTION controlp INFIELD inpb004
            {<point name="construct.c.page1.inpb004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb004
            #add-point:BEFORE FIELD inpb004
            {<point name="construct.b.page1.inpb004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb004
            
            #add-point:AFTER FIELD inpb004
            {<point name="construct.a.page1.inpb004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb005
            #add-point:BEFORE FIELD inpb005
            {<point name="construct.b.page1.inpb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb005
            
            #add-point:AFTER FIELD inpb005
            {<point name="construct.a.page1.inpb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inpb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb005
            #add-point:ON ACTION controlp INFIELD inpb005
            {<point name="construct.c.page1.inpb005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.inpb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb006
            #add-point:ON ACTION controlp INFIELD inpb006
            {<point name="construct.c.page1.inpb006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb006
            #add-point:BEFORE FIELD inpb006
            {<point name="construct.b.page1.inpb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb006
            
            #add-point:AFTER FIELD inpb006
            {<point name="construct.a.page1.inpb006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb007
            #add-point:BEFORE FIELD inpb007
            {<point name="construct.b.page1.inpb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb007
            
            #add-point:AFTER FIELD inpb007
            {<point name="construct.a.page1.inpb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.inpb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb007
            #add-point:ON ACTION controlp INFIELD inpb007
            {<point name="construct.c.page1.inpb007" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON inpcseq,inpc001,inpcsite
           FROM s_detail2[1].inpcseq,s_detail2[1].inpc001,s_detail2[1].inpcsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpcseq
            #add-point:BEFORE FIELD inpcseq
            {<point name="construct.b.page2.inpcseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpcseq
            
            #add-point:AFTER FIELD inpcseq
            {<point name="construct.a.page2.inpcseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inpcseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpcseq
            #add-point:ON ACTION controlp INFIELD inpcseq
            {<point name="construct.c.page2.inpcseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inpc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpc001
            #add-point:ON ACTION controlp INFIELD inpc001
            {<point name="construct.c.page2.inpc001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpc001
            #add-point:BEFORE FIELD inpc001
            {<point name="construct.b.page2.inpc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpc001
            
            #add-point:AFTER FIELD inpc001
            {<point name="construct.a.page2.inpc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpcsite
            #add-point:BEFORE FIELD inpcsite
            {<point name="construct.b.page2.inpcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpcsite
            
            #add-point:AFTER FIELD inpcsite
            {<point name="construct.a.page2.inpcsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inpcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpcsite
            #add-point:ON ACTION controlp INFIELD inpcsite
            {<point name="construct.c.page2.inpcsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint820.default_search" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint820_default_search()
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " inpadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aint820.delete" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint820_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_inpa_m.inpadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aint820_cl USING g_enterprise,g_inpa_m.inpadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint820_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint820_master_referesh USING g_inpa_m.inpadocno INTO g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
       g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005, 
       g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
       g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015, 
       g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021, 
       g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
       g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028, 
       g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
       g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid, 
       g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid, 
       g_inpa_m.inpacnfdt,g_inpa_m.inpa002_desc,g_inpa_m.inpa003_desc,g_inpa_m.inpa004_desc,g_inpa_m.inpa018_desc, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa021_desc,g_inpa_m.inpa022_desc,g_inpa_m.inpa050_desc,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052_desc,g_inpa_m.inpa053_desc,g_inpa_m.inpa054_desc,g_inpa_m.inpaownid_desc,g_inpa_m.inpaowndp_desc, 
       g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpamodid_desc,g_inpa_m.inpacnfid_desc 

   
   #檢查是否允許此動作
   IF NOT aint820_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_inpa_m_mask_o.* =  g_inpa_m.*
   CALL aint820_inpa_t_mask()
   LET g_inpa_m_mask_n.* =  g_inpa_m.*
   
   CALL aint820_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aint820_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_inpadocno_t = g_inpa_m.inpadocno
 
 
      DELETE FROM inpa_t
       WHERE inpaent = g_enterprise AND inpadocno = g_inpa_m.inpadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_inpa_m.inpadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM inpb_t
       WHERE inpbent = g_enterprise AND inpbdocno = g_inpa_m.inpadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inpb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM inpc_t
       WHERE inpcent = g_enterprise AND
             inpcdocno = g_inpa_m.inpadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inpc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aint820_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_inpb_d.clear() 
      CALL g_inpb2_d.clear()       
 
     
      CALL aint820_ui_browser_refresh()  
      #CALL aint820_ui_headershow()  
      #CALL aint820_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aint820_browser_fill("")
         CALL aint820_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE aint820_cl
 
   #功能已完成,通報訊息中心
   CALL aint820_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="aint820.delete_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint820_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM inpb_t
       WHERE inpbent = g_enterprise AND
         inpbdocno = ps_keys_bak[1] AND inpbseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_inpb_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM inpc_t
       WHERE inpcent = g_enterprise AND
             inpcdocno = ps_keys_bak[1] AND inpcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inpc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_inpb2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint820.description" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:7,PR版次:7) Build-000122
#+ 
#+ Filename...: aint820
#+ Description: 實地盤點計畫維護作業
#+ Creator....: 01534(2014-05-20 10:43:30)
#+ Modifier...: 02295(2015-04-16 16:40:14) -SD/PR-
]]>
  </section>
  <section id="aint820.detail_reproduce" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint820_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE inpb_t.*
   DEFINE l_detail2    RECORD LIKE inpc_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint820_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint820_detail AS ",
                "SELECT * FROM inpb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint820_detail SELECT * FROM inpb_t 
                                         WHERE inpbent = g_enterprise AND inpbdocno = g_inpadocno_t
 
   
   #將key修正為調整後   
   UPDATE aint820_detail 
      #更新key欄位
      SET inpbdocno = g_inpa_m.inpadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO inpb_t SELECT * FROM aint820_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint820_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aint820_detail AS ",
      "SELECT * FROM inpc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint820_detail SELECT * FROM inpc_t
                                         WHERE inpcent = g_enterprise AND inpcdocno = g_inpadocno_t
 
 
   #將key修正為調整後   
   UPDATE aint820_detail SET inpcdocno = g_inpa_m.inpadocno
 
  
   #將資料塞回原table   
   INSERT INTO inpc_t SELECT * FROM aint820_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint820_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_inpadocno_t = g_inpa_m.inpadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="aint820.detail_show" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint820_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint820.fetch" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint820_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_inpa_m.inpadocno = g_browser[g_current_idx].b_inpadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint820_master_referesh USING g_inpa_m.inpadocno INTO g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
       g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005, 
       g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
       g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015, 
       g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021, 
       g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
       g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028, 
       g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
       g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid, 
       g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid, 
       g_inpa_m.inpacnfdt,g_inpa_m.inpa002_desc,g_inpa_m.inpa003_desc,g_inpa_m.inpa004_desc,g_inpa_m.inpa018_desc, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa021_desc,g_inpa_m.inpa022_desc,g_inpa_m.inpa050_desc,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052_desc,g_inpa_m.inpa053_desc,g_inpa_m.inpa054_desc,g_inpa_m.inpaownid_desc,g_inpa_m.inpaowndp_desc, 
       g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpamodid_desc,g_inpa_m.inpacnfid_desc 

   
   #遮罩相關處理
   LET g_inpa_m_mask_o.* =  g_inpa_m.*
   CALL aint820_inpa_t_mask()
   LET g_inpa_m_mask_n.* =  g_inpa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint820_set_act_visible()   
   CALL aint820_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_inpa_m_t.* = g_inpa_m.*
   LET g_inpa_m_o.* = g_inpa_m.*
   
   LET g_data_owner = g_inpa_m.inpaownid      
   LET g_data_dept  = g_inpa_m.inpaowndp
   
   #重新顯示   
   CALL aint820_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aint820.fill_chk" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint820_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint820.filter" ver="5" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION aint820_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON inpadocno,inpadocdt,inpa002,inpa003,inpa004
                          FROM s_browse[1].b_inpadocno,s_browse[1].b_inpadocdt,s_browse[1].b_inpa002, 
                              s_browse[1].b_inpa003,s_browse[1].b_inpa004
 
         BEFORE CONSTRUCT
               DISPLAY aint820_filter_parser('inpadocno') TO s_browse[1].b_inpadocno
            DISPLAY aint820_filter_parser('inpadocdt') TO s_browse[1].b_inpadocdt
            DISPLAY aint820_filter_parser('inpa002') TO s_browse[1].b_inpa002
            DISPLAY aint820_filter_parser('inpa003') TO s_browse[1].b_inpa003
            DISPLAY aint820_filter_parser('inpa004') TO s_browse[1].b_inpa004
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint820_filter_show('inpadocno')
   CALL aint820_filter_show('inpadocdt')
   CALL aint820_filter_show('inpa002')
   CALL aint820_filter_show('inpa003')
   CALL aint820_filter_show('inpa004')
 
END FUNCTION
]]>
  </section>
  <section id="aint820.filter_parser" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint820_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aint820.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint820_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint820_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aint820.global" ver="25" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:35)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_inpa_m        RECORD
       inpadocno LIKE inpa_t.inpadocno, 
   inpadocdt LIKE inpa_t.inpadocdt, 
   inpa002 LIKE inpa_t.inpa002, 
   inpa002_desc LIKE type_t.chr80, 
   inpadocno_desc LIKE type_t.chr80, 
   inpa001 LIKE inpa_t.inpa001, 
   inpa003 LIKE inpa_t.inpa003, 
   inpa003_desc LIKE type_t.chr80, 
   inpastus LIKE inpa_t.inpastus, 
   inpa004 LIKE inpa_t.inpa004, 
   inpa004_desc LIKE type_t.chr80, 
   inpa005 LIKE inpa_t.inpa005, 
   inpa006 LIKE inpa_t.inpa006, 
   inpa040 LIKE inpa_t.inpa040, 
   inpa041 LIKE inpa_t.inpa041, 
   inpa007 LIKE inpa_t.inpa007, 
   inpa008 LIKE inpa_t.inpa008, 
   inpa009 LIKE inpa_t.inpa009, 
   inpa010 LIKE inpa_t.inpa010, 
   inpa011 LIKE inpa_t.inpa011, 
   inpa012 LIKE inpa_t.inpa012, 
   inpa013 LIKE inpa_t.inpa013, 
   inpa014 LIKE inpa_t.inpa014, 
   inpa015 LIKE inpa_t.inpa015, 
   inpa016 LIKE inpa_t.inpa016, 
   inpa017 LIKE inpa_t.inpa017, 
   inpa018 LIKE inpa_t.inpa018, 
   inpa018_desc LIKE type_t.chr80, 
   inpa019 LIKE inpa_t.inpa019, 
   inpa019_desc LIKE type_t.chr80, 
   inpa020 LIKE inpa_t.inpa020, 
   inpa021 LIKE inpa_t.inpa021, 
   inpa021_desc LIKE type_t.chr80, 
   inpa022 LIKE inpa_t.inpa022, 
   inpa022_desc LIKE type_t.chr80, 
   inpa050 LIKE inpa_t.inpa050, 
   inpa050_desc LIKE type_t.chr80, 
   inpa051 LIKE inpa_t.inpa051, 
   inpa051_desc LIKE type_t.chr80, 
   inpa052 LIKE inpa_t.inpa052, 
   inpa052_desc LIKE type_t.chr80, 
   inpa053 LIKE inpa_t.inpa053, 
   inpa053_desc LIKE type_t.chr80, 
   inpa054 LIKE inpa_t.inpa054, 
   inpa054_desc LIKE type_t.chr80, 
   inpa023 LIKE inpa_t.inpa023, 
   inpa024 LIKE inpa_t.inpa024, 
   inpa025 LIKE inpa_t.inpa025, 
   inpa026 LIKE inpa_t.inpa026, 
   inpa027 LIKE inpa_t.inpa027, 
   inpa028 LIKE inpa_t.inpa028, 
   inpa029 LIKE inpa_t.inpa029, 
   inpa030 LIKE inpa_t.inpa030, 
   inpa031 LIKE inpa_t.inpa031, 
   inpa032 LIKE inpa_t.inpa032, 
   inpa033 LIKE inpa_t.inpa033, 
   inpa034 LIKE inpa_t.inpa034, 
   inpa035 LIKE inpa_t.inpa035, 
   inpa036 LIKE inpa_t.inpa036, 
   inpa037 LIKE inpa_t.inpa037, 
   inpaownid LIKE inpa_t.inpaownid, 
   inpaownid_desc LIKE type_t.chr80, 
   inpaowndp LIKE inpa_t.inpaowndp, 
   inpaowndp_desc LIKE type_t.chr80, 
   inpacrtid LIKE inpa_t.inpacrtid, 
   inpacrtid_desc LIKE type_t.chr80, 
   inpacrtdp LIKE inpa_t.inpacrtdp, 
   inpacrtdp_desc LIKE type_t.chr80, 
   inpacrtdt LIKE inpa_t.inpacrtdt, 
   inpamodid LIKE inpa_t.inpamodid, 
   inpamodid_desc LIKE type_t.chr80, 
   inpamoddt LIKE inpa_t.inpamoddt, 
   inpacnfid LIKE inpa_t.inpacnfid, 
   inpacnfid_desc LIKE type_t.chr80, 
   inpacnfdt LIKE inpa_t.inpacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_inpb_d        RECORD
       inpbseq LIKE inpb_t.inpbseq, 
   inpb001 LIKE inpb_t.inpb001, 
   inpb002 LIKE inpb_t.inpb002, 
   inpb003 LIKE inpb_t.inpb003, 
   inpb004 LIKE inpb_t.inpb004, 
   inpb004_desc LIKE type_t.chr500, 
   inpb005 LIKE inpb_t.inpb005, 
   inpb006 LIKE inpb_t.inpb006, 
   inpb006_desc LIKE type_t.chr500, 
   inpb007 LIKE inpb_t.inpb007
       END RECORD
PRIVATE TYPE type_g_inpb2_d RECORD
       inpcseq LIKE inpc_t.inpcseq, 
   inpc001 LIKE inpc_t.inpc001, 
   inpc001_desc LIKE type_t.chr500, 
   inpcsite LIKE inpc_t.inpcsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_inpadocno LIKE inpa_t.inpadocno,
      b_inpadocdt LIKE inpa_t.inpadocdt,
      b_inpa002 LIKE inpa_t.inpa002,
   b_inpa002_desc LIKE type_t.chr80,
      b_inpa003 LIKE inpa_t.inpa003,
   b_inpa003_desc LIKE type_t.chr80,
      b_inpa004 LIKE inpa_t.inpa004,
   b_inpa004_desc LIKE type_t.chr80
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_inpa_m          type_g_inpa_m
DEFINE g_inpa_m_t        type_g_inpa_m
DEFINE g_inpa_m_o        type_g_inpa_m
DEFINE g_inpa_m_mask_o   type_g_inpa_m #轉換遮罩前資料
DEFINE g_inpa_m_mask_n   type_g_inpa_m #轉換遮罩後資料
 
   DEFINE g_inpadocno_t LIKE inpa_t.inpadocno
 
 
DEFINE g_inpb_d          DYNAMIC ARRAY OF type_g_inpb_d
DEFINE g_inpb_d_t        type_g_inpb_d
DEFINE g_inpb_d_o        type_g_inpb_d
DEFINE g_inpb_d_mask_o   DYNAMIC ARRAY OF type_g_inpb_d #轉換遮罩前資料
DEFINE g_inpb_d_mask_n   DYNAMIC ARRAY OF type_g_inpb_d #轉換遮罩後資料
DEFINE g_inpb2_d          DYNAMIC ARRAY OF type_g_inpb2_d
DEFINE g_inpb2_d_t        type_g_inpb2_d
DEFINE g_inpb2_d_o        type_g_inpb2_d
DEFINE g_inpb2_d_mask_o   DYNAMIC ARRAY OF type_g_inpb2_d #轉換遮罩前資料
DEFINE g_inpb2_d_mask_n   DYNAMIC ARRAY OF type_g_inpb2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint820.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aint820_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_inpb_d.getLength() THEN
         LET g_detail_idx = g_inpb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_inpb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_inpb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_inpb2_d.getLength() THEN
         LET g_detail_idx = g_inpb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_inpb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_inpb2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint820.init" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint820_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('inpastus','13','N,Y,T,A,D,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aint820_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aint820.input" ver="14" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint820_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa002_desc,g_inpa_m.inpadocno_desc, 
       g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpa003_desc,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa004_desc, 
       g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008, 
       g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014, 
       g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa018_desc,g_inpa_m.inpa019, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa021_desc,g_inpa_m.inpa022, 
       g_inpa_m.inpa022_desc,g_inpa_m.inpa050,g_inpa_m.inpa050_desc,g_inpa_m.inpa051,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052,g_inpa_m.inpa052_desc,g_inpa_m.inpa053,g_inpa_m.inpa053_desc,g_inpa_m.inpa054, 
       g_inpa_m.inpa054_desc,g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027, 
       g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033, 
       g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaownid_desc, 
       g_inpa_m.inpaowndp,g_inpa_m.inpaowndp_desc,g_inpa_m.inpacrtid,g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp, 
       g_inpa_m.inpacrtdp_desc,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamodid_desc,g_inpa_m.inpamoddt, 
       g_inpa_m.inpacnfid,g_inpa_m.inpacnfid_desc,g_inpa_m.inpacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inpbseq,inpb001,inpb002,inpb003,inpb004,inpb005,inpb006,inpb007 FROM inpb_t  
       WHERE inpbent=? AND inpbdocno=? AND inpbseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint820_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT inpcseq,inpc001,inpcsite FROM inpc_t WHERE inpcent=? AND inpcdocno=? AND  
       inpcseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint820_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint820_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint820_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003, 
       g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041, 
       g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012, 
       g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018, 
       g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051, 
       g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054,g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025, 
       g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031, 
       g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aint820.input.body" ver="26" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_inpb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inpb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint820_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_inpb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint820_cl USING g_enterprise,g_inpa_m.inpadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint820_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint820_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_inpb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_inpb_d[l_ac].inpbseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_inpb_d_t.* = g_inpb_d[l_ac].*  #BACKUP
               LET g_inpb_d_o.* = g_inpb_d[l_ac].*  #BACKUP
               CALL aint820_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint820_set_no_entry_b(l_cmd)
               IF NOT aint820_lock_b("inpb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint820_bcl INTO g_inpb_d[l_ac].inpbseq,g_inpb_d[l_ac].inpb001,g_inpb_d[l_ac].inpb002, 
                      g_inpb_d[l_ac].inpb003,g_inpb_d[l_ac].inpb004,g_inpb_d[l_ac].inpb005,g_inpb_d[l_ac].inpb006, 
                      g_inpb_d[l_ac].inpb007
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_inpb_d_t.inpbseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_inpb_d_mask_o[l_ac].* =  g_inpb_d[l_ac].*
                  CALL aint820_inpb_t_mask()
                  LET g_inpb_d_mask_n[l_ac].* =  g_inpb_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint820_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inpb_d[l_ac].* TO NULL 
            INITIALIZE g_inpb_d_t.* TO NULL 
            INITIALIZE g_inpb_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_inpb_d_t.* = g_inpb_d[l_ac].*     #新輸入資料
            LET g_inpb_d_o.* = g_inpb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint820_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint820_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inpb_d[li_reproduce_target].* = g_inpb_d[li_reproduce].*
 
               LET g_inpb_d[li_reproduce_target].inpbseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inpb_t 
             WHERE inpbent = g_enterprise AND inpbdocno = g_inpa_m.inpadocno
 
               AND inpbseq = g_inpb_d[l_ac].inpbseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpa_m.inpadocno
               LET gs_keys[2] = g_inpb_d[g_detail_idx].inpbseq
               CALL aint820_insert_b('inpb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_inpb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inpb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint820_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_inpa_m.inpadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_inpb_d_t.inpbseq
 
            
               #刪除同層單身
               IF NOT aint820_delete_b('inpb_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint820_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint820_key_delete_b(gs_keys,'inpb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint820_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aint820_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_inpb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_inpb_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpbseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_inpb_d[l_ac].inpbseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD inpbseq
            END IF 
 
 
            #add-point:AFTER FIELD inpbseq
            {<point name="input.a.page1.inpbseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpbseq
            #add-point:BEFORE FIELD inpbseq
            {<point name="input.b.page1.inpbseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpbseq
            #add-point:ON CHANGE inpbseq
            {<point name="input.g.page1.inpbseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb001
            #add-point:BEFORE FIELD inpb001
            {<point name="input.b.page1.inpb001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb001
            
            #add-point:AFTER FIELD inpb001
            {<point name="input.a.page1.inpb001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpb001
            #add-point:ON CHANGE inpb001
            {<point name="input.g.page1.inpb001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb002
            #add-point:BEFORE FIELD inpb002
            {<point name="input.b.page1.inpb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb002
            
            #add-point:AFTER FIELD inpb002
            {<point name="input.a.page1.inpb002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpb002
            #add-point:ON CHANGE inpb002
            {<point name="input.g.page1.inpb002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_inpb_d[l_ac].inpb003,"0.000","1","100.000","1","azz-00087",1) THEN 

               NEXT FIELD inpb003
            END IF 
 
 
            #add-point:AFTER FIELD inpb003
            {<point name="input.a.page1.inpb003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb003
            #add-point:BEFORE FIELD inpb003
            {<point name="input.b.page1.inpb003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpb003
            #add-point:ON CHANGE inpb003
            {<point name="input.g.page1.inpb003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb004
            
            #add-point:AFTER FIELD inpb004
            {<point name="input.a.page1.inpb004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb004
            #add-point:BEFORE FIELD inpb004
            {<point name="input.b.page1.inpb004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpb004
            #add-point:ON CHANGE inpb004
            {<point name="input.g.page1.inpb004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb005
            #add-point:BEFORE FIELD inpb005
            {<point name="input.b.page1.inpb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb005
            
            #add-point:AFTER FIELD inpb005
            {<point name="input.a.page1.inpb005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpb005
            #add-point:ON CHANGE inpb005
            {<point name="input.g.page1.inpb005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb006
            
            #add-point:AFTER FIELD inpb006
            {<point name="input.a.page1.inpb006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb006
            #add-point:BEFORE FIELD inpb006
            {<point name="input.b.page1.inpb006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpb006
            #add-point:ON CHANGE inpb006
            {<point name="input.g.page1.inpb006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpb007
            #add-point:BEFORE FIELD inpb007
            {<point name="input.b.page1.inpb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpb007
            
            #add-point:AFTER FIELD inpb007
            {<point name="input.a.page1.inpb007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpb007
            #add-point:ON CHANGE inpb007
            {<point name="input.g.page1.inpb007" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.inpbseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpbseq
            #add-point:ON ACTION controlp INFIELD inpbseq
            {<point name="input.c.page1.inpbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpb001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb001
            #add-point:ON ACTION controlp INFIELD inpb001
            {<point name="input.c.page1.inpb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb002
            #add-point:ON ACTION controlp INFIELD inpb002
            {<point name="input.c.page1.inpb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb003
            #add-point:ON ACTION controlp INFIELD inpb003
            {<point name="input.c.page1.inpb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpb004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb004
            #add-point:ON ACTION controlp INFIELD inpb004
            {<point name="input.c.page1.inpb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb005
            #add-point:ON ACTION controlp INFIELD inpb005
            {<point name="input.c.page1.inpb005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb006
            #add-point:ON ACTION controlp INFIELD inpb006
            {<point name="input.c.page1.inpb006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpb007
            #add-point:ON ACTION controlp INFIELD inpb007
            {<point name="input.c.page1.inpb007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_inpb_d[l_ac].* = g_inpb_d_t.*
               CLOSE aint820_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_inpb_d[l_ac].inpbseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_inpb_d[l_ac].* = g_inpb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aint820_inpb_t_mask_restore('restore_mask_o')
      
               UPDATE inpb_t SET (inpbdocno,inpbseq,inpb001,inpb002,inpb003,inpb004,inpb005,inpb006, 
                   inpb007) = (g_inpa_m.inpadocno,g_inpb_d[l_ac].inpbseq,g_inpb_d[l_ac].inpb001,g_inpb_d[l_ac].inpb002, 
                   g_inpb_d[l_ac].inpb003,g_inpb_d[l_ac].inpb004,g_inpb_d[l_ac].inpb005,g_inpb_d[l_ac].inpb006, 
                   g_inpb_d[l_ac].inpb007)
                WHERE inpbent = g_enterprise AND inpbdocno = g_inpa_m.inpadocno 
 
                  AND inpbseq = g_inpb_d_t.inpbseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inpb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_inpb_d[l_ac].* = g_inpb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inpb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_inpb_d[l_ac].* = g_inpb_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpa_m.inpadocno
               LET gs_keys_bak[1] = g_inpadocno_t
               LET gs_keys[2] = g_inpb_d[g_detail_idx].inpbseq
               LET gs_keys_bak[2] = g_inpb_d_t.inpbseq
               CALL aint820_update_b('inpb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aint820_inpb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_inpb_d[g_detail_idx].inpbseq = g_inpb_d_t.inpbseq 
 
                  ) THEN
                  LET gs_keys[01] = g_inpa_m.inpadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_inpb_d_t.inpbseq
 
                  CALL aint820_key_update_b(gs_keys,'inpb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_inpa_m),util.JSON.stringify(g_inpb_d_t)
               LET g_log2 = util.JSON.stringify(g_inpa_m),util.JSON.stringify(g_inpb_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint820_unlock_b("inpb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_inpb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inpb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_inpb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inpb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint820_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_inpb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inpb2_d[l_ac].* TO NULL 
            INITIALIZE g_inpb2_d_t.* TO NULL 
            INITIALIZE g_inpb2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_inpb2_d_t.* = g_inpb2_d[l_ac].*     #新輸入資料
            LET g_inpb2_d_o.* = g_inpb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint820_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint820_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inpb2_d[li_reproduce_target].* = g_inpb2_d[li_reproduce].*
 
               LET g_inpb2_d[li_reproduce_target].inpcseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint820_cl USING g_enterprise,g_inpa_m.inpadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint820_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint820_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_inpb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_inpb2_d[l_ac].inpcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_inpb2_d_t.* = g_inpb2_d[l_ac].*  #BACKUP
               LET g_inpb2_d_o.* = g_inpb2_d[l_ac].*  #BACKUP
               CALL aint820_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL aint820_set_no_entry_b(l_cmd)
               IF NOT aint820_lock_b("inpc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint820_bcl2 INTO g_inpb2_d[l_ac].inpcseq,g_inpb2_d[l_ac].inpc001,g_inpb2_d[l_ac].inpcsite 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_inpb2_d_mask_o[l_ac].* =  g_inpb2_d[l_ac].*
                  CALL aint820_inpc_t_mask()
                  LET g_inpb2_d_mask_n[l_ac].* =  g_inpb2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint820_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_inpa_m.inpadocno
               LET gs_keys[gs_keys.getLength()+1] = g_inpb2_d_t.inpcseq
            
               #刪除同層單身
               IF NOT aint820_delete_b('inpc_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint820_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint820_key_delete_b(gs_keys,'inpc_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint820_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE aint820_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_inpb_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_inpb2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inpc_t 
             WHERE inpcent = g_enterprise AND inpcdocno = g_inpa_m.inpadocno
               AND inpcseq = g_inpb2_d[l_ac].inpcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpa_m.inpadocno
               LET gs_keys[2] = g_inpb2_d[g_detail_idx].inpcseq
               CALL aint820_insert_b('inpc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_inpb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inpc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint820_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_inpb2_d[l_ac].* = g_inpb2_d_t.*
               CLOSE aint820_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_inpb2_d[l_ac].* = g_inpb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL aint820_inpc_t_mask_restore('restore_mask_o')
                              
               UPDATE inpc_t SET (inpcdocno,inpcseq,inpc001,inpcsite) = (g_inpa_m.inpadocno,g_inpb2_d[l_ac].inpcseq, 
                   g_inpb2_d[l_ac].inpc001,g_inpb2_d[l_ac].inpcsite) #自訂欄位頁簽
                WHERE inpcent = g_enterprise AND inpcdocno = g_inpa_m.inpadocno
                  AND inpcseq = g_inpb2_d_t.inpcseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inpc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_inpb2_d[l_ac].* = g_inpb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "inpc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_inpb2_d[l_ac].* = g_inpb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpa_m.inpadocno
               LET gs_keys_bak[1] = g_inpadocno_t
               LET gs_keys[2] = g_inpb2_d[g_detail_idx].inpcseq
               LET gs_keys_bak[2] = g_inpb2_d_t.inpcseq
               CALL aint820_update_b('inpc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL aint820_inpc_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_inpb2_d[g_detail_idx].inpcseq = g_inpb2_d_t.inpcseq 
                  ) THEN
                  LET gs_keys[01] = g_inpa_m.inpadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_inpb2_d_t.inpcseq
                  CALL aint820_key_update_b(gs_keys,'inpc_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_inpa_m),util.JSON.stringify(g_inpb2_d_t)
               LET g_log2 = util.JSON.stringify(g_inpa_m),util.JSON.stringify(g_inpb2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpcseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_inpb2_d[l_ac].inpcseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD inpcseq
            END IF 
 
 
            #add-point:AFTER FIELD inpcseq
            {<point name="input.a.page2.inpcseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpcseq
            #add-point:BEFORE FIELD inpcseq
            {<point name="input.b.page2.inpcseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpcseq
            #add-point:ON CHANGE inpcseq
            {<point name="input.g.page2.inpcseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpc001
            
            #add-point:AFTER FIELD inpc001
            {<point name="input.a.page2.inpc001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpc001
            #add-point:BEFORE FIELD inpc001
            {<point name="input.b.page2.inpc001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpc001
            #add-point:ON CHANGE inpc001
            {<point name="input.g.page2.inpc001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpcsite
            #add-point:BEFORE FIELD inpcsite
            {<point name="input.b.page2.inpcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpcsite
            
            #add-point:AFTER FIELD inpcsite
            {<point name="input.a.page2.inpcsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpcsite
            #add-point:ON CHANGE inpcsite
            {<point name="input.g.page2.inpcsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.inpcseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpcseq
            #add-point:ON ACTION controlp INFIELD inpcseq
            {<point name="input.c.page2.inpcseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inpc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpc001
            #add-point:ON ACTION controlp INFIELD inpc001
            {<point name="input.c.page2.inpc001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.inpcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpcsite
            #add-point:ON ACTION controlp INFIELD inpcsite
            {<point name="input.c.page2.inpcsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_inpb2_d[l_ac].* = g_inpb2_d_t.*
               END IF
               CLOSE aint820_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aint820_unlock_b("inpc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_inpb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inpb2_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="aint820.input.head" ver="25" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003, 
          g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041, 
          g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012, 
          g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018, 
          g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051, 
          g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054,g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025, 
          g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031, 
          g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aint820_cl USING g_enterprise,g_inpa_m.inpadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint820_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint820_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aint820_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aint820_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpadocno
            
            #add-point:AFTER FIELD inpadocno
            {<point name="input.a.inpadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpadocno
            #add-point:BEFORE FIELD inpadocno
            {<point name="input.b.inpadocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpadocno
            #add-point:ON CHANGE inpadocno
            {<point name="input.g.inpadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpadocdt
            #add-point:BEFORE FIELD inpadocdt
            {<point name="input.b.inpadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpadocdt
            
            #add-point:AFTER FIELD inpadocdt
            {<point name="input.a.inpadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpadocdt
            #add-point:ON CHANGE inpadocdt
            {<point name="input.g.inpadocdt" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa002
            
            #add-point:AFTER FIELD inpa002
            {<point name="input.a.inpa002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa002
            #add-point:BEFORE FIELD inpa002
            {<point name="input.b.inpa002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa002
            #add-point:ON CHANGE inpa002
            {<point name="input.g.inpa002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa001
            #add-point:BEFORE FIELD inpa001
            {<point name="input.b.inpa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa001
            
            #add-point:AFTER FIELD inpa001
            {<point name="input.a.inpa001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa001
            #add-point:ON CHANGE inpa001
            {<point name="input.g.inpa001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa003
            
            #add-point:AFTER FIELD inpa003
            {<point name="input.a.inpa003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa003
            #add-point:BEFORE FIELD inpa003
            {<point name="input.b.inpa003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa003
            #add-point:ON CHANGE inpa003
            {<point name="input.g.inpa003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpastus
            #add-point:BEFORE FIELD inpastus
            {<point name="input.b.inpastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpastus
            
            #add-point:AFTER FIELD inpastus
            {<point name="input.a.inpastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpastus
            #add-point:ON CHANGE inpastus
            {<point name="input.g.inpastus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa004
            
            #add-point:AFTER FIELD inpa004
            {<point name="input.a.inpa004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa004
            #add-point:BEFORE FIELD inpa004
            {<point name="input.b.inpa004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa004
            #add-point:ON CHANGE inpa004
            {<point name="input.g.inpa004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa005
            #add-point:BEFORE FIELD inpa005
            {<point name="input.b.inpa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa005
            
            #add-point:AFTER FIELD inpa005
            {<point name="input.a.inpa005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa005
            #add-point:ON CHANGE inpa005
            {<point name="input.g.inpa005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa006
            #add-point:BEFORE FIELD inpa006
            {<point name="input.b.inpa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa006
            
            #add-point:AFTER FIELD inpa006
            {<point name="input.a.inpa006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa006
            #add-point:ON CHANGE inpa006
            {<point name="input.g.inpa006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa040
            #add-point:BEFORE FIELD inpa040
            {<point name="input.b.inpa040" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa040
            
            #add-point:AFTER FIELD inpa040
            {<point name="input.a.inpa040" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa040
            #add-point:ON CHANGE inpa040
            {<point name="input.g.inpa040" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa041
            #add-point:BEFORE FIELD inpa041
            {<point name="input.b.inpa041" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa041
            
            #add-point:AFTER FIELD inpa041
            {<point name="input.a.inpa041" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa041
            #add-point:ON CHANGE inpa041
            {<point name="input.g.inpa041" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa007
            #add-point:BEFORE FIELD inpa007
            {<point name="input.b.inpa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa007
            
            #add-point:AFTER FIELD inpa007
            {<point name="input.a.inpa007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa007
            #add-point:ON CHANGE inpa007
            {<point name="input.g.inpa007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa008
            #add-point:BEFORE FIELD inpa008
            {<point name="input.b.inpa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa008
            
            #add-point:AFTER FIELD inpa008
            {<point name="input.a.inpa008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa008
            #add-point:ON CHANGE inpa008
            {<point name="input.g.inpa008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa009
            #add-point:BEFORE FIELD inpa009
            {<point name="input.b.inpa009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa009
            
            #add-point:AFTER FIELD inpa009
            {<point name="input.a.inpa009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa009
            #add-point:ON CHANGE inpa009
            {<point name="input.g.inpa009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa010
            #add-point:BEFORE FIELD inpa010
            {<point name="input.b.inpa010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa010
            
            #add-point:AFTER FIELD inpa010
            {<point name="input.a.inpa010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa010
            #add-point:ON CHANGE inpa010
            {<point name="input.g.inpa010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa011
            #add-point:BEFORE FIELD inpa011
            {<point name="input.b.inpa011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa011
            
            #add-point:AFTER FIELD inpa011
            {<point name="input.a.inpa011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa011
            #add-point:ON CHANGE inpa011
            {<point name="input.g.inpa011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa012
            #add-point:BEFORE FIELD inpa012
            {<point name="input.b.inpa012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa012
            
            #add-point:AFTER FIELD inpa012
            {<point name="input.a.inpa012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa012
            #add-point:ON CHANGE inpa012
            {<point name="input.g.inpa012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa013
            #add-point:BEFORE FIELD inpa013
            {<point name="input.b.inpa013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa013
            
            #add-point:AFTER FIELD inpa013
            {<point name="input.a.inpa013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa013
            #add-point:ON CHANGE inpa013
            {<point name="input.g.inpa013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa014
            #add-point:BEFORE FIELD inpa014
            {<point name="input.b.inpa014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa014
            
            #add-point:AFTER FIELD inpa014
            {<point name="input.a.inpa014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa014
            #add-point:ON CHANGE inpa014
            {<point name="input.g.inpa014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa015
            #add-point:BEFORE FIELD inpa015
            {<point name="input.b.inpa015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa015
            
            #add-point:AFTER FIELD inpa015
            {<point name="input.a.inpa015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa015
            #add-point:ON CHANGE inpa015
            {<point name="input.g.inpa015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa016
            #add-point:BEFORE FIELD inpa016
            {<point name="input.b.inpa016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa016
            
            #add-point:AFTER FIELD inpa016
            {<point name="input.a.inpa016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa016
            #add-point:ON CHANGE inpa016
            {<point name="input.g.inpa016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa017
            #add-point:BEFORE FIELD inpa017
            {<point name="input.b.inpa017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa017
            
            #add-point:AFTER FIELD inpa017
            {<point name="input.a.inpa017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa017
            #add-point:ON CHANGE inpa017
            {<point name="input.g.inpa017" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa018
            
            #add-point:AFTER FIELD inpa018
            {<point name="input.a.inpa018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa018
            #add-point:BEFORE FIELD inpa018
            {<point name="input.b.inpa018" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa018
            #add-point:ON CHANGE inpa018
            {<point name="input.g.inpa018" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa019
            
            #add-point:AFTER FIELD inpa019
            {<point name="input.a.inpa019" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa019
            #add-point:BEFORE FIELD inpa019
            {<point name="input.b.inpa019" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa019
            #add-point:ON CHANGE inpa019
            {<point name="input.g.inpa019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa020
            #add-point:BEFORE FIELD inpa020
            {<point name="input.b.inpa020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa020
            
            #add-point:AFTER FIELD inpa020
            {<point name="input.a.inpa020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa020
            #add-point:ON CHANGE inpa020
            {<point name="input.g.inpa020" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa021
            
            #add-point:AFTER FIELD inpa021
            {<point name="input.a.inpa021" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa021
            #add-point:BEFORE FIELD inpa021
            {<point name="input.b.inpa021" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa021
            #add-point:ON CHANGE inpa021
            {<point name="input.g.inpa021" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa022
            
            #add-point:AFTER FIELD inpa022
            {<point name="input.a.inpa022" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa022
            #add-point:BEFORE FIELD inpa022
            {<point name="input.b.inpa022" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa022
            #add-point:ON CHANGE inpa022
            {<point name="input.g.inpa022" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa050
            
            #add-point:AFTER FIELD inpa050
            {<point name="input.a.inpa050" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa050
            #add-point:BEFORE FIELD inpa050
            {<point name="input.b.inpa050" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa050
            #add-point:ON CHANGE inpa050
            {<point name="input.g.inpa050" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa051
            
            #add-point:AFTER FIELD inpa051
            {<point name="input.a.inpa051" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa051
            #add-point:BEFORE FIELD inpa051
            {<point name="input.b.inpa051" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa051
            #add-point:ON CHANGE inpa051
            {<point name="input.g.inpa051" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa052
            
            #add-point:AFTER FIELD inpa052
            {<point name="input.a.inpa052" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa052
            #add-point:BEFORE FIELD inpa052
            {<point name="input.b.inpa052" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa052
            #add-point:ON CHANGE inpa052
            {<point name="input.g.inpa052" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa053
            
            #add-point:AFTER FIELD inpa053
            {<point name="input.a.inpa053" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa053
            #add-point:BEFORE FIELD inpa053
            {<point name="input.b.inpa053" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa053
            #add-point:ON CHANGE inpa053
            {<point name="input.g.inpa053" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa054
            
            #add-point:AFTER FIELD inpa054
            {<point name="input.a.inpa054" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa054
            #add-point:BEFORE FIELD inpa054
            {<point name="input.b.inpa054" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa054
            #add-point:ON CHANGE inpa054
            {<point name="input.g.inpa054" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa023
            #add-point:BEFORE FIELD inpa023
            {<point name="input.b.inpa023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa023
            
            #add-point:AFTER FIELD inpa023
            {<point name="input.a.inpa023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa023
            #add-point:ON CHANGE inpa023
            {<point name="input.g.inpa023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa024
            #add-point:BEFORE FIELD inpa024
            {<point name="input.b.inpa024" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa024
            
            #add-point:AFTER FIELD inpa024
            {<point name="input.a.inpa024" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa024
            #add-point:ON CHANGE inpa024
            {<point name="input.g.inpa024" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa025
            #add-point:BEFORE FIELD inpa025
            {<point name="input.b.inpa025" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa025
            
            #add-point:AFTER FIELD inpa025
            {<point name="input.a.inpa025" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa025
            #add-point:ON CHANGE inpa025
            {<point name="input.g.inpa025" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa026
            #add-point:BEFORE FIELD inpa026
            {<point name="input.b.inpa026" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa026
            
            #add-point:AFTER FIELD inpa026
            {<point name="input.a.inpa026" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa026
            #add-point:ON CHANGE inpa026
            {<point name="input.g.inpa026" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa027
            #add-point:BEFORE FIELD inpa027
            {<point name="input.b.inpa027" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa027
            
            #add-point:AFTER FIELD inpa027
            {<point name="input.a.inpa027" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa027
            #add-point:ON CHANGE inpa027
            {<point name="input.g.inpa027" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa028
            #add-point:BEFORE FIELD inpa028
            {<point name="input.b.inpa028" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa028
            
            #add-point:AFTER FIELD inpa028
            {<point name="input.a.inpa028" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa028
            #add-point:ON CHANGE inpa028
            {<point name="input.g.inpa028" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa029
            #add-point:BEFORE FIELD inpa029
            {<point name="input.b.inpa029" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa029
            
            #add-point:AFTER FIELD inpa029
            {<point name="input.a.inpa029" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa029
            #add-point:ON CHANGE inpa029
            {<point name="input.g.inpa029" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa030
            #add-point:BEFORE FIELD inpa030
            {<point name="input.b.inpa030" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa030
            
            #add-point:AFTER FIELD inpa030
            {<point name="input.a.inpa030" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa030
            #add-point:ON CHANGE inpa030
            {<point name="input.g.inpa030" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa031
            #add-point:BEFORE FIELD inpa031
            {<point name="input.b.inpa031" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa031
            
            #add-point:AFTER FIELD inpa031
            {<point name="input.a.inpa031" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa031
            #add-point:ON CHANGE inpa031
            {<point name="input.g.inpa031" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa032
            #add-point:BEFORE FIELD inpa032
            {<point name="input.b.inpa032" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa032
            
            #add-point:AFTER FIELD inpa032
            {<point name="input.a.inpa032" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa032
            #add-point:ON CHANGE inpa032
            {<point name="input.g.inpa032" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa033
            #add-point:BEFORE FIELD inpa033
            {<point name="input.b.inpa033" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa033
            
            #add-point:AFTER FIELD inpa033
            {<point name="input.a.inpa033" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa033
            #add-point:ON CHANGE inpa033
            {<point name="input.g.inpa033" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa034
            #add-point:BEFORE FIELD inpa034
            {<point name="input.b.inpa034" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa034
            
            #add-point:AFTER FIELD inpa034
            {<point name="input.a.inpa034" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa034
            #add-point:ON CHANGE inpa034
            {<point name="input.g.inpa034" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa035
            #add-point:BEFORE FIELD inpa035
            {<point name="input.b.inpa035" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa035
            
            #add-point:AFTER FIELD inpa035
            {<point name="input.a.inpa035" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa035
            #add-point:ON CHANGE inpa035
            {<point name="input.g.inpa035" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa036
            #add-point:BEFORE FIELD inpa036
            {<point name="input.b.inpa036" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa036
            
            #add-point:AFTER FIELD inpa036
            {<point name="input.a.inpa036" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa036
            #add-point:ON CHANGE inpa036
            {<point name="input.g.inpa036" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inpa037
            #add-point:BEFORE FIELD inpa037
            {<point name="input.b.inpa037" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inpa037
            
            #add-point:AFTER FIELD inpa037
            {<point name="input.a.inpa037" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE inpa037
            #add-point:ON CHANGE inpa037
            {<point name="input.g.inpa037" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.inpadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpadocno
            #add-point:ON ACTION controlp INFIELD inpadocno
            {<point name="input.c.inpadocno" />}
            #END add-point
 
         #Ctrlp:input.c.inpadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpadocdt
            #add-point:ON ACTION controlp INFIELD inpadocdt
            {<point name="input.c.inpadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.inpa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa002
            #add-point:ON ACTION controlp INFIELD inpa002
            {<point name="input.c.inpa002" />}
            #END add-point
 
         #Ctrlp:input.c.inpa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa001
            #add-point:ON ACTION controlp INFIELD inpa001
            {<point name="input.c.inpa001" />}
            #END add-point
 
         #Ctrlp:input.c.inpa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa003
            #add-point:ON ACTION controlp INFIELD inpa003
            {<point name="input.c.inpa003" />}
            #END add-point
 
         #Ctrlp:input.c.inpastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpastus
            #add-point:ON ACTION controlp INFIELD inpastus
            {<point name="input.c.inpastus" />}
            #END add-point
 
         #Ctrlp:input.c.inpa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa004
            #add-point:ON ACTION controlp INFIELD inpa004
            {<point name="input.c.inpa004" />}
            #END add-point
 
         #Ctrlp:input.c.inpa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa005
            #add-point:ON ACTION controlp INFIELD inpa005
            {<point name="input.c.inpa005" />}
            #END add-point
 
         #Ctrlp:input.c.inpa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa006
            #add-point:ON ACTION controlp INFIELD inpa006
            {<point name="input.c.inpa006" />}
            #END add-point
 
         #Ctrlp:input.c.inpa040
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa040
            #add-point:ON ACTION controlp INFIELD inpa040
            {<point name="input.c.inpa040" />}
            #END add-point
 
         #Ctrlp:input.c.inpa041
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa041
            #add-point:ON ACTION controlp INFIELD inpa041
            {<point name="input.c.inpa041" />}
            #END add-point
 
         #Ctrlp:input.c.inpa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa007
            #add-point:ON ACTION controlp INFIELD inpa007
            {<point name="input.c.inpa007" />}
            #END add-point
 
         #Ctrlp:input.c.inpa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa008
            #add-point:ON ACTION controlp INFIELD inpa008
            {<point name="input.c.inpa008" />}
            #END add-point
 
         #Ctrlp:input.c.inpa009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa009
            #add-point:ON ACTION controlp INFIELD inpa009
            {<point name="input.c.inpa009" />}
            #END add-point
 
         #Ctrlp:input.c.inpa010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa010
            #add-point:ON ACTION controlp INFIELD inpa010
            {<point name="input.c.inpa010" />}
            #END add-point
 
         #Ctrlp:input.c.inpa011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa011
            #add-point:ON ACTION controlp INFIELD inpa011
            {<point name="input.c.inpa011" />}
            #END add-point
 
         #Ctrlp:input.c.inpa012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa012
            #add-point:ON ACTION controlp INFIELD inpa012
            {<point name="input.c.inpa012" />}
            #END add-point
 
         #Ctrlp:input.c.inpa013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa013
            #add-point:ON ACTION controlp INFIELD inpa013
            {<point name="input.c.inpa013" />}
            #END add-point
 
         #Ctrlp:input.c.inpa014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa014
            #add-point:ON ACTION controlp INFIELD inpa014
            {<point name="input.c.inpa014" />}
            #END add-point
 
         #Ctrlp:input.c.inpa015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa015
            #add-point:ON ACTION controlp INFIELD inpa015
            {<point name="input.c.inpa015" />}
            #END add-point
 
         #Ctrlp:input.c.inpa016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa016
            #add-point:ON ACTION controlp INFIELD inpa016
            {<point name="input.c.inpa016" />}
            #END add-point
 
         #Ctrlp:input.c.inpa017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa017
            #add-point:ON ACTION controlp INFIELD inpa017
            {<point name="input.c.inpa017" />}
            #END add-point
 
         #Ctrlp:input.c.inpa018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa018
            #add-point:ON ACTION controlp INFIELD inpa018
            {<point name="input.c.inpa018" />}
            #END add-point
 
         #Ctrlp:input.c.inpa019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa019
            #add-point:ON ACTION controlp INFIELD inpa019
            {<point name="input.c.inpa019" />}
            #END add-point
 
         #Ctrlp:input.c.inpa020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa020
            #add-point:ON ACTION controlp INFIELD inpa020
            {<point name="input.c.inpa020" />}
            #END add-point
 
         #Ctrlp:input.c.inpa021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa021
            #add-point:ON ACTION controlp INFIELD inpa021
            {<point name="input.c.inpa021" />}
            #END add-point
 
         #Ctrlp:input.c.inpa022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa022
            #add-point:ON ACTION controlp INFIELD inpa022
            {<point name="input.c.inpa022" />}
            #END add-point
 
         #Ctrlp:input.c.inpa050
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa050
            #add-point:ON ACTION controlp INFIELD inpa050
            {<point name="input.c.inpa050" />}
            #END add-point
 
         #Ctrlp:input.c.inpa051
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa051
            #add-point:ON ACTION controlp INFIELD inpa051
            {<point name="input.c.inpa051" />}
            #END add-point
 
         #Ctrlp:input.c.inpa052
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa052
            #add-point:ON ACTION controlp INFIELD inpa052
            {<point name="input.c.inpa052" />}
            #END add-point
 
         #Ctrlp:input.c.inpa053
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa053
            #add-point:ON ACTION controlp INFIELD inpa053
            {<point name="input.c.inpa053" />}
            #END add-point
 
         #Ctrlp:input.c.inpa054
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa054
            #add-point:ON ACTION controlp INFIELD inpa054
            {<point name="input.c.inpa054" />}
            #END add-point
 
         #Ctrlp:input.c.inpa023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa023
            #add-point:ON ACTION controlp INFIELD inpa023
            {<point name="input.c.inpa023" />}
            #END add-point
 
         #Ctrlp:input.c.inpa024
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa024
            #add-point:ON ACTION controlp INFIELD inpa024
            {<point name="input.c.inpa024" />}
            #END add-point
 
         #Ctrlp:input.c.inpa025
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa025
            #add-point:ON ACTION controlp INFIELD inpa025
            {<point name="input.c.inpa025" />}
            #END add-point
 
         #Ctrlp:input.c.inpa026
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa026
            #add-point:ON ACTION controlp INFIELD inpa026
            {<point name="input.c.inpa026" />}
            #END add-point
 
         #Ctrlp:input.c.inpa027
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa027
            #add-point:ON ACTION controlp INFIELD inpa027
            {<point name="input.c.inpa027" />}
            #END add-point
 
         #Ctrlp:input.c.inpa028
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa028
            #add-point:ON ACTION controlp INFIELD inpa028
            {<point name="input.c.inpa028" />}
            #END add-point
 
         #Ctrlp:input.c.inpa029
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa029
            #add-point:ON ACTION controlp INFIELD inpa029
            {<point name="input.c.inpa029" />}
            #END add-point
 
         #Ctrlp:input.c.inpa030
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa030
            #add-point:ON ACTION controlp INFIELD inpa030
            {<point name="input.c.inpa030" />}
            #END add-point
 
         #Ctrlp:input.c.inpa031
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa031
            #add-point:ON ACTION controlp INFIELD inpa031
            {<point name="input.c.inpa031" />}
            #END add-point
 
         #Ctrlp:input.c.inpa032
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa032
            #add-point:ON ACTION controlp INFIELD inpa032
            {<point name="input.c.inpa032" />}
            #END add-point
 
         #Ctrlp:input.c.inpa033
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa033
            #add-point:ON ACTION controlp INFIELD inpa033
            {<point name="input.c.inpa033" />}
            #END add-point
 
         #Ctrlp:input.c.inpa034
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa034
            #add-point:ON ACTION controlp INFIELD inpa034
            {<point name="input.c.inpa034" />}
            #END add-point
 
         #Ctrlp:input.c.inpa035
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa035
            #add-point:ON ACTION controlp INFIELD inpa035
            {<point name="input.c.inpa035" />}
            #END add-point
 
         #Ctrlp:input.c.inpa036
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa036
            #add-point:ON ACTION controlp INFIELD inpa036
            {<point name="input.c.inpa036" />}
            #END add-point
 
         #Ctrlp:input.c.inpa037
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inpa037
            #add-point:ON ACTION controlp INFIELD inpa037
            {<point name="input.c.inpa037" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_inpa_m.inpadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO inpa_t (inpaent,inpadocno,inpadocdt,inpa002,inpa001,inpa003,inpastus,inpa004, 
                   inpa005,inpa006,inpa040,inpa041,inpa007,inpa008,inpa009,inpa010,inpa011,inpa012,inpa013, 
                   inpa014,inpa015,inpa016,inpa017,inpa018,inpa019,inpa020,inpa021,inpa022,inpa050,inpa051, 
                   inpa052,inpa053,inpa054,inpa023,inpa024,inpa025,inpa026,inpa027,inpa028,inpa029,inpa030, 
                   inpa031,inpa032,inpa033,inpa034,inpa035,inpa036,inpa037,inpaownid,inpaowndp,inpacrtid, 
                   inpacrtdp,inpacrtdt,inpamodid,inpamoddt,inpacnfid,inpacnfdt)
               VALUES (g_enterprise,g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa001, 
                   g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005,g_inpa_m.inpa006, 
                   g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
                   g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014, 
                   g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019, 
                   g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051, 
                   g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054,g_inpa_m.inpa023,g_inpa_m.inpa024, 
                   g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028,g_inpa_m.inpa029, 
                   g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
                   g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp, 
                   g_inpa_m.inpacrtid,g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt, 
                   g_inpa_m.inpacnfid,g_inpa_m.inpacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_inpa_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint820_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aint820_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aint820_inpa_t_mask_restore('restore_mask_o')
               
               UPDATE inpa_t SET (inpadocno,inpadocdt,inpa002,inpa001,inpa003,inpastus,inpa004,inpa005, 
                   inpa006,inpa040,inpa041,inpa007,inpa008,inpa009,inpa010,inpa011,inpa012,inpa013,inpa014, 
                   inpa015,inpa016,inpa017,inpa018,inpa019,inpa020,inpa021,inpa022,inpa050,inpa051,inpa052, 
                   inpa053,inpa054,inpa023,inpa024,inpa025,inpa026,inpa027,inpa028,inpa029,inpa030,inpa031, 
                   inpa032,inpa033,inpa034,inpa035,inpa036,inpa037,inpaownid,inpaowndp,inpacrtid,inpacrtdp, 
                   inpacrtdt,inpamodid,inpamoddt,inpacnfid,inpacnfdt) = (g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
                   g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004, 
                   g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007, 
                   g_inpa_m.inpa008,g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012, 
                   g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017, 
                   g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa022, 
                   g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
                   g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027, 
                   g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032, 
                   g_inpa_m.inpa033,g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037, 
                   g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid,g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt, 
                   g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid,g_inpa_m.inpacnfdt)
                WHERE inpaent = g_enterprise AND inpadocno = g_inpadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "inpa_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aint820_inpa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_inpa_m_t)
               LET g_log2 = util.JSON.stringify(g_inpa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_inpadocno_t = g_inpa_m.inpadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="aint820.input.other" ver="8" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD inpadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD inpbseq
               WHEN "s_detail2"
                  NEXT FIELD inpcseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aint820.insert" ver="24" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint820_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_inpb_d.clear()   
   CALL g_inpb2_d.clear()  
 
 
   INITIALIZE g_inpa_m.* LIKE inpa_t.*             #DEFAULT 設定
   
   LET g_inpadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_inpa_m.inpaownid = g_user
      LET g_inpa_m.inpaowndp = g_dept
      LET g_inpa_m.inpacrtid = g_user
      LET g_inpa_m.inpacrtdp = g_dept 
      LET g_inpa_m.inpacrtdt = cl_get_current()
      LET g_inpa_m.inpamodid = g_user
      LET g_inpa_m.inpamoddt = cl_get_current()
      LET g_inpa_m.inpastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_inpa_m.inpa001 = "1"
      LET g_inpa_m.inpa008 = "1"
      LET g_inpa_m.inpa009 = "Y"
      LET g_inpa_m.inpa010 = "Y"
      LET g_inpa_m.inpa011 = "Y"
      LET g_inpa_m.inpa012 = "Y"
      LET g_inpa_m.inpa013 = "Y"
      LET g_inpa_m.inpa014 = "Y"
      LET g_inpa_m.inpa015 = "Y"
      LET g_inpa_m.inpa016 = "Y"
      LET g_inpa_m.inpa017 = "Y"
      LET g_inpa_m.inpa020 = "1"
      LET g_inpa_m.inpa023 = "1"
      LET g_inpa_m.inpa024 = "Y"
 
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
 
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_inpa_m_t.* = g_inpa_m.*
      LET g_inpa_m_o.* = g_inpa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inpa_m.inpastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "T"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/org_approved.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL aint820_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_inpa_m.* TO NULL
         INITIALIZE g_inpb_d TO NULL
         INITIALIZE g_inpb2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aint820_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_inpb_d.clear()
      #CALL g_inpb2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint820_set_act_visible()   
   CALL aint820_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_inpadocno_t = g_inpa_m.inpadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " inpaent = '" ||g_enterprise|| "' AND",
                      " inpadocno = '", g_inpa_m.inpadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint820_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aint820_cl
   
   CALL aint820_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aint820_master_referesh USING g_inpa_m.inpadocno INTO g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
       g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005, 
       g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
       g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015, 
       g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021, 
       g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
       g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028, 
       g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
       g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid, 
       g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid, 
       g_inpa_m.inpacnfdt,g_inpa_m.inpa002_desc,g_inpa_m.inpa003_desc,g_inpa_m.inpa004_desc,g_inpa_m.inpa018_desc, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa021_desc,g_inpa_m.inpa022_desc,g_inpa_m.inpa050_desc,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052_desc,g_inpa_m.inpa053_desc,g_inpa_m.inpa054_desc,g_inpa_m.inpaownid_desc,g_inpa_m.inpaowndp_desc, 
       g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpamodid_desc,g_inpa_m.inpacnfid_desc 

   
   #遮罩相關處理
   LET g_inpa_m_mask_o.* =  g_inpa_m.*
   CALL aint820_inpa_t_mask()
   LET g_inpa_m_mask_n.* =  g_inpa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa002_desc,g_inpa_m.inpadocno_desc, 
       g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpa003_desc,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa004_desc, 
       g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008, 
       g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014, 
       g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa018_desc,g_inpa_m.inpa019, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa021_desc,g_inpa_m.inpa022, 
       g_inpa_m.inpa022_desc,g_inpa_m.inpa050,g_inpa_m.inpa050_desc,g_inpa_m.inpa051,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052,g_inpa_m.inpa052_desc,g_inpa_m.inpa053,g_inpa_m.inpa053_desc,g_inpa_m.inpa054, 
       g_inpa_m.inpa054_desc,g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027, 
       g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033, 
       g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaownid_desc, 
       g_inpa_m.inpaowndp,g_inpa_m.inpaowndp_desc,g_inpa_m.inpacrtid,g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp, 
       g_inpa_m.inpacrtdp_desc,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamodid_desc,g_inpa_m.inpamoddt, 
       g_inpa_m.inpacnfid,g_inpa_m.inpacnfid_desc,g_inpa_m.inpacnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aint820_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="aint820.insert_b" ver="11" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint820_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO inpb_t
                  (inpbent,
                   inpbdocno,
                   inpbseq
                   ,inpb001,inpb002,inpb003,inpb004,inpb005,inpb006,inpb007) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_inpb_d[g_detail_idx].inpb001,g_inpb_d[g_detail_idx].inpb002,g_inpb_d[g_detail_idx].inpb003, 
                       g_inpb_d[g_detail_idx].inpb004,g_inpb_d[g_detail_idx].inpb005,g_inpb_d[g_detail_idx].inpb006, 
                       g_inpb_d[g_detail_idx].inpb007)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inpb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_inpb_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO inpc_t
                  (inpcent,
                   inpcdocno,
                   inpcseq
                   ,inpc001,inpcsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_inpb2_d[g_detail_idx].inpc001,g_inpb2_d[g_detail_idx].inpcsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inpc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_inpb2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aint820.key_delete_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aint820_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint820.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aint820_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aint820.lock_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint820_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL aint820_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "inpb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint820_bcl USING g_enterprise,
                                       g_inpa_m.inpadocno,g_inpb_d[g_detail_idx].inpbseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint820_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "inpc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aint820_bcl2 USING g_enterprise,
                                             g_inpa_m.inpadocno,g_inpb2_d[g_detail_idx].inpcseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint820_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint820.main" ver="21" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT inpadocno,inpadocdt,inpa002,'','',inpa001,inpa003,'',inpastus,inpa004, 
       '',inpa005,inpa006,inpa040,inpa041,inpa007,inpa008,inpa009,inpa010,inpa011,inpa012,inpa013,inpa014, 
       inpa015,inpa016,inpa017,inpa018,'',inpa019,'',inpa020,inpa021,'',inpa022,'',inpa050,'',inpa051, 
       '',inpa052,'',inpa053,'',inpa054,'',inpa023,inpa024,inpa025,inpa026,inpa027,inpa028,inpa029,inpa030, 
       inpa031,inpa032,inpa033,inpa034,inpa035,inpa036,inpa037,inpaownid,'',inpaowndp,'',inpacrtid,'', 
       inpacrtdp,'',inpacrtdt,inpamodid,'',inpamoddt,inpacnfid,'',inpacnfdt", 
                      " FROM inpa_t",
                      " WHERE inpaent= ? AND inpadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint820_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.inpadocno,t0.inpadocdt,t0.inpa002,t0.inpa001,t0.inpa003,t0.inpastus, 
       t0.inpa004,t0.inpa005,t0.inpa006,t0.inpa040,t0.inpa041,t0.inpa007,t0.inpa008,t0.inpa009,t0.inpa010, 
       t0.inpa011,t0.inpa012,t0.inpa013,t0.inpa014,t0.inpa015,t0.inpa016,t0.inpa017,t0.inpa018,t0.inpa019, 
       t0.inpa020,t0.inpa021,t0.inpa022,t0.inpa050,t0.inpa051,t0.inpa052,t0.inpa053,t0.inpa054,t0.inpa023, 
       t0.inpa024,t0.inpa025,t0.inpa026,t0.inpa027,t0.inpa028,t0.inpa029,t0.inpa030,t0.inpa031,t0.inpa032, 
       t0.inpa033,t0.inpa034,t0.inpa035,t0.inpa036,t0.inpa037,t0.inpaownid,t0.inpaowndp,t0.inpacrtid, 
       t0.inpacrtdp,t0.inpacrtdt,t0.inpamodid,t0.inpamoddt,t0.inpacnfid,t0.inpacnfdt,t1.ooag011 ,t2.ooefl003 , 
       t3.ooag011 ,t4.oobxl003 ,t5.oobxl003 ,t6.oobxl003 ,t7.oobxl003 ,t8.oobxl003 ,t9.oobxl003 ,t10.oobxl003 , 
       t11.oobxl003 ,t12.oobxl003 ,t13.ooag011 ,t14.ooefl003 ,t15.ooag011 ,t16.ooefl003 ,t17.ooag011 , 
       t18.ooag011",
               " FROM inpa_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.inpa002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.inpa003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.inpa004  ",
               " LEFT JOIN oobxl_t t4 ON t4.oobxlent='"||g_enterprise||"' AND t4.oobxl001=t0.inpa018 AND t4.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t5 ON t5.oobxlent='"||g_enterprise||"' AND t5.oobxl001=t0.inpa019 AND t5.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t6 ON t6.oobxlent='"||g_enterprise||"' AND t6.oobxl001=t0.inpa021 AND t6.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t7 ON t7.oobxlent='"||g_enterprise||"' AND t7.oobxl001=t0.inpa022 AND t7.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t8 ON t8.oobxlent='"||g_enterprise||"' AND t8.oobxl001=t0.inpa050 AND t8.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t9 ON t9.oobxlent='"||g_enterprise||"' AND t9.oobxl001=t0.inpa051 AND t9.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t10 ON t10.oobxlent='"||g_enterprise||"' AND t10.oobxl001=t0.inpa052 AND t10.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t11 ON t11.oobxlent='"||g_enterprise||"' AND t11.oobxl001=t0.inpa053 AND t11.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN oobxl_t t12 ON t12.oobxlent='"||g_enterprise||"' AND t12.oobxl001=t0.inpa054 AND t12.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent='"||g_enterprise||"' AND t13.ooag001=t0.inpaownid  ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent='"||g_enterprise||"' AND t14.ooefl001=t0.inpaowndp AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent='"||g_enterprise||"' AND t15.ooag001=t0.inpacrtid  ",
               " LEFT JOIN ooefl_t t16 ON t16.ooeflent='"||g_enterprise||"' AND t16.ooefl001=t0.inpacrtdp AND t16.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t17 ON t17.ooagent='"||g_enterprise||"' AND t17.ooag001=t0.inpamodid  ",
               " LEFT JOIN ooag_t t18 ON t18.ooagent='"||g_enterprise||"' AND t18.ooag001=t0.inpacnfid  ",
 
               " WHERE t0.inpaent = '" ||g_enterprise|| "' AND t0.inpadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint820_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint820 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint820_init()   
 
      #進入選單 Menu (="N")
      CALL aint820_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint820
      
   END IF 
   
   CLOSE aint820_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aint820.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ain/aint820_mask.4gl"
]]>
  </section>
  <section id="aint820.modify" ver="24" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint820_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_inpa_m_t.* = g_inpa_m.*
   LET g_inpa_m_o.* = g_inpa_m.*
   
   IF g_inpa_m.inpadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_inpadocno_t = g_inpa_m.inpadocno
 
   CALL s_transaction_begin()
   
   OPEN aint820_cl USING g_enterprise,g_inpa_m.inpadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint820_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint820_master_referesh USING g_inpa_m.inpadocno INTO g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
       g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005, 
       g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
       g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015, 
       g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021, 
       g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
       g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028, 
       g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
       g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid, 
       g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid, 
       g_inpa_m.inpacnfdt,g_inpa_m.inpa002_desc,g_inpa_m.inpa003_desc,g_inpa_m.inpa004_desc,g_inpa_m.inpa018_desc, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa021_desc,g_inpa_m.inpa022_desc,g_inpa_m.inpa050_desc,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052_desc,g_inpa_m.inpa053_desc,g_inpa_m.inpa054_desc,g_inpa_m.inpaownid_desc,g_inpa_m.inpaowndp_desc, 
       g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpamodid_desc,g_inpa_m.inpacnfid_desc 

   
   #檢查是否允許此動作
   IF NOT aint820_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_inpa_m_mask_o.* =  g_inpa_m.*
   CALL aint820_inpa_t_mask()
   LET g_inpa_m_mask_n.* =  g_inpa_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL aint820_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_inpadocno_t = g_inpa_m.inpadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_inpa_m.inpamodid = g_user 
LET g_inpa_m.inpamoddt = cl_get_current()
LET g_inpa_m.inpamodid_desc = cl_get_username(g_inpa_m.inpamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aint820_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE inpa_t SET (inpamodid,inpamoddt) = (g_inpa_m.inpamodid,g_inpa_m.inpamoddt)
          WHERE inpaent = g_enterprise AND inpadocno = g_inpadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inpa_m.* = g_inpa_m_t.*
         CALL aint820_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_inpa_m.inpadocno != g_inpadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE inpb_t SET inpbdocno = g_inpa_m.inpadocno
 
          WHERE inpbent = g_enterprise AND inpbdocno = g_inpadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inpb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inpb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE inpc_t
            SET inpcdocno = g_inpa_m.inpadocno
 
          WHERE inpcent = g_enterprise AND
                inpcdocno = g_inpadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inpc_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inpc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint820_set_act_visible()   
   CALL aint820_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " inpaent = '" ||g_enterprise|| "' AND",
                      " inpadocno = '", g_inpa_m.inpadocno, "' "
 
   #填到對應位置
   CALL aint820_browser_fill("")
 
   CLOSE aint820_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint820_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="aint820.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION aint820_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL aint820_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_inpa_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aint820.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aint820.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint820.query" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint820_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_inpb_d.clear()
   CALL g_inpb2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aint820_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint820_browser_fill("")
      CALL aint820_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint820_filter_show('inpadocno')
   CALL aint820_filter_show('inpadocdt')
   CALL aint820_filter_show('inpa002')
   CALL aint820_filter_show('inpa003')
   CALL aint820_filter_show('inpa004')
   CALL aint820_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aint820_fetch("F") 
      #顯示單身筆數
      CALL aint820_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint820.reproduce" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aint820_reproduce()
   DEFINE l_newno     LIKE inpa_t.inpadocno 
   DEFINE l_oldno     LIKE inpa_t.inpadocno 
 
   DEFINE l_master    RECORD LIKE inpa_t.*
   DEFINE l_detail    RECORD LIKE inpb_t.*
   DEFINE l_detail2    RECORD LIKE inpc_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_inpa_m.inpadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_inpadocno_t = g_inpa_m.inpadocno
 
    
   LET g_inpa_m.inpadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_inpa_m.inpaownid = g_user
      LET g_inpa_m.inpaowndp = g_dept
      LET g_inpa_m.inpacrtid = g_user
      LET g_inpa_m.inpacrtdp = g_dept 
      LET g_inpa_m.inpacrtdt = cl_get_current()
      LET g_inpa_m.inpamodid = g_user
      LET g_inpa_m.inpamoddt = cl_get_current()
      LET g_inpa_m.inpastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inpa_m.inpastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "T"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/org_approved.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_inpa_m.inpadocno_desc = ''
   DISPLAY BY NAME g_inpa_m.inpadocno_desc
 
   
   CALL aint820_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_inpa_m.* TO NULL
      INITIALIZE g_inpb_d TO NULL
      INITIALIZE g_inpb2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aint820_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint820_set_act_visible()   
   CALL aint820_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_inpadocno_t = g_inpa_m.inpadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " inpaent = '" ||g_enterprise|| "' AND",
                      " inpadocno = '", g_inpa_m.inpadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint820_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aint820_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aint820_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="aint820.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aint820_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint820.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aint820_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint820.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aint820_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint820.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aint820_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint820.set_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint820_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("inpadocno,inpadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("inpadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint820.set_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint820_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aint820.set_no_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint820_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("inpadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("inpadocno,inpadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint820.set_no_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint820_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aint820.set_pk_array" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aint820_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_inpa_m.inpadocno
   LET g_pk_array[1].column = 'inpadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint820.show" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint820_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint820_b_fill() #單身填充
      CALL aint820_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aint820_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_inpa_m_mask_o.* =  g_inpa_m.*
   CALL aint820_inpa_t_mask()
   LET g_inpa_m_mask_n.* =  g_inpa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa002_desc,g_inpa_m.inpadocno_desc, 
       g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpa003_desc,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa004_desc, 
       g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008, 
       g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014, 
       g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa018_desc,g_inpa_m.inpa019, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa021_desc,g_inpa_m.inpa022, 
       g_inpa_m.inpa022_desc,g_inpa_m.inpa050,g_inpa_m.inpa050_desc,g_inpa_m.inpa051,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052,g_inpa_m.inpa052_desc,g_inpa_m.inpa053,g_inpa_m.inpa053_desc,g_inpa_m.inpa054, 
       g_inpa_m.inpa054_desc,g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027, 
       g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033, 
       g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaownid_desc, 
       g_inpa_m.inpaowndp,g_inpa_m.inpaowndp_desc,g_inpa_m.inpacrtid,g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp, 
       g_inpa_m.inpacrtdp_desc,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamodid_desc,g_inpa_m.inpamoddt, 
       g_inpa_m.inpacnfid,g_inpa_m.inpacnfid_desc,g_inpa_m.inpacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_inpa_m.inpastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "T"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/org_approved.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_inpb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_inpb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint820_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint820.signature" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION aint820_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL aint820_show()
   CALL aint820_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_inpa_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_inpb_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_inpb2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aint820_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint820_ui_headershow()
   CALL aint820_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION aint820_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint820_ui_headershow()  
   CALL aint820_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aint820.state_change" ver="11" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION aint820_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_inpa_m.inpadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aint820_cl USING g_enterprise,g_inpa_m.inpadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint820_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aint820_master_referesh USING g_inpa_m.inpadocno INTO g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
       g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005, 
       g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
       g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015, 
       g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021, 
       g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
       g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028, 
       g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
       g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid, 
       g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid, 
       g_inpa_m.inpacnfdt,g_inpa_m.inpa002_desc,g_inpa_m.inpa003_desc,g_inpa_m.inpa004_desc,g_inpa_m.inpa018_desc, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa021_desc,g_inpa_m.inpa022_desc,g_inpa_m.inpa050_desc,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052_desc,g_inpa_m.inpa053_desc,g_inpa_m.inpa054_desc,g_inpa_m.inpaownid_desc,g_inpa_m.inpaowndp_desc, 
       g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpamodid_desc,g_inpa_m.inpacnfid_desc 

 
   #檢查是否允許此動作
   IF NOT aint820_action_chk() THEN
      CLOSE aint820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa002_desc,g_inpa_m.inpadocno_desc, 
       g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpa003_desc,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa004_desc, 
       g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008, 
       g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014, 
       g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa018_desc,g_inpa_m.inpa019, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa020,g_inpa_m.inpa021,g_inpa_m.inpa021_desc,g_inpa_m.inpa022, 
       g_inpa_m.inpa022_desc,g_inpa_m.inpa050,g_inpa_m.inpa050_desc,g_inpa_m.inpa051,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052,g_inpa_m.inpa052_desc,g_inpa_m.inpa053,g_inpa_m.inpa053_desc,g_inpa_m.inpa054, 
       g_inpa_m.inpa054_desc,g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027, 
       g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033, 
       g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaownid_desc, 
       g_inpa_m.inpaowndp,g_inpa_m.inpaowndp_desc,g_inpa_m.inpacrtid,g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp, 
       g_inpa_m.inpacrtdp_desc,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamodid_desc,g_inpa_m.inpamoddt, 
       g_inpa_m.inpacnfid,g_inpa_m.inpacnfid_desc,g_inpa_m.inpacnfdt
 
   CASE g_inpa_m.inpastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "T"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/org_approved.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_inpa_m.inpastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "T"
               HIDE OPTION "org_approved"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aint820_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint820_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aint820_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint820_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION org_approved
         IF cl_auth_chk_act("org_approved") THEN
            LET lc_state = "T"
            #add-point:action控制
            {<point name="statechange.org_approved"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "T"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_inpa_m.inpastus = lc_state OR cl_null(lc_state) THEN
      CLOSE aint820_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_inpa_m.inpamodid = g_user
   LET g_inpa_m.inpamoddt = cl_get_current()
   LET g_inpa_m.inpastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE inpa_t 
      SET (inpastus,inpamodid,inpamoddt) 
        = (g_inpa_m.inpastus,g_inpa_m.inpamodid,g_inpa_m.inpamoddt)     
    WHERE inpaent = g_enterprise AND inpadocno = g_inpa_m.inpadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "T"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/org_approved.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aint820_master_referesh USING g_inpa_m.inpadocno INTO g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
          g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005, 
          g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
          g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015, 
          g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021, 
          g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
          g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028, 
          g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
          g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid, 
          g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid, 
          g_inpa_m.inpacnfdt,g_inpa_m.inpa002_desc,g_inpa_m.inpa003_desc,g_inpa_m.inpa004_desc,g_inpa_m.inpa018_desc, 
          g_inpa_m.inpa019_desc,g_inpa_m.inpa021_desc,g_inpa_m.inpa022_desc,g_inpa_m.inpa050_desc,g_inpa_m.inpa051_desc, 
          g_inpa_m.inpa052_desc,g_inpa_m.inpa053_desc,g_inpa_m.inpa054_desc,g_inpa_m.inpaownid_desc, 
          g_inpa_m.inpaowndp_desc,g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpamodid_desc, 
          g_inpa_m.inpacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_inpa_m.inpadocno,g_inpa_m.inpadocdt,g_inpa_m.inpa002,g_inpa_m.inpa002_desc,g_inpa_m.inpadocno_desc, 
          g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpa003_desc,g_inpa_m.inpastus,g_inpa_m.inpa004, 
          g_inpa_m.inpa004_desc,g_inpa_m.inpa005,g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041, 
          g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009,g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012, 
          g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015,g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018, 
          g_inpa_m.inpa018_desc,g_inpa_m.inpa019,g_inpa_m.inpa019_desc,g_inpa_m.inpa020,g_inpa_m.inpa021, 
          g_inpa_m.inpa021_desc,g_inpa_m.inpa022,g_inpa_m.inpa022_desc,g_inpa_m.inpa050,g_inpa_m.inpa050_desc, 
          g_inpa_m.inpa051,g_inpa_m.inpa051_desc,g_inpa_m.inpa052,g_inpa_m.inpa052_desc,g_inpa_m.inpa053, 
          g_inpa_m.inpa053_desc,g_inpa_m.inpa054,g_inpa_m.inpa054_desc,g_inpa_m.inpa023,g_inpa_m.inpa024, 
          g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028,g_inpa_m.inpa029,g_inpa_m.inpa030, 
          g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034,g_inpa_m.inpa035,g_inpa_m.inpa036, 
          g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaownid_desc,g_inpa_m.inpaowndp,g_inpa_m.inpaowndp_desc, 
          g_inpa_m.inpacrtid,g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpacrtdt, 
          g_inpa_m.inpamodid,g_inpa_m.inpamodid_desc,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid,g_inpa_m.inpacnfid_desc, 
          g_inpa_m.inpacnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aint820_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint820_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint820.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aint820_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aint820.ui_browser_refresh" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint820_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_inpadocno = g_inpa_m.inpadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint820.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint820_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint820.ui_dialog" ver="23" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aint820_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint820_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_inpa_m.* TO NULL
         CALL g_inpb_d.clear()
         CALL g_inpb2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aint820_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint820_fetch('') # reload data
               LET l_ac = 1
               CALL aint820_ui_detailshow() #Setting the current row 
         
               CALL aint820_idx_chk()
               #NEXT FIELD inpbseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_inpb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint820_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aint820_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_inpb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint820_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL aint820_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aint820_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint820_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint820_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint820_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint820_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aint820_set_act_visible()   
            CALL aint820_set_act_no_visible()
            IF NOT (g_inpa_m.inpadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " inpaent = '" ||g_enterprise|| "' AND",
                                  " inpadocno = '", g_inpa_m.inpadocno, "' "
 
               #填到對應位置
               CALL aint820_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL aint820_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL aint820_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL aint820_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint820_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aint820_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint820_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aint820_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint820_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aint820_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint820_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aint820_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint820_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aint820_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint820_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_inpb_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_inpb2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inpbseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint820_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint820_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint820_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/ain/aint820_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint820_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint820_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint820_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aint820_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint820_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint820_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_inpa_m.inpadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aint820.ui_headershow" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint820_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_inpa_m.inpadocno = g_browser[g_current_idx].b_inpadocno   
 
   EXECUTE aint820_master_referesh USING g_inpa_m.inpadocno INTO g_inpa_m.inpadocno,g_inpa_m.inpadocdt, 
       g_inpa_m.inpa002,g_inpa_m.inpa001,g_inpa_m.inpa003,g_inpa_m.inpastus,g_inpa_m.inpa004,g_inpa_m.inpa005, 
       g_inpa_m.inpa006,g_inpa_m.inpa040,g_inpa_m.inpa041,g_inpa_m.inpa007,g_inpa_m.inpa008,g_inpa_m.inpa009, 
       g_inpa_m.inpa010,g_inpa_m.inpa011,g_inpa_m.inpa012,g_inpa_m.inpa013,g_inpa_m.inpa014,g_inpa_m.inpa015, 
       g_inpa_m.inpa016,g_inpa_m.inpa017,g_inpa_m.inpa018,g_inpa_m.inpa019,g_inpa_m.inpa020,g_inpa_m.inpa021, 
       g_inpa_m.inpa022,g_inpa_m.inpa050,g_inpa_m.inpa051,g_inpa_m.inpa052,g_inpa_m.inpa053,g_inpa_m.inpa054, 
       g_inpa_m.inpa023,g_inpa_m.inpa024,g_inpa_m.inpa025,g_inpa_m.inpa026,g_inpa_m.inpa027,g_inpa_m.inpa028, 
       g_inpa_m.inpa029,g_inpa_m.inpa030,g_inpa_m.inpa031,g_inpa_m.inpa032,g_inpa_m.inpa033,g_inpa_m.inpa034, 
       g_inpa_m.inpa035,g_inpa_m.inpa036,g_inpa_m.inpa037,g_inpa_m.inpaownid,g_inpa_m.inpaowndp,g_inpa_m.inpacrtid, 
       g_inpa_m.inpacrtdp,g_inpa_m.inpacrtdt,g_inpa_m.inpamodid,g_inpa_m.inpamoddt,g_inpa_m.inpacnfid, 
       g_inpa_m.inpacnfdt,g_inpa_m.inpa002_desc,g_inpa_m.inpa003_desc,g_inpa_m.inpa004_desc,g_inpa_m.inpa018_desc, 
       g_inpa_m.inpa019_desc,g_inpa_m.inpa021_desc,g_inpa_m.inpa022_desc,g_inpa_m.inpa050_desc,g_inpa_m.inpa051_desc, 
       g_inpa_m.inpa052_desc,g_inpa_m.inpa053_desc,g_inpa_m.inpa054_desc,g_inpa_m.inpaownid_desc,g_inpa_m.inpaowndp_desc, 
       g_inpa_m.inpacrtid_desc,g_inpa_m.inpacrtdp_desc,g_inpa_m.inpamodid_desc,g_inpa_m.inpacnfid_desc 

   CALL aint820_inpa_t_mask()
   CALL aint820_show()
      
END FUNCTION
]]>
  </section>
  <section id="aint820.unlock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint820_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint820_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint820_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aint820.update_b" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint820_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inpb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aint820_inpb_t_mask_restore('restore_mask_o')
               
      UPDATE inpb_t 
         SET (inpbdocno,
              inpbseq
              ,inpb001,inpb002,inpb003,inpb004,inpb005,inpb006,inpb007) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_inpb_d[g_detail_idx].inpb001,g_inpb_d[g_detail_idx].inpb002,g_inpb_d[g_detail_idx].inpb003, 
                  g_inpb_d[g_detail_idx].inpb004,g_inpb_d[g_detail_idx].inpb005,g_inpb_d[g_detail_idx].inpb006, 
                  g_inpb_d[g_detail_idx].inpb007) 
         WHERE inpbent = g_enterprise AND inpbdocno = ps_keys_bak[1] AND inpbseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inpb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inpb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint820_inpb_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inpc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL aint820_inpc_t_mask_restore('restore_mask_o')
               
      UPDATE inpc_t 
         SET (inpcdocno,
              inpcseq
              ,inpc001,inpcsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_inpb2_d[g_detail_idx].inpc001,g_inpb2_d[g_detail_idx].inpcsite) 
         WHERE inpcent = g_enterprise AND inpcdocno = ps_keys_bak[1] AND inpcseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inpc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inpc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint820_inpc_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
