<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint610" std_prog="aint610" erpver="1.0" module="AIN" ver="2" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.aint610_indq002_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq002_ref()
   DEFINE ls_sql      STRING  
   SELECT imay001,imay014 
     INTO g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq007
     FROM imay_t 
    WHERE imayent = g_enterprise 
      AND imay003 = g_indq_d[l_ac].indq002
    
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq001
    LET ls_sql = "SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? "
    LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
    CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq001_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq001_desc

    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq001
    LET ls_sql = "SELECT imaa009 FROM imaa_t WHERE imaaent='"||g_enterprise||"' AND imaa001=? "
    LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
    CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq001_desc_1 = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq001_desc_1
    
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq001_desc_1
    LET ls_sql = "SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'"
    LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
    CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq001_desc_2 = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq001_desc_2
    
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq007
    CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq007_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq007_desc
END FUNCTION]]>
  </point>
  <point name="function.aint610_indq001_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq001_ref()
   DEFINE  ls_sql      STRING 
   DEFINE  l_cnt       LIKE type_t.num10    
   
#    #根据料号取库存单位
#   SELECT imaa104 
#     INTO g_indq_d[l_ac].indq007
#     FROM imaa_t 
#    WHERE imaaent = g_enterprise 
#      AND imaa001 = g_indq_d[l_ac].indq001
#    #依商品編號自動帶出商品條碼(若條碼為空)
#   
#       SELECT imay003 INTO g_indq_d[l_ac].indq002
#         FROM imay_t
#         WHERE imayent = g_enterprise AND imay001 = g_indq_d[l_ac].indq001 AND imay006 = 'Y' AND imaystus = 'Y' 
  
    
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq001
    LET ls_sql = "SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? "
    LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
    CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq001_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq001_desc

    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq001
    LET ls_sql = "SELECT imaa009 FROM imaa_t WHERE imaaent='"||g_enterprise||"' AND imaa001=? "
    LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
    CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq001_desc_1 = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq001_desc_1
    
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq001_desc_1
    LET ls_sql = "SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'"
    LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
    CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq001_desc_2 = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq001_desc_2
    
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq007
    CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq007_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq007_desc
      
END FUNCTION]]>
  </point>
  <point name="function.aint610_indq001_indq004_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq001_indq004_ref()
   DEFINE  r_cost       LIKE indq_t.indq011    
   DEFINE  r_success    LIKE type_t.num5
   #初始化
   INITIALIZE g_indq_d[l_ac].indq008,g_indq_d[l_ac].indq010,g_indq_d[l_ac].indq0091,
              g_indq_d[l_ac].indq0101,g_indq_d[l_ac].indq0111 TO NULL
   #商品特征
   IF cl_null(g_indq_d[l_ac].indq003) THEN
      LET g_indq_d[l_ac].indq003 = ' '
   END IF
    #存储编号为空
   IF cl_null(g_indq_d[l_ac].indq005) THEN
      LET g_indq_d[l_ac].indq005 = ' '
   END IF
   #批号为空
   IF cl_null(g_indq_d[l_ac].indq006) THEN
      LET g_indq_d[l_ac].indq006 = ' '
   END IF
#   #存储编号为空
#   IF cl_null(g_indq_d[l_ac].indq005) AND  cl_null(g_indq_d[l_ac].indq006) THEN 
#      SELECT inag009
#        INTO g_indq_d[l_ac].indq008
#        FROM inag_t 
#       WHERE inagent = g_enterprise 
#         AND inagsite = g_indp_m.indpsite
#         AND inag001 = g_indq_d[l_ac].indq001
#         AND inag004 = g_indq_d[l_ac].indq004
#         AND inag007 = g_indq_d[l_ac].indq007
#         AND inag005 = ' '
#         AND inag006 = ' '
#         AND inag002 = g_indq_d[l_ac].indq003
#         AND inag003 = ' '
#   END IF 
#   #批号为空
#   IF cl_null(g_indq_d[l_ac].indq006) AND NOT cl_null(g_indq_d[l_ac].indq005)  THEN 
#      SELECT inag009
#        INTO g_indq_d[l_ac].indq008
#        FROM inag_t 
#       WHERE inagent = g_enterprise 
#         AND inagsite = g_indp_m.indpsite
#         AND inag001 = g_indq_d[l_ac].indq001
#         AND inag004 = g_indq_d[l_ac].indq004
#         AND inag007 = g_indq_d[l_ac].indq007
#         AND inag005 = g_indq_d[l_ac].indq005
#         AND inag006 = ' '
#         AND inag002 = g_indq_d[l_ac].indq003
#         AND inag003 = ' '
#   END IF 
#   IF cl_null(g_indq_d[l_ac].indq005) AND NOT cl_null(g_indq_d[l_ac].indq006)  THEN 
#      SELECT inag009
#        INTO g_indq_d[l_ac].indq008
#        FROM inag_t 
#       WHERE inagent = g_enterprise 
#         AND inagsite = g_indp_m.indpsite
#         AND inag001 = g_indq_d[l_ac].indq001
#         AND inag004 = g_indq_d[l_ac].indq004
#         AND inag007 = g_indq_d[l_ac].indq007
#         AND inag005 = ' '
#         AND inag006 = g_indq_d[l_ac].indq006
#         AND inag002 = g_indq_d[l_ac].indq003
#         AND inag003 = ' '
#   END IF
   
   SELECT inag009
     INTO g_indq_d[l_ac].indq008
     FROM inag_t 
    WHERE inagent = g_enterprise 
      AND inagsite = g_indp_m.indpsite
      AND inag001 = g_indq_d[l_ac].indq001
      AND inag004 = g_indq_d[l_ac].indq004
      AND inag007 = g_indq_d[l_ac].indq007
      AND inag005 = g_indq_d[l_ac].indq005
      AND inag006 = g_indq_d[l_ac].indq006
      AND inag002 = g_indq_d[l_ac].indq003
      AND inag003 = ' '
    
    
    #查出原实际库存为空，赋值为零    
    IF cl_null(g_indq_d[l_ac].indq008) THEN 
       LET g_indq_d[l_ac].indq008 = 0
    END IF

    CALL s_cost_get(g_indp_m.indpsite,g_today,g_indq_d[l_ac].indq001,'','','','','','','','','')
      RETURNING r_cost,r_success
    LET  g_indq_d[l_ac].indq010 = r_cost
    IF NOT cl_null(g_indq_d[l_ac].indq009) THEN 
       LET g_indq_d[l_ac].indq0091 = g_indq_d[l_ac].indq008 - g_indq_d[l_ac].indq009
       LET g_indq_d[l_ac].indq0101 = g_indq_d[l_ac].indq0091 * g_indq_d[l_ac].indq010
       LET g_indq_d[l_ac].indq0111 = g_indq_d[l_ac].indq0091 * g_indq_d[l_ac].indq011
    END IF
    IF  cl_null(g_indq_d[l_ac].indq001) OR cl_null(g_indq_d[l_ac].indq004) OR cl_null(g_indq_d[l_ac].indq007) THEN 
       LET g_indq_d[l_ac].indq008 = ''
       LET g_indq_d[l_ac].indq010 = '' 
       LET g_indq_d[l_ac].indq0101 = ''
       LET g_indq_d[l_ac].indq0111 = ''
    END IF    
      
END FUNCTION]]>
  </point>
  <point name="function.aint610_indq004_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_indq_d[l_ac].indq004
   CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_indq_d[l_ac].indq004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_indq_d[l_ac].indq004_desc
 
END FUNCTION]]>
  </point>
  <point name="function.aint610_indq005_ref" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq005_ref()
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq004
    LET g_ref_fields[2] = g_indq_d[l_ac].indq005
    CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq005_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq005_desc
END FUNCTION]]>
  </point>
  <point name="function.aint610_indq001_get_cost" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq001_get_cost()
DEFINE l_rtaj001           LIKE rtaj_t.rtaj001   #條碼類型
DEFINE l_rtib021           LIKE rtib_t.rtib021   #條碼金額
DEFINE l_rtib012           LIKE rtib_t.rtib012   #條碼重量
DEFINE l_rtib008           LIKE rtib_t.rtib008   #條碼價格
DEFINE l_serial            LIKE type_t.chr80     #流水碼
DEFINE r_success           LIKE type_t.num5
DEFINE l_cnt       LIKE type_t.num10   
  #判断是否是生鲜商品
   SELECT COUNT(*) INTO l_cnt 
     FROM imaa_t 
    WHERE imaaent = g_enterprise
      AND imaa001 = g_indq_d[l_ac].indq001 
      AND imaa009 IN (SELECT oocq002
                      FROM oocq_t
                     WHERE oocqent = 99
                       AND oocq001 = '2099')
                     
   IF l_cnt > 0  THEN
      #查出生鲜售价
      #條碼解析
      CALL s_get_price_parsing(g_indq_d[l_ac].indq002) RETURNING r_success,l_rtaj001,l_rtib021,l_rtib012,l_rtib008,l_serial
      SELECT prbh012 INTO g_indq_d[l_ac].indq011
        FROM prbh_t
       WHERE prbhent = g_enterprise
         AND prbhsite = g_indp_m.indpsite
         AND prbh004 = l_serial
         AND prbhstus = 'Y'
   ELSE 
      #查出售价
      SELECT rtdx016 
        INTO g_indq_d[l_ac].indq011
        FROM rtdx_t 
       WHERE rtdxent = g_enterprise 
         AND rtdxsite = g_indp_m.indpsite
         AND rtdx001 = g_indq_d[l_ac].indq001
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aint610_indp002_ref" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indp002_ref()
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indp_m.indp002
    CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
    LET g_indp_m.indp002_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indp_m.indp002_desc
END FUNCTION]]>
  </point>
  <point name="function.aint610_indp003_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indp003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_indp_m.indp003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_indp_m.indp003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_indp_m.indp003_desc
END FUNCTION]]>
  </point>
  <point name="function.aint610_indq012_ref" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq012_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_indq_d[l_ac].indq012
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2130' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_indq_d[l_ac].indq012_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_indq_d[l_ac].indq012_desc
END FUNCTION]]>
  </point>
  <point name="function.aint610_indp001_ref" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indp001_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_indp_m.indp001
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_indp_m.indp001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_indp_m.indp001_desc
END FUNCTION]]>
  </point>
  <point name="function.aint610_repeat_chk" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 未审核资料重复检查

################################################################################
PRIVATE FUNCTION aint610_repeat_chk()
DEFINE l_cnt       LIKE type_t.num10        
   INITIALIZE g_errno TO NULL
   #存储编号为空
   IF cl_null(g_indq_d[l_ac].indq005)  THEN 
      LET g_indq_d[l_ac].indq005 = ' '
   END IF 
   #批号为空
   IF cl_null(g_indq_d[l_ac].indq006)  THEN 
      LET g_indq_d[l_ac].indq006 = ' '
   END IF
   IF cl_null(g_indq_d[l_ac].indq003)  THEN 
      LET g_indq_d[l_ac].indq003 = ' '
   END IF   
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt 
     FROM indq_t,indp_t
    WHERE indqent = indpent
      AND indqdocno = indpdocno
      AND indpsite = g_indp_m.indpsite
      AND indpstus = 'N'
      AND indq001 = g_indq_d[l_ac].indq001
      AND indq004 = g_indq_d[l_ac].indq004
      AND indq005 = g_indq_d[l_ac].indq005
      AND indq006 = g_indq_d[l_ac].indq006
      AND indq003 = g_indq_d[l_ac].indq003
   IF l_cnt > 0 THEN 
      LET g_errno = 'ain-00543'  #不能存在相同商品编号+库区编号+储位编号+批号的未审核资料    
   END IF 
         
END FUNCTION]]>
  </point>
  <point name="function.aint610_indq001_init" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################

################################################################################
PRIVATE FUNCTION aint610_indq001_init()
    #根据料号取库存单位
   SELECT imaa104 
     INTO g_indq_d[l_ac].indq007
     FROM imaa_t 
    WHERE imaaent = g_enterprise 
      AND imaa001 = g_indq_d[l_ac].indq001
    #依商品編號自動帶出商品條碼(若條碼為空)
   
       SELECT imay003 INTO g_indq_d[l_ac].indq002
         FROM imay_t
         WHERE imayent = g_enterprise AND imay001 = g_indq_d[l_ac].indq001 AND imay006 = 'Y' AND imaystus = 'Y' 
         
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_indq_d[l_ac].indq007
    CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_indq_d[l_ac].indq007_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_indq_d[l_ac].indq007_desc
           
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE ls_sql      STRING
   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL s_feature_description(g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq003) RETURNING l_success,g_indq_d[l_ac].indq003_desc
         DISPLAY BY NAME g_indq_d[l_ac].indq003_desc
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_indq_d[l_ac].indq004
         CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_indq_d[l_ac].indq004_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_indq_d[l_ac].indq004_desc
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_indq_d[l_ac].indq001
         LET ls_sql = "SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? "
         LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
         CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
         LET g_indq_d[l_ac].indq001_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_indq_d[l_ac].indq001_desc
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_indq_d[l_ac].indq001
         LET ls_sql = "SELECT imaa009 FROM imaa_t WHERE imaaent='"||g_enterprise||"' AND imaa001=? "
         LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
         CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
         LET g_indq_d[l_ac].indq001_desc_1 = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_indq_d[l_ac].indq001_desc_1
         
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_indq_d[l_ac].indq001_desc_1
         LET ls_sql = "SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'"
         LET ls_sql = cl_sql_add_mask(ls_sql)              #遮蔽特定資料
         CALL ap_ref_array2(g_ref_fields,ls_sql,"") RETURNING g_rtn_fields
         LET g_indq_d[l_ac].indq001_desc_2 = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_indq_d[l_ac].indq001_desc_2
         
         #计算差异数量，差异成本，差异售额
         
         LET g_indq_d[l_ac].indq0091 = g_indq_d[l_ac].indq008 - g_indq_d[l_ac].indq009
         LET g_indq_d[l_ac].indq0101 = g_indq_d[l_ac].indq0091 * g_indq_d[l_ac].indq010
         LET g_indq_d[l_ac].indq0111 = g_indq_d[l_ac].indq0091 * g_indq_d[l_ac].indq011
  ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'indpsite') RETURNING l_where
   LET g_wc = g_wc," AND ",l_where
   LET l_wc  = g_wc.trim()]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING]]>
  </point>
  <point name="construct.c.indp001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,"","E-CIR-0001")
            CALL q_rtax001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indp001  #顯示到畫面上
            NEXT FIELD indp001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indp002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indp002  #顯示到畫面上
            NEXT FIELD indp002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indp003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indp003  #顯示到畫面上
            NEXT FIELD indp003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpcnfid  #顯示到畫面上
            NEXT FIELD indpcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpcrtdp  #顯示到畫面上
            NEXT FIELD indpcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpcrtid  #顯示到畫面上
            NEXT FIELD indpcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_indpdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpdocno  #顯示到畫面上
            NEXT FIELD indpdocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpmodid  #顯示到畫面上
            NEXT FIELD indpmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpowndp  #顯示到畫面上
            NEXT FIELD indpowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpownid  #顯示到畫面上
            NEXT FIELD indpownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indppstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indppstid  #顯示到畫面上
            NEXT FIELD indppstid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indpsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'indpsite',g_site,'c')
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indpsite  #顯示到畫面上
            NEXT FIELD indpsite                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indq001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
           
#            LET g_qryparam.arg2 = cl_get_para(g_enterprise,"","E-CIR-0001")
            CALL q_rtdx001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indq001  #顯示到畫面上
            NEXT FIELD indq001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indq002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indq002  #顯示到畫面上
            NEXT FIELD indq002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indq004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_indp_m.indpsite
            CALL q_inaa001_23()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indq004  #顯示到畫面上
            NEXT FIELD indq004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indq005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inab002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indq005  #顯示到畫面上
            NEXT FIELD indq005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indq006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inai006()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indq006  #顯示到畫面上
            NEXT FIELD indq006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indq007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indq007  #顯示到畫面上
            NEXT FIELD indq007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.indq012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "2130"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indq012  #顯示到畫面上
            NEXT FIELD indq012                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_indp_m.indpdocno,g_indp_m.indpdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_site_flag    LIKE type_t.num5        #用來判斷單頭site的輸入狀況，用來欄位開關]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success     LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_create_temp() RETURNING l_success
   
   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("indq003,indq003_desc",FALSE)
   ELSE
      CALL cl_set_comp_visible("indq003,indq003_desc",TRUE)
   END IF]]>
  </point>
  <point name="input.a.indp001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indp_m.indp001) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indp_m.indp001
               LET g_chkparam.arg2 = cl_get_para(g_enterprise,"","E-CIR-0001")
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtax001_3") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indp_m.indp001 = g_indp_m_t.indp001
                  NEXT FIELD CURRENT
               END IF
               
               IF NOT cl_null(g_indp_m.indp003) THEN
                  #檢查是否屬於arti204設置的部門品類
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt FROM rtaz_t
                   WHERE rtazent = g_enterprise
                     AND rtaz001 = g_prog
                     AND rtazstus = 'Y'
                  IF l_n > 0 THEN
                     #當rtaz_t設定該程式代號 代表 該程式受arti204的控管
                     LET l_cnt = 0
                     SELECT COUNT(*) INTO l_cnt FROM rtay_t
                      WHERE rtayent = g_enterprise
                        AND rtay001 = g_indp_m.indp003
                        AND rtay002 = g_indp_m.indp001
                     IF l_cnt < 1 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'apr-00357'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                  
                        LET g_indp_m.indp001 = g_indp_m_t.indp001
                        DISPLAY BY NAME g_indp_m.indp001
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
             
               #修改时判断
               IF p_cmd = 'u' THEN
                  LET l_n = 0
                  SELECT COUNT(*) INTO l_n FROM indq_t
                   WHERE indqent = g_enterprise
                     AND indqdocno = g_indp_m.indpdocno
                  IF l_n > 0 THEN
                     LET l_sql="SELECT COUNT(*)  FROM imaa_t,indq_t",
                               " WHERE imaaent = indhent",
                               "   AND imaa001 = indq001",
                               "   AND imaaent = '",g_enterprise,"'",
                               "   AND indqdocno = '",g_indp_m.indpdocno,"'",
                               "   AND imaa009 NOT IN (SELECT DISTINCT rtax001 FROM rtax_t",
                               "                         WHERE rtax005 = 0 START WITH rtax003 ='",g_indp_m.indp001,"'",
                               "                         CONNECT BY nocycle PRIOR rtax001 = rtax003",
                               "                       UNION SELECT rtax001 FROM rtax_t WHERE rtax001 = '",g_indp_m.indp002,"'",
                               "                       )"
                     PREPARE aint610_select_rtax001 FROM l_sql
                     EXECUTE aint610_select_rtax001 INTO l_n                               
                     IF l_n > 0 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'apr-00062'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET g_indp_m.indp001 = g_indp_m_t.indp001
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
            END IF  
            
            CALL aint610_indp001_ref()
            
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_indp_m.indp001
#            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_indp_m.indp001_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_indp_m.indp001_desc

]]>
  </point>
  <point name="input.a.indp002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indp_m.indp002) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indp_m.indp002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                   LET g_indp_m.indp002 = g_indp_m_t.indp002
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL aint610_indp002_ref()

]]>
  </point>
  <point name="input.a.indp003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indp_m.indp003) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indp_m.indp003
               LET g_chkparam.arg2 = g_today
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indp_m.indp003 = g_indp_m_t.indp003
                  NEXT FIELD CURRENT
               END IF
               IF NOT cl_null(g_indp_m.indp001) THEN
                  #檢查是否屬於arti204設置的部門品類
                  LET l_cnt = 0
                  SELECT COUNT(*) INTO l_cnt FROM rtaz_t
                   WHERE rtazent = g_enterprise
                     AND rtaz001 = g_prog
                     AND rtazstus = 'Y'
                  IF l_cnt > 0 THEN
                     #當rtaz_t設定該程式代號 代表 該程式受arti204的控管
                     SELECT COUNT(*) INTO l_cnt FROM rtay_t
                      WHERE rtayent = g_enterprise
                        AND rtay001 = g_indp_m.indp003
                        AND rtay002 = g_indp_m.indp001
                     IF l_cnt < 1 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'apr-00357'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                  
                        LET g_indp_m.indp003 = g_indp_m_t.indp003
                        DISPLAY BY NAME g_indp_m.indp003
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF

            END IF 
            CALL aint610_indp003_ref()

]]>
  </point>
  <point name="input.a.indpdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_indp_m.indpdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_indp_m.indpdocno != g_indpdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indp_t WHERE "||"indpent = '" ||g_enterprise|| "' AND "||"indpdocno = '"||g_indp_m.indpdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT s_aooi200_chk_slip(g_indp_m.indpsite,'',g_indp_m.indpdocno,g_prog) THEN
                     LET g_indp_m.indpdocno = g_indpdocno_t
                     NEXT FIELD CURRENT   
                  END IF
            END IF


]]>
  </point>
  <point name="input.a.indpsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indp_m.indpsite) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_indp_m.indpsite != g_indp_m_t.indpsite OR g_indp_m_t.indpsite IS NULL )) THEN
                  CALL s_aooi500_chk(g_prog,'indpsite',g_indp_m.indpsite,g_indp_m.indpsite)
                     RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ''
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     
                     LET g_indp_m.indpsite = g_indp_m_t.indpsite
                     CALL s_desc_get_department_desc(g_indp_m.indpsite)
                        RETURNING g_indp_m.indpsite_desc
                     DISPLAY BY NAME g_indp_m.indpsite_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
               LET g_site_flag = TRUE
               CALL aint610_set_entry(p_cmd)
               CALL aint610_set_no_entry(p_cmd)
            END IF
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indp_m.indpsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indp_m.indpsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indp_m.indpsite_desc

]]>
  </point>
  <point name="input.a.page1.indq001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indq_d[l_ac].indq001) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               
               
#               LET g_chkparam.arg1 = g_indq_d[l_ac].indq001
#               LET g_chkparam.arg2 = g_indp_m.indpsite
               #如果管理品类<>NULL则商品归属管理品类
               IF NOT cl_null(g_indp_m.indp001) THEN    
                  LET g_chkparam.arg1 = g_indq_d[l_ac].indq001
                  LET g_chkparam.arg2 = g_indp_m.indpsite
                  LET g_chkparam.arg3 = g_indp_m.indp001
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_rtdx001_8") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_indq_d[l_ac].indq001 = g_indq_d_t.indq001
                     NEXT FIELD CURRENT
                  END IF
               ELSE 
                  LET g_chkparam.arg1 = g_indq_d[l_ac].indq001
                  LET g_chkparam.arg2 = g_indp_m.indpsite
                 
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_rtdx001_6") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_indq_d[l_ac].indq001 = g_indq_d_t.indq001
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_arti204_control_check(g_prog,g_indp_m.indp003,g_indq_d[l_ac].indq001,'') RETURNING r_success
                  IF r_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF                 
               END IF
#               #如果管理品类<>NULL则商品归属管理品类
#               IF NOT cl_null(g_indp_m.indp001) THEN
#                  LET l_cnt = 0
#                  SELECT COUNT(*) INTO l_cnt
#                    FROM rtdx_t,imaa_t
#                   WHERE rtdxent = imaaent 
#                     AND rtdx001 = imaa001
#                     AND imaa009 = g_indp_m.indp001 
#                     AND rtdx001 = g_indq_d[l_ac].indq001  
#                     AND rtdxsite = g_indp_m.indpsite 
#                     AND rtdxent = g_enterprise                 
#                  IF l_cnt = 0 THEN    
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "" 
#                     LET g_errparam.code   = "amh-00057" 
#                     LET g_errparam.popup  = TRUE 
#                     CALL cl_err()
#                     NEXT FIELD CURRENT
#                  END IF    
#               ELSE      
#                  CALL s_arti204_control_check(g_prog,g_indp_m.indp003,g_indq_d[l_ac].indq001,'') RETURNING r_success
#                  IF r_success = FALSE THEN
#                     NEXT FIELD CURRENT
#                  END IF              
#               END IF 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_indq_d[l_ac].indq001 != g_indq_d_t.indq001 OR g_indq_d_t.indq001 IS NULL)) THEN
                  IF cl_null(g_indq_d_o.indq001) OR g_indq_d_o.indq001 != g_indq_d[l_ac].indq001 OR cl_null(g_indq_d[l_ac].indq002) THEN
#                     CALL aint610_indq001_ref()
                     CALL aint610_indq001_init()
                     #商品特征
                     LET l_imaa005 = ''
                     SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_indq_d[l_ac].indq001
                     CALL l_inam.clear()
                     IF NOT cl_null(l_imaa005) THEN
                        IF l_cmd = 'a' THEN            
                           CALL s_feature(l_cmd,g_indq_d[l_ac].indq001,'','',g_site,g_indp_m.indpdocno) RETURNING l_success,l_inam
                           LET g_indq_d[l_ac].indq003 = l_inam[1].inam002
                           DISPLAY BY NAME g_indq_d[l_ac].indq003
                           LET g_indq_d[l_ac].indq009 = l_inam[1].inam004
                           DISPLAY BY NAME g_indq_d[l_ac].indq009
#                           CALL aint530_indn011_init()                           
                        END IF
                     END IF 
                  END IF
                  
               END IF
            END IF          
            CALL aint610_indq001_ref()
            
            IF NOT cl_null(g_indq_d[l_ac].indq001) AND NOT cl_null(g_indq_d[l_ac].indq004) THEN  
               CALL aint610_indq001_indq004_ref()
            END IF 
            CALL aint610_indq001_get_cost()
            LET g_indq_d_o.* = g_indq_d[l_ac].*
            CALL aint610_set_entry_b(l_cmd)
            CALL aint610_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.indq002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indq_d[l_ac].indq002) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indq_d[l_ac].indq002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imay003_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indq_d[l_ac].indq002 = g_indq_d_t.indq002
                  NEXT FIELD CURRENT
               END IF     
            END IF 
            CALL aint610_indq002_ref()
            #判断条码对应的商品是否在属于单头管理品类
            
            IF NOT cl_null(g_indq_d[l_ac].indq001) AND NOT cl_null(g_indq_d[l_ac].indq002) THEN
               #如果管理品类<>NULL则商品归属管理品类
               IF NOT cl_null(g_indp_m.indp001) THEN    
                  LET g_chkparam.arg1 = g_indq_d[l_ac].indq001
                  LET g_chkparam.arg2 = g_indp_m.indpsite
                  LET g_chkparam.arg3 = g_indp_m.indp001
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_rtdx001_8") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_indq_d[l_ac].indq002 = g_indq_d_t.indq002
                     LET g_indq_d[l_ac].indq001 = ''
                     LET g_indq_d[l_ac].indq001_desc = ''
                     LET g_indq_d[l_ac].indq001_desc_1 = ''
                     LET g_indq_d[l_ac].indq001_desc_2 = ''
                     NEXT FIELD CURRENT
                  END IF
               ELSE 
                  LET g_chkparam.arg1 = g_indq_d[l_ac].indq001
                  LET g_chkparam.arg2 = g_indp_m.indpsite
                 
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_rtdx001_6") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_indq_d[l_ac].indq002 = g_indq_d_t.indq002
                     LET g_indq_d[l_ac].indq001 = ''
                     LET g_indq_d[l_ac].indq001_desc = ''
                     LET g_indq_d[l_ac].indq001_desc_1 = ''
                     LET g_indq_d[l_ac].indq001_desc_2 = ''
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_arti204_control_check(g_prog,g_indp_m.indp003,g_indq_d[l_ac].indq001,'') RETURNING r_success
                  IF r_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF                 
               END IF
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_indq_d[l_ac].indq001 != g_indq_d_t.indq001 OR g_indq_d_t.indq001 IS NULL)) THEN
                  IF cl_null(g_indq_d_o.indq001) OR g_indq_d_o.indq001 != g_indq_d[l_ac].indq001 OR cl_null(g_indq_d[l_ac].indq002) THEN
                     #商品特征
                     LET l_imaa005 = ''
                     SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_indq_d[l_ac].indq001
                     CALL l_inam.clear()
                     IF NOT cl_null(l_imaa005) THEN
                        IF l_cmd = 'a' THEN            
                           CALL s_feature(l_cmd,g_indq_d[l_ac].indq001,'','',g_site,g_indp_m.indpdocno) RETURNING l_success,l_inam
                           LET g_indq_d[l_ac].indq003 = l_inam[1].inam002
                           DISPLAY BY NAME g_indq_d[l_ac].indq003
                           LET g_indq_d[l_ac].indq009 = l_inam[1].inam004
                           DISPLAY BY NAME g_indq_d[l_ac].indq009
#                           CALL aint530_indn011_init()                           
                        END IF
                     END IF 
                  END IF
                  
               END IF
            END IF
            
            CALL aint610_indq001_get_cost()
            LET g_indq_d_o.* = g_indq_d[l_ac].*
            CALL aint610_set_entry_b(l_cmd)
            CALL aint610_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.indq003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_feature_description(g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq003) RETURNING l_success,g_indq_d[l_ac].indq003_desc
            DISPLAY BY NAME g_indq_d[l_ac].indq003_desc 
            IF g_indq_d[l_ac].indq003 IS NOT NULL THEN
               IF NOT s_feature_check(g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq003) THEN
                  LET g_indq_d[l_ac].indq003 = g_indq_d_t.indq003
                  CALL s_feature_description(g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq003) RETURNING l_success,g_indq_d[l_ac].indq003_desc
                  DISPLAY BY NAME g_indq_d[l_ac].indq003_desc
                  NEXT FIELD CURRENT
               END IF
            END IF   
]]>
  </point>
  <point name="input.a.page1.indq004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indq_d[l_ac].indq004) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indp_m.indpsite
               LET g_chkparam.arg2 = g_indq_d[l_ac].indq004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indq_d[l_ac].indq004 = g_indq_d_t.indq004
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_indq_d[l_ac].indq004 != g_indq_d_t.indq004 OR g_indq_d_t.indq004 IS NULL)) THEN
               IF cl_null(g_indq_d_o.indq004) OR g_indq_d_o.indq004 != g_indq_d[l_ac].indq004 OR cl_null(g_indq_d[l_ac].indq004) THEN
                  LET g_indq_d[l_ac].indq005 =''
                  LET g_indq_d[l_ac].indq005_desc =''
               END IF
            END IF
            CALL aint610_indq004_ref()
            
            IF NOT cl_null(g_indq_d[l_ac].indq001) AND NOT cl_null(g_indq_d[l_ac].indq004) THEN  
               CALL aint610_indq001_indq004_ref()
            END IF 
            LET g_indq_d_o.* = g_indq_d[l_ac].*]]>
  </point>
  <point name="input.a.page1.indq005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indq_d[l_ac].indq005) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indp_m.indpsite
               LET g_chkparam.arg2 = g_indq_d[l_ac].indq004
               LET g_chkparam.arg3 = g_indq_d[l_ac].indq005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inab002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indq_d[l_ac].indq005 = g_indq_d_t.indq005
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            CALL aint610_indq005_ref()
#           IF g_indq_d[l_ac].indq005 != ' ' AND cl_null(g_indq_d[l_ac].indq005) THEN            
#              
#           END IF  
                      
            CALL aint610_indq001_indq004_ref()            ]]>
  </point>
  <point name="input.a.page1.indq006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indq_d[l_ac].indq006) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_indq_d[l_ac].indq006

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inai006") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_indq_d[l_ac].indq006 = g_indq_d_t.indq006
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
           
            CALL aint610_indq001_indq004_ref()]]>
  </point>
  <point name="input.a.page1.indq007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_indq_d[l_ac].indq007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_indq_d[l_ac].indq007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_indq_d[l_ac].indq007_desc

]]>
  </point>
  <point name="input.a.page1.indq009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indq_d[l_ac].indq009) THEN 
               CALL aint610_indq001_indq004_ref()            
            END IF 

]]>
  </point>
  <point name="input.a.page1.indq012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indq_d[l_ac].indq012) THEN 
#               #應用 a19 樣板自動產生(Version:2)
#               #校驗代值
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = '2130'
#               LET g_chkparam.arg2 = g_indq_d[l_ac].indq012
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_oocq002_01") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME 
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
                CALL s_azzi650_chk_exist('2130',g_indq_d[l_ac].indq012) RETURNING r_success
                IF NOT r_success THEN
                   NEXT FIELD CURRENT
                END IF                
            END IF 
            CALL aint610_indq012_ref()

]]>
  </point>
  <point name="input.a.page1.indqseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_indp_m.indpdocno IS NOT NULL AND g_indq_d[g_detail_idx].indqseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indp_m.indpdocno != g_indpdocno_t OR g_indq_d[g_detail_idx].indqseq != g_indq_d_t.indqseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indq_t WHERE "||"indqent = '" ||g_enterprise|| "' AND "||"indqdocno = '"||g_indp_m.indpdocno ||"' AND "|| "indqseq = '"||g_indq_d[g_detail_idx].indqseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.b.indpdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_indp_m.indpsite]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #將其他產品特徵資料寫入DB
               LET l_indqseq = NULL
               INITIALIZE l_indq.* TO NULL               
               SELECT * INTO l_indq.*
                 FROM indq_t 
                WHERE indqent = g_enterprise AND indqdocno = g_indp_m.indpdocno AND indqseq = g_indq_d[l_ac].indqseq
               
               IF l_inam.getLength() > 1 THEN  #因為第一筆資料已呈現在畫面並寫入DB, 從第二筆開始處理 
                  SELECT MAX(indqseq) INTO l_indqseq
                    FROM indq_t
                   WHERE indqent = g_enterprise AND indqdocno = g_indp_m.indpdocno
                  
                  FOR l_i = 2 TO l_inam.getLength() 
                     IF cl_null(l_indqseq) THEN
                        LET l_indqseq = 1
                     ELSE
                        LET l_indqseq = l_indqseq + 1             
                     END IF
                     LET l_indq.indqseq = l_indqseq
                     LET l_indq.indq003 = l_inam[l_i].inam002
                     LET l_indq.indq009 = l_inam[l_i].inam004
                     #查出原库存数量
                     INITIALIZE l_indq.indq008 TO NULL    
                     SELECT inag009
                       INTO l_indq.indq008
                       FROM inag_t 
                      WHERE inagent = g_enterprise 
                        AND inagsite = g_indp_m.indpsite
                        AND inag001 = l_indq.indq001
                        AND inag004 = l_indq.indq004
                        AND inag007 = l_indq.indq007
                        AND inag005 = l_indq.indq005
                        AND inag006 = l_indq.indq006
                        AND inag002 = l_indq.indq003
                        AND inag003 = ' '
                     IF cl_null(l_indq.indq008) THEN 
                        LET l_indq.indq008 = '0'
                     END IF  
#                     #不能存在相同商品编号+库区编号+储位编号+批号+商品特征的未审核资料
#                     INITIALIZE g_errno TO NULL
#                     #存储编号为空
#                     IF cl_null(l_indq.indq005)  THEN 
#                        LET l_indq.indq005 = ' '
#                     END IF 
#                     #批号为空
#                     IF cl_null(l_indq.indq006)  THEN 
#                        LET l_indq.indq006 = ' '
#                     END IF
#                     IF cl_null(l_indq.indq003)  THEN 
#                        LET l_indq.indq003 = ' '
#                     END IF   
#                     LET l_cnt = 0 
#                     SELECT COUNT(*) INTO l_cnt 
#                       FROM indq_t,indp_t
#                      WHERE indqent = indpent
#                        AND indqdocno = indpdocno
#                        AND indpsite = g_indp_m.indpsite
#                        AND indpstus = 'N'
#                        AND indq001 = l_indq.indq001
#                        AND indq004 = l_indq.indq004
#                        AND indq005 = l_indq.indq005
#                        AND indq006 = l_indq.indq006
#                        AND indq003 = l_indq.indq003
#                     IF l_cnt > 0 THEN              
#                        INITIALIZE g_errparam TO NULL
#                        LET g_errparam.code = 'ain-00543' #不能存在相同商品编号+库区编号+储位编号+批号的未审核资料  
#                        LET g_errparam.extend = ''
#                        LET g_errparam.popup = TRUE
#                        CALL cl_err()
#                        CALL s_transaction_end('Y','0') 
#                                              
#                        CANCEL INSERT
#                        
#                     END IF
                     
                     INSERT INTO indq_t VALUES(l_indq.*) 
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "indq_t"
                        LET g_errparam.popup = FALSE
                        CALL cl_err()
                     END IF
                  END FOR
                  
                  LET g_rec_b = g_rec_b + l_inam.getLength() - 1
               END IF
               CALL aint610_b_fill()]]>
  </point>
  <point name="input.body.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #不能存在相同商品编号+库区编号+储位编号+批号+商品特征的未审核资料
            CALL aint610_repeat_chk()
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CANCEL INSERT
            END IF]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF cl_null(g_indq_d[l_ac].indq005) THEN
                  LET g_indq_d[l_ac].indq005 = ' '
               END IF
               IF cl_null(g_indq_d[l_ac].indq006) THEN
                  LET g_indq_d[l_ac].indq006 = ' '
               END IF               ]]>
  </point>
  <point name="input.body.before_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #项次赋值
            SELECT MAX(indqseq)+1 INTO g_indq_d[l_ac].indqseq
              FROM indq_t
             WHERE indqent = g_enterprise AND indqdocno = g_indp_m.indpdocno
            IF cl_null(g_indq_d[l_ac].indqseq) THEN
               LET g_indq_d[l_ac].indqseq = 1
            END IF
            LET g_indq_d[l_ac].indq009 = ""
            LET g_indq_d[l_ac].indq010 = ""
            LET g_indq_d[l_ac].indq011 = ""
            ]]>
  </point>
  <point name="input.c.indp001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indp_m.indp001             #給予default值
            LET g_qryparam.default2 = "" #g_indp_m.rtax001 #品類編號
            #給予arg
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,"","E-CIR-0001")
            LET l_cnt = 0 
            SELECT COUNT(*) INTO l_cnt
              FROM rtaz_t
             WHERE rtazent = g_enterprise
               AND rtaz001 = g_prog
               AND rtazstus = 'Y'
            IF l_cnt > 0 THEN
               LET g_qryparam.where = " rtax001 IN (SELECT rtay002 FROM rtay_t WHERE rtayent = ",g_enterprise," ",
                                      "                AND rtay001 = '",g_indp_m.indp003,"') "
            END IF

            CALL q_rtax001_4()                                #呼叫開窗

            LET g_indp_m.indp001 = g_qryparam.return1              
            #LET g_indp_m.rtax001 = g_qryparam.return2 
            DISPLAY g_indp_m.indp001 TO indp001              #
            #DISPLAY g_indp_m.rtax001 TO rtax001 #品類編號
            CALL aint610_indp001_ref()
            NEXT FIELD indp001                          #返回原欄位

]]>
  </point>
  <point name="input.c.indp002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indp_m.indp002             #給予default值
            LET g_qryparam.default2 = "" #g_indp_m.ooag003 #归属部门
            LET g_qryparam.default3 = "" #g_indp_m.ooefl003 #說明(簡稱)
            LET g_qryparam.default4 = "" #g_indp_m.ooag011 #全名
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooag001_6()                                #呼叫開窗

            LET g_indp_m.indp002 = g_qryparam.return1              
            #LET g_indp_m.ooag003 = g_qryparam.return2 
            #LET g_indp_m.ooefl003 = g_qryparam.return3 
            #LET g_indp_m.ooag011 = g_qryparam.return4 
            DISPLAY g_indp_m.indp002 TO indp002              #
            #DISPLAY g_indp_m.ooag003 TO ooag003 #归属部门
            #DISPLAY g_indp_m.ooefl003 TO ooefl003 #說明(簡稱)
            #DISPLAY g_indp_m.ooag011 TO ooag011 #全名
            CALL aint610_indp002_ref()
            NEXT FIELD indp002                          #返回原欄位

]]>
  </point>
  <point name="input.c.indp003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indp_m.indp003             #給予default值
            LET g_qryparam.default2 = "" #g_indp_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooeg001_9()                                #呼叫開窗

            LET g_indp_m.indp003 = g_qryparam.return1              
            #LET g_indp_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_indp_m.indp003 TO indp003              #
            #DISPLAY g_indp_m.ooeg001 TO ooeg001 #部門編號
            CALL aint610_indp003_ref()
            NEXT FIELD indp003                          #返回原欄位

]]>
  </point>
  <point name="input.c.indpdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indp_m.indpdocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_indp_m.indpdocno = g_qryparam.return1              

            DISPLAY g_indp_m.indpdocno TO indpdocno              #

            NEXT FIELD indpdocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.indpsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indp_m.indpsite             #給予default值

            #給予arg
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'indpsite',g_indp_m.indpsite,'i')


            CALL q_ooef001_24()                                #呼叫開窗

            LET g_indp_m.indpsite = g_qryparam.return1              

            DISPLAY g_indp_m.indpsite TO indpsite              #

            NEXT FIELD indpsite                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indq001" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indq_d[l_ac].indq001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_indp_m.indpsite  #門店編號
            LET g_qryparam.arg2 = g_indp_m.indp001   #品類

            IF NOT cl_null(g_indp_m.indp001)  THEN
               LET g_qryparam.where=" imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_indp_m.indp001,"'", 
                                    "                          CONNECT BY nocycle PRIOR rtax001 = rtax003 ",
                                    "                          UNION SELECT rtax001 FROM rtax_t WHERE rtaxent ='",g_enterprise,"' AND rtax001 = '",g_indp_m.indp001,"') "
               CALL q_rtdx001_16()                                #呼叫開窗
            ELSE
#               CALL q_rtdx001_9()
               LET g_qryparam.where = s_arti204_control_where(g_prog,g_indp_m.indp003,'1')
               #CALL q_prbg002_03()
               CALL q_rtdx001_16()
            END IF                         #呼叫開窗

            LET g_indq_d[l_ac].indq001 = g_qryparam.return1              

            DISPLAY g_indq_d[l_ac].indq001 TO indq001              #
            CALL aint610_indq001_init()           
            CALL aint610_indq001_ref()
            NEXT FIELD indq001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indq002" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indq_d[l_ac].indq002             #給予default值

#            #給予arg
#            LET g_qryparam.arg1 = g_indp_m.indpsite
#
#
#            CALL q_imay003_8()    #呼叫開窗
            LET g_qryparam.arg1 = g_indp_m.indpsite  #門店編號
            LET g_qryparam.arg2 = g_indp_m.indp001   #品類
            IF NOT cl_null(g_indp_m.indp001)  THEN
               LET g_qryparam.where=" imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t WHERE rtax005 = 0 START WITH rtax003 = '",g_indp_m.indp001,"'", 
                                    "                          CONNECT BY nocycle PRIOR rtax001 = rtax003 ",
                                    "                          UNION SELECT rtax001 FROM rtax_t WHERE rtaxent ='",g_enterprise,"' AND rtax001 = '",g_indp_m.indp001,"') AND rtdxstus='Y' AND imaastus='Y' "
               CALL q_rtdx001_16()                                #呼叫開窗
            ELSE
               LET g_qryparam.where = s_arti204_control_where(g_prog,g_indp_m.indp003,'1')
              # CALL q_prbg002_03()
               CALL q_rtdx001_16()
            END IF    

            LET g_indq_d[l_ac].indq002 = g_qryparam.return2              

            DISPLAY g_indq_d[l_ac].indq002 TO indq002              #
            CALL aint610_indq002_ref()
            NEXT FIELD indq002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indq003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #取得料件產品特徵
            LET l_imaa005 = ''
            SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_indq_d[l_ac].indq001
               
            IF NOT cl_null(l_imaa005) THEN
               IF l_cmd = 'a' THEN            
                  CALL l_inam.clear()            
                  CALL s_feature(l_cmd,g_indq_d[l_ac].indq001,'','',g_site,g_indp_m.indpdocno) RETURNING l_success,l_inam
                  LET g_indq_d[l_ac].indq003 = l_inam[1].inam002
                  DISPLAY BY NAME g_indq_d[l_ac].indq003
                  LET g_indq_d[l_ac].indq009 = l_inam[1].inam004
                  DISPLAY BY NAME g_indq_d[l_ac].indq009                  
               END IF
               IF l_cmd = 'u' THEN
                  CALL s_feature_single(g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq003,g_site,g_indp_m.indpdocno)
                     RETURNING l_success,g_indq_d[l_ac].indq003
                  DISPLAY BY NAME g_indq_d[l_ac].indq003
                  CALL s_feature_description(g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq003) 
                     RETURNING l_success,g_indq_d[l_ac].indq003_desc
               END IF
            END IF]]>
  </point>
  <point name="input.c.page1.indq004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indq_d[l_ac].indq004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_indp_m.indpsite


            CALL q_inaa001_23()                                #呼叫開窗

            LET g_indq_d[l_ac].indq004 = g_qryparam.return1              

            DISPLAY g_indq_d[l_ac].indq004 TO indq004              #
            CALL aint610_indq004_ref()
            NEXT FIELD indq004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indq005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indq_d[l_ac].indq005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_indp_m.indpsite
            LET g_qryparam.arg2 = g_indq_d[l_ac].indq004

            CALL q_inab002_6()                                #呼叫開窗

            LET g_indq_d[l_ac].indq005 = g_qryparam.return1              

            DISPLAY g_indq_d[l_ac].indq005 TO indq005              #
            CALL aint610_indq005_ref()
            NEXT FIELD indq005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indq006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indq_d[l_ac].indq006             #給予default值

            #給予arg
            
            LET g_qryparam.where = " inaisite = '",g_indp_m.indpsite,"'"

            CALL q_inai006()                                #呼叫開窗

            LET g_indq_d[l_ac].indq006 = g_qryparam.return1              

            DISPLAY g_indq_d[l_ac].indq006 TO indq006              #

            NEXT FIELD indq006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.indq012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_indq_d[l_ac].indq012             #給予default值
            LET g_qryparam.default2 = "" #g_indq_d[l_ac].oocql004 #說明
            #給予arg
            LET g_qryparam.arg1 = "2130" #s


            CALL q_oocq002()                                #呼叫開窗

            LET g_indq_d[l_ac].indq012 = g_qryparam.return1              
            #LET g_indq_d[l_ac].oocql004 = g_qryparam.return2 
            DISPLAY g_indq_d[l_ac].indq012 TO indq012              #
            #DISPLAY g_indq_d[l_ac].oocql004 TO oocql004 #說明
            CALL aint610_indq012_ref()
            NEXT FIELD indq012                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_ooef004    LIKE ooef_t.ooef004
   DEFINE  l_success    LIKE type_t.num5
   DEFINE  l_errno      LIKE type_t.chr10
   DEFINE  r_success    LIKE type_t.num5
   DEFINE  l_sql        STRING
   DEFINE  l_imaa005             LIKE imaa_t.imaa005
   DEFINE  l_indqseq             LIKE indq_t.indqseq
   DEFINE  l_indq                RECORD LIKE indq_t.*
   DEFINE  l_inam                DYNAMIC ARRAY OF RECORD   #記錄產品特徵
              inam001            LIKE inam_t.inam001,
              inam002            LIKE inam_t.inam002,
              inam004            LIKE inam_t.inam004
                                 END RECORD]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_indp_m.indpsite,g_indp_m.indpdocno,g_indp_m.indpdocdt,g_prog)
                  RETURNING l_success,g_indp_m.indpdocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_indp_m.indpdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD indpdocno           
               END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #营运据点
      CALL s_aooi500_default(g_prog,'indpsite',g_indp_m.indpsite) RETURNING l_insert,g_indp_m.indpsite
      IF NOT l_insert THEN
         RETURN
      END IF
      CALL s_desc_get_department_desc(g_indp_m.indpsite) RETURNING g_indp_m.indpsite_desc
      DISPLAY BY NAME g_indp_m.indpsite_desc
      LET g_site_flag = FALSE
      #单据日期
      LET g_indp_m.indpdocdt = g_today
      
      #单据别
      LET l_success = ''
      LET l_doctype = ''
      CALL s_arti200_get_def_doc_type(g_indp_m.indpsite,g_prog,'1')
           RETURNING l_success, l_doctype
      LET g_indp_m.indpdocno = l_doctype
      
      LET g_indp_m.indp002   = g_user
      CALL aint610_indp002_ref()
      LET g_indp_m.indp003   = g_dept
      CALL aint610_indp003_ref()
      #管理品类
      #先判断部门品类分配维护作业分配程序设定
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt
        FROM rtaz_t
       WHERE rtazent = g_enterprise 
         AND rtaz001 = g_prog
         AND rtazstus ='Y'
      IF l_cnt > 0 THEN 
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt
            FROM rtay_t,rtax_t
          WHERE rtayent = g_enterprise
            AND rtayent = rtaxent
            AND rtay001 = g_indp_m.indp003
            AND rtax001 = rtay002
            AND rtax002 = '2'
            AND rtaystus ='Y'
         IF l_cnt = 1 THEN
            SELECT rtay002 INTO g_indp_m.indp001
              FROM rtay_t,rtax_t
             WHERE rtayent = g_enterprise
               AND rtayent = rtaxent
               AND rtay001 = g_indp_m.indp003
               AND rtax001 = rtay002
               AND rtax002 = '2'
               AND rtaystus ='Y'
         END IF 
         CALL aint610_indp001_ref()
      END IF   ]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5
   DEFINE l_doctype  LIKE rtai_t.rtai004
   DEFINE l_insert   LIKE type_t.num5
   DEFINE  l_cnt                 LIKE type_t.num10 ]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success]]>
  </point>
  <point name="reproduce.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5
   DEFINE l_doctype  LIKE rtai_t.rtai004
   DEFINE l_insert   LIKE type_t.num5
  ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #营运据点
   CALL s_aooi500_default(g_prog,'indpsite',g_indp_m.indpsite) RETURNING l_insert,g_indp_m.indpsite
   IF NOT l_insert THEN
      RETURN
   END IF
   CALL s_desc_get_department_desc(g_indp_m.indpsite) RETURNING g_indp_m.indpsite_desc
   DISPLAY BY NAME g_indp_m.indpsite_desc
   LET g_site_flag = FALSE
   #单据日期
   LET g_indp_m.indpdocdt = g_today
   
   #单据别
   LET l_success = ''
   LET l_doctype = ''
   CALL s_arti200_get_def_doc_type(g_indp_m.indpsite,g_prog,'1')
        RETURNING l_success, l_doctype
   LET g_indp_m.indpdocno = l_doctype
   
   LET g_indp_m.indp002   = g_user
   CALL aint610_indp002_ref()
   LET g_indp_m.indp003   = g_dept
   CALL aint610_indp003_ref()
   
   #管理品类
    LET l_cnt = 0
    SELECT COUNT(*) INTO l_cnt
      FROM rtay_t
     WHERE rtayent = g_enterprise 
       AND rtay001 = g_indp_m.indp002
    IF l_cnt = 1 THEN
       SELECT rtay002 INTO g_indp_m.indp001
         FROM rtay_t
        WHERE rtayent = g_enterprise 
          AND rtay001 = g_indp_m.indp002
    END IF 
    CALL aint610_indp001_ref()]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_indp_m.indpstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail,reproduce", FALSE)
   END IF]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("indp001",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("indq003",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT s_aooi500_comp_entry(g_prog,'indpsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("indpsite",FALSE)
   END IF
   #单身有值，单头栏位关闭
   #单身有资料关闭楼栋楼层栏位
   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt
     FROM indq_t 
    WHERE indqent = g_enterprise 
      AND indqdocno = g_indp_m.indpdocno
   IF  l_cnt > 0 THEN
      CALL cl_set_comp_entry("indp001",FALSE)
       
   END IF 
    
    #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF NOT cl_null(g_indp_m.indpsite) THEN
      IF cl_get_para(g_enterprise,g_indp_m.indpsite,'S-BAS-0036') = 'N' THEN
         CALL cl_set_comp_visible("indq003,indq003_desc",FALSE)
      ELSE
         CALL cl_set_comp_visible("indq003,indq003_desc",TRUE)
      END IF
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_cnt         LIKE type_t.num10]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_imaa005   LIKE imaa_t.imaa005]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #判斷料件是否存在產品特徵功能
   LET l_imaa005 = ''
   SELECT imaa005 INTO l_imaa005 FROM imaa_t WHERE imaaent = g_enterprise AND imaa001 = g_indq_d[l_ac].indq001
   IF cl_null(l_imaa005) THEN
      CALL cl_set_comp_entry("indq003",FALSE)
      LET g_indq_d[l_ac].indq003 = ' '
   ELSE
      IF cl_null(g_indq_d[l_ac].indq003) THEN
         LET g_indq_d[l_ac].indq003 = ''
      END IF
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   CALL s_transaction_begin()
   IF lc_state = 'Y' AND g_indp_m.indpstus = 'N' THEN
      CALL s_aint610_conf_chk(g_indp_m.indpdocno,g_indp_m.indpstus) RETURNING l_success,l_errno
      IF NOT l_success THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = l_errno
         LET g_errparam.extend = g_indp_m.indpdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN 
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_aint610_conf_upd(g_indp_m.indpdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'X' AND g_indp_m.indpstus = 'N' THEN
      CALL s_aint610_void_chk(g_indp_m.indpdocno,g_indp_m.indpstus) RETURNING l_success
      IF NOT l_success THEN
         
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN 
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_aint610_void_upd(g_indp_m.indpdocno) RETURNING l_success,l_errno
            IF NOT l_success THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = l_errno
               LET g_errparam.extend = g_indp_m.indpdocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               
               CALL s_transaction_end('N','0')
               RETURN
              
            END IF
         END IF
      END IF
   END IF
   IF lc_state = 'N' AND g_indp_m.indpstus = 'Y' THEN
      CALL s_aint610_unconf_chk(g_indp_m.indpdocno,g_indp_m.indpstus) RETURNING l_success 
      IF NOT l_success THEN
        
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00110') THEN 
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_aint610_unconf_upd(g_indp_m.indpdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
      END IF
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#      HIDE OPTION "approved"
#         HIDE OPTION "rejection"
#         CASE g_indp_m.indpstus
#            WHEN "N"
#               HIDE OPTION "open"
#            WHEN "X"
#               HIDE OPTION "void"
#               HIDE OPTION "open"
#               HIDE OPTION "valid"
#               RETURN
#            WHEN "Y"
#               HIDE OPTION "valid"
#               HIDE OPTION "void"
#         END CASE
      #提交和抽單一開始先無條件關
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CASE g_indp_m.indpstus
         WHEN "X"
            HIDE OPTION "confirmed"
            HIDE OPTION "unconfirmed"
            RETURN
         WHEN "Y"
            HIDE OPTION "invalid"
         WHEN "N"
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
               CALL cl_set_act_visible("signing",TRUE)
               CALL cl_set_act_visible("confirmed",FALSE)
            END IF
         #已核准只能顯示確認;其餘應用功能皆隱藏
         WHEN "A"
            CALL cl_set_act_visible("confirmed ",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
         #保留修改的功能(如作廢)，隱藏其他應用功能
         WHEN "R"
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
         WHEN "D"
            CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)
         #送簽中只能顯示抽單;其餘應用功能皆隱藏
         WHEN "W"
            CALL cl_set_act_visible("withdraw",TRUE)
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
      END CASE   
         ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success   LIKE type_t.num5
   DEFINE l_errno     LIKE type_t.chr10]]>
  </point>
  <section id="aint610.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aint610_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint610.b_fill" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint610_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_indq_d.clear()    #g_indq_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint610_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE indqseq,indq002,indq001,indq004,indq005,indq006,indq007,indq003, 
             indq008,indq009,indq010,indq011,indq012 ,t1.imaal003 ,t3.inab003 ,t4.oocal003 ,t5.oocql004 FROM indq_t", 
                
                     " INNER JOIN indp_t ON indpdocno = indqdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=indq001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t3 ON t3.inabent='"||g_enterprise||"' AND t3.inab001=indq004 AND t3.inab002=indq005  ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent='"||g_enterprise||"' AND t4.oocal001=indq007 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='2130' AND t5.oocql002=indq012 AND t5.oocql003='"||g_dlang||"' ",
 
                     " WHERE indqent=? AND indqdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY indq_t.indqseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint610_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aint610_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_indp_m.indpdocno
                                               
      FOREACH b_fill_cs INTO g_indq_d[l_ac].indqseq,g_indq_d[l_ac].indq002,g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq004, 
          g_indq_d[l_ac].indq005,g_indq_d[l_ac].indq006,g_indq_d[l_ac].indq007,g_indq_d[l_ac].indq003, 
          g_indq_d[l_ac].indq008,g_indq_d[l_ac].indq009,g_indq_d[l_ac].indq010,g_indq_d[l_ac].indq011, 
          g_indq_d[l_ac].indq012,g_indq_d[l_ac].indq001_desc,g_indq_d[l_ac].indq005_desc,g_indq_d[l_ac].indq007_desc, 
          g_indq_d[l_ac].indq012_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_indq_d.deleteElement(g_indq_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint610_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_indq_d.getLength()
      LET g_indq_d_mask_o[l_ac].* =  g_indq_d[l_ac].*
      CALL aint610_indq_t_mask()
      LET g_indq_d_mask_n[l_ac].* =  g_indq_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aint610.b_fill2" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint610_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint610_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aint610.browser_fill" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint610_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE indpdocno ",
                      " FROM indp_t ",
                      " ",
                      " LEFT JOIN indq_t ON indqent = indpent AND indpdocno = indqdocno ", "  ",
                      #add-point:browser_fill段sql(indq_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE indpent = '" ||g_enterprise|| "' AND indqent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("indp_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE indpdocno ",
                      " FROM indp_t ", 
                      "  ",
                      "  ",
                      " WHERE indpent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("indp_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_indp_m.* TO NULL
      CALL g_indq_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.indpsite,t0.indpdocdt,t0.indpdocno,t0.indp001,t0.indp002,t0.indp003 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.indpstus,t0.indpsite,t0.indpdocdt,t0.indpdocno,t0.indp001,t0.indp002, 
       t0.indp003,t1.ooefl003 ,t2.rtaxl003 ,t3.ooag011 ,t4.ooefl003 ",
               " FROM indp_t t0",
               "  ",
               "  LEFT JOIN indq_t ON indqent = indpent AND indpdocno = indqdocno ", "  ", 
               #add-point:browser_fill段sql(indq_t1)
               {<point name="browser_fill.join.indq_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.indpsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN rtaxl_t t2 ON t2.rtaxlent='"||g_enterprise||"' AND t2.rtaxl001=t0.indp001 AND t2.rtaxl002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.indp002  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.indp003 AND t4.ooefl002='"||g_lang||"' ",
 
               " WHERE t0.indpent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("indp_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY indpdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"indp_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_indpsite,g_browser[g_cnt].b_indpdocdt, 
       g_browser[g_cnt].b_indpdocno,g_browser[g_cnt].b_indp001,g_browser[g_cnt].b_indp002,g_browser[g_cnt].b_indp003, 
       g_browser[g_cnt].b_indpsite_desc,g_browser[g_cnt].b_indp001_desc,g_browser[g_cnt].b_indp002_desc, 
       g_browser[g_cnt].b_indp003_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aint610_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_indpdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aint610.construct" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint610_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_indp_m.* TO NULL
   CALL g_indq_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON indpsite,indpdocdt,indpdocno,indp001,indp002,indp003,indpstus,indpownid, 
          indpowndp,indpcrtid,indpcrtdp,indpcrtdt,indpmodid,indpmoddt,indpcnfid,indpcnfdt,indppstid, 
          indppstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<indpcrtdt>>----
         AFTER FIELD indpcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<indpmoddt>>----
         AFTER FIELD indpmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indpcnfdt>>----
         AFTER FIELD indpcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indppstdt>>----
         AFTER FIELD indppstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.indpsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpsite
            #add-point:ON ACTION controlp INFIELD indpsite
            {<point name="construct.c.indpsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpsite
            #add-point:BEFORE FIELD indpsite
            {<point name="construct.b.indpsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpsite
            
            #add-point:AFTER FIELD indpsite
            {<point name="construct.a.indpsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpdocdt
            #add-point:BEFORE FIELD indpdocdt
            {<point name="construct.b.indpdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpdocdt
            
            #add-point:AFTER FIELD indpdocdt
            {<point name="construct.a.indpdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indpdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpdocdt
            #add-point:ON ACTION controlp INFIELD indpdocdt
            {<point name="construct.c.indpdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indpdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpdocno
            #add-point:ON ACTION controlp INFIELD indpdocno
            {<point name="construct.c.indpdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpdocno
            #add-point:BEFORE FIELD indpdocno
            {<point name="construct.b.indpdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpdocno
            
            #add-point:AFTER FIELD indpdocno
            {<point name="construct.a.indpdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indp001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indp001
            #add-point:ON ACTION controlp INFIELD indp001
            {<point name="construct.c.indp001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indp001
            #add-point:BEFORE FIELD indp001
            {<point name="construct.b.indp001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indp001
            
            #add-point:AFTER FIELD indp001
            {<point name="construct.a.indp001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indp002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indp002
            #add-point:ON ACTION controlp INFIELD indp002
            {<point name="construct.c.indp002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indp002
            #add-point:BEFORE FIELD indp002
            {<point name="construct.b.indp002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indp002
            
            #add-point:AFTER FIELD indp002
            {<point name="construct.a.indp002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indp003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indp003
            #add-point:ON ACTION controlp INFIELD indp003
            {<point name="construct.c.indp003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indp003
            #add-point:BEFORE FIELD indp003
            {<point name="construct.b.indp003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indp003
            
            #add-point:AFTER FIELD indp003
            {<point name="construct.a.indp003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpstus
            #add-point:BEFORE FIELD indpstus
            {<point name="construct.b.indpstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpstus
            
            #add-point:AFTER FIELD indpstus
            {<point name="construct.a.indpstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indpstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpstus
            #add-point:ON ACTION controlp INFIELD indpstus
            {<point name="construct.c.indpstus" />}
            #END add-point
 
         #Ctrlp:construct.c.indpownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpownid
            #add-point:ON ACTION controlp INFIELD indpownid
            {<point name="construct.c.indpownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpownid
            #add-point:BEFORE FIELD indpownid
            {<point name="construct.b.indpownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpownid
            
            #add-point:AFTER FIELD indpownid
            {<point name="construct.a.indpownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indpowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpowndp
            #add-point:ON ACTION controlp INFIELD indpowndp
            {<point name="construct.c.indpowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpowndp
            #add-point:BEFORE FIELD indpowndp
            {<point name="construct.b.indpowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpowndp
            
            #add-point:AFTER FIELD indpowndp
            {<point name="construct.a.indpowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indpcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpcrtid
            #add-point:ON ACTION controlp INFIELD indpcrtid
            {<point name="construct.c.indpcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpcrtid
            #add-point:BEFORE FIELD indpcrtid
            {<point name="construct.b.indpcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpcrtid
            
            #add-point:AFTER FIELD indpcrtid
            {<point name="construct.a.indpcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indpcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpcrtdp
            #add-point:ON ACTION controlp INFIELD indpcrtdp
            {<point name="construct.c.indpcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpcrtdp
            #add-point:BEFORE FIELD indpcrtdp
            {<point name="construct.b.indpcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpcrtdp
            
            #add-point:AFTER FIELD indpcrtdp
            {<point name="construct.a.indpcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpcrtdt
            #add-point:BEFORE FIELD indpcrtdt
            {<point name="construct.b.indpcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indpmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpmodid
            #add-point:ON ACTION controlp INFIELD indpmodid
            {<point name="construct.c.indpmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpmodid
            #add-point:BEFORE FIELD indpmodid
            {<point name="construct.b.indpmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpmodid
            
            #add-point:AFTER FIELD indpmodid
            {<point name="construct.a.indpmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpmoddt
            #add-point:BEFORE FIELD indpmoddt
            {<point name="construct.b.indpmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.indpcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpcnfid
            #add-point:ON ACTION controlp INFIELD indpcnfid
            {<point name="construct.c.indpcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpcnfid
            #add-point:BEFORE FIELD indpcnfid
            {<point name="construct.b.indpcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpcnfid
            
            #add-point:AFTER FIELD indpcnfid
            {<point name="construct.a.indpcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpcnfdt
            #add-point:BEFORE FIELD indpcnfdt
            {<point name="construct.b.indpcnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indppstid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indppstid
            #add-point:ON ACTION controlp INFIELD indppstid
            {<point name="construct.c.indppstid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indppstid
            #add-point:BEFORE FIELD indppstid
            {<point name="construct.b.indppstid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indppstid
            
            #add-point:AFTER FIELD indppstid
            {<point name="construct.a.indppstid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indppstdt
            #add-point:BEFORE FIELD indppstdt
            {<point name="construct.b.indppstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON indqseq,indq002,indq001,indq004,indq005,indq006,indq007,indq003,indq003_desc, 
          indq008,indq009,indq012
           FROM s_detail1[1].indqseq,s_detail1[1].indq002,s_detail1[1].indq001,s_detail1[1].indq004, 
               s_detail1[1].indq005,s_detail1[1].indq006,s_detail1[1].indq007,s_detail1[1].indq003,s_detail1[1].indq003_desc, 
               s_detail1[1].indq008,s_detail1[1].indq009,s_detail1[1].indq012
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indqseq
            #add-point:BEFORE FIELD indqseq
            {<point name="construct.b.page1.indqseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indqseq
            
            #add-point:AFTER FIELD indqseq
            {<point name="construct.a.page1.indqseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indqseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indqseq
            #add-point:ON ACTION controlp INFIELD indqseq
            {<point name="construct.c.page1.indqseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq002
            #add-point:ON ACTION controlp INFIELD indq002
            {<point name="construct.c.page1.indq002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq002
            #add-point:BEFORE FIELD indq002
            {<point name="construct.b.page1.indq002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq002
            
            #add-point:AFTER FIELD indq002
            {<point name="construct.a.page1.indq002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq001
            #add-point:ON ACTION controlp INFIELD indq001
            {<point name="construct.c.page1.indq001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq001
            #add-point:BEFORE FIELD indq001
            {<point name="construct.b.page1.indq001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq001
            
            #add-point:AFTER FIELD indq001
            {<point name="construct.a.page1.indq001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq004
            #add-point:ON ACTION controlp INFIELD indq004
            {<point name="construct.c.page1.indq004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq004
            #add-point:BEFORE FIELD indq004
            {<point name="construct.b.page1.indq004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq004
            
            #add-point:AFTER FIELD indq004
            {<point name="construct.a.page1.indq004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq005
            #add-point:ON ACTION controlp INFIELD indq005
            {<point name="construct.c.page1.indq005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq005
            #add-point:BEFORE FIELD indq005
            {<point name="construct.b.page1.indq005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq005
            
            #add-point:AFTER FIELD indq005
            {<point name="construct.a.page1.indq005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq006
            #add-point:ON ACTION controlp INFIELD indq006
            {<point name="construct.c.page1.indq006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq006
            #add-point:BEFORE FIELD indq006
            {<point name="construct.b.page1.indq006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq006
            
            #add-point:AFTER FIELD indq006
            {<point name="construct.a.page1.indq006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq007
            #add-point:ON ACTION controlp INFIELD indq007
            {<point name="construct.c.page1.indq007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq007
            #add-point:BEFORE FIELD indq007
            {<point name="construct.b.page1.indq007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq007
            
            #add-point:AFTER FIELD indq007
            {<point name="construct.a.page1.indq007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq003
            #add-point:BEFORE FIELD indq003
            {<point name="construct.b.page1.indq003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq003
            
            #add-point:AFTER FIELD indq003
            {<point name="construct.a.page1.indq003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq003
            #add-point:ON ACTION controlp INFIELD indq003
            {<point name="construct.c.page1.indq003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq003_desc
            #add-point:BEFORE FIELD indq003_desc
            {<point name="construct.b.page1.indq003_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq003_desc
            
            #add-point:AFTER FIELD indq003_desc
            {<point name="construct.a.page1.indq003_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq003_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq003_desc
            #add-point:ON ACTION controlp INFIELD indq003_desc
            {<point name="construct.c.page1.indq003_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq008
            #add-point:BEFORE FIELD indq008
            {<point name="construct.b.page1.indq008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq008
            
            #add-point:AFTER FIELD indq008
            {<point name="construct.a.page1.indq008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq008
            #add-point:ON ACTION controlp INFIELD indq008
            {<point name="construct.c.page1.indq008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq009
            #add-point:BEFORE FIELD indq009
            {<point name="construct.b.page1.indq009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq009
            
            #add-point:AFTER FIELD indq009
            {<point name="construct.a.page1.indq009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indq009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq009
            #add-point:ON ACTION controlp INFIELD indq009
            {<point name="construct.c.page1.indq009" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indq012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq012
            #add-point:ON ACTION controlp INFIELD indq012
            {<point name="construct.c.page1.indq012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq012
            #add-point:BEFORE FIELD indq012
            {<point name="construct.b.page1.indq012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq012
            
            #add-point:AFTER FIELD indq012
            {<point name="construct.a.page1.indq012" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "indp_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "indq_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint610.default_search" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint610_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " indpdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "indp_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "indq_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aint610.delete" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint610_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_indp_m.indpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aint610_cl USING g_enterprise,g_indp_m.indpdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint610_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint610_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint610_master_referesh USING g_indp_m.indpdocno INTO g_indp_m.indpsite,g_indp_m.indpdocdt, 
       g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid, 
       g_indp_m.indpowndp,g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid, 
       g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt, 
       g_indp_m.indpsite_desc,g_indp_m.indp001_desc,g_indp_m.indp002_desc,g_indp_m.indp003_desc,g_indp_m.indpownid_desc, 
       g_indp_m.indpowndp_desc,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp_desc,g_indp_m.indpmodid_desc, 
       g_indp_m.indpcnfid_desc,g_indp_m.indppstid_desc
   
   #檢查是否允許此動作
   IF NOT aint610_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indp_m_mask_o.* =  g_indp_m.*
   CALL aint610_indp_t_mask()
   LET g_indp_m_mask_n.* =  g_indp_m.*
   
   CALL aint610_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aint610_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_indpdocno_t = g_indp_m.indpdocno
 
 
      DELETE FROM indp_t
       WHERE indpent = g_enterprise AND indpdocno = g_indp_m.indpdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_indp_m.indpdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM indq_t
       WHERE indqent = g_enterprise AND indqdocno = g_indp_m.indpdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indq_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aint610_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_indq_d.clear() 
 
     
      CALL aint610_ui_browser_refresh()  
      #CALL aint610_ui_headershow()  
      #CALL aint610_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aint610_browser_fill("")
         CALL aint610_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE aint610_cl
 
   #功能已完成,通報訊息中心
   CALL aint610_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="aint610.delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint610_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM indq_t
       WHERE indqent = g_enterprise AND
         indqdocno = ps_keys_bak[1] AND indqseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indq_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint610.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000009
#+ 
#+ Filename...: aint610
#+ Description: 商品實際庫存調整作業
#+ Creator....: 06189(2015-04-08 11:05:45)
#+ Modifier...: 06189(2015-05-12 16:51:39) -SD/PR-
]]>
  </section>
  <section id="aint610.detail_reproduce" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint610_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE indq_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint610_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint610_detail AS ",
                "SELECT * FROM indq_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint610_detail SELECT * FROM indq_t 
                                         WHERE indqent = g_enterprise AND indqdocno = g_indpdocno_t
 
   
   #將key修正為調整後   
   UPDATE aint610_detail 
      #更新key欄位
      SET indqdocno = g_indp_m.indpdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO indq_t SELECT * FROM aint610_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint610_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_indpdocno_t = g_indp_m.indpdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="aint610.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint610_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint610.fetch" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint610_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_indp_m.indpdocno = g_browser[g_current_idx].b_indpdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint610_master_referesh USING g_indp_m.indpdocno INTO g_indp_m.indpsite,g_indp_m.indpdocdt, 
       g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid, 
       g_indp_m.indpowndp,g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid, 
       g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt, 
       g_indp_m.indpsite_desc,g_indp_m.indp001_desc,g_indp_m.indp002_desc,g_indp_m.indp003_desc,g_indp_m.indpownid_desc, 
       g_indp_m.indpowndp_desc,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp_desc,g_indp_m.indpmodid_desc, 
       g_indp_m.indpcnfid_desc,g_indp_m.indppstid_desc
   
   #遮罩相關處理
   LET g_indp_m_mask_o.* =  g_indp_m.*
   CALL aint610_indp_t_mask()
   LET g_indp_m_mask_n.* =  g_indp_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint610_set_act_visible()   
   CALL aint610_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_indp_m_t.* = g_indp_m.*
   LET g_indp_m_o.* = g_indp_m.*
   
   LET g_data_owner = g_indp_m.indpownid      
   LET g_data_dept  = g_indp_m.indpowndp
   
   #重新顯示   
   CALL aint610_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aint610.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint610_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint610.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION aint610_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON indpsite,indpdocdt,indpdocno,indp001,indp002,indp003
                          FROM s_browse[1].b_indpsite,s_browse[1].b_indpdocdt,s_browse[1].b_indpdocno, 
                              s_browse[1].b_indp001,s_browse[1].b_indp002,s_browse[1].b_indp003
 
         BEFORE CONSTRUCT
               DISPLAY aint610_filter_parser('indpsite') TO s_browse[1].b_indpsite
            DISPLAY aint610_filter_parser('indpdocdt') TO s_browse[1].b_indpdocdt
            DISPLAY aint610_filter_parser('indpdocno') TO s_browse[1].b_indpdocno
            DISPLAY aint610_filter_parser('indp001') TO s_browse[1].b_indp001
            DISPLAY aint610_filter_parser('indp002') TO s_browse[1].b_indp002
            DISPLAY aint610_filter_parser('indp003') TO s_browse[1].b_indp003
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint610_filter_show('indpsite')
   CALL aint610_filter_show('indpdocdt')
   CALL aint610_filter_show('indpdocno')
   CALL aint610_filter_show('indp001')
   CALL aint610_filter_show('indp002')
   CALL aint610_filter_show('indp003')
 
END FUNCTION
]]>
  </section>
  <section id="aint610.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint610_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aint610.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint610_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint610_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aint610.global" ver="18" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:38)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_indp_m        RECORD
       indpsite LIKE indp_t.indpsite, 
   indpsite_desc LIKE type_t.chr80, 
   indpdocdt LIKE indp_t.indpdocdt, 
   indpdocno LIKE indp_t.indpdocno, 
   indp001 LIKE indp_t.indp001, 
   indp001_desc LIKE type_t.chr80, 
   indp002 LIKE indp_t.indp002, 
   indp002_desc LIKE type_t.chr80, 
   indp003 LIKE indp_t.indp003, 
   indp003_desc LIKE type_t.chr80, 
   indpstus LIKE indp_t.indpstus, 
   indpownid LIKE indp_t.indpownid, 
   indpownid_desc LIKE type_t.chr80, 
   indpowndp LIKE indp_t.indpowndp, 
   indpowndp_desc LIKE type_t.chr80, 
   indpcrtid LIKE indp_t.indpcrtid, 
   indpcrtid_desc LIKE type_t.chr80, 
   indpcrtdp LIKE indp_t.indpcrtdp, 
   indpcrtdp_desc LIKE type_t.chr80, 
   indpcrtdt LIKE indp_t.indpcrtdt, 
   indpmodid LIKE indp_t.indpmodid, 
   indpmodid_desc LIKE type_t.chr80, 
   indpmoddt LIKE indp_t.indpmoddt, 
   indpcnfid LIKE indp_t.indpcnfid, 
   indpcnfid_desc LIKE type_t.chr80, 
   indpcnfdt LIKE indp_t.indpcnfdt, 
   indppstid LIKE indp_t.indppstid, 
   indppstid_desc LIKE type_t.chr80, 
   indppstdt LIKE indp_t.indppstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_indq_d        RECORD
       indqseq LIKE indq_t.indqseq, 
   indq002 LIKE indq_t.indq002, 
   indq001 LIKE indq_t.indq001, 
   indq001_desc LIKE type_t.chr500, 
   indq001_desc_1 LIKE type_t.chr500, 
   indq001_desc_2 LIKE type_t.chr500, 
   indq004 LIKE indq_t.indq004, 
   indq004_desc LIKE type_t.chr500, 
   indq005 LIKE indq_t.indq005, 
   indq005_desc LIKE type_t.chr500, 
   indq006 LIKE indq_t.indq006, 
   indq007 LIKE indq_t.indq007, 
   indq007_desc LIKE type_t.chr500, 
   indq003 LIKE indq_t.indq003, 
   indq003_desc LIKE type_t.chr500, 
   indq008 LIKE indq_t.indq008, 
   indq009 LIKE indq_t.indq009, 
   indq0091 LIKE type_t.num20_6, 
   indq010 LIKE indq_t.indq010, 
   indq0101 LIKE type_t.num20_6, 
   indq011 LIKE indq_t.indq011, 
   indq0111 LIKE type_t.num20_6, 
   indq012 LIKE indq_t.indq012, 
   indq012_desc LIKE type_t.chr500
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_indpsite LIKE indp_t.indpsite,
   b_indpsite_desc LIKE type_t.chr80,
      b_indpdocdt LIKE indp_t.indpdocdt,
      b_indpdocno LIKE indp_t.indpdocno,
      b_indp001 LIKE indp_t.indp001,
   b_indp001_desc LIKE type_t.chr80,
      b_indp002 LIKE indp_t.indp002,
   b_indp002_desc LIKE type_t.chr80,
      b_indp003 LIKE indp_t.indp003,
   b_indp003_desc LIKE type_t.chr80
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_indp_m          type_g_indp_m
DEFINE g_indp_m_t        type_g_indp_m
DEFINE g_indp_m_o        type_g_indp_m
DEFINE g_indp_m_mask_o   type_g_indp_m #轉換遮罩前資料
DEFINE g_indp_m_mask_n   type_g_indp_m #轉換遮罩後資料
 
   DEFINE g_indpdocno_t LIKE indp_t.indpdocno
 
 
DEFINE g_indq_d          DYNAMIC ARRAY OF type_g_indq_d
DEFINE g_indq_d_t        type_g_indq_d
DEFINE g_indq_d_o        type_g_indq_d
DEFINE g_indq_d_mask_o   DYNAMIC ARRAY OF type_g_indq_d #轉換遮罩前資料
DEFINE g_indq_d_mask_n   DYNAMIC ARRAY OF type_g_indq_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint610.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aint610_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_indq_d.getLength() THEN
         LET g_detail_idx = g_indq_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_indq_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_indq_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint610.init" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint610_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('indpstus','50','A,N,D,Y,R,W,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aint610_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aint610.input" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint610_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indp_m.indpsite,g_indp_m.indpsite_desc,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001, 
       g_indp_m.indp001_desc,g_indp_m.indp002,g_indp_m.indp002_desc,g_indp_m.indp003,g_indp_m.indp003_desc, 
       g_indp_m.indpstus,g_indp_m.indpownid,g_indp_m.indpownid_desc,g_indp_m.indpowndp,g_indp_m.indpowndp_desc, 
       g_indp_m.indpcrtid,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp,g_indp_m.indpcrtdp_desc,g_indp_m.indpcrtdt, 
       g_indp_m.indpmodid,g_indp_m.indpmodid_desc,g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfid_desc, 
       g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstid_desc,g_indp_m.indppstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT indqseq,indq002,indq001,indq004,indq005,indq006,indq007,indq003,indq008, 
       indq009,indq010,indq011,indq012 FROM indq_t WHERE indqent=? AND indqdocno=? AND indqseq=? FOR  
       UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint610_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint610_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint610_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_indp_m.indpsite,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002, 
       g_indp_m.indp003,g_indp_m.indpstus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aint610.input.body" ver="12" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_indq_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_indq_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint610_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_indq_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint610_cl USING g_enterprise,g_indp_m.indpdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint610_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint610_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_indq_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_indq_d[l_ac].indqseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_indq_d_t.* = g_indq_d[l_ac].*  #BACKUP
               LET g_indq_d_o.* = g_indq_d[l_ac].*  #BACKUP
               CALL aint610_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint610_set_no_entry_b(l_cmd)
               IF NOT aint610_lock_b("indq_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint610_bcl INTO g_indq_d[l_ac].indqseq,g_indq_d[l_ac].indq002,g_indq_d[l_ac].indq001, 
                      g_indq_d[l_ac].indq004,g_indq_d[l_ac].indq005,g_indq_d[l_ac].indq006,g_indq_d[l_ac].indq007, 
                      g_indq_d[l_ac].indq003,g_indq_d[l_ac].indq008,g_indq_d[l_ac].indq009,g_indq_d[l_ac].indq010, 
                      g_indq_d[l_ac].indq011,g_indq_d[l_ac].indq012
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_indq_d_t.indqseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_indq_d_mask_o[l_ac].* =  g_indq_d[l_ac].*
                  CALL aint610_indq_t_mask()
                  LET g_indq_d_mask_n[l_ac].* =  g_indq_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint610_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_indq_d[l_ac].* TO NULL 
            INITIALIZE g_indq_d_t.* TO NULL 
            INITIALIZE g_indq_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_indq_d[l_ac].indq0091 = "0"
      LET g_indq_d[l_ac].indq010 = "0"
      LET g_indq_d[l_ac].indq0101 = "0"
      LET g_indq_d[l_ac].indq011 = "0"
      LET g_indq_d[l_ac].indq0111 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_indq_d_t.* = g_indq_d[l_ac].*     #新輸入資料
            LET g_indq_d_o.* = g_indq_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint610_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint610_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_indq_d[li_reproduce_target].* = g_indq_d[li_reproduce].*
 
               LET g_indq_d[li_reproduce_target].indqseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM indq_t 
             WHERE indqent = g_enterprise AND indqdocno = g_indp_m.indpdocno
 
               AND indqseq = g_indq_d[l_ac].indqseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indp_m.indpdocno
               LET gs_keys[2] = g_indq_d[g_detail_idx].indqseq
               CALL aint610_insert_b('indq_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_indq_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indq_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint610_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_indp_m.indpdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_indq_d_t.indqseq
 
            
               #刪除同層單身
               IF NOT aint610_delete_b('indq_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint610_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint610_key_delete_b(gs_keys,'indq_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint610_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aint610_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_indq_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_indq_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indqseq
            #add-point:BEFORE FIELD indqseq
            {<point name="input.b.page1.indqseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indqseq
            
            #add-point:AFTER FIELD indqseq
            {<point name="input.a.page1.indqseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indqseq
            #add-point:ON CHANGE indqseq
            {<point name="input.g.page1.indqseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq002
            
            #add-point:AFTER FIELD indq002
            {<point name="input.a.page1.indq002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq002
            #add-point:BEFORE FIELD indq002
            {<point name="input.b.page1.indq002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq002
            #add-point:ON CHANGE indq002
            {<point name="input.g.page1.indq002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq001
            
            #add-point:AFTER FIELD indq001
            {<point name="input.a.page1.indq001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq001
            #add-point:BEFORE FIELD indq001
            {<point name="input.b.page1.indq001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq001
            #add-point:ON CHANGE indq001
            {<point name="input.g.page1.indq001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq004
            
            #add-point:AFTER FIELD indq004
            {<point name="input.a.page1.indq004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq004
            #add-point:BEFORE FIELD indq004
            {<point name="input.b.page1.indq004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq004
            #add-point:ON CHANGE indq004
            {<point name="input.g.page1.indq004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq005
            
            #add-point:AFTER FIELD indq005
            {<point name="input.a.page1.indq005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq005
            #add-point:BEFORE FIELD indq005
            {<point name="input.b.page1.indq005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq005
            #add-point:ON CHANGE indq005
            {<point name="input.g.page1.indq005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq006
            
            #add-point:AFTER FIELD indq006
            {<point name="input.a.page1.indq006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq006
            #add-point:BEFORE FIELD indq006
            {<point name="input.b.page1.indq006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq006
            #add-point:ON CHANGE indq006
            {<point name="input.g.page1.indq006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq007
            
            #add-point:AFTER FIELD indq007
            {<point name="input.a.page1.indq007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq007
            #add-point:BEFORE FIELD indq007
            {<point name="input.b.page1.indq007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq007
            #add-point:ON CHANGE indq007
            {<point name="input.g.page1.indq007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq003
            
            #add-point:AFTER FIELD indq003
            {<point name="input.a.page1.indq003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq003
            #add-point:BEFORE FIELD indq003
            {<point name="input.b.page1.indq003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq003
            #add-point:ON CHANGE indq003
            {<point name="input.g.page1.indq003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq008
            #add-point:BEFORE FIELD indq008
            {<point name="input.b.page1.indq008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq008
            
            #add-point:AFTER FIELD indq008
            {<point name="input.a.page1.indq008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq008
            #add-point:ON CHANGE indq008
            {<point name="input.g.page1.indq008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq009
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indq_d[l_ac].indq009,"0","1","","","azz-00079",1) THEN
               NEXT FIELD indq009
            END IF 
 
 
            #add-point:AFTER FIELD indq009
            {<point name="input.a.page1.indq009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq009
            #add-point:BEFORE FIELD indq009
            {<point name="input.b.page1.indq009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq009
            #add-point:ON CHANGE indq009
            {<point name="input.g.page1.indq009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq0091
            #add-point:BEFORE FIELD indq0091
            {<point name="input.b.page1.indq0091" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq0091
            
            #add-point:AFTER FIELD indq0091
            {<point name="input.a.page1.indq0091" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq0091
            #add-point:ON CHANGE indq0091
            {<point name="input.g.page1.indq0091" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq010
            #add-point:BEFORE FIELD indq010
            {<point name="input.b.page1.indq010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq010
            
            #add-point:AFTER FIELD indq010
            {<point name="input.a.page1.indq010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq010
            #add-point:ON CHANGE indq010
            {<point name="input.g.page1.indq010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq0101
            #add-point:BEFORE FIELD indq0101
            {<point name="input.b.page1.indq0101" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq0101
            
            #add-point:AFTER FIELD indq0101
            {<point name="input.a.page1.indq0101" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq0101
            #add-point:ON CHANGE indq0101
            {<point name="input.g.page1.indq0101" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq011
            #add-point:BEFORE FIELD indq011
            {<point name="input.b.page1.indq011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq011
            
            #add-point:AFTER FIELD indq011
            {<point name="input.a.page1.indq011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq011
            #add-point:ON CHANGE indq011
            {<point name="input.g.page1.indq011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq0111
            #add-point:BEFORE FIELD indq0111
            {<point name="input.b.page1.indq0111" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq0111
            
            #add-point:AFTER FIELD indq0111
            {<point name="input.a.page1.indq0111" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq0111
            #add-point:ON CHANGE indq0111
            {<point name="input.g.page1.indq0111" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indq012
            
            #add-point:AFTER FIELD indq012
            {<point name="input.a.page1.indq012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indq012
            #add-point:BEFORE FIELD indq012
            {<point name="input.b.page1.indq012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indq012
            #add-point:ON CHANGE indq012
            {<point name="input.g.page1.indq012" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.indqseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indqseq
            #add-point:ON ACTION controlp INFIELD indqseq
            {<point name="input.c.page1.indqseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq002
            #add-point:ON ACTION controlp INFIELD indq002
            {<point name="input.c.page1.indq002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq001
            #add-point:ON ACTION controlp INFIELD indq001
            {<point name="input.c.page1.indq001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq004
            #add-point:ON ACTION controlp INFIELD indq004
            {<point name="input.c.page1.indq004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq005
            #add-point:ON ACTION controlp INFIELD indq005
            {<point name="input.c.page1.indq005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq006
            #add-point:ON ACTION controlp INFIELD indq006
            {<point name="input.c.page1.indq006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq007
            #add-point:ON ACTION controlp INFIELD indq007
            {<point name="input.c.page1.indq007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq003
            #add-point:ON ACTION controlp INFIELD indq003
            {<point name="input.c.page1.indq003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq008
            #add-point:ON ACTION controlp INFIELD indq008
            {<point name="input.c.page1.indq008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq009
            #add-point:ON ACTION controlp INFIELD indq009
            {<point name="input.c.page1.indq009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq0091
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq0091
            #add-point:ON ACTION controlp INFIELD indq0091
            {<point name="input.c.page1.indq0091" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq010
            #add-point:ON ACTION controlp INFIELD indq010
            {<point name="input.c.page1.indq010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq0101
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq0101
            #add-point:ON ACTION controlp INFIELD indq0101
            {<point name="input.c.page1.indq0101" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq011
            #add-point:ON ACTION controlp INFIELD indq011
            {<point name="input.c.page1.indq011" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq0111
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq0111
            #add-point:ON ACTION controlp INFIELD indq0111
            {<point name="input.c.page1.indq0111" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indq012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indq012
            #add-point:ON ACTION controlp INFIELD indq012
            {<point name="input.c.page1.indq012" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_indq_d[l_ac].* = g_indq_d_t.*
               CLOSE aint610_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_indq_d[l_ac].indqseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_indq_d[l_ac].* = g_indq_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aint610_indq_t_mask_restore('restore_mask_o')
      
               UPDATE indq_t SET (indqdocno,indqseq,indq002,indq001,indq004,indq005,indq006,indq007, 
                   indq003,indq008,indq009,indq010,indq011,indq012) = (g_indp_m.indpdocno,g_indq_d[l_ac].indqseq, 
                   g_indq_d[l_ac].indq002,g_indq_d[l_ac].indq001,g_indq_d[l_ac].indq004,g_indq_d[l_ac].indq005, 
                   g_indq_d[l_ac].indq006,g_indq_d[l_ac].indq007,g_indq_d[l_ac].indq003,g_indq_d[l_ac].indq008, 
                   g_indq_d[l_ac].indq009,g_indq_d[l_ac].indq010,g_indq_d[l_ac].indq011,g_indq_d[l_ac].indq012) 

                WHERE indqent = g_enterprise AND indqdocno = g_indp_m.indpdocno 
 
                  AND indqseq = g_indq_d_t.indqseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indq_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_indq_d[l_ac].* = g_indq_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indq_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_indq_d[l_ac].* = g_indq_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indp_m.indpdocno
               LET gs_keys_bak[1] = g_indpdocno_t
               LET gs_keys[2] = g_indq_d[g_detail_idx].indqseq
               LET gs_keys_bak[2] = g_indq_d_t.indqseq
               CALL aint610_update_b('indq_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aint610_indq_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_indq_d[g_detail_idx].indqseq = g_indq_d_t.indqseq 
 
                  ) THEN
                  LET gs_keys[01] = g_indp_m.indpdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_indq_d_t.indqseq
 
                  CALL aint610_key_update_b(gs_keys,'indq_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_indp_m),util.JSON.stringify(g_indq_d_t)
               LET g_log2 = util.JSON.stringify(g_indp_m),util.JSON.stringify(g_indq_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint610_unlock_b("indq_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_indq_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_indq_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
]]>
  </section>
  <section id="aint610.input.head" ver="2" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_indp_m.indpsite,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002, 
          g_indp_m.indp003,g_indp_m.indpstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aint610_cl USING g_enterprise,g_indp_m.indpdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint610_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint610_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aint610_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aint610_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpsite
            
            #add-point:AFTER FIELD indpsite
            {<point name="input.a.indpsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpsite
            #add-point:BEFORE FIELD indpsite
            {<point name="input.b.indpsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indpsite
            #add-point:ON CHANGE indpsite
            {<point name="input.g.indpsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpdocdt
            #add-point:BEFORE FIELD indpdocdt
            {<point name="input.b.indpdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpdocdt
            
            #add-point:AFTER FIELD indpdocdt
            {<point name="input.a.indpdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indpdocdt
            #add-point:ON CHANGE indpdocdt
            {<point name="input.g.indpdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpdocno
            #add-point:BEFORE FIELD indpdocno
            {<point name="input.b.indpdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpdocno
            
            #add-point:AFTER FIELD indpdocno
            {<point name="input.a.indpdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indpdocno
            #add-point:ON CHANGE indpdocno
            {<point name="input.g.indpdocno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indp001
            
            #add-point:AFTER FIELD indp001
            {<point name="input.a.indp001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indp001
            #add-point:BEFORE FIELD indp001
            {<point name="input.b.indp001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indp001
            #add-point:ON CHANGE indp001
            {<point name="input.g.indp001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indp002
            
            #add-point:AFTER FIELD indp002
            {<point name="input.a.indp002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indp002
            #add-point:BEFORE FIELD indp002
            {<point name="input.b.indp002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indp002
            #add-point:ON CHANGE indp002
            {<point name="input.g.indp002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indp003
            
            #add-point:AFTER FIELD indp003
            {<point name="input.a.indp003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indp003
            #add-point:BEFORE FIELD indp003
            {<point name="input.b.indp003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indp003
            #add-point:ON CHANGE indp003
            {<point name="input.g.indp003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indpstus
            #add-point:BEFORE FIELD indpstus
            {<point name="input.b.indpstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indpstus
            
            #add-point:AFTER FIELD indpstus
            {<point name="input.a.indpstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indpstus
            #add-point:ON CHANGE indpstus
            {<point name="input.g.indpstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.indpsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpsite
            #add-point:ON ACTION controlp INFIELD indpsite
            {<point name="input.c.indpsite" />}
            #END add-point
 
         #Ctrlp:input.c.indpdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpdocdt
            #add-point:ON ACTION controlp INFIELD indpdocdt
            {<point name="input.c.indpdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.indpdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpdocno
            #add-point:ON ACTION controlp INFIELD indpdocno
            {<point name="input.c.indpdocno" />}
            #END add-point
 
         #Ctrlp:input.c.indp001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indp001
            #add-point:ON ACTION controlp INFIELD indp001
            {<point name="input.c.indp001" />}
            #END add-point
 
         #Ctrlp:input.c.indp002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indp002
            #add-point:ON ACTION controlp INFIELD indp002
            {<point name="input.c.indp002" />}
            #END add-point
 
         #Ctrlp:input.c.indp003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indp003
            #add-point:ON ACTION controlp INFIELD indp003
            {<point name="input.c.indp003" />}
            #END add-point
 
         #Ctrlp:input.c.indpstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indpstus
            #add-point:ON ACTION controlp INFIELD indpstus
            {<point name="input.c.indpstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_indp_m.indpdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO indp_t (indpent,indpsite,indpdocdt,indpdocno,indp001,indp002,indp003,indpstus, 
                   indpownid,indpowndp,indpcrtid,indpcrtdp,indpcrtdt,indpmodid,indpmoddt,indpcnfid,indpcnfdt, 
                   indppstid,indppstdt)
               VALUES (g_enterprise,g_indp_m.indpsite,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001, 
                   g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid,g_indp_m.indpowndp, 
                   g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid,g_indp_m.indpmoddt, 
                   g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_indp_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint610_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aint610_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aint610_indp_t_mask_restore('restore_mask_o')
               
               UPDATE indp_t SET (indpsite,indpdocdt,indpdocno,indp001,indp002,indp003,indpstus,indpownid, 
                   indpowndp,indpcrtid,indpcrtdp,indpcrtdt,indpmodid,indpmoddt,indpcnfid,indpcnfdt,indppstid, 
                   indppstdt) = (g_indp_m.indpsite,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001, 
                   g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid,g_indp_m.indpowndp, 
                   g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid,g_indp_m.indpmoddt, 
                   g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt)
                WHERE indpent = g_enterprise AND indpdocno = g_indpdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "indp_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aint610_indp_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_indp_m_t)
               LET g_log2 = util.JSON.stringify(g_indp_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_indpdocno_t = g_indp_m.indpdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="aint610.input.other" ver="2" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD indpdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD indqseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aint610.insert" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint610_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_indq_d.clear()   
 
 
   INITIALIZE g_indp_m.* LIKE indp_t.*             #DEFAULT 設定
   
   LET g_indpdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_indp_m.indpownid = g_user
      LET g_indp_m.indpowndp = g_dept
      LET g_indp_m.indpcrtid = g_user
      LET g_indp_m.indpcrtdp = g_dept 
      LET g_indp_m.indpcrtdt = cl_get_current()
      LET g_indp_m.indpmodid = g_user
      LET g_indp_m.indpmoddt = cl_get_current()
      LET g_indp_m.indpstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_indp_m_t.* = g_indp_m.*
      LET g_indp_m_o.* = g_indp_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indp_m.indpstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
    
      CALL aint610_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_indp_m.* TO NULL
         INITIALIZE g_indq_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aint610_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_indq_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint610_set_act_visible()   
   CALL aint610_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indpdocno_t = g_indp_m.indpdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indpent = '" ||g_enterprise|| "' AND",
                      " indpdocno = '", g_indp_m.indpdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint610_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aint610_cl
   
   CALL aint610_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aint610_master_referesh USING g_indp_m.indpdocno INTO g_indp_m.indpsite,g_indp_m.indpdocdt, 
       g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid, 
       g_indp_m.indpowndp,g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid, 
       g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt, 
       g_indp_m.indpsite_desc,g_indp_m.indp001_desc,g_indp_m.indp002_desc,g_indp_m.indp003_desc,g_indp_m.indpownid_desc, 
       g_indp_m.indpowndp_desc,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp_desc,g_indp_m.indpmodid_desc, 
       g_indp_m.indpcnfid_desc,g_indp_m.indppstid_desc
   
   #遮罩相關處理
   LET g_indp_m_mask_o.* =  g_indp_m.*
   CALL aint610_indp_t_mask()
   LET g_indp_m_mask_n.* =  g_indp_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indp_m.indpsite,g_indp_m.indpsite_desc,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001, 
       g_indp_m.indp001_desc,g_indp_m.indp002,g_indp_m.indp002_desc,g_indp_m.indp003,g_indp_m.indp003_desc, 
       g_indp_m.indpstus,g_indp_m.indpownid,g_indp_m.indpownid_desc,g_indp_m.indpowndp,g_indp_m.indpowndp_desc, 
       g_indp_m.indpcrtid,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp,g_indp_m.indpcrtdp_desc,g_indp_m.indpcrtdt, 
       g_indp_m.indpmodid,g_indp_m.indpmodid_desc,g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfid_desc, 
       g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstid_desc,g_indp_m.indppstdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aint610_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="aint610.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint610_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO indq_t
                  (indqent,
                   indqdocno,
                   indqseq
                   ,indq002,indq001,indq004,indq005,indq006,indq007,indq003,indq008,indq009,indq010,indq011,indq012) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_indq_d[g_detail_idx].indq002,g_indq_d[g_detail_idx].indq001,g_indq_d[g_detail_idx].indq004, 
                       g_indq_d[g_detail_idx].indq005,g_indq_d[g_detail_idx].indq006,g_indq_d[g_detail_idx].indq007, 
                       g_indq_d[g_detail_idx].indq003,g_indq_d[g_detail_idx].indq008,g_indq_d[g_detail_idx].indq009, 
                       g_indq_d[g_detail_idx].indq010,g_indq_d[g_detail_idx].indq011,g_indq_d[g_detail_idx].indq012) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indq_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indq_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aint610.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aint610_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint610.key_update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aint610_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aint610.lock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint610_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL aint610_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "indq_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint610_bcl USING g_enterprise,
                                       g_indp_m.indpdocno,g_indq_d[g_detail_idx].indqseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint610_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint610.main" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT indpsite,'',indpdocdt,indpdocno,indp001,'',indp002,'',indp003,'',indpstus, 
       indpownid,'',indpowndp,'',indpcrtid,'',indpcrtdp,'',indpcrtdt,indpmodid,'',indpmoddt,indpcnfid, 
       '',indpcnfdt,indppstid,'',indppstdt", 
                      " FROM indp_t",
                      " WHERE indpent= ? AND indpdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint610_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.indpsite,t0.indpdocdt,t0.indpdocno,t0.indp001,t0.indp002,t0.indp003, 
       t0.indpstus,t0.indpownid,t0.indpowndp,t0.indpcrtid,t0.indpcrtdp,t0.indpcrtdt,t0.indpmodid,t0.indpmoddt, 
       t0.indpcnfid,t0.indpcnfdt,t0.indppstid,t0.indppstdt,t1.ooefl003 ,t2.rtaxl003 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooefl003 ,t9.ooag011 ,t10.ooag011 ,t11.ooag011",
               " FROM indp_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.indpsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t2 ON t2.rtaxlent='"||g_enterprise||"' AND t2.rtaxl001=t0.indp001 AND t2.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.indp002  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.indp003 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.indpownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.indpowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.indpcrtid  ",
               " LEFT JOIN ooefl_t t8 ON t8.ooeflent='"||g_enterprise||"' AND t8.ooefl001=t0.indpcrtdp AND t8.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.indpmodid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.indpcnfid  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent='"||g_enterprise||"' AND t11.ooag001=t0.indppstid  ",
 
               " WHERE t0.indpent = '" ||g_enterprise|| "' AND t0.indpdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint610_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint610 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint610_init()   
 
      #進入選單 Menu (="N")
      CALL aint610_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint610
      
   END IF 
   
   CLOSE aint610_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aint610.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ain/aint610_mask.4gl"
]]>
  </section>
  <section id="aint610.modify" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint610_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_indp_m_t.* = g_indp_m.*
   LET g_indp_m_o.* = g_indp_m.*
   
   IF g_indp_m.indpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_indpdocno_t = g_indp_m.indpdocno
 
   CALL s_transaction_begin()
   
   OPEN aint610_cl USING g_enterprise,g_indp_m.indpdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint610_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint610_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint610_master_referesh USING g_indp_m.indpdocno INTO g_indp_m.indpsite,g_indp_m.indpdocdt, 
       g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid, 
       g_indp_m.indpowndp,g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid, 
       g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt, 
       g_indp_m.indpsite_desc,g_indp_m.indp001_desc,g_indp_m.indp002_desc,g_indp_m.indp003_desc,g_indp_m.indpownid_desc, 
       g_indp_m.indpowndp_desc,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp_desc,g_indp_m.indpmodid_desc, 
       g_indp_m.indpcnfid_desc,g_indp_m.indppstid_desc
   
   #檢查是否允許此動作
   IF NOT aint610_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indp_m_mask_o.* =  g_indp_m.*
   CALL aint610_indp_t_mask()
   LET g_indp_m_mask_n.* =  g_indp_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL aint610_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_indpdocno_t = g_indp_m.indpdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_indp_m.indpmodid = g_user 
LET g_indp_m.indpmoddt = cl_get_current()
LET g_indp_m.indpmodid_desc = cl_get_username(g_indp_m.indpmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aint610_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE indp_t SET (indpmodid,indpmoddt) = (g_indp_m.indpmodid,g_indp_m.indpmoddt)
          WHERE indpent = g_enterprise AND indpdocno = g_indpdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_indp_m.* = g_indp_m_t.*
         CALL aint610_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_indp_m.indpdocno != g_indpdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE indq_t SET indqdocno = g_indp_m.indpdocno
 
          WHERE indqent = g_enterprise AND indqdocno = g_indpdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indq_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indq_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint610_set_act_visible()   
   CALL aint610_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " indpent = '" ||g_enterprise|| "' AND",
                      " indpdocno = '", g_indp_m.indpdocno, "' "
 
   #填到對應位置
   CALL aint610_browser_fill("")
 
   CLOSE aint610_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint610_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="aint610.msgcentre_notify" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION aint610_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aint610_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_indp_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aint610.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aint610.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint610.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint610_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_indq_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aint610_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint610_browser_fill("")
      CALL aint610_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint610_filter_show('indpsite')
   CALL aint610_filter_show('indpdocdt')
   CALL aint610_filter_show('indpdocno')
   CALL aint610_filter_show('indp001')
   CALL aint610_filter_show('indp002')
   CALL aint610_filter_show('indp003')
   CALL aint610_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aint610_fetch("F") 
      #顯示單身筆數
      CALL aint610_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint610.reproduce" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aint610_reproduce()
   DEFINE l_newno     LIKE indp_t.indpdocno 
   DEFINE l_oldno     LIKE indp_t.indpdocno 
 
   DEFINE l_master    RECORD LIKE indp_t.*
   DEFINE l_detail    RECORD LIKE indq_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_indp_m.indpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_indpdocno_t = g_indp_m.indpdocno
 
    
   LET g_indp_m.indpdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_indp_m.indpownid = g_user
      LET g_indp_m.indpowndp = g_dept
      LET g_indp_m.indpcrtid = g_user
      LET g_indp_m.indpcrtdp = g_dept 
      LET g_indp_m.indpcrtdt = cl_get_current()
      LET g_indp_m.indpmodid = g_user
      LET g_indp_m.indpmoddt = cl_get_current()
      LET g_indp_m.indpstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indp_m.indpstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL aint610_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_indp_m.* TO NULL
      INITIALIZE g_indq_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aint610_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint610_set_act_visible()   
   CALL aint610_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indpdocno_t = g_indp_m.indpdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indpent = '" ||g_enterprise|| "' AND",
                      " indpdocno = '", g_indp_m.indpdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint610_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aint610_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aint610_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="aint610.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aint610_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint610.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aint610_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint610.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aint610_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint610.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aint610_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint610.set_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint610_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("indpdocno,indpdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("indpdocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint610.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint610_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aint610.set_no_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint610_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("indpdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("indpdocno,indpdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint610.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint610_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aint610.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aint610_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_indp_m.indpdocno
   LET g_pk_array[1].column = 'indpdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint610.show" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint610_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint610_b_fill() #單身填充
      CALL aint610_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aint610_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_indp_m_mask_o.* =  g_indp_m.*
   CALL aint610_indp_t_mask()
   LET g_indp_m_mask_n.* =  g_indp_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indp_m.indpsite,g_indp_m.indpsite_desc,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001, 
       g_indp_m.indp001_desc,g_indp_m.indp002,g_indp_m.indp002_desc,g_indp_m.indp003,g_indp_m.indp003_desc, 
       g_indp_m.indpstus,g_indp_m.indpownid,g_indp_m.indpownid_desc,g_indp_m.indpowndp,g_indp_m.indpowndp_desc, 
       g_indp_m.indpcrtid,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp,g_indp_m.indpcrtdp_desc,g_indp_m.indpcrtdt, 
       g_indp_m.indpmodid,g_indp_m.indpmodid_desc,g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfid_desc, 
       g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstid_desc,g_indp_m.indppstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indp_m.indpstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_indq_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint610_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint610.signature" ver="2" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION aint610_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL aint610_show()
   CALL aint610_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_indp_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_indq_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aint610_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint610_ui_headershow()
   CALL aint610_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION aint610_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint610_ui_headershow()  
   CALL aint610_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aint610.state_change" ver="8" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION aint610_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_indp_m.indpdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aint610_cl USING g_enterprise,g_indp_m.indpdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint610_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint610_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aint610_master_referesh USING g_indp_m.indpdocno INTO g_indp_m.indpsite,g_indp_m.indpdocdt, 
       g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid, 
       g_indp_m.indpowndp,g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid, 
       g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt, 
       g_indp_m.indpsite_desc,g_indp_m.indp001_desc,g_indp_m.indp002_desc,g_indp_m.indp003_desc,g_indp_m.indpownid_desc, 
       g_indp_m.indpowndp_desc,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp_desc,g_indp_m.indpmodid_desc, 
       g_indp_m.indpcnfid_desc,g_indp_m.indppstid_desc
 
   #檢查是否允許此動作
   IF NOT aint610_action_chk() THEN
      CLOSE aint610_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indp_m.indpsite,g_indp_m.indpsite_desc,g_indp_m.indpdocdt,g_indp_m.indpdocno,g_indp_m.indp001, 
       g_indp_m.indp001_desc,g_indp_m.indp002,g_indp_m.indp002_desc,g_indp_m.indp003,g_indp_m.indp003_desc, 
       g_indp_m.indpstus,g_indp_m.indpownid,g_indp_m.indpownid_desc,g_indp_m.indpowndp,g_indp_m.indpowndp_desc, 
       g_indp_m.indpcrtid,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp,g_indp_m.indpcrtdp_desc,g_indp_m.indpcrtdt, 
       g_indp_m.indpmodid,g_indp_m.indpmodid_desc,g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfid_desc, 
       g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstid_desc,g_indp_m.indppstdt
 
   CASE g_indp_m.indpstus
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_indp_m.indpstus
            
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "N"
               HIDE OPTION "open"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "Y"
               HIDE OPTION "valid"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "void"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aint610_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint610_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aint610_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint610_cl
            RETURN
         END IF
 
 
	  
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION open
         IF cl_auth_chk_act("open") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.open"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION valid
         IF cl_auth_chk_act("valid") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.valid"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION void
         IF cl_auth_chk_act("void") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.void"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "A" 
      AND lc_state <> "N"
      AND lc_state <> "D"
      AND lc_state <> "Y"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_indp_m.indpstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aint610_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_indp_m.indpmodid = g_user
   LET g_indp_m.indpmoddt = cl_get_current()
   LET g_indp_m.indpstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE indp_t 
      SET (indpstus,indpmodid,indpmoddt) 
        = (g_indp_m.indpstus,g_indp_m.indpmodid,g_indp_m.indpmoddt)     
    WHERE indpent = g_enterprise AND indpdocno = g_indp_m.indpdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aint610_master_referesh USING g_indp_m.indpdocno INTO g_indp_m.indpsite,g_indp_m.indpdocdt, 
          g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid, 
          g_indp_m.indpowndp,g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid, 
          g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt, 
          g_indp_m.indpsite_desc,g_indp_m.indp001_desc,g_indp_m.indp002_desc,g_indp_m.indp003_desc,g_indp_m.indpownid_desc, 
          g_indp_m.indpowndp_desc,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp_desc,g_indp_m.indpmodid_desc, 
          g_indp_m.indpcnfid_desc,g_indp_m.indppstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_indp_m.indpsite,g_indp_m.indpsite_desc,g_indp_m.indpdocdt,g_indp_m.indpdocno, 
          g_indp_m.indp001,g_indp_m.indp001_desc,g_indp_m.indp002,g_indp_m.indp002_desc,g_indp_m.indp003, 
          g_indp_m.indp003_desc,g_indp_m.indpstus,g_indp_m.indpownid,g_indp_m.indpownid_desc,g_indp_m.indpowndp, 
          g_indp_m.indpowndp_desc,g_indp_m.indpcrtid,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp,g_indp_m.indpcrtdp_desc, 
          g_indp_m.indpcrtdt,g_indp_m.indpmodid,g_indp_m.indpmodid_desc,g_indp_m.indpmoddt,g_indp_m.indpcnfid, 
          g_indp_m.indpcnfid_desc,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstid_desc,g_indp_m.indppstdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aint610_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint610_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint610.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aint610_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aint610.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint610_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_indpdocno = g_indp_m.indpdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint610.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint610_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint610.ui_dialog" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aint610_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint610_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_indp_m.* TO NULL
         CALL g_indq_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aint610_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint610_fetch('') # reload data
               LET l_ac = 1
               CALL aint610_ui_detailshow() #Setting the current row 
         
               CALL aint610_idx_chk()
               #NEXT FIELD indqseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_indq_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint610_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aint610_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aint610_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint610_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint610_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint610_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint610_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aint610_set_act_visible()   
            CALL aint610_set_act_no_visible()
            IF NOT (g_indp_m.indpdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " indpent = '" ||g_enterprise|| "' AND",
                                  " indpdocno = '", g_indp_m.indpdocno, "' "
 
               #填到對應位置
               CALL aint610_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indp_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indq_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aint610_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indp_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indq_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint610_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aint610_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint610_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aint610_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint610_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aint610_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint610_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aint610_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint610_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aint610_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint610_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aint610_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint610_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_indq_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD indqseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint610_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint610_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint610_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint610_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/ain/aint610_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint610_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint610_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aint610_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint610_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint610_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_indp_m.indpdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aint610.ui_headershow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint610_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_indp_m.indpdocno = g_browser[g_current_idx].b_indpdocno   
 
   EXECUTE aint610_master_referesh USING g_indp_m.indpdocno INTO g_indp_m.indpsite,g_indp_m.indpdocdt, 
       g_indp_m.indpdocno,g_indp_m.indp001,g_indp_m.indp002,g_indp_m.indp003,g_indp_m.indpstus,g_indp_m.indpownid, 
       g_indp_m.indpowndp,g_indp_m.indpcrtid,g_indp_m.indpcrtdp,g_indp_m.indpcrtdt,g_indp_m.indpmodid, 
       g_indp_m.indpmoddt,g_indp_m.indpcnfid,g_indp_m.indpcnfdt,g_indp_m.indppstid,g_indp_m.indppstdt, 
       g_indp_m.indpsite_desc,g_indp_m.indp001_desc,g_indp_m.indp002_desc,g_indp_m.indp003_desc,g_indp_m.indpownid_desc, 
       g_indp_m.indpowndp_desc,g_indp_m.indpcrtid_desc,g_indp_m.indpcrtdp_desc,g_indp_m.indpmodid_desc, 
       g_indp_m.indpcnfid_desc,g_indp_m.indppstid_desc
   CALL aint610_indp_t_mask()
   CALL aint610_show()
      
END FUNCTION
]]>
  </section>
  <section id="aint610.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint610_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint610_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aint610.update_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint610_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "indq_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aint610_indq_t_mask_restore('restore_mask_o')
               
      UPDATE indq_t 
         SET (indqdocno,
              indqseq
              ,indq002,indq001,indq004,indq005,indq006,indq007,indq003,indq008,indq009,indq010,indq011,indq012) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_indq_d[g_detail_idx].indq002,g_indq_d[g_detail_idx].indq001,g_indq_d[g_detail_idx].indq004, 
                  g_indq_d[g_detail_idx].indq005,g_indq_d[g_detail_idx].indq006,g_indq_d[g_detail_idx].indq007, 
                  g_indq_d[g_detail_idx].indq003,g_indq_d[g_detail_idx].indq008,g_indq_d[g_detail_idx].indq009, 
                  g_indq_d[g_detail_idx].indq010,g_indq_d[g_detail_idx].indq011,g_indq_d[g_detail_idx].indq012)  

         WHERE indqent = g_enterprise AND indqdocno = ps_keys_bak[1] AND indqseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indq_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indq_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint610_indq_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
