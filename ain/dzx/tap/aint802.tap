<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint802" std_prog="aint802" erpver="1.0" module="AIN" ver="1" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.aint802_indt001_def" order="1" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 批號帶出預設值
# Memo...........:
# Usage..........: CALL aint802_indt001_def()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/06/25 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_indt001_def()

   SELECT inad001, inad002, inag004,
          inag003
     INTO g_indt_d[l_ac].indt004, g_indt_d[l_ac].indt005, g_indt_d[l_ac].indt002,
          g_indt_d[l_ac].indt008
     FROM inad_t,inag_t
    WHERE inadent = inagent
      AND inadsite = inagsite
      AND inad001 = inag001       #商品編號
      AND inad002 = inag002       #產品特徵
      AND inad003 = inag003       #批號
      AND inagent = g_enterprise
      AND inagsite = g_indt_d[l_ac].indtsite
      AND inag006 = g_indt_d[l_ac].indt001
   
   CALL aint802_indt004_def('2')
   
   CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
      RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
END FUNCTION]]>
  </point>
  <point name="function.aint802_indt003_def" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 商品條碼帶出預設值
# Memo...........:
# Usage..........: CALL aint802_indt003_def()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/06/22 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_indt003_def()

   SELECT imay001 INTO g_indt_d[l_ac].indt004
     FROM imay_t
    WHERE imayent = g_enterprise
      AND imay003 = g_indt_d[l_ac].indt003
      
   CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
      RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
      
   IF g_indt_d[l_ac].indt004 != g_indt_d_o.indt004 OR
      cl_null(g_indt_d_o.indt004) AND g_indr_m.indr005 MATCHES '[123]' THEN
      LET g_indt_d[l_ac].indt001 = ''
      LET g_indt_d[l_ac].indt005 = ''
      LET g_indt_d[l_ac].indt005_desc = ''
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aint802_indt004_chk" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 商品編號校驗
# Memo...........:
# Usage..........: CALL aint802_indt004_chk()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/06/22 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_indt004_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_sys             LIKE type_t.num5
DEFINE l_sql             STRING

   LET r_success = TRUE
   
   IF cl_null(g_indt_d[l_ac].indtsite) OR cl_null(g_indt_d[l_ac].indt004) THEN
      RETURN r_success
   END IF
   
   IF NOT cl_null(g_indr_m.indr002) AND g_indr_m.indr002 != 'ALL' THEN
      LET l_sys =  cl_get_para(g_enterprise,g_site,'E-CIR-0001')
      LET l_sql = " SELECT COUNT(imaa001)",
                  "   FROM imaa_t ",
                  "  WHERE imaaent = ",g_enterprise,
                  "    AND imaa001 = '",g_indt_d[l_ac].indt004,"'",
                  "    AND imaa009 IN (SELECT DISTINCT rtax001 FROM rtax_t",
                  "                     WHERE rtaxent = ",g_enterprise,
                  "                       AND rtax004 >= ",l_sys,
                  "                       AND rtaxstus = 'Y'",
                  "                     START WITH rtax003 = '",g_indr_m.indr002,"'",
                  "                   CONNECT BY NOCYCLE PRIOR rtax001 = rtax003 ",
                  "                     UNION ",
                  "                    SELECT DISTINCT rtax001",
                  "                      FROM rtax_t ",
                  "                     WHERE rtaxent =",g_enterprise,
                  "                       AND rtax004 = ",l_sys,
                  "                       AND rtax005 = 0 ",
                  "                       AND rtaxstus = 'Y' ",
                  "                       AND rtax001 = '",g_indr_m.indr002,"')"
      PREPARE aint802_chk_rtax FROM l_sql
      LET l_cnt = 0
      EXECUTE aint802_chk_rtax INTO l_cnt
      IF l_cnt = 0 THEN
         #輸入的商品品類不是歸屬單頭的管理品類！
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apr-00009'
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF
   
   IF NOT aint802_inaj_chk() THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   SELECT COUNT(stas002) INTO l_cnt
     FROM star_t,stas_t
    WHERE starent = stasent
      AND starsite = stassite
      AND star001 = stas001
      AND starent = g_enterprise
      AND starsite = g_indt_d[l_ac].indtsite
      AND star003 = g_indr_m.indr006
      AND stas003 = g_indt_d[l_ac].indt004
      AND starstus = 'Y'
   
   IF l_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ain-00603'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = g_indt_d[l_ac].indtsite
      LET g_errparam.replace[2] = g_indr_m.indr006
      LET g_errparam.replace[3] = g_indt_d[l_ac].indt004
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint802_indt004_def" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 商品編號帶出預設值
# Memo...........:
# Usage..........: CALL aint802_indt004_def(p_type)
# Input parameter: p_type         1.需清空 2.不需清空
# Return code....: 無
# Date & Author..: 2015/06/22 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_indt004_def(p_type)
DEFINE p_type            LIKE type_t.num5

   IF cl_null(g_indt_d[l_ac].indt003) THEN
      SELECT imaa014 INTO g_indt_d[l_ac].indt003
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_indt_d[l_ac].indt004
   END IF
   
   IF p_type = '1' AND g_indr_m.indr005 MATCHES '[123]' THEN
      LET g_indt_d[l_ac].indt001 = ''
      LET g_indt_d[l_ac].indt005 = ''
      LET g_indt_d[l_ac].indt005_desc = ''
   END IF
   
END FUNCTION]]>
  </point>
  <point name="function.aint802_contorlp_where" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 開窗條件
# Memo...........:
# Usage..........: CALL aint802_contorlp_where(p_type)
#                  RETURNING r_where
# Input parameter: p_type         開窗的來源
#                                 1.營運據點
#                                 2.批號
#                                 3.庫位
#                                 4.商品條碼
#                                 5.商品編號
# Return code....: r_where        條件
# Date & Author..: 2015/06/27 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_contorlp_where(p_type)
DEFINE p_type            LIKE type_t.num5
DEFINE r_where           STRING
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_where           STRING

   LET r_where = " 1=1"
   
   LET l_where = " EXISTS(SELECT 1",
                 "          FROM inaj_t",
                 "         WHERE inajent = ",g_enterprise,
                 "           AND inaj011 >= 0",             #異動數量
                 "           AND inaj036 = '102'",          #庫存異動類型
                 #供應商
                 "           AND inaj018 = '",g_indr_m.indr006,"'"
   
   #管理品類
   IF NOT cl_null(g_indr_m.indr002) AND g_indr_m.indr002 != 'ALL' THEN
      LET l_where = l_where,
                    " AND EXISTS(SELECT 1 FROM imaa_t ",
                    "             WHERE imaaent = inajent",
                    "               AND imaa001 = inaj005",
                    "               AND EXISTS (SELECT 1 FROM rtaw_t ",
                    "                            WHERE rtawent = imaaent",
                    "                              AND rtaw002 = imaa009",
                    "                              AND rtaw001 = '",g_indr_m.indr002,"'))"
   END IF
   
   #開窗來源
   CASE p_type
      WHEN 1    #1.營運據點
         LET l_where = l_where," AND inajent = ooefent",
                               " AND inajsite = ooef001"
                               
      WHEN 2    #2.批號
         LET l_where = l_where," AND inajent = inadent",
                               " AND inaj010 = inad003"
         
      WHEN 3    #3.庫位
         LET l_where = l_where," AND inajent = inaaent",
                               " AND inaj008 = inaa001"
                               
      WHEN 4    #4.商品條碼
         LET l_where = l_where," AND inajent = imaaent",
                               " AND inaj005 = imaa001"
                               
      WHEN 5    #5.商品編號
         LET l_where = l_where," AND inajent = imaaent",
                               " AND inaj005 = imaa001"
                               
   END CASE
   
   LET l_cnt = 0
   
   #門店編號
   IF NOT cl_null(g_indt_d[l_ac].indtsite) AND p_type MATCHES '[2345]' THEN
      LET l_where = l_where," AND inajsite = '",g_indt_d[l_ac].indtsite,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #批號
   IF NOT cl_null(g_indt_d[l_ac].indt001) AND
      (p_type MATCHES '[1345]' AND g_indr_m.indr005 MATCHES '[123]') THEN
      LET l_where = l_where," AND inaj010 = '",g_indt_d[l_ac].indt001,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #庫位
   IF NOT cl_null(g_indt_d[l_ac].indt002) AND 
      (p_type MATCHES '[1245]' AND g_indr_m.indr005 MATCHES '[123]') THEN
      LET l_where = l_where," AND inaj008 = '",g_indt_d[l_ac].indt002,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #商品編號
   IF NOT cl_null(g_indt_d[l_ac].indt004) AND
      (p_type MATCHES '[123]' AND g_indr_m.indr005 MATCHES '[123]') THEN
      LET l_where = l_where," AND inaj005 = '",g_indt_d[l_ac].indt004,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #產品特徵
   IF NOT cl_null(g_indt_d[l_ac].indt005) AND
      (p_type MATCHES '[123]' AND g_indr_m.indr005 MATCHES '[123]') THEN
      LET l_where = l_where," AND inaj006 = '",g_indt_d[l_ac].indt005,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #庫存管理特徵
   IF NOT cl_null(g_indt_d[l_ac].indt008) AND g_indr_m.indr005 MATCHES '[123]'  THEN
      LET l_where = l_where," AND inaj007 = '",g_indt_d[l_ac].indt008,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   IF l_cnt >= 1 THEN
      LET r_where = l_where,")"
   END IF
   
   IF g_indr_m.indr005 = '4' THEN
      LET l_where = ''
      CALL aint802_type4_where(p_type) RETURNING l_where
      LET r_where = r_where," AND ",l_where
   END IF
   
   RETURN r_where
END FUNCTION]]>
  </point>
  <point name="function.aint802_type4_where" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 調整模式 = 4.只調整指定批號 的開窗條件
# Memo...........:
# Usage..........: CALL aint802_type4_where(p_type)
#                  RETURNING r_where
# Input parameter: p_type         開窗的來源
#                                 1.營運據點
#                                 2.批號
#                                 3.庫位
#                                 4.商品條碼
#                                 5.商品編號
# Return code....: r_where        條件
# Date & Author..: 2015/06/26 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_type4_where(p_type)
DEFINE p_type            LIKE type_t.num5
DEFINE r_where           STRING
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_add             LIKE type_t.num5
DEFINE l_where           STRING

   LET r_where = " 1=1"
   
   #當調整模式 != 4.只調整指定批號，不需要多組條件
   IF g_indr_m.indr005 MATCHES '[123]' THEN
      RETURN r_where
   END IF
   
   LET l_where = " EXISTS(SELECT 1",
                 "          FROM inad_t,inag_t",
                 "         WHERE inadent = inagent",
                 "           AND inadsite = inagsite",
                 "           AND inad001 = inag001",
                 "           AND inad002 = inag002",
                 "           AND inad003 = inag006",
                 "           AND inagent = ",g_enterprise
   
   #開窗來源
   CASE p_type
      WHEN 1    #1.營運據點
         LET l_where = l_where," AND inagent = ooefent",
                               " AND inagsite = ooef001"
                               
      WHEN 2    #2.批號
         LET l_where = " EXISTS(SELECT 1",
                       "          FROM inag_t",
                       "         WHERE inadent = inagent",
                       "           AND inadsite = inagsite",
                       "           AND inad001 = inag001",
                       "           AND inad002 = inag002",
                       "           AND inad003 = inag006"
         
      WHEN 3    #3.庫位
         LET l_where = l_where," AND inagent = inaaent",
                               " AND inag004 = inaa001"
                               
      WHEN 4    #4.商品條碼
         LET l_where = l_where," AND inagent = imaaent",
                               " AND inag001 = imaa001"
                               
      WHEN 5    #5.商品編號
         LET l_where = l_where," AND inagent = imaaent",
                               " AND inag001 = imaa001"
                               
   END CASE
   
   LET l_cnt = 0
   LET l_add = TRUE
   IF NOT cl_null(g_indt_d[l_ac].indt001) THEN
      SELECT COUNT(inagsite) INTO l_cnt
        FROM inad_t,inag_t
       WHERE inadent = inagent
         AND inadsite = inagsite
         AND inad001 = inag001       #商品編號
         AND inad002 = inag002       #產品特徵
         AND inad003 = inag006       #批號
         AND inagent = g_enterprise
         AND inagsite = g_indt_d[l_ac].indtsite
         AND inag006 = g_indt_d[l_ac].indt001
      LET l_add = FALSE
   END IF
   
   #門店編號
   IF NOT cl_null(g_indt_d[l_ac].indtsite) AND p_type MATCHES '[2345]' THEN
      LET l_where = l_where," AND inagsite = '",g_indt_d[l_ac].indtsite,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #批號
   IF NOT cl_null(g_indt_d[l_ac].indt001) AND l_add AND
      p_type MATCHES '[1345]' THEN
      LET l_where = l_where," AND inag006 = '",g_indt_d[l_ac].indt001,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #庫位
   IF NOT cl_null(g_indt_d[l_ac].indt002) AND l_add AND
      p_type MATCHES '[1245]' THEN
      LET l_where = l_where," AND inag004 = '",g_indt_d[l_ac].indt002,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #商品編號
   IF NOT cl_null(g_indt_d[l_ac].indt004) AND l_add AND
      p_type MATCHES '[123]' THEN
      LET l_where = l_where," AND inag001 = '",g_indt_d[l_ac].indt004,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #產品特徵
   IF NOT cl_null(g_indt_d[l_ac].indt005) AND l_add AND
      p_type MATCHES '[123]' THEN
      LET l_where = l_where," AND inag002 = '",g_indt_d[l_ac].indt005,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   #庫存管理特徵
   IF NOT cl_null(g_indt_d[l_ac].indt008) AND l_add THEN
      LET l_where = l_where," AND inag003 = '",g_indt_d[l_ac].indt008,"'"
      LET l_cnt = l_cnt + 1
   END IF
   
   IF l_cnt >= 1 THEN
      LET r_where = l_where,")"
   END IF
   
   RETURN r_where
END FUNCTION]]>
  </point>
  <point name="function.aint802_type4_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 調整模式 = 4.只調整指定批號
# Memo...........:
# Usage..........: CALL aint802_type4_chk()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/06/26 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_type4_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cost            LIKE xccc_t.xccc280       #商品的成本單價
DEFINE l_imaa005         LIKE imaa_t.imaa005
DEFINE l_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_pmdt212         LIKE pmdt_t.pmdt212
DEFINE l_sql             STRING
DEFINE l_where           STRING
DEFINE l_indt            RECORD
       indt002           LIKE indt_t.indt002,      #庫位
       indt004           LIKE indt_t.indt004,      #商品編號
       indt005           LIKE indt_t.indt005,      #產品特徵
       indt008           LIKE indt_t.indt008       #庫存管理特徵
                         END RECORD

   LET r_success = TRUE
   
   #當調整模式 != 4.只調整指定批號
   IF g_indr_m.indr005 MATCHES '[123]' THEN
      RETURN r_success
   END IF
   
   LET l_where = "  FROM inad_t,inag_t",
                 " WHERE inadent = inagent",
                 "   AND inadsite = inagsite",
                 "   AND inad001 = inag001",                         #商品編號
                 "   AND inad002 = inag002",                         #產品特徵
                 "   AND inad003 = inag006",                         #批號
                 "   AND inagent = ",g_enterprise,
                 "   AND inagsite = '",g_indt_d[l_ac].indtsite,"'"   #營運組織
   #批號
   IF NOT cl_null(g_indt_d[l_ac].indt001) THEN
      LET l_where = l_where," AND inag006 = '",g_indt_d[l_ac].indt001,"'"
   END IF
   
   #庫位
   IF NOT cl_null(g_indt_d[l_ac].indt002) THEN
      LET l_where = l_where," AND inag004 = '",g_indt_d[l_ac].indt002,"'"
   END IF
   
   #商品編號
   IF NOT cl_null(g_indt_d[l_ac].indt004) THEN
      LET l_where = l_where," AND inag001 = '",g_indt_d[l_ac].indt004,"'"
      
      #產品特徵
      LET l_imaa005 = ''
      SELECT imaa005 INTO l_imaa005
        FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_indt_d[l_ac].indt004
      IF cl_null(l_imaa005) THEN
         LET l_where = l_where," AND COALESCE(inag002,' ') = ' '"
      ELSE
         IF NOT cl_null(g_indt_d[l_ac].indt005) THEN
            LET l_where = l_where," AND COALESCE(inag002,' ') = COALESCE('",g_indt_d[l_ac].indt005,"',' ')"
         END IF
      END IF
   END IF
   
   #庫存管理特徵
   IF NOT cl_null(g_indt_d[l_ac].indt008) THEN
      LET l_where = l_where," AND COALESCE(inag003,' ') = COALESCE('",g_indt_d[l_ac].indt008,"',' ')"
   END IF
   
   #計算筆數
   LET l_sql = "SELECT COUNT(inagsite)",l_where
   PREPARE aint802_type4_chk FROM l_sql
   
   LET l_cnt = 0
   EXECUTE aint802_type4_chk INTO l_cnt
   
   CASE l_cnt
      WHEN 0         #找不到資料，報錯
         #該商品編號%1+產品特徵%2+庫存管理特徵%3+庫位%4+批號%5不存在於[庫存明細檔]中！
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ain-00605'
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = g_indt_d[l_ac].indt004
         LET g_errparam.replace[2] = g_indt_d[l_ac].indt005
         LET g_errparam.replace[3] = g_indt_d[l_ac].indt008
         LET g_errparam.replace[4] = g_indt_d[l_ac].indt002
         LET g_errparam.replace[5] = g_indt_d[l_ac].indt001
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success

      WHEN 1         #對應到一筆資料，帶出資料
         LET l_sql = "SELECT inad001, inad002, inag004, inag003", l_where
         PREPARE aint802_type4_def FROM l_sql
         
         INITIALIZE l_indt.* TO NULL
         EXECUTE aint802_type4_def
            INTO l_indt.indt004, l_indt.indt005,
                 l_indt.indt002, l_indt.indt008
         
         #取實時成本
         LET l_success = ''
         LET l_cost = 0
         CALL aint802_get_cost_pre()
         CALL aint802_get_cost('1',                    g_indt_d[l_ac].indtsite,
                               g_indt_d[l_ac].indt001, l_indt.indt002,
                               l_indt.indt004,         l_indt.indt005,
                               l_indt.indt008)
            RETURNING l_success,l_cost,l_pmdt212
         IF l_success = FALSE THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
         LET g_indt_d[l_ac].indt006 = l_cost
         
         LET g_indt_d[l_ac].indt002 = l_indt.indt002       #庫位
         LET g_indt_d[l_ac].indt004 = l_indt.indt004       #商品編號
         LET g_indt_d[l_ac].indt005 = l_indt.indt005       #產品特徵
         LET g_indt_d[l_ac].indt008 = l_indt.indt008       #庫存管理特徵
         
         #帶出商品條碼
         CALL aint802_indt004_def('2')
         
         #商品品名、商品規格
         CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
            RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
         
         #產品特徵
         CALL s_feature_description(g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005)
            RETURNING l_success,g_indt_d[l_ac].indt005_desc
         
         #庫位
         CALL s_desc_get_stock_desc('',g_indt_d[l_ac].indt002)
            RETURNING g_indt_d[l_ac].indt002_desc
         
         LET g_indt_d_o.* = g_indt_d[l_ac].*
   END CASE
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint802_inaj_chk" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 檢查輸入的資料是否有存在交易明細檔中屬於入庫資料
# Memo...........:
# Usage..........: CALL aint802_inaj_chk()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/06/27 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_inaj_chk()
DEFINE r_success         LIKE type_t.num5
DEFINE l_cnt             LIKE type_t.num5
DEFINE l_sql             STRING

   LET r_success = TRUE
   
   #取出庫存交易明細檔中的第一筆入庫資料
   LET l_sql = "SELECT COUNT(inajsite)",
               "  FROM inaj_t",
               " WHERE inajent = ",g_enterprise,
               "   AND inaj011 >= 0",             #異動數量
               "   AND inaj036 = '102'",          #庫存異動類型
               #供應商
               "   AND inaj018 = '",g_indr_m.indr006,"'"
   
   #管理品類
   IF NOT cl_null(g_indr_m.indr002) AND g_indr_m.indr002 != 'ALL' THEN
      LET l_sql = l_sql,
                  " AND EXISTS(SELECT 1 FROM imaa_t ",
                  "             WHERE imaaent = inajent",
                  "               AND imaa001 = inaj005",
                  "               AND EXISTS (SELECT 1 FROM rtaw_t ",
                  "                            WHERE rtawent = imaaent",
                  "                              AND rtaw002 = imaa009",
                  "                              AND rtaw001 = '",g_indr_m.indr002,"'))"
   END IF
   
   #營運組織
   IF NOT cl_null(g_indt_d[l_ac].indtsite) THEN
      LET l_sql = l_sql," AND inajsite = '",g_indt_d[l_ac].indtsite,"'"
   END IF
   
   #批號
   IF NOT cl_null(g_indt_d[l_ac].indt001) THEN
      LET l_sql = l_sql," AND inaj010 = '",g_indt_d[l_ac].indt001,"'"
   END IF
   
   #庫位
   IF NOT cl_null(g_indt_d[l_ac].indt002) THEN
      LET l_sql = l_sql," AND inaj008 = '",g_indt_d[l_ac].indt002,"'"
   END IF
   
   #商品編號
   IF NOT cl_null(g_indt_d[l_ac].indt004) THEN
      LET l_sql = l_sql," AND inaj005 = '",g_indt_d[l_ac].indt004,"'"
   END IF
   
   #產品特徵
   IF NOT cl_null(g_indt_d[l_ac].indt005) THEN
      LET l_sql = l_sql," AND COALESCE(inaj006,' ') = '",g_indt_d[l_ac].indt005,"'"
   END IF
   
   #庫存管理特徵
   IF NOT cl_null(g_indt_d[l_ac].indt008) THEN
      LET l_sql = l_sql," AND COALESCE(inaj007,' ') = '",g_indt_d[l_ac].indt008,"'"
   END IF
   
   PREPARE aint802_inaj_chk FROM l_sql
   
   LET l_cnt = 0
   EXECUTE aint802_inaj_chk INTO l_cnt
   
   IF l_cnt = 0 THEN
      #輸入的條件在庫存交易明細檔(inaj_t)中並沒有一筆以上的入庫資料
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'ain-00609'
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   IF NOT aint802_type4_chk() THEN
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint802_get_cost_pre" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 準備取實時成本所需的SQL
# Memo...........:
# Usage..........: CALL aint802_get_cost_pre()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2015/06/26 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_get_cost_pre()
DEFINE l_sql             STRING

   #取出庫存交易明細檔中的第一筆入庫資料
   LET l_sql = "SELECT inaj001,inaj002",
               "  FROM inaj_t",
               " WHERE inajent = ",g_enterprise,
               "   AND inaj005 = ?",              #商品編號
               #產品特徵
               "   AND COALESCE(inaj006,' ') = COALESCE(?,' ')",
               "   AND inaj007 = ?",              #庫存管理特徵
               "   AND inaj008 = ?",              #庫位
               "   AND inaj010 = ?",              #批號
               "   AND inaj011 >= 0",             #異動數量
               "   AND inaj036 = '102'",          #庫存異動類型
               #供應商
               "   AND inaj018 = '",g_indr_m.indr006,"'",
               " ORDER BY inaj023,inaj024"
   PREPARE aint802_get_cost_inaj_pre FROM l_sql
   DECLARE aint802_get_cost_inaj_cs SCROLL CURSOR FOR aint802_get_cost_inaj_pre
   
   #取合約編號
   LET l_sql = "SELECT pmdt212",
               "  FROM pmdt_t",
               " WHERE pmdtent =",g_enterprise,
               "   AND pmdtdocno = ?",
               "   AND pmdtseq = ?"
   PREPARE aint802_get_pmdt212 FROM l_sql
   
   #取合約上的幣別
   LET l_sql = "SELECT stan006",
               "  FROM stan_t",
               " WHERE stanent = ",g_enterprise,
               "   AND stan001 = ?"
   PREPARE aint802_get_stan006 FROM l_sql
   
END FUNCTION]]>
  </point>
  <point name="function.aint802_get_cost" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 取實時成本
# Memo...........:
# Usage..........: CALL aint802_get_cost(p_inds)
#                  RETURNING r_success,r_cost,r_pmdt212
# Input parameter: p_inds         RECORD
#                :   type         是否需要提示錯誤訊息 1.需要 2.不需要
#                :   indssite     門店編號
#                :   inds001      批號
#                :   inds003      庫位
#                :   inds004      商品編號
#                :   inds020      產品特徵
#                :   inds021      庫存管理特徵
#                :                END RECORD
# Return code....: r_success      True/False
#                : r_cost         商品的成本單價
#                : r_pmdt212      合約編號
# Date & Author..: 2015/06/26 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_get_cost(p_inds)
DEFINE p_inds            RECORD
       type              LIKE type_t.num5,         #是否需要提示錯誤訊息 1.需要 2不需要
       indssite          LIKE inds_t.indssite,     #門店編號
       inds001           LIKE inds_t.inds001,      #批號
       inds003           LIKE inds_t.inds003,      #庫位
       inds004           LIKE inds_t.inds004,      #商品編號
       inds020           LIKE inds_t.inds020,      #產品特徵
       inds021           LIKE inds_t.inds021       #庫存管理特徵
                         END RECORD
DEFINE r_success         LIKE type_t.num5
DEFINE r_cost            LIKE xccc_t.xccc280       #商品的成本單價
DEFINE r_pmdt212         LIKE pmdt_t.pmdt212       #合約編號

DEFINE l_success         LIKE type_t.num5
DEFINE l_cost            LIKE xccc_t.xccc280       #商品的成本單價
DEFINE l_pmdt            RECORD
       pmds000           LIKE pmds_t.pmds000,      #單據性質
       pmds037           LIKE pmds_t.pmds037,      #幣別
       pmdtdocno         LIKE pmdt_t.pmdtdocno,    #入庫單號
       pmdtseq           LIKE pmdt_t.pmdtseq,      #入庫項次
       pmdt212           LIKE pmdt_t.pmdt212       #合約編號
                         END RECORD
                         
   LET r_success = TRUE
   LET r_cost = 0
   LET r_pmdt212 = ''
   
   INITIALIZE l_pmdt.* TO NULL
   
   #取出庫存交易明細檔中的第一筆入庫資料
   OPEN aint802_get_cost_inaj_cs
      USING p_inds.inds004, p_inds.inds020, p_inds.inds021,
            p_inds.inds003, p_inds.inds001
   FETCH FIRST aint802_get_cost_inaj_cs
          INTO l_pmdt.pmdtdocno,l_pmdt.pmdtseq
   
   IF SQLCA.sqlcode = 100 THEN
      #需提示錯誤訊息
      IF p_inds.type = '1' THEN
         #商品編號%1+產品特徵%2+庫存管理特徵%3+庫位%4+批號%5，取不到庫存交易明細檔(inaj_t)中的入庫資料
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ain-00606'
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = p_inds.inds004
         LET g_errparam.replace[2] = p_inds.inds020
         LET g_errparam.replace[3] = p_inds.inds021
         LET g_errparam.replace[4] = p_inds.inds003
         LET g_errparam.replace[5] = p_inds.inds001
         CALL cl_err()
      END IF
      LET r_success = FALSE
      RETURN r_success,r_cost,r_pmdt212
   END IF
   
   #取合約編號
   EXECUTE aint802_get_pmdt212
     USING l_pmdt.pmdtdocno,l_pmdt.pmdtseq
      INTO l_pmdt.pmdt212
   
   #取幣別
   EXECUTE aint802_get_stan006
     USING l_pmdt.pmdt212
      INTO l_pmdt.pmds037
   
   IF cl_null(l_pmdt.pmds037) THEN
      #需提示錯誤訊息
      IF p_inds.type = '1' THEN
         #此合同編號%1取到的幣別為空！
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'ain-00607'
         LET g_errparam.extend = ""
         LET g_errparam.popup = TRUE
         LET g_errparam.replace[1] = l_pmdt.pmdt212
         CALL cl_err()
      END IF
      LET r_success = FALSE
      RETURN r_success,r_cost,r_pmdt212
   END IF
   
   #呼叫元件取的商品的成本單價
   LET l_success = ''
   LET l_cost = 0
   CALL s_cost_price_get_item_cost(p_inds.indssite, '',             '',             '',
                                   '',              '',             p_inds.inds004, p_inds.inds020,
                                   p_inds.inds003,  p_inds.inds001, p_inds.inds021, l_pmdt.pmds037)
      RETURNING l_success, l_cost
    
   IF l_success = FALSE THEN
      LET r_success = FALSE
      RETURN r_success,r_cost,r_pmdt212
   END IF
   LET r_cost = l_cost
   LET r_pmdt212 = l_pmdt.pmdt212
   
   RETURN r_success,r_cost,r_pmdt212
END FUNCTION]]>
  </point>
  <point name="function.aint802_gen_detail_pre" order="10" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 準備產生單身所需的SQL
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2015/06/27 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_gen_detail_pre()
DEFINE l_sql             STRING

   CALL aint802_get_cost_pre()
   
   #刪除原本已經產生的資料
   LET l_sql = "DELETE FROM inds_t",
               " WHERE indsent = ",g_enterprise,
               "   AND indsdocno = '",g_indr_m.indrdocno,"'",
               "   AND indsseq = ",g_indt_d[l_ac].indtseq
   PREPARE aint802_gen_detail_del FROM l_sql
   
   #取項序
   LET l_sql = "SELECT COALESCE(MAX(indsseq1),0)+1",
               "  FROM inds_t",
               " WHERE indsent = ",g_enterprise,
               "   AND indsdocno = '",g_indr_m.indrdocno,"'",
               "   AND indsseq = ?"
   PREPARE aint802_get_indsseq1 FROM l_sql
   
   #取最新進價
   LET l_sql = "SELECT rtdx034",
               "  FROM rtdx_t",
               " WHERE rtdxent = ",g_enterprise,
               "   AND rtdxsite = ?",
               "   AND rtdx001 = ?"
   PREPARE aint802_get_rtdx034 FROM l_sql
   
   #調整模式
   IF g_indr_m.indr005 = '4' THEN
      LET l_sql = "SELECT inagsite, inag001, inag002,",
                  "       inag003,  inag004, inag006,",
                  "       inag007,  inag008",
                  "  FROM inag_t,inad_t",
                  " WHERE inagent = inadent",
                  "   AND inagsite = inadsite",
                  "   AND inag001 = inad001",
                  "   AND inag002 = inad002",
                  "   AND inag006 = inad003",
                  "   AND inagent = ",g_enterprise,
                  "   AND inagsite = '",g_indt_d[l_ac].indtsite,"'",
                  "   AND inag001 = '",g_indt_d[l_ac].indt004,"'",
                  "   AND COALESCE(inag002,' ') = COALESCE('",g_indt_d[l_ac].indt005,"',' ')",
                  "   AND COALESCE(inag003,' ') = COALESCE('",g_indt_d[l_ac].indt008,"',' ')",
                  "   AND inag004 = '",g_indt_d[l_ac].indt002,"'",
                  "   AND inag006 = '",g_indt_d[l_ac].indt001,"'",
                  "   AND inad010 = '",g_indr_m.indr006,"'",
                  "   AND inadstus = 'Y'"
   ELSE
      LET l_sql = "SELECT inagsite, inag001, inag002,",
                  "       inag003,  inag004, inag006,",
                  "       inag007,  inag008",
                  "  FROM inag_t,inad_t",
                  " WHERE inagent = inadent",
                  "   AND inagsite = inadsite",
                  "   AND inag001 = inad001",
                  "   AND inag002 = inad002",
                  "   AND inag006 = inad003",
                  "   AND inagent = ",g_enterprise,
                  "   AND inagsite = '",g_indt_d[l_ac].indtsite,"'",
                  "   AND inag001 = '",g_indt_d[l_ac].indt004,"'",
                  "   AND COALESCE(inag002,' ') = COALESCE('",g_indt_d[l_ac].indt005,"',' ')",
                  "   AND COALESCE(inag003,' ') = COALESCE('",g_indt_d[l_ac].indt008,"',' ')",
                  "   AND inag004 = '",g_indt_d[l_ac].indt002,"'",
                  "   AND inad010 = '",g_indr_m.indr006,"'",
                  "   AND inadstus = 'Y'"
   END IF
   #管理品類
   IF NOT cl_null(g_indr_m.indr002) AND g_indr_m.indr002 != 'ALL' THEN
      LET l_sql = l_sql,
                  " AND EXISTS(SELECT 1 FROM imaa_t ",
                  "             WHERE imaaent = inagent",
                  "               AND imaa001 = inag001",
                  "               AND EXISTS (SELECT 1 FROM rtaw_t ",
                  "                            WHERE rtawent = imaaent",
                  "                              AND rtaw002 = imaa009",
                  "                              AND rtaw001 = '",g_indr_m.indr002,"'))"
   END IF
   
   PREPARE aint802_gen_detail_pre FROM l_sql
   DECLARE aint802_gen_detail_cs CURSOR FOR aint802_gen_detail_pre
END FUNCTION]]>
  </point>
  <point name="function.aint802_gen_detail" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 產生批號進價調整明細資料
# Memo...........:
# Usage..........: CALL aint802_gen_detail()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/06/22 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_gen_detail()
DEFINE l_success         LIKE type_t.num5
DEFINE l_sql             STRING

   LET l_success = TRUE
   
   CALL aint802_gen_detail_pre()
   
   CALL s_transaction_begin()
   CALL cl_err_collect_init()
   
   IF NOT aint802_gen_detail_type() THEN
      LET l_success = FALSE
   END IF
   
   IF l_success THEN
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
   CALL cl_err_collect_show()
   
END FUNCTION]]>
  </point>
  <point name="function.aint802_gen_detail_type1" order="12" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 產生單身
#                :   調整模式 = 1.調低不調高
# Memo...........:
# Usage..........: CALL aint802_gen_detail_type1()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/06/22 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_gen_detail_type1()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sql             STRING
DEFINE l_success         LIKE type_t.num5
DEFINE l_cost            LIKE xccc_t.xccc280
DEFINE l_pmdt212         LIKE pmdt_t.pmdt212
DEFINE l_inag            RECORD
       inagsite          LIKE inag_t.inagsite,     #營運據點
       inag001           LIKE inag_t.inag001,      #商品編號
       inag002           LIKE inag_t.inag002,      #產品特徵
       inag003           LIKE inag_t.inag003,      #庫存管理特徵
       inag004           LIKE inag_t.inag004,      #庫位
       inag006           LIKE inag_t.inag006,      #批號
       inag007           LIKE inag_t.inag007,      #庫存單位
       inag008           LIKE inag_t.inag008       #庫存量
                         END RECORD
DEFINE l_inds            RECORD
       indsent           LIKE inds_t.indsent,      #企業編號
       indssite          LIKE inds_t.indssite,     #營運組織
       indsunit          LIKE inds_t.indsunit,     #應用組織
       indsdocno         LIKE inds_t.indsdocno,    #單號
       indsseq           LIKE inds_t.indsseq,      #項次
       indsseq1          LIKE inds_t.indsseq1,     #項序
       inds001           LIKE inds_t.inds001,      #批號
       inds003           LIKE inds_t.inds003,      #庫區編號
       inds004           LIKE inds_t.inds004,      #商品編號
       inds005           LIKE inds_t.inds005,      #商品條碼
       inds006           LIKE inds_t.inds006,      #庫存單位
       inds007           LIKE inds_t.inds007,      #批號現有數量
       inds008           LIKE inds_t.inds008,      #增減數量
       inds009           LIKE inds_t.inds009,      #批號新數量
       inds010           LIKE inds_t.inds010,      #批號進價
       inds011           LIKE inds_t.inds011,      #現有成本金額
       inds012           LIKE inds_t.inds012,      #調整金額
       inds013           LIKE inds_t.inds013,      #新成本金額
       inds014           LIKE inds_t.inds014,      #供應商編號
       inds015           LIKE inds_t.inds015,      #合約編號
       inds020           LIKE inds_t.inds020,      #產品特徵
       inds021           LIKE inds_t.inds021       #庫存管理特徵
                         END RECORD
                         
   LET r_success = TRUE
   LET l_sql = "SELECT inagsite, inag001, inag002,",
               "       inag003,  inag004, inag006,",
               "       inag007,  inag008",
               "  FROM inag_t,inad_t",
               " WHERE inagent = inadent",
               "   AND inagsite = inadsite",
               "   AND inag001 = inad001",
               "   AND inag002 = inad002",
               "   AND inag006 = inad003",
               "   AND inagent = ",g_enterprise,
               "   AND inagsite = '",g_indt_d[l_ac].indtsite,"'",
               "   AND inag001 = '",g_indt_d[l_ac].indt004,"'",
               "   AND COALESCE(inag002,' ') = COALESCE('",g_indt_d[l_ac].indt005,"',' ')",
               "   AND COALESCE(inag003,' ') = COALESCE('",g_indt_d[l_ac].indt008,"',' ')",
               "   AND inag004 = '",g_indt_d[l_ac].indt002,"'",
               "   AND inad010 = '",g_indr_m.indr006,"'",
               "   AND inadstus = 'Y'"
   PREPARE aint802_gen_detail_pre FROM l_sql
   DECLARE aint802_gen_detail_cs CURSOR FOR aint802_gen_detail_pre
   
   FOREACH aint802_gen_detail_cs
      INTO l_inag.inagsite, l_inag.inag001, l_inag.inag002,
           l_inag.inag003,  l_inag.inag004, l_inag.inag006,
           l_inag.inag007,  l_inag.inag008
      #呼叫元件取的商品的成本單價
      LET l_success = ''
      LET l_cost = 0
      
      CALL aint802_get_cost('2', l_inag.inagsite, l_inag.inag006,
                                 l_inag.inag004,  l_inag.inag001,
                                 l_inag.inag002,  l_inag.inag003)
         RETURNING l_success,l_cost,l_pmdt212
      IF l_success = FALSE THEN
         LET r_success = FALSE
         CONTINUE FOREACH
      END IF
      
      #當取出的實時成本 <= 批號新進價
      IF l_cost <= g_indt_d[l_ac].indt007 THEN
         CONTINUE FOREACH
      END IF
      
      LET l_inds.indsent   = g_enterprise               #企業編號
      LET l_inds.indssite  = g_indt_d[l_ac].indtsite    #營運組織
      LET l_inds.indsunit  = g_indt_d[l_ac].indtunit    #應用組織
      LET l_inds.indsdocno = g_indr_m.indrdocno         #單號
      LET l_inds.indsseq   = g_indt_d[l_ac].indtseq     #項次
      #項序
      EXECUTE aint802_get_indsseq1 USING l_inds.indsseq
         INTO l_inds.indsseq1
      LET l_inds.inds001   = l_inag.inag006            #批號
      LET l_inds.inds003   = g_indt_d[l_ac].indt002    #庫區編號
      LET l_inds.inds004   = g_indt_d[l_ac].indt004    #商品編號
      LET l_inds.inds005   = g_indt_d[l_ac].indt003    #商品條碼
      LET l_inds.inds006   = l_inag.inag007            #庫存單位
      LET l_inds.inds007   = l_inag.inag008            #批號現有數量
      LET l_inds.inds008   = 0                         #增減數量
      LET l_inds.inds009   = l_inag.inag008            #批號新數量
      LET l_inds.inds010   = l_cost                    #批號原進價
      LET l_inds.inds011   = g_indt_d[l_ac].indt007    #批號新進價
      LET l_inds.inds014   = g_indr_m.indr006          #供應商編號
      LET l_inds.inds015   = l_pmdt212                 #合約編號
      LET l_inds.inds020   = g_indt_d[l_ac].indt005    #產品特徵
      LET l_inds.inds021   = g_indt_d[l_ac].indt008    #庫存管理特徵
      
      INSERT INTO inds_t(indsent, indssite, indsunit, indsdocno,
                         indsseq, indsseq1, inds001,  inds003,
                         inds004, inds005,  inds006,  inds007,
                         inds008, inds009,  inds010,  inds011,
                         inds012, inds013,  inds014,  inds015,
                         inds020, inds021)
         VALUES(l_inds.indsent, l_inds.indssite, l_inds.indsunit, l_inds.indsdocno,
                l_inds.indsseq, l_inds.indsseq1, l_inds.inds001,  l_inds.inds003,
                l_inds.inds004, l_inds.inds005,  l_inds.inds006,  l_inds.inds007,
                l_inds.inds008, l_inds.inds009,  l_inds.inds010,  l_inds.inds011,
                l_inds.inds012, l_inds.inds013,  l_inds.inds014,  l_inds.inds015,
                l_inds.inds020, l_inds.inds021)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "Ins inds_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END FOREACH
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint802_gen_detail_type" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 產生單身
# Memo...........:
# Usage..........: CALL aint802_gen_detail_type()
#                  RETURNING r_success
# Input parameter: 無
# Return code....: r_success      True/False
# Date & Author..: 2015/06/22 By pomelo
# Modify.........:
################################################################################
PRIVATE FUNCTION aint802_gen_detail_type()
DEFINE r_success         LIKE type_t.num5
DEFINE l_sql             STRING
DEFINE l_success         LIKE type_t.num5
DEFINE l_cost            LIKE xccc_t.xccc280
DEFINE l_pmdt212         LIKE pmdt_t.pmdt212
DEFINE l_inag            RECORD
       inagsite          LIKE inag_t.inagsite,     #營運據點
       inag001           LIKE inag_t.inag001,      #商品編號
       inag002           LIKE inag_t.inag002,      #產品特徵
       inag003           LIKE inag_t.inag003,      #庫存管理特徵
       inag004           LIKE inag_t.inag004,      #庫位
       inag006           LIKE inag_t.inag006,      #批號
       inag007           LIKE inag_t.inag007,      #庫存單位
       inag008           LIKE inag_t.inag008       #庫存量
                         END RECORD
DEFINE l_inds            RECORD
       indsent           LIKE inds_t.indsent,      #企業編號
       indssite          LIKE inds_t.indssite,     #營運組織
       indsunit          LIKE inds_t.indsunit,     #應用組織
       indsdocno         LIKE inds_t.indsdocno,    #單號
       indsseq           LIKE inds_t.indsseq,      #項次
       indsseq1          LIKE inds_t.indsseq1,     #項序
       inds001           LIKE inds_t.inds001,      #批號
       inds003           LIKE inds_t.inds003,      #庫區編號
       inds004           LIKE inds_t.inds004,      #商品編號
       inds005           LIKE inds_t.inds005,      #商品條碼
       inds006           LIKE inds_t.inds006,      #庫存單位
       inds007           LIKE inds_t.inds007,      #批號現有數量
       inds008           LIKE inds_t.inds008,      #增減數量
       inds009           LIKE inds_t.inds009,      #批號新數量
       inds010           LIKE inds_t.inds010,      #批號進價
       inds011           LIKE inds_t.inds011,      #現有成本金額
       inds012           LIKE inds_t.inds012,      #調整金額
       inds013           LIKE inds_t.inds013,      #新成本金額
       inds014           LIKE inds_t.inds014,      #供應商編號
       inds015           LIKE inds_t.inds015,      #合約編號
       inds020           LIKE inds_t.inds020,      #產品特徵
       inds021           LIKE inds_t.inds021       #庫存管理特徵
                         END RECORD
                         
   LET r_success = TRUE
   
   EXECUTE aint802_gen_detail_del
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "Del inds_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   
   FOREACH aint802_gen_detail_cs
      INTO l_inag.inagsite, l_inag.inag001, l_inag.inag002,
           l_inag.inag003,  l_inag.inag004, l_inag.inag006,
           l_inag.inag007,  l_inag.inag008
      #呼叫元件取的商品的成本單價
      LET l_success = ''
      LET l_cost = 0
      
      IF l_inag.inag008 = 0 THEN
         CONTINUE FOREACH
      END IF
      
      CALL aint802_get_cost('2', l_inag.inagsite, l_inag.inag006,
                                 l_inag.inag004,  l_inag.inag001,
                                 l_inag.inag002,  l_inag.inag003)
         RETURNING l_success,l_cost,l_pmdt212
      IF l_success = FALSE THEN
         LET r_success = FALSE
         CONTINUE FOREACH
      END IF
      
      #調整模式
      CASE g_indr_m.indr005
         WHEN '1'     #調低不調高
            #當取出的實時成本 <= 批號新進價
            IF l_cost <= g_indt_d[l_ac].indt007 THEN
               CONTINUE FOREACH
            END IF
            
            LET l_inds.inds010   = l_cost                    #批號原進價
            LET l_inds.inds011   = g_indt_d[l_ac].indt007    #批號新進價
            
         WHEN '2'     #全部調整成新進價
            LET l_inds.inds010   = l_cost                    #批號原進價
            #批號新進價
            EXECUTE aint802_get_rtdx034
              USING l_inag.inagsite,l_inag.inag001
               INTO l_inds.inds011
         
         WHEN '3'     #只調整指定進價
            #當取出來的實時成本 != 批號原進價
            IF l_cost != g_indt_d[l_ac].indt006 THEN
               CONTINUE FOREACH
            END IF
            LET l_inds.inds010   = l_cost                    #批號原進價
            LET l_inds.inds011   = g_indt_d[l_ac].indt007    #批號新進價
         
         WHEN '4'     #只調整指定批號
            LET l_inds.inds010   = l_cost                    #批號原進價
            LET l_inds.inds011   = g_indt_d[l_ac].indt007    #批號新進價
         
      END CASE
      
      LET l_inds.indsent   = g_enterprise               #企業編號
      LET l_inds.indssite  = g_indt_d[l_ac].indtsite    #營運組織
      LET l_inds.indsunit  = g_indt_d[l_ac].indtunit    #應用組織
      LET l_inds.indsdocno = g_indr_m.indrdocno         #單號
      LET l_inds.indsseq   = g_indt_d[l_ac].indtseq     #項次
      #項序
      EXECUTE aint802_get_indsseq1 USING l_inds.indsseq
         INTO l_inds.indsseq1
      LET l_inds.inds001   = l_inag.inag006            #批號
      LET l_inds.inds003   = g_indt_d[l_ac].indt002    #庫區編號
      LET l_inds.inds004   = g_indt_d[l_ac].indt004    #商品編號
      LET l_inds.inds005   = g_indt_d[l_ac].indt003    #商品條碼
      LET l_inds.inds006   = l_inag.inag007            #庫存單位
      LET l_inds.inds007   = l_inag.inag008            #批號現有數量
      LET l_inds.inds008   = 0                         #增減數量
      LET l_inds.inds009   = l_inag.inag008            #批號新數量
      LET l_inds.inds014   = g_indr_m.indr006          #供應商編號
      LET l_inds.inds015   = l_pmdt212                 #合約編號
      LET l_inds.inds020   = g_indt_d[l_ac].indt005    #產品特徵
      LET l_inds.inds021   = g_indt_d[l_ac].indt008    #庫存管理特徵
      
      INSERT INTO inds_t(indsent, indssite, indsunit, indsdocno,
                         indsseq, indsseq1, inds001,  inds003,
                         inds004, inds005,  inds006,  inds007,
                         inds008, inds009,  inds010,  inds011,
                         inds012, inds013,  inds014,  inds015,
                         inds020, inds021)
         VALUES(l_inds.indsent, l_inds.indssite, l_inds.indsunit, l_inds.indsdocno,
                l_inds.indsseq, l_inds.indsseq1, l_inds.inds001,  l_inds.inds003,
                l_inds.inds004, l_inds.inds005,  l_inds.inds006,  l_inds.inds007,
                l_inds.inds008, l_inds.inds009,  l_inds.inds010,  l_inds.inds011,
                l_inds.inds012, l_inds.inds013,  l_inds.inds014,  l_inds.inds015,
                l_inds.inds020, l_inds.inds021)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "Ins inds_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
   END FOREACH
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.aint802_set_comp_no_visible" order="13" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aint802_set_comp_no_visible(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   
   IF p_cmd='a' AND p_cmd='u' THEN
      CALL cl_set_comp_visible("lbl_cnt,l_cnt_err_money", FALSE)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aint802_set_no_comp_visible" order="13" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.aint802_set_comp_visible" order="13" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aint802_set_comp_visible(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   
   CALL cl_set_comp_visible("lbl_cnt,l_cnt_err_money", TRUE)
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #門店編號
         CALL s_desc_get_department_desc(g_indt_d[l_ac].indtsite)
            RETURNING g_indt_d[l_ac].indtsite_desc
         #商品編號
         CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
            RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
         #庫區
         CALL s_desc_get_stock_desc('',g_indt_d[l_ac].indt002)
            RETURNING g_indt_d[l_ac].indt002_desc
         #產品特徵
         CALL s_feature_description(g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005)
            RETURNING l_success,g_indt_d[l_ac].indt005_desc]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #門店編號
         CALL s_desc_get_department_desc(g_indt2_d[l_ac].indssite)
            RETURNING g_indt2_d[l_ac].indssite_desc
         #商品編號
         CALL s_desc_get_item_desc(g_indt2_d[l_ac].inds004)
            RETURNING g_indt2_d[l_ac].inds004_desc,g_indt2_d[l_ac].inds004_desc_desc
         #產品特徵
         CALL s_feature_description(g_indt2_d[l_ac].inds004,g_indt2_d[l_ac].inds020)
            RETURNING l_success,g_indt2_d[l_ac].inds020_desc
         #150709-00011#1 20150709 add by beckxie---S
         #差異金額
         LET g_indt2_d[l_ac].l_mistakemoney=(g_indt2_d[l_ac].inds011-g_indt2_d[l_ac].inds010)*g_indt2_d[l_ac].inds009
         #150709-00011#1 20150709 add by beckxie---E]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_sql_where(g_prog,'indrsite') RETURNING l_where
   LET g_wc = g_wc," AND indr000 = '2' AND ",l_where
   LET l_wc  = g_wc.trim()]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_where           STRING]]>
  </point>
  <point name="browser_fill.other_fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #150709-00011#1 20150709 add by beckxie---S
   LET g_indr_m.l_cnt_err_money=0
   SELECT SUM((COALESCE(inds011,0)-COALESCE(inds010,0))*COALESCE(inds009,0)) INTO g_indr_m.l_cnt_err_money
     FROM indr_t,inds_t
    WHERE indrent=indsent
      AND indrdocno=indsdocno
      AND indrdocno=g_indr_m.indrdocno
   DISPLAY BY NAME g_indr_m.l_cnt_err_money
   #150709-00011#1 20150709 add by beckxie---E]]>
  </point>
  <point name="construct.c.indr002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_3()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO indr002  #顯示到畫面上
            NEXT FIELD indr002                     #返回原欄位]]>
  </point>
  <point name="construct.c.indr006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_pmaa001_27()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO indr006  #顯示到畫面上
            NEXT FIELD indr006                     #返回原欄位]]>
  </point>
  <point name="construct.c.indrcnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrcnfid  #顯示到畫面上
            NEXT FIELD indrcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indrcrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrcrtdp  #顯示到畫面上
            NEXT FIELD indrcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indrcrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrcrtid  #顯示到畫面上
            NEXT FIELD indrcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indrdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2'
            CALL q_indrdocno()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrdocno  #顯示到畫面上
            NEXT FIELD indrdocno                     #返回原欄位]]>
  </point>
  <point name="construct.c.indrmodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrmodid  #顯示到畫面上
            NEXT FIELD indrmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indrowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrowndp  #顯示到畫面上
            NEXT FIELD indrowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indrownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrownid  #顯示到畫面上
            NEXT FIELD indrownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.indrsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'indrsite',g_site,'c')
            CALL q_ooef001_24()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO indrsite  #顯示到畫面上
            NEXT FIELD indrsite                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.indt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inad003_3()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO indt001  #顯示到畫面上
            NEXT FIELD indt001                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.indt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO indt002  #顯示到畫面上
            NEXT FIELD indt002                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.indt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_2()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO indt003  #顯示到畫面上
            NEXT FIELD indt003                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.indt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO indt004  #顯示到畫面上
            NEXT FIELD indt004                     #返回原欄位]]>
  </point>
  <point name="construct.c.page1.indtsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'indtsite',g_site,'c')
            CALL q_ooef001_24()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO indtsite  #顯示到畫面上
            NEXT FIELD indtsite                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.inds003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inay001()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO inds003  #顯示到畫面上
            NEXT FIELD inds003                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.inds004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_5()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO inds004  #顯示到畫面上
            NEXT FIELD inds004                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.inds005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imay003_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inds005  #顯示到畫面上
            NEXT FIELD inds005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inds006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inds006  #顯示到畫面上
            NEXT FIELD inds006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inds014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1'
            CALL q_pmaa001_27()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO inds014  #顯示到畫面上
            NEXT FIELD inds014                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.inds016" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '16'
            CALL q_pmdsdocno_7()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO inds016  #顯示到畫面上
            NEXT FIELD inds016                     #返回原欄位]]>
  </point>
  <point name="construct.c.page2.inds018" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '17'
            CALL q_pmdsdocno_7()                   #呼叫開窗
            DISPLAY g_qryparam.return1 TO inds018  #顯示到畫面上
            NEXT FIELD inds018                     #返回原欄位]]>
  </point>
  <point name="cs.body2.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            DISPLAY '' TO s_detail2[1].indsseq]]>
  </point>
  <point name="delete.before_ask" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT s_aooi200_del_docno(g_indr_m.indrdocno,g_indr_m.indrdocdt) THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF]]>
  </point>
  <point name="delete.body.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_indr_m.indrdocno,g_indr_m.indrdocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="delete_b.a_delete2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL aint802_b_fill()   #150709-00011#1 20150709 add by beckxie]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_site_flag           LIKE type_t.num5        #用來判斷單頭site的輸入狀況，用來欄位開關]]>
  </point>
  <point name="init.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success      LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_indr005','6826') 
   CALL s_aooi500_create_temp() RETURNING l_success
   LET g_errshow = 1]]>
  </point>
  <point name="input.a.indr002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indr_m.indr002) THEN 
               IF g_indr_m.indr002 != 'ALL' THEN
                  IF g_indr_m.indr002 != g_indr_m_t.indr002 OR g_indr_m_t.indr002 IS NULL THEN
                     INITIALIZE g_chkparam.* TO NULL
                     LET g_chkparam.arg1 = g_indr_m.indr002
                     LET g_chkparam.arg2 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')
                     IF NOT cl_chk_exist("v_rtax001_3") THEN
                        LET g_indr_m.indr002 = g_indr_m_t.indr002
                        CALL s_desc_get_rtaxl003_desc(g_indr_m.indr002) RETURNING g_indr_m.indr002_desc
                        DISPLAY BY NAME g_indr_m.indr002_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF 
            CALL s_desc_get_rtaxl003_desc(g_indr_m.indr002) RETURNING g_indr_m.indr002_desc
            DISPLAY BY NAME g_indr_m.indr002_desc]]>
  </point>
  <point name="input.a.indr006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_indr_m.indr006_desc = ''
            DISPLAY BY NAME g_indr_m.indr006_desc

            IF NOT cl_null(g_indr_m.indr006) THEN
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_indr_m.indr006 != g_indr_m_t.indr006 OR g_indr_m_t.indr006 IS NULL )) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_indr_m.indr006
                  IF NOT cl_chk_exist("v_pmaa001_25") THEN
                     LET g_indr_m.indr006 = g_indr_m_o.indr006
                     CALL s_desc_get_trading_partner_abbr_desc(g_indr_m.indr006) RETURNING g_indr_m.indr006_desc
                     DISPLAY BY NAME g_indr_m.indr006_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_trading_partner_abbr_desc(g_indr_m.indr006) RETURNING g_indr_m.indr006_desc
            DISPLAY BY NAME g_indr_m.indr006_desc]]>
  </point>
  <point name="input.a.indrdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_indr_m.indrdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_indr_m.indrdocno != g_indrdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indr_t WHERE "||"indrent = '" ||g_enterprise|| "' AND "||"indrdocno = '"||g_indr_m.indrdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT s_aooi200_chk_slip(g_indr_m.indrsite,'',g_indr_m.indrdocno,g_prog) THEN
                     LET g_indr_m.indrdocno = g_indrdocno_t
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.indrsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_indr_m.indrsite_desc = ' '
            DISPLAY BY NAME g_indr_m.indrsite_desc
            IF cl_null(g_indr_m.indrsite) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = 'sub-00507'
               LET g_errparam.popup  = TRUE
               CALL cl_err()
               LET g_indr_m.indrsite = g_indr_m_t.indrsite
               CALL s_desc_get_department_desc(g_indr_m.indrsite)
                  RETURNING g_indr_m.indrsite_desc
               DISPLAY BY NAME g_indr_m.indrsite_desc
               NEXT FIELD CURRENT
            ELSE
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_indr_m.indrsite != g_indr_m_t.indrsite OR g_indr_m_t.indrsite IS NULL )) THEN
                  CALL s_aooi500_chk(g_prog,'indrsite',g_indr_m.indrsite,g_indr_m.indrsite)
                     RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ''
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()

                     LET g_indr_m.indrsite = g_indr_m_t.indrsite
                     CALL s_desc_get_department_desc(g_indr_m.indrsite)
                        RETURNING g_indr_m.indrsite_desc
                     DISPLAY BY NAME g_indr_m.indrsite_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_site_flag = TRUE
            CALL s_desc_get_department_desc(g_indr_m.indrsite)
               RETURNING g_indr_m.indrsite_desc
            DISPLAY BY NAME g_indr_m.indrsite_desc
            CALL aint802_set_entry(p_cmd)
            CALL aint802_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.a.page1.indt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indt_d[l_ac].indt001) THEN
               IF g_indt_d[l_ac].indt001 != g_indt_d_o.indt001 OR cl_null(g_indt_d_o.indt001) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_indt_d[l_ac].indtsite
                  LET g_chkparam.arg2 = g_indt_d[l_ac].indt001
                  IF NOT cl_chk_exist("v_inad001_2") THEN
                     LET g_indt_d[l_ac].indt001 = g_indt_d_o.indt001
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT aint802_inaj_chk() THEN
                     LET g_indt_d[l_ac].indt001 = g_indt_d_o.indt001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_indt_d_o.indt001 = g_indt_d[l_ac].indt001
            CALL aint802_set_entry_b(l_cmd)
            CALL aint802_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.indt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_indt_d[l_ac].indt002_desc = ' '
            DISPLAY BY NAME g_indt_d[l_ac].indt002_desc
            IF NOT cl_null(g_indt_d[l_ac].indt002) THEN
               IF g_indt_d[l_ac].indt002 != g_indt_d_o.indt002 OR cl_null(g_indt_d_o.indt002) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_indt_d[l_ac].indtsite
                  LET g_chkparam.arg2 = g_indt_d[l_ac].indt002
                  IF NOT cl_chk_exist("v_inaa001_14") THEN
                     LET g_indt_d[l_ac].indt002 = g_indt_d_o.indt002
                     CALL s_desc_get_stock_desc('',g_indt_d[l_ac].indt002)
                        RETURNING g_indt_d[l_ac].indt002_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT aint802_inaj_chk() THEN
                     LET g_indt_d[l_ac].indt002 = g_indt_d_o.indt002
                     CALL s_desc_get_stock_desc('',g_indt_d[l_ac].indt002)
                        RETURNING g_indt_d[l_ac].indt002_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL s_desc_get_stock_desc('',g_indt_d[l_ac].indt002)
               RETURNING g_indt_d[l_ac].indt002_desc
            LET g_indt_d_o.indt002 = g_indt_d[l_ac].indt002]]>
  </point>
  <point name="input.a.page1.indt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indt_d[l_ac].indt003) THEN
               IF g_indt_d[l_ac].indt003 != g_indt_d_o.indt003 OR cl_null(g_indt_d_o.indt003) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_indt_d[l_ac].indt003
                  IF NOT cl_chk_exist("v_imay003_1") THEN
                     LET g_indt_d[l_ac].indt003 = g_indt_d_o.indt003
                     NEXT FIELD CURRENT
                  END IF
                  CALL aint802_indt003_def()
                  IF NOT aint802_indt004_chk() THEN
                     LET g_indt_d[l_ac].indt003 = g_indt_d_o.indt003
                     LET g_indt_d[l_ac].indt004 = g_indt_d_o.indt004
                     CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
                        RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_indt_d_o.indt001 = g_indt_d[l_ac].indt001
            LET g_indt_d_o.indt003 = g_indt_d[l_ac].indt003
            LET g_indt_d_o.indt004 = g_indt_d[l_ac].indt004
            LET g_indt_d_o.indt005 = g_indt_d[l_ac].indt005]]>
  </point>
  <point name="input.a.page1.indt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_indt_d[l_ac].indt004_desc = ' '
            LET g_indt_d[l_ac].indt004_desc_desc = ' '
            DISPLAY BY NAME g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
            IF NOT cl_null(g_indt_d[l_ac].indt004) THEN
               IF g_indt_d[l_ac].indt004 != g_indt_d_o.indt004 OR cl_null(g_indt_d_o.indt004) THEN
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_indt_d[l_ac].indt004
                  IF NOT cl_chk_exist("v_imaa001") THEN
                     LET g_indt_d[l_ac].indt004 = g_indt_d_o.indt004
                     CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
                        RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT aint802_indt004_chk() THEN
                     LET g_indt_d[l_ac].indt004 = g_indt_d_o.indt004
                     CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
                        RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
                     NEXT FIELD CURRENT
                  END IF
                  CALL aint802_indt004_def('1')
               END IF
            END IF
            CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
               RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
            LET g_indt_d_o.indt001 = g_indt_d[l_ac].indt001
            LET g_indt_d_o.indt003 = g_indt_d[l_ac].indt003
            LET g_indt_d_o.indt004 = g_indt_d[l_ac].indt004
            LET g_indt_d_o.indt005 = g_indt_d[l_ac].indt005]]>
  </point>
  <point name="input.a.page1.indt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_indt_d[l_ac].indt005_desc = ''
            DISPLAY BY NAME g_indt_d[l_ac].indt005_desc

            IF NOT cl_null(g_indt_d[l_ac].indt005) THEN
               IF g_indt_d[l_ac].indt005 != g_indt_d_o.indt005 OR cl_null(g_indt_d_o.indt005) THEN
                  IF NOT s_feature_check(g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005) THEN
                     LET g_indt_d[l_ac].indt005 = g_indt_d_o.indt005
                     CALL s_feature_description(g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005)
                        RETURNING l_success,g_indt_d[l_ac].indt005_desc
                     DISPLAY BY NAME g_indt_d[l_ac].indt005_desc
                     NEXT FIELD CURRENT
                  END IF
                  
                  IF NOT aint802_inaj_chk() THEN
                     LET g_indt_d[l_ac].indt005 = g_indt_d_o.indt005
                     CALL s_feature_description(g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005)
                        RETURNING l_success,g_indt_d[l_ac].indt005_desc
                     DISPLAY BY NAME g_indt_d[l_ac].indt005_desc
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            LET g_indt_d_o.indt005 = g_indt_d[l_ac].indt005]]>
  </point>
  <point name="input.a.page1.indt006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indt_d[l_ac].indt006) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.indt007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indt_d[l_ac].indt007) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page1.indt008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indt_d[l_ac].indt008) THEN
               IF g_indt_d[l_ac].indt008 != g_indt_d_o.indt008 OR cl_null(g_indt_d_o.indt008) THEN
                  IF NOT aint802_inaj_chk() THEN
                     LET g_indt_d[l_ac].indt008 = g_indt_d_o.indt008
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.indtseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_indr_m.indrdocno IS NOT NULL AND g_indt_d[g_detail_idx].indtseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indr_m.indrdocno != g_indrdocno_t OR g_indt_d[g_detail_idx].indtseq != g_indt_d_t.indtseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM indt_t WHERE "||"indtent = '" ||g_enterprise|| "' AND "||"indtdocno = '"||g_indr_m.indrdocno ||"' AND "|| "indtseq = '"||g_indt_d[g_detail_idx].indtseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.indtsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_indt_d[l_ac].indtsite) THEN
               IF g_indt_d[l_ac].indtsite != g_indt_d_o.indtsite OR cl_null(g_indt_d_o.indtsite) THEN
                  CALL s_aooi500_chk(g_prog,'indtsite',g_indt_d[l_ac].indtsite,g_indr_m.indrsite)
                     RETURNING l_success,l_errno
                  IF NOT l_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.extend = ''
                     LET g_errparam.code   = l_errno
                     LET g_errparam.popup  = TRUE
                     CALL cl_err()
                     LET g_indt_d[l_ac].indtsite = g_indt_d_o.indtsite
                     CALL s_desc_get_department_desc(g_indt_d[l_ac].indtsite)
                        RETURNING g_indt_d[l_ac].indtsite_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT aint802_inaj_chk() THEN
                     LET g_indt_d[l_ac].indtsite = g_indt_d_o.indtsite
                     CALL s_desc_get_department_desc(g_indt_d[l_ac].indtsite)
                        RETURNING g_indt_d[l_ac].indtsite_desc
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT aint802_indt004_chk() THEN
                     LET g_indt_d[l_ac].indtsite = g_indt_d_o.indtsite
                     CALL s_desc_get_department_desc(g_indt_d[l_ac].indtsite)
                        RETURNING g_indt_d[l_ac].indtsite_desc
                     NEXT FIELD CURRENT
                  END IF
                  LET g_indt_d[l_ac].indt001 = ''
                  LET g_indt_d[l_ac].indt002 = ''
                  LET g_indt_d[l_ac].indt002_desc = ''
               END IF
            END IF
            CALL s_desc_get_department_desc(g_indt_d[l_ac].indtsite)
               RETURNING g_indt_d[l_ac].indtsite_desc
            LET g_indt_d_o.indtsite = g_indt_d[l_ac].indtsite
            LET g_indt_d_o.indt001 = g_indt_d[l_ac].indt001
            LET g_indt_d_o.indt002 = g_indt_d[l_ac].indt002
            CALL aint802_set_entry_b(l_cmd)
            CALL aint802_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page2.indsseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_indr_m.indrdocno IS NOT NULL AND g_indt2_d[g_detail_idx].indsseq IS NOT NULL AND g_indt2_d[g_detail_idx].indsseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indr_m.indrdocno != g_indrdocno_t OR g_indt2_d[g_detail_idx].indsseq != g_indt2_d_t.indsseq OR g_indt2_d[g_detail_idx].indsseq1 != g_indt2_d_t.indsseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inds_t WHERE "||"indsent = '" ||g_enterprise|| "' AND "||"indsdocno = '"||g_indr_m.indrdocno ||"' AND "|| "indsseq = '"||g_indt2_d[g_detail_idx].indsseq ||"' AND "|| "indsseq1 = '"||g_indt2_d[g_detail_idx].indsseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.indsseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_indr_m.indrdocno IS NOT NULL AND g_indt2_d[g_detail_idx].indsseq IS NOT NULL AND g_indt2_d[g_detail_idx].indsseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_indr_m.indrdocno != g_indrdocno_t OR g_indt2_d[g_detail_idx].indsseq != g_indt2_d_t.indsseq OR g_indt2_d[g_detail_idx].indsseq1 != g_indt2_d_t.indsseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inds_t WHERE "||"indsent = '" ||g_enterprise|| "' AND "||"indsdocno = '"||g_indr_m.indrdocno ||"' AND "|| "indsseq = '"||g_indt2_d[g_detail_idx].indsseq ||"' AND "|| "indsseq1 = '"||g_indt2_d[g_detail_idx].indsseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_transaction_end('Y','0')
               CALL aint802_gen_detail()]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_transaction_end('Y','0')
               CALL aint802_gen_detail()]]>
  </point>
  <point name="input.body.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aint802_b_fill()]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_indt_d[l_ac].indtunit = g_indt_d[l_ac].indtsite]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #項次加1
            SELECT MAX(indtseq)+1 INTO g_indt_d[l_ac].indtseq
              FROM indt_t
             WHERE indtent = g_enterprise
               AND indtdocno = g_indr_m.indrdocno
            IF cl_null(g_indt_d[l_ac].indtseq) OR g_indt_d[l_ac].indtseq = 0 THEN
               LET g_indt_d[l_ac].indtseq = 1
            END IF
            
            #門店編號
            CALL s_aooi500_chk(g_prog,'indtsite',g_indr_m.indrsite,g_indr_m.indrsite)
               RETURNING l_success,l_errno
            IF l_success THEN
               LET g_indt_d[l_ac].indtsite = g_indr_m.indrsite
               LET g_indt_d[l_ac].indtsite_desc = g_indr_m.indrsite_desc
            END IF
            ]]>
  </point>
  <point name="input.body.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               DELETE FROM inds_t
                WHERE indsent = g_enterprise
                  AND indsdocno = g_indr_m.indrdocno
                  AND indsseq = g_indt_d_t.indtseq
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "Del inds_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  CLOSE aint802_bcl
                  CANCEL DELETE
               END IF]]>
  </point>
  <point name="input.body2.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #產品特徵
               IF cl_null(g_indt_d[l_ac].indt005) THEN
                  LET g_indt_d[l_ac].indt005 = ' '
               END IF
               
               #庫存管理特徵
               IF cl_null(g_indt_d[l_ac].indt008) THEN
                  LET g_indt_d[l_ac].indt008 = ' '
               END IF
               
               #制定組織
               LET g_indt_d[l_ac].indtunit = g_indt_d[l_ac].indtsite]]>
  </point>
  <point name="input.c.indr002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indr_m.indr002    #給予default值
            LET g_qryparam.arg1 = cl_get_para(g_enterprise,g_site,'E-CIR-0001')
            LET g_qryparam.where = " rtax002 = '2'"
            CALL q_rtax001_3()                            #呼叫開窗
            LET g_indr_m.indr002 = g_qryparam.return1              
            DISPLAY g_indr_m.indr002 TO indr002         
            CALL s_desc_get_rtaxl003_desc(g_indr_m.indr002) RETURNING g_indr_m.indr002_desc
            DISPLAY BY NAME g_indr_m.indr002_desc            
            NEXT FIELD indr002]]>
  </point>
  <point name="input.c.indr006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indr_m.indr006
            
            LET g_qryparam.arg1 = '1'
            CALL q_pmaa001_27()
            LET g_indr_m.indr006 = g_qryparam.return1 
            DISPLAY g_indr_m.indr006 TO indr006
            CALL s_desc_get_trading_partner_abbr_desc(g_indr_m.indr006)
               RETURNING g_indr_m.indr006_desc
            DISPLAY BY NAME g_indr_m.indr006_desc
            NEXT FIELD indr006]]>
  </point>
  <point name="input.c.indrdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indr_m.indrdocno
            
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004
              FROM ooef_t
             WHERE ooefent = g_enterprise
               AND ooef001 = g_indr_m.indrsite
            LET g_qryparam.arg1 = l_ooef004
            LET g_qryparam.arg2 = g_prog
            
            CALL q_ooba002_1()
            LET g_indr_m.indrdocno = g_qryparam.return1 
            DISPLAY g_indr_m.indrdocno TO indrdocno
            NEXT FIELD indrdocno]]>
  </point>
  <point name="input.c.indrsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indr_m.indrsite
            
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'indrsite',g_site,'i')
            CALL q_ooef001_24()
            LET g_indr_m.indrsite = g_qryparam.return1 
            DISPLAY g_indr_m.indrsite TO indrsite
            CALL s_desc_get_department_desc(g_indr_m.indrsite)
               RETURNING g_indr_m.indrsite_desc
            DISPLAY BY NAME g_indr_m.indrsite_desc
            NEXT FIELD indrsite]]>
  </point>
  <point name="input.c.page1.indt001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indt_d[l_ac].indt001
            LET g_qryparam.arg1 = g_indt_d[l_ac].indtsite
            LET g_qryparam.where = aint802_contorlp_where(2)
            CALL q_inad003_3()
            LET g_indt_d[l_ac].indt001 = g_qryparam.return1
            DISPLAY g_indt_d[l_ac].indt001 TO indt001
            NEXT FIELD indt001]]>
  </point>
  <point name="input.c.page1.indt002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indt_d[l_ac].indt002
            LET g_qryparam.arg1 = g_indt_d[l_ac].indtsite
            LET g_qryparam.where = aint802_contorlp_where(3)
            CALL q_inaa001_18()
            LET g_indt_d[l_ac].indt002 = g_qryparam.return1
            DISPLAY g_indt_d[l_ac].indt002 TO indt002
            CALL s_desc_get_stock_desc('',g_indt_d[l_ac].indt002)
               RETURNING g_indt_d[l_ac].indt002_desc
            NEXT FIELD indt002]]>
  </point>
  <point name="input.c.page1.indt003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indt_d[l_ac].indt003 
            LET g_qryparam.where = aint802_contorlp_where(4)
            CALL q_imay003_2()
            LET g_indt_d[l_ac].indt003 = g_qryparam.return1 
            DISPLAY g_indt_d[l_ac].indt003 TO indt003
            NEXT FIELD indt003 ]]>
  </point>
  <point name="input.c.page1.indt004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indt_d[l_ac].indt004
            LET g_qryparam.where = aint802_contorlp_where(5)
            CALL q_imaa001()
            LET g_indt_d[l_ac].indt004 = g_qryparam.return1
            DISPLAY g_indt_d[l_ac].indt004 TO indt004
            CALL s_desc_get_item_desc(g_indt_d[l_ac].indt004)
               RETURNING g_indt_d[l_ac].indt004_desc,g_indt_d[l_ac].indt004_desc_desc
            NEXT FIELD indt004]]>
  </point>
  <point name="input.c.page1.indt005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_feature_single(g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005,g_indt_d[l_ac].indtsite,g_indr_m.indrdocno)
               RETURNING l_success,g_indt_d[l_ac].indt005
            CALL s_feature_description(g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005)
               RETURNING l_success,g_indt_d[l_ac].indt005_desc]]>
  </point>
  <point name="input.c.page1.indtsite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_indt_d[l_ac].indtsite
            
            LET l_where = s_aooi500_q_where(g_prog,'indtsite',g_indr_m.indrsite,'i'),
                          " AND ",aint802_contorlp_where(1)
            LET g_qryparam.where = l_where
            CALL q_ooef001_24()
            LET g_indt_d[l_ac].indtsite = g_qryparam.return1
            DISPLAY g_indt_d[l_ac].indtsite TO indtsite
            CALL s_desc_get_department_desc(g_indt_d[l_ac].indtsite)
               RETURNING g_indt_d[l_ac].indtsite_desc
            NEXT FIELD indtsite]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_where               STRING]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_indr_m.indrsite,g_indr_m.indrdocno,g_indr_m.indrdocdt,g_prog)
                  RETURNING l_success,g_indr_m.indrdocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_indr_m.indrdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD indrdocno
               END IF
               
               LET g_indr_m.indrunit = g_indr_m.indrsite]]>
  </point>
  <point name="input.next_field" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            NEXT FIELD indrsite]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #營運組織
      CALL s_aooi500_default(g_prog,'indrsite',g_indr_m.indrsite) RETURNING l_insert,g_indr_m.indrsite
      IF NOT l_insert THEN
         RETURN
      END IF
      CALL s_desc_get_department_desc(g_indr_m.indrsite) RETURNING g_indr_m.indrsite_desc
      DISPLAY BY NAME g_indr_m.indrsite_desc

      #單據日期
      LET g_indr_m.indrdocdt = g_today

      #單別
      CALL s_arti200_get_def_doc_type(g_indr_m.indrsite,g_prog,'1')
         RETURNING l_success,l_doctype
      LET g_indr_m.indrdocno = l_doctype
      DISPLAY BY NAME g_indr_m.indrdocno
      
      LET g_site_flag = FALSE]]>
  </point>
  <point name="insert.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success      LIKE type_t.num5
   DEFINE l_doctype      LIKE rtai_t.rtai004
   DEFINE l_insert       LIKE type_t.num5]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success           LIKE type_t.num5
   DEFINE l_flag              LIKE type_t.chr1]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi500_drop_temp() RETURNING l_success]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_cost_realtime_is_real(g_site)
        RETURNING l_success,l_flag
   IF NOT l_success THEN
       CALL cl_ap_exitprogram("0")
   END IF
   IF l_flag = 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_site
      LET g_errparam.code   = 'ain-00601'
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      CALL cl_ap_exitprogram("0")
   END IF]]>
  </point>
  <point name="modify.before_show" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_site_flag = TRUE]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="query.other" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_indr_m.indrstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   
   #提交和抽單一開始先無條件關   
   CALL cl_set_act_visible("signing,withdraw",FALSE)
   CASE g_indr_m.indrstus
      WHEN 'N'   #未確認
         CALL cl_set_act_visible("unconfirmed",FALSE)
         #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
         IF cl_bpm_chk() THEN
            CALL cl_set_act_visible("signing",TRUE)
            CALL cl_set_act_visible("confirmed",FALSE)
         END IF
      WHEN 'Y'   #已確認
         CALL cl_set_act_visible("confirmed,invalid",FALSE)

      WHEN 'X'   #作廢
         CALL cl_set_act_visible("confirmed,unconfirmed,invalid",FALSE)

      WHEN 'D'   #抽單  #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
         CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

      WHEN 'R'   #已拒絕  #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
         CALL cl_set_act_visible("confirmed,unconfirmed",FALSE)

      WHEN 'A'   #已核准  #只能顯示確認; 其餘應用功能皆隱藏
         CALL cl_set_act_visible("confirmed ",TRUE)
         CALL cl_set_act_visible("unconfirmed,invalid",FALSE)
      WHEN 'W'   #送簽中  #只能顯示送簽中;其餘應用功能皆隱藏 
         CALL cl_set_act_visible("withdraw",TRUE)
         CALL cl_set_act_visible("unconfirmed,invalid,confirmed",FALSE)
   END CASE]]>
  </point>
  <point name="set_act_no_visible_b.set_act_no_visible_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_act_visible.set_act_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   CALL cl_set_act_visible("signing,withdraw,confirmed,unconfirmed,invalid",TRUE)]]>
  </point>
  <point name="set_act_visible_b.set_act_visible_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("indrsite",TRUE)    #營運組織
   CALL cl_set_comp_entry("indr002",TRUE)     #管理品類
   CALL cl_set_comp_entry("indr005",TRUE)     #調整模式
   CALL cl_set_comp_entry("indr006",TRUE)     #供應商]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("indtsite",TRUE)  #門店編號
   CALL cl_set_comp_entry("indt001",TRUE)   #批號
   CALL cl_set_comp_entry("indt002",TRUE)   #庫區編號
   CALL cl_set_comp_entry("indt003",TRUE)   #商品條碼
   CALL cl_set_comp_entry("indt004",TRUE)   #商品編號
   CALL cl_set_comp_entry("indt005",TRUE)   #產品特徵
   CALL cl_set_comp_entry("indt006",TRUE)   #批號原進價
   CALL cl_set_comp_entry("indt007",TRUE)   #批號新進價
   CALL cl_set_comp_entry("indt008",TRUE)   #庫存管理特徵]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #營運組織
   IF NOT s_aooi500_comp_entry(g_prog,'indrsite') OR g_site_flag THEN
      CALL cl_set_comp_entry("indrsite",FALSE)
   END IF
   
   #單身有資料
   LET l_cnt = 0
   SELECT COUNT(indtseq) INTO l_cnt
     FROM indt_t
    WHERE indtent = g_enterprise
      AND indtdocno = g_indr_m.indrdocno
   IF l_cnt >= 1 THEN
      CALL cl_set_comp_entry("indr002",FALSE)     #管理品類
      CALL cl_set_comp_entry("indr005",FALSE)     #調整模式
      CALL cl_set_comp_entry("indr006",FALSE)     #供應商
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_cnt   LIKE type_t.num5]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_imaa005      LIKE imaa_t.imaa005
   DEFINE l_cnt          LIKE type_t.num5]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #調整模式
   CASE g_indr_m.indr005
      WHEN '1'
         CALL cl_set_comp_entry("indt001",FALSE)      #批號
         CALL cl_set_comp_entry("indt006",FALSE)      #批號原進價
         
      WHEN '2'
         CALL cl_set_comp_entry("indt001",FALSE)      #批號
         CALL cl_set_comp_entry("indt006",FALSE)      #批號原進價
         CALL cl_set_comp_entry("indt007",FALSE)      #批號新進價
      
      WHEN '3'
         CALL cl_set_comp_entry("indt001",FALSE)      #批號
      
      WHEN '4'
         #當輸入批號對應到庫存明細檔不是只有一筆的時候
         #開放欄位給使用者輸入
         LET l_cnt = 0
         SELECT COUNT(inagsite) INTO l_cnt
           FROM inad_t,inag_t
          WHERE inadent = inagent
            AND inadsite = inagsite
            AND inad001 = inag001       #商品編號
            AND inad002 = inag002       #產品特徵
            AND inad003 = inag006       #批號
            AND inagent = g_enterprise
            AND inagsite = g_indt_d[l_ac].indtsite
            AND inag006 = g_indt_d[l_ac].indt001
         IF l_cnt = 1 OR cl_null(g_indt_d[l_ac].indt001) THEN
            CALL cl_set_comp_entry("indt002",FALSE)   #庫區編號
            CALL cl_set_comp_entry("indt003",FALSE)   #商品條碼
            CALL cl_set_comp_entry("indt004",FALSE)   #商品編號
            CALL cl_set_comp_entry("indt005",FALSE)   #產品特徵
            CALL cl_set_comp_entry("indt008",FALSE)   #庫存管理特徵
         END IF
         CALL cl_set_comp_entry("indt006",FALSE)      #批號原進價
   END CASE
   
   #門店編號
   IF NOT s_aooi500_comp_entry(g_prog,'indtsite') THEN
      CALL cl_set_comp_entry("indtsite",FALSE)
   END IF
   
   #商品不使用產品特徵時，產品特徵欄位不可錄入
   LET l_imaa005 = ''
   SELECT imaa005 INTO l_imaa005
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_indt_d[l_ac].indt004
   IF cl_null(l_imaa005) THEN
      CALL cl_set_comp_entry("indt005",FALSE)
      LET g_indt_d[l_ac].indt005 = ' '
   ELSE
      IF cl_null(g_indt_d[l_ac].indt005) THEN
         LET g_indt_d[l_ac].indt005 = ''
      END IF
   END IF
   ]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_err_collect_init()
   IF lc_state = 'Y' THEN
      CALL s_aint802_conf_chk(g_indr_m.indrdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_aint802_conf_upd(g_indr_m.indrdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL cl_err_collect_show()
               CALL s_transaction_end('Y','0')
               CALL aint802_b_fill()
            END IF
         END IF
      END IF
   END IF


   IF lc_state = 'X' THEN
      CALL s_aint802_invalid_chk(g_indr_m.indrdocno) RETURNING l_success
      IF NOT l_success THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00109') THEN
            CALL cl_err_collect_show()
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_aint802_invalid_upd(g_indr_m.indrdocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
               CALL cl_err_collect_show()
            END IF
         END IF
      END IF
   END IF]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_indr_m.indrstus != 'N' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL aint802_set_act_visible()
      CALL aint802_set_act_no_visible()]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success     LIKE type_t.num5]]>
  </point>
  <section id="aint802.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aint802_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint802.b_fill" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint802_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_indt_d.clear()    #g_indt_d 單頭及單身 
   CALL g_indt2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint802_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE indtseq,indtsite,indt001,indt003,indt004,indt005,indt002,indt008, 
             indt006,indt007,indtunit  FROM indt_t",   
                     " INNER JOIN indr_t ON indrdocno = indtdocno ",
 
                     #"",
                     
                     "",
                     
                     " WHERE indtent=? AND indtdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY indt_t.indtseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint802_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aint802_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_indr_m.indrdocno
                                               
      FOREACH b_fill_cs INTO g_indt_d[l_ac].indtseq,g_indt_d[l_ac].indtsite,g_indt_d[l_ac].indt001,g_indt_d[l_ac].indt003, 
          g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005,g_indt_d[l_ac].indt002,g_indt_d[l_ac].indt008, 
          g_indt_d[l_ac].indt006,g_indt_d[l_ac].indt007,g_indt_d[l_ac].indtunit
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF aint802_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE indsseq,indsseq1,indssite,inds001,inds005,inds004,inds020,inds006, 
             inds003,inds021,inds009,inds010,inds011,inds014,inds015,inds016,inds017,inds018,inds019, 
             indsunit ,t1.imaal003 ,t2.oocal003 ,t3.inayl003 ,t4.pmaal004 FROM inds_t",   
                     " INNER JOIN indr_t ON indrdocno = indsdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=inds004 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t2 ON t2.oocalent='"||g_enterprise||"' AND t2.oocal001=inds006 AND t2.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t3 ON t3.inaylent='"||g_enterprise||"' AND t3.inayl001=inds003 AND t3.inayl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=inds014 AND t4.pmaal002='"||g_dlang||"' ",
 
                     " WHERE indsent=? AND indsdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY inds_t.indsseq,inds_t.indsseq1"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint802_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR aint802_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_indr_m.indrdocno
                                               
      FOREACH b_fill_cs2 INTO g_indt2_d[l_ac].indsseq,g_indt2_d[l_ac].indsseq1,g_indt2_d[l_ac].indssite, 
          g_indt2_d[l_ac].inds001,g_indt2_d[l_ac].inds005,g_indt2_d[l_ac].inds004,g_indt2_d[l_ac].inds020, 
          g_indt2_d[l_ac].inds006,g_indt2_d[l_ac].inds003,g_indt2_d[l_ac].inds021,g_indt2_d[l_ac].inds009, 
          g_indt2_d[l_ac].inds010,g_indt2_d[l_ac].inds011,g_indt2_d[l_ac].inds014,g_indt2_d[l_ac].inds015, 
          g_indt2_d[l_ac].inds016,g_indt2_d[l_ac].inds017,g_indt2_d[l_ac].inds018,g_indt2_d[l_ac].inds019, 
          g_indt2_d[l_ac].indsunit,g_indt2_d[l_ac].inds004_desc,g_indt2_d[l_ac].inds006_desc,g_indt2_d[l_ac].inds003_desc, 
          g_indt2_d[l_ac].inds014_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_indt_d.deleteElement(g_indt_d.getLength())
   CALL g_indt2_d.deleteElement(g_indt2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint802_pb
   FREE aint802_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_indt_d.getLength()
      LET g_indt_d_mask_o[l_ac].* =  g_indt_d[l_ac].*
      CALL aint802_indt_t_mask()
      LET g_indt_d_mask_n[l_ac].* =  g_indt_d[l_ac].*
   END FOR
   
   LET g_indt2_d_mask_o.* =  g_indt2_d.*
   FOR l_ac = 1 TO g_indt2_d.getLength()
      LET g_indt2_d_mask_o[l_ac].* =  g_indt2_d[l_ac].*
      CALL aint802_inds_t_mask()
      LET g_indt2_d_mask_n[l_ac].* =  g_indt2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aint802.b_fill2" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aint802_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint802_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aint802.browser_fill" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint802_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE indrdocno ",
                      " FROM indr_t ",
                      " ",
                      " LEFT JOIN indt_t ON indtent = indrent AND indrdocno = indtdocno ", "  ",
                      #add-point:browser_fill段sql(indt_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN inds_t ON indsent = indrent AND indrdocno = indsdocno", "  ",
                      #add-point:browser_fill段sql(inds_t1)
                      {<point name="browser_fill.cnt.join.inds_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE indrent = '" ||g_enterprise|| "' AND indtent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("indr_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE indrdocno ",
                      " FROM indr_t ", 
                      "  ",
                      "  ",
                      " WHERE indrent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("indr_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_indr_m.* TO NULL
      CALL g_indt_d.clear()        
      CALL g_indt2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.indrsite,t0.indrdocdt,t0.indrdocno,t0.indr006,t0.indr005,t0.indr004 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.indrstus,t0.indrsite,t0.indrdocdt,t0.indrdocno,t0.indr006,t0.indr005, 
       t0.indr004,t1.ooefl003 ,t2.pmaal004 ",
               " FROM indr_t t0",
               "  ",
               "  LEFT JOIN indt_t ON indtent = indrent AND indrdocno = indtdocno ", "  ", 
               #add-point:browser_fill段sql(indt_t1)
               {<point name="browser_fill.join.indt_t1"/>}
               #end add-point
               "  LEFT JOIN inds_t ON indsent = indrent AND indrdocno = indsdocno", "  ", 
               #add-point:browser_fill段sql(inds_t1)
               {<point name="browser_fill.join.inds_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.indrsite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=t0.indr006 AND t2.pmaal002='"||g_lang||"' ",
 
               " WHERE t0.indrent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("indr_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY indrdocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"indr_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_indrsite,g_browser[g_cnt].b_indrdocdt, 
       g_browser[g_cnt].b_indrdocno,g_browser[g_cnt].b_indr006,g_browser[g_cnt].b_indr005,g_browser[g_cnt].b_indr004, 
       g_browser[g_cnt].b_indrsite_desc,g_browser[g_cnt].b_indr006_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aint802_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_indrdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aint802.construct" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint802_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_indr_m.* TO NULL
   CALL g_indt_d.clear()        
   CALL g_indt2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON indr000,indrsite,indrdocdt,indrdocno,indr006,indr002,indr005,indr004, 
          indrunit,indr003,indrstus,indrownid,indrowndp,indrcrtid,indrcrtdp,indrcrtdt,indrmodid,indrmoddt, 
          indrcnfid,indrcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<indrcrtdt>>----
         AFTER FIELD indrcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<indrmoddt>>----
         AFTER FIELD indrmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indrcnfdt>>----
         AFTER FIELD indrcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indrpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr000
            #add-point:BEFORE FIELD indr000
            {<point name="construct.b.indr000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr000
            
            #add-point:AFTER FIELD indr000
            {<point name="construct.a.indr000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indr000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr000
            #add-point:ON ACTION controlp INFIELD indr000
            {<point name="construct.c.indr000" />}
            #END add-point
 
         #Ctrlp:construct.c.indrsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrsite
            #add-point:ON ACTION controlp INFIELD indrsite
            {<point name="construct.c.indrsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrsite
            #add-point:BEFORE FIELD indrsite
            {<point name="construct.b.indrsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrsite
            
            #add-point:AFTER FIELD indrsite
            {<point name="construct.a.indrsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrdocdt
            #add-point:BEFORE FIELD indrdocdt
            {<point name="construct.b.indrdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrdocdt
            
            #add-point:AFTER FIELD indrdocdt
            {<point name="construct.a.indrdocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indrdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrdocdt
            #add-point:ON ACTION controlp INFIELD indrdocdt
            {<point name="construct.c.indrdocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indrdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrdocno
            #add-point:ON ACTION controlp INFIELD indrdocno
            {<point name="construct.c.indrdocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrdocno
            #add-point:BEFORE FIELD indrdocno
            {<point name="construct.b.indrdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrdocno
            
            #add-point:AFTER FIELD indrdocno
            {<point name="construct.a.indrdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indr006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr006
            #add-point:ON ACTION controlp INFIELD indr006
            {<point name="construct.c.indr006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr006
            #add-point:BEFORE FIELD indr006
            {<point name="construct.b.indr006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr006
            
            #add-point:AFTER FIELD indr006
            {<point name="construct.a.indr006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indr002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr002
            #add-point:ON ACTION controlp INFIELD indr002
            {<point name="construct.c.indr002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr002
            #add-point:BEFORE FIELD indr002
            {<point name="construct.b.indr002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr002
            
            #add-point:AFTER FIELD indr002
            {<point name="construct.a.indr002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr005
            #add-point:BEFORE FIELD indr005
            {<point name="construct.b.indr005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr005
            
            #add-point:AFTER FIELD indr005
            {<point name="construct.a.indr005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indr005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr005
            #add-point:ON ACTION controlp INFIELD indr005
            {<point name="construct.c.indr005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr004
            #add-point:BEFORE FIELD indr004
            {<point name="construct.b.indr004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr004
            
            #add-point:AFTER FIELD indr004
            {<point name="construct.a.indr004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indr004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr004
            #add-point:ON ACTION controlp INFIELD indr004
            {<point name="construct.c.indr004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrunit
            #add-point:BEFORE FIELD indrunit
            {<point name="construct.b.indrunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrunit
            
            #add-point:AFTER FIELD indrunit
            {<point name="construct.a.indrunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indrunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrunit
            #add-point:ON ACTION controlp INFIELD indrunit
            {<point name="construct.c.indrunit" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr003
            #add-point:BEFORE FIELD indr003
            {<point name="construct.b.indr003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr003
            
            #add-point:AFTER FIELD indr003
            {<point name="construct.a.indr003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indr003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr003
            #add-point:ON ACTION controlp INFIELD indr003
            {<point name="construct.c.indr003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrstus
            #add-point:BEFORE FIELD indrstus
            {<point name="construct.b.indrstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrstus
            
            #add-point:AFTER FIELD indrstus
            {<point name="construct.a.indrstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indrstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrstus
            #add-point:ON ACTION controlp INFIELD indrstus
            {<point name="construct.c.indrstus" />}
            #END add-point
 
         #Ctrlp:construct.c.indrownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrownid
            #add-point:ON ACTION controlp INFIELD indrownid
            {<point name="construct.c.indrownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrownid
            #add-point:BEFORE FIELD indrownid
            {<point name="construct.b.indrownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrownid
            
            #add-point:AFTER FIELD indrownid
            {<point name="construct.a.indrownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indrowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrowndp
            #add-point:ON ACTION controlp INFIELD indrowndp
            {<point name="construct.c.indrowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrowndp
            #add-point:BEFORE FIELD indrowndp
            {<point name="construct.b.indrowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrowndp
            
            #add-point:AFTER FIELD indrowndp
            {<point name="construct.a.indrowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indrcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrcrtid
            #add-point:ON ACTION controlp INFIELD indrcrtid
            {<point name="construct.c.indrcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrcrtid
            #add-point:BEFORE FIELD indrcrtid
            {<point name="construct.b.indrcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrcrtid
            
            #add-point:AFTER FIELD indrcrtid
            {<point name="construct.a.indrcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.indrcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrcrtdp
            #add-point:ON ACTION controlp INFIELD indrcrtdp
            {<point name="construct.c.indrcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrcrtdp
            #add-point:BEFORE FIELD indrcrtdp
            {<point name="construct.b.indrcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrcrtdp
            
            #add-point:AFTER FIELD indrcrtdp
            {<point name="construct.a.indrcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrcrtdt
            #add-point:BEFORE FIELD indrcrtdt
            {<point name="construct.b.indrcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.indrmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrmodid
            #add-point:ON ACTION controlp INFIELD indrmodid
            {<point name="construct.c.indrmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrmodid
            #add-point:BEFORE FIELD indrmodid
            {<point name="construct.b.indrmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrmodid
            
            #add-point:AFTER FIELD indrmodid
            {<point name="construct.a.indrmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrmoddt
            #add-point:BEFORE FIELD indrmoddt
            {<point name="construct.b.indrmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.indrcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrcnfid
            #add-point:ON ACTION controlp INFIELD indrcnfid
            {<point name="construct.c.indrcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrcnfid
            #add-point:BEFORE FIELD indrcnfid
            {<point name="construct.b.indrcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrcnfid
            
            #add-point:AFTER FIELD indrcnfid
            {<point name="construct.a.indrcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrcnfdt
            #add-point:BEFORE FIELD indrcnfdt
            {<point name="construct.b.indrcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON indtseq,indtsite,indt001,indt003,indt004,indt005,indt002,indt008,indt006, 
          indt007,indtunit
           FROM s_detail1[1].indtseq,s_detail1[1].indtsite,s_detail1[1].indt001,s_detail1[1].indt003, 
               s_detail1[1].indt004,s_detail1[1].indt005,s_detail1[1].indt002,s_detail1[1].indt008,s_detail1[1].indt006, 
               s_detail1[1].indt007,s_detail1[1].indtunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indtseq
            #add-point:BEFORE FIELD indtseq
            {<point name="construct.b.page1.indtseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indtseq
            
            #add-point:AFTER FIELD indtseq
            {<point name="construct.a.page1.indtseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indtseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indtseq
            #add-point:ON ACTION controlp INFIELD indtseq
            {<point name="construct.c.page1.indtseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indtsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indtsite
            #add-point:ON ACTION controlp INFIELD indtsite
            {<point name="construct.c.page1.indtsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indtsite
            #add-point:BEFORE FIELD indtsite
            {<point name="construct.b.page1.indtsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indtsite
            
            #add-point:AFTER FIELD indtsite
            {<point name="construct.a.page1.indtsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indt001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt001
            #add-point:ON ACTION controlp INFIELD indt001
            {<point name="construct.c.page1.indt001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt001
            #add-point:BEFORE FIELD indt001
            {<point name="construct.b.page1.indt001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt001
            
            #add-point:AFTER FIELD indt001
            {<point name="construct.a.page1.indt001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indt003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt003
            #add-point:ON ACTION controlp INFIELD indt003
            {<point name="construct.c.page1.indt003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt003
            #add-point:BEFORE FIELD indt003
            {<point name="construct.b.page1.indt003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt003
            
            #add-point:AFTER FIELD indt003
            {<point name="construct.a.page1.indt003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indt004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt004
            #add-point:ON ACTION controlp INFIELD indt004
            {<point name="construct.c.page1.indt004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt004
            #add-point:BEFORE FIELD indt004
            {<point name="construct.b.page1.indt004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt004
            
            #add-point:AFTER FIELD indt004
            {<point name="construct.a.page1.indt004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt005
            #add-point:BEFORE FIELD indt005
            {<point name="construct.b.page1.indt005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt005
            
            #add-point:AFTER FIELD indt005
            {<point name="construct.a.page1.indt005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indt005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt005
            #add-point:ON ACTION controlp INFIELD indt005
            {<point name="construct.c.page1.indt005" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.indt002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt002
            #add-point:ON ACTION controlp INFIELD indt002
            {<point name="construct.c.page1.indt002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt002
            #add-point:BEFORE FIELD indt002
            {<point name="construct.b.page1.indt002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt002
            
            #add-point:AFTER FIELD indt002
            {<point name="construct.a.page1.indt002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt008
            #add-point:BEFORE FIELD indt008
            {<point name="construct.b.page1.indt008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt008
            
            #add-point:AFTER FIELD indt008
            {<point name="construct.a.page1.indt008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indt008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt008
            #add-point:ON ACTION controlp INFIELD indt008
            {<point name="construct.c.page1.indt008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt006
            #add-point:BEFORE FIELD indt006
            {<point name="construct.b.page1.indt006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt006
            
            #add-point:AFTER FIELD indt006
            {<point name="construct.a.page1.indt006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indt006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt006
            #add-point:ON ACTION controlp INFIELD indt006
            {<point name="construct.c.page1.indt006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt007
            #add-point:BEFORE FIELD indt007
            {<point name="construct.b.page1.indt007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt007
            
            #add-point:AFTER FIELD indt007
            {<point name="construct.a.page1.indt007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indt007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt007
            #add-point:ON ACTION controlp INFIELD indt007
            {<point name="construct.c.page1.indt007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indtunit
            #add-point:BEFORE FIELD indtunit
            {<point name="construct.b.page1.indtunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indtunit
            
            #add-point:AFTER FIELD indtunit
            {<point name="construct.a.page1.indtunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.indtunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indtunit
            #add-point:ON ACTION controlp INFIELD indtunit
            {<point name="construct.c.page1.indtunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON indsseq,indsseq1,indssite,inds001,inds005,inds004,inds020,inds006,inds003, 
          inds021,inds009,inds010,inds011,inds014,inds015,inds016,inds017,inds018,inds019,indsunit
           FROM s_detail2[1].indsseq,s_detail2[1].indsseq1,s_detail2[1].indssite,s_detail2[1].inds001, 
               s_detail2[1].inds005,s_detail2[1].inds004,s_detail2[1].inds020,s_detail2[1].inds006,s_detail2[1].inds003, 
               s_detail2[1].inds021,s_detail2[1].inds009,s_detail2[1].inds010,s_detail2[1].inds011,s_detail2[1].inds014, 
               s_detail2[1].inds015,s_detail2[1].inds016,s_detail2[1].inds017,s_detail2[1].inds018,s_detail2[1].inds019, 
               s_detail2[1].indsunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indsseq
            #add-point:BEFORE FIELD indsseq
            {<point name="construct.b.page2.indsseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indsseq
            
            #add-point:AFTER FIELD indsseq
            {<point name="construct.a.page2.indsseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.indsseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indsseq
            #add-point:ON ACTION controlp INFIELD indsseq
            {<point name="construct.c.page2.indsseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indsseq1
            #add-point:BEFORE FIELD indsseq1
            {<point name="construct.b.page2.indsseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indsseq1
            
            #add-point:AFTER FIELD indsseq1
            {<point name="construct.a.page2.indsseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.indsseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indsseq1
            #add-point:ON ACTION controlp INFIELD indsseq1
            {<point name="construct.c.page2.indsseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indssite
            #add-point:BEFORE FIELD indssite
            {<point name="construct.b.page2.indssite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indssite
            
            #add-point:AFTER FIELD indssite
            {<point name="construct.a.page2.indssite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.indssite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indssite
            #add-point:ON ACTION controlp INFIELD indssite
            {<point name="construct.c.page2.indssite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds001
            #add-point:BEFORE FIELD inds001
            {<point name="construct.b.page2.inds001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds001
            
            #add-point:AFTER FIELD inds001
            {<point name="construct.a.page2.inds001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds001
            #add-point:ON ACTION controlp INFIELD inds001
            {<point name="construct.c.page2.inds001" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inds005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds005
            #add-point:ON ACTION controlp INFIELD inds005
            {<point name="construct.c.page2.inds005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds005
            #add-point:BEFORE FIELD inds005
            {<point name="construct.b.page2.inds005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds005
            
            #add-point:AFTER FIELD inds005
            {<point name="construct.a.page2.inds005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds004
            #add-point:ON ACTION controlp INFIELD inds004
            {<point name="construct.c.page2.inds004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds004
            #add-point:BEFORE FIELD inds004
            {<point name="construct.b.page2.inds004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds004
            
            #add-point:AFTER FIELD inds004
            {<point name="construct.a.page2.inds004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds020
            #add-point:BEFORE FIELD inds020
            {<point name="construct.b.page2.inds020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds020
            
            #add-point:AFTER FIELD inds020
            {<point name="construct.a.page2.inds020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds020
            #add-point:ON ACTION controlp INFIELD inds020
            {<point name="construct.c.page2.inds020" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inds006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds006
            #add-point:ON ACTION controlp INFIELD inds006
            {<point name="construct.c.page2.inds006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds006
            #add-point:BEFORE FIELD inds006
            {<point name="construct.b.page2.inds006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds006
            
            #add-point:AFTER FIELD inds006
            {<point name="construct.a.page2.inds006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds003
            #add-point:ON ACTION controlp INFIELD inds003
            {<point name="construct.c.page2.inds003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds003
            #add-point:BEFORE FIELD inds003
            {<point name="construct.b.page2.inds003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds003
            
            #add-point:AFTER FIELD inds003
            {<point name="construct.a.page2.inds003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds021
            #add-point:BEFORE FIELD inds021
            {<point name="construct.b.page2.inds021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds021
            
            #add-point:AFTER FIELD inds021
            {<point name="construct.a.page2.inds021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds021
            #add-point:ON ACTION controlp INFIELD inds021
            {<point name="construct.c.page2.inds021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds009
            #add-point:BEFORE FIELD inds009
            {<point name="construct.b.page2.inds009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds009
            
            #add-point:AFTER FIELD inds009
            {<point name="construct.a.page2.inds009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds009
            #add-point:ON ACTION controlp INFIELD inds009
            {<point name="construct.c.page2.inds009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds010
            #add-point:BEFORE FIELD inds010
            {<point name="construct.b.page2.inds010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds010
            
            #add-point:AFTER FIELD inds010
            {<point name="construct.a.page2.inds010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds010
            #add-point:ON ACTION controlp INFIELD inds010
            {<point name="construct.c.page2.inds010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds011
            #add-point:BEFORE FIELD inds011
            {<point name="construct.b.page2.inds011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds011
            
            #add-point:AFTER FIELD inds011
            {<point name="construct.a.page2.inds011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds011
            #add-point:ON ACTION controlp INFIELD inds011
            {<point name="construct.c.page2.inds011" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inds014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds014
            #add-point:ON ACTION controlp INFIELD inds014
            {<point name="construct.c.page2.inds014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds014
            #add-point:BEFORE FIELD inds014
            {<point name="construct.b.page2.inds014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds014
            
            #add-point:AFTER FIELD inds014
            {<point name="construct.a.page2.inds014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds015
            #add-point:BEFORE FIELD inds015
            {<point name="construct.b.page2.inds015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds015
            
            #add-point:AFTER FIELD inds015
            {<point name="construct.a.page2.inds015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds015
            #add-point:ON ACTION controlp INFIELD inds015
            {<point name="construct.c.page2.inds015" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inds016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds016
            #add-point:ON ACTION controlp INFIELD inds016
            {<point name="construct.c.page2.inds016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds016
            #add-point:BEFORE FIELD inds016
            {<point name="construct.b.page2.inds016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds016
            
            #add-point:AFTER FIELD inds016
            {<point name="construct.a.page2.inds016" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds017
            #add-point:BEFORE FIELD inds017
            {<point name="construct.b.page2.inds017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds017
            
            #add-point:AFTER FIELD inds017
            {<point name="construct.a.page2.inds017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds017
            #add-point:ON ACTION controlp INFIELD inds017
            {<point name="construct.c.page2.inds017" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inds018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds018
            #add-point:ON ACTION controlp INFIELD inds018
            {<point name="construct.c.page2.inds018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds018
            #add-point:BEFORE FIELD inds018
            {<point name="construct.b.page2.inds018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds018
            
            #add-point:AFTER FIELD inds018
            {<point name="construct.a.page2.inds018" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD inds019
            #add-point:BEFORE FIELD inds019
            {<point name="construct.b.page2.inds019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD inds019
            
            #add-point:AFTER FIELD inds019
            {<point name="construct.a.page2.inds019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inds019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD inds019
            #add-point:ON ACTION controlp INFIELD inds019
            {<point name="construct.c.page2.inds019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indsunit
            #add-point:BEFORE FIELD indsunit
            {<point name="construct.b.page2.indsunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indsunit
            
            #add-point:AFTER FIELD indsunit
            {<point name="construct.a.page2.indsunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.indsunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indsunit
            #add-point:ON ACTION controlp INFIELD indsunit
            {<point name="construct.c.page2.indsunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "indr_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "indt_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "inds_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint802.default_search" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint802_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " indrdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "indr_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "indt_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "inds_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aint802.delete" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint802_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_indr_m.indrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aint802_cl USING g_enterprise,g_indr_m.indrdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint802_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint802_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint802_master_referesh USING g_indr_m.indrdocno INTO g_indr_m.indr000,g_indr_m.indrsite, 
       g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
       g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt,g_indr_m.indrcnfid, 
       g_indr_m.indrcnfdt,g_indr_m.indrsite_desc,g_indr_m.indr006_desc,g_indr_m.indr002_desc,g_indr_m.indrownid_desc, 
       g_indr_m.indrowndp_desc,g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp_desc,g_indr_m.indrmodid_desc, 
       g_indr_m.indrcnfid_desc
   
   #檢查是否允許此動作
   IF NOT aint802_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indr_m_mask_o.* =  g_indr_m.*
   CALL aint802_indr_t_mask()
   LET g_indr_m_mask_n.* =  g_indr_m.*
   
   CALL aint802_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aint802_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_indrdocno_t = g_indr_m.indrdocno
 
 
      DELETE FROM indr_t
       WHERE indrent = g_enterprise AND indrdocno = g_indr_m.indrdocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_indr_m.indrdocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM indt_t
       WHERE indtent = g_enterprise AND indtdocno = g_indr_m.indrdocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indt_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM inds_t
       WHERE indsent = g_enterprise AND
             indsdocno = g_indr_m.indrdocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inds_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aint802_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_indt_d.clear() 
      CALL g_indt2_d.clear()       
 
     
      CALL aint802_ui_browser_refresh()  
      #CALL aint802_ui_headershow()  
      #CALL aint802_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aint802_browser_fill("")
         CALL aint802_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE aint802_cl
 
   #功能已完成,通報訊息中心
   CALL aint802_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="aint802.delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint802_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM indt_t
       WHERE indtent = g_enterprise AND
         indtdocno = ps_keys_bak[1] AND indtseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indt_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM inds_t
       WHERE indsent = g_enterprise AND
             indsdocno = ps_keys_bak[1] AND indsseq = ps_keys_bak[2] AND indsseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inds_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_indt2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint802.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000006
#+ 
#+ Filename...: aint802
#+ Description: 批號進價調整維護作業
#+ Creator....: 04226(2015-06-16 14:01:14)
#+ Modifier...: 04226(2015-06-22 10:26:56) -SD/PR-
]]>
  </section>
  <section id="aint802.detail_reproduce" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aint802_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE indt_t.*
   DEFINE l_detail2    RECORD LIKE inds_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint802_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aint802_detail AS ",
                "SELECT * FROM indt_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint802_detail SELECT * FROM indt_t 
                                         WHERE indtent = g_enterprise AND indtdocno = g_indrdocno_t
 
   
   #將key修正為調整後   
   UPDATE aint802_detail 
      #更新key欄位
      SET indtdocno = g_indr_m.indrdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO indt_t SELECT * FROM aint802_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint802_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aint802_detail AS ",
      "SELECT * FROM inds_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aint802_detail SELECT * FROM inds_t
                                         WHERE indsent = g_enterprise AND indsdocno = g_indrdocno_t
 
 
   #將key修正為調整後   
   UPDATE aint802_detail SET indsdocno = g_indr_m.indrdocno
 
  
   #將資料塞回原table   
   INSERT INTO inds_t SELECT * FROM aint802_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint802_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_indrdocno_t = g_indr_m.indrdocno
 
   
END FUNCTION
]]>
  </section>
  <section id="aint802.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aint802_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint802.fetch" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint802_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_indr_m.indrdocno = g_browser[g_current_idx].b_indrdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint802_master_referesh USING g_indr_m.indrdocno INTO g_indr_m.indr000,g_indr_m.indrsite, 
       g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
       g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt,g_indr_m.indrcnfid, 
       g_indr_m.indrcnfdt,g_indr_m.indrsite_desc,g_indr_m.indr006_desc,g_indr_m.indr002_desc,g_indr_m.indrownid_desc, 
       g_indr_m.indrowndp_desc,g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp_desc,g_indr_m.indrmodid_desc, 
       g_indr_m.indrcnfid_desc
   
   #遮罩相關處理
   LET g_indr_m_mask_o.* =  g_indr_m.*
   CALL aint802_indr_t_mask()
   LET g_indr_m_mask_n.* =  g_indr_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint802_set_act_visible()   
   CALL aint802_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_indr_m_t.* = g_indr_m.*
   LET g_indr_m_o.* = g_indr_m.*
   
   LET g_data_owner = g_indr_m.indrownid      
   LET g_data_dept  = g_indr_m.indrowndp
   
   #重新顯示   
   CALL aint802_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="aint802.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aint802_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint802.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION aint802_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON indrsite,indrdocdt,indrdocno,indr006,indr005,indr004
                          FROM s_browse[1].b_indrsite,s_browse[1].b_indrdocdt,s_browse[1].b_indrdocno, 
                              s_browse[1].b_indr006,s_browse[1].b_indr005,s_browse[1].b_indr004
 
         BEFORE CONSTRUCT
               DISPLAY aint802_filter_parser('indrsite') TO s_browse[1].b_indrsite
            DISPLAY aint802_filter_parser('indrdocdt') TO s_browse[1].b_indrdocdt
            DISPLAY aint802_filter_parser('indrdocno') TO s_browse[1].b_indrdocno
            DISPLAY aint802_filter_parser('indr006') TO s_browse[1].b_indr006
            DISPLAY aint802_filter_parser('indr005') TO s_browse[1].b_indr005
            DISPLAY aint802_filter_parser('indr004') TO s_browse[1].b_indr004
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint802_filter_show('indrsite')
   CALL aint802_filter_show('indrdocdt')
   CALL aint802_filter_show('indrdocno')
   CALL aint802_filter_show('indr006')
   CALL aint802_filter_show('indr005')
   CALL aint802_filter_show('indr004')
 
END FUNCTION
]]>
  </section>
  <section id="aint802.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint802_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aint802.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint802_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint802_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aint802.global" ver="15" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_indr_m        RECORD
       indr000 LIKE indr_t.indr000, 
   indrsite LIKE indr_t.indrsite, 
   indrsite_desc LIKE type_t.chr80, 
   indrdocdt LIKE indr_t.indrdocdt, 
   indrdocno LIKE indr_t.indrdocno, 
   indr006 LIKE indr_t.indr006, 
   indr006_desc LIKE type_t.chr80, 
   indr002 LIKE indr_t.indr002, 
   indr002_desc LIKE type_t.chr80, 
   indr005 LIKE indr_t.indr005, 
   indr004 LIKE indr_t.indr004, 
   indrunit LIKE indr_t.indrunit, 
   indr003 LIKE indr_t.indr003, 
   l_cnt_err_money LIKE type_t.num20_6, 
   indrstus LIKE indr_t.indrstus, 
   indrownid LIKE indr_t.indrownid, 
   indrownid_desc LIKE type_t.chr80, 
   indrowndp LIKE indr_t.indrowndp, 
   indrowndp_desc LIKE type_t.chr80, 
   indrcrtid LIKE indr_t.indrcrtid, 
   indrcrtid_desc LIKE type_t.chr80, 
   indrcrtdp LIKE indr_t.indrcrtdp, 
   indrcrtdp_desc LIKE type_t.chr80, 
   indrcrtdt LIKE indr_t.indrcrtdt, 
   indrmodid LIKE indr_t.indrmodid, 
   indrmodid_desc LIKE type_t.chr80, 
   indrmoddt LIKE indr_t.indrmoddt, 
   indrcnfid LIKE indr_t.indrcnfid, 
   indrcnfid_desc LIKE type_t.chr80, 
   indrcnfdt LIKE indr_t.indrcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_indt_d        RECORD
       indtseq LIKE indt_t.indtseq, 
   indtsite LIKE indt_t.indtsite, 
   indtsite_desc LIKE type_t.chr500, 
   indt001 LIKE indt_t.indt001, 
   indt003 LIKE indt_t.indt003, 
   indt004 LIKE indt_t.indt004, 
   indt004_desc LIKE type_t.chr500, 
   indt004_desc_desc LIKE type_t.chr500, 
   indt005 LIKE indt_t.indt005, 
   indt005_desc LIKE type_t.chr500, 
   indt002 LIKE indt_t.indt002, 
   indt002_desc LIKE type_t.chr500, 
   indt008 LIKE indt_t.indt008, 
   indt006 LIKE indt_t.indt006, 
   indt007 LIKE indt_t.indt007, 
   indtunit LIKE indt_t.indtunit
       END RECORD
PRIVATE TYPE type_g_indt2_d RECORD
       indsseq LIKE inds_t.indsseq, 
   indsseq1 LIKE inds_t.indsseq1, 
   indssite LIKE inds_t.indssite, 
   indssite_desc LIKE type_t.chr500, 
   inds001 LIKE inds_t.inds001, 
   inds005 LIKE inds_t.inds005, 
   inds004 LIKE inds_t.inds004, 
   inds004_desc LIKE type_t.chr500, 
   inds004_desc_desc LIKE type_t.chr500, 
   inds020 LIKE inds_t.inds020, 
   inds020_desc LIKE type_t.chr500, 
   inds006 LIKE inds_t.inds006, 
   inds006_desc LIKE type_t.chr500, 
   inds003 LIKE inds_t.inds003, 
   inds003_desc LIKE type_t.chr500, 
   inds021 LIKE inds_t.inds021, 
   inds009 LIKE inds_t.inds009, 
   inds010 LIKE inds_t.inds010, 
   inds011 LIKE inds_t.inds011, 
   l_mistakemoney LIKE type_t.num20_6, 
   inds014 LIKE inds_t.inds014, 
   inds014_desc LIKE type_t.chr500, 
   inds015 LIKE inds_t.inds015, 
   inds016 LIKE inds_t.inds016, 
   inds017 LIKE inds_t.inds017, 
   inds018 LIKE inds_t.inds018, 
   inds019 LIKE inds_t.inds019, 
   indsunit LIKE inds_t.indsunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_indrsite LIKE indr_t.indrsite,
   b_indrsite_desc LIKE type_t.chr80,
      b_indrdocdt LIKE indr_t.indrdocdt,
      b_indrdocno LIKE indr_t.indrdocno,
      b_indr006 LIKE indr_t.indr006,
   b_indr006_desc LIKE type_t.chr80,
      b_indr005 LIKE indr_t.indr005,
      b_indr004 LIKE indr_t.indr004
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_indr_m          type_g_indr_m
DEFINE g_indr_m_t        type_g_indr_m
DEFINE g_indr_m_o        type_g_indr_m
DEFINE g_indr_m_mask_o   type_g_indr_m #轉換遮罩前資料
DEFINE g_indr_m_mask_n   type_g_indr_m #轉換遮罩後資料
 
   DEFINE g_indrdocno_t LIKE indr_t.indrdocno
 
 
DEFINE g_indt_d          DYNAMIC ARRAY OF type_g_indt_d
DEFINE g_indt_d_t        type_g_indt_d
DEFINE g_indt_d_o        type_g_indt_d
DEFINE g_indt_d_mask_o   DYNAMIC ARRAY OF type_g_indt_d #轉換遮罩前資料
DEFINE g_indt_d_mask_n   DYNAMIC ARRAY OF type_g_indt_d #轉換遮罩後資料
DEFINE g_indt2_d          DYNAMIC ARRAY OF type_g_indt2_d
DEFINE g_indt2_d_t        type_g_indt2_d
DEFINE g_indt2_d_o        type_g_indt2_d
DEFINE g_indt2_d_mask_o   DYNAMIC ARRAY OF type_g_indt2_d #轉換遮罩前資料
DEFINE g_indt2_d_mask_n   DYNAMIC ARRAY OF type_g_indt2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint802.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aint802_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_indt_d.getLength() THEN
         LET g_detail_idx = g_indt_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_indt_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_indt_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_indt2_d.getLength() THEN
         LET g_detail_idx = g_indt2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_indt2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_indt2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aint802.init" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint802_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('indrstus','13','Y,N,A,D,R,W,X')
 
      CALL cl_set_combo_scc('indr005','6826') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aint802_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aint802.input" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint802_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrsite_desc,g_indr_m.indrdocdt,g_indr_m.indrdocno, 
       g_indr_m.indr006,g_indr_m.indr006_desc,g_indr_m.indr002,g_indr_m.indr002_desc,g_indr_m.indr005, 
       g_indr_m.indr004,g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.l_cnt_err_money,g_indr_m.indrstus, 
       g_indr_m.indrownid,g_indr_m.indrownid_desc,g_indr_m.indrowndp,g_indr_m.indrowndp_desc,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp,g_indr_m.indrcrtdp_desc,g_indr_m.indrcrtdt,g_indr_m.indrmodid, 
       g_indr_m.indrmodid_desc,g_indr_m.indrmoddt,g_indr_m.indrcnfid,g_indr_m.indrcnfid_desc,g_indr_m.indrcnfdt 

   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT indtseq,indtsite,indt001,indt003,indt004,indt005,indt002,indt008,indt006, 
       indt007,indtunit FROM indt_t WHERE indtent=? AND indtdocno=? AND indtseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint802_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT indsseq,indsseq1,indssite,inds001,inds005,inds004,inds020,inds006,inds003, 
       inds021,inds009,inds010,inds011,inds014,inds015,inds016,inds017,inds018,inds019,indsunit FROM  
       inds_t WHERE indsent=? AND indsdocno=? AND indsseq=? AND indsseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint802_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint802_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint802_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006, 
       g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004,g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aint802.input.body" ver="15" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_indt_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_indt_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint802_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_indt_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint802_cl USING g_enterprise,g_indr_m.indrdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint802_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint802_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_indt_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_indt_d[l_ac].indtseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_indt_d_t.* = g_indt_d[l_ac].*  #BACKUP
               LET g_indt_d_o.* = g_indt_d[l_ac].*  #BACKUP
               CALL aint802_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint802_set_no_entry_b(l_cmd)
               IF NOT aint802_lock_b("indt_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint802_bcl INTO g_indt_d[l_ac].indtseq,g_indt_d[l_ac].indtsite,g_indt_d[l_ac].indt001, 
                      g_indt_d[l_ac].indt003,g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005,g_indt_d[l_ac].indt002, 
                      g_indt_d[l_ac].indt008,g_indt_d[l_ac].indt006,g_indt_d[l_ac].indt007,g_indt_d[l_ac].indtunit 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_indt_d_t.indtseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_indt_d_mask_o[l_ac].* =  g_indt_d[l_ac].*
                  CALL aint802_indt_t_mask()
                  LET g_indt_d_mask_n[l_ac].* =  g_indt_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint802_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_indt_d[l_ac].* TO NULL 
            INITIALIZE g_indt_d_t.* TO NULL 
            INITIALIZE g_indt_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_indt_d[l_ac].indtseq = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_indt_d_t.* = g_indt_d[l_ac].*     #新輸入資料
            LET g_indt_d_o.* = g_indt_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint802_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint802_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_indt_d[li_reproduce_target].* = g_indt_d[li_reproduce].*
 
               LET g_indt_d[li_reproduce_target].indtseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM indt_t 
             WHERE indtent = g_enterprise AND indtdocno = g_indr_m.indrdocno
 
               AND indtseq = g_indt_d[l_ac].indtseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indr_m.indrdocno
               LET gs_keys[2] = g_indt_d[g_detail_idx].indtseq
               CALL aint802_insert_b('indt_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_indt_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indt_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint802_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_indr_m.indrdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_indt_d_t.indtseq
 
            
               #刪除同層單身
               IF NOT aint802_delete_b('indt_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint802_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint802_key_delete_b(gs_keys,'indt_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint802_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aint802_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_indt_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_indt_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indtseq
            #add-point:BEFORE FIELD indtseq
            {<point name="input.b.page1.indtseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indtseq
            
            #add-point:AFTER FIELD indtseq
            {<point name="input.a.page1.indtseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indtseq
            #add-point:ON CHANGE indtseq
            {<point name="input.g.page1.indtseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indtsite
            #add-point:BEFORE FIELD indtsite
            {<point name="input.b.page1.indtsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indtsite
            
            #add-point:AFTER FIELD indtsite
            {<point name="input.a.page1.indtsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indtsite
            #add-point:ON CHANGE indtsite
            {<point name="input.g.page1.indtsite" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt001
            
            #add-point:AFTER FIELD indt001
            {<point name="input.a.page1.indt001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt001
            #add-point:BEFORE FIELD indt001
            {<point name="input.b.page1.indt001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt001
            #add-point:ON CHANGE indt001
            {<point name="input.g.page1.indt001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt003
            
            #add-point:AFTER FIELD indt003
            {<point name="input.a.page1.indt003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt003
            #add-point:BEFORE FIELD indt003
            {<point name="input.b.page1.indt003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt003
            #add-point:ON CHANGE indt003
            {<point name="input.g.page1.indt003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt004
            
            #add-point:AFTER FIELD indt004
            {<point name="input.a.page1.indt004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt004
            #add-point:BEFORE FIELD indt004
            {<point name="input.b.page1.indt004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt004
            #add-point:ON CHANGE indt004
            {<point name="input.g.page1.indt004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt005
            
            #add-point:AFTER FIELD indt005
            {<point name="input.a.page1.indt005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt005
            #add-point:BEFORE FIELD indt005
            {<point name="input.b.page1.indt005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt005
            #add-point:ON CHANGE indt005
            {<point name="input.g.page1.indt005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt002
            
            #add-point:AFTER FIELD indt002
            {<point name="input.a.page1.indt002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt002
            #add-point:BEFORE FIELD indt002
            {<point name="input.b.page1.indt002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt002
            #add-point:ON CHANGE indt002
            {<point name="input.g.page1.indt002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt008
            #add-point:BEFORE FIELD indt008
            {<point name="input.b.page1.indt008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt008
            
            #add-point:AFTER FIELD indt008
            {<point name="input.a.page1.indt008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt008
            #add-point:ON CHANGE indt008
            {<point name="input.g.page1.indt008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt006
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indt_d[l_ac].indt006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD indt006
            END IF 
 
 
            #add-point:AFTER FIELD indt006
            {<point name="input.a.page1.indt006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt006
            #add-point:BEFORE FIELD indt006
            {<point name="input.b.page1.indt006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt006
            #add-point:ON CHANGE indt006
            {<point name="input.g.page1.indt006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indt007
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indt_d[l_ac].indt007,"0","1","","","azz-00079",1) THEN
               NEXT FIELD indt007
            END IF 
 
 
            #add-point:AFTER FIELD indt007
            {<point name="input.a.page1.indt007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indt007
            #add-point:BEFORE FIELD indt007
            {<point name="input.b.page1.indt007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indt007
            #add-point:ON CHANGE indt007
            {<point name="input.g.page1.indt007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indtunit
            #add-point:BEFORE FIELD indtunit
            {<point name="input.b.page1.indtunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indtunit
            
            #add-point:AFTER FIELD indtunit
            {<point name="input.a.page1.indtunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indtunit
            #add-point:ON CHANGE indtunit
            {<point name="input.g.page1.indtunit" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.indtseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indtseq
            #add-point:ON ACTION controlp INFIELD indtseq
            {<point name="input.c.page1.indtseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indtsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indtsite
            #add-point:ON ACTION controlp INFIELD indtsite
            {<point name="input.c.page1.indtsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt001
            #add-point:ON ACTION controlp INFIELD indt001
            {<point name="input.c.page1.indt001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt003
            #add-point:ON ACTION controlp INFIELD indt003
            {<point name="input.c.page1.indt003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt004
            #add-point:ON ACTION controlp INFIELD indt004
            {<point name="input.c.page1.indt004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt005
            #add-point:ON ACTION controlp INFIELD indt005
            {<point name="input.c.page1.indt005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt002
            #add-point:ON ACTION controlp INFIELD indt002
            {<point name="input.c.page1.indt002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt008
            #add-point:ON ACTION controlp INFIELD indt008
            {<point name="input.c.page1.indt008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt006
            #add-point:ON ACTION controlp INFIELD indt006
            {<point name="input.c.page1.indt006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indt007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indt007
            #add-point:ON ACTION controlp INFIELD indt007
            {<point name="input.c.page1.indt007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.indtunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indtunit
            #add-point:ON ACTION controlp INFIELD indtunit
            {<point name="input.c.page1.indtunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_indt_d[l_ac].* = g_indt_d_t.*
               CLOSE aint802_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_indt_d[l_ac].indtseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_indt_d[l_ac].* = g_indt_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aint802_indt_t_mask_restore('restore_mask_o')
      
               UPDATE indt_t SET (indtdocno,indtseq,indtsite,indt001,indt003,indt004,indt005,indt002, 
                   indt008,indt006,indt007,indtunit) = (g_indr_m.indrdocno,g_indt_d[l_ac].indtseq,g_indt_d[l_ac].indtsite, 
                   g_indt_d[l_ac].indt001,g_indt_d[l_ac].indt003,g_indt_d[l_ac].indt004,g_indt_d[l_ac].indt005, 
                   g_indt_d[l_ac].indt002,g_indt_d[l_ac].indt008,g_indt_d[l_ac].indt006,g_indt_d[l_ac].indt007, 
                   g_indt_d[l_ac].indtunit)
                WHERE indtent = g_enterprise AND indtdocno = g_indr_m.indrdocno 
 
                  AND indtseq = g_indt_d_t.indtseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indt_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_indt_d[l_ac].* = g_indt_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indt_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_indt_d[l_ac].* = g_indt_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indr_m.indrdocno
               LET gs_keys_bak[1] = g_indrdocno_t
               LET gs_keys[2] = g_indt_d[g_detail_idx].indtseq
               LET gs_keys_bak[2] = g_indt_d_t.indtseq
               CALL aint802_update_b('indt_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aint802_indt_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_indt_d[g_detail_idx].indtseq = g_indt_d_t.indtseq 
 
                  ) THEN
                  LET gs_keys[01] = g_indr_m.indrdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_indt_d_t.indtseq
 
                  CALL aint802_key_update_b(gs_keys,'indt_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_indr_m),util.JSON.stringify(g_indt_d_t)
               LET g_log2 = util.JSON.stringify(g_indr_m),util.JSON.stringify(g_indt_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint802_unlock_b("indt_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_indt_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_indt_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_indt2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL aint802_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL aint802_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
 
 
]]>
  </section>
  <section id="aint802.input.head" ver="7" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006, 
          g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004,g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aint802_cl USING g_enterprise,g_indr_m.indrdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint802_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aint802_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aint802_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aint802_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr000
            #add-point:BEFORE FIELD indr000
            {<point name="input.b.indr000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr000
            
            #add-point:AFTER FIELD indr000
            {<point name="input.a.indr000" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indr000
            #add-point:ON CHANGE indr000
            {<point name="input.g.indr000" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrsite
            
            #add-point:AFTER FIELD indrsite
            {<point name="input.a.indrsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrsite
            #add-point:BEFORE FIELD indrsite
            {<point name="input.b.indrsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indrsite
            #add-point:ON CHANGE indrsite
            {<point name="input.g.indrsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrdocdt
            #add-point:BEFORE FIELD indrdocdt
            {<point name="input.b.indrdocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrdocdt
            
            #add-point:AFTER FIELD indrdocdt
            {<point name="input.a.indrdocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indrdocdt
            #add-point:ON CHANGE indrdocdt
            {<point name="input.g.indrdocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrdocno
            #add-point:BEFORE FIELD indrdocno
            {<point name="input.b.indrdocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrdocno
            
            #add-point:AFTER FIELD indrdocno
            {<point name="input.a.indrdocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indrdocno
            #add-point:ON CHANGE indrdocno
            {<point name="input.g.indrdocno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr006
            
            #add-point:AFTER FIELD indr006
            {<point name="input.a.indr006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr006
            #add-point:BEFORE FIELD indr006
            {<point name="input.b.indr006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indr006
            #add-point:ON CHANGE indr006
            {<point name="input.g.indr006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr002
            
            #add-point:AFTER FIELD indr002
            {<point name="input.a.indr002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr002
            #add-point:BEFORE FIELD indr002
            {<point name="input.b.indr002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indr002
            #add-point:ON CHANGE indr002
            {<point name="input.g.indr002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr005
            #add-point:BEFORE FIELD indr005
            {<point name="input.b.indr005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr005
            
            #add-point:AFTER FIELD indr005
            {<point name="input.a.indr005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indr005
            #add-point:ON CHANGE indr005
            {<point name="input.g.indr005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr004
            #add-point:BEFORE FIELD indr004
            {<point name="input.b.indr004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr004
            
            #add-point:AFTER FIELD indr004
            {<point name="input.a.indr004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indr004
            #add-point:ON CHANGE indr004
            {<point name="input.g.indr004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrunit
            #add-point:BEFORE FIELD indrunit
            {<point name="input.b.indrunit" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrunit
            
            #add-point:AFTER FIELD indrunit
            {<point name="input.a.indrunit" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indrunit
            #add-point:ON CHANGE indrunit
            {<point name="input.g.indrunit" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indr003
            #add-point:BEFORE FIELD indr003
            {<point name="input.b.indr003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indr003
            
            #add-point:AFTER FIELD indr003
            {<point name="input.a.indr003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indr003
            #add-point:ON CHANGE indr003
            {<point name="input.g.indr003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD indrstus
            #add-point:BEFORE FIELD indrstus
            {<point name="input.b.indrstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD indrstus
            
            #add-point:AFTER FIELD indrstus
            {<point name="input.a.indrstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE indrstus
            #add-point:ON CHANGE indrstus
            {<point name="input.g.indrstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.indr000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr000
            #add-point:ON ACTION controlp INFIELD indr000
            {<point name="input.c.indr000" />}
            #END add-point
 
         #Ctrlp:input.c.indrsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrsite
            #add-point:ON ACTION controlp INFIELD indrsite
            {<point name="input.c.indrsite" />}
            #END add-point
 
         #Ctrlp:input.c.indrdocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrdocdt
            #add-point:ON ACTION controlp INFIELD indrdocdt
            {<point name="input.c.indrdocdt" />}
            #END add-point
 
         #Ctrlp:input.c.indrdocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrdocno
            #add-point:ON ACTION controlp INFIELD indrdocno
            {<point name="input.c.indrdocno" />}
            #END add-point
 
         #Ctrlp:input.c.indr006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr006
            #add-point:ON ACTION controlp INFIELD indr006
            {<point name="input.c.indr006" />}
            #END add-point
 
         #Ctrlp:input.c.indr002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr002
            #add-point:ON ACTION controlp INFIELD indr002
            {<point name="input.c.indr002" />}
            #END add-point
 
         #Ctrlp:input.c.indr005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr005
            #add-point:ON ACTION controlp INFIELD indr005
            {<point name="input.c.indr005" />}
            #END add-point
 
         #Ctrlp:input.c.indr004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr004
            #add-point:ON ACTION controlp INFIELD indr004
            {<point name="input.c.indr004" />}
            #END add-point
 
         #Ctrlp:input.c.indrunit
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrunit
            #add-point:ON ACTION controlp INFIELD indrunit
            {<point name="input.c.indrunit" />}
            #END add-point
 
         #Ctrlp:input.c.indr003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indr003
            #add-point:ON ACTION controlp INFIELD indr003
            {<point name="input.c.indr003" />}
            #END add-point
 
         #Ctrlp:input.c.indrstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD indrstus
            #add-point:ON ACTION controlp INFIELD indrstus
            {<point name="input.c.indrstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_indr_m.indrdocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO indr_t (indrent,indr000,indrsite,indrdocdt,indrdocno,indr006,indr002,indr005, 
                   indr004,indrunit,indr003,indrstus,indrownid,indrowndp,indrcrtid,indrcrtdp,indrcrtdt, 
                   indrmodid,indrmoddt,indrcnfid,indrcnfdt)
               VALUES (g_enterprise,g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrdocdt,g_indr_m.indrdocno, 
                   g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004,g_indr_m.indrunit, 
                   g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp,g_indr_m.indrcrtid, 
                   g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt,g_indr_m.indrcnfid, 
                   g_indr_m.indrcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_indr_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint802_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aint802_b_fill()
                  CALL aint802_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aint802_indr_t_mask_restore('restore_mask_o')
               
               UPDATE indr_t SET (indr000,indrsite,indrdocdt,indrdocno,indr006,indr002,indr005,indr004, 
                   indrunit,indr003,indrstus,indrownid,indrowndp,indrcrtid,indrcrtdp,indrcrtdt,indrmodid, 
                   indrmoddt,indrcnfid,indrcnfdt) = (g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrdocdt, 
                   g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
                   g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp, 
                   g_indr_m.indrcrtid,g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt, 
                   g_indr_m.indrcnfid,g_indr_m.indrcnfdt)
                WHERE indrent = g_enterprise AND indrdocno = g_indrdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "indr_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aint802_indr_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_indr_m_t)
               LET g_log2 = util.JSON.stringify(g_indr_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_indrdocno_t = g_indr_m.indrdocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="aint802.input.other" ver="1" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD indrdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD indtseq
               WHEN "s_detail2"
                  NEXT FIELD indsseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aint802.insert" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint802_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_indt_d.clear()   
   CALL g_indt2_d.clear()  
 
 
   INITIALIZE g_indr_m.* LIKE indr_t.*             #DEFAULT 設定
   
   LET g_indrdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_indr_m.indrownid = g_user
      LET g_indr_m.indrowndp = g_dept
      LET g_indr_m.indrcrtid = g_user
      LET g_indr_m.indrcrtdp = g_dept 
      LET g_indr_m.indrcrtdt = cl_get_current()
      LET g_indr_m.indrmodid = g_user
      LET g_indr_m.indrmoddt = cl_get_current()
      LET g_indr_m.indrstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_indr_m.indr000 = "2"
      LET g_indr_m.indr005 = "1"
      LET g_indr_m.indr004 = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_indr_m_t.* = g_indr_m.*
      LET g_indr_m_o.* = g_indr_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indr_m.indrstus 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL aint802_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_indr_m.* TO NULL
         INITIALIZE g_indt_d TO NULL
         INITIALIZE g_indt2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aint802_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_indt_d.clear()
      #CALL g_indt2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint802_set_act_visible()   
   CALL aint802_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indrdocno_t = g_indr_m.indrdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indrent = '" ||g_enterprise|| "' AND",
                      " indrdocno = '", g_indr_m.indrdocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint802_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aint802_cl
   
   CALL aint802_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aint802_master_referesh USING g_indr_m.indrdocno INTO g_indr_m.indr000,g_indr_m.indrsite, 
       g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
       g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt,g_indr_m.indrcnfid, 
       g_indr_m.indrcnfdt,g_indr_m.indrsite_desc,g_indr_m.indr006_desc,g_indr_m.indr002_desc,g_indr_m.indrownid_desc, 
       g_indr_m.indrowndp_desc,g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp_desc,g_indr_m.indrmodid_desc, 
       g_indr_m.indrcnfid_desc
   
   #遮罩相關處理
   LET g_indr_m_mask_o.* =  g_indr_m.*
   CALL aint802_indr_t_mask()
   LET g_indr_m_mask_n.* =  g_indr_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrsite_desc,g_indr_m.indrdocdt,g_indr_m.indrdocno, 
       g_indr_m.indr006,g_indr_m.indr006_desc,g_indr_m.indr002,g_indr_m.indr002_desc,g_indr_m.indr005, 
       g_indr_m.indr004,g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.l_cnt_err_money,g_indr_m.indrstus, 
       g_indr_m.indrownid,g_indr_m.indrownid_desc,g_indr_m.indrowndp,g_indr_m.indrowndp_desc,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp,g_indr_m.indrcrtdp_desc,g_indr_m.indrcrtdt,g_indr_m.indrmodid, 
       g_indr_m.indrmodid_desc,g_indr_m.indrmoddt,g_indr_m.indrcnfid,g_indr_m.indrcnfid_desc,g_indr_m.indrcnfdt 

   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aint802_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="aint802.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint802_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO indt_t
                  (indtent,
                   indtdocno,
                   indtseq
                   ,indtsite,indt001,indt003,indt004,indt005,indt002,indt008,indt006,indt007,indtunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_indt_d[g_detail_idx].indtsite,g_indt_d[g_detail_idx].indt001,g_indt_d[g_detail_idx].indt003, 
                       g_indt_d[g_detail_idx].indt004,g_indt_d[g_detail_idx].indt005,g_indt_d[g_detail_idx].indt002, 
                       g_indt_d[g_detail_idx].indt008,g_indt_d[g_detail_idx].indt006,g_indt_d[g_detail_idx].indt007, 
                       g_indt_d[g_detail_idx].indtunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indt_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indt_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO inds_t
                  (indsent,
                   indsdocno,
                   indsseq,indsseq1
                   ,indssite,inds001,inds005,inds004,inds020,inds006,inds003,inds021,inds009,inds010,inds011,inds014,inds015,inds016,inds017,inds018,inds019,indsunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_indt2_d[g_detail_idx].indssite,g_indt2_d[g_detail_idx].inds001,g_indt2_d[g_detail_idx].inds005, 
                       g_indt2_d[g_detail_idx].inds004,g_indt2_d[g_detail_idx].inds020,g_indt2_d[g_detail_idx].inds006, 
                       g_indt2_d[g_detail_idx].inds003,g_indt2_d[g_detail_idx].inds021,g_indt2_d[g_detail_idx].inds009, 
                       g_indt2_d[g_detail_idx].inds010,g_indt2_d[g_detail_idx].inds011,g_indt2_d[g_detail_idx].inds014, 
                       g_indt2_d[g_detail_idx].inds015,g_indt2_d[g_detail_idx].inds016,g_indt2_d[g_detail_idx].inds017, 
                       g_indt2_d[g_detail_idx].inds018,g_indt2_d[g_detail_idx].inds019,g_indt2_d[g_detail_idx].indsunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "inds_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_indt2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aint802.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aint802_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aint802.key_update_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aint802_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aint802.lock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint802_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL aint802_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "indt_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint802_bcl USING g_enterprise,
                                       g_indr_m.indrdocno,g_indt_d[g_detail_idx].indtseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint802_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "inds_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aint802_bcl2 USING g_enterprise,
                                             g_indr_m.indrdocno,g_indt2_d[g_detail_idx].indsseq,g_indt2_d[g_detail_idx].indsseq1 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint802_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint802.main" ver="3" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT indr000,indrsite,'',indrdocdt,indrdocno,indr006,'',indr002,'',indr005, 
       indr004,indrunit,indr003,'',indrstus,indrownid,'',indrowndp,'',indrcrtid,'',indrcrtdp,'',indrcrtdt, 
       indrmodid,'',indrmoddt,indrcnfid,'',indrcnfdt", 
                      " FROM indr_t",
                      " WHERE indrent= ? AND indrdocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint802_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.indr000,t0.indrsite,t0.indrdocdt,t0.indrdocno,t0.indr006,t0.indr002, 
       t0.indr005,t0.indr004,t0.indrunit,t0.indr003,t0.indrstus,t0.indrownid,t0.indrowndp,t0.indrcrtid, 
       t0.indrcrtdp,t0.indrcrtdt,t0.indrmodid,t0.indrmoddt,t0.indrcnfid,t0.indrcnfdt,t1.ooefl003 ,t2.pmaal004 , 
       t3.rtaxl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooag011",
               " FROM indr_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.indrsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=t0.indr006 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t3 ON t3.rtaxlent='"||g_enterprise||"' AND t3.rtaxl001=t0.indr002 AND t3.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.indrownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.indrowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.indrcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.indrcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.indrmodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.indrcnfid  ",
 
               " WHERE t0.indrent = '" ||g_enterprise|| "' AND t0.indrdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint802_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint802 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint802_init()   
 
      #進入選單 Menu (="N")
      CALL aint802_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint802
      
   END IF 
   
   CLOSE aint802_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aint802.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/ain/aint802_mask.4gl"
]]>
  </section>
  <section id="aint802.modify" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint802_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_indr_m_t.* = g_indr_m.*
   LET g_indr_m_o.* = g_indr_m.*
   
   IF g_indr_m.indrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_indrdocno_t = g_indr_m.indrdocno
 
   CALL s_transaction_begin()
   
   OPEN aint802_cl USING g_enterprise,g_indr_m.indrdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint802_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint802_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint802_master_referesh USING g_indr_m.indrdocno INTO g_indr_m.indr000,g_indr_m.indrsite, 
       g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
       g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt,g_indr_m.indrcnfid, 
       g_indr_m.indrcnfdt,g_indr_m.indrsite_desc,g_indr_m.indr006_desc,g_indr_m.indr002_desc,g_indr_m.indrownid_desc, 
       g_indr_m.indrowndp_desc,g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp_desc,g_indr_m.indrmodid_desc, 
       g_indr_m.indrcnfid_desc
   
   #檢查是否允許此動作
   IF NOT aint802_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indr_m_mask_o.* =  g_indr_m.*
   CALL aint802_indr_t_mask()
   LET g_indr_m_mask_n.* =  g_indr_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL aint802_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_indrdocno_t = g_indr_m.indrdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_indr_m.indrmodid = g_user 
LET g_indr_m.indrmoddt = cl_get_current()
LET g_indr_m.indrmodid_desc = cl_get_username(g_indr_m.indrmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aint802_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE indr_t SET (indrmodid,indrmoddt) = (g_indr_m.indrmodid,g_indr_m.indrmoddt)
          WHERE indrent = g_enterprise AND indrdocno = g_indrdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_indr_m.* = g_indr_m_t.*
         CALL aint802_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_indr_m.indrdocno != g_indrdocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE indt_t SET indtdocno = g_indr_m.indrdocno
 
          WHERE indtent = g_enterprise AND indtdocno = g_indrdocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indt_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indt_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE inds_t
            SET indsdocno = g_indr_m.indrdocno
 
          WHERE indsent = g_enterprise AND
                indsdocno = g_indrdocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inds_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "inds_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint802_set_act_visible()   
   CALL aint802_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " indrent = '" ||g_enterprise|| "' AND",
                      " indrdocno = '", g_indr_m.indrdocno, "' "
 
   #填到對應位置
   CALL aint802_browser_fill("")
 
   CLOSE aint802_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint802_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="aint802.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION aint802_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aint802_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_indr_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aint802.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aint802.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint802.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint802_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_indt_d.clear()
   CALL g_indt2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aint802_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint802_browser_fill("")
      CALL aint802_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint802_filter_show('indrsite')
   CALL aint802_filter_show('indrdocdt')
   CALL aint802_filter_show('indrdocno')
   CALL aint802_filter_show('indr006')
   CALL aint802_filter_show('indr005')
   CALL aint802_filter_show('indr004')
   CALL aint802_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aint802_fetch("F") 
      #顯示單身筆數
      CALL aint802_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint802.reproduce" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aint802_reproduce()
   DEFINE l_newno     LIKE indr_t.indrdocno 
   DEFINE l_oldno     LIKE indr_t.indrdocno 
 
   DEFINE l_master    RECORD LIKE indr_t.*
   DEFINE l_detail    RECORD LIKE indt_t.*
   DEFINE l_detail2    RECORD LIKE inds_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_indr_m.indrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_indrdocno_t = g_indr_m.indrdocno
 
    
   LET g_indr_m.indrdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_indr_m.indrownid = g_user
      LET g_indr_m.indrowndp = g_dept
      LET g_indr_m.indrcrtid = g_user
      LET g_indr_m.indrcrtdp = g_dept 
      LET g_indr_m.indrcrtdt = cl_get_current()
      LET g_indr_m.indrmodid = g_user
      LET g_indr_m.indrmoddt = cl_get_current()
      LET g_indr_m.indrstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indr_m.indrstus 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL aint802_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_indr_m.* TO NULL
      INITIALIZE g_indt_d TO NULL
      INITIALIZE g_indt2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aint802_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint802_set_act_visible()   
   CALL aint802_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indrdocno_t = g_indr_m.indrdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indrent = '" ||g_enterprise|| "' AND",
                      " indrdocno = '", g_indr_m.indrdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint802_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aint802_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aint802_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="aint802.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aint802_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint802.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aint802_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint802.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aint802_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint802.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aint802_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aint802.set_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint802_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("indrdocno,indrdocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("indrdocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint802.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint802_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aint802.set_no_entry" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint802_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("indrdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("indrdocno,indrdocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint802.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint802_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aint802.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aint802_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_indr_m.indrdocno
   LET g_pk_array[1].column = 'indrdocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint802.show" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint802_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint802_b_fill() #單身填充
      CALL aint802_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aint802_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_indr_m_mask_o.* =  g_indr_m.*
   CALL aint802_indr_t_mask()
   LET g_indr_m_mask_n.* =  g_indr_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrsite_desc,g_indr_m.indrdocdt,g_indr_m.indrdocno, 
       g_indr_m.indr006,g_indr_m.indr006_desc,g_indr_m.indr002,g_indr_m.indr002_desc,g_indr_m.indr005, 
       g_indr_m.indr004,g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.l_cnt_err_money,g_indr_m.indrstus, 
       g_indr_m.indrownid,g_indr_m.indrownid_desc,g_indr_m.indrowndp,g_indr_m.indrowndp_desc,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp,g_indr_m.indrcrtdp_desc,g_indr_m.indrcrtdt,g_indr_m.indrmodid, 
       g_indr_m.indrmodid_desc,g_indr_m.indrmoddt,g_indr_m.indrcnfid,g_indr_m.indrcnfid_desc,g_indr_m.indrcnfdt 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_indr_m.indrstus 
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_indt_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_indt2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint802_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aint802.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION aint802_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL aint802_show()
   CALL aint802_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_indr_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_indt_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_indt2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aint802_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint802_ui_headershow()
   CALL aint802_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION aint802_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint802_ui_headershow()  
   CALL aint802_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="aint802.state_change" ver="4" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION aint802_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_indr_m.indrdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aint802_cl USING g_enterprise,g_indr_m.indrdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint802_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aint802_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aint802_master_referesh USING g_indr_m.indrdocno INTO g_indr_m.indr000,g_indr_m.indrsite, 
       g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
       g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt,g_indr_m.indrcnfid, 
       g_indr_m.indrcnfdt,g_indr_m.indrsite_desc,g_indr_m.indr006_desc,g_indr_m.indr002_desc,g_indr_m.indrownid_desc, 
       g_indr_m.indrowndp_desc,g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp_desc,g_indr_m.indrmodid_desc, 
       g_indr_m.indrcnfid_desc
 
   #檢查是否允許此動作
   IF NOT aint802_action_chk() THEN
      CLOSE aint802_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrsite_desc,g_indr_m.indrdocdt,g_indr_m.indrdocno, 
       g_indr_m.indr006,g_indr_m.indr006_desc,g_indr_m.indr002,g_indr_m.indr002_desc,g_indr_m.indr005, 
       g_indr_m.indr004,g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.l_cnt_err_money,g_indr_m.indrstus, 
       g_indr_m.indrownid,g_indr_m.indrownid_desc,g_indr_m.indrowndp,g_indr_m.indrowndp_desc,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp,g_indr_m.indrcrtdp_desc,g_indr_m.indrcrtdt,g_indr_m.indrmodid, 
       g_indr_m.indrmodid_desc,g_indr_m.indrmoddt,g_indr_m.indrcnfid,g_indr_m.indrcnfid_desc,g_indr_m.indrcnfdt 

 
   CASE g_indr_m.indrstus
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_indr_m.indrstus
            
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aint802_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint802_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aint802_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint802_cl
            RETURN
         END IF
 
 
	  
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "Y" 
      AND lc_state <> "N"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_indr_m.indrstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aint802_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_indr_m.indrmodid = g_user
   LET g_indr_m.indrmoddt = cl_get_current()
   LET g_indr_m.indrstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE indr_t 
      SET (indrstus,indrmodid,indrmoddt) 
        = (g_indr_m.indrstus,g_indr_m.indrmodid,g_indr_m.indrmoddt)     
    WHERE indrent = g_enterprise AND indrdocno = g_indr_m.indrdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aint802_master_referesh USING g_indr_m.indrdocno INTO g_indr_m.indr000,g_indr_m.indrsite, 
          g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
          g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp, 
          g_indr_m.indrcrtid,g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt, 
          g_indr_m.indrcnfid,g_indr_m.indrcnfdt,g_indr_m.indrsite_desc,g_indr_m.indr006_desc,g_indr_m.indr002_desc, 
          g_indr_m.indrownid_desc,g_indr_m.indrowndp_desc,g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp_desc, 
          g_indr_m.indrmodid_desc,g_indr_m.indrcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_indr_m.indr000,g_indr_m.indrsite,g_indr_m.indrsite_desc,g_indr_m.indrdocdt,g_indr_m.indrdocno, 
          g_indr_m.indr006,g_indr_m.indr006_desc,g_indr_m.indr002,g_indr_m.indr002_desc,g_indr_m.indr005, 
          g_indr_m.indr004,g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.l_cnt_err_money,g_indr_m.indrstus, 
          g_indr_m.indrownid,g_indr_m.indrownid_desc,g_indr_m.indrowndp,g_indr_m.indrowndp_desc,g_indr_m.indrcrtid, 
          g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp,g_indr_m.indrcrtdp_desc,g_indr_m.indrcrtdt,g_indr_m.indrmodid, 
          g_indr_m.indrmodid_desc,g_indr_m.indrmoddt,g_indr_m.indrcnfid,g_indr_m.indrcnfid_desc,g_indr_m.indrcnfdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aint802_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint802_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint802.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aint802_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aint802.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint802_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_indrdocno = g_indr_m.indrdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint802.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aint802_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aint802.ui_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aint802_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint802_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_indr_m.* TO NULL
         CALL g_indt_d.clear()
         CALL g_indt2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aint802_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint802_fetch('') # reload data
               LET l_ac = 1
               CALL aint802_ui_detailshow() #Setting the current row 
         
               CALL aint802_idx_chk()
               #NEXT FIELD indtseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_indt_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint802_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aint802_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_indt2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint802_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL aint802_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aint802_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint802_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint802_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint802_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint802_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aint802_set_act_visible()   
            CALL aint802_set_act_no_visible()
            IF NOT (g_indr_m.indrdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " indrent = '" ||g_enterprise|| "' AND",
                                  " indrdocno = '", g_indr_m.indrdocno, "' "
 
               #填到對應位置
               CALL aint802_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indr_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indt_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "inds_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aint802_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indr_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indt_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "inds_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint802_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aint802_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint802_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aint802_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint802_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aint802_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint802_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aint802_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint802_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aint802_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint802_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aint802_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint802_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_indt_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_indt2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD indtseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint802_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint802_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint802_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint802_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/ain/aint802_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint802_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aint802_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint802_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint802_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_indr_m.indrdocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aint802.ui_headershow" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aint802_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_indr_m.indrdocno = g_browser[g_current_idx].b_indrdocno   
 
   EXECUTE aint802_master_referesh USING g_indr_m.indrdocno INTO g_indr_m.indr000,g_indr_m.indrsite, 
       g_indr_m.indrdocdt,g_indr_m.indrdocno,g_indr_m.indr006,g_indr_m.indr002,g_indr_m.indr005,g_indr_m.indr004, 
       g_indr_m.indrunit,g_indr_m.indr003,g_indr_m.indrstus,g_indr_m.indrownid,g_indr_m.indrowndp,g_indr_m.indrcrtid, 
       g_indr_m.indrcrtdp,g_indr_m.indrcrtdt,g_indr_m.indrmodid,g_indr_m.indrmoddt,g_indr_m.indrcnfid, 
       g_indr_m.indrcnfdt,g_indr_m.indrsite_desc,g_indr_m.indr006_desc,g_indr_m.indr002_desc,g_indr_m.indrownid_desc, 
       g_indr_m.indrowndp_desc,g_indr_m.indrcrtid_desc,g_indr_m.indrcrtdp_desc,g_indr_m.indrmodid_desc, 
       g_indr_m.indrcnfid_desc
   CALL aint802_indr_t_mask()
   CALL aint802_show()
      
END FUNCTION
]]>
  </section>
  <section id="aint802.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint802_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint802_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint802_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aint802.update_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint802_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "indt_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aint802_indt_t_mask_restore('restore_mask_o')
               
      UPDATE indt_t 
         SET (indtdocno,
              indtseq
              ,indtsite,indt001,indt003,indt004,indt005,indt002,indt008,indt006,indt007,indtunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_indt_d[g_detail_idx].indtsite,g_indt_d[g_detail_idx].indt001,g_indt_d[g_detail_idx].indt003, 
                  g_indt_d[g_detail_idx].indt004,g_indt_d[g_detail_idx].indt005,g_indt_d[g_detail_idx].indt002, 
                  g_indt_d[g_detail_idx].indt008,g_indt_d[g_detail_idx].indt006,g_indt_d[g_detail_idx].indt007, 
                  g_indt_d[g_detail_idx].indtunit) 
         WHERE indtent = g_enterprise AND indtdocno = ps_keys_bak[1] AND indtseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indt_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indt_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint802_indt_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "inds_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL aint802_inds_t_mask_restore('restore_mask_o')
               
      UPDATE inds_t 
         SET (indsdocno,
              indsseq,indsseq1
              ,indssite,inds001,inds005,inds004,inds020,inds006,inds003,inds021,inds009,inds010,inds011,inds014,inds015,inds016,inds017,inds018,inds019,indsunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_indt2_d[g_detail_idx].indssite,g_indt2_d[g_detail_idx].inds001,g_indt2_d[g_detail_idx].inds005, 
                  g_indt2_d[g_detail_idx].inds004,g_indt2_d[g_detail_idx].inds020,g_indt2_d[g_detail_idx].inds006, 
                  g_indt2_d[g_detail_idx].inds003,g_indt2_d[g_detail_idx].inds021,g_indt2_d[g_detail_idx].inds009, 
                  g_indt2_d[g_detail_idx].inds010,g_indt2_d[g_detail_idx].inds011,g_indt2_d[g_detail_idx].inds014, 
                  g_indt2_d[g_detail_idx].inds015,g_indt2_d[g_detail_idx].inds016,g_indt2_d[g_detail_idx].inds017, 
                  g_indt2_d[g_detail_idx].inds018,g_indt2_d[g_detail_idx].inds019,g_indt2_d[g_detail_idx].indsunit)  

         WHERE indsent = g_enterprise AND indsdocno = ps_keys_bak[1] AND indsseq = ps_keys_bak[2] AND indsseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inds_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "inds_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint802_inds_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
