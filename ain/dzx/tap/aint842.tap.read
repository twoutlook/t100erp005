<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint842" std_prog="aint842" erpver="1.0" module="AIN" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="b_fill.sql_before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="construct.c.page2.inpdcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdcnfid  #顯示到畫面上
            NEXT FIELD inpdcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inpdcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdcrtdp  #顯示到畫面上
            NEXT FIELD inpdcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inpdcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdcrtid  #顯示到畫面上
            NEXT FIELD inpdcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inpdmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdmodid  #顯示到畫面上
            NEXT FIELD inpdmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inpdowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdowndp  #顯示到畫面上
            NEXT FIELD inpdowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inpdownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdownid  #顯示到畫面上
            NEXT FIELD inpdownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.inpdpstid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdpstid  #顯示到畫面上
            NEXT FIELD inpdpstid                     #返回原欄位
    

]]>
  </point>
  <point name="detail_show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdcnfid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd2_d[l_ac].inpdpstid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd2_d[l_ac].inpdpstid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd2_d[l_ac].inpdpstid_desc
]]>
  </point>
  <point name="detail_show.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd005_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            LET g_ref_fields[3] = g_inpd_d[l_ac].inpd006
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd006_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd010_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd012_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd054
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd054_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd054_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd014_desc
]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE l_wc                 STRING ]]>
  </point>
  <point name="input.a.page1.inpd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd001   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaf001_7") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_d[l_ac].inpd001 = g_inpd_d_t.inpd001   
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd001_desc

]]>
  </point>
  <point name="input.a.page1.inpd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd004  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaf001_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd004_desc

]]>
  </point>
  <point name="input.a.page1.inpd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_inpd_d[l_ac].inpd005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd005_desc

]]>
  </point>
  <point name="input.a.page1.inpd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_inpd_d[l_ac].inpd005
               LET g_chkparam.arg3 = g_inpd_d[l_ac].inpd006
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inab002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpdsite
            LET g_ref_fields[2] = g_inpd_d[l_ac].inpd005
            LET g_ref_fields[3] = g_inpd_d[l_ac].inpd006
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd006_desc

]]>
  </point>
  <point name="input.a.page1.inpd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd010   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd010
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd010_desc

]]>
  </point>
  <point name="input.a.page1.inpd012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd012) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd012   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd012_desc

]]>
  </point>
  <point name="input.a.page1.inpd014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd014_desc

]]>
  </point>
  <point name="input.a.page1.inpd054" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_d[l_ac].inpd054) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_d[l_ac].inpd054   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_d[l_ac].inpd054
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_inpd_d[l_ac].inpd054_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_d[l_ac].inpd054_desc

]]>
  </point>
  <point name="input.a.page1.inpddocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd_d[g_detail_idx].inpdsite != g_inpd_d_t.inpdsite OR g_inpd_d[g_detail_idx].inpddocno != g_inpd_d_t.inpddocno OR g_inpd_d[g_detail_idx].inpdseq != g_inpd_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inpdseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd_d[g_detail_idx].inpdsite != g_inpd_d_t.inpdsite OR g_inpd_d[g_detail_idx].inpddocno != g_inpd_d_t.inpddocno OR g_inpd_d[g_detail_idx].inpdseq != g_inpd_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.inpdsite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd_d[g_detail_idx].inpdsite != g_inpd_d_t.inpdsite OR g_inpd_d[g_detail_idx].inpddocno != g_inpd_d_t.inpddocno OR g_inpd_d[g_detail_idx].inpdseq != g_inpd_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inpddocno_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd2_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd2_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd2_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd2_d[g_detail_idx].inpdsite != g_inpd2_d_t.inpdsite OR g_inpd2_d[g_detail_idx].inpddocno != g_inpd2_d_t.inpddocno OR g_inpd2_d[g_detail_idx].inpdseq != g_inpd2_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd2_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd2_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd2_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inpdseq_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd2_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd2_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd2_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd2_d[g_detail_idx].inpdsite != g_inpd2_d_t.inpdsite OR g_inpd2_d[g_detail_idx].inpddocno != g_inpd2_d_t.inpddocno OR g_inpd2_d[g_detail_idx].inpdseq != g_inpd2_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd2_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd2_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd2_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.inpdsite_2" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_inpd2_d[g_detail_idx].inpdsite IS NOT NULL AND g_inpd2_d[g_detail_idx].inpddocno IS NOT NULL AND g_inpd2_d[g_detail_idx].inpdseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_inpd2_d[g_detail_idx].inpdsite != g_inpd2_d_t.inpdsite OR g_inpd2_d[g_detail_idx].inpddocno != g_inpd2_d_t.inpddocno OR g_inpd2_d[g_detail_idx].inpdseq != g_inpd2_d_t.inpdseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd2_d[g_detail_idx].inpdsite ||"' AND "|| "inpddocno = '"||g_inpd2_d[g_detail_idx].inpddocno ||"' AND "|| "inpdseq = '"||g_inpd2_d[g_detail_idx].inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.c.page1.inpd001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd001 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd001 TO inpd001              #

            NEXT FIELD inpd001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001_12()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd004 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd004 TO inpd004              #

            NEXT FIELD inpd004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaa001_12()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd005 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd005 TO inpd005              #

            NEXT FIELD inpd005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inab002_3()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd006 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd006 TO inpd006              #

            NEXT FIELD inpd006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd010 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd010 TO inpd010              #

            NEXT FIELD inpd010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd012" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd012 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd012 TO inpd012              #

            NEXT FIELD inpd012                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd014             #給予default值
            LET g_qryparam.default2 = "" #g_inpd_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd014 = g_qryparam.return1              
            #LET g_inpd_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_inpd_d[l_ac].inpd014 TO inpd014              #
            #DISPLAY g_inpd_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD inpd014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.inpd054" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_d[l_ac].inpd054             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpd_d[l_ac].inpd054 = g_qryparam.return1              

            DISPLAY g_inpd_d[l_ac].inpd054 TO inpd054              #

            NEXT FIELD inpd054                          #返回原欄位

]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE   l_cnt   LIKE type_t.num5]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_cnt = 0
   SELECT COUNT(*) INTO l_cnt FROM inpa_t,inpb_t
    WHERE inpaent = inpbent
      AND inpadocno = inpbdocno
      AND inpaent = g_enterprise
      AND inpastus = 'Y'
      AND inpa001 = '1'
      AND inpa011 = 'Y'
      AND inpb001 = '10'
      AND inpadocdt <= g_today
      AND (inpa005 IS NULL OR inpa005 >= g_today)
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF
   IF l_cnt < 1 THEN
      CALL cl_err('','ain-00277',1)
      RETURN
   END IF]]>
  </point>
  <point name="query.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_inpa001  LIKE inpa_t.inpa001]]>
  </point>
  <point name="query.more_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CONSTRUCT l_wc ON inpd008,inpa001,inpddocno,inpd054,inpd052 
                    FROM inpd008,inpa001,l_inpddocno,l_inpd054,l_inpd052

         BEFORE CONSTRUCT     
            CALL cl_qbe_init()
            LET l_inpa001 = 1
            DISPLAY l_inpa001 TO inpa001
         ON ACTION controlp INFIELD inpd008
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inpadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd008  #顯示到畫面上
            NEXT FIELD inpd008          

         ON ACTION controlp INFIELD l_inpddocno
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inpddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_inpddocno #顯示到畫面上
            NEXT FIELD l_inpddocno
            
         ON ACTION controlp INFIELD l_inpd054
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_inpd054 #顯示到畫面上
            NEXT FIELD l_inpd054
            
         ON ACTION controlp INFIELD l_inpd052
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_inpd052 #顯示到畫面上
            NEXT FIELD l_inpd052            
            
         AFTER CONSTRUCT     
            CALL aint842_b_fill(l_wc)                  
      END CONSTRUCT]]>
  </point>
  <section id="aint842.b_fill" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aint842_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE inpdsite,inpd009,inpddocno,inpdseq,inpd001,inpd005,inpd006,inpd007,inpd002, 
       inpd003,inpd004,inpd010,inpd050,inpd012,inpd051,inpd054,inpd055,inpd014,inpd015,inpdsite,inpddocno, 
       inpdseq,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt, 
       inpdpstid,inpdpstdt ,t1.imaal003 ,t2.imaal004 ,t3.inaa002 ,t5.imaal003 ,t6.oocal003 ,t7.oocal003 , 
       t8.oofa011 ,t9.oofa011 ,t10.ooefl003 ,t11.oofa011 ,t12.ooefl003 ,t13.oofa011 ,t14.oofa011 ,t15.oofa011 FROM inpd_t", 

               "",
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=inpd001 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent='"||g_enterprise||"' AND t2.imaal001=inpd001 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN inaa_t t3 ON t3.inaaent='"||g_enterprise||"' AND t3.inaasite=inpdsite AND t3.inaa001=inpd005  ",
               " LEFT JOIN imaal_t t5 ON t5.imaalent='"||g_enterprise||"' AND t5.imaal001=inpd004 AND t5.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent='"||g_enterprise||"' AND t6.oocal001=inpd010 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t7 ON t7.oocalent='"||g_enterprise||"' AND t7.oocal001=inpd012 AND t7.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=inpd054  ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=inpdownid  ",
               " LEFT JOIN ooefl_t t10 ON t10.ooeflent='"||g_enterprise||"' AND t10.ooefl001=inpdowndp AND t10.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t11 ON t11.oofaent='"||g_enterprise||"' AND t11.oofa002='2' AND t11.oofa003=inpdcrtid  ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent='"||g_enterprise||"' AND t12.ooefl001=inpdcrtdp AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t13 ON t13.oofaent='"||g_enterprise||"' AND t13.oofa002='2' AND t13.oofa003=inpdmodid  ",
               " LEFT JOIN oofa_t t14 ON t14.oofaent='"||g_enterprise||"' AND t14.oofa002='2' AND t14.oofa003=inpdcnfid  ",
               " LEFT JOIN oofa_t t15 ON t15.oofaent='"||g_enterprise||"' AND t15.oofa002='2' AND t15.oofa003=inpdpstid  ",
 
               " WHERE inpdent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, cl_sql_add_filter("inpd_t"),
                      " ORDER BY inpd_t.inpdsite,inpd_t.inpddocno,inpd_t.inpdseq"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE aint842_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aint842_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_inpd_d.clear()
   CALL g_inpd2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_inpd_d[l_ac].inpdsite,g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpddocno, 
       g_inpd_d[l_ac].inpdseq,g_inpd_d[l_ac].inpd001,g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006,g_inpd_d[l_ac].inpd007, 
       g_inpd_d[l_ac].inpd002,g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004,g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd050, 
       g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd051,g_inpd_d[l_ac].inpd054,g_inpd_d[l_ac].inpd055,g_inpd_d[l_ac].inpd014, 
       g_inpd_d[l_ac].inpd015,g_inpd2_d[l_ac].inpdsite,g_inpd2_d[l_ac].inpddocno,g_inpd2_d[l_ac].inpdseq, 
       g_inpd2_d[l_ac].inpdownid,g_inpd2_d[l_ac].inpdowndp,g_inpd2_d[l_ac].inpdcrtid,g_inpd2_d[l_ac].inpdcrtdp, 
       g_inpd2_d[l_ac].inpdcrtdt,g_inpd2_d[l_ac].inpdmodid,g_inpd2_d[l_ac].inpdmoddt,g_inpd2_d[l_ac].inpdcnfid, 
       g_inpd2_d[l_ac].inpdcnfdt,g_inpd2_d[l_ac].inpdpstid,g_inpd2_d[l_ac].inpdpstdt,g_inpd_d[l_ac].inpd001_desc, 
       g_inpd_d[l_ac].inpd001_desc_desc,g_inpd_d[l_ac].inpd005_desc,g_inpd_d[l_ac].inpd004_desc,g_inpd_d[l_ac].inpd010_desc, 
       g_inpd_d[l_ac].inpd012_desc,g_inpd_d[l_ac].inpd054_desc,g_inpd2_d[l_ac].inpdownid_desc,g_inpd2_d[l_ac].inpdowndp_desc, 
       g_inpd2_d[l_ac].inpdcrtid_desc,g_inpd2_d[l_ac].inpdcrtdp_desc,g_inpd2_d[l_ac].inpdmodid_desc, 
       g_inpd2_d[l_ac].inpdcnfid_desc,g_inpd2_d[l_ac].inpdpstid_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aint842_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("inpd_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
   
   CALL g_inpd_d.deleteElement(g_inpd_d.getLength())   
   CALL g_inpd2_d.deleteElement(g_inpd2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_inpd_d.getLength()
      LET g_inpd2_d[l_ac].inpdsite = g_inpd_d[l_ac].inpdsite 
      LET g_inpd2_d[l_ac].inpddocno = g_inpd_d[l_ac].inpddocno 
      LET g_inpd2_d[l_ac].inpdseq = g_inpd_d[l_ac].inpdseq 
 
   END FOR
   
   IF g_cnt > g_inpd_d.getLength() THEN
      LET l_ac = g_inpd_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_inpd_d.getLength()
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE aint842_pb
   
END FUNCTION
]]>
  </section>
  <section id="aint842.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint842_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " inpdsite = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " inpddocno = ", g_argv[02], " AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " inpdseq = ", g_argv[03], " AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aint842.delete" ver="2" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aint842_delete()
   DEFINE li_idx           LIKE type_t.num5
   DEFINE li_detail_tmp    LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_inpd_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT aint842_lock_b("inpd_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_inpd_d.getLength()
      IF g_inpd_d[li_idx].inpdsite IS NOT NULL
         AND g_inpd_d_t.inpddocno IS NOT NULL
         AND g_inpd_d_t.inpdseq IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM inpd_t
          WHERE inpdent = g_enterprise AND 
                inpdsite = g_inpd_d[li_idx].inpdsite
                AND inpddocno = g_inpd_d[li_idx].inpddocno
                AND inpdseq = g_inpd_d[li_idx].inpdseq
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            CALL cl_err("inpd_t",SQLCA.sqlcode,1)
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL aint842_delete_b('inpd_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   #刷新資料
   CALL aint842_b_fill(g_wc2)
            
END FUNCTION
]]>
  </section>
  <section id="aint842.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint842_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "inpd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'inpd_t' THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM inpd_t
       WHERE inpdent = g_enterprise AND
         inpdsite = ps_keys_bak[1] AND inpddocno = ps_keys_bak[2] AND inpdseq = ps_keys_bak[3]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aint842.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000017
#+ 
#+ Filename...: aint842
#+ Description: 現有庫存復盤維護作業（多欄）
#+ Creator....: 01534(2014/06/13)
#+ Modifier...: 01534(2014/06/28)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aint842.detail_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aint842_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_inpd2_d[l_ac].inpdownid_desc = cl_get_username(g_inpd2_d[l_ac].inpdownid)
      #LET g_inpd2_d[l_ac].inpdowndp_desc = cl_get_deptname(g_inpd2_d[l_ac].inpdowndp)
      #LET g_inpd2_d[l_ac].inpdcrtid_desc = cl_get_username(g_inpd2_d[l_ac].inpdcrtid)
      #LET g_inpd2_d[l_ac].inpdcrtdp_desc = cl_get_deptname(g_inpd2_d[l_ac].inpdcrtdp)
      #LET g_inpd2_d[l_ac].inpdmodid_desc = cl_get_username(g_inpd2_d[l_ac].inpdmodid)
      #LET g_inpd2_d[l_ac].inpdcnfid_desc = cl_get_deptname(g_inpd2_d[l_ac].inpdcnfid)
      #LET g_inpd2_d[l_ac].inpdpstid_desc = cl_get_deptname(g_inpd2_d[l_ac].inpdpstid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aint842.global" ver="4" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_inpd_d RECORD
       inpdsite LIKE inpd_t.inpdsite, 
   inpd009 LIKE inpd_t.inpd009, 
   inpddocno LIKE inpd_t.inpddocno, 
   inpdseq LIKE inpd_t.inpdseq, 
   inpd001 LIKE inpd_t.inpd001, 
   inpd001_desc LIKE type_t.chr500, 
   inpd001_desc_desc LIKE type_t.chr500, 
   inpd005 LIKE inpd_t.inpd005, 
   inpd005_desc LIKE type_t.chr500, 
   inpd006 LIKE inpd_t.inpd006, 
   inpd006_desc LIKE type_t.chr500, 
   inpd007 LIKE inpd_t.inpd007, 
   inpd002 LIKE inpd_t.inpd002, 
   inpd003 LIKE inpd_t.inpd003, 
   inpd004 LIKE inpd_t.inpd004, 
   inpd004_desc LIKE type_t.chr500, 
   inpd010 LIKE inpd_t.inpd010, 
   inpd010_desc LIKE type_t.chr500, 
   inpd050 LIKE inpd_t.inpd050, 
   inpd012 LIKE inpd_t.inpd012, 
   inpd012_desc LIKE type_t.chr500, 
   inpd051 LIKE inpd_t.inpd051, 
   inpd054 LIKE inpd_t.inpd054, 
   inpd054_desc LIKE type_t.chr500, 
   inpd055 LIKE inpd_t.inpd055, 
   inpd014 LIKE inpd_t.inpd014, 
   inpd014_desc LIKE type_t.chr80, 
   inpd015 LIKE inpd_t.inpd015
       END RECORD
PRIVATE TYPE type_g_inpd2_d RECORD
       inpdsite LIKE inpd_t.inpdsite, 
   inpddocno LIKE inpd_t.inpddocno, 
   inpdseq LIKE inpd_t.inpdseq, 
   inpdownid LIKE inpd_t.inpdownid, 
   inpdownid_desc LIKE type_t.chr500, 
   inpdowndp LIKE inpd_t.inpdowndp, 
   inpdowndp_desc LIKE type_t.chr500, 
   inpdcrtid LIKE inpd_t.inpdcrtid, 
   inpdcrtid_desc LIKE type_t.chr500, 
   inpdcrtdp LIKE inpd_t.inpdcrtdp, 
   inpdcrtdp_desc LIKE type_t.chr500, 
   inpdcrtdt DATETIME YEAR TO SECOND, 
   inpdmodid LIKE inpd_t.inpdmodid, 
   inpdmodid_desc LIKE type_t.chr500, 
   inpdmoddt DATETIME YEAR TO SECOND, 
   inpdcnfid LIKE inpd_t.inpdcnfid, 
   inpdcnfid_desc LIKE type_t.chr500, 
   inpdcnfdt DATETIME YEAR TO SECOND, 
   inpdpstid LIKE inpd_t.inpdpstid, 
   inpdpstid_desc LIKE type_t.chr500, 
   inpdpstdt DATETIME YEAR TO SECOND
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_inpd_d          DYNAMIC ARRAY OF type_g_inpd_d
DEFINE g_inpd_d_t        type_g_inpd_d
DEFINE g_inpd2_d   DYNAMIC ARRAY OF type_g_inpd2_d
DEFINE g_inpd2_d_t type_g_inpd2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint842.init" ver="1" status="" src="s">
    <![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aint842_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aint842_default_search()
   
END FUNCTION
]]>
  </section>
  <section id="aint842.insert" ver="2" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint842_insert()
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point                
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL aint842_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aint842.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aint842_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "inpd_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO inpd_t
                  (inpdent,
                   inpdsite,inpddocno,inpdseq
                   ,inpd009,inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd050,inpd012,inpd051,inpd054,inpd055,inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt,inpdpstid,inpdpstdt) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpd001,g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006, 
                       g_inpd_d[l_ac].inpd007,g_inpd_d[l_ac].inpd002,g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004, 
                       g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd050,g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd051, 
                       g_inpd_d[l_ac].inpd054,g_inpd_d[l_ac].inpd055,g_inpd_d[l_ac].inpd014,g_inpd_d[l_ac].inpd015, 
                       g_inpd2_d[l_ac].inpdownid,g_inpd2_d[l_ac].inpdowndp,g_inpd2_d[l_ac].inpdcrtid, 
                       g_inpd2_d[l_ac].inpdcrtdp,g_inpd2_d[l_ac].inpdcrtdt,g_inpd2_d[l_ac].inpdmodid, 
                       g_inpd2_d[l_ac].inpdmoddt,g_inpd2_d[l_ac].inpdcnfid,g_inpd2_d[l_ac].inpdcnfdt, 
                       g_inpd2_d[l_ac].inpdpstid,g_inpd2_d[l_ac].inpdpstdt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("inpd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
  </section>
  <section id="aint842.link_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動單身idx
PRIVATE FUNCTION aint842_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aint842.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint842_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL aint842_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "inpd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aint842_bcl USING g_enterprise,
                                       g_inpd_d[g_detail_idx].inpdsite,g_inpd_d[g_detail_idx].inpddocno, 
                                           g_inpd_d[g_detail_idx].inpdseq
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("aint842_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aint842.main" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inpdsite,inpd009,inpddocno,inpdseq,inpd001,inpd005,inpd006,inpd007,inpd002, 
       inpd003,inpd004,inpd010,inpd050,inpd012,inpd051,inpd054,inpd055,inpd014,inpd015,inpdsite,inpddocno, 
       inpdseq,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt, 
       inpdpstid,inpdpstdt FROM inpd_t WHERE inpdent=? AND inpdsite=? AND inpddocno=? AND inpdseq=?  
       FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint842_bcl CURSOR FROM g_forupd_sql
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint842 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint842_init()   
 
      #進入選單 Menu (="N")
      CALL aint842_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint842
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aint842.modify" ver="6" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint842_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_inpd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_inpd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint842_b_fill(g_wc2)
            LET g_detail_cnt = g_inpd_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_inpd_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_inpd_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_inpd_d[l_ac].inpdsite IS NOT NULL
               AND g_inpd_d[l_ac].inpddocno IS NOT NULL
               AND g_inpd_d[l_ac].inpdseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_inpd_d_t.* = g_inpd_d[l_ac].*  #BACKUP
               IF NOT aint842_lock_b("inpd_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint842_bcl INTO g_inpd_d[l_ac].inpdsite,g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpddocno, 
                      g_inpd_d[l_ac].inpdseq,g_inpd_d[l_ac].inpd001,g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006, 
                      g_inpd_d[l_ac].inpd007,g_inpd_d[l_ac].inpd002,g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004, 
                      g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd050,g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd051, 
                      g_inpd_d[l_ac].inpd054,g_inpd_d[l_ac].inpd055,g_inpd_d[l_ac].inpd014,g_inpd_d[l_ac].inpd015 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_inpd_d_t.inpdsite,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aint842_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_inpd_d_t.* TO NULL
            INITIALIZE g_inpd_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_inpd2_d[l_ac].inpdownid = g_user
      LET g_inpd2_d[l_ac].inpdowndp = g_dept
      LET g_inpd2_d[l_ac].inpdcrtid = g_user
      LET g_inpd2_d[l_ac].inpdcrtdp = g_dept 
      LET g_inpd2_d[l_ac].inpdcrtdt = cl_get_current()
      LET g_inpd2_d[l_ac].inpdmodid = ""
      LET g_inpd2_d[l_ac].inpdmoddt = ""
 
 
                  LET g_inpd_d[l_ac].inpd009 = "Y"
 
            LET g_inpd_d_t.* = g_inpd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint842_set_entry_b("a")
            CALL aint842_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_inpd_d[li_reproduce_target].* = g_inpd_d[li_reproduce].*
               LET g_inpd2_d[li_reproduce_target].* = g_inpd2_d[li_reproduce].*
 
               LET g_inpd_d[g_inpd_d.getLength()].inpdsite = NULL
               LET g_inpd_d[g_inpd_d.getLength()].inpddocno = NULL
               LET g_inpd_d[g_inpd_d.getLength()].inpdseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM inpd_t 
             WHERE inpdent = g_enterprise AND inpdsite = g_inpd_d[l_ac].inpdsite
                                       AND inpddocno = g_inpd_d[l_ac].inpddocno
                                       AND inpdseq = g_inpd_d[l_ac].inpdseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
               CALL aint842_insert_b('inpd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_inpd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint842_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (inpdsite = '", g_inpd_d[l_ac].inpdsite, "' "
                                  ," AND inpddocno = '", g_inpd_d[l_ac].inpddocno, "' "
                                  ," AND inpdseq = '", g_inpd_d[l_ac].inpdseq, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_inpd_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_inpd_d.deleteElement(l_ac)
               NEXT FIELD inpdsite
            END IF
            IF g_inpd_d[l_ac].inpdsite IS NOT NULL
               AND g_inpd_d_t.inpddocno IS NOT NULL
               AND g_inpd_d_t.inpdseq IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM inpd_t
                WHERE inpdent = g_enterprise AND 
                      inpdsite = g_inpd_d_t.inpdsite
                      AND inpddocno = g_inpd_d_t.inpddocno
                      AND inpdseq = g_inpd_d_t.inpdseq
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("inpd_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aint842_bcl
               LET l_count = g_inpd_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL aint842_delete_b('inpd_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD inpdsite
            #add-point:BEFORE FIELD inpdsite
            {<point name="input.b.page1.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdsite
            
            #add-point:AFTER FIELD inpdsite
            {<point name="input.a.page1.inpdsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpdsite
            #add-point:ON CHANGE inpdsite
            {<point name="input.g.page1.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd009
            #add-point:BEFORE FIELD inpd009
            {<point name="input.b.page1.inpd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd009
            
            #add-point:AFTER FIELD inpd009
            {<point name="input.a.page1.inpd009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd009
            #add-point:ON CHANGE inpd009
            {<point name="input.g.page1.inpd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpddocno
            
            #add-point:AFTER FIELD inpddocno
            {<point name="input.a.page1.inpddocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpddocno
            #add-point:BEFORE FIELD inpddocno
            {<point name="input.b.page1.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpddocno
            #add-point:ON CHANGE inpddocno
            {<point name="input.g.page1.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdseq
            #add-point:BEFORE FIELD inpdseq
            {<point name="input.b.page1.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdseq
            
            #add-point:AFTER FIELD inpdseq
            {<point name="input.a.page1.inpdseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpdseq
            #add-point:ON CHANGE inpdseq
            {<point name="input.g.page1.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd001
            
            #add-point:AFTER FIELD inpd001
            {<point name="input.a.page1.inpd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd001
            #add-point:BEFORE FIELD inpd001
            {<point name="input.b.page1.inpd001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd001
            #add-point:ON CHANGE inpd001
            {<point name="input.g.page1.inpd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd005
            
            #add-point:AFTER FIELD inpd005
            {<point name="input.a.page1.inpd005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd005
            #add-point:BEFORE FIELD inpd005
            {<point name="input.b.page1.inpd005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd005
            #add-point:ON CHANGE inpd005
            {<point name="input.g.page1.inpd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd006
            
            #add-point:AFTER FIELD inpd006
            {<point name="input.a.page1.inpd006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd006
            #add-point:BEFORE FIELD inpd006
            {<point name="input.b.page1.inpd006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd006
            #add-point:ON CHANGE inpd006
            {<point name="input.g.page1.inpd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd007
            #add-point:BEFORE FIELD inpd007
            {<point name="input.b.page1.inpd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd007
            
            #add-point:AFTER FIELD inpd007
            {<point name="input.a.page1.inpd007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd007
            #add-point:ON CHANGE inpd007
            {<point name="input.g.page1.inpd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd002
            #add-point:BEFORE FIELD inpd002
            {<point name="input.b.page1.inpd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd002
            
            #add-point:AFTER FIELD inpd002
            {<point name="input.a.page1.inpd002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd002
            #add-point:ON CHANGE inpd002
            {<point name="input.g.page1.inpd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd003
            #add-point:BEFORE FIELD inpd003
            {<point name="input.b.page1.inpd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd003
            
            #add-point:AFTER FIELD inpd003
            {<point name="input.a.page1.inpd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd003
            #add-point:ON CHANGE inpd003
            {<point name="input.g.page1.inpd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd004
            
            #add-point:AFTER FIELD inpd004
            {<point name="input.a.page1.inpd004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd004
            #add-point:BEFORE FIELD inpd004
            {<point name="input.b.page1.inpd004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd004
            #add-point:ON CHANGE inpd004
            {<point name="input.g.page1.inpd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd010
            
            #add-point:AFTER FIELD inpd010
            {<point name="input.a.page1.inpd010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd010
            #add-point:BEFORE FIELD inpd010
            {<point name="input.b.page1.inpd010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd010
            #add-point:ON CHANGE inpd010
            {<point name="input.g.page1.inpd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd050
            #add-point:BEFORE FIELD inpd050
            {<point name="input.b.page1.inpd050" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd050
            
            #add-point:AFTER FIELD inpd050
            {<point name="input.a.page1.inpd050" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd050
            #add-point:ON CHANGE inpd050
            {<point name="input.g.page1.inpd050" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd012
            
            #add-point:AFTER FIELD inpd012
            {<point name="input.a.page1.inpd012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd012
            #add-point:BEFORE FIELD inpd012
            {<point name="input.b.page1.inpd012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd012
            #add-point:ON CHANGE inpd012
            {<point name="input.g.page1.inpd012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd051
            #add-point:BEFORE FIELD inpd051
            {<point name="input.b.page1.inpd051" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd051
            
            #add-point:AFTER FIELD inpd051
            {<point name="input.a.page1.inpd051" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd051
            #add-point:ON CHANGE inpd051
            {<point name="input.g.page1.inpd051" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd054
            
            #add-point:AFTER FIELD inpd054
            {<point name="input.a.page1.inpd054" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd054
            #add-point:BEFORE FIELD inpd054
            {<point name="input.b.page1.inpd054" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd054
            #add-point:ON CHANGE inpd054
            {<point name="input.g.page1.inpd054" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd055
            #add-point:BEFORE FIELD inpd055
            {<point name="input.b.page1.inpd055" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd055
            
            #add-point:AFTER FIELD inpd055
            {<point name="input.a.page1.inpd055" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd055
            #add-point:ON CHANGE inpd055
            {<point name="input.g.page1.inpd055" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd014
            
            #add-point:AFTER FIELD inpd014
            {<point name="input.a.page1.inpd014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd014
            #add-point:BEFORE FIELD inpd014
            {<point name="input.b.page1.inpd014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd014
            #add-point:ON CHANGE inpd014
            {<point name="input.g.page1.inpd014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd015
            #add-point:BEFORE FIELD inpd015
            {<point name="input.b.page1.inpd015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd015
            
            #add-point:AFTER FIELD inpd015
            {<point name="input.a.page1.inpd015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd015
            #add-point:ON CHANGE inpd015
            {<point name="input.g.page1.inpd015" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.inpdsite
         ON ACTION controlp INFIELD inpdsite
            #add-point:ON ACTION controlp INFIELD inpdsite
            {<point name="input.c.page1.inpdsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd009
         ON ACTION controlp INFIELD inpd009
            #add-point:ON ACTION controlp INFIELD inpd009
            {<point name="input.c.page1.inpd009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpddocno
         ON ACTION controlp INFIELD inpddocno
            #add-point:ON ACTION controlp INFIELD inpddocno
            {<point name="input.c.page1.inpddocno" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpdseq
         ON ACTION controlp INFIELD inpdseq
            #add-point:ON ACTION controlp INFIELD inpdseq
            {<point name="input.c.page1.inpdseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd001
         ON ACTION controlp INFIELD inpd001
            #add-point:ON ACTION controlp INFIELD inpd001
            {<point name="input.c.page1.inpd001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd005
         ON ACTION controlp INFIELD inpd005
            #add-point:ON ACTION controlp INFIELD inpd005
            {<point name="input.c.page1.inpd005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd006
         ON ACTION controlp INFIELD inpd006
            #add-point:ON ACTION controlp INFIELD inpd006
            {<point name="input.c.page1.inpd006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd007
         ON ACTION controlp INFIELD inpd007
            #add-point:ON ACTION controlp INFIELD inpd007
            {<point name="input.c.page1.inpd007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd002
         ON ACTION controlp INFIELD inpd002
            #add-point:ON ACTION controlp INFIELD inpd002
            {<point name="input.c.page1.inpd002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd003
         ON ACTION controlp INFIELD inpd003
            #add-point:ON ACTION controlp INFIELD inpd003
            {<point name="input.c.page1.inpd003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd004
         ON ACTION controlp INFIELD inpd004
            #add-point:ON ACTION controlp INFIELD inpd004
            {<point name="input.c.page1.inpd004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd010
         ON ACTION controlp INFIELD inpd010
            #add-point:ON ACTION controlp INFIELD inpd010
            {<point name="input.c.page1.inpd010" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd050
         ON ACTION controlp INFIELD inpd050
            #add-point:ON ACTION controlp INFIELD inpd050
            {<point name="input.c.page1.inpd050" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd012
         ON ACTION controlp INFIELD inpd012
            #add-point:ON ACTION controlp INFIELD inpd012
            {<point name="input.c.page1.inpd012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd051
         ON ACTION controlp INFIELD inpd051
            #add-point:ON ACTION controlp INFIELD inpd051
            {<point name="input.c.page1.inpd051" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd054
         ON ACTION controlp INFIELD inpd054
            #add-point:ON ACTION controlp INFIELD inpd054
            {<point name="input.c.page1.inpd054" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd055
         ON ACTION controlp INFIELD inpd055
            #add-point:ON ACTION controlp INFIELD inpd055
            {<point name="input.c.page1.inpd055" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd014
         ON ACTION controlp INFIELD inpd014
            #add-point:ON ACTION controlp INFIELD inpd014
            {<point name="input.c.page1.inpd014" />}
            #END add-point
 
         #Ctrlp:input.c.page1.inpd015
         ON ACTION controlp INFIELD inpd015
            #add-point:ON ACTION controlp INFIELD inpd015
            {<point name="input.c.page1.inpd015" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_inpd_d[l_ac].* = g_inpd_d_t.*
               CLOSE aint842_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_inpd_d[l_ac].inpdsite,-263,1)
               LET g_inpd_d[l_ac].* = g_inpd_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_inpd2_d[l_ac].inpdmodid = g_user 
LET g_inpd2_d[l_ac].inpdmoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE inpd_t SET (inpdsite,inpd009,inpddocno,inpdseq,inpd001,inpd005,inpd006,inpd007, 
                   inpd002,inpd003,inpd004,inpd010,inpd050,inpd012,inpd051,inpd054,inpd055,inpd014,inpd015, 
                   inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt, 
                   inpdpstid,inpdpstdt) = (g_inpd_d[l_ac].inpdsite,g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpddocno, 
                   g_inpd_d[l_ac].inpdseq,g_inpd_d[l_ac].inpd001,g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006, 
                   g_inpd_d[l_ac].inpd007,g_inpd_d[l_ac].inpd002,g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004, 
                   g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd050,g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd051, 
                   g_inpd_d[l_ac].inpd054,g_inpd_d[l_ac].inpd055,g_inpd_d[l_ac].inpd014,g_inpd_d[l_ac].inpd015, 
                   g_inpd2_d[l_ac].inpdownid,g_inpd2_d[l_ac].inpdowndp,g_inpd2_d[l_ac].inpdcrtid,g_inpd2_d[l_ac].inpdcrtdp, 
                   g_inpd2_d[l_ac].inpdcrtdt,g_inpd2_d[l_ac].inpdmodid,g_inpd2_d[l_ac].inpdmoddt,g_inpd2_d[l_ac].inpdcnfid, 
                   g_inpd2_d[l_ac].inpdcnfdt,g_inpd2_d[l_ac].inpdpstid,g_inpd2_d[l_ac].inpdpstdt)
                WHERE inpdent = g_enterprise AND
                  inpdsite = g_inpd_d_t.inpdsite #項次   
                  AND inpddocno = g_inpd_d_t.inpddocno  
                  AND inpdseq = g_inpd_d_t.inpdseq  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inpd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_inpd_d[g_detail_idx].inpdsite
               LET gs_keys_bak[1] = g_inpd_d_t.inpdsite
               LET gs_keys[2] = g_inpd_d[g_detail_idx].inpddocno
               LET gs_keys_bak[2] = g_inpd_d_t.inpddocno
               LET gs_keys[3] = g_inpd_d[g_detail_idx].inpdseq
               LET gs_keys_bak[3] = g_inpd_d_t.inpdseq
               CALL aint842_update_b('inpd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_inpd_d_t)
                     LET g_log2 = util.JSON.stringify(g_inpd_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aint842_unlock_b("inpd_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_inpd_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_inpd_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_inpd2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL aint842_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD inpdsite
            WHEN "s_detail2"
               NEXT FIELD inpdsite_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE aint842_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
  </section>
  <section id="aint842.modify_detail_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION aint842_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "inpdsite"
      WHEN "s_detail2"
         LET ls_return = "inpdsite_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
  </section>
  <section id="aint842.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="aint842.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint842.query" ver="2" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint842_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_inpd_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON inpdsite,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt, 
          inpdcnfid,inpdcnfdt,inpdpstid,inpdpstdt 
 
         FROM s_detail1[1].inpdsite,s_detail2[1].inpdownid,s_detail2[1].inpdowndp,s_detail2[1].inpdcrtid, 
             s_detail2[1].inpdcrtdp,s_detail2[1].inpdcrtdt,s_detail2[1].inpdmodid,s_detail2[1].inpdmoddt, 
             s_detail2[1].inpdcnfid,s_detail2[1].inpdcnfdt,s_detail2[1].inpdpstid,s_detail2[1].inpdpstdt  

      
         #此段落由子樣板a11產生
         ##----<<inpdcrtdt>>----
         AFTER FIELD inpdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdmoddt>>----
         AFTER FIELD inpdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdcnfdt>>----
         AFTER FIELD inpdcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdpstdt>>----
         AFTER FIELD inpdpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
                  #此段落由子樣板a01產生
         BEFORE FIELD inpdsite
            #add-point:BEFORE FIELD inpdsite
            {<point name="query.b.page1.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdsite
            
            #add-point:AFTER FIELD inpdsite
            {<point name="query.a.page1.inpdsite" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.inpdsite
         ON ACTION controlp INFIELD inpdsite
            #add-point:ON ACTION controlp INFIELD inpdsite
            {<point name="query.c.page1.inpdsite" />}
            #END add-point
 
  
         
                  #Ctrlp:construct.c.page2.inpdownid
         ON ACTION controlp INFIELD inpdownid
            #add-point:ON ACTION controlp INFIELD inpdownid
            {<point name="construct.c.page2.inpdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdownid
            #add-point:BEFORE FIELD inpdownid
            {<point name="query.b.page2.inpdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdownid
            
            #add-point:AFTER FIELD inpdownid
            {<point name="query.a.page2.inpdownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inpdowndp
         ON ACTION controlp INFIELD inpdowndp
            #add-point:ON ACTION controlp INFIELD inpdowndp
            {<point name="construct.c.page2.inpdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdowndp
            #add-point:BEFORE FIELD inpdowndp
            {<point name="query.b.page2.inpdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdowndp
            
            #add-point:AFTER FIELD inpdowndp
            {<point name="query.a.page2.inpdowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inpdcrtid
         ON ACTION controlp INFIELD inpdcrtid
            #add-point:ON ACTION controlp INFIELD inpdcrtid
            {<point name="construct.c.page2.inpdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcrtid
            #add-point:BEFORE FIELD inpdcrtid
            {<point name="query.b.page2.inpdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdcrtid
            
            #add-point:AFTER FIELD inpdcrtid
            {<point name="query.a.page2.inpdcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.inpdcrtdp
         ON ACTION controlp INFIELD inpdcrtdp
            #add-point:ON ACTION controlp INFIELD inpdcrtdp
            {<point name="construct.c.page2.inpdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcrtdp
            #add-point:BEFORE FIELD inpdcrtdp
            {<point name="query.b.page2.inpdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdcrtdp
            
            #add-point:AFTER FIELD inpdcrtdp
            {<point name="query.a.page2.inpdcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcrtdt
            #add-point:BEFORE FIELD inpdcrtdt
            {<point name="query.b.page2.inpdcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inpdmodid
         ON ACTION controlp INFIELD inpdmodid
            #add-point:ON ACTION controlp INFIELD inpdmodid
            {<point name="construct.c.page2.inpdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdmodid
            #add-point:BEFORE FIELD inpdmodid
            {<point name="query.b.page2.inpdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdmodid
            
            #add-point:AFTER FIELD inpdmodid
            {<point name="query.a.page2.inpdmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdmoddt
            #add-point:BEFORE FIELD inpdmoddt
            {<point name="query.b.page2.inpdmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inpdcnfid
         ON ACTION controlp INFIELD inpdcnfid
            #add-point:ON ACTION controlp INFIELD inpdcnfid
            {<point name="construct.c.page2.inpdcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcnfid
            #add-point:BEFORE FIELD inpdcnfid
            {<point name="query.b.page2.inpdcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdcnfid
            
            #add-point:AFTER FIELD inpdcnfid
            {<point name="query.a.page2.inpdcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcnfdt
            #add-point:BEFORE FIELD inpdcnfdt
            {<point name="query.b.page2.inpdcnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.inpdpstid
         ON ACTION controlp INFIELD inpdpstid
            #add-point:ON ACTION controlp INFIELD inpdpstid
            {<point name="construct.c.page2.inpdpstid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdpstid
            #add-point:BEFORE FIELD inpdpstid
            {<point name="query.b.page2.inpdpstid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdpstid
            
            #add-point:AFTER FIELD inpdpstid
            {<point name="query.a.page2.inpdpstid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdpstdt
            #add-point:BEFORE FIELD inpdpstdt
            {<point name="query.b.page2.inpdpstdt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL aint842_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
  </section>
  <section id="aint842.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aint842_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
  </section>
  <section id="aint842.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aint842_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
  </section>
  <section id="aint842.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aint842.ui_dialog" ver="3" status="" src="s">
    <![CDATA[#+ 功能選單 
PRIVATE FUNCTION aint842_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aint842_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_inpd_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_inpd2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body2.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body2.before_display2"/>}
               #end add-point
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row2"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            CALL DIALOG.setSelectionMode("s_detail2", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION batch_confirm
            LET g_action_choice="batch_confirm"
            IF cl_auth_chk_act("batch_confirm") THEN
               
               #add-point:ON ACTION batch_confirm
               {<point name="menu.batch_confirm" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint842_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint842_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint842_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint842_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint842_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION store_query
            LET g_action_choice="store_query"
            IF cl_auth_chk_act("store_query") THEN
               
               #add-point:ON ACTION store_query
               {<point name="menu.store_query" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
  </section>
  <section id="aint842.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint842_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aint842_bcl
   #END IF
   
 
 
END FUNCTION
]]>
  </section>
  <section id="aint842.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aint842_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "inpd_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "inpd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE inpd_t 
         SET (inpdsite,inpddocno,inpdseq
              ,inpd009,inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd050,inpd012,inpd051,inpd054,inpd055,inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid,inpdcnfdt,inpdpstid,inpdpstdt) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_inpd_d[l_ac].inpd009,g_inpd_d[l_ac].inpd001,g_inpd_d[l_ac].inpd005,g_inpd_d[l_ac].inpd006, 
                  g_inpd_d[l_ac].inpd007,g_inpd_d[l_ac].inpd002,g_inpd_d[l_ac].inpd003,g_inpd_d[l_ac].inpd004, 
                  g_inpd_d[l_ac].inpd010,g_inpd_d[l_ac].inpd050,g_inpd_d[l_ac].inpd012,g_inpd_d[l_ac].inpd051, 
                  g_inpd_d[l_ac].inpd054,g_inpd_d[l_ac].inpd055,g_inpd_d[l_ac].inpd014,g_inpd_d[l_ac].inpd015, 
                  g_inpd2_d[l_ac].inpdownid,g_inpd2_d[l_ac].inpdowndp,g_inpd2_d[l_ac].inpdcrtid,g_inpd2_d[l_ac].inpdcrtdp, 
                  g_inpd2_d[l_ac].inpdcrtdt,g_inpd2_d[l_ac].inpdmodid,g_inpd2_d[l_ac].inpdmoddt,g_inpd2_d[l_ac].inpdcnfid, 
                  g_inpd2_d[l_ac].inpdcnfdt,g_inpd2_d[l_ac].inpdpstid,g_inpd2_d[l_ac].inpdpstdt) 
         WHERE inpdsite = ps_keys_bak[1] AND inpddocno = ps_keys_bak[2] AND inpdseq = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("inpd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
  </section>
</add_points>
