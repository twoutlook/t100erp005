<add_points prog="aini410" std_prog="aini410" erpver="1.0" module="AIN" ver="1" env="s" zone="t10dev" booking="Y" type="M" identity="s" section_flag="N">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
    <start_arg value="" status="" />
  </other>
  <point name="b_fill.define" cite_std="N" status="" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[   DEFINE l_where           STRING]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[   CALL s_aooi500_sql_where(g_prog,'infcsite') RETURNING l_where
   LET p_wc2 = p_wc2," AND ",l_where
   LET p_wc2  = p_wc2.trim() ]]>
</point>
  <point name="construct.c.page1.infc001" cite_std="N" status="" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_infc001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO infc001  #顯示到畫面上
            NEXT FIELD infc001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.infc002" cite_std="N" status="u" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '2116'
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO infc002  #顯示到畫面上
            NEXT FIELD infc002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.infcsite" cite_std="N" status="" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'infcsite',g_site)
            CALL q_ooef001_24()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO infcsite  #顯示到畫面上
            NEXT FIELD infcsite                     #返回原欄位
    

]]>
</point>
  <point name="input.a.page1.infc001" cite_std="N" status="" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_infc_d[g_detail_idx].infcsite IS NOT NULL AND g_infc_d[g_detail_idx].infc001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_infc_d[g_detail_idx].infcsite != g_infc_d_t.infcsite OR g_infc_d[g_detail_idx].infc001 != g_infc_d_t.infc001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM infc_t WHERE "||"infcent = '" ||g_enterprise|| "' AND "||"infcsite = '"||g_infc_d[g_detail_idx].infcsite ||"' AND "|| "infc001 = '"||g_infc_d[g_detail_idx].infc001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.infc002" cite_std="N" status="u" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_infc_d[l_ac].infc002) THEN
               LET l_cnt1 = 0 
                SELECT COUNT(*) INTO l_cnt1 
                  FROM oocq_t
                 WHERE oocqent = g_enterprise 
                   AND oocqstus = 'Y'                 
                   AND oocq001  =  '2116'
                   AND oocq002  = g_infc_d[l_ac].infc002
                IF l_cnt1 <= 0 THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = 'ain-00409'
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   NEXT FIELD infc002
                END IF
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_infc_d[l_ac].infc002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2116' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_infc_d[l_ac].infc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_infc_d[l_ac].infc002_desc

]]>
</point>
  <point name="input.a.page1.infc003" cite_std="N" status="u" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_infc_d[l_ac].infc003) THEN 
               IF g_infc_d[l_ac].infc003 <= 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00408'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            END IF 

]]>
</point>
  <point name="input.a.page1.infcsite" cite_std="N" status="u" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_infc_d[g_detail_idx].infcsite IS NOT NULL AND g_infc_d[g_detail_idx].infc001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_infc_d[g_detail_idx].infcsite != g_infc_d_t.infcsite OR g_infc_d[g_detail_idx].infc001 != g_infc_d_t.infc001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM infc_t WHERE "||"infcent = '" ||g_enterprise|| "' AND "||"infcsite = '"||g_infc_d[g_detail_idx].infcsite ||"' AND "|| "infc001 = '"||g_infc_d[g_detail_idx].infc001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_infc_d[l_ac].infcsite) THEN
               CALL s_aooi500_chk(g_prog,'infcsite',g_infc_d[l_ac].infcsite,g_site) RETURNING l_success,l_errno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = g_infc_d[l_ac].infcsite
                  LET g_errparam.code   = l_errno
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()

                  LET g_infc_d[l_ac].infcsite = g_infc_d_t.infcsite
                  CALL s_desc_get_department_desc(g_infc_d[l_ac].infcsite) RETURNING g_infc_d[l_ac].infcsite_desc
                  DISPLAY BY NAME g_infc_d[l_ac].infcsite,g_infc_d[l_ac].infcsite_desc
                  NEXT FIELD CURRENT
               END IF
            END IF 

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_infc_d[l_ac].infcsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_infc_d[l_ac].infcsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_infc_d[l_ac].infcsite_desc

]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[           LET g_infc_d[l_ac].infcsite = g_site
           INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_infc_d[l_ac].infcsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_infc_d[l_ac].infcsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_infc_d[l_ac].infcsite_desc]]>
</point>
  <point name="input.c.page1.infc002" cite_std="N" status="u" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_infc_d[l_ac].infc002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = '2116'
            CALL q_oocq002()                                 #呼叫開窗
                          

            DISPLAY g_infc_d[l_ac].infc002 TO infc002              #
            
            LET g_infc_d[l_ac].infc002 = g_qryparam.return1 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_infc_d[l_ac].infc002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2116' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_infc_d[l_ac].infc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_infc_d[l_ac].infc002_desc
            LET g_infc_d[l_ac].infc002 = g_qryparam.return1
           
            NEXT FIELD infc002                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.infcsite" cite_std="N" status="" ver="1" new="N" src="s" readonly="" mark_hard="N">
<![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_infc_d[l_ac].infcsite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = s_aooi500_q_where(g_prog,'infcsite',g_site)

            CALL q_ooef001_24()                                #呼叫開窗

            LET g_infc_d[l_ac].infcsite = g_qryparam.return1              

            DISPLAY g_infc_d[l_ac].infcsite TO infcsite              #

            NEXT FIELD infcsite                          #返回原欄位

]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.variable_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.exporttoexcel" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.b_exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.infc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.infc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.infc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.infc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.infc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infc008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infc008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.infc008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.infcstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.infcstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.infcstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.more_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_errno               LIKE type_t.chr10
   DEFINE  l_cnt1                 LIKE type_t.num5 ]]>
</point>
  <point name="modify.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_bak" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.infcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.infc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.infc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.infc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.infc004" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_infc_d[l_ac].infc004) THEN 
               IF g_infc_d[l_ac].infc004 <= 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00408'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
</point>
  <point name="input.g.page1.infc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.infc005" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_infc_d[l_ac].infc005) THEN 
               IF g_infc_d[l_ac].infc005 <= 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00408'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
</point>
  <point name="input.g.page1.infc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.infc006" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_infc_d[l_ac].infc006) THEN 
               IF g_infc_d[l_ac].infc006 <= 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00408'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
</point>
  <point name="input.g.page1.infc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.infc007" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[            IF NOT cl_null(g_infc_d[l_ac].infc007) THEN 
               IF g_infc_d[l_ac].infc007 <= 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ain-00408'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
</point>
  <point name="input.g.page1.infc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infc008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.infc008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.infc008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.infcstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.infcstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.infcstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infc005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infc006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infc007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infc008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.infcstus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.cancel" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.before_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_wc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define_customerization" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="aini410.b_fill" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aini410_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2    STRING
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point
   #add-point:b_fill段define
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE t0.infcsite,t0.infc001,t0.infc002,t0.infc003,t0.infc004,t0.infc005,t0.infc006, 
       t0.infc007,t0.infc008,t0.infcstus ,t1.ooefl003 ,t2.oocql004 FROM infc_t t0",
               "",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=t0.infcsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='2116' AND t2.oocql002=t0.infc002 AND t2.oocql003='"||g_dlang||"' ",
 
               " WHERE t0.infcent= ?  AND  1=1 AND (", p_wc2, ") " 
   #add-point:b_fill段sql wc
   {<point name="b_fill.sql_wc"/>}
   #end add-point
   LET g_sql = g_sql, cl_sql_add_filter("infc_t"),
                      " ORDER BY t0.infcsite,t0.infc001"
   
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"infc_t")            #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE aini410_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR aini410_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_infc_d.clear()
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_infc_d[l_ac].infcsite,g_infc_d[l_ac].infc001,g_infc_d[l_ac].infc002,g_infc_d[l_ac].infc003, 
       g_infc_d[l_ac].infc004,g_infc_d[l_ac].infc005,g_infc_d[l_ac].infc006,g_infc_d[l_ac].infc007,g_infc_d[l_ac].infc008, 
       g_infc_d[l_ac].infcstus,g_infc_d[l_ac].infcsite_desc,g_infc_d[l_ac].infc002_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL aini410_detail_show()      
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
         END IF
         EXIT FOREACH
      END IF
 
      LET l_ac = l_ac + 1
      
   END FOREACH
 
   LET g_error_show = 0
   
 
   
   CALL g_infc_d.deleteElement(g_infc_d.getLength())   
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_infc_d.getLength()
 
   END FOR
   
   IF g_cnt > g_infc_d.getLength() THEN
      LET l_ac = g_infc_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
   
   ERROR "" 
 
   LET g_detail_cnt = g_infc_d.getLength()
   DISPLAY g_detail_idx TO FORMONLY.idx
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE aini410_pb
   
END FUNCTION
]]>
</section>
  <section id="aini410.default_search" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aini410_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " infcsite = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " infc001 = '", g_argv[02], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
      #預設查詢條件
      LET g_wc2 = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc2) THEN
         LET g_wc2 = " 1=1"
      END IF
   END IF
 
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="aini410.delete" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION aini410_delete()
   DEFINE li_idx          LIKE type_t.num5
   DEFINE li_ac_t         LIKE type_t.num5
   DEFINE li_detail_tmp   LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point 
   #add-point:delete段define
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:單身刪除前
   {<point name="delete.body.before_delete"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET li_ac_t = l_ac
   
   LET li_detail_tmp = g_detail_idx
    
   #lock所有所選資料
   FOR li_idx = 1 TO g_infc_d.getLength()
      LET g_detail_idx = li_idx
      #已選擇的資料
      IF g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         #確定是否有被鎖定
         IF NOT aini410_lock_b("infc_t") THEN
            #已被他人鎖定
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END FOR
   
   #add-point:單身刪除詢問前
   {<point name="delete.body.b_delete_ask"/>}
   #end add-point  
   
   #詢問是否確定刪除所選資料
   IF NOT cl_ask_del_detail() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FOR li_idx = 1 TO g_infc_d.getLength()
      IF g_infc_d[li_idx].infcsite IS NOT NULL
         AND g_infc_d[li_idx].infc001 IS NOT NULL
 
         AND g_curr_diag.isRowSelected(g_curr_diag.getCurrentItem(), li_idx) THEN 
         
         #add-point:單身刪除前
         {<point name="delete.body.b_delete" mark="Y"/>}
         #end add-point   
         
         DELETE FROM infc_t
          WHERE infcent = g_enterprise AND 
                infcsite = g_infc_d[li_idx].infcsite
                AND infc001 = g_infc_d[li_idx].infc001
 
         #add-point:單身刪除中
         {<point name="delete.body.m_delete"/>}
         #end add-point  
                
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "infc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            LET g_detail_cnt = g_detail_cnt-1
            LET l_ac = li_idx
            
 
            
 
            #add-point:單身同步刪除前(同層table)
            {<point name="delete.body.a_delete"/>}
            #end add-point
            LET g_detail_idx = li_idx
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_infc_d_t.infcsite
               LET gs_keys[2] = g_infc_d_t.infc001
 
            #add-point:單身同步刪除中(同層table)
            {<point name="delete.body.a_delete2"/>}
            #end add-point
                           CALL aini410_delete_b('infc_t',gs_keys,"'1'")
            #add-point:單身同步刪除後(同層table)
            {<point name="delete.body.a_delete3"/>}
            #end add-point
         END IF 
      END IF 
    
   END FOR
   CALL s_transaction_end('Y','0')
   
   LET g_detail_idx = li_detail_tmp
            
   #add-point:單身刪除後
   {<point name="delete.after"/>}
   #end add-point  
   
   LET l_ac = li_ac_t
   
   #刷新資料
   CALL aini410_b_fill(g_wc2)
            
END FUNCTION
]]>
</section>
  <section id="aini410.delete_b" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aini410_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "infc_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> 'infc_t' THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM infc_t
       WHERE infcent = g_enterprise AND
         infcsite = ps_keys_bak[1] AND infc001 = ps_keys_bak[2]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="aini410.description" ver="1" status="" src="s" readonly="">
<![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000010
#+ 
#+ Filename...: aini410
#+ Description: 貨架維護作業
#+ Creator....: 06189(2015-02-02 14:31:52)
#+ Modifier...: 06189(2015-02-02 14:31:52) -SD/PR-
]]>
</section>
  <section id="aini410.detail_show" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION aini410_detail_show()
   #add-point:show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point
   #add-point:detail_show段define
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   #應用 a12 樣板自動產生(Version:3)
 
 
    
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="aini410.global" ver="1" status="" src="s" readonly="">
<![CDATA[#應用 i02 樣板自動產生(Version:5)
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_infc_d RECORD
       infcsite LIKE infc_t.infcsite, 
   infcsite_desc LIKE type_t.chr500, 
   infc001 LIKE infc_t.infc001, 
   infc002 LIKE infc_t.infc002, 
   infc002_desc LIKE type_t.chr500, 
   infc003 LIKE infc_t.infc003, 
   infc004 LIKE infc_t.infc004, 
   infc005 LIKE infc_t.infc005, 
   infc006 LIKE infc_t.infc006, 
   infc007 LIKE infc_t.infc007, 
   infc008 LIKE infc_t.infc008, 
   infcstus LIKE infc_t.infcstus
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_infc_d          DYNAMIC ARRAY OF type_g_infc_d #單身變數
DEFINE g_infc_d_t        type_g_infc_d                  #單身備份
DEFINE g_infc_d_o        type_g_infc_d                  #單身備份
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
DEFINE g_log1               STRING                        #log用
DEFINE g_log2               STRING                        #log用
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="aini410.init" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION aini410_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point   
   #add-point:init段define
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point
   
      CALL cl_set_combo_scc_part('infcstus','50','N,X,Y')
 
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aini410_default_search()
   
END FUNCTION
]]>
</section>
  <section id="aini410.insert" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION aini410_insert()
   #add-point:delete段define
   {<point name="insert.define" edit="s"/>}
   #end add-point                
   #add-point:insert段define
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   LET g_insert = 'Y'
   CALL aini410_modify()
            
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="aini410.insert_b" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aini410_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point
   
   #判斷是否是同一群組的table
   LET ls_group = "infc_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO infc_t
                  (infcent,
                   infcsite,infc001
                   ,infc002,infc003,infc004,infc005,infc006,infc007,infc008,infcstus) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_infc_d[l_ac].infc002,g_infc_d[l_ac].infc003,g_infc_d[l_ac].infc004,g_infc_d[l_ac].infc005, 
                       g_infc_d[l_ac].infc006,g_infc_d[l_ac].infc007,g_infc_d[l_ac].infc008,g_infc_d[l_ac].infcstus) 

      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "infc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="aini410.lock_b" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aini410_lock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point
   
   #先刷新資料
   #CALL aini410_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "infc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aini410_bcl USING g_enterprise,
                                       g_infc_d[g_detail_idx].infcsite,g_infc_d[g_detail_idx].infc001 

                                       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aini410_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="aini410.main" ver="1" status="" src="s" readonly="">
<![CDATA[#應用 a26 樣板自動產生(Version:3)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT infcsite,infc001,infc002,infc003,infc004,infc005,infc006,infc007,infc008, 
       infcstus FROM infc_t WHERE infcent=? AND infcsite=? AND infc001=? FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aini410_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aini410 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aini410_init()   
 
      #進入選單 Menu (="N")
      CALL aini410_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aini410
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
</section>
  <section id="aini410.modify" ver="2" status="" src="s" readonly="">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION aini410_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point 
   #add-point:modify段define
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #add-point:modify開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_infc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_infc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aini410_b_fill(g_wc2)
            LET g_detail_cnt = g_infc_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_infc_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_infc_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_infc_d[l_ac].infcsite IS NOT NULL
               AND g_infc_d[l_ac].infc001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_infc_d_t.* = g_infc_d[l_ac].*  #BACKUP
               LET g_infc_d_o.* = g_infc_d[l_ac].*  #BACKUP
               IF NOT aini410_lock_b("infc_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aini410_bcl INTO g_infc_d[l_ac].infcsite,g_infc_d[l_ac].infc001,g_infc_d[l_ac].infc002, 
                      g_infc_d[l_ac].infc003,g_infc_d[l_ac].infc004,g_infc_d[l_ac].infc005,g_infc_d[l_ac].infc006, 
                      g_infc_d[l_ac].infc007,g_infc_d[l_ac].infc008,g_infc_d[l_ac].infcstus
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_infc_d_t.infcsite 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL aini410_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_infc_d_t.* TO NULL
            INITIALIZE g_infc_d_o.* TO NULL
            INITIALIZE g_infc_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_infc_d[l_ac].infcstus = ''
 
 
            #自定義預設值(單身1)
            
            #add-point:modify段before備份
            {<point name="input.body.before_bak"/>}
            #end add-point
            LET g_infc_d_t.* = g_infc_d[l_ac].*     #新輸入資料
            LET g_infc_d_o.* = g_infc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aini410_set_entry_b("a")
            CALL aini410_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_infc_d[li_reproduce_target].* = g_infc_d[li_reproduce].*
 
               LET g_infc_d[g_infc_d.getLength()].infcsite = NULL
               LET g_infc_d[g_infc_d.getLength()].infc001 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
 
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM infc_t 
             WHERE infcent = g_enterprise AND infcsite = g_infc_d[l_ac].infcsite
                                       AND infc001 = g_infc_d[l_ac].infc001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_infc_d[g_detail_idx].infcsite
               LET gs_keys[2] = g_infc_d[g_detail_idx].infc001
               CALL aini410_insert_b('infc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               INITIALIZE g_infc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "infc_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
 
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aini410_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ##ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (infcsite = '", g_infc_d[l_ac].infcsite, "' "
                                  ," AND infc001 = '", g_infc_d[l_ac].infc001, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM infc_t
                WHERE infcent = g_enterprise AND 
                      infcsite = g_infc_d_t.infcsite
                      AND infc001 = g_infc_d_t.infc001
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "infc_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE aini410_bcl
               #add-point:單身關閉bcl
               {<point name="input.body.close"/>}
               #end add-point
               LET l_count = g_infc_d.getLength()
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_infc_d_t.infcsite
               LET gs_keys[2] = g_infc_d_t.infc001
 
               #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aini410_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
            END IF 
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身刪除後2
               {<point name="input.body.after_delete"/>}
               #end add-point
                              CALL aini410_delete_b('infc_t',gs_keys,"'1'")
            END IF
            #如果是最後一筆
            IF l_ac = (g_infc_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infcsite
            
            #add-point:AFTER FIELD infcsite
            {<point name="input.a.page1.infcsite" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infcsite
            #add-point:BEFORE FIELD infcsite
            {<point name="input.b.page1.infcsite" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infcsite
            #add-point:ON CHANGE infcsite
            {<point name="input.g.page1.infcsite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc001
            #add-point:BEFORE FIELD infc001
            {<point name="input.b.page1.infc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc001
            
            #add-point:AFTER FIELD infc001
            {<point name="input.a.page1.infc001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc001
            #add-point:ON CHANGE infc001
            {<point name="input.g.page1.infc001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc002
            
            #add-point:AFTER FIELD infc002
            {<point name="input.a.page1.infc002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc002
            #add-point:BEFORE FIELD infc002
            {<point name="input.b.page1.infc002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc002
            #add-point:ON CHANGE infc002
            {<point name="input.g.page1.infc002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_infc_d[l_ac].infc003,"0","0","","","azz-00079",1) THEN
               NEXT FIELD infc003
            END IF 
 
 
            #add-point:AFTER FIELD infc003
            {<point name="input.a.page1.infc003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc003
            #add-point:BEFORE FIELD infc003
            {<point name="input.b.page1.infc003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc003
            #add-point:ON CHANGE infc003
            {<point name="input.g.page1.infc003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc004
            #add-point:BEFORE FIELD infc004
            {<point name="input.b.page1.infc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc004
            
            #add-point:AFTER FIELD infc004
            {<point name="input.a.page1.infc004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc004
            #add-point:ON CHANGE infc004
            {<point name="input.g.page1.infc004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc005
            #add-point:BEFORE FIELD infc005
            {<point name="input.b.page1.infc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc005
            
            #add-point:AFTER FIELD infc005
            {<point name="input.a.page1.infc005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc005
            #add-point:ON CHANGE infc005
            {<point name="input.g.page1.infc005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc006
            #add-point:BEFORE FIELD infc006
            {<point name="input.b.page1.infc006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc006
            
            #add-point:AFTER FIELD infc006
            {<point name="input.a.page1.infc006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc006
            #add-point:ON CHANGE infc006
            {<point name="input.g.page1.infc006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc007
            #add-point:BEFORE FIELD infc007
            {<point name="input.b.page1.infc007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc007
            
            #add-point:AFTER FIELD infc007
            {<point name="input.a.page1.infc007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc007
            #add-point:ON CHANGE infc007
            {<point name="input.g.page1.infc007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc008
            #add-point:BEFORE FIELD infc008
            {<point name="input.b.page1.infc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc008
            
            #add-point:AFTER FIELD infc008
            {<point name="input.a.page1.infc008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infc008
            #add-point:ON CHANGE infc008
            {<point name="input.g.page1.infc008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infcstus
            #add-point:BEFORE FIELD infcstus
            {<point name="input.b.page1.infcstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infcstus
            
            #add-point:AFTER FIELD infcstus
            {<point name="input.a.page1.infcstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE infcstus
            #add-point:ON CHANGE infcstus
            {<point name="input.g.page1.infcstus" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.infcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infcsite
            #add-point:ON ACTION controlp INFIELD infcsite
            {<point name="input.c.page1.infcsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc001
            #add-point:ON ACTION controlp INFIELD infc001
            {<point name="input.c.page1.infc001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc002
            #add-point:ON ACTION controlp INFIELD infc002
            {<point name="input.c.page1.infc002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc003
            #add-point:ON ACTION controlp INFIELD infc003
            {<point name="input.c.page1.infc003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc004
            #add-point:ON ACTION controlp INFIELD infc004
            {<point name="input.c.page1.infc004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc005
            #add-point:ON ACTION controlp INFIELD infc005
            {<point name="input.c.page1.infc005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc006
            #add-point:ON ACTION controlp INFIELD infc006
            {<point name="input.c.page1.infc006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc007
            #add-point:ON ACTION controlp INFIELD infc007
            {<point name="input.c.page1.infc007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc008
            #add-point:ON ACTION controlp INFIELD infc008
            {<point name="input.c.page1.infc008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.infcstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infcstus
            #add-point:ON ACTION controlp INFIELD infcstus
            {<point name="input.c.page1.infcstus" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_infc_d[l_ac].* = g_infc_d_t.*
               CLOSE aini410_bcl
               #add-point:單身取消時
               {<point name="input.body.cancel"/>}
               #end add-point
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_infc_d[l_ac].infcsite 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_infc_d[l_ac].* = g_infc_d_t.*
            ELSE
               #寫入修改者/修改日期資訊(單身)
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE infc_t SET (infcsite,infc001,infc002,infc003,infc004,infc005,infc006,infc007,infc008, 
                   infcstus) = (g_infc_d[l_ac].infcsite,g_infc_d[l_ac].infc001,g_infc_d[l_ac].infc002, 
                   g_infc_d[l_ac].infc003,g_infc_d[l_ac].infc004,g_infc_d[l_ac].infc005,g_infc_d[l_ac].infc006, 
                   g_infc_d[l_ac].infc007,g_infc_d[l_ac].infc008,g_infc_d[l_ac].infcstus)
                WHERE infcent = g_enterprise AND
                  infcsite = g_infc_d_t.infcsite #項次   
                  AND infc001 = g_infc_d_t.infc001  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "infc_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "infc_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_infc_d[g_detail_idx].infcsite
               LET gs_keys_bak[1] = g_infc_d_t.infcsite
               LET gs_keys[2] = g_infc_d[g_detail_idx].infc001
               LET gs_keys_bak[2] = g_infc_d_t.infc001
               CALL aini410_update_b('infc_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     LET g_log1 = util.JSON.stringify(g_infc_d_t)
                     LET g_log2 = util.JSON.stringify(g_infc_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL aini410_unlock_b("infc_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_infc_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_infc_d.getLength()+1
            
      END INPUT
      
 
      
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()      
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         #LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD infcsite
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         CANCEL DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #新增後取消
   IF l_cmd = 'a' AND INT_FLAG THEN
      CALL g_infc_d.deleteElement(l_ac)
 
   END IF
    
   #修改後取消
   IF l_cmd = 'u' AND INT_FLAG THEN
      LET g_infc_d[l_ac].* = g_infc_d_t.*
   END IF
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE aini410_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="aini410.modify_detail_chk" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 單身輸入判定(因應modify_detail)
PRIVATE FUNCTION aini410_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define" edit="s"/>}
   #end add-point
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   #根據sr名稱確定該page第一個欄位的名稱
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "infcsite"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="aini410.other_dialog" ver="1" status="" src="s" readonly="">
<![CDATA[ 
]]>
</section>
  <section id="aini410.other_function" ver="1" status="" src="s" readonly="">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="aini410.query" ver="3" status="" src="s" readonly="">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aini410_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point 
   #add-point:query段define
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_infc_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON infcsite,infc001,infc002,infc003,infc004,infc005,infc006,infc007,infc008,infcstus  

 
         FROM s_detail1[1].infcsite,s_detail1[1].infc001,s_detail1[1].infc002,s_detail1[1].infc003,s_detail1[1].infc004, 
             s_detail1[1].infc005,s_detail1[1].infc006,s_detail1[1].infc007,s_detail1[1].infc008,s_detail1[1].infcstus  

      
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<infccrtdt>>----
 
         #----<<infcmoddt>>----
         
         #----<<infccnfdt>>----
         
         #----<<infcpstdt>>----
 
 
      
                  #Ctrlp:construct.c.page1.infcsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infcsite
            #add-point:ON ACTION controlp INFIELD infcsite
            {<point name="construct.c.page1.infcsite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infcsite
            #add-point:BEFORE FIELD infcsite
            {<point name="query.b.page1.infcsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infcsite
            
            #add-point:AFTER FIELD infcsite
            {<point name="query.a.page1.infcsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.infc001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc001
            #add-point:ON ACTION controlp INFIELD infc001
            {<point name="construct.c.page1.infc001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc001
            #add-point:BEFORE FIELD infc001
            {<point name="query.b.page1.infc001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc001
            
            #add-point:AFTER FIELD infc001
            {<point name="query.a.page1.infc001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.infc002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc002
            #add-point:ON ACTION controlp INFIELD infc002
            {<point name="construct.c.page1.infc002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc002
            #add-point:BEFORE FIELD infc002
            {<point name="query.b.page1.infc002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc002
            
            #add-point:AFTER FIELD infc002
            {<point name="query.a.page1.infc002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc003
            #add-point:BEFORE FIELD infc003
            {<point name="query.b.page1.infc003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc003
            
            #add-point:AFTER FIELD infc003
            {<point name="query.a.page1.infc003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.infc003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc003
            #add-point:ON ACTION controlp INFIELD infc003
            {<point name="query.c.page1.infc003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc004
            #add-point:BEFORE FIELD infc004
            {<point name="query.b.page1.infc004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc004
            
            #add-point:AFTER FIELD infc004
            {<point name="query.a.page1.infc004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.infc004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc004
            #add-point:ON ACTION controlp INFIELD infc004
            {<point name="query.c.page1.infc004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc005
            #add-point:BEFORE FIELD infc005
            {<point name="query.b.page1.infc005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc005
            
            #add-point:AFTER FIELD infc005
            {<point name="query.a.page1.infc005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.infc005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc005
            #add-point:ON ACTION controlp INFIELD infc005
            {<point name="query.c.page1.infc005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc006
            #add-point:BEFORE FIELD infc006
            {<point name="query.b.page1.infc006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc006
            
            #add-point:AFTER FIELD infc006
            {<point name="query.a.page1.infc006" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.infc006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc006
            #add-point:ON ACTION controlp INFIELD infc006
            {<point name="query.c.page1.infc006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc007
            #add-point:BEFORE FIELD infc007
            {<point name="query.b.page1.infc007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc007
            
            #add-point:AFTER FIELD infc007
            {<point name="query.a.page1.infc007" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.infc007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc007
            #add-point:ON ACTION controlp INFIELD infc007
            {<point name="query.c.page1.infc007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infc008
            #add-point:BEFORE FIELD infc008
            {<point name="query.b.page1.infc008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infc008
            
            #add-point:AFTER FIELD infc008
            {<point name="query.a.page1.infc008" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.infc008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infc008
            #add-point:ON ACTION controlp INFIELD infc008
            {<point name="query.c.page1.infc008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD infcstus
            #add-point:BEFORE FIELD infcstus
            {<point name="query.b.page1.infcstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD infcstus
            
            #add-point:AFTER FIELD infcstus
            {<point name="query.a.page1.infcstus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.infcstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD infcstus
            #add-point:ON ACTION controlp INFIELD infcstus
            {<point name="query.c.page1.infcstus" />}
            #END add-point
 
  
         
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         CANCEL DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
      CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   ELSE
      LET g_error_show = 1
      LET g_detail_idx = 1
   END IF
    
   CALL aini410_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="aini410.set_entry_b" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aini410_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="aini410.set_no_entry_b" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aini410_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point   
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="aini410.set_pk_array" ver="1" status="" src="s" readonly="">
<![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aini410_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_infc_d[l_ac].infcsite
   LET g_pk_array[1].column = 'infcsite'
   LET g_pk_array[2].values = g_infc_d[l_ac].infc001
   LET g_pk_array[2].column = 'infc001'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="aini410.state_change" ver="1" status="" src="s" readonly="">
<![CDATA[   
]]>
</section>
  <section id="aini410.ui_dialog" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION aini410_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD #串查用
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point 
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL aini410_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_infc_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               #讓各頁籤能夠同步指到特定資料
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
               
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #顯示followup圖示
               #應用 a48 樣板自動產生(Version:2)
   CALL aini410_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point
         
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
    
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
 
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aini410_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aini410_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aini410_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aini410_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aini410_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
            END IF
 
 
 
      
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_infc_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            CANCEL DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            CANCEL DIALOG
            
         
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aini410_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aini410_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aini410_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="aini410.unlock_b" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aini410_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE aini410_bcl
   #END IF
   
 
   
   #add-point:unlock_b段結束前
   {<point name="unlock_b.after"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="aini410.update_b" ver="1" status="" src="s" readonly="">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aini410_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point     
   #add-point:update_b段define
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #比對新舊值, 判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #若key無變動, 不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #若key有變動, 則連動其他table的資料   
   #判斷是否是同一群組的table
   LET ls_group = "infc_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "infc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE infc_t 
         SET (infcsite,infc001
              ,infc002,infc003,infc004,infc005,infc006,infc007,infc008,infcstus) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_infc_d[l_ac].infc002,g_infc_d[l_ac].infc003,g_infc_d[l_ac].infc004,g_infc_d[l_ac].infc005, 
                  g_infc_d[l_ac].infc006,g_infc_d[l_ac].infc007,g_infc_d[l_ac].infc008,g_infc_d[l_ac].infcstus)  

         WHERE infcsite = ps_keys_bak[1] AND infc001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "infc_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "infc_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>