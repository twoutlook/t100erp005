<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aint841" std_prog="aint841" erpver="1.0" module="AIN" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.aint841_inpd001_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint841_inpd001_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint841_inpd001_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_m.inpd001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_m.imaal003 = '', g_rtn_fields[1] , ''
            LET g_inpd_m.imaal004 = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_inpd_m.imaal003,g_inpd_m.imaal004
END FUNCTION]]>
  </point>
  <point name="function.aint841_inpd005_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint841_inpd005_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint841_inpd005_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_m.inpdsite
            LET g_ref_fields[2] = g_inpd_m.inpd005
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
            LET g_inpd_m.inpd005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_m.inpd005_desc
END FUNCTION]]>
  </point>
  <point name="function.aint841_inpd006_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint841_inpd006_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint841_inpd006_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_m.inpdsite
            LET g_ref_fields[2] = g_inpd_m.inpd005  
            LET g_ref_fields[3] = g_inpd_m.inpd006
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_inpd_m.inpd006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_m.inpd006_desc
END FUNCTION]]>
  </point>
  <point name="function.aint841_inpd004_ref" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL aint841_inpd004_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint841_inpd004_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_m.inpd004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_m.inpd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_m.inpd004_desc
END FUNCTION]]>
  </point>
  <point name="function.aint841_inpd014_ref" order="5" ver="2" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 理由碼说明
# Memo...........:
# Usage..........: CALL aint841_inpd014_ref()
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By lixh
# Modify.........:
################################################################################
PRIVATE FUNCTION aint841_inpd014_ref()
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_acc        
            LET g_ref_fields[2] = g_inpd_m.inpd014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = ? AND oocql002=? ","") RETURNING g_rtn_fields
            LET g_inpd_m.inpd014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_m.inpd014_desc
END FUNCTION]]>
  </point>
  <point name="construct.c.inpd001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd001  #顯示到畫面上
            NEXT FIELD inpd001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inpd002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd002  #顯示到畫面上
            NEXT FIELD inpd002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inpd003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd003  #顯示到畫面上
            NEXT FIELD inpd003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_12()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd004  #顯示到畫面上
            NEXT FIELD inpd004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_12()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd005  #顯示到畫面上
            NEXT FIELD inpd005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inab002_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd006  #顯示到畫面上
            NEXT FIELD inpd006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd008" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inpadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd008  #顯示到畫面上
            NEXT FIELD inpd008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd010  #顯示到畫面上
            NEXT FIELD inpd010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd012" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd012  #顯示到畫面上
            NEXT FIELD inpd012                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd014  #顯示到畫面上
            NEXT FIELD inpd014                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd058" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd058  #顯示到畫面上
            NEXT FIELD inpd058                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpd060" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpd060  #顯示到畫面上
            NEXT FIELD inpd060                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpdcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdcnfid  #顯示到畫面上
            NEXT FIELD inpdcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpdcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdcrtdp  #顯示到畫面上
            NEXT FIELD inpdcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpdcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdcrtid  #顯示到畫面上
            NEXT FIELD inpdcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpddocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_inpddocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpddocno  #顯示到畫面上
            NEXT FIELD inpddocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpdmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdmodid  #顯示到畫面上
            NEXT FIELD inpdmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpdowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdowndp  #顯示到畫面上
            NEXT FIELD inpdowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpdownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdownid  #顯示到畫面上
            NEXT FIELD inpdownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.inpdpstid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO inpdpstid  #顯示到畫面上
            NEXT FIELD inpdpstid                     #返回原欄位
    

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_inpd_m.inpdstus <> 'N' THEN
      CALL cl_set_act_visible("modify", FALSE)
   END IF
   CALL cl_set_act_visible("insert,delete,reproduce", FALSE)]]>
  </point>
  <point name="global.variable" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_acc                 LIKE gzcb_t.gzcb004]]>
  </point>
  <point name="init.init" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT gzcb004 INTO g_acc FROM gzcb_t WHERE gzcb001 = '24' AND gzcb002 = 'aint841'   ]]>
  </point>
  <point name="input.a.inpd001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aint841_inpd001_ref()
            IF NOT cl_null(g_inpd_m.inpd001) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_m.inpd001    
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaf001_7") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_m.inpd001 = g_inpd_m_t.inpd001
                  CALL aint841_inpd001_ref()
                  NEXT FIELD CURRENT
               END IF
               CALL aint841_inpd001_ref()
            END IF ]]>
  </point>
  <point name="input.a.inpd004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aint841_inpd004_ref()
            IF NOT cl_null(g_inpd_m.inpd004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_m.inpd004  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaf001_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_m.inpd004 = g_inpd_m_t.inpd004
                  CALL aint841_inpd004_ref()
                  NEXT FIELD CURRENT
               END IF            
               CALL aint841_inpd004_ref()
            END IF 


]]>
  </point>
  <point name="input.a.inpd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aint841_inpd005_ref()
            IF NOT cl_null(g_inpd_m.inpd005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site 
               LET g_chkparam.arg2 = g_inpd_m.inpd005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_m.inpd005 = g_inpd_m_t.inpd005
                  CALL aint841_inpd005_ref()
                  NEXT FIELD CURRENT
               END IF          
            END IF ]]>
  </point>
  <point name="input.a.inpd006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL aint841_inpd006_ref()
            IF NOT cl_null(g_inpd_m.inpd006) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site 
               LET g_chkparam.arg2 = g_inpd_m.inpd005
               LET g_chkparam.arg3 = g_inpd_m.inpd006
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inab002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_m.inpd006 = g_inpd_m_t.inpd006
                  CALL aint841_inpd006_ref()
                  NEXT FIELD CURRENT
               END IF            
               CALL aint841_inpd006_ref()
            END IF ]]>
  </point>
  <point name="input.a.inpd010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL s_desc_get_unit_desc(g_inpd_m.inpd010) RETURNING g_inpd_m.inpd010_desc 
            IF NOT cl_null(g_inpd_m.inpd010) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_m.inpd010   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_m.inpd010 = g_inpd_m_t.inpd010
                  CALL s_desc_get_unit_desc(g_inpd_m.inpd010) RETURNING g_inpd_m.inpd010_desc
                  NEXT FIELD CURRENT
               END IF                                                      
               CALL s_desc_get_unit_desc(g_inpd_m.inpd010) RETURNING g_inpd_m.inpd010_desc 
            END IF 
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpd_t.inpd010
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd010_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd010_desc

]]>
  </point>
  <point name="input.a.inpd012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_m.inpd012) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_m.inpd012
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_m.inpd012
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_m.inpd012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_m.inpd012_desc

]]>
  </point>
  <point name="input.a.inpd014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
]]>
  </point>
  <point name="input.a.inpd058" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL s_desc_get_person_desc(g_inpd_m.inpd058) RETURNING g_inpd_m.inpd058_desc
            IF NOT cl_null(g_inpd_m.inpd058) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_m.inpd058   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_m.inpd058 = g_inpd_m_t.inpd058
                  CALL s_desc_get_person_desc(g_inpd_m.inpd058) RETURNING g_inpd_m.inpd058_desc  
                  NEXT FIELD CURRENT
               END IF
               CALL s_desc_get_person_desc(g_inpd_m.inpd058) RETURNING g_inpd_m.inpd058_desc  
            END IF 
#          INITIALIZE g_ref_fields TO NULL
#          LET g_ref_fields[1] = g_inpd_m.inpd058
#          CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#          LET g_inpd_m.inpd058_desc = '', g_rtn_fields[1] , ''
#          DISPLAY BY NAME g_inpd_m.inpd058_desc

]]>
  </point>
  <point name="input.a.inpd060" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL s_desc_get_person_desc(g_inpd_m.inpd060) RETURNING g_inpd_m.inpd060_desc
            IF NOT cl_null(g_inpd_m.inpd060) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數

               LET g_chkparam.arg1 = g_inpd_m.inpd060 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_inpd_m.inpd060 = g_inpd_m_t.inpd060
                  CALL s_desc_get_person_desc(g_inpd_m.inpd060) RETURNING g_inpd_m.inpd060_desc
                  NEXT FIELD CURRENT
               END IF
               CALL s_desc_get_person_desc(g_inpd_m.inpd060) RETURNING g_inpd_m.inpd060_desc

            END IF 
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpd060
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd060_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd060_desc

]]>
  </point>
  <point name="input.a.inpddocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_inpd_m.inpddocno
            CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_inpd_m.inpddocno_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_inpd_m.inpddocno_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_inpd_m.inpdsite) AND NOT cl_null(g_inpd_m.inpddocno) AND NOT cl_null(g_inpd_m.inpdseq) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inpd_m.inpdsite != g_inpdsite_t  OR g_inpd_m.inpddocno != g_inpddocno_t  OR g_inpd_m.inpdseq != g_inpdseq_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_m.inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_m.inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_m.inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.inpdseq" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_inpd_m.inpdsite) AND NOT cl_null(g_inpd_m.inpddocno) AND NOT cl_null(g_inpd_m.inpdseq) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inpd_m.inpdsite != g_inpdsite_t  OR g_inpd_m.inpddocno != g_inpddocno_t  OR g_inpd_m.inpdseq != g_inpdseq_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_m.inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_m.inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_m.inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.inpdsite" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_inpd_m.inpdsite) AND NOT cl_null(g_inpd_m.inpddocno) AND NOT cl_null(g_inpd_m.inpdseq) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_inpd_m.inpdsite != g_inpdsite_t  OR g_inpd_m.inpddocno != g_inpddocno_t  OR g_inpd_m.inpdseq != g_inpdseq_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM inpd_t WHERE "||"inpdent = '" ||g_enterprise|| "' AND "||"inpdsite = '"||g_inpd_m.inpdsite ||"' AND "|| "inpddocno = '"||g_inpd_m.inpddocno ||"' AND "|| "inpdseq = '"||g_inpd_m.inpdseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.before.input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_inpd_m.inpd058) THEN
               LET g_inpd_m.inpd058 = g_user
            END IF
            IF NOT cl_null(g_inpd_m.inpd060) THEN
               LET g_inpd_m.inpd060 = g_user
            END IF            
            IF NOT cl_null(g_inpd_m.inpd059) THEN
               LET g_inpd_m.inpd059 = g_today
            END IF   
            IF NOT cl_null(g_inpd_m.inpd061) THEN
               LET g_inpd_m.inpd061 = g_today
            END IF            ]]>
  </point>
  <point name="input.c.inpd001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001()                                #呼叫開窗

            LET g_inpd_m.inpd001 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd001 TO inpd001              #

            NEXT FIELD inpd001                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaf001_12()                                #呼叫開窗

            LET g_inpd_m.inpd004 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd004 TO inpd004              #

            NEXT FIELD inpd004                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inaa001_12()                                #呼叫開窗

            LET g_inpd_m.inpd005 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd005 TO inpd005              #

            NEXT FIELD inpd005                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd006" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd006             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_inab002_3()                                #呼叫開窗

            LET g_inpd_m.inpd006 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd006 TO inpd006              #

            NEXT FIELD inpd006                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd010" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_inpd_m.inpd010 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd010 TO inpd010              #

            NEXT FIELD inpd010                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd012" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_inpd_m.inpd012 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd012 TO inpd012              #

            NEXT FIELD inpd012                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd014             #給予default值
            LET g_qryparam.default2 = "" #g_inpd_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_inpd_m.inpd014 = g_qryparam.return1              
            #LET g_inpd_m.oocq002 = g_qryparam.return2 
            DISPLAY g_inpd_m.inpd014 TO inpd014              #
            #DISPLAY g_inpd_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD inpd014                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd058" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd058             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpd_m.inpd058 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd058 TO inpd058              #

            NEXT FIELD inpd058                          #返回原欄位

]]>
  </point>
  <point name="input.c.inpd060" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_inpd_m.inpd060             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_inpd_m.inpd060 = g_qryparam.return1              

            DISPLAY g_inpd_m.inpd060 TO inpd060              #

            NEXT FIELD inpd060                          #返回原欄位

]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_cnt    LIKE type_t.num5]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt FROM inpa_t,inpb_t 
    WHERE inpaent = inpbent  
      AND inpadocno = inpbdocno 
      AND inpaent = g_enterprise 
      AND inpastus = 'Y' 
      AND inpa001 = '1'
      AND inpa012 = 'Y' 
      AND inpb001 = '10' 
      AND inpadocdt <= g_today
      AND (inpa005 IS NULL OR inpa005 >= g_today)
   IF cl_null(l_cnt) THEN LET l_cnt = 0 END IF  
   IF l_cnt < 1 THEN
      CALL cl_err('','ain-00276',1)
      RETURN
   END IF]]>
  </point>
  <point name="set_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_inpd_m.inpd009 = 'N' THEN
      CALL cl_set_comp_entry("inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004",FALSE)
   END IF]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL aint841_inpd014_ref()
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpddocno
#            CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001=? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpddocno_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpddocno_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpd058
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd058_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd058_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdsite
#            LET g_ref_fields[2] = g_inpd_m.inpd005
#            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaasite=? AND inaa001=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd005_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd005_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdsite
#            LET g_ref_fields[2] = g_inpd_m.inpd005
#            LET g_ref_fields[3] = g_inpd_m.inpd006
#            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd006_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd006_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpd004
#            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd004_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd004_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpd010
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd010_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd010_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpd012
#            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd012_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd012_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpd060
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpd060_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpd060_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpdownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpdownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpdowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpdowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdcrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpdcrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpdcrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdcrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpdcrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpdcrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdmodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpdmodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpdmodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdcnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpdcnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpdcnfid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_inpd_m.inpdpstid
#            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
#            LET g_inpd_m.inpdpstid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_inpd_m.inpdpstid_desc
]]>
  </point>
  <section id="aint841.browser_fill" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充(一般單檔)
PRIVATE FUNCTION aint841_browser_fill(p_wc,ps_page_action) 
   DEFINE p_wc              STRING
   DEFINE ps_page_action    STRING
   DEFINE l_searchcol       STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_inpd_m.* TO NULL
   INITIALIZE g_wc TO NULL
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET l_searchcol = "inpdsite,inpddocno,inpdseq"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
 
   LET p_wc = p_wc.trim() #當查詢按下Q時 按下放棄 g_wc = "  " 所以要清掉空白
   IF cl_null(p_wc) THEN  #p_wc 查詢條件
      LET p_wc = " 1=1 " 
   END IF
   
   #add-point:browser_fill段wc控制
   {<point name="browser_fill.wc"/>}
   #end add-point
 
   LET g_sql = " SELECT COUNT(*) FROM inpd_t ",
               "  ",
               "  ",
               " WHERE inpdent = '" ||g_enterprise|| "' AND ", 
               p_wc CLIPPED, cl_sql_add_filter("inpd_t")
                
   #add-point:browser_fill段cnt_sql
   {<point name="browser_fill.cnt_sql"/>}
   #end add-point
                
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt
   FREE header_cnt_pre 
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse AND g_error_show = 1 THEN
      CALL cl_err(g_browser_cnt,'9035',1)
   END IF
   
      LET g_error_show = 0
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count
   DISPLAY g_browser_cnt TO FORMONLY.h_count
   
   LET g_wc = p_wc
   
   IF ps_page_action = "F" OR
      ps_page_action = "P"  OR
      ps_page_action = "N"  OR
      ps_page_action = "L"  THEN
      LET g_page_action = ps_page_action
   END IF
   
   LET g_sql = " SELECT inpdstus,inpddocno,inpdseq,inpdsite,inpd058,'',inpd059,inpd009,inpd008,t1.oofa011", 

               " FROM inpd_t ",
               "  ",
               "  ",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=inpd058  ",
 
               " WHERE inpdent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("inpd_t"),
               "  ORDER BY ",l_searchcol," ",g_order
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:browser_fill段before_pre
   {<point name="browser_fill.before_pre"/>}
   #end add-point                    
 
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_inpddocno,g_browser[g_cnt].b_inpdseq, 
       g_browser[g_cnt].b_inpdsite,g_browser[g_cnt].b_inpd058,g_browser[g_cnt].b_inpd058_desc,g_browser[g_cnt].b_inpd059, 
       g_browser[g_cnt].b_inpd009,g_browser[g_cnt].b_inpd008,g_browser[g_cnt].b_inpd058_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err("foreach:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
      
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err("Max_Row:"||g_max_rec USING "<<<<<","std-00002",0)
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_current_cnt = g_rec_b
   LET g_cnt = 0
   
   CALL aint841_fetch("") 
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint841.construct" ver="2" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aint841_construct()
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_inpd_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON inpddocno,inpd008,inpd058,inpd009,inpd059,inpdseq,inpdsite,inpdstus, 
          inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd012,inpd056,inpd057,inpd060, 
          inpd061,inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt, 
          inpdcnfid,inpdcnfdt,inpdpstid,inpdpstdt
      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<inpdcrtdt>>----
         AFTER FIELD inpdcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdmoddt>>----
         AFTER FIELD inpdmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdcnfdt>>----
         AFTER FIELD inpdcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<inpdpstdt>>----
         AFTER FIELD inpdpstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #一般欄位
                  #Ctrlp:construct.c.inpddocno
         ON ACTION controlp INFIELD inpddocno
            #add-point:ON ACTION controlp INFIELD inpddocno
            {<point name="construct.c.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpddocno
            #add-point:BEFORE FIELD inpddocno
            {<point name="construct.b.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpddocno
            
            #add-point:AFTER FIELD inpddocno
            {<point name="construct.a.inpddocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd008
         ON ACTION controlp INFIELD inpd008
            #add-point:ON ACTION controlp INFIELD inpd008
            {<point name="construct.c.inpd008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd008
            #add-point:BEFORE FIELD inpd008
            {<point name="construct.b.inpd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd008
            
            #add-point:AFTER FIELD inpd008
            {<point name="construct.a.inpd008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd058
         ON ACTION controlp INFIELD inpd058
            #add-point:ON ACTION controlp INFIELD inpd058
            {<point name="construct.c.inpd058" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd058
            #add-point:BEFORE FIELD inpd058
            {<point name="construct.b.inpd058" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd058
            
            #add-point:AFTER FIELD inpd058
            {<point name="construct.a.inpd058" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd009
            #add-point:BEFORE FIELD inpd009
            {<point name="construct.b.inpd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd009
            
            #add-point:AFTER FIELD inpd009
            {<point name="construct.a.inpd009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd009
         ON ACTION controlp INFIELD inpd009
            #add-point:ON ACTION controlp INFIELD inpd009
            {<point name="construct.c.inpd009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd059
            #add-point:BEFORE FIELD inpd059
            {<point name="construct.b.inpd059" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd059
            
            #add-point:AFTER FIELD inpd059
            {<point name="construct.a.inpd059" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd059
         ON ACTION controlp INFIELD inpd059
            #add-point:ON ACTION controlp INFIELD inpd059
            {<point name="construct.c.inpd059" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdseq
            #add-point:BEFORE FIELD inpdseq
            {<point name="construct.b.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdseq
            
            #add-point:AFTER FIELD inpdseq
            {<point name="construct.a.inpdseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpdseq
         ON ACTION controlp INFIELD inpdseq
            #add-point:ON ACTION controlp INFIELD inpdseq
            {<point name="construct.c.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdsite
            #add-point:BEFORE FIELD inpdsite
            {<point name="construct.b.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdsite
            
            #add-point:AFTER FIELD inpdsite
            {<point name="construct.a.inpdsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpdsite
         ON ACTION controlp INFIELD inpdsite
            #add-point:ON ACTION controlp INFIELD inpdsite
            {<point name="construct.c.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdstus
            #add-point:BEFORE FIELD inpdstus
            {<point name="construct.b.inpdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdstus
            
            #add-point:AFTER FIELD inpdstus
            {<point name="construct.a.inpdstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpdstus
         ON ACTION controlp INFIELD inpdstus
            #add-point:ON ACTION controlp INFIELD inpdstus
            {<point name="construct.c.inpdstus" />}
            #END add-point
 
         #Ctrlp:construct.c.inpd001
         ON ACTION controlp INFIELD inpd001
            #add-point:ON ACTION controlp INFIELD inpd001
            {<point name="construct.c.inpd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd001
            #add-point:BEFORE FIELD inpd001
            {<point name="construct.b.inpd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd001
            
            #add-point:AFTER FIELD inpd001
            {<point name="construct.a.inpd001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd005
         ON ACTION controlp INFIELD inpd005
            #add-point:ON ACTION controlp INFIELD inpd005
            {<point name="construct.c.inpd005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd005
            #add-point:BEFORE FIELD inpd005
            {<point name="construct.b.inpd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd005
            
            #add-point:AFTER FIELD inpd005
            {<point name="construct.a.inpd005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd006
         ON ACTION controlp INFIELD inpd006
            #add-point:ON ACTION controlp INFIELD inpd006
            {<point name="construct.c.inpd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd006
            #add-point:BEFORE FIELD inpd006
            {<point name="construct.b.inpd006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd006
            
            #add-point:AFTER FIELD inpd006
            {<point name="construct.a.inpd006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd007
            #add-point:BEFORE FIELD inpd007
            {<point name="construct.b.inpd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd007
            
            #add-point:AFTER FIELD inpd007
            {<point name="construct.a.inpd007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd007
         ON ACTION controlp INFIELD inpd007
            #add-point:ON ACTION controlp INFIELD inpd007
            {<point name="construct.c.inpd007" />}
            #END add-point
 
         #Ctrlp:construct.c.inpd002
         ON ACTION controlp INFIELD inpd002
            #add-point:ON ACTION controlp INFIELD inpd002
            {<point name="construct.c.inpd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd002
            #add-point:BEFORE FIELD inpd002
            {<point name="construct.b.inpd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd002
            
            #add-point:AFTER FIELD inpd002
            {<point name="construct.a.inpd002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd003
         ON ACTION controlp INFIELD inpd003
            #add-point:ON ACTION controlp INFIELD inpd003
            {<point name="construct.c.inpd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd003
            #add-point:BEFORE FIELD inpd003
            {<point name="construct.b.inpd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd003
            
            #add-point:AFTER FIELD inpd003
            {<point name="construct.a.inpd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd004
         ON ACTION controlp INFIELD inpd004
            #add-point:ON ACTION controlp INFIELD inpd004
            {<point name="construct.c.inpd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd004
            #add-point:BEFORE FIELD inpd004
            {<point name="construct.b.inpd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd004
            
            #add-point:AFTER FIELD inpd004
            {<point name="construct.a.inpd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd010
         ON ACTION controlp INFIELD inpd010
            #add-point:ON ACTION controlp INFIELD inpd010
            {<point name="construct.c.inpd010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd010
            #add-point:BEFORE FIELD inpd010
            {<point name="construct.b.inpd010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd010
            
            #add-point:AFTER FIELD inpd010
            {<point name="construct.a.inpd010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd012
         ON ACTION controlp INFIELD inpd012
            #add-point:ON ACTION controlp INFIELD inpd012
            {<point name="construct.c.inpd012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd012
            #add-point:BEFORE FIELD inpd012
            {<point name="construct.b.inpd012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd012
            
            #add-point:AFTER FIELD inpd012
            {<point name="construct.a.inpd012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd056
            #add-point:BEFORE FIELD inpd056
            {<point name="construct.b.inpd056" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd056
            
            #add-point:AFTER FIELD inpd056
            {<point name="construct.a.inpd056" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd056
         ON ACTION controlp INFIELD inpd056
            #add-point:ON ACTION controlp INFIELD inpd056
            {<point name="construct.c.inpd056" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd057
            #add-point:BEFORE FIELD inpd057
            {<point name="construct.b.inpd057" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd057
            
            #add-point:AFTER FIELD inpd057
            {<point name="construct.a.inpd057" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd057
         ON ACTION controlp INFIELD inpd057
            #add-point:ON ACTION controlp INFIELD inpd057
            {<point name="construct.c.inpd057" />}
            #END add-point
 
         #Ctrlp:construct.c.inpd060
         ON ACTION controlp INFIELD inpd060
            #add-point:ON ACTION controlp INFIELD inpd060
            {<point name="construct.c.inpd060" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd060
            #add-point:BEFORE FIELD inpd060
            {<point name="construct.b.inpd060" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd060
            
            #add-point:AFTER FIELD inpd060
            {<point name="construct.a.inpd060" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd061
            #add-point:BEFORE FIELD inpd061
            {<point name="construct.b.inpd061" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd061
            
            #add-point:AFTER FIELD inpd061
            {<point name="construct.a.inpd061" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd061
         ON ACTION controlp INFIELD inpd061
            #add-point:ON ACTION controlp INFIELD inpd061
            {<point name="construct.c.inpd061" />}
            #END add-point
 
         #Ctrlp:construct.c.inpd014
         ON ACTION controlp INFIELD inpd014
            #add-point:ON ACTION controlp INFIELD inpd014
            {<point name="construct.c.inpd014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd014
            #add-point:BEFORE FIELD inpd014
            {<point name="construct.b.inpd014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd014
            
            #add-point:AFTER FIELD inpd014
            {<point name="construct.a.inpd014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd015
            #add-point:BEFORE FIELD inpd015
            {<point name="construct.b.inpd015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd015
            
            #add-point:AFTER FIELD inpd015
            {<point name="construct.a.inpd015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpd015
         ON ACTION controlp INFIELD inpd015
            #add-point:ON ACTION controlp INFIELD inpd015
            {<point name="construct.c.inpd015" />}
            #END add-point
 
         #Ctrlp:construct.c.inpdownid
         ON ACTION controlp INFIELD inpdownid
            #add-point:ON ACTION controlp INFIELD inpdownid
            {<point name="construct.c.inpdownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdownid
            #add-point:BEFORE FIELD inpdownid
            {<point name="construct.b.inpdownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdownid
            
            #add-point:AFTER FIELD inpdownid
            {<point name="construct.a.inpdownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpdowndp
         ON ACTION controlp INFIELD inpdowndp
            #add-point:ON ACTION controlp INFIELD inpdowndp
            {<point name="construct.c.inpdowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdowndp
            #add-point:BEFORE FIELD inpdowndp
            {<point name="construct.b.inpdowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdowndp
            
            #add-point:AFTER FIELD inpdowndp
            {<point name="construct.a.inpdowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpdcrtid
         ON ACTION controlp INFIELD inpdcrtid
            #add-point:ON ACTION controlp INFIELD inpdcrtid
            {<point name="construct.c.inpdcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcrtid
            #add-point:BEFORE FIELD inpdcrtid
            {<point name="construct.b.inpdcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdcrtid
            
            #add-point:AFTER FIELD inpdcrtid
            {<point name="construct.a.inpdcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.inpdcrtdp
         ON ACTION controlp INFIELD inpdcrtdp
            #add-point:ON ACTION controlp INFIELD inpdcrtdp
            {<point name="construct.c.inpdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcrtdp
            #add-point:BEFORE FIELD inpdcrtdp
            {<point name="construct.b.inpdcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdcrtdp
            
            #add-point:AFTER FIELD inpdcrtdp
            {<point name="construct.a.inpdcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcrtdt
            #add-point:BEFORE FIELD inpdcrtdt
            {<point name="construct.b.inpdcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inpdmodid
         ON ACTION controlp INFIELD inpdmodid
            #add-point:ON ACTION controlp INFIELD inpdmodid
            {<point name="construct.c.inpdmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdmodid
            #add-point:BEFORE FIELD inpdmodid
            {<point name="construct.b.inpdmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdmodid
            
            #add-point:AFTER FIELD inpdmodid
            {<point name="construct.a.inpdmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdmoddt
            #add-point:BEFORE FIELD inpdmoddt
            {<point name="construct.b.inpdmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.inpdcnfid
         ON ACTION controlp INFIELD inpdcnfid
            #add-point:ON ACTION controlp INFIELD inpdcnfid
            {<point name="construct.c.inpdcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcnfid
            #add-point:BEFORE FIELD inpdcnfid
            {<point name="construct.b.inpdcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdcnfid
            
            #add-point:AFTER FIELD inpdcnfid
            {<point name="construct.a.inpdcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdcnfdt
            #add-point:BEFORE FIELD inpdcnfdt
            {<point name="construct.b.inpdcnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.inpdpstid
         ON ACTION controlp INFIELD inpdpstid
            #add-point:ON ACTION controlp INFIELD inpdpstid
            {<point name="construct.c.inpdpstid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdpstid
            #add-point:BEFORE FIELD inpdpstid
            {<point name="construct.b.inpdpstid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdpstid
            
            #add-point:AFTER FIELD inpdpstid
            {<point name="construct.a.inpdpstid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdpstdt
            #add-point:BEFORE FIELD inpdpstdt
            {<point name="construct.b.inpdpstdt" />}
            #END add-point
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
  
END FUNCTION
]]>
  </section>
  <section id="aint841.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aint841_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " inpdsite = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " inpddocno = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " inpdseq = '", g_argv[03], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aint841.delete" ver="3" status="" src="s">
    <![CDATA[#+ 資料刪除 
PRIVATE FUNCTION aint841_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   IF g_inpd_m.inpdsite IS NULL
   OR g_inpd_m.inpddocno IS NULL
   OR g_inpd_m.inpdseq IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   CALL aint841_show()
   
   CALL s_transaction_begin()
    
   LET g_inpdsite_t = g_inpd_m.inpdsite
   LET g_inpddocno_t = g_inpd_m.inpddocno
   LET g_inpdseq_t = g_inpd_m.inpdseq
 
   
   
 
   OPEN aint841_cl USING g_enterprise,
                           g_inpd_m.inpdsite
                           ,g_inpd_m.inpddocno
                           ,g_inpd_m.inpdseq
 
   IF STATUS THEN
      CALL cl_err("OPEN aint841_cl:", STATUS, 0)
      CLOSE aint841_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint841_master_referesh USING g_inpd_m.inpdsite,g_inpd_m.inpddocno,g_inpd_m.inpdseq INTO g_inpd_m.inpddocno, 
       g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd009,g_inpd_m.inpd059,g_inpd_m.inpdseq,g_inpd_m.inpdsite, 
       g_inpd_m.inpdstus,g_inpd_m.inpd001,g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002, 
       g_inpd_m.inpd003,g_inpd_m.inpd004,g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056,g_inpd_m.inpd057, 
       g_inpd_m.inpd060,g_inpd_m.inpd061,g_inpd_m.inpd014,g_inpd_m.inpd015,g_inpd_m.inpdownid,g_inpd_m.inpdowndp, 
       g_inpd_m.inpdcrtid,g_inpd_m.inpdcrtdp,g_inpd_m.inpdcrtdt,g_inpd_m.inpdmodid,g_inpd_m.inpdmoddt, 
       g_inpd_m.inpdcnfid,g_inpd_m.inpdcnfdt,g_inpd_m.inpdpstid,g_inpd_m.inpdpstdt,g_inpd_m.inpd058_desc, 
       g_inpd_m.inpd005_desc,g_inpd_m.inpd004_desc,g_inpd_m.inpd010_desc,g_inpd_m.inpd012_desc,g_inpd_m.inpd060_desc, 
       g_inpd_m.inpdownid_desc,g_inpd_m.inpdowndp_desc,g_inpd_m.inpdcrtid_desc,g_inpd_m.inpdcrtdp_desc, 
       g_inpd_m.inpdmodid_desc,g_inpd_m.inpdcnfid_desc,g_inpd_m.inpdpstid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_inpd_m.inpdsite,SQLCA.sqlcode,0)
      RETURN
   END IF
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL aint841_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
      DELETE FROM inpd_t 
       WHERE inpdent = g_enterprise AND inpdsite = g_inpd_m.inpdsite 
         AND inpddocno = g_inpd_m.inpddocno 
         AND inpdseq = g_inpd_m.inpdseq 
 
 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("inpd_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
  
      
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      CLEAR FORM
      CALL aint841_ui_browser_refresh()
      IF g_browser_cnt > 0 THEN
         CALL aint841_browser_fill(g_wc,"")
         CALL aint841_fetch("P")
      ELSE
         CALL aint841_browser_fill(" 1=1 ","F")
      END IF
      
   END IF
 
   CLOSE aint841_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_inpd_m.inpdsite,"D")
 
END FUNCTION
]]>
  </section>
  <section id="aint841.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000016
#+ 
#+ Filename...: aint841
#+ Description: 現有庫存復盤二維護作業
#+ Creator....: 01534(2014/06/11)
#+ Modifier...: 01534(2014/06/29)
#+ Buildtype..: 應用 i01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="aint841.fetch" ver="4" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint841_fetch(p_fl)
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   CASE p_fl
      WHEN "F" LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         LET g_current_idx = g_header_cnt        
      WHEN "/"
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx - 1
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   
   
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx)
 
   CALL cl_navigator_setting(g_browser_idx, g_current_cnt) 
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_inpd_m.inpdsite = g_browser[g_current_idx].b_inpdsite
   LET g_inpd_m.inpddocno = g_browser[g_current_idx].b_inpddocno
   LET g_inpd_m.inpdseq = g_browser[g_current_idx].b_inpdseq
 
                       
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint841_master_referesh USING g_inpd_m.inpdsite,g_inpd_m.inpddocno,g_inpd_m.inpdseq INTO g_inpd_m.inpddocno, 
       g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd009,g_inpd_m.inpd059,g_inpd_m.inpdseq,g_inpd_m.inpdsite, 
       g_inpd_m.inpdstus,g_inpd_m.inpd001,g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002, 
       g_inpd_m.inpd003,g_inpd_m.inpd004,g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056,g_inpd_m.inpd057, 
       g_inpd_m.inpd060,g_inpd_m.inpd061,g_inpd_m.inpd014,g_inpd_m.inpd015,g_inpd_m.inpdownid,g_inpd_m.inpdowndp, 
       g_inpd_m.inpdcrtid,g_inpd_m.inpdcrtdp,g_inpd_m.inpdcrtdt,g_inpd_m.inpdmodid,g_inpd_m.inpdmoddt, 
       g_inpd_m.inpdcnfid,g_inpd_m.inpdcnfdt,g_inpd_m.inpdpstid,g_inpd_m.inpdpstdt,g_inpd_m.inpd058_desc, 
       g_inpd_m.inpd005_desc,g_inpd_m.inpd004_desc,g_inpd_m.inpd010_desc,g_inpd_m.inpd012_desc,g_inpd_m.inpd060_desc, 
       g_inpd_m.inpdownid_desc,g_inpd_m.inpdowndp_desc,g_inpd_m.inpdcrtid_desc,g_inpd_m.inpdcrtdp_desc, 
       g_inpd_m.inpdmodid_desc,g_inpd_m.inpdcnfid_desc,g_inpd_m.inpdpstid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("inpd_t",SQLCA.sqlcode,0)
      INITIALIZE g_inpd_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #重新顯示
   CALL aint841_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="aint841.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION aint841_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON inpddocno,inpdseq,inpdsite,inpd058,inpd059,inpd009,inpd008
                          FROM s_browse[1].b_inpddocno,s_browse[1].b_inpdseq,s_browse[1].b_inpdsite, 
                              s_browse[1].b_inpd058,s_browse[1].b_inpd059,s_browse[1].b_inpd009,s_browse[1].b_inpd008 

 
         BEFORE CONSTRUCT
               DISPLAY aint841_filter_parser('inpddocno') TO s_browse[1].b_inpddocno
            DISPLAY aint841_filter_parser('inpdseq') TO s_browse[1].b_inpdseq
            DISPLAY aint841_filter_parser('inpdsite') TO s_browse[1].b_inpdsite
            DISPLAY aint841_filter_parser('inpd058') TO s_browse[1].b_inpd058
            DISPLAY aint841_filter_parser('inpd059') TO s_browse[1].b_inpd059
            DISPLAY aint841_filter_parser('inpd009') TO s_browse[1].b_inpd009
            DISPLAY aint841_filter_parser('inpd008') TO s_browse[1].b_inpd008
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint841_filter_show('inpddocno')
   CALL aint841_filter_show('inpdseq')
   CALL aint841_filter_show('inpdsite')
   CALL aint841_filter_show('inpd058')
   CALL aint841_filter_show('inpd059')
   CALL aint841_filter_show('inpd009')
   CALL aint841_filter_show('inpd008')
 
END FUNCTION
]]>
  </section>
  <section id="aint841.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aint841_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aint841.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aint841_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint841_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aint841.global" ver="2" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_inpd_m RECORD
       inpddocno LIKE inpd_t.inpddocno, 
   inpd008 LIKE inpd_t.inpd008, 
   inpd058 LIKE inpd_t.inpd058, 
   inpd058_desc LIKE type_t.chr80, 
   inpddocno_desc LIKE type_t.chr80, 
   inpd009 LIKE inpd_t.inpd009, 
   inpd059 LIKE inpd_t.inpd059, 
   inpdseq LIKE inpd_t.inpdseq, 
   inpdsite LIKE inpd_t.inpdsite, 
   inpdstus LIKE inpd_t.inpdstus, 
   inpd001 LIKE inpd_t.inpd001, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   inpd005 LIKE inpd_t.inpd005, 
   inpd005_desc LIKE type_t.chr80, 
   inpd006 LIKE inpd_t.inpd006, 
   inpd006_desc LIKE type_t.chr80, 
   inpd007 LIKE inpd_t.inpd007, 
   inpd002 LIKE inpd_t.inpd002, 
   inpd003 LIKE inpd_t.inpd003, 
   inpd004 LIKE inpd_t.inpd004, 
   inpd004_desc LIKE type_t.chr80, 
   inpd010 LIKE inpd_t.inpd010, 
   inpd010_desc LIKE type_t.chr80, 
   inpd012 LIKE inpd_t.inpd012, 
   inpd012_desc LIKE type_t.chr80, 
   inpd056 LIKE inpd_t.inpd056, 
   inpd057 LIKE inpd_t.inpd057, 
   inpd060 LIKE inpd_t.inpd060, 
   inpd060_desc LIKE type_t.chr80, 
   inpd061 LIKE inpd_t.inpd061, 
   inpd014 LIKE inpd_t.inpd014, 
   inpd014_desc LIKE type_t.chr80, 
   inpd015 LIKE inpd_t.inpd015, 
   inpdownid LIKE inpd_t.inpdownid, 
   inpdownid_desc LIKE type_t.chr80, 
   inpdowndp LIKE inpd_t.inpdowndp, 
   inpdowndp_desc LIKE type_t.chr80, 
   inpdcrtid LIKE inpd_t.inpdcrtid, 
   inpdcrtid_desc LIKE type_t.chr80, 
   inpdcrtdp LIKE inpd_t.inpdcrtdp, 
   inpdcrtdp_desc LIKE type_t.chr80, 
   inpdcrtdt DATETIME YEAR TO SECOND, 
   inpdmodid LIKE inpd_t.inpdmodid, 
   inpdmodid_desc LIKE type_t.chr80, 
   inpdmoddt DATETIME YEAR TO SECOND, 
   inpdcnfid LIKE inpd_t.inpdcnfid, 
   inpdcnfid_desc LIKE type_t.chr80, 
   inpdcnfdt DATETIME YEAR TO SECOND, 
   inpdpstid LIKE inpd_t.inpdpstid, 
   inpdpstid_desc LIKE type_t.chr80, 
   inpdpstdt DATETIME YEAR TO SECOND
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_inpd_m        type_g_inpd_m
DEFINE g_inpd_m_t      type_g_inpd_m                #備份舊值
   DEFINE g_inpddocno_t LIKE inpd_t.inpddocno
DEFINE g_inpdseq_t LIKE inpd_t.inpdseq
DEFINE g_inpdsite_t LIKE inpd_t.inpdsite
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD                   #資料瀏覽之欄位  
         b_statepic     LIKE type_t.chr50,
            b_inpddocno LIKE inpd_t.inpddocno,
      b_inpdseq LIKE inpd_t.inpdseq,
      b_inpdsite LIKE inpd_t.inpdsite,
      b_inpd058 LIKE inpd_t.inpd058,
   b_inpd058_desc LIKE type_t.chr80,
      b_inpd059 LIKE inpd_t.inpd059,
      b_inpd009 LIKE inpd_t.inpd009,
      b_inpd008 LIKE inpd_t.inpd008
         #,rank           LIKE type_t.num10
      END RECORD 
   
 
   
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
  
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING             #確定當下點擊的單身
 
#快速搜尋用
DEFINE g_searchcol           STRING             #查詢欄位代碼
DEFINE g_searchstr           STRING             #查詢欄位字串
DEFINE g_order               STRING             #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5   #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5   #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10  #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5   #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5   #Browser 總筆數(所有資料)
DEFINE g_tmp_page            LIKE type_t.num5   
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_chk                 BOOLEAN
DEFINE g_default             BOOLEAN            #是否有外部參數查詢
DEFINE g_log1                STRING             #log用
DEFINE g_log2                STRING             #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aint841.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint841_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
      CALL cl_set_combo_scc_part('inpdstus','13','N,Y')
 
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL aint841_default_search()
 
END FUNCTION
]]>
  </section>
  <section id="aint841.input" ver="2" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aint841_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   CALL cl_set_head_visible("","YES")  
   
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL aint841_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint841_set_no_entry(p_cmd)
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DISPLAY BY NAME g_inpd_m.inpddocno,g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd009,g_inpd_m.inpd059, 
       g_inpd_m.inpdseq,g_inpd_m.inpdsite,g_inpd_m.inpdstus,g_inpd_m.inpd001,g_inpd_m.imaal003,g_inpd_m.imaal004, 
       g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002,g_inpd_m.inpd003,g_inpd_m.inpd004, 
       g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056,g_inpd_m.inpd057,g_inpd_m.inpd060,g_inpd_m.inpd061, 
       g_inpd_m.inpd014,g_inpd_m.inpd015
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_inpd_m.inpddocno,g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd009,g_inpd_m.inpd059, 
          g_inpd_m.inpdseq,g_inpd_m.inpdsite,g_inpd_m.inpdstus,g_inpd_m.inpd001,g_inpd_m.imaal003,g_inpd_m.imaal004, 
          g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002,g_inpd_m.inpd003,g_inpd_m.inpd004, 
          g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056,g_inpd_m.inpd057,g_inpd_m.inpd060,g_inpd_m.inpd061, 
          g_inpd_m.inpd014,g_inpd_m.inpd015 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            
            #add-point:input開始前
            {<point name="input.before.input"/>}
            #end add-point
   
                  #此段落由子樣板a02產生
         AFTER FIELD inpddocno
            
            #add-point:AFTER FIELD inpddocno
            {<point name="input.a.inpddocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpddocno
            #add-point:BEFORE FIELD inpddocno
            {<point name="input.b.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpddocno
            #add-point:ON CHANGE inpddocno
            {<point name="input.g.inpddocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd008
            #add-point:BEFORE FIELD inpd008
            {<point name="input.b.inpd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd008
            
            #add-point:AFTER FIELD inpd008
            {<point name="input.a.inpd008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd008
            #add-point:ON CHANGE inpd008
            {<point name="input.g.inpd008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd058
            
            #add-point:AFTER FIELD inpd058
            {<point name="input.a.inpd058" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd058
            #add-point:BEFORE FIELD inpd058
            {<point name="input.b.inpd058" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd058
            #add-point:ON CHANGE inpd058
            {<point name="input.g.inpd058" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd009
            #add-point:BEFORE FIELD inpd009
            {<point name="input.b.inpd009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd009
            
            #add-point:AFTER FIELD inpd009
            {<point name="input.a.inpd009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd009
            #add-point:ON CHANGE inpd009
            {<point name="input.g.inpd009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd059
            #add-point:BEFORE FIELD inpd059
            {<point name="input.b.inpd059" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd059
            
            #add-point:AFTER FIELD inpd059
            {<point name="input.a.inpd059" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd059
            #add-point:ON CHANGE inpd059
            {<point name="input.g.inpd059" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdseq
            #add-point:BEFORE FIELD inpdseq
            {<point name="input.b.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdseq
            
            #add-point:AFTER FIELD inpdseq
            {<point name="input.a.inpdseq" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpdseq
            #add-point:ON CHANGE inpdseq
            {<point name="input.g.inpdseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdsite
            #add-point:BEFORE FIELD inpdsite
            {<point name="input.b.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdsite
            
            #add-point:AFTER FIELD inpdsite
            {<point name="input.a.inpdsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpdsite
            #add-point:ON CHANGE inpdsite
            {<point name="input.g.inpdsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpdstus
            #add-point:BEFORE FIELD inpdstus
            {<point name="input.b.inpdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpdstus
            
            #add-point:AFTER FIELD inpdstus
            {<point name="input.a.inpdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpdstus
            #add-point:ON CHANGE inpdstus
            {<point name="input.g.inpdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd001
            
            #add-point:AFTER FIELD inpd001
            {<point name="input.a.inpd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd001
            #add-point:BEFORE FIELD inpd001
            {<point name="input.b.inpd001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd001
            #add-point:ON CHANGE inpd001
            {<point name="input.g.inpd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd005
            
            #add-point:AFTER FIELD inpd005
            {<point name="input.a.inpd005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd005
            #add-point:BEFORE FIELD inpd005
            {<point name="input.b.inpd005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd005
            #add-point:ON CHANGE inpd005
            {<point name="input.g.inpd005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd006
            
            #add-point:AFTER FIELD inpd006
            {<point name="input.a.inpd006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd006
            #add-point:BEFORE FIELD inpd006
            {<point name="input.b.inpd006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd006
            #add-point:ON CHANGE inpd006
            {<point name="input.g.inpd006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd007
            #add-point:BEFORE FIELD inpd007
            {<point name="input.b.inpd007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd007
            
            #add-point:AFTER FIELD inpd007
            {<point name="input.a.inpd007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd007
            #add-point:ON CHANGE inpd007
            {<point name="input.g.inpd007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd002
            #add-point:BEFORE FIELD inpd002
            {<point name="input.b.inpd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd002
            
            #add-point:AFTER FIELD inpd002
            {<point name="input.a.inpd002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd002
            #add-point:ON CHANGE inpd002
            {<point name="input.g.inpd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd003
            #add-point:BEFORE FIELD inpd003
            {<point name="input.b.inpd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd003
            
            #add-point:AFTER FIELD inpd003
            {<point name="input.a.inpd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd003
            #add-point:ON CHANGE inpd003
            {<point name="input.g.inpd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd004
            
            #add-point:AFTER FIELD inpd004
            {<point name="input.a.inpd004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd004
            #add-point:BEFORE FIELD inpd004
            {<point name="input.b.inpd004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd004
            #add-point:ON CHANGE inpd004
            {<point name="input.g.inpd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd010
            
            #add-point:AFTER FIELD inpd010
            {<point name="input.a.inpd010" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd010
            #add-point:BEFORE FIELD inpd010
            {<point name="input.b.inpd010" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd010
            #add-point:ON CHANGE inpd010
            {<point name="input.g.inpd010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd012
            
            #add-point:AFTER FIELD inpd012
            {<point name="input.a.inpd012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd012
            #add-point:BEFORE FIELD inpd012
            {<point name="input.b.inpd012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd012
            #add-point:ON CHANGE inpd012
            {<point name="input.g.inpd012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd056
            #add-point:BEFORE FIELD inpd056
            {<point name="input.b.inpd056" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd056
            
            #add-point:AFTER FIELD inpd056
            {<point name="input.a.inpd056" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd056
            #add-point:ON CHANGE inpd056
            {<point name="input.g.inpd056" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd057
            #add-point:BEFORE FIELD inpd057
            {<point name="input.b.inpd057" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd057
            
            #add-point:AFTER FIELD inpd057
            {<point name="input.a.inpd057" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd057
            #add-point:ON CHANGE inpd057
            {<point name="input.g.inpd057" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd060
            
            #add-point:AFTER FIELD inpd060
            {<point name="input.a.inpd060" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd060
            #add-point:BEFORE FIELD inpd060
            {<point name="input.b.inpd060" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd060
            #add-point:ON CHANGE inpd060
            {<point name="input.g.inpd060" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd061
            #add-point:BEFORE FIELD inpd061
            {<point name="input.b.inpd061" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd061
            
            #add-point:AFTER FIELD inpd061
            {<point name="input.a.inpd061" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd061
            #add-point:ON CHANGE inpd061
            {<point name="input.g.inpd061" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd014
            
            #add-point:AFTER FIELD inpd014
            {<point name="input.a.inpd014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd014
            #add-point:BEFORE FIELD inpd014
            {<point name="input.b.inpd014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE inpd014
            #add-point:ON CHANGE inpd014
            {<point name="input.g.inpd014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD inpd015
            #add-point:BEFORE FIELD inpd015
            {<point name="input.b.inpd015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD inpd015
            
            #add-point:AFTER FIELD inpd015
            {<point name="input.a.inpd015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE inpd015
            #add-point:ON CHANGE inpd015
            {<point name="input.g.inpd015" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.inpddocno
         ON ACTION controlp INFIELD inpddocno
            #add-point:ON ACTION controlp INFIELD inpddocno
            {<point name="input.c.inpddocno" />}
            #END add-point
 
         #Ctrlp:input.c.inpd008
         ON ACTION controlp INFIELD inpd008
            #add-point:ON ACTION controlp INFIELD inpd008
            {<point name="input.c.inpd008" />}
            #END add-point
 
         #Ctrlp:input.c.inpd058
         ON ACTION controlp INFIELD inpd058
            #add-point:ON ACTION controlp INFIELD inpd058
            {<point name="input.c.inpd058" />}
            #END add-point
 
         #Ctrlp:input.c.inpd009
         ON ACTION controlp INFIELD inpd009
            #add-point:ON ACTION controlp INFIELD inpd009
            {<point name="input.c.inpd009" />}
            #END add-point
 
         #Ctrlp:input.c.inpd059
         ON ACTION controlp INFIELD inpd059
            #add-point:ON ACTION controlp INFIELD inpd059
            {<point name="input.c.inpd059" />}
            #END add-point
 
         #Ctrlp:input.c.inpdseq
         ON ACTION controlp INFIELD inpdseq
            #add-point:ON ACTION controlp INFIELD inpdseq
            {<point name="input.c.inpdseq" />}
            #END add-point
 
         #Ctrlp:input.c.inpdsite
         ON ACTION controlp INFIELD inpdsite
            #add-point:ON ACTION controlp INFIELD inpdsite
            {<point name="input.c.inpdsite" />}
            #END add-point
 
         #Ctrlp:input.c.inpdstus
         ON ACTION controlp INFIELD inpdstus
            #add-point:ON ACTION controlp INFIELD inpdstus
            {<point name="input.c.inpdstus" />}
            #END add-point
 
         #Ctrlp:input.c.inpd001
         ON ACTION controlp INFIELD inpd001
            #add-point:ON ACTION controlp INFIELD inpd001
            {<point name="input.c.inpd001" />}
            #END add-point
 
         #Ctrlp:input.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point
 
         #Ctrlp:input.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point
 
         #Ctrlp:input.c.inpd005
         ON ACTION controlp INFIELD inpd005
            #add-point:ON ACTION controlp INFIELD inpd005
            {<point name="input.c.inpd005" />}
            #END add-point
 
         #Ctrlp:input.c.inpd006
         ON ACTION controlp INFIELD inpd006
            #add-point:ON ACTION controlp INFIELD inpd006
            {<point name="input.c.inpd006" />}
            #END add-point
 
         #Ctrlp:input.c.inpd007
         ON ACTION controlp INFIELD inpd007
            #add-point:ON ACTION controlp INFIELD inpd007
            {<point name="input.c.inpd007" />}
            #END add-point
 
         #Ctrlp:input.c.inpd002
         ON ACTION controlp INFIELD inpd002
            #add-point:ON ACTION controlp INFIELD inpd002
            {<point name="input.c.inpd002" />}
            #END add-point
 
         #Ctrlp:input.c.inpd003
         ON ACTION controlp INFIELD inpd003
            #add-point:ON ACTION controlp INFIELD inpd003
            {<point name="input.c.inpd003" />}
            #END add-point
 
         #Ctrlp:input.c.inpd004
         ON ACTION controlp INFIELD inpd004
            #add-point:ON ACTION controlp INFIELD inpd004
            {<point name="input.c.inpd004" />}
            #END add-point
 
         #Ctrlp:input.c.inpd010
         ON ACTION controlp INFIELD inpd010
            #add-point:ON ACTION controlp INFIELD inpd010
            {<point name="input.c.inpd010" />}
            #END add-point
 
         #Ctrlp:input.c.inpd012
         ON ACTION controlp INFIELD inpd012
            #add-point:ON ACTION controlp INFIELD inpd012
            {<point name="input.c.inpd012" />}
            #END add-point
 
         #Ctrlp:input.c.inpd056
         ON ACTION controlp INFIELD inpd056
            #add-point:ON ACTION controlp INFIELD inpd056
            {<point name="input.c.inpd056" />}
            #END add-point
 
         #Ctrlp:input.c.inpd057
         ON ACTION controlp INFIELD inpd057
            #add-point:ON ACTION controlp INFIELD inpd057
            {<point name="input.c.inpd057" />}
            #END add-point
 
         #Ctrlp:input.c.inpd060
         ON ACTION controlp INFIELD inpd060
            #add-point:ON ACTION controlp INFIELD inpd060
            {<point name="input.c.inpd060" />}
            #END add-point
 
         #Ctrlp:input.c.inpd061
         ON ACTION controlp INFIELD inpd061
            #add-point:ON ACTION controlp INFIELD inpd061
            {<point name="input.c.inpd061" />}
            #END add-point
 
         #Ctrlp:input.c.inpd014
         ON ACTION controlp INFIELD inpd014
            #add-point:ON ACTION controlp INFIELD inpd014
            {<point name="input.c.inpd014" />}
            #END add-point
 
         #Ctrlp:input.c.inpd015
         ON ACTION controlp INFIELD inpd015
            #add-point:ON ACTION controlp INFIELD inpd015
            {<point name="input.c.inpd015" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()   #錯誤訊息統整顯示
 
            IF p_cmd <> "u" THEN
               LET l_count = 1  
 
               SELECT COUNT(*) INTO l_count FROM inpd_t
                WHERE inpdent = g_enterprise AND inpdsite = g_inpd_m.inpdsite
                  AND inpddocno = g_inpd_m.inpddocno
                  AND inpdseq = g_inpd_m.inpdseq
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  INSERT INTO inpd_t (inpdent,inpddocno,inpd008,inpd058,inpd009,inpd059,inpdseq,inpdsite, 
                      inpdstus,inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd012, 
                      inpd056,inpd057,inpd060,inpd061,inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid, 
                      inpdcrtdp,inpdcrtdt,inpdcnfid,inpdcnfdt,inpdpstid,inpdpstdt)
                  VALUES (g_enterprise,g_inpd_m.inpddocno,g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd009, 
                      g_inpd_m.inpd059,g_inpd_m.inpdseq,g_inpd_m.inpdsite,g_inpd_m.inpdstus,g_inpd_m.inpd001, 
                      g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002,g_inpd_m.inpd003, 
                      g_inpd_m.inpd004,g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056,g_inpd_m.inpd057, 
                      g_inpd_m.inpd060,g_inpd_m.inpd061,g_inpd_m.inpd014,g_inpd_m.inpd015,g_inpd_m.inpdownid, 
                      g_inpd_m.inpdowndp,g_inpd_m.inpdcrtid,g_inpd_m.inpdcrtdp,g_inpd_m.inpdcrtdt,g_inpd_m.inpdcnfid, 
                      g_inpd_m.inpdcnfdt,g_inpd_m.inpdpstid,g_inpd_m.inpdpstdt) 
                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL cl_err( "g_inpd_m.inpdsite", "std-00006", 0 )
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE inpd_t SET (inpddocno,inpd008,inpd058,inpd009,inpd059,inpdseq,inpdsite,inpdstus, 
                   inpd001,inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd012,inpd056,inpd057, 
                   inpd060,inpd061,inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt, 
                   inpdcnfid,inpdcnfdt,inpdpstid,inpdpstdt) = (g_inpd_m.inpddocno,g_inpd_m.inpd008,g_inpd_m.inpd058, 
                   g_inpd_m.inpd009,g_inpd_m.inpd059,g_inpd_m.inpdseq,g_inpd_m.inpdsite,g_inpd_m.inpdstus, 
                   g_inpd_m.inpd001,g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002, 
                   g_inpd_m.inpd003,g_inpd_m.inpd004,g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056, 
                   g_inpd_m.inpd057,g_inpd_m.inpd060,g_inpd_m.inpd061,g_inpd_m.inpd014,g_inpd_m.inpd015, 
                   g_inpd_m.inpdownid,g_inpd_m.inpdowndp,g_inpd_m.inpdcrtid,g_inpd_m.inpdcrtdp,g_inpd_m.inpdcrtdt, 
                   g_inpd_m.inpdcnfid,g_inpd_m.inpdcnfdt,g_inpd_m.inpdpstid,g_inpd_m.inpdpstdt)
                WHERE inpdent = g_enterprise AND inpdsite = g_inpdsite_t #
                  AND inpddocno = g_inpddocno_t
                  AND inpdseq = g_inpdseq_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("inpd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("inpd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                     #資料多語言用-增/改
                     
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     LET g_log1 = util.JSON.stringify(g_inpd_m_t)
                     LET g_log2 = util.JSON.stringify(g_inpd_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            END IF
           #controlp
      END INPUT
          
      #add-point:input段more input 
      {<point name="input.more_input"/>}
      #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aint841.insert" ver="2" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aint841_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM #清畫面欄位內容
   INITIALIZE g_inpd_m.* LIKE inpd_t.*             #DEFAULT 設定
   LET g_inpdsite_t = NULL
   LET g_inpddocno_t = NULL
   LET g_inpdseq_t = NULL
 
   CALL s_transaction_begin()
   
   WHILE TRUE
      
      #公用欄位給值
      #此段落由子樣板a14產生    
      LET g_inpd_m.inpdownid = g_user
      LET g_inpd_m.inpdowndp = g_dept
      LET g_inpd_m.inpdcrtid = g_user
      LET g_inpd_m.inpdcrtdp = g_dept 
      LET g_inpd_m.inpdcrtdt = cl_get_current()
      LET g_inpd_m.inpdmodid = ""
      LET g_inpd_m.inpdmoddt = ""
      LET g_inpd_m.inpdstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_inpd_m.inpd009 = "Y"
 
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      CALL aint841_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inpd_m.* = g_inpd_m_t.*
         CALL aint841_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   LET g_inpdsite_t = g_inpd_m.inpdsite
   LET g_inpddocno_t = g_inpd_m.inpddocno
   LET g_inpdseq_t = g_inpd_m.inpdseq
 
   
   LET g_state = "Y"
 
   LET g_wc = g_wc,  
              " OR ( inpdent = '" ||g_enterprise|| "' AND",
              " inpdsite = '", g_inpd_m.inpdsite CLIPPED, "' "
              ," AND inpddocno = '", g_inpd_m.inpddocno CLIPPED, "' "
              ," AND inpdseq = '", g_inpd_m.inpdseq CLIPPED, "' "
 
              , ") "
 
END FUNCTION
]]>
  </section>
  <section id="aint841.main" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT inpddocno,inpd008,inpd058,'','',inpd009,inpd059,inpdseq,inpdsite,inpdstus, 
       inpd001,'','',inpd005,'',inpd006,'',inpd007,inpd002,inpd003,inpd004,'',inpd010,'',inpd012,'', 
       inpd056,inpd057,inpd060,'',inpd061,inpd014,'',inpd015,inpdownid,'',inpdowndp,'',inpdcrtid,'', 
       inpdcrtdp,'',inpdcrtdt,inpdmodid,'',inpdmoddt,inpdcnfid,'',inpdcnfdt,inpdpstid,'',inpdpstdt", 
        
                      " FROM inpd_t",
                      " WHERE inpdent= ? AND inpdsite=? AND inpddocno=? AND inpdseq=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint841_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE inpddocno,inpd008,inpd058,inpd009,inpd059,inpdseq,inpdsite,inpdstus,inpd001, 
       inpd005,inpd006,inpd007,inpd002,inpd003,inpd004,inpd010,inpd012,inpd056,inpd057,inpd060,inpd061, 
       inpd014,inpd015,inpdownid,inpdowndp,inpdcrtid,inpdcrtdp,inpdcrtdt,inpdmodid,inpdmoddt,inpdcnfid, 
       inpdcnfdt,inpdpstid,inpdpstdt,t1.oofa011 ,t2.inaa002 ,t4.imaal003 ,t5.oocal003 ,t6.oocal003 , 
       t7.oofa011 ,t8.oofa011 ,t9.ooefl003 ,t10.oofa011 ,t11.ooefl003 ,t12.oofa011 ,t13.oofa011 ,t14.oofa011", 

               " FROM inpd_t",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=inpd058  ",
               " LEFT JOIN inaa_t t2 ON t2.inaaent='"||g_enterprise||"' AND t2.inaasite=inpdsite AND t2.inaa001=inpd005  ",
               " LEFT JOIN imaal_t t4 ON t4.imaalent='"||g_enterprise||"' AND t4.imaal001=inpd004 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=inpd010 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t6 ON t6.oocalent='"||g_enterprise||"' AND t6.oocal001=inpd012 AND t6.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa002='2' AND t7.oofa003=inpd060  ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=inpdownid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=inpdowndp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t10 ON t10.oofaent='"||g_enterprise||"' AND t10.oofa002='2' AND t10.oofa003=inpdcrtid  ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=inpdcrtdp AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t12 ON t12.oofaent='"||g_enterprise||"' AND t12.oofa002='2' AND t12.oofa003=inpdmodid  ",
               " LEFT JOIN oofa_t t13 ON t13.oofaent='"||g_enterprise||"' AND t13.oofa002='2' AND t13.oofa003=inpdcnfid  ",
               " LEFT JOIN oofa_t t14 ON t14.oofaent='"||g_enterprise||"' AND t14.oofa002='2' AND t14.oofa003=inpdpstid  ",
 
               " WHERE inpdent = '" ||g_enterprise|| "' AND inpdsite = ? AND inpddocno = ? AND inpdseq = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint841_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint841 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint841_init()   
 
      #進入選單 Menu (="N")
      CALL aint841_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint841
      
   END IF 
   
   CLOSE aint841_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="aint841.modify" ver="3" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aint841_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   IF g_inpd_m.inpdsite IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
   
   EXECUTE aint841_master_referesh USING g_inpd_m.inpdsite,g_inpd_m.inpddocno,g_inpd_m.inpdseq INTO g_inpd_m.inpddocno, 
       g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd009,g_inpd_m.inpd059,g_inpd_m.inpdseq,g_inpd_m.inpdsite, 
       g_inpd_m.inpdstus,g_inpd_m.inpd001,g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002, 
       g_inpd_m.inpd003,g_inpd_m.inpd004,g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056,g_inpd_m.inpd057, 
       g_inpd_m.inpd060,g_inpd_m.inpd061,g_inpd_m.inpd014,g_inpd_m.inpd015,g_inpd_m.inpdownid,g_inpd_m.inpdowndp, 
       g_inpd_m.inpdcrtid,g_inpd_m.inpdcrtdp,g_inpd_m.inpdcrtdt,g_inpd_m.inpdmodid,g_inpd_m.inpdmoddt, 
       g_inpd_m.inpdcnfid,g_inpd_m.inpdcnfdt,g_inpd_m.inpdpstid,g_inpd_m.inpdpstdt,g_inpd_m.inpd058_desc, 
       g_inpd_m.inpd005_desc,g_inpd_m.inpd004_desc,g_inpd_m.inpd010_desc,g_inpd_m.inpd012_desc,g_inpd_m.inpd060_desc, 
       g_inpd_m.inpdownid_desc,g_inpd_m.inpdowndp_desc,g_inpd_m.inpdcrtid_desc,g_inpd_m.inpdcrtdp_desc, 
       g_inpd_m.inpdmodid_desc,g_inpd_m.inpdcnfid_desc,g_inpd_m.inpdpstid_desc
 
   ERROR ""
  
   LET g_inpdsite_t = g_inpd_m.inpdsite
   LET g_inpddocno_t = g_inpd_m.inpddocno
   LET g_inpdseq_t = g_inpd_m.inpdseq
 
   
   CALL s_transaction_begin()
   
   OPEN aint841_cl USING g_enterprise,g_inpd_m.inpdsite,g_inpd_m.inpddocno,g_inpd_m.inpdseq
   IF STATUS THEN
      CALL cl_err("OPEN aint841_cl:", STATUS, 1)
      CLOSE aint841_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint841_master_referesh USING g_inpd_m.inpdsite,g_inpd_m.inpddocno,g_inpd_m.inpdseq INTO g_inpd_m.inpddocno, 
       g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd009,g_inpd_m.inpd059,g_inpd_m.inpdseq,g_inpd_m.inpdsite, 
       g_inpd_m.inpdstus,g_inpd_m.inpd001,g_inpd_m.inpd005,g_inpd_m.inpd006,g_inpd_m.inpd007,g_inpd_m.inpd002, 
       g_inpd_m.inpd003,g_inpd_m.inpd004,g_inpd_m.inpd010,g_inpd_m.inpd012,g_inpd_m.inpd056,g_inpd_m.inpd057, 
       g_inpd_m.inpd060,g_inpd_m.inpd061,g_inpd_m.inpd014,g_inpd_m.inpd015,g_inpd_m.inpdownid,g_inpd_m.inpdowndp, 
       g_inpd_m.inpdcrtid,g_inpd_m.inpdcrtdp,g_inpd_m.inpdcrtdt,g_inpd_m.inpdmodid,g_inpd_m.inpdmoddt, 
       g_inpd_m.inpdcnfid,g_inpd_m.inpdcnfdt,g_inpd_m.inpdpstid,g_inpd_m.inpdpstdt,g_inpd_m.inpd058_desc, 
       g_inpd_m.inpd005_desc,g_inpd_m.inpd004_desc,g_inpd_m.inpd010_desc,g_inpd_m.inpd012_desc,g_inpd_m.inpd060_desc, 
       g_inpd_m.inpdownid_desc,g_inpd_m.inpdowndp_desc,g_inpd_m.inpdcrtid_desc,g_inpd_m.inpdcrtdp_desc, 
       g_inpd_m.inpdmodid_desc,g_inpd_m.inpdcnfid_desc,g_inpd_m.inpdpstid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err("inpd_t",SQLCA.sqlcode,0)
      CLOSE aint841_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL aint841_show()
   
   WHILE TRUE
      LET g_inpd_m.inpdsite = g_inpdsite_t
      LET g_inpd_m.inpddocno = g_inpddocno_t
      LET g_inpd_m.inpdseq = g_inpdseq_t
 
      
      #寫入修改者/修改日期資訊
      LET g_inpd_m.inpdmodid = g_user 
LET g_inpd_m.inpdmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      CALL aint841_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_inpd_m.* = g_inpd_m_t.*
         CALL aint841_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
      UPDATE inpd_t SET (inpdmodid,inpdmoddt) = (g_inpd_m.inpdmodid,g_inpd_m.inpdmoddt)
       WHERE inpdent = g_enterprise AND inpdsite = g_inpdsite_t
         AND inpddocno = g_inpddocno_t
         AND inpdseq = g_inpdseq_t
 
 
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_inpd_m.inpdsite,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE aint841_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_inpd_m.inpdsite,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
]]>
  </section>
  <section id="aint841.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="aint841.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aint841.query" ver="1" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint841_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL g_browser.clear() 
 
   IF g_worksheet_hidden THEN  #browser panel折疊
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   IF g_header_hidden THEN    #單頭折疊
      CALL gfrm_curr.setElementHidden("vb_master",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_inpd_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL aint841_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aint841_browser_fill(g_wc,"F")
      CALL aint841_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
   END IF
   
   LET g_error_show = 1
   CALL aint841_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL aint841_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="aint841.reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aint841_reproduce()
   DEFINE l_newno     LIKE inpd_t.inpdsite 
   DEFINE l_oldno     LIKE inpd_t.inpdsite 
   DEFINE l_newno02     LIKE inpd_t.inpddocno 
   DEFINE l_oldno02     LIKE inpd_t.inpddocno 
   DEFINE l_newno03     LIKE inpd_t.inpdseq 
   DEFINE l_oldno03     LIKE inpd_t.inpdseq 
 
   DEFINE l_master    RECORD LIKE inpd_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_inpd_m.inpdsite IS NULL
      OR g_inpd_m.inpddocno IS NULL
      OR g_inpd_m.inpdseq IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_inpdsite_t = g_inpd_m.inpdsite
   LET g_inpddocno_t = g_inpd_m.inpddocno
   LET g_inpdseq_t = g_inpd_m.inpdseq
 
   
   LET g_inpd_m.inpdsite = ""
   LET g_inpd_m.inpddocno = ""
   LET g_inpd_m.inpdseq = ""
 
    
   CALL aint841_set_entry("a")
   CALL aint841_set_no_entry("a")
   
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_inpd_m.inpdownid = g_user
      LET g_inpd_m.inpdowndp = g_dept
      LET g_inpd_m.inpdcrtid = g_user
      LET g_inpd_m.inpdcrtdp = g_dept 
      LET g_inpd_m.inpdcrtdt = cl_get_current()
      LET g_inpd_m.inpdmodid = ""
      LET g_inpd_m.inpdmoddt = ""
      LET g_inpd_m.inpdstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL aint841_input("r")
 
      LET g_inpd_m.inpddocno_desc = ''
   DISPLAY BY NAME g_inpd_m.inpddocno_desc
 
   
   IF INT_FLAG  THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   CALL s_transaction_begin()
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("inpd_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " inpdsite = '", g_inpd_m.inpdsite CLIPPED, "' "
              ," AND inpddocno = '", g_inpd_m.inpddocno CLIPPED, "' "
              ," AND inpdseq = '", g_inpd_m.inpdseq CLIPPED, "' "
 
              , ") "
   
   LET g_inpdsite_t = g_inpd_m.inpdsite
   LET g_inpddocno_t = g_inpd_m.inpddocno
   LET g_inpdseq_t = g_inpd_m.inpdseq
 
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION
]]>
  </section>
  <section id="aint841.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint841_set_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("inpdsite,inpddocno,inpdseq",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint841.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint841_set_no_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("inpdsite,inpddocno,inpdseq",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aint841.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION aint841_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_inpd_m.inpdsite
   LET g_pk_array[1].column = 'inpdsite'
   LET g_pk_array[2].values = g_inpd_m.inpddocno
   LET g_pk_array[2].column = 'inpddocno'
   LET g_pk_array[3].values = g_inpd_m.inpdseq
   LET g_pk_array[3].column = 'inpdseq'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aint841.show" ver="1" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示 
PRIVATE FUNCTION aint841_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_inpd_m_t.* = g_inpd_m.*      #保存單頭舊值
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_inpd_m.inpdownid_desc = cl_get_username(g_inpd_m.inpdownid)
      #LET g_inpd_m.inpdowndp_desc = cl_get_deptname(g_inpd_m.inpdowndp)
      #LET g_inpd_m.inpdcrtid_desc = cl_get_username(g_inpd_m.inpdcrtid)
      #LET g_inpd_m.inpdcrtdp_desc = cl_get_deptname(g_inpd_m.inpdcrtdp)
      #LET g_inpd_m.inpdmodid_desc = cl_get_username(g_inpd_m.inpdmodid)
      #LET g_inpd_m.inpdcnfid_desc = cl_get_deptname(g_inpd_m.inpdcnfid)
      #LET g_inpd_m.inpdpstid_desc = cl_get_deptname(g_inpd_m.inpdpstid)
      
 
 
    
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL aint841_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_inpd_m.inpddocno,g_inpd_m.inpd008,g_inpd_m.inpd058,g_inpd_m.inpd058_desc,g_inpd_m.inpddocno_desc, 
       g_inpd_m.inpd009,g_inpd_m.inpd059,g_inpd_m.inpdseq,g_inpd_m.inpdsite,g_inpd_m.inpdstus,g_inpd_m.inpd001, 
       g_inpd_m.imaal003,g_inpd_m.imaal004,g_inpd_m.inpd005,g_inpd_m.inpd005_desc,g_inpd_m.inpd006,g_inpd_m.inpd006_desc, 
       g_inpd_m.inpd007,g_inpd_m.inpd002,g_inpd_m.inpd003,g_inpd_m.inpd004,g_inpd_m.inpd004_desc,g_inpd_m.inpd010, 
       g_inpd_m.inpd010_desc,g_inpd_m.inpd012,g_inpd_m.inpd012_desc,g_inpd_m.inpd056,g_inpd_m.inpd057, 
       g_inpd_m.inpd060,g_inpd_m.inpd060_desc,g_inpd_m.inpd061,g_inpd_m.inpd014,g_inpd_m.inpd014_desc, 
       g_inpd_m.inpd015,g_inpd_m.inpdownid,g_inpd_m.inpdownid_desc,g_inpd_m.inpdowndp,g_inpd_m.inpdowndp_desc, 
       g_inpd_m.inpdcrtid,g_inpd_m.inpdcrtid_desc,g_inpd_m.inpdcrtdp,g_inpd_m.inpdcrtdp_desc,g_inpd_m.inpdcrtdt, 
       g_inpd_m.inpdmodid,g_inpd_m.inpdmodid_desc,g_inpd_m.inpdmoddt,g_inpd_m.inpdcnfid,g_inpd_m.inpdcnfid_desc, 
       g_inpd_m.inpdcnfdt,g_inpd_m.inpdpstid,g_inpd_m.inpdpstid_desc,g_inpd_m.inpdpstdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_inpd_m.inpdstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="aint841.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="aint841.state_change" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION aint841_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_inpd_m.inpdsite IS NULL
      OR g_inpd_m.inpddocno IS NULL      OR g_inpd_m.inpdseq IS NULL
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_inpd_m.inpdstus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE inpd_t SET inpdstus = lc_state 
    WHERE inpdent = g_enterprise AND inpdsite = g_inpd_m.inpdsite
      AND inpddocno = g_inpd_m.inpddocno      AND inpdseq = g_inpd_m.inpdseq
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_inpd_m.inpdstus = lc_state
      DISPLAY BY NAME g_inpd_m.inpdstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aint841.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint841_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_inpdsite = g_inpd_m.inpdsite
         AND g_browser[l_i].b_inpddocno = g_inpd_m.inpddocno
         AND g_browser[l_i].b_inpdseq = g_inpd_m.inpdseq
 
         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser_cnt-1
   IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_idx = g_browser_cnt
   END IF
  
END FUNCTION
]]>
  </section>
  <section id="aint841.ui_dialog" ver="3" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aint841_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 1
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint841_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL aint841_browser_fill(g_wc,"")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_inpdsite = g_inpdsite_t
               AND g_browser[li_idx].b_inpddocno = g_inpddocno_t
               AND g_browser[li_idx].b_inpdseq = g_inpdseq_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
    
      IF g_main_hidden = 0 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL aint841_fetch("")   
               END IF               
         
            ON ACTION statechange
               CALL aint841_statechange()
               LET g_action_choice="statechange"
               
            ON ACTION first
               CALL aint841_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL aint841_fetch("N")
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL aint841_fetch("/")
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               CALL aint841_fetch("P")
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               CALL aint841_fetch("L")  
               #CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               #CALL fgl_set_arr_curr(g_current_idx)
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL aint841_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint841_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL aint841_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
         #+ 此段落由子樣板a43產生
         ON ACTION batch_confirm
            LET g_action_choice="batch_confirm"
            IF cl_auth_chk_act("batch_confirm") THEN
               
               #add-point:ON ACTION batch_confirm
               {<point name="menu2.batch_confirm" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint841_delete()
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint841_insert()
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint841_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint841_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint841_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION batch_number
            LET g_action_choice="batch_number"
            IF cl_auth_chk_act("batch_number") THEN
               
               #add-point:ON ACTION batch_number
               {<point name="menu2.batch_number" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION store_query
            LET g_action_choice="store_query"
            IF cl_auth_chk_act("store_query") THEN
               
               #add-point:ON ACTION store_query
               {<point name="menu2.store_query" />}
               #END add-point
               EXIT MENU
            END IF
 
 
            #
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aint841_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint841_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint841_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL aint841_fetch("")      
                  
               
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
            SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
            SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
         
            BEFORE DIALOG
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               LET g_curr_diag = ui.DIALOG.getCurrent()
               #LET g_page = "first" 
               #還原為原本指定筆數
               IF g_current_row > 1 THEN
                  #當刪除最後一筆資料時可能產生錯誤, 進行額外判斷
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  LET g_current_idx = g_current_row
                  CALL DIALOG.setCurrentRow("s_browse",g_current_idx)
               END IF
 
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL aint841_fetch("")   
               END IF               
               
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
            ON ACTION statechange
               LET g_action_choice="statechange"
               CALL aint841_statechange()
               EXIT DIALOG
         
            #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint841_filter()
               EXIT DIALOG
 
 
 
            
            ON ACTION first
               CALL aint841_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL aint841_fetch("N")
               LET g_current_row = g_current_idx
         
            ON ACTION jump
               CALL aint841_fetch("/")
               LET g_current_row = g_current_idx
         
            ON ACTION previous
               CALL aint841_fetch("P")
               LET g_current_row = g_current_idx
         
            ON ACTION last 
               CALL aint841_fetch("L")  
               LET g_current_row = g_current_idx
         
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
         
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  LET g_main_hidden = 1
               END IF
               EXIT DIALOG
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            #快速搜尋
               
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL aint841_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint841_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL aint841_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
         #+ 此段落由子樣板a43產生
         ON ACTION batch_confirm
            LET g_action_choice="batch_confirm"
            IF cl_auth_chk_act("batch_confirm") THEN
               
               #add-point:ON ACTION batch_confirm
               {<point name="menu.batch_confirm" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint841_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint841_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint841_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint841_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint841_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION batch_number
            LET g_action_choice="batch_number"
            IF cl_auth_chk_act("batch_number") THEN
               
               #add-point:ON ACTION batch_number
               {<point name="menu.batch_number" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION store_query
            LET g_action_choice="store_query"
            IF cl_auth_chk_act("store_query") THEN
               
               #add-point:ON ACTION store_query
               {<point name="menu.store_query" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
            
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL aint841_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint841_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint841_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
