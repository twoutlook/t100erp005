{<section id="aint510.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0035(2017-02-09 15:07:44), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000347
#+ Filename...: aint510
#+ Description: 調撥單維護作業
#+ Creator....: 01726(2014-03-05 14:12:00)
#+ Modifier...: 08172 -SD/PR-
{</section>}
 
 
 
{<section id="aint510.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_indc_m        RECORD
       indcsite LIKE indc_t.indcsite, 
   indcsite_desc LIKE type_t.chr80, 
   indcdocdt LIKE indc_t.indcdocdt, 
   indcdocno LIKE indc_t.indcdocno, 
   indc001 LIKE indc_t.indc001, 
   indc004 LIKE indc_t.indc004, 
   indc004_desc LIKE type_t.chr80, 
   indc101 LIKE indc_t.indc101, 
   indc101_desc LIKE type_t.chr80, 
   indcunit LIKE indc_t.indcunit, 
   indc199 LIKE indc_t.indc199, 
   indc000 LIKE indc_t.indc000, 
   indc202 LIKE indc_t.indc202, 
   indc002 LIKE indc_t.indc002, 
   indc003 LIKE indc_t.indc003, 
   indc026 LIKE indc_t.indc026, 
   indc025 LIKE indc_t.indc025, 
   indc200 LIKE indc_t.indc200, 
   indc200_desc LIKE type_t.chr80, 
   indc201 LIKE indc_t.indc201, 
   indc201_desc LIKE type_t.chr80, 
   indc005 LIKE indc_t.indc005, 
   indc005_desc LIKE type_t.chr80, 
   indc006 LIKE indc_t.indc006, 
   indc006_desc LIKE type_t.chr80, 
   indc007 LIKE indc_t.indc007, 
   indc007_desc LIKE type_t.chr80, 
   indc008 LIKE indc_t.indc008, 
   indcstus LIKE indc_t.indcstus, 
   indc021 LIKE indc_t.indc021, 
   indc021_desc LIKE type_t.chr80, 
   indc022 LIKE indc_t.indc022, 
   indc023 LIKE indc_t.indc023, 
   indc023_desc LIKE type_t.chr80, 
   indc024 LIKE indc_t.indc024, 
   indcownid LIKE indc_t.indcownid, 
   indcownid_desc LIKE type_t.chr80, 
   indcowndp LIKE indc_t.indcowndp, 
   indcowndp_desc LIKE type_t.chr80, 
   indccrtid LIKE indc_t.indccrtid, 
   indccrtid_desc LIKE type_t.chr80, 
   indccrtdp LIKE indc_t.indccrtdp, 
   indccrtdp_desc LIKE type_t.chr80, 
   indccrtdt LIKE indc_t.indccrtdt, 
   indcmodid LIKE indc_t.indcmodid, 
   indcmodid_desc LIKE type_t.chr80, 
   indcmoddt LIKE indc_t.indcmoddt, 
   indccnfid LIKE indc_t.indccnfid, 
   indccnfid_desc LIKE type_t.chr80, 
   indccnfdt LIKE indc_t.indccnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_indd_d        RECORD
       inddsite LIKE indd_t.inddsite, 
   inddunit LIKE indd_t.inddunit, 
   inddseq LIKE indd_t.inddseq, 
   indd001 LIKE indd_t.indd001, 
   indd047 LIKE indd_t.indd047, 
   indd048 LIKE indd_t.indd048, 
   indd003 LIKE indd_t.indd003, 
   indd002 LIKE indd_t.indd002, 
   indd002_desc LIKE type_t.chr500, 
   indd002_desc_desc LIKE type_t.chr500, 
   indd004 LIKE indd_t.indd004, 
   imaa154 LIKE type_t.chr500, 
   imaa133 LIKE type_t.chr500, 
   imaa133_desc LIKE type_t.chr500, 
   imaa156 LIKE type_t.chr500, 
   imaa132 LIKE type_t.chr500, 
   imaa132_desc LIKE type_t.chr500, 
   rtaw001 LIKE type_t.chr500, 
   imaa128_desc LIKE type_t.chr500, 
   imaa009 LIKE type_t.chr500, 
   imaa009_desc LIKE type_t.chr500, 
   imaa157 LIKE type_t.chr500, 
   rtdx029 LIKE type_t.chr500, 
   rtdx029_desc LIKE type_t.chr500, 
   inag009 LIKE type_t.chr500, 
   indd006 LIKE indd_t.indd006, 
   indd006_desc LIKE type_t.chr500, 
   indd005 LIKE indd_t.indd005, 
   indd007 LIKE indd_t.indd007, 
   indd007_desc LIKE type_t.chr500, 
   indd008 LIKE indd_t.indd008, 
   indd009 LIKE indd_t.indd009, 
   indd020 LIKE indd_t.indd020, 
   indd021 LIKE indd_t.indd021, 
   indd045 LIKE indd_t.indd045, 
   indd046 LIKE indd_t.indd046, 
   indd010 LIKE indd_t.indd010, 
   indd022 LIKE indd_t.indd022, 
   indd022_desc LIKE type_t.chr500, 
   indd023 LIKE indd_t.indd023, 
   indd023_desc LIKE type_t.chr500, 
   indd024 LIKE indd_t.indd024, 
   indd102 LIKE indd_t.indd102, 
   indd025 LIKE indd_t.indd025, 
   indd030 LIKE indd_t.indd030, 
   indd031 LIKE indd_t.indd031, 
   indd032 LIKE indd_t.indd032, 
   indd032_desc LIKE type_t.chr500, 
   indd033 LIKE indd_t.indd033, 
   indd033_desc LIKE type_t.chr500, 
   indd034 LIKE indd_t.indd034, 
   indd035 LIKE indd_t.indd035, 
   indd040 LIKE indd_t.indd040, 
   indd101 LIKE indd_t.indd101
       END RECORD
PRIVATE TYPE type_g_indd2_d RECORD
       indlseq LIKE indl_t.indlseq, 
   indlseq1 LIKE indl_t.indlseq1, 
   indl001 LIKE indl_t.indl001, 
   indl002 LIKE indl_t.indl002, 
   indl002_desc LIKE type_t.chr500, 
   indl002_desc_desc LIKE type_t.chr500, 
   indl003 LIKE indl_t.indl003, 
   indl004 LIKE indl_t.indl004, 
   indl004_desc LIKE type_t.chr500, 
   indl005 LIKE indl_t.indl005, 
   indl005_desc LIKE type_t.chr500, 
   indl022 LIKE indl_t.indl022, 
   indl022_desc LIKE type_t.chr500, 
   indl023 LIKE indl_t.indl023, 
   indl023_desc LIKE type_t.chr500, 
   indl024 LIKE indl_t.indl024, 
   indl101 LIKE indl_t.indl101, 
   indl020 LIKE indl_t.indl020, 
   indl021 LIKE indl_t.indl021, 
   indl102 LIKE indl_t.indl102, 
   indl103 LIKE indl_t.indl103, 
   indl032 LIKE indl_t.indl032, 
   indl032_desc LIKE type_t.chr500, 
   indl033 LIKE indl_t.indl033, 
   indl033_desc LIKE type_t.chr500, 
   indl034 LIKE indl_t.indl034, 
   indl030 LIKE indl_t.indl030, 
   indl031 LIKE indl_t.indl031
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_indcsite LIKE indc_t.indcsite,
   b_indcsite_desc LIKE type_t.chr80,
      b_indcdocdt LIKE indc_t.indcdocdt,
      b_indcdocno LIKE indc_t.indcdocno,
      b_indc001 LIKE indc_t.indc001,
      b_indc004 LIKE indc_t.indc004,
   b_indc004_desc LIKE type_t.chr80,
      b_indcunit LIKE indc_t.indcunit,
      b_indc002 LIKE indc_t.indc002,
      b_indc003 LIKE indc_t.indc003,
      b_indc005 LIKE indc_t.indc005,
   b_indc005_desc LIKE type_t.chr80,
      b_indc006 LIKE indc_t.indc006,
   b_indc006_desc LIKE type_t.chr80,
      b_indc007 LIKE indc_t.indc007,
   b_indc007_desc LIKE type_t.chr80,
      b_indc021 LIKE indc_t.indc021,
   b_indc021_desc LIKE type_t.chr80,
      b_indc022 LIKE indc_t.indc022,
      b_indc023 LIKE indc_t.indc023,
   b_indc023_desc LIKE type_t.chr80,
      b_indc024 LIKE indc_t.indc024,
      b_indc008 LIKE indc_t.indc008
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_indc_m          type_g_indc_m
DEFINE g_indc_m_t        type_g_indc_m
DEFINE g_indc_m_o        type_g_indc_m
DEFINE g_indc_m_mask_o   type_g_indc_m #轉換遮罩前資料
DEFINE g_indc_m_mask_n   type_g_indc_m #轉換遮罩後資料
 
   DEFINE g_indcdocno_t LIKE indc_t.indcdocno
 
 
DEFINE g_indd_d          DYNAMIC ARRAY OF type_g_indd_d
DEFINE g_indd_d_t        type_g_indd_d
DEFINE g_indd_d_o        type_g_indd_d
DEFINE g_indd_d_mask_o   DYNAMIC ARRAY OF type_g_indd_d #轉換遮罩前資料
DEFINE g_indd_d_mask_n   DYNAMIC ARRAY OF type_g_indd_d #轉換遮罩後資料
DEFINE g_indd2_d          DYNAMIC ARRAY OF type_g_indd2_d
DEFINE g_indd2_d_t        type_g_indd2_d
DEFINE g_indd2_d_o        type_g_indd2_d
DEFINE g_indd2_d_mask_o   DYNAMIC ARRAY OF type_g_indd2_d #轉換遮罩前資料
DEFINE g_indd2_d_mask_n   DYNAMIC ARRAY OF type_g_indd2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="aint510.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT indcsite,'',indcdocdt,indcdocno,indc001,indc004,'',indc101,'',indcunit, 
       indc199,indc000,indc202,indc002,indc003,indc026,indc025,indc200,'',indc201,'',indc005,'',indc006, 
       '',indc007,'',indc008,indcstus,indc021,'',indc022,indc023,'',indc024,indcownid,'',indcowndp,'', 
       indccrtid,'',indccrtdp,'',indccrtdt,indcmodid,'',indcmoddt,indccnfid,'',indccnfdt", 
                      " FROM indc_t",
                      " WHERE indcent= ? AND indcdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint510_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.indcsite,t0.indcdocdt,t0.indcdocno,t0.indc001,t0.indc004,t0.indc101, 
       t0.indcunit,t0.indc199,t0.indc000,t0.indc202,t0.indc002,t0.indc003,t0.indc026,t0.indc025,t0.indc200, 
       t0.indc201,t0.indc005,t0.indc006,t0.indc007,t0.indc008,t0.indcstus,t0.indc021,t0.indc022,t0.indc023, 
       t0.indc024,t0.indcownid,t0.indcowndp,t0.indccrtid,t0.indccrtdp,t0.indccrtdt,t0.indcmodid,t0.indcmoddt, 
       t0.indccnfid,t0.indccnfdt,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.inayl003 ,t5.inayl003 ,t6.ooefl003 , 
       t7.ooefl003 ,t8.inayl003 ,t9.ooag011 ,t10.ooag011 ,t11.ooag011 ,t12.ooefl003 ,t13.ooag011 ,t14.ooefl003 , 
       t15.ooag011 ,t16.ooag011",
               " FROM indc_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.indcsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.indc004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.indc101 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t4 ON t4.inaylent="||g_enterprise||" AND t4.inayl001=t0.indc200 AND t4.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t5 ON t5.inaylent="||g_enterprise||" AND t5.inayl001=t0.indc201 AND t5.inayl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.indc005 AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.indc006 AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t8 ON t8.inaylent="||g_enterprise||" AND t8.inayl001=t0.indc007 AND t8.inayl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.indc021  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent="||g_enterprise||" AND t10.ooag001=t0.indc023  ",
               " LEFT JOIN ooag_t t11 ON t11.ooagent="||g_enterprise||" AND t11.ooag001=t0.indcownid  ",
               " LEFT JOIN ooefl_t t12 ON t12.ooeflent="||g_enterprise||" AND t12.ooefl001=t0.indcowndp AND t12.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent="||g_enterprise||" AND t13.ooag001=t0.indccrtid  ",
               " LEFT JOIN ooefl_t t14 ON t14.ooeflent="||g_enterprise||" AND t14.ooefl001=t0.indccrtdp AND t14.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent="||g_enterprise||" AND t15.ooag001=t0.indcmodid  ",
               " LEFT JOIN ooag_t t16 ON t16.ooagent="||g_enterprise||" AND t16.ooag001=t0.indccnfid  ",
 
               " WHERE t0.indcent = " ||g_enterprise|| " AND t0.indcdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aint510_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aint510 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aint510_init()   
 
      #進入選單 Menu (="N")
      CALL aint510_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aint510
      
   END IF 
   
   CLOSE aint510_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
{</section>}
 
{<section id="aint510.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aint510_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('indcstus','13','N,Y,S,C,O,P,A,D,R,W,X')
 
      CALL cl_set_combo_scc('indc199','6762') 
   CALL cl_set_combo_scc('indc000','2082') 
   CALL cl_set_combo_scc('indc202','6888') 
   CALL cl_set_combo_scc('indc026','6971') 
   CALL cl_set_combo_scc('indd005','6013') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aint510_default_search()
    
END FUNCTION
{</section>}
 
{<section id="aint510.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION aint510_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aint510_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_indc_m.* TO NULL
         CALL g_indd_d.clear()
         CALL g_indd2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aint510_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aint510_fetch('') # reload data
               LET l_ac = 1
               CALL aint510_ui_detailshow() #Setting the current row 
         
               CALL aint510_idx_chk()
               #NEXT FIELD inddseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_indd_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint510_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aint510_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_aint510_01
            LET g_action_choice="open_aint510_01"
            IF cl_auth_chk_act("open_aint510_01") THEN
               
               #add-point:ON ACTION open_aint510_01 name="menu.detail_show.page1.open_aint510_01"
               {<point name="menu.detail_show.page1.open_aint510_01" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_indd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aint510_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL aint510_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aint510_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aint510_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aint510_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aint510_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aint510_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aint510_set_act_visible()   
            CALL aint510_set_act_no_visible()
            IF NOT (g_indc_m.indcdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " indcent = " ||g_enterprise|| " AND",
                                  " indcdocno = '", g_indc_m.indcdocno, "' "
 
               #填到對應位置
               CALL aint510_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indc_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indd_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indl_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aint510_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "indc_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indd_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "indl_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aint510_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aint510_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aint510_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aint510_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint510_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aint510_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint510_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aint510_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint510_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aint510_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint510_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aint510_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aint510_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_indd_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_indd2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD inddseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aint510_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aint510_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION gen_aint701
            LET g_action_choice="gen_aint701"
            IF cl_auth_chk_act("gen_aint701") THEN
               
               #add-point:ON ACTION gen_aint701 name="menu.gen_aint701"
               {<point name="menu.gen_aint701" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aint510_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aint510_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/ain/aint510_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               &include "erp/ain/aint510_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               {<point name="menu.after_quickprint" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aint510_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aint510_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_indc004
            LET g_action_choice="prog_indc004"
            IF cl_auth_chk_act("prog_indc004") THEN
               
               #add-point:ON ACTION prog_indc004 name="menu.prog_indc004"
               {<point name="menu.prog_indc004" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION prog_aint500
            LET g_action_choice="prog_aint500"
            IF cl_auth_chk_act("prog_aint500") THEN
               
               #add-point:ON ACTION prog_aint500 name="menu.prog_aint500"
               {<point name="menu.prog_aint500" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL aint510_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aint510_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aint510_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_indc_m.indcdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
{</section>}
 
{<section id="aint510.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aint510_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT indcdocno ",
                      " FROM indc_t ",
                      " ",
                      " LEFT JOIN indd_t ON inddent = indcent AND indcdocno = indddocno ", "  ",
                      #add-point:browser_fill段sql(indd_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN indl_t ON indlent = indcent AND indcdocno = indldocno", "  ",
                      #add-point:browser_fill段sql(indl_t1) name="browser_fill.cnt.join.indl_t1"
                      {<point name="browser_fill.cnt.join.indl_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " ",                      
 
 
 
                      " WHERE indcent = " ||g_enterprise|| " AND inddent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("indc_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT indcdocno ",
                      " FROM indc_t ", 
                      "  ",
                      "  ",
                      " WHERE indcent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("indc_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_indc_m.* TO NULL
      CALL g_indd_d.clear()        
      CALL g_indd2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.indcsite,t0.indcdocdt,t0.indcdocno,t0.indc001,t0.indc004,t0.indcunit,t0.indc002,t0.indc003,t0.indc005,t0.indc006,t0.indc007,t0.indc021,t0.indc022,t0.indc023,t0.indc024,t0.indc008 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.indcstus,t0.indcsite,t0.indcdocdt,t0.indcdocno,t0.indc001,t0.indc004, 
          t0.indcunit,t0.indc002,t0.indc003,t0.indc005,t0.indc006,t0.indc007,t0.indc021,t0.indc022,t0.indc023, 
          t0.indc024,t0.indc008,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooefl003 ,t5.inayl003 ,t6.ooag011 , 
          t7.ooag011 ",
                  " FROM indc_t t0",
                  "  ",
                  "  LEFT JOIN indd_t ON inddent = indcent AND indcdocno = indddocno ", "  ", 
                  #add-point:browser_fill段sql(indd_t1) name="browser_fill.join.indd_t1"
                  {<point name="browser_fill.join.indd_t1"/>}
                  #end add-point
                  "  LEFT JOIN indl_t ON indlent = indcent AND indcdocno = indldocno", "  ", 
                  #add-point:browser_fill段sql(indl_t1) name="browser_fill.join.indl_t1"
                  {<point name="browser_fill.join.indl_t1"/>}
                  #end add-point
 
 
 
                  " ", 
                  " ",                      
 
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.indcsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.indc004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.indc005 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.indc006 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t5 ON t5.inaylent="||g_enterprise||" AND t5.inayl001=t0.indc007 AND t5.inayl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.indc021  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.indc023  ",
 
                  " WHERE t0.indcent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("indc_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.indcstus,t0.indcsite,t0.indcdocdt,t0.indcdocno,t0.indc001,t0.indc004, 
          t0.indcunit,t0.indc002,t0.indc003,t0.indc005,t0.indc006,t0.indc007,t0.indc021,t0.indc022,t0.indc023, 
          t0.indc024,t0.indc008,t1.ooefl003 ,t2.ooag011 ,t3.ooefl003 ,t4.ooefl003 ,t5.inayl003 ,t6.ooag011 , 
          t7.ooag011 ",
                  " FROM indc_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.indcsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent="||g_enterprise||" AND t2.ooag001=t0.indc004  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.indc005 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.indc006 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t5 ON t5.inaylent="||g_enterprise||" AND t5.inayl001=t0.indc007 AND t5.inayl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.indc021  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.indc023  ",
 
                  " WHERE t0.indcent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("indc_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY indcdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"indc_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_indcsite,g_browser[g_cnt].b_indcdocdt, 
          g_browser[g_cnt].b_indcdocno,g_browser[g_cnt].b_indc001,g_browser[g_cnt].b_indc004,g_browser[g_cnt].b_indcunit, 
          g_browser[g_cnt].b_indc002,g_browser[g_cnt].b_indc003,g_browser[g_cnt].b_indc005,g_browser[g_cnt].b_indc006, 
          g_browser[g_cnt].b_indc007,g_browser[g_cnt].b_indc021,g_browser[g_cnt].b_indc022,g_browser[g_cnt].b_indc023, 
          g_browser[g_cnt].b_indc024,g_browser[g_cnt].b_indc008,g_browser[g_cnt].b_indcsite_desc,g_browser[g_cnt].b_indc004_desc, 
          g_browser[g_cnt].b_indc005_desc,g_browser[g_cnt].b_indc006_desc,g_browser[g_cnt].b_indc007_desc, 
          g_browser[g_cnt].b_indc021_desc,g_browser[g_cnt].b_indc023_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL aint510_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "O"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirm_transfer_out.png"
         WHEN "P"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirm_transfer_in.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_indcdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
{</section>}
 
{<section id="aint510.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION aint510_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_indc_m.indcdocno = g_browser[g_current_idx].b_indcdocno   
 
   EXECUTE aint510_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcsite,g_indc_m.indcdocdt, 
       g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199, 
       g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
       g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008, 
       g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid, 
       g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
       g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt,g_indc_m.indcsite_desc,g_indc_m.indc004_desc, 
       g_indc_m.indc101_desc,g_indc_m.indc200_desc,g_indc_m.indc201_desc,g_indc_m.indc005_desc,g_indc_m.indc006_desc, 
       g_indc_m.indc007_desc,g_indc_m.indc021_desc,g_indc_m.indc023_desc,g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc, 
       g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc,g_indc_m.indcmodid_desc,g_indc_m.indccnfid_desc 

   
   CALL aint510_indc_t_mask()
   CALL aint510_show()
      
END FUNCTION
{</section>}
 
{<section id="aint510.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION aint510_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="aint510.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aint510_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_indcdocno = g_indc_m.indcdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="aint510.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION aint510_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_indc_m.* TO NULL
   CALL g_indd_d.clear()        
   CALL g_indd2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON indcsite,indcdocdt,indcdocno,indc001,indc004,indc101,indcunit,indc199, 
          indc000,indc202,indc002,indc003,indc026,indc025,indc200,indc201,indc005,indc006,indc007,indc008, 
          indcstus,indc021,indc022,indc023,indc024,indcownid,indcowndp,indccrtid,indccrtdp,indccrtdt, 
          indcmodid,indcmoddt,indccnfid,indccnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<indccrtdt>>----
         AFTER FIELD indccrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<indcmoddt>>----
         AFTER FIELD indcmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indccnfdt>>----
         AFTER FIELD indccnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<indcpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.indcsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcsite
            #add-point:ON ACTION controlp INFIELD indcsite name="construct.c.indcsite"
            {<point name="construct.c.indcsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcsite
            #add-point:BEFORE FIELD indcsite name="construct.b.indcsite"
            {<point name="construct.b.indcsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcsite
            
            #add-point:AFTER FIELD indcsite name="construct.a.indcsite"
            {<point name="construct.a.indcsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcdocdt
            #add-point:BEFORE FIELD indcdocdt name="construct.b.indcdocdt"
            {<point name="construct.b.indcdocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcdocdt
            
            #add-point:AFTER FIELD indcdocdt name="construct.a.indcdocdt"
            {<point name="construct.a.indcdocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indcdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcdocdt
            #add-point:ON ACTION controlp INFIELD indcdocdt name="construct.c.indcdocdt"
            {<point name="construct.c.indcdocdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indcdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcdocno
            #add-point:ON ACTION controlp INFIELD indcdocno name="construct.c.indcdocno"
            {<point name="construct.c.indcdocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcdocno
            #add-point:BEFORE FIELD indcdocno name="construct.b.indcdocno"
            {<point name="construct.b.indcdocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcdocno
            
            #add-point:AFTER FIELD indcdocno name="construct.a.indcdocno"
            {<point name="construct.a.indcdocno" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc001
            #add-point:ON ACTION controlp INFIELD indc001 name="construct.c.indc001"
            {<point name="construct.c.indc001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc001
            #add-point:BEFORE FIELD indc001 name="construct.b.indc001"
            {<point name="construct.b.indc001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc001
            
            #add-point:AFTER FIELD indc001 name="construct.a.indc001"
            {<point name="construct.a.indc001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc004
            #add-point:ON ACTION controlp INFIELD indc004 name="construct.c.indc004"
            {<point name="construct.c.indc004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc004
            #add-point:BEFORE FIELD indc004 name="construct.b.indc004"
            {<point name="construct.b.indc004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc004
            
            #add-point:AFTER FIELD indc004 name="construct.a.indc004"
            {<point name="construct.a.indc004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc101
            #add-point:ON ACTION controlp INFIELD indc101 name="construct.c.indc101"
            {<point name="construct.c.indc101" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc101
            #add-point:BEFORE FIELD indc101 name="construct.b.indc101"
            {<point name="construct.b.indc101" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc101
            
            #add-point:AFTER FIELD indc101 name="construct.a.indc101"
            {<point name="construct.a.indc101" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcunit
            #add-point:BEFORE FIELD indcunit name="construct.b.indcunit"
            {<point name="construct.b.indcunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcunit
            
            #add-point:AFTER FIELD indcunit name="construct.a.indcunit"
            {<point name="construct.a.indcunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indcunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcunit
            #add-point:ON ACTION controlp INFIELD indcunit name="construct.c.indcunit"
            {<point name="construct.c.indcunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc199
            #add-point:BEFORE FIELD indc199 name="construct.b.indc199"
            {<point name="construct.b.indc199" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc199
            
            #add-point:AFTER FIELD indc199 name="construct.a.indc199"
            {<point name="construct.a.indc199" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc199
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc199
            #add-point:ON ACTION controlp INFIELD indc199 name="construct.c.indc199"
            {<point name="construct.c.indc199" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc000
            #add-point:BEFORE FIELD indc000 name="construct.b.indc000"
            {<point name="construct.b.indc000" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc000
            
            #add-point:AFTER FIELD indc000 name="construct.a.indc000"
            {<point name="construct.a.indc000" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc000
            #add-point:ON ACTION controlp INFIELD indc000 name="construct.c.indc000"
            {<point name="construct.c.indc000" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc202
            #add-point:BEFORE FIELD indc202 name="construct.b.indc202"
            {<point name="construct.b.indc202" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc202
            
            #add-point:AFTER FIELD indc202 name="construct.a.indc202"
            {<point name="construct.a.indc202" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc202
            #add-point:ON ACTION controlp INFIELD indc202 name="construct.c.indc202"
            {<point name="construct.c.indc202" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc002
            #add-point:BEFORE FIELD indc002 name="construct.b.indc002"
            {<point name="construct.b.indc002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc002
            
            #add-point:AFTER FIELD indc002 name="construct.a.indc002"
            {<point name="construct.a.indc002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc002
            #add-point:ON ACTION controlp INFIELD indc002 name="construct.c.indc002"
            {<point name="construct.c.indc002" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indc003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc003
            #add-point:ON ACTION controlp INFIELD indc003 name="construct.c.indc003"
            {<point name="construct.c.indc003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc003
            #add-point:BEFORE FIELD indc003 name="construct.b.indc003"
            {<point name="construct.b.indc003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc003
            
            #add-point:AFTER FIELD indc003 name="construct.a.indc003"
            {<point name="construct.a.indc003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc026
            #add-point:BEFORE FIELD indc026 name="construct.b.indc026"
            {<point name="construct.b.indc026" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc026
            
            #add-point:AFTER FIELD indc026 name="construct.a.indc026"
            {<point name="construct.a.indc026" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc026
            #add-point:ON ACTION controlp INFIELD indc026 name="construct.c.indc026"
            {<point name="construct.c.indc026" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indc025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc025
            #add-point:ON ACTION controlp INFIELD indc025 name="construct.c.indc025"
            {<point name="construct.c.indc025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc025
            #add-point:BEFORE FIELD indc025 name="construct.b.indc025"
            {<point name="construct.b.indc025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc025
            
            #add-point:AFTER FIELD indc025 name="construct.a.indc025"
            {<point name="construct.a.indc025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc200
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc200
            #add-point:ON ACTION controlp INFIELD indc200 name="construct.c.indc200"
            {<point name="construct.c.indc200" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc200
            #add-point:BEFORE FIELD indc200 name="construct.b.indc200"
            {<point name="construct.b.indc200" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc200
            
            #add-point:AFTER FIELD indc200 name="construct.a.indc200"
            {<point name="construct.a.indc200" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc201
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc201
            #add-point:ON ACTION controlp INFIELD indc201 name="construct.c.indc201"
            {<point name="construct.c.indc201" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc201
            #add-point:BEFORE FIELD indc201 name="construct.b.indc201"
            {<point name="construct.b.indc201" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc201
            
            #add-point:AFTER FIELD indc201 name="construct.a.indc201"
            {<point name="construct.a.indc201" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc005
            #add-point:ON ACTION controlp INFIELD indc005 name="construct.c.indc005"
            {<point name="construct.c.indc005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc005
            #add-point:BEFORE FIELD indc005 name="construct.b.indc005"
            {<point name="construct.b.indc005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc005
            
            #add-point:AFTER FIELD indc005 name="construct.a.indc005"
            {<point name="construct.a.indc005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc006
            #add-point:ON ACTION controlp INFIELD indc006 name="construct.c.indc006"
            {<point name="construct.c.indc006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc006
            #add-point:BEFORE FIELD indc006 name="construct.b.indc006"
            {<point name="construct.b.indc006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc006
            
            #add-point:AFTER FIELD indc006 name="construct.a.indc006"
            {<point name="construct.a.indc006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc007
            #add-point:ON ACTION controlp INFIELD indc007 name="construct.c.indc007"
            {<point name="construct.c.indc007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc007
            #add-point:BEFORE FIELD indc007 name="construct.b.indc007"
            {<point name="construct.b.indc007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc007
            
            #add-point:AFTER FIELD indc007 name="construct.a.indc007"
            {<point name="construct.a.indc007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc008
            #add-point:BEFORE FIELD indc008 name="construct.b.indc008"
            {<point name="construct.b.indc008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc008
            
            #add-point:AFTER FIELD indc008 name="construct.a.indc008"
            {<point name="construct.a.indc008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc008
            #add-point:ON ACTION controlp INFIELD indc008 name="construct.c.indc008"
            {<point name="construct.c.indc008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcstus
            #add-point:BEFORE FIELD indcstus name="construct.b.indcstus"
            {<point name="construct.b.indcstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcstus
            
            #add-point:AFTER FIELD indcstus name="construct.a.indcstus"
            {<point name="construct.a.indcstus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indcstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcstus
            #add-point:ON ACTION controlp INFIELD indcstus name="construct.c.indcstus"
            {<point name="construct.c.indcstus" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indc021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc021
            #add-point:ON ACTION controlp INFIELD indc021 name="construct.c.indc021"
            {<point name="construct.c.indc021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc021
            #add-point:BEFORE FIELD indc021 name="construct.b.indc021"
            {<point name="construct.b.indc021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc021
            
            #add-point:AFTER FIELD indc021 name="construct.a.indc021"
            {<point name="construct.a.indc021" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc022
            #add-point:BEFORE FIELD indc022 name="construct.b.indc022"
            {<point name="construct.b.indc022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc022
            
            #add-point:AFTER FIELD indc022 name="construct.a.indc022"
            {<point name="construct.a.indc022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc022
            #add-point:ON ACTION controlp INFIELD indc022 name="construct.c.indc022"
            {<point name="construct.c.indc022" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indc023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc023
            #add-point:ON ACTION controlp INFIELD indc023 name="construct.c.indc023"
            {<point name="construct.c.indc023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc023
            #add-point:BEFORE FIELD indc023 name="construct.b.indc023"
            {<point name="construct.b.indc023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc023
            
            #add-point:AFTER FIELD indc023 name="construct.a.indc023"
            {<point name="construct.a.indc023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc024
            #add-point:BEFORE FIELD indc024 name="construct.b.indc024"
            {<point name="construct.b.indc024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc024
            
            #add-point:AFTER FIELD indc024 name="construct.a.indc024"
            {<point name="construct.a.indc024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indc024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc024
            #add-point:ON ACTION controlp INFIELD indc024 name="construct.c.indc024"
            {<point name="construct.c.indc024" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indcownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcownid
            #add-point:ON ACTION controlp INFIELD indcownid name="construct.c.indcownid"
            {<point name="construct.c.indcownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcownid
            #add-point:BEFORE FIELD indcownid name="construct.b.indcownid"
            {<point name="construct.b.indcownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcownid
            
            #add-point:AFTER FIELD indcownid name="construct.a.indcownid"
            {<point name="construct.a.indcownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indcowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcowndp
            #add-point:ON ACTION controlp INFIELD indcowndp name="construct.c.indcowndp"
            {<point name="construct.c.indcowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcowndp
            #add-point:BEFORE FIELD indcowndp name="construct.b.indcowndp"
            {<point name="construct.b.indcowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcowndp
            
            #add-point:AFTER FIELD indcowndp name="construct.a.indcowndp"
            {<point name="construct.a.indcowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indccrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indccrtid
            #add-point:ON ACTION controlp INFIELD indccrtid name="construct.c.indccrtid"
            {<point name="construct.c.indccrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indccrtid
            #add-point:BEFORE FIELD indccrtid name="construct.b.indccrtid"
            {<point name="construct.b.indccrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indccrtid
            
            #add-point:AFTER FIELD indccrtid name="construct.a.indccrtid"
            {<point name="construct.a.indccrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.indccrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indccrtdp
            #add-point:ON ACTION controlp INFIELD indccrtdp name="construct.c.indccrtdp"
            {<point name="construct.c.indccrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indccrtdp
            #add-point:BEFORE FIELD indccrtdp name="construct.b.indccrtdp"
            {<point name="construct.b.indccrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indccrtdp
            
            #add-point:AFTER FIELD indccrtdp name="construct.a.indccrtdp"
            {<point name="construct.a.indccrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indccrtdt
            #add-point:BEFORE FIELD indccrtdt name="construct.b.indccrtdt"
            {<point name="construct.b.indccrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indcmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcmodid
            #add-point:ON ACTION controlp INFIELD indcmodid name="construct.c.indcmodid"
            {<point name="construct.c.indcmodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcmodid
            #add-point:BEFORE FIELD indcmodid name="construct.b.indcmodid"
            {<point name="construct.b.indcmodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcmodid
            
            #add-point:AFTER FIELD indcmodid name="construct.a.indcmodid"
            {<point name="construct.a.indcmodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcmoddt
            #add-point:BEFORE FIELD indcmoddt name="construct.b.indcmoddt"
            {<point name="construct.b.indcmoddt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.indccnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indccnfid
            #add-point:ON ACTION controlp INFIELD indccnfid name="construct.c.indccnfid"
            {<point name="construct.c.indccnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indccnfid
            #add-point:BEFORE FIELD indccnfid name="construct.b.indccnfid"
            {<point name="construct.b.indccnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indccnfid
            
            #add-point:AFTER FIELD indccnfid name="construct.a.indccnfid"
            {<point name="construct.a.indccnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indccnfdt
            #add-point:BEFORE FIELD indccnfdt name="construct.b.indccnfdt"
            {<point name="construct.b.indccnfdt" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON inddsite,inddunit,inddseq,indd001,indd047,indd048,indd003,indd002,indd004, 
          imaa154,imaa133,imaa156,imaa132,imaa132_desc,rtaw001,imaa128_desc,imaa009,imaa009_desc,imaa157, 
          indd006,indd005,indd007,indd008,indd009,indd020,indd021,indd045,indd046,indd010,indd022,indd023, 
          indd024,indd102,indd025,indd030,indd031,indd032,indd033,indd034,indd035,indd040,indd101
           FROM s_detail1[1].inddsite,s_detail1[1].inddunit,s_detail1[1].inddseq,s_detail1[1].indd001, 
               s_detail1[1].indd047,s_detail1[1].indd048,s_detail1[1].indd003,s_detail1[1].indd002,s_detail1[1].indd004, 
               s_detail1[1].imaa154,s_detail1[1].imaa133,s_detail1[1].imaa156,s_detail1[1].imaa132,s_detail1[1].imaa132_desc, 
               s_detail1[1].rtaw001,s_detail1[1].imaa128_desc,s_detail1[1].imaa009,s_detail1[1].imaa009_desc, 
               s_detail1[1].imaa157,s_detail1[1].indd006,s_detail1[1].indd005,s_detail1[1].indd007,s_detail1[1].indd008, 
               s_detail1[1].indd009,s_detail1[1].indd020,s_detail1[1].indd021,s_detail1[1].indd045,s_detail1[1].indd046, 
               s_detail1[1].indd010,s_detail1[1].indd022,s_detail1[1].indd023,s_detail1[1].indd024,s_detail1[1].indd102, 
               s_detail1[1].indd025,s_detail1[1].indd030,s_detail1[1].indd031,s_detail1[1].indd032,s_detail1[1].indd033, 
               s_detail1[1].indd034,s_detail1[1].indd035,s_detail1[1].indd040,s_detail1[1].indd101
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inddsite
            #add-point:BEFORE FIELD inddsite name="construct.b.page1.inddsite"
            {<point name="construct.b.page1.inddsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inddsite
            
            #add-point:AFTER FIELD inddsite name="construct.a.page1.inddsite"
            {<point name="construct.a.page1.inddsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.inddsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inddsite
            #add-point:ON ACTION controlp INFIELD inddsite name="construct.c.page1.inddsite"
            {<point name="construct.c.page1.inddsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inddunit
            #add-point:BEFORE FIELD inddunit name="construct.b.page1.inddunit"
            {<point name="construct.b.page1.inddunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inddunit
            
            #add-point:AFTER FIELD inddunit name="construct.a.page1.inddunit"
            {<point name="construct.a.page1.inddunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.inddunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inddunit
            #add-point:ON ACTION controlp INFIELD inddunit name="construct.c.page1.inddunit"
            {<point name="construct.c.page1.inddunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inddseq
            #add-point:BEFORE FIELD inddseq name="construct.b.page1.inddseq"
            {<point name="construct.b.page1.inddseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inddseq
            
            #add-point:AFTER FIELD inddseq name="construct.a.page1.inddseq"
            {<point name="construct.a.page1.inddseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.inddseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inddseq
            #add-point:ON ACTION controlp INFIELD inddseq name="construct.c.page1.inddseq"
            {<point name="construct.c.page1.inddseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd001
            #add-point:BEFORE FIELD indd001 name="construct.b.page1.indd001"
            {<point name="construct.b.page1.indd001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd001
            
            #add-point:AFTER FIELD indd001 name="construct.a.page1.indd001"
            {<point name="construct.a.page1.indd001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd001
            #add-point:ON ACTION controlp INFIELD indd001 name="construct.c.page1.indd001"
            {<point name="construct.c.page1.indd001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd047
            #add-point:BEFORE FIELD indd047 name="construct.b.page1.indd047"
            {<point name="construct.b.page1.indd047" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd047
            
            #add-point:AFTER FIELD indd047 name="construct.a.page1.indd047"
            {<point name="construct.a.page1.indd047" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd047
            #add-point:ON ACTION controlp INFIELD indd047 name="construct.c.page1.indd047"
            {<point name="construct.c.page1.indd047" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd048
            #add-point:BEFORE FIELD indd048 name="construct.b.page1.indd048"
            {<point name="construct.b.page1.indd048" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd048
            
            #add-point:AFTER FIELD indd048 name="construct.a.page1.indd048"
            {<point name="construct.a.page1.indd048" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd048
            #add-point:ON ACTION controlp INFIELD indd048 name="construct.c.page1.indd048"
            {<point name="construct.c.page1.indd048" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.indd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd003
            #add-point:ON ACTION controlp INFIELD indd003 name="construct.c.page1.indd003"
            {<point name="construct.c.page1.indd003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd003
            #add-point:BEFORE FIELD indd003 name="construct.b.page1.indd003"
            {<point name="construct.b.page1.indd003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd003
            
            #add-point:AFTER FIELD indd003 name="construct.a.page1.indd003"
            {<point name="construct.a.page1.indd003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd002
            #add-point:ON ACTION controlp INFIELD indd002 name="construct.c.page1.indd002"
            {<point name="construct.c.page1.indd002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd002
            #add-point:BEFORE FIELD indd002 name="construct.b.page1.indd002"
            {<point name="construct.b.page1.indd002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd002
            
            #add-point:AFTER FIELD indd002 name="construct.a.page1.indd002"
            {<point name="construct.a.page1.indd002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd004
            #add-point:BEFORE FIELD indd004 name="construct.b.page1.indd004"
            {<point name="construct.b.page1.indd004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd004
            
            #add-point:AFTER FIELD indd004 name="construct.a.page1.indd004"
            {<point name="construct.a.page1.indd004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd004
            #add-point:ON ACTION controlp INFIELD indd004 name="construct.c.page1.indd004"
            {<point name="construct.c.page1.indd004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa154
            #add-point:BEFORE FIELD imaa154 name="construct.b.page1.imaa154"
            {<point name="construct.b.page1.imaa154" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa154
            
            #add-point:AFTER FIELD imaa154 name="construct.a.page1.imaa154"
            {<point name="construct.a.page1.imaa154" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa154
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa154
            #add-point:ON ACTION controlp INFIELD imaa154 name="construct.c.page1.imaa154"
            {<point name="construct.c.page1.imaa154" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa133
            #add-point:BEFORE FIELD imaa133 name="construct.b.page1.imaa133"
            {<point name="construct.b.page1.imaa133" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa133
            
            #add-point:AFTER FIELD imaa133 name="construct.a.page1.imaa133"
            {<point name="construct.a.page1.imaa133" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa133
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa133
            #add-point:ON ACTION controlp INFIELD imaa133 name="construct.c.page1.imaa133"
            {<point name="construct.c.page1.imaa133" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa156
            #add-point:BEFORE FIELD imaa156 name="construct.b.page1.imaa156"
            {<point name="construct.b.page1.imaa156" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa156
            
            #add-point:AFTER FIELD imaa156 name="construct.a.page1.imaa156"
            {<point name="construct.a.page1.imaa156" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa156
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa156
            #add-point:ON ACTION controlp INFIELD imaa156 name="construct.c.page1.imaa156"
            {<point name="construct.c.page1.imaa156" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa132
            #add-point:BEFORE FIELD imaa132 name="construct.b.page1.imaa132"
            {<point name="construct.b.page1.imaa132" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa132
            
            #add-point:AFTER FIELD imaa132 name="construct.a.page1.imaa132"
            {<point name="construct.a.page1.imaa132" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa132
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa132
            #add-point:ON ACTION controlp INFIELD imaa132 name="construct.c.page1.imaa132"
            {<point name="construct.c.page1.imaa132" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa132_desc
            #add-point:BEFORE FIELD imaa132_desc name="construct.b.page1.imaa132_desc"
            {<point name="construct.b.page1.imaa132_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa132_desc
            
            #add-point:AFTER FIELD imaa132_desc name="construct.a.page1.imaa132_desc"
            {<point name="construct.a.page1.imaa132_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa132_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa132_desc
            #add-point:ON ACTION controlp INFIELD imaa132_desc name="construct.c.page1.imaa132_desc"
            {<point name="construct.c.page1.imaa132_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaw001
            #add-point:BEFORE FIELD rtaw001 name="construct.b.page1.rtaw001"
            {<point name="construct.b.page1.rtaw001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaw001
            
            #add-point:AFTER FIELD rtaw001 name="construct.a.page1.rtaw001"
            {<point name="construct.a.page1.rtaw001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.rtaw001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaw001
            #add-point:ON ACTION controlp INFIELD rtaw001 name="construct.c.page1.rtaw001"
            {<point name="construct.c.page1.rtaw001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa128_desc
            #add-point:BEFORE FIELD imaa128_desc name="construct.b.page1.imaa128_desc"
            {<point name="construct.b.page1.imaa128_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa128_desc
            
            #add-point:AFTER FIELD imaa128_desc name="construct.a.page1.imaa128_desc"
            {<point name="construct.a.page1.imaa128_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa128_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa128_desc
            #add-point:ON ACTION controlp INFIELD imaa128_desc name="construct.c.page1.imaa128_desc"
            {<point name="construct.c.page1.imaa128_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009 name="construct.b.page1.imaa009"
            {<point name="construct.b.page1.imaa009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009 name="construct.a.page1.imaa009"
            {<point name="construct.a.page1.imaa009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009 name="construct.c.page1.imaa009"
            {<point name="construct.c.page1.imaa009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa009_desc
            #add-point:BEFORE FIELD imaa009_desc name="construct.b.page1.imaa009_desc"
            {<point name="construct.b.page1.imaa009_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa009_desc
            
            #add-point:AFTER FIELD imaa009_desc name="construct.a.page1.imaa009_desc"
            {<point name="construct.a.page1.imaa009_desc" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa009_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa009_desc
            #add-point:ON ACTION controlp INFIELD imaa009_desc name="construct.c.page1.imaa009_desc"
            {<point name="construct.c.page1.imaa009_desc" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa157
            #add-point:BEFORE FIELD imaa157 name="construct.b.page1.imaa157"
            {<point name="construct.b.page1.imaa157" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa157
            
            #add-point:AFTER FIELD imaa157 name="construct.a.page1.imaa157"
            {<point name="construct.a.page1.imaa157" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.imaa157
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa157
            #add-point:ON ACTION controlp INFIELD imaa157 name="construct.c.page1.imaa157"
            {<point name="construct.c.page1.imaa157" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.indd006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd006
            #add-point:ON ACTION controlp INFIELD indd006 name="construct.c.page1.indd006"
            {<point name="construct.c.page1.indd006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd006
            #add-point:BEFORE FIELD indd006 name="construct.b.page1.indd006"
            {<point name="construct.b.page1.indd006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd006
            
            #add-point:AFTER FIELD indd006 name="construct.a.page1.indd006"
            {<point name="construct.a.page1.indd006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd005
            #add-point:BEFORE FIELD indd005 name="construct.b.page1.indd005"
            {<point name="construct.b.page1.indd005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd005
            
            #add-point:AFTER FIELD indd005 name="construct.a.page1.indd005"
            {<point name="construct.a.page1.indd005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd005
            #add-point:ON ACTION controlp INFIELD indd005 name="construct.c.page1.indd005"
            {<point name="construct.c.page1.indd005" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.indd007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd007
            #add-point:ON ACTION controlp INFIELD indd007 name="construct.c.page1.indd007"
            {<point name="construct.c.page1.indd007" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd007
            #add-point:BEFORE FIELD indd007 name="construct.b.page1.indd007"
            {<point name="construct.b.page1.indd007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd007
            
            #add-point:AFTER FIELD indd007 name="construct.a.page1.indd007"
            {<point name="construct.a.page1.indd007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd008
            #add-point:BEFORE FIELD indd008 name="construct.b.page1.indd008"
            {<point name="construct.b.page1.indd008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd008
            
            #add-point:AFTER FIELD indd008 name="construct.a.page1.indd008"
            {<point name="construct.a.page1.indd008" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd008
            #add-point:ON ACTION controlp INFIELD indd008 name="construct.c.page1.indd008"
            {<point name="construct.c.page1.indd008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd009
            #add-point:BEFORE FIELD indd009 name="construct.b.page1.indd009"
            {<point name="construct.b.page1.indd009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd009
            
            #add-point:AFTER FIELD indd009 name="construct.a.page1.indd009"
            {<point name="construct.a.page1.indd009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd009
            #add-point:ON ACTION controlp INFIELD indd009 name="construct.c.page1.indd009"
            {<point name="construct.c.page1.indd009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd020
            #add-point:BEFORE FIELD indd020 name="construct.b.page1.indd020"
            {<point name="construct.b.page1.indd020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd020
            
            #add-point:AFTER FIELD indd020 name="construct.a.page1.indd020"
            {<point name="construct.a.page1.indd020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd020
            #add-point:ON ACTION controlp INFIELD indd020 name="construct.c.page1.indd020"
            {<point name="construct.c.page1.indd020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd021
            #add-point:BEFORE FIELD indd021 name="construct.b.page1.indd021"
            {<point name="construct.b.page1.indd021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd021
            
            #add-point:AFTER FIELD indd021 name="construct.a.page1.indd021"
            {<point name="construct.a.page1.indd021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd021
            #add-point:ON ACTION controlp INFIELD indd021 name="construct.c.page1.indd021"
            {<point name="construct.c.page1.indd021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd045
            #add-point:BEFORE FIELD indd045 name="construct.b.page1.indd045"
            {<point name="construct.b.page1.indd045" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd045
            
            #add-point:AFTER FIELD indd045 name="construct.a.page1.indd045"
            {<point name="construct.a.page1.indd045" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd045
            #add-point:ON ACTION controlp INFIELD indd045 name="construct.c.page1.indd045"
            {<point name="construct.c.page1.indd045" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd046
            #add-point:BEFORE FIELD indd046 name="construct.b.page1.indd046"
            {<point name="construct.b.page1.indd046" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd046
            
            #add-point:AFTER FIELD indd046 name="construct.a.page1.indd046"
            {<point name="construct.a.page1.indd046" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd046
            #add-point:ON ACTION controlp INFIELD indd046 name="construct.c.page1.indd046"
            {<point name="construct.c.page1.indd046" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd010
            #add-point:BEFORE FIELD indd010 name="construct.b.page1.indd010"
            {<point name="construct.b.page1.indd010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd010
            
            #add-point:AFTER FIELD indd010 name="construct.a.page1.indd010"
            {<point name="construct.a.page1.indd010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd010
            #add-point:ON ACTION controlp INFIELD indd010 name="construct.c.page1.indd010"
            {<point name="construct.c.page1.indd010" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.indd022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd022
            #add-point:ON ACTION controlp INFIELD indd022 name="construct.c.page1.indd022"
            {<point name="construct.c.page1.indd022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd022
            #add-point:BEFORE FIELD indd022 name="construct.b.page1.indd022"
            {<point name="construct.b.page1.indd022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd022
            
            #add-point:AFTER FIELD indd022 name="construct.a.page1.indd022"
            {<point name="construct.a.page1.indd022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd023
            #add-point:ON ACTION controlp INFIELD indd023 name="construct.c.page1.indd023"
            {<point name="construct.c.page1.indd023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd023
            #add-point:BEFORE FIELD indd023 name="construct.b.page1.indd023"
            {<point name="construct.b.page1.indd023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd023
            
            #add-point:AFTER FIELD indd023 name="construct.a.page1.indd023"
            {<point name="construct.a.page1.indd023" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd024
            #add-point:ON ACTION controlp INFIELD indd024 name="construct.c.page1.indd024"
            {<point name="construct.c.page1.indd024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd024
            #add-point:BEFORE FIELD indd024 name="construct.b.page1.indd024"
            {<point name="construct.b.page1.indd024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd024
            
            #add-point:AFTER FIELD indd024 name="construct.a.page1.indd024"
            {<point name="construct.a.page1.indd024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd102
            #add-point:ON ACTION controlp INFIELD indd102 name="construct.c.page1.indd102"
            {<point name="construct.c.page1.indd102" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd102
            #add-point:BEFORE FIELD indd102 name="construct.b.page1.indd102"
            {<point name="construct.b.page1.indd102" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd102
            
            #add-point:AFTER FIELD indd102 name="construct.a.page1.indd102"
            {<point name="construct.a.page1.indd102" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd025
            #add-point:BEFORE FIELD indd025 name="construct.b.page1.indd025"
            {<point name="construct.b.page1.indd025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd025
            
            #add-point:AFTER FIELD indd025 name="construct.a.page1.indd025"
            {<point name="construct.a.page1.indd025" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd025
            #add-point:ON ACTION controlp INFIELD indd025 name="construct.c.page1.indd025"
            {<point name="construct.c.page1.indd025" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd030
            #add-point:BEFORE FIELD indd030 name="construct.b.page1.indd030"
            {<point name="construct.b.page1.indd030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd030
            
            #add-point:AFTER FIELD indd030 name="construct.a.page1.indd030"
            {<point name="construct.a.page1.indd030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd030
            #add-point:ON ACTION controlp INFIELD indd030 name="construct.c.page1.indd030"
            {<point name="construct.c.page1.indd030" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd031
            #add-point:BEFORE FIELD indd031 name="construct.b.page1.indd031"
            {<point name="construct.b.page1.indd031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd031
            
            #add-point:AFTER FIELD indd031 name="construct.a.page1.indd031"
            {<point name="construct.a.page1.indd031" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd031
            #add-point:ON ACTION controlp INFIELD indd031 name="construct.c.page1.indd031"
            {<point name="construct.c.page1.indd031" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page1.indd032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd032
            #add-point:ON ACTION controlp INFIELD indd032 name="construct.c.page1.indd032"
            {<point name="construct.c.page1.indd032" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd032
            #add-point:BEFORE FIELD indd032 name="construct.b.page1.indd032"
            {<point name="construct.b.page1.indd032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd032
            
            #add-point:AFTER FIELD indd032 name="construct.a.page1.indd032"
            {<point name="construct.a.page1.indd032" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd033
            #add-point:ON ACTION controlp INFIELD indd033 name="construct.c.page1.indd033"
            {<point name="construct.c.page1.indd033" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd033
            #add-point:BEFORE FIELD indd033 name="construct.b.page1.indd033"
            {<point name="construct.b.page1.indd033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd033
            
            #add-point:AFTER FIELD indd033 name="construct.a.page1.indd033"
            {<point name="construct.a.page1.indd033" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd034
            #add-point:ON ACTION controlp INFIELD indd034 name="construct.c.page1.indd034"
            {<point name="construct.c.page1.indd034" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd034
            #add-point:BEFORE FIELD indd034 name="construct.b.page1.indd034"
            {<point name="construct.b.page1.indd034" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd034
            
            #add-point:AFTER FIELD indd034 name="construct.a.page1.indd034"
            {<point name="construct.a.page1.indd034" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd035
            #add-point:BEFORE FIELD indd035 name="construct.b.page1.indd035"
            {<point name="construct.b.page1.indd035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd035
            
            #add-point:AFTER FIELD indd035 name="construct.a.page1.indd035"
            {<point name="construct.a.page1.indd035" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd035
            #add-point:ON ACTION controlp INFIELD indd035 name="construct.c.page1.indd035"
            {<point name="construct.c.page1.indd035" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd040
            #add-point:BEFORE FIELD indd040 name="construct.b.page1.indd040"
            {<point name="construct.b.page1.indd040" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd040
            
            #add-point:AFTER FIELD indd040 name="construct.a.page1.indd040"
            {<point name="construct.a.page1.indd040" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd040
            #add-point:ON ACTION controlp INFIELD indd040 name="construct.c.page1.indd040"
            {<point name="construct.c.page1.indd040" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd101
            #add-point:BEFORE FIELD indd101 name="construct.b.page1.indd101"
            {<point name="construct.b.page1.indd101" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd101
            
            #add-point:AFTER FIELD indd101 name="construct.a.page1.indd101"
            {<point name="construct.a.page1.indd101" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.indd101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd101
            #add-point:ON ACTION controlp INFIELD indd101 name="construct.c.page1.indd101"
            {<point name="construct.c.page1.indd101" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON indlseq,indlseq1,indl001,indl002,indl003,indl004,indl005,indl022,indl023, 
          indl024,indl101,indl020,indl021,indl102,indl103,indl032,indl033,indl034,indl030,indl031
           FROM s_detail2[1].indlseq,s_detail2[1].indlseq1,s_detail2[1].indl001,s_detail2[1].indl002, 
               s_detail2[1].indl003,s_detail2[1].indl004,s_detail2[1].indl005,s_detail2[1].indl022,s_detail2[1].indl023, 
               s_detail2[1].indl024,s_detail2[1].indl101,s_detail2[1].indl020,s_detail2[1].indl021,s_detail2[1].indl102, 
               s_detail2[1].indl103,s_detail2[1].indl032,s_detail2[1].indl033,s_detail2[1].indl034,s_detail2[1].indl030, 
               s_detail2[1].indl031
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indlseq
            #add-point:BEFORE FIELD indlseq name="construct.b.page2.indlseq"
            {<point name="construct.b.page2.indlseq" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indlseq
            
            #add-point:AFTER FIELD indlseq name="construct.a.page2.indlseq"
            {<point name="construct.a.page2.indlseq" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indlseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indlseq
            #add-point:ON ACTION controlp INFIELD indlseq name="construct.c.page2.indlseq"
            {<point name="construct.c.page2.indlseq" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indlseq1
            #add-point:BEFORE FIELD indlseq1 name="construct.b.page2.indlseq1"
            {<point name="construct.b.page2.indlseq1" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indlseq1
            
            #add-point:AFTER FIELD indlseq1 name="construct.a.page2.indlseq1"
            {<point name="construct.a.page2.indlseq1" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indlseq1
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indlseq1
            #add-point:ON ACTION controlp INFIELD indlseq1 name="construct.c.page2.indlseq1"
            {<point name="construct.c.page2.indlseq1" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.indl001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl001
            #add-point:ON ACTION controlp INFIELD indl001 name="construct.c.page2.indl001"
            {<point name="construct.c.page2.indl001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl001
            #add-point:BEFORE FIELD indl001 name="construct.b.page2.indl001"
            {<point name="construct.b.page2.indl001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl001
            
            #add-point:AFTER FIELD indl001 name="construct.a.page2.indl001"
            {<point name="construct.a.page2.indl001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl002
            #add-point:BEFORE FIELD indl002 name="construct.b.page2.indl002"
            {<point name="construct.b.page2.indl002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl002
            
            #add-point:AFTER FIELD indl002 name="construct.a.page2.indl002"
            {<point name="construct.a.page2.indl002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl002
            #add-point:ON ACTION controlp INFIELD indl002 name="construct.c.page2.indl002"
            {<point name="construct.c.page2.indl002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl003
            #add-point:BEFORE FIELD indl003 name="construct.b.page2.indl003"
            {<point name="construct.b.page2.indl003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl003
            
            #add-point:AFTER FIELD indl003 name="construct.a.page2.indl003"
            {<point name="construct.a.page2.indl003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl003
            #add-point:ON ACTION controlp INFIELD indl003 name="construct.c.page2.indl003"
            {<point name="construct.c.page2.indl003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.indl004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl004
            #add-point:ON ACTION controlp INFIELD indl004 name="construct.c.page2.indl004"
            {<point name="construct.c.page2.indl004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl004
            #add-point:BEFORE FIELD indl004 name="construct.b.page2.indl004"
            {<point name="construct.b.page2.indl004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl004
            
            #add-point:AFTER FIELD indl004 name="construct.a.page2.indl004"
            {<point name="construct.a.page2.indl004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl005
            #add-point:ON ACTION controlp INFIELD indl005 name="construct.c.page2.indl005"
            {<point name="construct.c.page2.indl005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl005
            #add-point:BEFORE FIELD indl005 name="construct.b.page2.indl005"
            {<point name="construct.b.page2.indl005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl005
            
            #add-point:AFTER FIELD indl005 name="construct.a.page2.indl005"
            {<point name="construct.a.page2.indl005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl022
            #add-point:ON ACTION controlp INFIELD indl022 name="construct.c.page2.indl022"
            {<point name="construct.c.page2.indl022" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl022
            #add-point:BEFORE FIELD indl022 name="construct.b.page2.indl022"
            {<point name="construct.b.page2.indl022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl022
            
            #add-point:AFTER FIELD indl022 name="construct.a.page2.indl022"
            {<point name="construct.a.page2.indl022" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl023
            #add-point:ON ACTION controlp INFIELD indl023 name="construct.c.page2.indl023"
            {<point name="construct.c.page2.indl023" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl023
            #add-point:BEFORE FIELD indl023 name="construct.b.page2.indl023"
            {<point name="construct.b.page2.indl023" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl023
            
            #add-point:AFTER FIELD indl023 name="construct.a.page2.indl023"
            {<point name="construct.a.page2.indl023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl024
            #add-point:BEFORE FIELD indl024 name="construct.b.page2.indl024"
            {<point name="construct.b.page2.indl024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl024
            
            #add-point:AFTER FIELD indl024 name="construct.a.page2.indl024"
            {<point name="construct.a.page2.indl024" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl024
            #add-point:ON ACTION controlp INFIELD indl024 name="construct.c.page2.indl024"
            {<point name="construct.c.page2.indl024" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl101
            #add-point:BEFORE FIELD indl101 name="construct.b.page2.indl101"
            {<point name="construct.b.page2.indl101" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl101
            
            #add-point:AFTER FIELD indl101 name="construct.a.page2.indl101"
            {<point name="construct.a.page2.indl101" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl101
            #add-point:ON ACTION controlp INFIELD indl101 name="construct.c.page2.indl101"
            {<point name="construct.c.page2.indl101" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl020
            #add-point:BEFORE FIELD indl020 name="construct.b.page2.indl020"
            {<point name="construct.b.page2.indl020" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl020
            
            #add-point:AFTER FIELD indl020 name="construct.a.page2.indl020"
            {<point name="construct.a.page2.indl020" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl020
            #add-point:ON ACTION controlp INFIELD indl020 name="construct.c.page2.indl020"
            {<point name="construct.c.page2.indl020" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl021
            #add-point:BEFORE FIELD indl021 name="construct.b.page2.indl021"
            {<point name="construct.b.page2.indl021" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl021
            
            #add-point:AFTER FIELD indl021 name="construct.a.page2.indl021"
            {<point name="construct.a.page2.indl021" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl021
            #add-point:ON ACTION controlp INFIELD indl021 name="construct.c.page2.indl021"
            {<point name="construct.c.page2.indl021" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl102
            #add-point:BEFORE FIELD indl102 name="construct.b.page2.indl102"
            {<point name="construct.b.page2.indl102" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl102
            
            #add-point:AFTER FIELD indl102 name="construct.a.page2.indl102"
            {<point name="construct.a.page2.indl102" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl102
            #add-point:ON ACTION controlp INFIELD indl102 name="construct.c.page2.indl102"
            {<point name="construct.c.page2.indl102" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl103
            #add-point:BEFORE FIELD indl103 name="construct.b.page2.indl103"
            {<point name="construct.b.page2.indl103" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl103
            
            #add-point:AFTER FIELD indl103 name="construct.a.page2.indl103"
            {<point name="construct.a.page2.indl103" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl103
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl103
            #add-point:ON ACTION controlp INFIELD indl103 name="construct.c.page2.indl103"
            {<point name="construct.c.page2.indl103" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.indl032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl032
            #add-point:ON ACTION controlp INFIELD indl032 name="construct.c.page2.indl032"
            {<point name="construct.c.page2.indl032" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl032
            #add-point:BEFORE FIELD indl032 name="construct.b.page2.indl032"
            {<point name="construct.b.page2.indl032" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl032
            
            #add-point:AFTER FIELD indl032 name="construct.a.page2.indl032"
            {<point name="construct.a.page2.indl032" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl033
            #add-point:ON ACTION controlp INFIELD indl033 name="construct.c.page2.indl033"
            {<point name="construct.c.page2.indl033" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl033
            #add-point:BEFORE FIELD indl033 name="construct.b.page2.indl033"
            {<point name="construct.b.page2.indl033" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl033
            
            #add-point:AFTER FIELD indl033 name="construct.a.page2.indl033"
            {<point name="construct.a.page2.indl033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl034
            #add-point:BEFORE FIELD indl034 name="construct.b.page2.indl034"
            {<point name="construct.b.page2.indl034" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl034
            
            #add-point:AFTER FIELD indl034 name="construct.a.page2.indl034"
            {<point name="construct.a.page2.indl034" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl034
            #add-point:ON ACTION controlp INFIELD indl034 name="construct.c.page2.indl034"
            {<point name="construct.c.page2.indl034" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl030
            #add-point:BEFORE FIELD indl030 name="construct.b.page2.indl030"
            {<point name="construct.b.page2.indl030" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl030
            
            #add-point:AFTER FIELD indl030 name="construct.a.page2.indl030"
            {<point name="construct.a.page2.indl030" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl030
            #add-point:ON ACTION controlp INFIELD indl030 name="construct.c.page2.indl030"
            {<point name="construct.c.page2.indl030" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indl031
            #add-point:BEFORE FIELD indl031 name="construct.b.page2.indl031"
            {<point name="construct.b.page2.indl031" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indl031
            
            #add-point:AFTER FIELD indl031 name="construct.a.page2.indl031"
            {<point name="construct.a.page2.indl031" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.indl031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indl031
            #add-point:ON ACTION controlp INFIELD indl031 name="construct.c.page2.indl031"
            {<point name="construct.c.page2.indl031" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "indc_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "indd_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "indl_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
{</section>}
 
{<section id="aint510.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION aint510_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON indcsite,indcdocdt,indcdocno,indc001,indc004,indcunit,indc002,indc003, 
          indc005,indc006,indc007,indc021,indc022,indc023,indc024,indc008
                          FROM s_browse[1].b_indcsite,s_browse[1].b_indcdocdt,s_browse[1].b_indcdocno, 
                              s_browse[1].b_indc001,s_browse[1].b_indc004,s_browse[1].b_indcunit,s_browse[1].b_indc002, 
                              s_browse[1].b_indc003,s_browse[1].b_indc005,s_browse[1].b_indc006,s_browse[1].b_indc007, 
                              s_browse[1].b_indc021,s_browse[1].b_indc022,s_browse[1].b_indc023,s_browse[1].b_indc024, 
                              s_browse[1].b_indc008
 
         BEFORE CONSTRUCT
               DISPLAY aint510_filter_parser('indcsite') TO s_browse[1].b_indcsite
            DISPLAY aint510_filter_parser('indcdocdt') TO s_browse[1].b_indcdocdt
            DISPLAY aint510_filter_parser('indcdocno') TO s_browse[1].b_indcdocno
            DISPLAY aint510_filter_parser('indc001') TO s_browse[1].b_indc001
            DISPLAY aint510_filter_parser('indc004') TO s_browse[1].b_indc004
            DISPLAY aint510_filter_parser('indcunit') TO s_browse[1].b_indcunit
            DISPLAY aint510_filter_parser('indc002') TO s_browse[1].b_indc002
            DISPLAY aint510_filter_parser('indc003') TO s_browse[1].b_indc003
            DISPLAY aint510_filter_parser('indc005') TO s_browse[1].b_indc005
            DISPLAY aint510_filter_parser('indc006') TO s_browse[1].b_indc006
            DISPLAY aint510_filter_parser('indc007') TO s_browse[1].b_indc007
            DISPLAY aint510_filter_parser('indc021') TO s_browse[1].b_indc021
            DISPLAY aint510_filter_parser('indc022') TO s_browse[1].b_indc022
            DISPLAY aint510_filter_parser('indc023') TO s_browse[1].b_indc023
            DISPLAY aint510_filter_parser('indc024') TO s_browse[1].b_indc024
            DISPLAY aint510_filter_parser('indc008') TO s_browse[1].b_indc008
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aint510_filter_show('indcsite')
   CALL aint510_filter_show('indcdocdt')
   CALL aint510_filter_show('indcdocno')
   CALL aint510_filter_show('indc001')
   CALL aint510_filter_show('indc004')
   CALL aint510_filter_show('indcunit')
   CALL aint510_filter_show('indc002')
   CALL aint510_filter_show('indc003')
   CALL aint510_filter_show('indc005')
   CALL aint510_filter_show('indc006')
   CALL aint510_filter_show('indc007')
   CALL aint510_filter_show('indc021')
   CALL aint510_filter_show('indc022')
   CALL aint510_filter_show('indc023')
   CALL aint510_filter_show('indc024')
   CALL aint510_filter_show('indc008')
 
END FUNCTION
{</section>}
 
{<section id="aint510.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION aint510_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
{</section>}
 
{<section id="aint510.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION aint510_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aint510_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
{</section>}
 
 
 
 
 
{<section id="aint510.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aint510_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_indd_d.clear()
   CALL g_indd2_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aint510_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL aint510_browser_fill("")
      CALL aint510_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aint510_filter_show('indcsite')
   CALL aint510_filter_show('indcdocdt')
   CALL aint510_filter_show('indcdocno')
   CALL aint510_filter_show('indc001')
   CALL aint510_filter_show('indc004')
   CALL aint510_filter_show('indcunit')
   CALL aint510_filter_show('indc002')
   CALL aint510_filter_show('indc003')
   CALL aint510_filter_show('indc005')
   CALL aint510_filter_show('indc006')
   CALL aint510_filter_show('indc007')
   CALL aint510_filter_show('indc021')
   CALL aint510_filter_show('indc022')
   CALL aint510_filter_show('indc023')
   CALL aint510_filter_show('indc024')
   CALL aint510_filter_show('indc008')
   CALL aint510_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL aint510_fetch("F") 
      #顯示單身筆數
      CALL aint510_idx_chk()
   END IF
 
END FUNCTION
{</section>}
 
{<section id="aint510.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aint510_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_indc_m.indcdocno = g_browser[g_current_idx].b_indcdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aint510_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcsite,g_indc_m.indcdocdt, 
       g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199, 
       g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
       g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008, 
       g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid, 
       g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
       g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt,g_indc_m.indcsite_desc,g_indc_m.indc004_desc, 
       g_indc_m.indc101_desc,g_indc_m.indc200_desc,g_indc_m.indc201_desc,g_indc_m.indc005_desc,g_indc_m.indc006_desc, 
       g_indc_m.indc007_desc,g_indc_m.indc021_desc,g_indc_m.indc023_desc,g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc, 
       g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc,g_indc_m.indcmodid_desc,g_indc_m.indccnfid_desc 

   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint510_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint510_set_act_visible()   
   CALL aint510_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_indc_m_t.* = g_indc_m.*
   LET g_indc_m_o.* = g_indc_m.*
   
   LET g_data_owner = g_indc_m.indcownid      
   LET g_data_dept  = g_indc_m.indcowndp
   
   #重新顯示   
   CALL aint510_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
{</section>}
 
{<section id="aint510.insert" >}
#+ 資料新增
PRIVATE FUNCTION aint510_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_indd_d.clear()   
   CALL g_indd2_d.clear()  
 
 
   INITIALIZE g_indc_m.* TO NULL             #DEFAULT 設定
   
   LET g_indcdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_indc_m.indcownid = g_user
      LET g_indc_m.indcowndp = g_dept
      LET g_indc_m.indccrtid = g_user
      LET g_indc_m.indccrtdp = g_dept 
      LET g_indc_m.indccrtdt = cl_get_current()
      LET g_indc_m.indcmodid = g_user
      LET g_indc_m.indcmoddt = cl_get_current()
      LET g_indc_m.indcstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_indc_m.indc002 = "1"
      LET g_indc_m.indcstus = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_indc_m_t.* = g_indc_m.*
      LET g_indc_m_o.* = g_indc_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_indc_m.indcstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL aint510_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_indc_m.* TO NULL
         INITIALIZE g_indd_d TO NULL
         INITIALIZE g_indd2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aint510_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_indd_d.clear()
      #CALL g_indd2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint510_set_act_visible()   
   CALL aint510_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indcent = " ||g_enterprise|| " AND",
                      " indcdocno = '", g_indc_m.indcdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint510_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aint510_cl
   
   CALL aint510_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aint510_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcsite,g_indc_m.indcdocdt, 
       g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199, 
       g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
       g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008, 
       g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid, 
       g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
       g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt,g_indc_m.indcsite_desc,g_indc_m.indc004_desc, 
       g_indc_m.indc101_desc,g_indc_m.indc200_desc,g_indc_m.indc201_desc,g_indc_m.indc005_desc,g_indc_m.indc006_desc, 
       g_indc_m.indc007_desc,g_indc_m.indc021_desc,g_indc_m.indc023_desc,g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc, 
       g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc,g_indc_m.indcmodid_desc,g_indc_m.indccnfid_desc 

   
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint510_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indc_m.indcsite,g_indc_m.indcsite_desc,g_indc_m.indcdocdt,g_indc_m.indcdocno,g_indc_m.indc001, 
       g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcunit, 
       g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026, 
       g_indc_m.indc025,g_indc_m.indc200,g_indc_m.indc200_desc,g_indc_m.indc201,g_indc_m.indc201_desc, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc006,g_indc_m.indc006_desc,g_indc_m.indc007, 
       g_indc_m.indc007_desc,g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc021_desc, 
       g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc023_desc,g_indc_m.indc024,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcmoddt, 
       g_indc_m.indccnfid,g_indc_m.indccnfid_desc,g_indc_m.indccnfdt
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_indc_m.indcownid      
   LET g_data_dept  = g_indc_m.indcowndp
   
   #功能已完成,通報訊息中心
   CALL aint510_msgcentre_notify('insert')
   
END FUNCTION
{</section>}
 
{<section id="aint510.modify" >}
#+ 資料修改
PRIVATE FUNCTION aint510_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_indc_m_t.* = g_indc_m.*
   LET g_indc_m_o.* = g_indc_m.*
   
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   CALL s_transaction_begin()
   
   OPEN aint510_cl USING g_enterprise,g_indc_m.indcdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint510_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE aint510_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint510_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcsite,g_indc_m.indcdocdt, 
       g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199, 
       g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
       g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008, 
       g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid, 
       g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
       g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt,g_indc_m.indcsite_desc,g_indc_m.indc004_desc, 
       g_indc_m.indc101_desc,g_indc_m.indc200_desc,g_indc_m.indc201_desc,g_indc_m.indc005_desc,g_indc_m.indc006_desc, 
       g_indc_m.indc007_desc,g_indc_m.indc021_desc,g_indc_m.indc023_desc,g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc, 
       g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc,g_indc_m.indcmodid_desc,g_indc_m.indccnfid_desc 

   
   #檢查是否允許此動作
   IF NOT aint510_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint510_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL aint510_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_indcdocno_t = g_indc_m.indcdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_indc_m.indcmodid = g_user 
LET g_indc_m.indcmoddt = cl_get_current()
LET g_indc_m.indcmodid_desc = cl_get_username(g_indc_m.indcmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL aint510_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE indc_t SET (indcmodid,indcmoddt) = (g_indc_m.indcmodid,g_indc_m.indcmoddt)
          WHERE indcent = g_enterprise AND indcdocno = g_indcdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_indc_m.* = g_indc_m_t.*
            CALL aint510_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_indc_m.indcdocno != g_indc_m_t.indcdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE indd_t SET indddocno = g_indc_m.indcdocno
 
          WHERE inddent = g_enterprise AND indddocno = g_indc_m_t.indcdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "indd_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE indl_t
            SET indldocno = g_indc_m.indcdocno
 
          WHERE indlent = g_enterprise AND
                indldocno = g_indcdocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "indl_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indl_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint510_set_act_visible()   
   CALL aint510_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " indcent = " ||g_enterprise|| " AND",
                      " indcdocno = '", g_indc_m.indcdocno, "' "
 
   #填到對應位置
   CALL aint510_browser_fill("")
 
   CLOSE aint510_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint510_msgcentre_notify('modify')
 
END FUNCTION 
{</section>}
 
{<section id="aint510.input" >}
#+ 資料輸入
PRIVATE FUNCTION aint510_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indc_m.indcsite,g_indc_m.indcsite_desc,g_indc_m.indcdocdt,g_indc_m.indcdocno,g_indc_m.indc001, 
       g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcunit, 
       g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026, 
       g_indc_m.indc025,g_indc_m.indc200,g_indc_m.indc200_desc,g_indc_m.indc201,g_indc_m.indc201_desc, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc006,g_indc_m.indc006_desc,g_indc_m.indc007, 
       g_indc_m.indc007_desc,g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc021_desc, 
       g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc023_desc,g_indc_m.indc024,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcmoddt, 
       g_indc_m.indccnfid,g_indc_m.indccnfid_desc,g_indc_m.indccnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT inddsite,inddunit,inddseq,indd001,indd047,indd048,indd003,indd002,indd004, 
       indd006,indd005,indd007,indd008,indd009,indd020,indd021,indd045,indd046,indd010,indd022,indd023, 
       indd024,indd102,indd025,indd030,indd031,indd032,indd033,indd034,indd035,indd040,indd101 FROM  
       indd_t WHERE inddent=? AND indddocno=? AND inddseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint510_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT indlseq,indlseq1,indl001,indl002,indl003,indl004,indl005,indl022,indl023, 
       indl024,indl101,indl020,indl021,indl102,indl103,indl032,indl033,indl034,indl030,indl031 FROM  
       indl_t WHERE indlent=? AND indldocno=? AND indlseq=? AND indlseq1=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aint510_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aint510_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aint510_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_indc_m.indcsite,g_indc_m.indcdocdt,g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004, 
       g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002, 
       g_indc_m.indc003,g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007, 
       g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024 

   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
{</section>}
 
{<section id="aint510.input.head" >}
      #單頭段
      INPUT BY NAME g_indc_m.indcsite,g_indc_m.indcdocdt,g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004, 
          g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002, 
          g_indc_m.indc003,g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007, 
          g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aint510_cl USING g_enterprise,g_indc_m.indcdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint510_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE aint510_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aint510_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aint510_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcsite
            
            #add-point:AFTER FIELD indcsite name="input.a.indcsite"
            {<point name="input.a.indcsite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcsite
            #add-point:BEFORE FIELD indcsite name="input.b.indcsite"
            {<point name="input.b.indcsite" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indcsite
            #add-point:ON CHANGE indcsite name="input.g.indcsite"
            {<point name="input.g.indcsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcdocdt
            #add-point:BEFORE FIELD indcdocdt name="input.b.indcdocdt"
            {<point name="input.b.indcdocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcdocdt
            
            #add-point:AFTER FIELD indcdocdt name="input.a.indcdocdt"
            {<point name="input.a.indcdocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indcdocdt
            #add-point:ON CHANGE indcdocdt name="input.g.indcdocdt"
            {<point name="input.g.indcdocdt" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcdocno
            #add-point:BEFORE FIELD indcdocno name="input.b.indcdocno"
            {<point name="input.b.indcdocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcdocno
            
            #add-point:AFTER FIELD indcdocno name="input.a.indcdocno"
            {<point name="input.a.indcdocno" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indcdocno
            #add-point:ON CHANGE indcdocno name="input.g.indcdocno"
            {<point name="input.g.indcdocno" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc001
            #add-point:BEFORE FIELD indc001 name="input.b.indc001"
            {<point name="input.b.indc001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc001
            
            #add-point:AFTER FIELD indc001 name="input.a.indc001"
            {<point name="input.a.indc001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc001
            #add-point:ON CHANGE indc001 name="input.g.indc001"
            {<point name="input.g.indc001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc004
            
            #add-point:AFTER FIELD indc004 name="input.a.indc004"
            {<point name="input.a.indc004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc004
            #add-point:BEFORE FIELD indc004 name="input.b.indc004"
            {<point name="input.b.indc004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc004
            #add-point:ON CHANGE indc004 name="input.g.indc004"
            {<point name="input.g.indc004" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc101
            
            #add-point:AFTER FIELD indc101 name="input.a.indc101"
            {<point name="input.a.indc101" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc101
            #add-point:BEFORE FIELD indc101 name="input.b.indc101"
            {<point name="input.b.indc101" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc101
            #add-point:ON CHANGE indc101 name="input.g.indc101"
            {<point name="input.g.indc101" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcunit
            #add-point:BEFORE FIELD indcunit name="input.b.indcunit"
            {<point name="input.b.indcunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcunit
            
            #add-point:AFTER FIELD indcunit name="input.a.indcunit"
            {<point name="input.a.indcunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indcunit
            #add-point:ON CHANGE indcunit name="input.g.indcunit"
            {<point name="input.g.indcunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc199
            #add-point:BEFORE FIELD indc199 name="input.b.indc199"
            {<point name="input.b.indc199" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc199
            
            #add-point:AFTER FIELD indc199 name="input.a.indc199"
            {<point name="input.a.indc199" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc199
            #add-point:ON CHANGE indc199 name="input.g.indc199"
            {<point name="input.g.indc199" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc000
            #add-point:BEFORE FIELD indc000 name="input.b.indc000"
            {<point name="input.b.indc000" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc000
            
            #add-point:AFTER FIELD indc000 name="input.a.indc000"
            {<point name="input.a.indc000" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc000
            #add-point:ON CHANGE indc000 name="input.g.indc000"
            {<point name="input.g.indc000" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc202
            #add-point:BEFORE FIELD indc202 name="input.b.indc202"
            {<point name="input.b.indc202" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc202
            
            #add-point:AFTER FIELD indc202 name="input.a.indc202"
            {<point name="input.a.indc202" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc202
            #add-point:ON CHANGE indc202 name="input.g.indc202"
            {<point name="input.g.indc202" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc002
            #add-point:BEFORE FIELD indc002 name="input.b.indc002"
            {<point name="input.b.indc002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc002
            
            #add-point:AFTER FIELD indc002 name="input.a.indc002"
            {<point name="input.a.indc002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc002
            #add-point:ON CHANGE indc002 name="input.g.indc002"
            {<point name="input.g.indc002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc003
            #add-point:BEFORE FIELD indc003 name="input.b.indc003"
            {<point name="input.b.indc003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc003
            
            #add-point:AFTER FIELD indc003 name="input.a.indc003"
            {<point name="input.a.indc003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc003
            #add-point:ON CHANGE indc003 name="input.g.indc003"
            {<point name="input.g.indc003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc200
            
            #add-point:AFTER FIELD indc200 name="input.a.indc200"
            {<point name="input.a.indc200" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc200
            #add-point:BEFORE FIELD indc200 name="input.b.indc200"
            {<point name="input.b.indc200" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc200
            #add-point:ON CHANGE indc200 name="input.g.indc200"
            {<point name="input.g.indc200" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc201
            
            #add-point:AFTER FIELD indc201 name="input.a.indc201"
            {<point name="input.a.indc201" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc201
            #add-point:BEFORE FIELD indc201 name="input.b.indc201"
            {<point name="input.b.indc201" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc201
            #add-point:ON CHANGE indc201 name="input.g.indc201"
            {<point name="input.g.indc201" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc005
            
            #add-point:AFTER FIELD indc005 name="input.a.indc005"
            {<point name="input.a.indc005" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc005
            #add-point:BEFORE FIELD indc005 name="input.b.indc005"
            {<point name="input.b.indc005" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc005
            #add-point:ON CHANGE indc005 name="input.g.indc005"
            {<point name="input.g.indc005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc006
            
            #add-point:AFTER FIELD indc006 name="input.a.indc006"
            {<point name="input.a.indc006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc006
            #add-point:BEFORE FIELD indc006 name="input.b.indc006"
            {<point name="input.b.indc006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc006
            #add-point:ON CHANGE indc006 name="input.g.indc006"
            {<point name="input.g.indc006" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc007
            
            #add-point:AFTER FIELD indc007 name="input.a.indc007"
            {<point name="input.a.indc007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc007
            #add-point:BEFORE FIELD indc007 name="input.b.indc007"
            {<point name="input.b.indc007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc007
            #add-point:ON CHANGE indc007 name="input.g.indc007"
            {<point name="input.g.indc007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc008
            #add-point:BEFORE FIELD indc008 name="input.b.indc008"
            {<point name="input.b.indc008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc008
            
            #add-point:AFTER FIELD indc008 name="input.a.indc008"
            {<point name="input.a.indc008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc008
            #add-point:ON CHANGE indc008 name="input.g.indc008"
            {<point name="input.g.indc008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indcstus
            #add-point:BEFORE FIELD indcstus name="input.b.indcstus"
            {<point name="input.b.indcstus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indcstus
            
            #add-point:AFTER FIELD indcstus name="input.a.indcstus"
            {<point name="input.a.indcstus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indcstus
            #add-point:ON CHANGE indcstus name="input.g.indcstus"
            {<point name="input.g.indcstus" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc021
            
            #add-point:AFTER FIELD indc021 name="input.a.indc021"
            {<point name="input.a.indc021" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc021
            #add-point:BEFORE FIELD indc021 name="input.b.indc021"
            {<point name="input.b.indc021" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc021
            #add-point:ON CHANGE indc021 name="input.g.indc021"
            {<point name="input.g.indc021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc022
            #add-point:BEFORE FIELD indc022 name="input.b.indc022"
            {<point name="input.b.indc022" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc022
            
            #add-point:AFTER FIELD indc022 name="input.a.indc022"
            {<point name="input.a.indc022" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc022
            #add-point:ON CHANGE indc022 name="input.g.indc022"
            {<point name="input.g.indc022" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc023
            
            #add-point:AFTER FIELD indc023 name="input.a.indc023"
            {<point name="input.a.indc023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc023
            #add-point:BEFORE FIELD indc023 name="input.b.indc023"
            {<point name="input.b.indc023" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc023
            #add-point:ON CHANGE indc023 name="input.g.indc023"
            {<point name="input.g.indc023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indc024
            #add-point:BEFORE FIELD indc024 name="input.b.indc024"
            {<point name="input.b.indc024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indc024
            
            #add-point:AFTER FIELD indc024 name="input.a.indc024"
            {<point name="input.a.indc024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indc024
            #add-point:ON CHANGE indc024 name="input.g.indc024"
            {<point name="input.g.indc024" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.indcsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcsite
            #add-point:ON ACTION controlp INFIELD indcsite name="input.c.indcsite"
            {<point name="input.c.indcsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.indcdocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcdocdt
            #add-point:ON ACTION controlp INFIELD indcdocdt name="input.c.indcdocdt"
            {<point name="input.c.indcdocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.indcdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcdocno
            #add-point:ON ACTION controlp INFIELD indcdocno name="input.c.indcdocno"
            {<point name="input.c.indcdocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc001
            #add-point:ON ACTION controlp INFIELD indc001 name="input.c.indc001"
            {<point name="input.c.indc001" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc004
            #add-point:ON ACTION controlp INFIELD indc004 name="input.c.indc004"
            {<point name="input.c.indc004" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc101
            #add-point:ON ACTION controlp INFIELD indc101 name="input.c.indc101"
            {<point name="input.c.indc101" />}
            #END add-point
 
 
         #Ctrlp:input.c.indcunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcunit
            #add-point:ON ACTION controlp INFIELD indcunit name="input.c.indcunit"
            {<point name="input.c.indcunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc199
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc199
            #add-point:ON ACTION controlp INFIELD indc199 name="input.c.indc199"
            {<point name="input.c.indc199" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc000
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc000
            #add-point:ON ACTION controlp INFIELD indc000 name="input.c.indc000"
            {<point name="input.c.indc000" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc202
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc202
            #add-point:ON ACTION controlp INFIELD indc202 name="input.c.indc202"
            {<point name="input.c.indc202" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc002
            #add-point:ON ACTION controlp INFIELD indc002 name="input.c.indc002"
            {<point name="input.c.indc002" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc003
            #add-point:ON ACTION controlp INFIELD indc003 name="input.c.indc003"
            {<point name="input.c.indc003" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc200
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc200
            #add-point:ON ACTION controlp INFIELD indc200 name="input.c.indc200"
            {<point name="input.c.indc200" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc201
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc201
            #add-point:ON ACTION controlp INFIELD indc201 name="input.c.indc201"
            {<point name="input.c.indc201" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc005
            #add-point:ON ACTION controlp INFIELD indc005 name="input.c.indc005"
            {<point name="input.c.indc005" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc006
            #add-point:ON ACTION controlp INFIELD indc006 name="input.c.indc006"
            {<point name="input.c.indc006" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc007
            #add-point:ON ACTION controlp INFIELD indc007 name="input.c.indc007"
            {<point name="input.c.indc007" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc008
            #add-point:ON ACTION controlp INFIELD indc008 name="input.c.indc008"
            {<point name="input.c.indc008" />}
            #END add-point
 
 
         #Ctrlp:input.c.indcstus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indcstus
            #add-point:ON ACTION controlp INFIELD indcstus name="input.c.indcstus"
            {<point name="input.c.indcstus" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc021
            #add-point:ON ACTION controlp INFIELD indc021 name="input.c.indc021"
            {<point name="input.c.indc021" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc022
            #add-point:ON ACTION controlp INFIELD indc022 name="input.c.indc022"
            {<point name="input.c.indc022" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc023
            #add-point:ON ACTION controlp INFIELD indc023 name="input.c.indc023"
            {<point name="input.c.indc023" />}
            #END add-point
 
 
         #Ctrlp:input.c.indc024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indc024
            #add-point:ON ACTION controlp INFIELD indc024 name="input.c.indc024"
            {<point name="input.c.indc024" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_indc_m.indcdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO indc_t (indcent,indcsite,indcdocdt,indcdocno,indc001,indc004,indc101,indcunit, 
                   indc199,indc000,indc202,indc002,indc003,indc026,indc025,indc200,indc201,indc005,indc006, 
                   indc007,indc008,indcstus,indc021,indc022,indc023,indc024,indcownid,indcowndp,indccrtid, 
                   indccrtdp,indccrtdt,indcmodid,indcmoddt,indccnfid,indccnfdt)
               VALUES (g_enterprise,g_indc_m.indcsite,g_indc_m.indcdocdt,g_indc_m.indcdocno,g_indc_m.indc001, 
                   g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199,g_indc_m.indc000, 
                   g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
                   g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007, 
                   g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023, 
                   g_indc_m.indc024,g_indc_m.indcownid,g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp, 
                   g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt)  

               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_indc_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aint510_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aint510_b_fill()
                  CALL aint510_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aint510_indc_t_mask_restore('restore_mask_o')
               
               UPDATE indc_t SET (indcsite,indcdocdt,indcdocno,indc001,indc004,indc101,indcunit,indc199, 
                   indc000,indc202,indc002,indc003,indc026,indc025,indc200,indc201,indc005,indc006,indc007, 
                   indc008,indcstus,indc021,indc022,indc023,indc024,indcownid,indcowndp,indccrtid,indccrtdp, 
                   indccrtdt,indcmodid,indcmoddt,indccnfid,indccnfdt) = (g_indc_m.indcsite,g_indc_m.indcdocdt, 
                   g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit, 
                   g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003, 
                   g_indc_m.indc026,g_indc_m.indc025,g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005, 
                   g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021, 
                   g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid,g_indc_m.indcowndp, 
                   g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmoddt, 
                   g_indc_m.indccnfid,g_indc_m.indccnfdt)
                WHERE indcent = g_enterprise AND indcdocno = g_indcdocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "indc_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aint510_indc_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_indc_m_t)
               LET g_log2 = util.JSON.stringify(g_indc_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_indcdocno_t = g_indc_m.indcdocno
 
            
      END INPUT
   
{</section>}
 
{<section id="aint510.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_indd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_indd_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aint510_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_indd_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aint510_cl USING g_enterprise,g_indc_m.indcdocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aint510_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE aint510_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_indd_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_indd_d[l_ac].inddseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_indd_d_t.* = g_indd_d[l_ac].*  #BACKUP
               LET g_indd_d_o.* = g_indd_d[l_ac].*  #BACKUP
               CALL aint510_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aint510_set_no_entry_b(l_cmd)
               IF NOT aint510_lock_b("indd_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aint510_bcl INTO g_indd_d[l_ac].inddsite,g_indd_d[l_ac].inddunit,g_indd_d[l_ac].inddseq, 
                      g_indd_d[l_ac].indd001,g_indd_d[l_ac].indd047,g_indd_d[l_ac].indd048,g_indd_d[l_ac].indd003, 
                      g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd004,g_indd_d[l_ac].indd006,g_indd_d[l_ac].indd005, 
                      g_indd_d[l_ac].indd007,g_indd_d[l_ac].indd008,g_indd_d[l_ac].indd009,g_indd_d[l_ac].indd020, 
                      g_indd_d[l_ac].indd021,g_indd_d[l_ac].indd045,g_indd_d[l_ac].indd046,g_indd_d[l_ac].indd010, 
                      g_indd_d[l_ac].indd022,g_indd_d[l_ac].indd023,g_indd_d[l_ac].indd024,g_indd_d[l_ac].indd102, 
                      g_indd_d[l_ac].indd025,g_indd_d[l_ac].indd030,g_indd_d[l_ac].indd031,g_indd_d[l_ac].indd032, 
                      g_indd_d[l_ac].indd033,g_indd_d[l_ac].indd034,g_indd_d[l_ac].indd035,g_indd_d[l_ac].indd040, 
                      g_indd_d[l_ac].indd101
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_indd_d_t.inddseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_indd_d_mask_o[l_ac].* =  g_indd_d[l_ac].*
                  CALL aint510_indd_t_mask()
                  LET g_indd_d_mask_n[l_ac].* =  g_indd_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aint510_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_indd_d[l_ac].* TO NULL 
            INITIALIZE g_indd_d_t.* TO NULL 
            INITIALIZE g_indd_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_indd_d[l_ac].indd005 = "1"
      LET g_indd_d[l_ac].indd008 = "0"
      LET g_indd_d[l_ac].indd009 = "0"
      LET g_indd_d[l_ac].indd045 = "0"
      LET g_indd_d[l_ac].indd046 = "0"
      LET g_indd_d[l_ac].indd010 = "N"
      LET g_indd_d[l_ac].indd025 = "0"
      LET g_indd_d[l_ac].indd035 = "0"
      LET g_indd_d[l_ac].indd040 = "N"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_indd_d_t.* = g_indd_d[l_ac].*     #新輸入資料
            LET g_indd_d_o.* = g_indd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aint510_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aint510_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_indd_d[li_reproduce_target].* = g_indd_d[li_reproduce].*
 
               LET g_indd_d[li_reproduce_target].inddseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM indd_t 
             WHERE inddent = g_enterprise AND indddocno = g_indc_m.indcdocno
 
               AND inddseq = g_indd_d[l_ac].inddseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indc_m.indcdocno
               LET gs_keys[2] = g_indd_d[g_detail_idx].inddseq
               CALL aint510_insert_b('indd_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_indd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "indd_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aint510_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_indc_m.indcdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_indd_d_t.inddseq
 
            
               #刪除同層單身
               IF NOT aint510_delete_b('indd_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint510_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aint510_key_delete_b(gs_keys,'indd_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aint510_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aint510_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_indd_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_indd_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inddsite
            #add-point:BEFORE FIELD inddsite name="input.b.page1.inddsite"
            {<point name="input.b.page1.inddsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inddsite
            
            #add-point:AFTER FIELD inddsite name="input.a.page1.inddsite"
            {<point name="input.a.page1.inddsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inddsite
            #add-point:ON CHANGE inddsite name="input.g.page1.inddsite"
            {<point name="input.g.page1.inddsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inddunit
            #add-point:BEFORE FIELD inddunit name="input.b.page1.inddunit"
            {<point name="input.b.page1.inddunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inddunit
            
            #add-point:AFTER FIELD inddunit name="input.a.page1.inddunit"
            {<point name="input.a.page1.inddunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inddunit
            #add-point:ON CHANGE inddunit name="input.g.page1.inddunit"
            {<point name="input.g.page1.inddunit" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD inddseq
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].inddseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD inddseq
            END IF 
 
 
 
            #add-point:AFTER FIELD inddseq name="input.a.page1.inddseq"
            {<point name="input.a.page1.inddseq" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD inddseq
            #add-point:BEFORE FIELD inddseq name="input.b.page1.inddseq"
            {<point name="input.b.page1.inddseq" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE inddseq
            #add-point:ON CHANGE inddseq name="input.g.page1.inddseq"
            {<point name="input.g.page1.inddseq" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd001
            #add-point:BEFORE FIELD indd001 name="input.b.page1.indd001"
            {<point name="input.b.page1.indd001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd001
            
            #add-point:AFTER FIELD indd001 name="input.a.page1.indd001"
            {<point name="input.a.page1.indd001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd001
            #add-point:ON CHANGE indd001 name="input.g.page1.indd001"
            {<point name="input.g.page1.indd001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd047
            #add-point:BEFORE FIELD indd047 name="input.b.page1.indd047"
            {<point name="input.b.page1.indd047" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd047
            
            #add-point:AFTER FIELD indd047 name="input.a.page1.indd047"
            {<point name="input.a.page1.indd047" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd047
            #add-point:ON CHANGE indd047 name="input.g.page1.indd047"
            {<point name="input.g.page1.indd047" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd048
            #add-point:BEFORE FIELD indd048 name="input.b.page1.indd048"
            {<point name="input.b.page1.indd048" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd048
            
            #add-point:AFTER FIELD indd048 name="input.a.page1.indd048"
            {<point name="input.a.page1.indd048" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd048
            #add-point:ON CHANGE indd048 name="input.g.page1.indd048"
            {<point name="input.g.page1.indd048" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd003
            
            #add-point:AFTER FIELD indd003 name="input.a.page1.indd003"
            {<point name="input.a.page1.indd003" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd003
            #add-point:BEFORE FIELD indd003 name="input.b.page1.indd003"
            {<point name="input.b.page1.indd003" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd003
            #add-point:ON CHANGE indd003 name="input.g.page1.indd003"
            {<point name="input.g.page1.indd003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd002
            
            #add-point:AFTER FIELD indd002 name="input.a.page1.indd002"
            {<point name="input.a.page1.indd002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd002
            #add-point:BEFORE FIELD indd002 name="input.b.page1.indd002"
            {<point name="input.b.page1.indd002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd002
            #add-point:ON CHANGE indd002 name="input.g.page1.indd002"
            {<point name="input.g.page1.indd002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd004
            #add-point:BEFORE FIELD indd004 name="input.b.page1.indd004"
            {<point name="input.b.page1.indd004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd004
            
            #add-point:AFTER FIELD indd004 name="input.a.page1.indd004"
            {<point name="input.a.page1.indd004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd004
            #add-point:ON CHANGE indd004 name="input.g.page1.indd004"
            {<point name="input.g.page1.indd004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa154
            #add-point:BEFORE FIELD imaa154 name="input.b.page1.imaa154"
            {<point name="input.b.page1.imaa154" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa154
            
            #add-point:AFTER FIELD imaa154 name="input.a.page1.imaa154"
            {<point name="input.a.page1.imaa154" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa154
            #add-point:ON CHANGE imaa154 name="input.g.page1.imaa154"
            {<point name="input.g.page1.imaa154" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa133
            
            #add-point:AFTER FIELD imaa133 name="input.a.page1.imaa133"
            {<point name="input.a.page1.imaa133" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa133
            #add-point:BEFORE FIELD imaa133 name="input.b.page1.imaa133"
            {<point name="input.b.page1.imaa133" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa133
            #add-point:ON CHANGE imaa133 name="input.g.page1.imaa133"
            {<point name="input.g.page1.imaa133" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa156
            #add-point:BEFORE FIELD imaa156 name="input.b.page1.imaa156"
            {<point name="input.b.page1.imaa156" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa156
            
            #add-point:AFTER FIELD imaa156 name="input.a.page1.imaa156"
            {<point name="input.a.page1.imaa156" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa156
            #add-point:ON CHANGE imaa156 name="input.g.page1.imaa156"
            {<point name="input.g.page1.imaa156" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa132
            
            #add-point:AFTER FIELD imaa132 name="input.a.page1.imaa132"
            {<point name="input.a.page1.imaa132" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa132
            #add-point:BEFORE FIELD imaa132 name="input.b.page1.imaa132"
            {<point name="input.b.page1.imaa132" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa132
            #add-point:ON CHANGE imaa132 name="input.g.page1.imaa132"
            {<point name="input.g.page1.imaa132" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa132_desc
            #add-point:BEFORE FIELD imaa132_desc name="input.b.page1.imaa132_desc"
            {<point name="input.b.page1.imaa132_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa132_desc
            
            #add-point:AFTER FIELD imaa132_desc name="input.a.page1.imaa132_desc"
            {<point name="input.a.page1.imaa132_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa132_desc
            #add-point:ON CHANGE imaa132_desc name="input.g.page1.imaa132_desc"
            {<point name="input.g.page1.imaa132_desc" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD rtaw001
            #add-point:BEFORE FIELD rtaw001 name="input.b.page1.rtaw001"
            {<point name="input.b.page1.rtaw001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD rtaw001
            
            #add-point:AFTER FIELD rtaw001 name="input.a.page1.rtaw001"
            {<point name="input.a.page1.rtaw001" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE rtaw001
            #add-point:ON CHANGE rtaw001 name="input.g.page1.rtaw001"
            {<point name="input.g.page1.rtaw001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa128_desc
            #add-point:BEFORE FIELD imaa128_desc name="input.b.page1.imaa128_desc"
            {<point name="input.b.page1.imaa128_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa128_desc
            
            #add-point:AFTER FIELD imaa128_desc name="input.a.page1.imaa128_desc"
            {<point name="input.a.page1.imaa128_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa128_desc
            #add-point:ON CHANGE imaa128_desc name="input.g.page1.imaa128_desc"
            {<point name="input.g.page1.imaa128_desc" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009 name="input.a.page1.imaa009"
            {<point name="input.a.page1.imaa009" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009 name="input.b.page1.imaa009"
            {<point name="input.b.page1.imaa009" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa009
            #add-point:ON CHANGE imaa009 name="input.g.page1.imaa009"
            {<point name="input.g.page1.imaa009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa009_desc
            #add-point:BEFORE FIELD imaa009_desc name="input.b.page1.imaa009_desc"
            {<point name="input.b.page1.imaa009_desc" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa009_desc
            
            #add-point:AFTER FIELD imaa009_desc name="input.a.page1.imaa009_desc"
            {<point name="input.a.page1.imaa009_desc" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa009_desc
            #add-point:ON CHANGE imaa009_desc name="input.g.page1.imaa009_desc"
            {<point name="input.g.page1.imaa009_desc" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD imaa157
            #add-point:BEFORE FIELD imaa157 name="input.b.page1.imaa157"
            {<point name="input.b.page1.imaa157" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD imaa157
            
            #add-point:AFTER FIELD imaa157 name="input.a.page1.imaa157"
            {<point name="input.a.page1.imaa157" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE imaa157
            #add-point:ON CHANGE imaa157 name="input.g.page1.imaa157"
            {<point name="input.g.page1.imaa157" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd006
            
            #add-point:AFTER FIELD indd006 name="input.a.page1.indd006"
            {<point name="input.a.page1.indd006" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd006
            #add-point:BEFORE FIELD indd006 name="input.b.page1.indd006"
            {<point name="input.b.page1.indd006" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd006
            #add-point:ON CHANGE indd006 name="input.g.page1.indd006"
            {<point name="input.g.page1.indd006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd005
            #add-point:BEFORE FIELD indd005 name="input.b.page1.indd005"
            {<point name="input.b.page1.indd005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd005
            
            #add-point:AFTER FIELD indd005 name="input.a.page1.indd005"
            {<point name="input.a.page1.indd005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd005
            #add-point:ON CHANGE indd005 name="input.g.page1.indd005"
            {<point name="input.g.page1.indd005" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd007
            
            #add-point:AFTER FIELD indd007 name="input.a.page1.indd007"
            {<point name="input.a.page1.indd007" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd007
            #add-point:BEFORE FIELD indd007 name="input.b.page1.indd007"
            {<point name="input.b.page1.indd007" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd007
            #add-point:ON CHANGE indd007 name="input.g.page1.indd007"
            {<point name="input.g.page1.indd007" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd008
            #add-point:BEFORE FIELD indd008 name="input.b.page1.indd008"
            {<point name="input.b.page1.indd008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd008
            
            #add-point:AFTER FIELD indd008 name="input.a.page1.indd008"
            {<point name="input.a.page1.indd008" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd008
            #add-point:ON CHANGE indd008 name="input.g.page1.indd008"
            {<point name="input.g.page1.indd008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd009
            #add-point:BEFORE FIELD indd009 name="input.b.page1.indd009"
            {<point name="input.b.page1.indd009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd009
            
            #add-point:AFTER FIELD indd009 name="input.a.page1.indd009"
            {<point name="input.a.page1.indd009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd009
            #add-point:ON CHANGE indd009 name="input.g.page1.indd009"
            {<point name="input.g.page1.indd009" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd020
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd020,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD indd020
            END IF 
 
 
 
            #add-point:AFTER FIELD indd020 name="input.a.page1.indd020"
            {<point name="input.a.page1.indd020" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd020
            #add-point:BEFORE FIELD indd020 name="input.b.page1.indd020"
            {<point name="input.b.page1.indd020" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd020
            #add-point:ON CHANGE indd020 name="input.g.page1.indd020"
            {<point name="input.g.page1.indd020" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd021
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd021,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD indd021
            END IF 
 
 
 
            #add-point:AFTER FIELD indd021 name="input.a.page1.indd021"
            {<point name="input.a.page1.indd021" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd021
            #add-point:BEFORE FIELD indd021 name="input.b.page1.indd021"
            {<point name="input.b.page1.indd021" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd021
            #add-point:ON CHANGE indd021 name="input.g.page1.indd021"
            {<point name="input.g.page1.indd021" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd045
            #add-point:BEFORE FIELD indd045 name="input.b.page1.indd045"
            {<point name="input.b.page1.indd045" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd045
            
            #add-point:AFTER FIELD indd045 name="input.a.page1.indd045"
            {<point name="input.a.page1.indd045" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd045
            #add-point:ON CHANGE indd045 name="input.g.page1.indd045"
            {<point name="input.g.page1.indd045" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd046
            #add-point:BEFORE FIELD indd046 name="input.b.page1.indd046"
            {<point name="input.b.page1.indd046" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd046
            
            #add-point:AFTER FIELD indd046 name="input.a.page1.indd046"
            {<point name="input.a.page1.indd046" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd046
            #add-point:ON CHANGE indd046 name="input.g.page1.indd046"
            {<point name="input.g.page1.indd046" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd010
            #add-point:BEFORE FIELD indd010 name="input.b.page1.indd010"
            {<point name="input.b.page1.indd010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd010
            
            #add-point:AFTER FIELD indd010 name="input.a.page1.indd010"
            {<point name="input.a.page1.indd010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd010
            #add-point:ON CHANGE indd010 name="input.g.page1.indd010"
            {<point name="input.g.page1.indd010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd022
            
            #add-point:AFTER FIELD indd022 name="input.a.page1.indd022"
            {<point name="input.a.page1.indd022" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd022
            #add-point:BEFORE FIELD indd022 name="input.b.page1.indd022"
            {<point name="input.b.page1.indd022" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd022
            #add-point:ON CHANGE indd022 name="input.g.page1.indd022"
            {<point name="input.g.page1.indd022" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd023
            
            #add-point:AFTER FIELD indd023 name="input.a.page1.indd023"
            {<point name="input.a.page1.indd023" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd023
            #add-point:BEFORE FIELD indd023 name="input.b.page1.indd023"
            {<point name="input.b.page1.indd023" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd023
            #add-point:ON CHANGE indd023 name="input.g.page1.indd023"
            {<point name="input.g.page1.indd023" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd024
            #add-point:BEFORE FIELD indd024 name="input.b.page1.indd024"
            {<point name="input.b.page1.indd024" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd024
            
            #add-point:AFTER FIELD indd024 name="input.a.page1.indd024"
            {<point name="input.a.page1.indd024" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd024
            #add-point:ON CHANGE indd024 name="input.g.page1.indd024"
            {<point name="input.g.page1.indd024" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd102
            #add-point:BEFORE FIELD indd102 name="input.b.page1.indd102"
            {<point name="input.b.page1.indd102" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd102
            
            #add-point:AFTER FIELD indd102 name="input.a.page1.indd102"
            {<point name="input.a.page1.indd102" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd102
            #add-point:ON CHANGE indd102 name="input.g.page1.indd102"
            {<point name="input.g.page1.indd102" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd025
            #add-point:BEFORE FIELD indd025 name="input.b.page1.indd025"
            {<point name="input.b.page1.indd025" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd025
            
            #add-point:AFTER FIELD indd025 name="input.a.page1.indd025"
            {<point name="input.a.page1.indd025" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd025
            #add-point:ON CHANGE indd025 name="input.g.page1.indd025"
            {<point name="input.g.page1.indd025" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd030
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd030,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD indd030
            END IF 
 
 
 
            #add-point:AFTER FIELD indd030 name="input.a.page1.indd030"
            {<point name="input.a.page1.indd030" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd030
            #add-point:BEFORE FIELD indd030 name="input.b.page1.indd030"
            {<point name="input.b.page1.indd030" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd030
            #add-point:ON CHANGE indd030 name="input.g.page1.indd030"
            {<point name="input.g.page1.indd030" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd031
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_indd_d[l_ac].indd031,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD indd031
            END IF 
 
 
 
            #add-point:AFTER FIELD indd031 name="input.a.page1.indd031"
            {<point name="input.a.page1.indd031" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd031
            #add-point:BEFORE FIELD indd031 name="input.b.page1.indd031"
            {<point name="input.b.page1.indd031" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd031
            #add-point:ON CHANGE indd031 name="input.g.page1.indd031"
            {<point name="input.g.page1.indd031" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd032
            
            #add-point:AFTER FIELD indd032 name="input.a.page1.indd032"
            {<point name="input.a.page1.indd032" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd032
            #add-point:BEFORE FIELD indd032 name="input.b.page1.indd032"
            {<point name="input.b.page1.indd032" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd032
            #add-point:ON CHANGE indd032 name="input.g.page1.indd032"
            {<point name="input.g.page1.indd032" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd033
            
            #add-point:AFTER FIELD indd033 name="input.a.page1.indd033"
            {<point name="input.a.page1.indd033" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd033
            #add-point:BEFORE FIELD indd033 name="input.b.page1.indd033"
            {<point name="input.b.page1.indd033" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd033
            #add-point:ON CHANGE indd033 name="input.g.page1.indd033"
            {<point name="input.g.page1.indd033" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd034
            
            #add-point:AFTER FIELD indd034 name="input.a.page1.indd034"
            {<point name="input.a.page1.indd034" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd034
            #add-point:BEFORE FIELD indd034 name="input.b.page1.indd034"
            {<point name="input.b.page1.indd034" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd034
            #add-point:ON CHANGE indd034 name="input.g.page1.indd034"
            {<point name="input.g.page1.indd034" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd035
            #add-point:BEFORE FIELD indd035 name="input.b.page1.indd035"
            {<point name="input.b.page1.indd035" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd035
            
            #add-point:AFTER FIELD indd035 name="input.a.page1.indd035"
            {<point name="input.a.page1.indd035" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd035
            #add-point:ON CHANGE indd035 name="input.g.page1.indd035"
            {<point name="input.g.page1.indd035" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd040
            #add-point:BEFORE FIELD indd040 name="input.b.page1.indd040"
            {<point name="input.b.page1.indd040" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd040
            
            #add-point:AFTER FIELD indd040 name="input.a.page1.indd040"
            {<point name="input.a.page1.indd040" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd040
            #add-point:ON CHANGE indd040 name="input.g.page1.indd040"
            {<point name="input.g.page1.indd040" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD indd101
            #add-point:BEFORE FIELD indd101 name="input.b.page1.indd101"
            {<point name="input.b.page1.indd101" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD indd101
            
            #add-point:AFTER FIELD indd101 name="input.a.page1.indd101"
            {<point name="input.a.page1.indd101" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE indd101
            #add-point:ON CHANGE indd101 name="input.g.page1.indd101"
            {<point name="input.g.page1.indd101" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.inddsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inddsite
            #add-point:ON ACTION controlp INFIELD inddsite name="input.c.page1.inddsite"
            {<point name="input.c.page1.inddsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.inddunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inddunit
            #add-point:ON ACTION controlp INFIELD inddunit name="input.c.page1.inddunit"
            {<point name="input.c.page1.inddunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.inddseq
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD inddseq
            #add-point:ON ACTION controlp INFIELD inddseq name="input.c.page1.inddseq"
            {<point name="input.c.page1.inddseq" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd001
            #add-point:ON ACTION controlp INFIELD indd001 name="input.c.page1.indd001"
            {<point name="input.c.page1.indd001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd047
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd047
            #add-point:ON ACTION controlp INFIELD indd047 name="input.c.page1.indd047"
            {<point name="input.c.page1.indd047" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd048
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd048
            #add-point:ON ACTION controlp INFIELD indd048 name="input.c.page1.indd048"
            {<point name="input.c.page1.indd048" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd003
            #add-point:ON ACTION controlp INFIELD indd003 name="input.c.page1.indd003"
            {<point name="input.c.page1.indd003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd002
            #add-point:ON ACTION controlp INFIELD indd002 name="input.c.page1.indd002"
            {<point name="input.c.page1.indd002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd004
            #add-point:ON ACTION controlp INFIELD indd004 name="input.c.page1.indd004"
            {<point name="input.c.page1.indd004" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa154
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa154
            #add-point:ON ACTION controlp INFIELD imaa154 name="input.c.page1.imaa154"
            {<point name="input.c.page1.imaa154" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa133
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa133
            #add-point:ON ACTION controlp INFIELD imaa133 name="input.c.page1.imaa133"
            {<point name="input.c.page1.imaa133" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa156
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa156
            #add-point:ON ACTION controlp INFIELD imaa156 name="input.c.page1.imaa156"
            {<point name="input.c.page1.imaa156" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa132
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa132
            #add-point:ON ACTION controlp INFIELD imaa132 name="input.c.page1.imaa132"
            {<point name="input.c.page1.imaa132" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa132_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa132_desc
            #add-point:ON ACTION controlp INFIELD imaa132_desc name="input.c.page1.imaa132_desc"
            {<point name="input.c.page1.imaa132_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.rtaw001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD rtaw001
            #add-point:ON ACTION controlp INFIELD rtaw001 name="input.c.page1.rtaw001"
            {<point name="input.c.page1.rtaw001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa128_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa128_desc
            #add-point:ON ACTION controlp INFIELD imaa128_desc name="input.c.page1.imaa128_desc"
            {<point name="input.c.page1.imaa128_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009 name="input.c.page1.imaa009"
            {<point name="input.c.page1.imaa009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa009_desc
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa009_desc
            #add-point:ON ACTION controlp INFIELD imaa009_desc name="input.c.page1.imaa009_desc"
            {<point name="input.c.page1.imaa009_desc" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.imaa157
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD imaa157
            #add-point:ON ACTION controlp INFIELD imaa157 name="input.c.page1.imaa157"
            {<point name="input.c.page1.imaa157" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd006
            #add-point:ON ACTION controlp INFIELD indd006 name="input.c.page1.indd006"
            {<point name="input.c.page1.indd006" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd005
            #add-point:ON ACTION controlp INFIELD indd005 name="input.c.page1.indd005"
            {<point name="input.c.page1.indd005" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd007
            #add-point:ON ACTION controlp INFIELD indd007 name="input.c.page1.indd007"
            {<point name="input.c.page1.indd007" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd008
            #add-point:ON ACTION controlp INFIELD indd008 name="input.c.page1.indd008"
            {<point name="input.c.page1.indd008" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd009
            #add-point:ON ACTION controlp INFIELD indd009 name="input.c.page1.indd009"
            {<point name="input.c.page1.indd009" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd020
            #add-point:ON ACTION controlp INFIELD indd020 name="input.c.page1.indd020"
            {<point name="input.c.page1.indd020" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd021
            #add-point:ON ACTION controlp INFIELD indd021 name="input.c.page1.indd021"
            {<point name="input.c.page1.indd021" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd045
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd045
            #add-point:ON ACTION controlp INFIELD indd045 name="input.c.page1.indd045"
            {<point name="input.c.page1.indd045" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd046
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd046
            #add-point:ON ACTION controlp INFIELD indd046 name="input.c.page1.indd046"
            {<point name="input.c.page1.indd046" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd010
            #add-point:ON ACTION controlp INFIELD indd010 name="input.c.page1.indd010"
            {<point name="input.c.page1.indd010" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd022
            #add-point:ON ACTION controlp INFIELD indd022 name="input.c.page1.indd022"
            {<point name="input.c.page1.indd022" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd023
            #add-point:ON ACTION controlp INFIELD indd023 name="input.c.page1.indd023"
            {<point name="input.c.page1.indd023" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd024
            #add-point:ON ACTION controlp INFIELD indd024 name="input.c.page1.indd024"
            {<point name="input.c.page1.indd024" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd102
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd102
            #add-point:ON ACTION controlp INFIELD indd102 name="input.c.page1.indd102"
            {<point name="input.c.page1.indd102" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd025
            #add-point:ON ACTION controlp INFIELD indd025 name="input.c.page1.indd025"
            {<point name="input.c.page1.indd025" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd030
            #add-point:ON ACTION controlp INFIELD indd030 name="input.c.page1.indd030"
            {<point name="input.c.page1.indd030" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd031
            #add-point:ON ACTION controlp INFIELD indd031 name="input.c.page1.indd031"
            {<point name="input.c.page1.indd031" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd032
            #add-point:ON ACTION controlp INFIELD indd032 name="input.c.page1.indd032"
            {<point name="input.c.page1.indd032" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd033
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd033
            #add-point:ON ACTION controlp INFIELD indd033 name="input.c.page1.indd033"
            {<point name="input.c.page1.indd033" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd034
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd034
            #add-point:ON ACTION controlp INFIELD indd034 name="input.c.page1.indd034"
            {<point name="input.c.page1.indd034" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd035
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd035
            #add-point:ON ACTION controlp INFIELD indd035 name="input.c.page1.indd035"
            {<point name="input.c.page1.indd035" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd040
            #add-point:ON ACTION controlp INFIELD indd040 name="input.c.page1.indd040"
            {<point name="input.c.page1.indd040" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.indd101
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD indd101
            #add-point:ON ACTION controlp INFIELD indd101 name="input.c.page1.indd101"
            {<point name="input.c.page1.indd101" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_indd_d[l_ac].* = g_indd_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE aint510_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_indd_d[l_ac].inddseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_indd_d[l_ac].* = g_indd_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aint510_indd_t_mask_restore('restore_mask_o')
      
               UPDATE indd_t SET (indddocno,inddsite,inddunit,inddseq,indd001,indd047,indd048,indd003, 
                   indd002,indd004,indd006,indd005,indd007,indd008,indd009,indd020,indd021,indd045,indd046, 
                   indd010,indd022,indd023,indd024,indd102,indd025,indd030,indd031,indd032,indd033,indd034, 
                   indd035,indd040,indd101) = (g_indc_m.indcdocno,g_indd_d[l_ac].inddsite,g_indd_d[l_ac].inddunit, 
                   g_indd_d[l_ac].inddseq,g_indd_d[l_ac].indd001,g_indd_d[l_ac].indd047,g_indd_d[l_ac].indd048, 
                   g_indd_d[l_ac].indd003,g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd004,g_indd_d[l_ac].indd006, 
                   g_indd_d[l_ac].indd005,g_indd_d[l_ac].indd007,g_indd_d[l_ac].indd008,g_indd_d[l_ac].indd009, 
                   g_indd_d[l_ac].indd020,g_indd_d[l_ac].indd021,g_indd_d[l_ac].indd045,g_indd_d[l_ac].indd046, 
                   g_indd_d[l_ac].indd010,g_indd_d[l_ac].indd022,g_indd_d[l_ac].indd023,g_indd_d[l_ac].indd024, 
                   g_indd_d[l_ac].indd102,g_indd_d[l_ac].indd025,g_indd_d[l_ac].indd030,g_indd_d[l_ac].indd031, 
                   g_indd_d[l_ac].indd032,g_indd_d[l_ac].indd033,g_indd_d[l_ac].indd034,g_indd_d[l_ac].indd035, 
                   g_indd_d[l_ac].indd040,g_indd_d[l_ac].indd101)
                WHERE inddent = g_enterprise AND indddocno = g_indc_m.indcdocno 
 
                  AND inddseq = g_indd_d_t.inddseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_indd_d[l_ac].* = g_indd_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indd_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_indd_d[l_ac].* = g_indd_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "indd_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_indc_m.indcdocno
               LET gs_keys_bak[1] = g_indcdocno_t
               LET gs_keys[2] = g_indd_d[g_detail_idx].inddseq
               LET gs_keys_bak[2] = g_indd_d_t.inddseq
               CALL aint510_update_b('indd_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aint510_indd_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_indd_d[g_detail_idx].inddseq = g_indd_d_t.inddseq 
 
                  ) THEN
                  LET gs_keys[01] = g_indc_m.indcdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_indd_d_t.inddseq
 
                  CALL aint510_key_update_b(gs_keys,'indd_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_indc_m),util.JSON.stringify(g_indd_d_t)
               LET g_log2 = util.JSON.stringify(g_indc_m),util.JSON.stringify(g_indd_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aint510_unlock_b("indd_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_indd_d[li_reproduce_target].* = g_indd_d[li_reproduce].*
 
               LET g_indd_d[li_reproduce_target].inddseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_indd_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_indd_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      DISPLAY ARRAY g_indd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
         BEFORE ROW
            CALL aint510_idx_chk()
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            LET g_detail_idx = l_ac
            
            #add-point:page2, before row動作 name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point
            
         BEFORE DISPLAY
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'm'
            LET l_ac = DIALOG.getCurrentRow("s_detail2")
            CALL aint510_idx_chk()
            LET g_current_page = 2
      
         #add-point:page2自定義行為 name="input.body2.action"
         {<point name="input.body2.action"/>}
         #end add-point
      
      END DISPLAY
 
 
{</section>}
 
{<section id="aint510.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD indcdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD inddsite
               WHEN "s_detail2"
                  NEXT FIELD indlseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
{</section>}
 
{<section id="aint510.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aint510_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aint510_b_fill() #單身填充
      CALL aint510_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL aint510_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint510_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_indc_m.indcsite,g_indc_m.indcsite_desc,g_indc_m.indcdocdt,g_indc_m.indcdocno,g_indc_m.indc001, 
       g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcunit, 
       g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026, 
       g_indc_m.indc025,g_indc_m.indc200,g_indc_m.indc200_desc,g_indc_m.indc201,g_indc_m.indc201_desc, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc006,g_indc_m.indc006_desc,g_indc_m.indc007, 
       g_indc_m.indc007_desc,g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc021_desc, 
       g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc023_desc,g_indc_m.indc024,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcmoddt, 
       g_indc_m.indccnfid,g_indc_m.indccnfid_desc,g_indc_m.indccnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_indc_m.indcstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_indd_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_indd2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aint510_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="aint510.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION aint510_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="aint510.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION aint510_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE indc_t.indcdocno 
   DEFINE l_oldno     LIKE indc_t.indcdocno 
 
   DEFINE l_master    RECORD LIKE indc_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE indd_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE indl_t.* #此變數樣板目前無使用
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_indcdocno_t = g_indc_m.indcdocno
 
    
   LET g_indc_m.indcdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_indc_m.indcownid = g_user
      LET g_indc_m.indcowndp = g_dept
      LET g_indc_m.indccrtid = g_user
      LET g_indc_m.indccrtdp = g_dept 
      LET g_indc_m.indccrtdt = cl_get_current()
      LET g_indc_m.indcmodid = g_user
      LET g_indc_m.indcmoddt = cl_get_current()
      LET g_indc_m.indcstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_indc_m.indcstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL aint510_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_indc_m.* TO NULL
      INITIALIZE g_indd_d TO NULL
      INITIALIZE g_indd2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aint510_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aint510_set_act_visible()   
   CALL aint510_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " indcent = " ||g_enterprise|| " AND",
                      " indcdocno = '", g_indc_m.indcdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aint510_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aint510_idx_chk()
   
   LET g_data_owner = g_indc_m.indcownid      
   LET g_data_dept  = g_indc_m.indcowndp
   
   #功能已完成,通報訊息中心
   CALL aint510_msgcentre_notify('reproduce')
 
END FUNCTION
{</section>}
 
{<section id="aint510.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION aint510_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE indd_t.* #此變數樣板目前無使用
   DEFINE l_detail2    RECORD LIKE indl_t.* #此變數樣板目前無使用
 
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aint510_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM indd_t
    WHERE inddent = g_enterprise AND indddocno = g_indcdocno_t
 
    INTO TEMP aint510_detail
 
   #將key修正為調整後   
   UPDATE aint510_detail 
      #更新key欄位
      SET indddocno = g_indc_m.indcdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO indd_t SELECT * FROM aint510_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint510_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM indl_t 
    WHERE indlent = g_enterprise AND indldocno = g_indcdocno_t
 
    INTO TEMP aint510_detail
 
   #將key修正為調整後   
   UPDATE aint510_detail SET indldocno = g_indc_m.indcdocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
 
   #將資料塞回原table   
   INSERT INTO indl_t SELECT * FROM aint510_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aint510_detail
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_indcdocno_t = g_indc_m.indcdocno
 
   
END FUNCTION
{</section>}
 
{<section id="aint510.delete" >}
#+ 資料刪除
PRIVATE FUNCTION aint510_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aint510_cl USING g_enterprise,g_indc_m.indcdocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint510_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE aint510_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aint510_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcsite,g_indc_m.indcdocdt, 
       g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199, 
       g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
       g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008, 
       g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid, 
       g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
       g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt,g_indc_m.indcsite_desc,g_indc_m.indc004_desc, 
       g_indc_m.indc101_desc,g_indc_m.indc200_desc,g_indc_m.indc201_desc,g_indc_m.indc005_desc,g_indc_m.indc006_desc, 
       g_indc_m.indc007_desc,g_indc_m.indc021_desc,g_indc_m.indc023_desc,g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc, 
       g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc,g_indc_m.indcmodid_desc,g_indc_m.indccnfid_desc 

   
   
   #檢查是否允許此動作
   IF NOT aint510_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_indc_m_mask_o.* =  g_indc_m.*
   CALL aint510_indc_t_mask()
   LET g_indc_m_mask_n.* =  g_indc_m.*
   
   CALL aint510_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL aint510_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_indcdocno_t = g_indc_m.indcdocno
 
 
      DELETE FROM indc_t
       WHERE indcent = g_enterprise AND indcdocno = g_indc_m.indcdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_indc_m.indcdocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM indd_t
       WHERE inddent = g_enterprise AND indddocno = g_indc_m.indcdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM indl_t
       WHERE indlent = g_enterprise AND
             indldocno = g_indc_m.indcdocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_indc_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE aint510_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_indd_d.clear() 
      CALL g_indd2_d.clear()       
 
     
      CALL aint510_ui_browser_refresh()  
      #CALL aint510_ui_headershow()  
      #CALL aint510_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL aint510_browser_fill("")
         CALL aint510_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE aint510_cl
 
   #功能已完成,通報訊息中心
   CALL aint510_msgcentre_notify('delete')
    
END FUNCTION
{</section>}
 
{<section id="aint510.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION aint510_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_indd_d.clear()
   CALL g_indd2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aint510_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT inddsite,inddunit,inddseq,indd001,indd047,indd048,indd003,indd002, 
             indd004,indd006,indd005,indd007,indd008,indd009,indd020,indd021,indd045,indd046,indd010, 
             indd022,indd023,indd024,indd102,indd025,indd030,indd031,indd032,indd033,indd034,indd035, 
             indd040,indd101 ,t1.imaal003 ,t2.imaal004 ,t4.oocal003 ,t5.oocal003 ,t6.inayl003 ,t7.inayl003 , 
             t8.inab003 FROM indd_t",   
                     " INNER JOIN indc_t ON indcent = " ||g_enterprise|| " AND indcdocno = indddocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=indd002 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t2 ON t2.imaalent="||g_enterprise||" AND t2.imaal001=indd002 AND t2.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t4 ON t4.oocalent="||g_enterprise||" AND t4.oocal001=indd006 AND t4.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent="||g_enterprise||" AND t5.oocal001=indd007 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t6 ON t6.inaylent="||g_enterprise||" AND t6.inayl001=indd022 AND t6.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t7 ON t7.inaylent="||g_enterprise||" AND t7.inayl001=indd032 AND t7.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t8 ON t8.inabent="||g_enterprise||" AND t8.inabsite=inddsite AND t8.inab001=indd032 AND t8.inab002=indd033  ",
 
                     " WHERE inddent=? AND indddocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY indd_t.inddseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint510_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aint510_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_indc_m.indcdocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_indc_m.indcdocno INTO g_indd_d[l_ac].inddsite,g_indd_d[l_ac].inddunit, 
          g_indd_d[l_ac].inddseq,g_indd_d[l_ac].indd001,g_indd_d[l_ac].indd047,g_indd_d[l_ac].indd048, 
          g_indd_d[l_ac].indd003,g_indd_d[l_ac].indd002,g_indd_d[l_ac].indd004,g_indd_d[l_ac].indd006, 
          g_indd_d[l_ac].indd005,g_indd_d[l_ac].indd007,g_indd_d[l_ac].indd008,g_indd_d[l_ac].indd009, 
          g_indd_d[l_ac].indd020,g_indd_d[l_ac].indd021,g_indd_d[l_ac].indd045,g_indd_d[l_ac].indd046, 
          g_indd_d[l_ac].indd010,g_indd_d[l_ac].indd022,g_indd_d[l_ac].indd023,g_indd_d[l_ac].indd024, 
          g_indd_d[l_ac].indd102,g_indd_d[l_ac].indd025,g_indd_d[l_ac].indd030,g_indd_d[l_ac].indd031, 
          g_indd_d[l_ac].indd032,g_indd_d[l_ac].indd033,g_indd_d[l_ac].indd034,g_indd_d[l_ac].indd035, 
          g_indd_d[l_ac].indd040,g_indd_d[l_ac].indd101,g_indd_d[l_ac].indd002_desc,g_indd_d[l_ac].indd002_desc_desc, 
          g_indd_d[l_ac].indd006_desc,g_indd_d[l_ac].indd007_desc,g_indd_d[l_ac].indd022_desc,g_indd_d[l_ac].indd032_desc, 
          g_indd_d[l_ac].indd033_desc   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
   #判斷是否填充
   IF aint510_fill_chk(2) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.body2.long_sql_if"
         {<point name="b_fill.body2.long_sql_if"/>}
         #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT indlseq,indlseq1,indl001,indl002,indl003,indl004,indl005,indl022, 
             indl023,indl024,indl101,indl020,indl021,indl102,indl103,indl032,indl033,indl034,indl030, 
             indl031 ,t10.imaal004 ,t11.oocal003 ,t12.oocal003 ,t13.inayl003 ,t14.inayl003 FROM indl_t", 
                
                     " INNER JOIN  indc_t ON indcent = " ||g_enterprise|| " AND indcdocno = indldocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t10 ON t10.imaalent="||g_enterprise||" AND t10.imaal001=indl002 AND t10.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t11 ON t11.oocalent="||g_enterprise||" AND t11.oocal001=indl004 AND t11.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t12 ON t12.oocalent="||g_enterprise||" AND t12.oocal001=indl005 AND t12.oocal002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t13 ON t13.inaylent="||g_enterprise||" AND t13.inayl001=indl022 AND t13.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inayl_t t14 ON t14.inaylent="||g_enterprise||" AND t14.inayl001=indl032 AND t14.inayl002='"||g_dlang||"' ",
 
                     " WHERE indlent=? AND indldocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段fill_sql name="b_fill.body2.fill_sql"
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY indl_t.indlseq,indl_t.indlseq1"
         
         #add-point:單身填充控制 name="b_fill.sql2"
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aint510_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR aint510_pb2
      END IF
    
      LET l_ac = 1
      
   #  OPEN b_fill_cs2 USING g_enterprise,g_indc_m.indcdocno   #(ver:78)
                                               
      FOREACH b_fill_cs2 USING g_enterprise,g_indc_m.indcdocno INTO g_indd2_d[l_ac].indlseq,g_indd2_d[l_ac].indlseq1, 
          g_indd2_d[l_ac].indl001,g_indd2_d[l_ac].indl002,g_indd2_d[l_ac].indl003,g_indd2_d[l_ac].indl004, 
          g_indd2_d[l_ac].indl005,g_indd2_d[l_ac].indl022,g_indd2_d[l_ac].indl023,g_indd2_d[l_ac].indl024, 
          g_indd2_d[l_ac].indl101,g_indd2_d[l_ac].indl020,g_indd2_d[l_ac].indl021,g_indd2_d[l_ac].indl102, 
          g_indd2_d[l_ac].indl103,g_indd2_d[l_ac].indl032,g_indd2_d[l_ac].indl033,g_indd2_d[l_ac].indl034, 
          g_indd2_d[l_ac].indl030,g_indd2_d[l_ac].indl031,g_indd2_d[l_ac].indl002_desc_desc,g_indd2_d[l_ac].indl004_desc, 
          g_indd2_d[l_ac].indl005_desc,g_indd2_d[l_ac].indl022_desc,g_indd2_d[l_ac].indl032_desc   #(ver:78) 

         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill2.fill"
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code = 9035 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_indd_d.deleteElement(g_indd_d.getLength())
   CALL g_indd2_d.deleteElement(g_indd2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aint510_pb
   FREE aint510_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_indd_d.getLength()
      LET g_indd_d_mask_o[l_ac].* =  g_indd_d[l_ac].*
      CALL aint510_indd_t_mask()
      LET g_indd_d_mask_n[l_ac].* =  g_indd_d[l_ac].*
   END FOR
   
   LET g_indd2_d_mask_o.* =  g_indd2_d.*
   FOR l_ac = 1 TO g_indd2_d.getLength()
      LET g_indd2_d_mask_o[l_ac].* =  g_indd2_d[l_ac].*
      CALL aint510_indl_t_mask()
      LET g_indd2_d_mask_n[l_ac].* =  g_indd2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
{</section>}
 
{<section id="aint510.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION aint510_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM indd_t
       WHERE inddent = g_enterprise AND
         indddocno = ps_keys_bak[1] AND inddseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indd_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM indl_t
       WHERE indlent = g_enterprise AND
             indldocno = ps_keys_bak[1] AND indlseq = ps_keys_bak[2] AND indlseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_indd2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="aint510.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION aint510_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO indd_t
                  (inddent,
                   indddocno,
                   inddseq
                   ,inddsite,inddunit,indd001,indd047,indd048,indd003,indd002,indd004,indd006,indd005,indd007,indd008,indd009,indd020,indd021,indd045,indd046,indd010,indd022,indd023,indd024,indd102,indd025,indd030,indd031,indd032,indd033,indd034,indd035,indd040,indd101) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_indd_d[g_detail_idx].inddsite,g_indd_d[g_detail_idx].inddunit,g_indd_d[g_detail_idx].indd001, 
                       g_indd_d[g_detail_idx].indd047,g_indd_d[g_detail_idx].indd048,g_indd_d[g_detail_idx].indd003, 
                       g_indd_d[g_detail_idx].indd002,g_indd_d[g_detail_idx].indd004,g_indd_d[g_detail_idx].indd006, 
                       g_indd_d[g_detail_idx].indd005,g_indd_d[g_detail_idx].indd007,g_indd_d[g_detail_idx].indd008, 
                       g_indd_d[g_detail_idx].indd009,g_indd_d[g_detail_idx].indd020,g_indd_d[g_detail_idx].indd021, 
                       g_indd_d[g_detail_idx].indd045,g_indd_d[g_detail_idx].indd046,g_indd_d[g_detail_idx].indd010, 
                       g_indd_d[g_detail_idx].indd022,g_indd_d[g_detail_idx].indd023,g_indd_d[g_detail_idx].indd024, 
                       g_indd_d[g_detail_idx].indd102,g_indd_d[g_detail_idx].indd025,g_indd_d[g_detail_idx].indd030, 
                       g_indd_d[g_detail_idx].indd031,g_indd_d[g_detail_idx].indd032,g_indd_d[g_detail_idx].indd033, 
                       g_indd_d[g_detail_idx].indd034,g_indd_d[g_detail_idx].indd035,g_indd_d[g_detail_idx].indd040, 
                       g_indd_d[g_detail_idx].indd101)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indd_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_indd_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO indl_t
                  (indlent,
                   indldocno,
                   indlseq,indlseq1
                   ,indl001,indl002,indl003,indl004,indl005,indl022,indl023,indl024,indl101,indl020,indl021,indl102,indl103,indl032,indl033,indl034,indl030,indl031) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_indd2_d[g_detail_idx].indl001,g_indd2_d[g_detail_idx].indl002,g_indd2_d[g_detail_idx].indl003, 
                       g_indd2_d[g_detail_idx].indl004,g_indd2_d[g_detail_idx].indl005,g_indd2_d[g_detail_idx].indl022, 
                       g_indd2_d[g_detail_idx].indl023,g_indd2_d[g_detail_idx].indl024,g_indd2_d[g_detail_idx].indl101, 
                       g_indd2_d[g_detail_idx].indl020,g_indd2_d[g_detail_idx].indl021,g_indd2_d[g_detail_idx].indl102, 
                       g_indd2_d[g_detail_idx].indl103,g_indd2_d[g_detail_idx].indl032,g_indd2_d[g_detail_idx].indl033, 
                       g_indd2_d[g_detail_idx].indl034,g_indd2_d[g_detail_idx].indl030,g_indd2_d[g_detail_idx].indl031) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "indl_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_indd2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
{</section>}
 
{<section id="aint510.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION aint510_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "indd_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aint510_indd_t_mask_restore('restore_mask_o')
               
      UPDATE indd_t 
         SET (indddocno,
              inddseq
              ,inddsite,inddunit,indd001,indd047,indd048,indd003,indd002,indd004,indd006,indd005,indd007,indd008,indd009,indd020,indd021,indd045,indd046,indd010,indd022,indd023,indd024,indd102,indd025,indd030,indd031,indd032,indd033,indd034,indd035,indd040,indd101) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_indd_d[g_detail_idx].inddsite,g_indd_d[g_detail_idx].inddunit,g_indd_d[g_detail_idx].indd001, 
                  g_indd_d[g_detail_idx].indd047,g_indd_d[g_detail_idx].indd048,g_indd_d[g_detail_idx].indd003, 
                  g_indd_d[g_detail_idx].indd002,g_indd_d[g_detail_idx].indd004,g_indd_d[g_detail_idx].indd006, 
                  g_indd_d[g_detail_idx].indd005,g_indd_d[g_detail_idx].indd007,g_indd_d[g_detail_idx].indd008, 
                  g_indd_d[g_detail_idx].indd009,g_indd_d[g_detail_idx].indd020,g_indd_d[g_detail_idx].indd021, 
                  g_indd_d[g_detail_idx].indd045,g_indd_d[g_detail_idx].indd046,g_indd_d[g_detail_idx].indd010, 
                  g_indd_d[g_detail_idx].indd022,g_indd_d[g_detail_idx].indd023,g_indd_d[g_detail_idx].indd024, 
                  g_indd_d[g_detail_idx].indd102,g_indd_d[g_detail_idx].indd025,g_indd_d[g_detail_idx].indd030, 
                  g_indd_d[g_detail_idx].indd031,g_indd_d[g_detail_idx].indd032,g_indd_d[g_detail_idx].indd033, 
                  g_indd_d[g_detail_idx].indd034,g_indd_d[g_detail_idx].indd035,g_indd_d[g_detail_idx].indd040, 
                  g_indd_d[g_detail_idx].indd101) 
         WHERE inddent = g_enterprise AND indddocno = ps_keys_bak[1] AND inddseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indd_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indd_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint510_indd_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "indl_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL aint510_indl_t_mask_restore('restore_mask_o')
               
      UPDATE indl_t 
         SET (indldocno,
              indlseq,indlseq1
              ,indl001,indl002,indl003,indl004,indl005,indl022,indl023,indl024,indl101,indl020,indl021,indl102,indl103,indl032,indl033,indl034,indl030,indl031) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_indd2_d[g_detail_idx].indl001,g_indd2_d[g_detail_idx].indl002,g_indd2_d[g_detail_idx].indl003, 
                  g_indd2_d[g_detail_idx].indl004,g_indd2_d[g_detail_idx].indl005,g_indd2_d[g_detail_idx].indl022, 
                  g_indd2_d[g_detail_idx].indl023,g_indd2_d[g_detail_idx].indl024,g_indd2_d[g_detail_idx].indl101, 
                  g_indd2_d[g_detail_idx].indl020,g_indd2_d[g_detail_idx].indl021,g_indd2_d[g_detail_idx].indl102, 
                  g_indd2_d[g_detail_idx].indl103,g_indd2_d[g_detail_idx].indl032,g_indd2_d[g_detail_idx].indl033, 
                  g_indd2_d[g_detail_idx].indl034,g_indd2_d[g_detail_idx].indl030,g_indd2_d[g_detail_idx].indl031)  

         WHERE indlent = g_enterprise AND indldocno = ps_keys_bak[1] AND indlseq = ps_keys_bak[2] AND indlseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indl_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "indl_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
          
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aint510_indl_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="aint510.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aint510_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
 
   
END FUNCTION
{</section>}
 
{<section id="aint510.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aint510_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="aint510.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION aint510_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL aint510_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "indd_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aint510_bcl USING g_enterprise,
                                       g_indc_m.indcdocno,g_indd_d[g_detail_idx].inddseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint510_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "indl_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aint510_bcl2 USING g_enterprise,
                                             g_indc_m.indcdocno,g_indd2_d[g_detail_idx].indlseq,g_indd2_d[g_detail_idx].indlseq1 

      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aint510_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="aint510.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aint510_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint510_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aint510_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
{</section>}
 
{<section id="aint510.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION aint510_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("indcdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("indcdocno",TRUE)
      CALL cl_set_comp_entry("indcdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="aint510.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION aint510_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("indcdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("indcdocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("indcdocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="aint510.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION aint510_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
{</section>}
 
{<section id="aint510.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION aint510_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
{</section>}
 
{<section id="aint510.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION aint510_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="aint510.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION aint510_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="aint510.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION aint510_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="aint510.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION aint510_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="aint510.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION aint510_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " indcdocno = '", g_argv[02], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "indc_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "indd_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "indl_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
{</section>}
 
{<section id="aint510.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION aint510_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_indc_m.indcdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aint510_cl USING g_enterprise,g_indc_m.indcdocno
   IF STATUS THEN
      CLOSE aint510_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aint510_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aint510_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcsite,g_indc_m.indcdocdt, 
       g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199, 
       g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
       g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008, 
       g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid, 
       g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
       g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt,g_indc_m.indcsite_desc,g_indc_m.indc004_desc, 
       g_indc_m.indc101_desc,g_indc_m.indc200_desc,g_indc_m.indc201_desc,g_indc_m.indc005_desc,g_indc_m.indc006_desc, 
       g_indc_m.indc007_desc,g_indc_m.indc021_desc,g_indc_m.indc023_desc,g_indc_m.indcownid_desc,g_indc_m.indcowndp_desc, 
       g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc,g_indc_m.indcmodid_desc,g_indc_m.indccnfid_desc 

   
 
   #檢查是否允許此動作
   IF NOT aint510_action_chk() THEN
      CLOSE aint510_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_indc_m.indcsite,g_indc_m.indcsite_desc,g_indc_m.indcdocdt,g_indc_m.indcdocno,g_indc_m.indc001, 
       g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indc101,g_indc_m.indc101_desc,g_indc_m.indcunit, 
       g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026, 
       g_indc_m.indc025,g_indc_m.indc200,g_indc_m.indc200_desc,g_indc_m.indc201,g_indc_m.indc201_desc, 
       g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc006,g_indc_m.indc006_desc,g_indc_m.indc007, 
       g_indc_m.indc007_desc,g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc021_desc, 
       g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc023_desc,g_indc_m.indc024,g_indc_m.indcownid,g_indc_m.indcownid_desc, 
       g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp, 
       g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid,g_indc_m.indcmodid_desc,g_indc_m.indcmoddt, 
       g_indc_m.indccnfid,g_indc_m.indccnfid_desc,g_indc_m.indccnfdt
 
   CASE g_indc_m.indcstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "O"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
      WHEN "P"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_indc_m.indcstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "O"
               HIDE OPTION "confirm_transfer_out"
            WHEN "P"
               HIDE OPTION "confirm_transfer_in"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT aint510_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint510_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT aint510_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE aint510_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制 name="statechange.posted"
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
            {<point name="statechange.closed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirm_transfer_out
         IF cl_auth_chk_act("confirm_transfer_out") THEN
            LET lc_state = "O"
            #add-point:action控制 name="statechange.confirm_transfer_out"
            {<point name="statechange.confirm_transfer_out"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirm_transfer_in
         IF cl_auth_chk_act("confirm_transfer_in") THEN
            LET lc_state = "P"
            #add-point:action控制 name="statechange.confirm_transfer_in"
            {<point name="statechange.confirm_transfer_in"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "C"
      AND lc_state <> "O"
      AND lc_state <> "P"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_indc_m.indcstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aint510_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_indc_m.indcmodid = g_user
   LET g_indc_m.indcmoddt = cl_get_current()
   LET g_indc_m.indcstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE indc_t 
      SET (indcstus,indcmodid,indcmoddt) 
        = (g_indc_m.indcstus,g_indc_m.indcmodid,g_indc_m.indcmoddt)     
    WHERE indcent = g_enterprise AND indcdocno = g_indc_m.indcdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "O"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_out.png")
         WHEN "P"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirm_transfer_in.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aint510_master_referesh USING g_indc_m.indcdocno INTO g_indc_m.indcsite,g_indc_m.indcdocdt, 
          g_indc_m.indcdocno,g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc101,g_indc_m.indcunit,g_indc_m.indc199, 
          g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003,g_indc_m.indc026,g_indc_m.indc025, 
          g_indc_m.indc200,g_indc_m.indc201,g_indc_m.indc005,g_indc_m.indc006,g_indc_m.indc007,g_indc_m.indc008, 
          g_indc_m.indcstus,g_indc_m.indc021,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc024,g_indc_m.indcownid, 
          g_indc_m.indcowndp,g_indc_m.indccrtid,g_indc_m.indccrtdp,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
          g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfdt,g_indc_m.indcsite_desc,g_indc_m.indc004_desc, 
          g_indc_m.indc101_desc,g_indc_m.indc200_desc,g_indc_m.indc201_desc,g_indc_m.indc005_desc,g_indc_m.indc006_desc, 
          g_indc_m.indc007_desc,g_indc_m.indc021_desc,g_indc_m.indc023_desc,g_indc_m.indcownid_desc, 
          g_indc_m.indcowndp_desc,g_indc_m.indccrtid_desc,g_indc_m.indccrtdp_desc,g_indc_m.indcmodid_desc, 
          g_indc_m.indccnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_indc_m.indcsite,g_indc_m.indcsite_desc,g_indc_m.indcdocdt,g_indc_m.indcdocno, 
          g_indc_m.indc001,g_indc_m.indc004,g_indc_m.indc004_desc,g_indc_m.indc101,g_indc_m.indc101_desc, 
          g_indc_m.indcunit,g_indc_m.indc199,g_indc_m.indc000,g_indc_m.indc202,g_indc_m.indc002,g_indc_m.indc003, 
          g_indc_m.indc026,g_indc_m.indc025,g_indc_m.indc200,g_indc_m.indc200_desc,g_indc_m.indc201, 
          g_indc_m.indc201_desc,g_indc_m.indc005,g_indc_m.indc005_desc,g_indc_m.indc006,g_indc_m.indc006_desc, 
          g_indc_m.indc007,g_indc_m.indc007_desc,g_indc_m.indc008,g_indc_m.indcstus,g_indc_m.indc021, 
          g_indc_m.indc021_desc,g_indc_m.indc022,g_indc_m.indc023,g_indc_m.indc023_desc,g_indc_m.indc024, 
          g_indc_m.indcownid,g_indc_m.indcownid_desc,g_indc_m.indcowndp,g_indc_m.indcowndp_desc,g_indc_m.indccrtid, 
          g_indc_m.indccrtid_desc,g_indc_m.indccrtdp,g_indc_m.indccrtdp_desc,g_indc_m.indccrtdt,g_indc_m.indcmodid, 
          g_indc_m.indcmodid_desc,g_indc_m.indcmoddt,g_indc_m.indccnfid,g_indc_m.indccnfid_desc,g_indc_m.indccnfdt 

   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aint510_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aint510_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="aint510.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aint510_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_indd_d.getLength() THEN
         LET g_detail_idx = g_indd_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_indd_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_indd_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_indd2_d.getLength() THEN
         LET g_detail_idx = g_indd2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_indd2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_indd2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="aint510.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION aint510_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aint510_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
{</section>}
 
{<section id="aint510.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION aint510_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="aint510.status_show" >}
PRIVATE FUNCTION aint510_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
{</section>}
 
{<section id="aint510.mask_functions" >}
&include "erp/ain/aint510_mask.4gl"
{</section>}
 
{<section id="aint510.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION aint510_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   {<point name="send.define_customerization" edit="c" mark="Y"/>}
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   {<point name="send.define"/>}
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   {<point name="send.pre_function"/>}
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL aint510_show()
   CALL aint510_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_indc_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_indd_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_indd2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL aint510_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint510_ui_headershow()
   CALL aint510_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION aint510_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   {<point name="draw.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   {<point name="draw.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   {<point name="draw.pre_function"/>}
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL aint510_ui_headershow()  
   CALL aint510_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   {<point name="draw.after_function"/>}
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="aint510.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION aint510_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_indc_m.indcdocno
   LET g_pk_array[1].column = 'indcdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="aint510.other_dialog" readonly="Y" >}
   
{</section>}
 
{<section id="aint510.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION aint510_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aint510_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_indc_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
{</section>}
 
{<section id="aint510.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aint510_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="aint510.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 
 
 
