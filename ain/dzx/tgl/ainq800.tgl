#該程式未解開Section, 採用最新樣板產出!
{<section id="ainq800.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:4(2016-09-02 13:33:59), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000047
#+ Filename...: ainq800
#+ Description: 需求匯總查詢作業
#+ Creator....: 06815(2015-11-16 17:08:02)
#+ Modifier...: 06814 -SD/PR-

{</section>}

{<section id="ainq800.global" >}
#應用 q01 樣板自動產生(Version:34)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_pmcz_d RECORD
       
       sel LIKE type_t.chr1, 
   pmcz023 LIKE pmcz_t.pmcz023, 
   pmczsite LIKE pmcz_t.pmczsite, 
   pmczsite_desc LIKE type_t.chr500, 
   pmcz062 LIKE pmcz_t.pmcz062, 
   pmcz062_desc LIKE type_t.chr500, 
   pmcz001 LIKE pmcz_t.pmcz001, 
   pmcz002 LIKE pmcz_t.pmcz002, 
   pmcz003 LIKE pmcz_t.pmcz003, 
   pmcz004 LIKE pmcz_t.pmcz004, 
   pmcz004_desc LIKE type_t.chr500, 
   pmcz005 LIKE pmcz_t.pmcz005, 
   pmcz006 LIKE pmcz_t.pmcz006, 
   pmcz006_desc LIKE type_t.chr6, 
   pmcz007 LIKE pmcz_t.pmcz007, 
   pmcz007_desc LIKE type_t.chr500, 
   pmcz008 LIKE pmcz_t.pmcz008, 
   pmcz009 LIKE pmcz_t.pmcz009, 
   pmcz009_desc LIKE type_t.chr500, 
   pmcz010 LIKE pmcz_t.pmcz010, 
   pmcz011 LIKE pmcz_t.pmcz011, 
   pmcz020 LIKE pmcz_t.pmcz020, 
   pmcz021 LIKE pmcz_t.pmcz021, 
   pmcz021_desc LIKE type_t.chr500, 
   pmcz022 LIKE pmcz_t.pmcz022, 
   pmcz022_desc LIKE type_t.chr500, 
   pmcz024 LIKE pmcz_t.pmcz024, 
   pmcz025 LIKE pmcz_t.pmcz025, 
   pmcz026 LIKE pmcz_t.pmcz026, 
   pmcz027 LIKE pmcz_t.pmcz027, 
   pmcz028 LIKE pmcz_t.pmcz028, 
   pmcz028_desc LIKE type_t.chr500, 
   pmcz030 LIKE pmcz_t.pmcz030, 
   pmcz030_desc LIKE type_t.chr500, 
   pmcz031 LIKE pmcz_t.pmcz031, 
   pmcz032 LIKE pmcz_t.pmcz032, 
   pmcz040 LIKE pmcz_t.pmcz040, 
   pmcz040_desc LIKE type_t.chr500, 
   pmcz041 LIKE pmcz_t.pmcz041, 
   pmcz041_desc LIKE type_t.chr500, 
   pmcz042 LIKE pmcz_t.pmcz042, 
   pmcz042_desc LIKE type_t.chr500, 
   pmcz043 LIKE pmcz_t.pmcz043, 
   pmcz043_desc LIKE type_t.chr500, 
   pmcz050 LIKE pmcz_t.pmcz050, 
   pmcz051 LIKE pmcz_t.pmcz051, 
   pmcz052 LIKE pmcz_t.pmcz052, 
   pmcz064 LIKE pmcz_t.pmcz064, 
   pmcz065 LIKE pmcz_t.pmcz065, 
   pmcz060 LIKE pmcz_t.pmcz060, 
   pmcz061 LIKE pmcz_t.pmcz061
       END RECORD
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point
 
#模組變數(Module Variables)
DEFINE g_pmcz_d            DYNAMIC ARRAY OF type_g_pmcz_d
DEFINE g_pmcz_d_t          type_g_pmcz_d
 
 
 
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num10             #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num10             #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10
DEFINE g_master_idx          LIKE type_t.num10
DEFINE g_detail_idx          LIKE type_t.num10             #單身 所在筆數(所有資料)
DEFINE g_detail_idx2         LIKE type_t.num10
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
DEFINE g_qbe_hidden          LIKE type_t.num5              #qbe頁籤折疊
DEFINE g_tot_cnt             LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page         LIKE type_t.num10             #每頁筆數
DEFINE g_page_act_list       STRING                        #分頁ACTION清單
DEFINE g_current_row_tot     LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_start_num      LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num        LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
 
 
DEFINE g_wc_filter_table           STRING
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明 name="global.argv"
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="ainq800.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("ain","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ainq800_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE ainq800_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE ainq800_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_ainq800 WITH FORM cl_ap_formpath("ain",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL ainq800_init()   
 
      #進入選單 Menu (="N")
      CALL ainq800_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_ainq800
      
   END IF 
   
   CLOSE ainq800_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 

{</section>}

{<section id="ainq800.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION ainq800_init()
   #add-point:init段define-客製 name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   {<point name="init.before_function" />}
   #end add-point
 
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1" 
   LET g_error_show  = 1
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('b_pmcz023','6552') 
   CALL cl_set_combo_scc('b_pmcz031','6013') 
   CALL cl_set_combo_scc('b_pmcz032','6014') 
   CALL cl_set_combo_scc('b_pmcz060','2035') 
   CALL cl_set_combo_scc('b_pmcz061','6890') 
  
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init" />}
   #end add-point
 
   CALL ainq800_default_search()
END FUNCTION

{</section>}

{<section id="ainq800.default_search" >}
PRIVATE FUNCTION ainq800_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>}
   #end add-point
 
 
   #add-point:default_search段開始前 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " pmczsite = '", g_argv[01], "' AND "
   END IF
 
   IF NOT cl_null(g_argv[02]) THEN
      LET g_wc = g_wc, " pmcz001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET g_wc = g_wc, " pmcz002 = '", g_argv[03], "' AND "
   END IF
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="ainq800.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION ainq800_ui_dialog() 
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num10
   DEFINE ls_result STRING
   DEFINE ls_wc     STRING
   DEFINE lc_action_choice_old   STRING
   DEFINE ls_js     STRING
   DEFINE la_param  RECORD
                    prog       STRING,
                    actionid   STRING,
                    background LIKE type_t.chr1,
                    param      DYNAMIC ARRAY OF STRING
                    END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>}
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   {<point name="ui_dialog.before_function" />}
   #end add-point
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
 
   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   LET g_current_row_tot = 0
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
 
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   
   CALL ainq800_b_fill()
  
   WHILE li_exit = FALSE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_pmcz_d.clear()
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 0
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL ainq800_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:input段落 name="ui_dialog.input"
         {<point name="ui_dialog.input"/>}
         #end add-point
 
         #add-point:construct段落 name="ui_dialog.construct"
         {<point name="ui_dialog.construct" mark="Y"/>}
         #end add-point
     
         DISPLAY ARRAY g_pmcz_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
 
            BEFORE DISPLAY
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL ainq800_detail_action_trans()
 
               LET g_master_idx = l_ac
               #為避免按上下筆時影響執行效能，所以做一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL ainq800_b_fill2()
               LET g_action_choice = lc_action_choice_old
 
               #add-point:input段before row name="input.body.before_row"
               {<point name="input.body.before_row" mark="Y"/>}
               #end add-point
 
            
 
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            {<point name="ui_dialog.body.page1.action" mark="Y"/>}
            #end add-point
 
         END DISPLAY
 
         #add-point:第一頁籤程式段mark結束用 name="ui_dialog.page1.mark.end"
         {<point name="ui_dialog.page1.mark.end"/>}
         #end add-point
 
 
 
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL ainq800_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            {<point name="ui_dialog.bef_dialog"/>}
            #end add-point
            NEXT FIELD pmcz023
 
         AFTER DIALOG
            #add-point:ui_dialog段 after dialog name="ui_dialog.after_dialog"
            {<point name="ui_dialog.after_dialog"/>}
            #end add-point
            
         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG 
      
         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG
 
         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF
 
 
         
            IF cl_null(g_wc2) THEN
               LET g_wc2 = " 1=1"
            END IF
 
 
 
            #add-point:ON ACTION accept name="ui_dialog.accept"
            {<point name="ui_dialog.accept"/>}
            #end add-point
 
            LET g_detail_idx = 1
            LET g_detail_idx2 = 1
            CALL ainq800_b_fill()
 
            IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.extend = ""
               LET g_errparam.code   = -100
               LET g_errparam.popup  = TRUE
               CALL cl_err()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            {<point name="ui_dialog.agendum"/>}
            #end add-point
            CALL cl_user_overview()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_pmcz_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               {<point name="menu.exporttoexcel" />}
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
         ON ACTION datarefresh   # 重新整理
            CALL ainq800_b_fill()
 
         ON ACTION qbehidden     #qbe頁籤折疊
            IF g_qbe_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_qbe_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_qbe_hidden = 1     #hidden
            END IF
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL ainq800_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL ainq800_b_fill()
 
         ON ACTION detail_next               #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL ainq800_b_fill()
 
         ON ACTION detail_last               #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL ainq800_b_fill()
 
         #應用 qs19 樣板自動產生(Version:3)
         #有關於sel欄位選取的action段落
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            FOR li_idx = 1 TO g_pmcz_d.getLength()
               LET g_pmcz_d[li_idx].sel = "Y"
            END FOR
 
            #add-point:ui_dialog段on action selall name="ui_dialog.onaction_selall"
            {<point name="ui_dialog.onaction_selall"/>}
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_pmcz_d.getLength()
               LET g_pmcz_d[li_idx].sel = "N"
            END FOR
 
            #add-point:ui_dialog段on action selnone name="ui_dialog.onaction_selnone"
            {<point name="ui_dialog.onaction_selnone"/>}
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_pmcz_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_pmcz_d[li_idx].sel = "Y"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action sel name="ui_dialog.onaction_sel"
            {<point name="ui_dialog.onaction_sel"/>}
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_pmcz_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_pmcz_d[li_idx].sel = "N"
               END IF
            END FOR
 
            #add-point:ui_dialog段on action unsel name="ui_dialog.onaction_unsel"
            {<point name="ui_dialog.onaction_unsel"/>}
            #end add-point
 
 
 
 
 
         #應用 qs16 樣板自動產生(Version:3)
         ON ACTION filter
            LET g_action_choice="filter"
            CALL ainq800_filter()
            #add-point:ON ACTION filter name="menu.filter"
            {<point name="menu.filter" />}
            #END add-point
            EXIT DIALOG
 
 
 
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               {<point name="menu.datainfo" mark="Y"/>}
               #END add-point
               
               
            END IF
 
 
 
 
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         {<point name="ui_dialog.set_qbe_action_before" mark="Y"/>}
         #end add-point
 
         ON ACTION qbeclear   # 條件清除
            CLEAR FORM
            #add-point:條件清除後 name="ui_dialog.qbeclear"
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         {<point name="ui_dialog.set_qbe_action_after"/>}
         #end add-point
 
      END DIALOG 
   
   END WHILE
 
END FUNCTION

{</section>}

{<section id="ainq800.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION ainq800_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>}
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter, cl_sql_auth_filter()   #(ver:34) add cl_sql_auth_filter()
 
   CALL g_pmcz_d.clear()
 
   #add-point:陣列清空 name="b_fill.array_clear"
   {<point name="b_fill.array_clear" />}
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1
 
   # b_fill段sql組成及FOREACH撰寫
   #應用 qs04 樣板自動產生(Version:9)
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   LET ls_sql_rank = "SELECT  UNIQUE '',pmcz023,pmczsite,'',pmcz062,'',pmcz001,pmcz002,pmcz003,pmcz004, 
       '',pmcz005,pmcz006,'',pmcz007,'',pmcz008,pmcz009,'',pmcz010,pmcz011,pmcz020,pmcz021,'',pmcz022, 
       '',pmcz024,pmcz025,pmcz026,pmcz027,pmcz028,'',pmcz030,'',pmcz031,pmcz032,pmcz040,'',pmcz041,'', 
       pmcz042,'',pmcz043,'',pmcz050,pmcz051,pmcz052,pmcz064,pmcz065,pmcz060,pmcz061  ,DENSE_RANK() OVER( ORDER BY pmcz_t.pmczsite, 
       pmcz_t.pmcz001,pmcz_t.pmcz002) AS RANK FROM pmcz_t",
 
 
                     "",
                     " WHERE pmczent= ? AND 1=1 AND ", ls_wc
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("pmcz_t"),
                     " ORDER BY pmcz_t.pmczsite,pmcz_t.pmcz001,pmcz_t.pmcz002"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   {<point name="b_fill.rank_sql_after"/>}
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql  #總筆數
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   {<point name="b_fill.rank_sql_after_count"/>}
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT '',pmcz023,pmczsite,'',pmcz062,'',pmcz001,pmcz002,pmcz003,pmcz004,'',pmcz005, 
       pmcz006,'',pmcz007,'',pmcz008,pmcz009,'',pmcz010,pmcz011,pmcz020,pmcz021,'',pmcz022,'',pmcz024, 
       pmcz025,pmcz026,pmcz027,pmcz028,'',pmcz030,'',pmcz031,pmcz032,pmcz040,'',pmcz041,'',pmcz042,'', 
       pmcz043,'',pmcz050,pmcz051,pmcz052,pmcz064,pmcz065,pmcz060,pmcz061",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   {<point name="b_fill.sql_after"/>}
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE ainq800_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR ainq800_pb
 
   OPEN b_fill_curs USING g_enterprise
 
   FOREACH b_fill_curs INTO g_pmcz_d[l_ac].sel,g_pmcz_d[l_ac].pmcz023,g_pmcz_d[l_ac].pmczsite,g_pmcz_d[l_ac].pmczsite_desc, 
       g_pmcz_d[l_ac].pmcz062,g_pmcz_d[l_ac].pmcz062_desc,g_pmcz_d[l_ac].pmcz001,g_pmcz_d[l_ac].pmcz002, 
       g_pmcz_d[l_ac].pmcz003,g_pmcz_d[l_ac].pmcz004,g_pmcz_d[l_ac].pmcz004_desc,g_pmcz_d[l_ac].pmcz005, 
       g_pmcz_d[l_ac].pmcz006,g_pmcz_d[l_ac].pmcz006_desc,g_pmcz_d[l_ac].pmcz007,g_pmcz_d[l_ac].pmcz007_desc, 
       g_pmcz_d[l_ac].pmcz008,g_pmcz_d[l_ac].pmcz009,g_pmcz_d[l_ac].pmcz009_desc,g_pmcz_d[l_ac].pmcz010, 
       g_pmcz_d[l_ac].pmcz011,g_pmcz_d[l_ac].pmcz020,g_pmcz_d[l_ac].pmcz021,g_pmcz_d[l_ac].pmcz021_desc, 
       g_pmcz_d[l_ac].pmcz022,g_pmcz_d[l_ac].pmcz022_desc,g_pmcz_d[l_ac].pmcz024,g_pmcz_d[l_ac].pmcz025, 
       g_pmcz_d[l_ac].pmcz026,g_pmcz_d[l_ac].pmcz027,g_pmcz_d[l_ac].pmcz028,g_pmcz_d[l_ac].pmcz028_desc, 
       g_pmcz_d[l_ac].pmcz030,g_pmcz_d[l_ac].pmcz030_desc,g_pmcz_d[l_ac].pmcz031,g_pmcz_d[l_ac].pmcz032, 
       g_pmcz_d[l_ac].pmcz040,g_pmcz_d[l_ac].pmcz040_desc,g_pmcz_d[l_ac].pmcz041,g_pmcz_d[l_ac].pmcz041_desc, 
       g_pmcz_d[l_ac].pmcz042,g_pmcz_d[l_ac].pmcz042_desc,g_pmcz_d[l_ac].pmcz043,g_pmcz_d[l_ac].pmcz043_desc, 
       g_pmcz_d[l_ac].pmcz050,g_pmcz_d[l_ac].pmcz051,g_pmcz_d[l_ac].pmcz052,g_pmcz_d[l_ac].pmcz064,g_pmcz_d[l_ac].pmcz065, 
       g_pmcz_d[l_ac].pmcz060,g_pmcz_d[l_ac].pmcz061
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      {<point name="b_fill.fill"/>}
      #end add-point
 
      CALL ainq800_detail_show("'1'")
 
      CALL ainq800_pmcz_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
 
   END FOREACH
 
 
 
 
 
   #應用 qs05 樣板自動產生(Version:4)
   #+ b_fill段其他table資料取得(包含sql組成及資料填充)
 
 
 
 
 
 
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   CALL g_pmcz_d.deleteElement(g_pmcz_d.getLength())
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   {<point name="b_fill.array_deleteElement" />}
   #end add-point
 
   LET g_error_show = 0
 
   LET g_detail_cnt = g_pmcz_d.getLength()
   LET l_ac = g_cnt
   LET g_cnt = 0
 
   #應用 qs06 樣板自動產生(Version:3)
   #+ b_fill段CURSOR釋放
   CLOSE b_fill_curs
   FREE ainq800_pb
 
 
 
 
 
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL ainq800_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL ainq800_detail_action_trans()
 
   LET l_ac = 1
   IF g_pmcz_d.getLength() > 0 THEN
      CALL ainq800_b_fill2()
   END IF
 
      CALL ainq800_filter_show('pmcz023','b_pmcz023')
   CALL ainq800_filter_show('pmczsite','b_pmczsite')
   CALL ainq800_filter_show('pmcz062','b_pmcz062')
   CALL ainq800_filter_show('pmcz001','b_pmcz001')
   CALL ainq800_filter_show('pmcz002','b_pmcz002')
   CALL ainq800_filter_show('pmcz003','b_pmcz003')
   CALL ainq800_filter_show('pmcz004','b_pmcz004')
   CALL ainq800_filter_show('pmcz005','b_pmcz005')
   CALL ainq800_filter_show('pmcz006','b_pmcz006')
   CALL ainq800_filter_show('pmcz007','b_pmcz007')
   CALL ainq800_filter_show('pmcz008','b_pmcz008')
   CALL ainq800_filter_show('pmcz009','b_pmcz009')
   CALL ainq800_filter_show('pmcz010','b_pmcz010')
   CALL ainq800_filter_show('pmcz011','b_pmcz011')
   CALL ainq800_filter_show('pmcz020','b_pmcz020')
   CALL ainq800_filter_show('pmcz021','b_pmcz021')
   CALL ainq800_filter_show('pmcz022','b_pmcz022')
   CALL ainq800_filter_show('pmcz024','b_pmcz024')
   CALL ainq800_filter_show('pmcz025','b_pmcz025')
   CALL ainq800_filter_show('pmcz026','b_pmcz026')
   CALL ainq800_filter_show('pmcz027','b_pmcz027')
   CALL ainq800_filter_show('pmcz028','b_pmcz028')
   CALL ainq800_filter_show('pmcz030','b_pmcz030')
   CALL ainq800_filter_show('pmcz031','b_pmcz031')
   CALL ainq800_filter_show('pmcz032','b_pmcz032')
   CALL ainq800_filter_show('pmcz040','b_pmcz040')
   CALL ainq800_filter_show('pmcz041','b_pmcz041')
   CALL ainq800_filter_show('pmcz042','b_pmcz042')
   CALL ainq800_filter_show('pmcz043','b_pmcz043')
   CALL ainq800_filter_show('pmcz050','b_pmcz050')
   CALL ainq800_filter_show('pmcz051','b_pmcz051')
   CALL ainq800_filter_show('pmcz052','b_pmcz052')
   CALL ainq800_filter_show('pmcz064','b_pmcz064')
   CALL ainq800_filter_show('pmcz065','b_pmcz065')
   CALL ainq800_filter_show('pmcz060','b_pmcz060')
   CALL ainq800_filter_show('pmcz061','b_pmcz061')
 
 
END FUNCTION

{</section>}

{<section id="ainq800.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION ainq800_b_fill2()
   #add-point:b_fill2段define-客製 name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="b_fill2.before_function"
   {<point name="b_fill2.before_function" />}
   #end add-point
 
   LET li_ac = l_ac
 
   #單身組成
   #應用 qs07 樣板自動產生(Version:7)
   #+ b_fill2段table資料取得(包含sql組成及資料填充)
 
   #add-point:陣列清空 name="b_fill2.array_clear"
   {<point name="b_fill2.array_clear" />}
   #end add-point
 
 
 
 
   #add-point:陣列長度調整 name="b_fill2.array_deleteElement"
   {<point name="b_fill2.array_deleteElement" />}
   #end add-point
 
 
   DISPLAY li_ac TO FORMONLY.cnt
   LET g_detail_idx2 = 1
   DISPLAY g_detail_idx2 TO FORMONLY.idx
 
 
 
 
 
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
 
   LET l_ac = li_ac
 
END FUNCTION

{</section>}

{<section id="ainq800.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION ainq800_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
 
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference name="detail_show.body.reference"
      {<point name="detail_show.body.reference"/>}
      #end add-point
   END IF
 
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION

{</section>}

{<section id="ainq800.filter" >}
#應用 qs13 樣板自動產生(Version:8)
#+ filter段相關程式段
#+ filter過濾功能
PRIVATE FUNCTION ainq800_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter.before_function"
   {<point name="filter.before_function" />}
   #end add-point
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)
 
   
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   #應用 qs08 樣板自動產生(Version:5)
   #+ filter段DIALOG段的組成
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON pmcz023,pmczsite,pmcz062,pmcz001,pmcz002,pmcz003,pmcz004,pmcz005,pmcz006, 
          pmcz007,pmcz008,pmcz009,pmcz010,pmcz011,pmcz020,pmcz021,pmcz022,pmcz024,pmcz025,pmcz026,pmcz027, 
          pmcz028,pmcz030,pmcz031,pmcz032,pmcz040,pmcz041,pmcz042,pmcz043,pmcz050,pmcz051,pmcz052,pmcz064, 
          pmcz065,pmcz060,pmcz061
                          FROM s_detail1[1].b_pmcz023,s_detail1[1].b_pmczsite,s_detail1[1].b_pmcz062, 
                              s_detail1[1].b_pmcz001,s_detail1[1].b_pmcz002,s_detail1[1].b_pmcz003,s_detail1[1].b_pmcz004, 
                              s_detail1[1].b_pmcz005,s_detail1[1].b_pmcz006,s_detail1[1].b_pmcz007,s_detail1[1].b_pmcz008, 
                              s_detail1[1].b_pmcz009,s_detail1[1].b_pmcz010,s_detail1[1].b_pmcz011,s_detail1[1].b_pmcz020, 
                              s_detail1[1].b_pmcz021,s_detail1[1].b_pmcz022,s_detail1[1].b_pmcz024,s_detail1[1].b_pmcz025, 
                              s_detail1[1].b_pmcz026,s_detail1[1].b_pmcz027,s_detail1[1].b_pmcz028,s_detail1[1].b_pmcz030, 
                              s_detail1[1].b_pmcz031,s_detail1[1].b_pmcz032,s_detail1[1].b_pmcz040,s_detail1[1].b_pmcz041, 
                              s_detail1[1].b_pmcz042,s_detail1[1].b_pmcz043,s_detail1[1].b_pmcz050,s_detail1[1].b_pmcz051, 
                              s_detail1[1].b_pmcz052,s_detail1[1].b_pmcz064,s_detail1[1].b_pmcz065,s_detail1[1].b_pmcz060, 
                              s_detail1[1].b_pmcz061
 
         BEFORE CONSTRUCT
                     DISPLAY ainq800_filter_parser('pmcz023') TO s_detail1[1].b_pmcz023
            DISPLAY ainq800_filter_parser('pmczsite') TO s_detail1[1].b_pmczsite
            DISPLAY ainq800_filter_parser('pmcz062') TO s_detail1[1].b_pmcz062
            DISPLAY ainq800_filter_parser('pmcz001') TO s_detail1[1].b_pmcz001
            DISPLAY ainq800_filter_parser('pmcz002') TO s_detail1[1].b_pmcz002
            DISPLAY ainq800_filter_parser('pmcz003') TO s_detail1[1].b_pmcz003
            DISPLAY ainq800_filter_parser('pmcz004') TO s_detail1[1].b_pmcz004
            DISPLAY ainq800_filter_parser('pmcz005') TO s_detail1[1].b_pmcz005
            DISPLAY ainq800_filter_parser('pmcz006') TO s_detail1[1].b_pmcz006
            DISPLAY ainq800_filter_parser('pmcz007') TO s_detail1[1].b_pmcz007
            DISPLAY ainq800_filter_parser('pmcz008') TO s_detail1[1].b_pmcz008
            DISPLAY ainq800_filter_parser('pmcz009') TO s_detail1[1].b_pmcz009
            DISPLAY ainq800_filter_parser('pmcz010') TO s_detail1[1].b_pmcz010
            DISPLAY ainq800_filter_parser('pmcz011') TO s_detail1[1].b_pmcz011
            DISPLAY ainq800_filter_parser('pmcz020') TO s_detail1[1].b_pmcz020
            DISPLAY ainq800_filter_parser('pmcz021') TO s_detail1[1].b_pmcz021
            DISPLAY ainq800_filter_parser('pmcz022') TO s_detail1[1].b_pmcz022
            DISPLAY ainq800_filter_parser('pmcz024') TO s_detail1[1].b_pmcz024
            DISPLAY ainq800_filter_parser('pmcz025') TO s_detail1[1].b_pmcz025
            DISPLAY ainq800_filter_parser('pmcz026') TO s_detail1[1].b_pmcz026
            DISPLAY ainq800_filter_parser('pmcz027') TO s_detail1[1].b_pmcz027
            DISPLAY ainq800_filter_parser('pmcz028') TO s_detail1[1].b_pmcz028
            DISPLAY ainq800_filter_parser('pmcz030') TO s_detail1[1].b_pmcz030
            DISPLAY ainq800_filter_parser('pmcz031') TO s_detail1[1].b_pmcz031
            DISPLAY ainq800_filter_parser('pmcz032') TO s_detail1[1].b_pmcz032
            DISPLAY ainq800_filter_parser('pmcz040') TO s_detail1[1].b_pmcz040
            DISPLAY ainq800_filter_parser('pmcz041') TO s_detail1[1].b_pmcz041
            DISPLAY ainq800_filter_parser('pmcz042') TO s_detail1[1].b_pmcz042
            DISPLAY ainq800_filter_parser('pmcz043') TO s_detail1[1].b_pmcz043
            DISPLAY ainq800_filter_parser('pmcz050') TO s_detail1[1].b_pmcz050
            DISPLAY ainq800_filter_parser('pmcz051') TO s_detail1[1].b_pmcz051
            DISPLAY ainq800_filter_parser('pmcz052') TO s_detail1[1].b_pmcz052
            DISPLAY ainq800_filter_parser('pmcz064') TO s_detail1[1].b_pmcz064
            DISPLAY ainq800_filter_parser('pmcz065') TO s_detail1[1].b_pmcz065
            DISPLAY ainq800_filter_parser('pmcz060') TO s_detail1[1].b_pmcz060
            DISPLAY ainq800_filter_parser('pmcz061') TO s_detail1[1].b_pmcz061
 
 
         #單身公用欄位開窗相關處理
         
 
         #單身一般欄位開窗相關處理
                  #----<<sel>>----
         #----<<b_pmcz023>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz023
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz023
            #add-point:ON ACTION controlp INFIELD b_pmcz023 name="construct.c.filter.page1.b_pmcz023"
            {<point name="construct.c.filter.page1.b_pmcz023" />}
            #END add-point
 
 
         #----<<b_pmczsite>>----
         #Ctrlp:construct.c.filter.page1.b_pmczsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmczsite
            #add-point:ON ACTION controlp INFIELD b_pmczsite name="construct.c.filter.page1.b_pmczsite"
            {<point name="construct.c.filter.page1.b_pmczsite" />}
            #END add-point
 
 
         #----<<b_pmczsite_desc>>----
         #----<<b_pmcz062>>----
         #Ctrlp:construct.c.page1.b_pmcz062
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz062
            #add-point:ON ACTION controlp INFIELD b_pmcz062 name="construct.c.filter.page1.b_pmcz062"
            {<point name="construct.c.filter.page1.b_pmcz062" />}
            #END add-point
 
 
         #----<<pmcz062_desc>>----
         #----<<b_pmcz001>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz001
            #add-point:ON ACTION controlp INFIELD b_pmcz001 name="construct.c.filter.page1.b_pmcz001"
            {<point name="construct.c.filter.page1.b_pmcz001" />}
            #END add-point
 
 
         #----<<b_pmcz002>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz002
            #add-point:ON ACTION controlp INFIELD b_pmcz002 name="construct.c.filter.page1.b_pmcz002"
            {<point name="construct.c.filter.page1.b_pmcz002" />}
            #END add-point
 
 
         #----<<b_pmcz003>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz003
            #add-point:ON ACTION controlp INFIELD b_pmcz003 name="construct.c.filter.page1.b_pmcz003"
            {<point name="construct.c.filter.page1.b_pmcz003" />}
            #END add-point
 
 
         #----<<b_pmcz004>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz004
            #add-point:ON ACTION controlp INFIELD b_pmcz004 name="construct.c.filter.page1.b_pmcz004"
            {<point name="construct.c.filter.page1.b_pmcz004" />}
            #END add-point
 
 
         #----<<b_pmcz004_desc>>----
         #----<<b_pmcz005>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz005
            #add-point:ON ACTION controlp INFIELD b_pmcz005 name="construct.c.filter.page1.b_pmcz005"
            {<point name="construct.c.filter.page1.b_pmcz005" />}
            #END add-point
 
 
         #----<<b_pmcz006>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz006
            #add-point:ON ACTION controlp INFIELD b_pmcz006 name="construct.c.filter.page1.b_pmcz006"
            {<point name="construct.c.filter.page1.b_pmcz006" />}
            #END add-point
 
 
         #----<<b_pmcz006_desc>>----
         #----<<b_pmcz007>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz007
            #add-point:ON ACTION controlp INFIELD b_pmcz007 name="construct.c.filter.page1.b_pmcz007"
            {<point name="construct.c.filter.page1.b_pmcz007" />}
            #END add-point
 
 
         #----<<b_pmcz007_desc>>----
         #----<<b_pmcz008>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz008
            #add-point:ON ACTION controlp INFIELD b_pmcz008 name="construct.c.filter.page1.b_pmcz008"
            {<point name="construct.c.filter.page1.b_pmcz008" />}
            #END add-point
 
 
         #----<<b_pmcz009>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz009
            #add-point:ON ACTION controlp INFIELD b_pmcz009 name="construct.c.filter.page1.b_pmcz009"
            {<point name="construct.c.filter.page1.b_pmcz009" />}
            #END add-point
 
 
         #----<<b_pmcz009_desc>>----
         #----<<b_pmcz010>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz010
            #add-point:ON ACTION controlp INFIELD b_pmcz010 name="construct.c.filter.page1.b_pmcz010"
            {<point name="construct.c.filter.page1.b_pmcz010" />}
            #END add-point
 
 
         #----<<b_pmcz011>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz011
            #add-point:ON ACTION controlp INFIELD b_pmcz011 name="construct.c.filter.page1.b_pmcz011"
            {<point name="construct.c.filter.page1.b_pmcz011" />}
            #END add-point
 
 
         #----<<b_pmcz020>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz020
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz020
            #add-point:ON ACTION controlp INFIELD b_pmcz020 name="construct.c.filter.page1.b_pmcz020"
            {<point name="construct.c.filter.page1.b_pmcz020" />}
            #END add-point
 
 
         #----<<b_pmcz021>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz021
            #add-point:ON ACTION controlp INFIELD b_pmcz021 name="construct.c.filter.page1.b_pmcz021"
            {<point name="construct.c.filter.page1.b_pmcz021" />}
            #END add-point
 
 
         #----<<b_pmcz021_desc>>----
         #----<<b_pmcz022>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz022
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz022
            #add-point:ON ACTION controlp INFIELD b_pmcz022 name="construct.c.filter.page1.b_pmcz022"
            {<point name="construct.c.filter.page1.b_pmcz022" />}
            #END add-point
 
 
         #----<<b_pmcz022_desc>>----
         #----<<b_pmcz024>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz024
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz024
            #add-point:ON ACTION controlp INFIELD b_pmcz024 name="construct.c.filter.page1.b_pmcz024"
            {<point name="construct.c.filter.page1.b_pmcz024" />}
            #END add-point
 
 
         #----<<b_pmcz025>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz025
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz025
            #add-point:ON ACTION controlp INFIELD b_pmcz025 name="construct.c.filter.page1.b_pmcz025"
            {<point name="construct.c.filter.page1.b_pmcz025" />}
            #END add-point
 
 
         #----<<b_pmcz026>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz026
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz026
            #add-point:ON ACTION controlp INFIELD b_pmcz026 name="construct.c.filter.page1.b_pmcz026"
            {<point name="construct.c.filter.page1.b_pmcz026" />}
            #END add-point
 
 
         #----<<b_pmcz027>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz027
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz027
            #add-point:ON ACTION controlp INFIELD b_pmcz027 name="construct.c.filter.page1.b_pmcz027"
            {<point name="construct.c.filter.page1.b_pmcz027" />}
            #END add-point
 
 
         #----<<b_pmcz028>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz028
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz028
            #add-point:ON ACTION controlp INFIELD b_pmcz028 name="construct.c.filter.page1.b_pmcz028"
            {<point name="construct.c.filter.page1.b_pmcz028" />}
            #END add-point
 
 
         #----<<b_pmcz028_desc>>----
         #----<<b_pmcz030>>----
         #Ctrlp:construct.c.page1.b_pmcz030
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz030
            #add-point:ON ACTION controlp INFIELD b_pmcz030 name="construct.c.filter.page1.b_pmcz030"
            {<point name="construct.c.filter.page1.b_pmcz030" />}
            #END add-point
 
 
         #----<<b_pmcz030_desc>>----
         #----<<b_pmcz031>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz031
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz031
            #add-point:ON ACTION controlp INFIELD b_pmcz031 name="construct.c.filter.page1.b_pmcz031"
            {<point name="construct.c.filter.page1.b_pmcz031" />}
            #END add-point
 
 
         #----<<b_pmcz032>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz032
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz032
            #add-point:ON ACTION controlp INFIELD b_pmcz032 name="construct.c.filter.page1.b_pmcz032"
            {<point name="construct.c.filter.page1.b_pmcz032" />}
            #END add-point
 
 
         #----<<b_pmcz040>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz040
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz040
            #add-point:ON ACTION controlp INFIELD b_pmcz040 name="construct.c.filter.page1.b_pmcz040"
            {<point name="construct.c.filter.page1.b_pmcz040" />}
            #END add-point
 
 
         #----<<b_pmcz040_desc>>----
         #----<<b_pmcz041>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz041
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz041
            #add-point:ON ACTION controlp INFIELD b_pmcz041 name="construct.c.filter.page1.b_pmcz041"
            {<point name="construct.c.filter.page1.b_pmcz041" />}
            #END add-point
 
 
         #----<<b_pmcz041_desc>>----
         #----<<b_pmcz042>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz042
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz042
            #add-point:ON ACTION controlp INFIELD b_pmcz042 name="construct.c.filter.page1.b_pmcz042"
            {<point name="construct.c.filter.page1.b_pmcz042" />}
            #END add-point
 
 
         #----<<b_pmcz042_desc>>----
         #----<<b_pmcz043>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz043
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz043
            #add-point:ON ACTION controlp INFIELD b_pmcz043 name="construct.c.filter.page1.b_pmcz043"
            {<point name="construct.c.filter.page1.b_pmcz043" />}
            #END add-point
 
 
         #----<<b_pmcz043_desc>>----
         #----<<b_pmcz050>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz050
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz050
            #add-point:ON ACTION controlp INFIELD b_pmcz050 name="construct.c.filter.page1.b_pmcz050"
            {<point name="construct.c.filter.page1.b_pmcz050" />}
            #END add-point
 
 
         #----<<b_pmcz051>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz051
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz051
            #add-point:ON ACTION controlp INFIELD b_pmcz051 name="construct.c.filter.page1.b_pmcz051"
            {<point name="construct.c.filter.page1.b_pmcz051" />}
            #END add-point
 
 
         #----<<b_pmcz052>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz052
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz052
            #add-point:ON ACTION controlp INFIELD b_pmcz052 name="construct.c.filter.page1.b_pmcz052"
            {<point name="construct.c.filter.page1.b_pmcz052" />}
            #END add-point
 
 
         #----<<b_pmcz064>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz064
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz064
            #add-point:ON ACTION controlp INFIELD b_pmcz064 name="construct.c.filter.page1.b_pmcz064"
            {<point name="construct.c.filter.page1.b_pmcz064" />}
            #END add-point
 
 
         #----<<b_pmcz065>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz065
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz065
            #add-point:ON ACTION controlp INFIELD b_pmcz065 name="construct.c.filter.page1.b_pmcz065"
            {<point name="construct.c.filter.page1.b_pmcz065" />}
            #END add-point
 
 
         #----<<b_pmcz060>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz060
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz060
            #add-point:ON ACTION controlp INFIELD b_pmcz060 name="construct.c.filter.page1.b_pmcz060"
            {<point name="construct.c.filter.page1.b_pmcz060" />}
            #END add-point
 
 
         #----<<b_pmcz061>>----
         #Ctrlp:construct.c.filter.page1.b_pmcz061
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_pmcz061
            #add-point:ON ACTION controlp INFIELD b_pmcz061 name="construct.c.filter.page1.b_pmcz061"
            {<point name="construct.c.filter.page1.b_pmcz061" />}
            #END add-point
 
 
 
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
 
   END DIALOG
 
 
 
 
 
   
 
   #add-point:離開DIALOG後相關處理 name="filter.after_dialog"
   {<point name="filter.after_dialog" />}
   #end add-point
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
 
      CALL ainq800_filter_show('pmcz023','b_pmcz023')
   CALL ainq800_filter_show('pmczsite','b_pmczsite')
   CALL ainq800_filter_show('pmcz062','b_pmcz062')
   CALL ainq800_filter_show('pmcz001','b_pmcz001')
   CALL ainq800_filter_show('pmcz002','b_pmcz002')
   CALL ainq800_filter_show('pmcz003','b_pmcz003')
   CALL ainq800_filter_show('pmcz004','b_pmcz004')
   CALL ainq800_filter_show('pmcz005','b_pmcz005')
   CALL ainq800_filter_show('pmcz006','b_pmcz006')
   CALL ainq800_filter_show('pmcz007','b_pmcz007')
   CALL ainq800_filter_show('pmcz008','b_pmcz008')
   CALL ainq800_filter_show('pmcz009','b_pmcz009')
   CALL ainq800_filter_show('pmcz010','b_pmcz010')
   CALL ainq800_filter_show('pmcz011','b_pmcz011')
   CALL ainq800_filter_show('pmcz020','b_pmcz020')
   CALL ainq800_filter_show('pmcz021','b_pmcz021')
   CALL ainq800_filter_show('pmcz022','b_pmcz022')
   CALL ainq800_filter_show('pmcz024','b_pmcz024')
   CALL ainq800_filter_show('pmcz025','b_pmcz025')
   CALL ainq800_filter_show('pmcz026','b_pmcz026')
   CALL ainq800_filter_show('pmcz027','b_pmcz027')
   CALL ainq800_filter_show('pmcz028','b_pmcz028')
   CALL ainq800_filter_show('pmcz030','b_pmcz030')
   CALL ainq800_filter_show('pmcz031','b_pmcz031')
   CALL ainq800_filter_show('pmcz032','b_pmcz032')
   CALL ainq800_filter_show('pmcz040','b_pmcz040')
   CALL ainq800_filter_show('pmcz041','b_pmcz041')
   CALL ainq800_filter_show('pmcz042','b_pmcz042')
   CALL ainq800_filter_show('pmcz043','b_pmcz043')
   CALL ainq800_filter_show('pmcz050','b_pmcz050')
   CALL ainq800_filter_show('pmcz051','b_pmcz051')
   CALL ainq800_filter_show('pmcz052','b_pmcz052')
   CALL ainq800_filter_show('pmcz064','b_pmcz064')
   CALL ainq800_filter_show('pmcz065','b_pmcz065')
   CALL ainq800_filter_show('pmcz060','b_pmcz060')
   CALL ainq800_filter_show('pmcz061','b_pmcz061')
 
 
   CALL ainq800_b_fill()
 
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", FALSE)
 
END FUNCTION

{</section>}

{<section id="ainq800.filter_parser" >}
#應用 qs14 樣板自動產生(Version:6)
#+ filter pasara段
#+ filter欄位解析
PRIVATE FUNCTION ainq800_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   {<point name="filter_parser.before_function" />}
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 

{</section>}

{<section id="ainq800.filter_show" >}
#應用 qs15 樣板自動產生(Version:6)
#+ filter標題欄位顯示搜尋條件
PRIVATE FUNCTION ainq800_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   {<point name="filter_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   {<point name="filter_show.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   {<point name="filter_show.before_function" />}
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LET ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = ainq800_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 

{</section>}

{<section id="ainq800.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION ainq800_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   {<point name="detail_action_trans.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   {<point name="detail_action_trans.define"/>}
   #end add-point
 
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   {<point name="detail_action_trans.before_function" />}
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION

{</section>}

{<section id="ainq800.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION ainq800_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="detail_index_setting.define_customerization"
   {<point name="detail_index_setting.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   {<point name="detail_index_setting.define"/>}
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   {<point name="detail_index_setting.before_function" />}
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_pmcz_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_pmcz_d.getLength() AND g_pmcz_d.getLength() > 0
            LET g_detail_idx = g_pmcz_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_pmcz_d.getLength() THEN
               LET g_detail_idx = g_pmcz_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION

{</section>}

{<section id="ainq800.mask_functions" >}
 &include "erp/ain/ainq800_mask.4gl"

{</section>}

{<section id="ainq800.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

