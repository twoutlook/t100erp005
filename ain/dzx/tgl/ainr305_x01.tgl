#該程式未解開Section, 採用最新樣板產出!
{<section id="ainr305_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:6(2016-03-30 12:05:06), PR版次:
#+ Customerized Version.: SD版次:(), PR版次:
#+ Build......: 000076
#+ Filename...: ainr305_x01
#+ Description: ...
#+ Creator....: 05423(2014-11-28 14:03:45)
#+ Modifier...: 05423 -SD/PR-

{</section>}

{<section id="ainr305_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:8)
#add-point:填寫註解說明 name="global.memo"
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明 name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       wc1 STRING,                  #l_where1 
       wc2 STRING,                  #l_where2 
       wc3 STRING,                  #l_where3 
       wc4 STRING,                  #l_where4 
       stus STRING,                  #l_stus 
       pr STRING                   #l_pr
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>}
#end add-point

{</section>}

{<section id="ainr305_x01.main" readonly="Y" >}
PUBLIC FUNCTION ainr305_x01(p_arg1,p_arg2,p_arg3,p_arg4,p_arg5,p_arg6,p_arg7)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.wc1  l_where1 
DEFINE  p_arg3 STRING                  #tm.wc2  l_where2 
DEFINE  p_arg4 STRING                  #tm.wc3  l_where3 
DEFINE  p_arg5 STRING                  #tm.wc4  l_where4 
DEFINE  p_arg6 STRING                  #tm.stus  l_stus 
DEFINE  p_arg7 STRING                  #tm.pr  l_pr
#add-point:init段define(客製用) name="component.define_customerization"
{<point name="component.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.wc1 = p_arg2
   LET tm.wc2 = p_arg3
   LET tm.wc3 = p_arg4
   LET tm.wc4 = p_arg5
   LET tm.stus = p_arg6
   LET tm.pr = p_arg7
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "ainr305_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL ainr305_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL ainr305_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL ainr305_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL ainr305_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL ainr305_x01_rep_data()
 
END FUNCTION

{</section>}

{<section id="ainr305_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION ainr305_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "inba004.inba_t.inba004,l_inba004_desc.type_t.chr30,l_type.type_t.chr30,inba007.inba_t.inba007,l_inba007_desc.type_t.chr30,inbadocdt.inba_t.inbadocdt,inba002.inba_t.inba002,inbadocno.inba_t.inbadocno,inbastus.inba_t.inbastus,l_inbastus_desc.type_t.chr30,inbbseq.inbb_t.inbbseq,inbb001.inbb_t.inbb001,imaal_t_imaal003.imaal_t.imaal003,imaal_t_imaal004.imaal_t.imaal004,inbb010.inbb_t.inbb010,inbb011.inbb_t.inbb011,inbb014.inbb_t.inbb014,inbc_t_inbc005.inbc_t.inbc005,l_inbc005_desc.type_t.chr30,inbc_t_inbc006.inbc_t.inbc006,l_inbc006_desc.type_t.chr30,inbc_t_inbc007.inbc_t.inbc007,inbb012.inbb_t.inbb012,inbb015.inbb_t.inbb015,l_keys.type_t.chr200,l_flag.type_t.chr10,inba003.inba_t.inba003,inba005.inba_t.inba005,inba006.inba_t.inba006,inba008.inba_t.inba008,inbb016.inbb_t.inbb016,inbb017.inbb_t.inbb017,inbb018.inbb_t.inbb018,inbb019.inbb_t.inbb019,inbb020.inbb_t.inbb020,inbc_t_inbc001.inbc_t.inbc001,inbc_t_inbc002.inbc_t.inbc002,inbc_t_inbc003.inbc_t.inbc003,inbc_t_inbc004.inbc_t.inbc004,inbc_t_inbc009.inbc_t.inbc009,inbc_t_inbc010.inbc_t.inbc010,inbc_t_inbc011.inbc_t.inbc011,inbc_t_inbc015.inbc_t.inbc015,inbc_t_inbc016.inbc_t.inbc016,inbc_t_inbc017.inbc_t.inbc017,inbc_t_inbc018.inbc_t.inbc018,inbc_t_inbc019.inbc_t.inbc019,inbc_t_inbc020.inbc_t.inbc020,inbc_t_inbc021.inbc_t.inbc021,inbc_t_inbc022.inbc_t.inbc022,inbc_t_inbc023.inbc_t.inbc023,inbc_t_inbcseq.inbc_t.inbcseq,inbc_t_inbcseq1.inbc_t.inbcseq1,l_inbadocno_desc.type_t.chr50,l_inba003_desc.type_t.chr50,l_inba005_desc.type_t.chr50,l_inbb016_desc.type_t.chr100,l_inbc004_desc.type_t.chr50,l_inbc020_desc.type_t.chr100,l_inbc021_desc.type_t.chr100,l_inbc002_desc.type_t.chr100,l_inbc022_desc.type_t.chr100,l_inbc023_desc.type_t.chr100,l_imaa127_desc.type_t.chr80,l_inbadocnodesc.type_t.chr100,l_inbastusdesc.type_t.chr50,l_inba003desc.type_t.chr100,l_inba004desc.type_t.chr100,l_inba005desc.type_t.chr100,l_inba007desc.type_t.chr30,l_inbb016desc.type_t.chr80,l_inbc004desc.type_t.chr100,l_inbc020desc.type_t.chr80,l_inbc002desc.type_t.chr80,l_inbc005desc.type_t.chr80,l_inbc006desc.type_t.chr80,l_inbc021desc.type_t.chr80,l_inbc022desc.type_t.chr80,l_inbc023desc.type_t.chr80,l_imaa127desc.type_t.chr80" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION

{</section>}

{<section id="ainr305_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION ainr305_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"
{<point name="ins_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION

{</section>}

{<section id="ainr305_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION ainr305_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"
{<point name="sel_prep.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT inba004,NULL,NULL,inba007,NULL,inbadocdt,inba002,inbadocno,inbastus,NULL, 
       inbbseq,inbb001,imaal_t.imaal003,imaal_t.imaal004,inbb010,inbb011,inbb014,inbc_t.inbc005,NULL, 
       inbc_t.inbc006,NULL,inbc_t.inbc007,inbb012,inbb015,NULL,NULL,inba003,inba005,inba006,inba008, 
       inbb016,inbb017,inbb018,inbb019,inbb020,inbc_t.inbc001,inbc_t.inbc002,inbc_t.inbc003,inbc_t.inbc004, 
       inbc_t.inbc009,inbc_t.inbc010,inbc_t.inbc011,inbc_t.inbc015,inbc_t.inbc016,inbc_t.inbc017,inbc_t.inbc018, 
       inbc_t.inbc019,inbc_t.inbc020,inbc_t.inbc021,inbc_t.inbc022,inbc_t.inbc023,inbc_t.inbcseq,inbc_t.inbcseq1, 
       NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, 
       NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM inba_t,inbb_t,inbc_t,imaal_t"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("inba_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE ainr305_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE ainr305_x01_curs CURSOR FOR ainr305_x01_prepare
 
END FUNCTION

{</section>}

{<section id="ainr305_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION ainr305_x01_ins_data()
DEFINE sr RECORD 
   inba004 LIKE inba_t.inba004, 
   l_inba004_desc LIKE type_t.chr30, 
   l_type LIKE type_t.chr30, 
   inba007 LIKE inba_t.inba007, 
   l_inba007_desc LIKE type_t.chr30, 
   inbadocdt LIKE inba_t.inbadocdt, 
   inba002 LIKE inba_t.inba002, 
   inbadocno LIKE inba_t.inbadocno, 
   inbastus LIKE inba_t.inbastus, 
   l_inbastus_desc LIKE type_t.chr30, 
   inbbseq LIKE inbb_t.inbbseq, 
   inbb001 LIKE inbb_t.inbb001, 
   imaal_t_imaal003 LIKE imaal_t.imaal003, 
   imaal_t_imaal004 LIKE imaal_t.imaal004, 
   inbb010 LIKE inbb_t.inbb010, 
   inbb011 LIKE inbb_t.inbb011, 
   inbb014 LIKE inbb_t.inbb014, 
   inbc_t_inbc005 LIKE inbc_t.inbc005, 
   l_inbc005_desc LIKE type_t.chr30, 
   inbc_t_inbc006 LIKE inbc_t.inbc006, 
   l_inbc006_desc LIKE type_t.chr30, 
   inbc_t_inbc007 LIKE inbc_t.inbc007, 
   inbb012 LIKE inbb_t.inbb012, 
   inbb015 LIKE inbb_t.inbb015, 
   l_keys LIKE type_t.chr200, 
   l_flag LIKE type_t.chr10, 
   inba003 LIKE inba_t.inba003, 
   inba005 LIKE inba_t.inba005, 
   inba006 LIKE inba_t.inba006, 
   inba008 LIKE inba_t.inba008, 
   inbb016 LIKE inbb_t.inbb016, 
   inbb017 LIKE inbb_t.inbb017, 
   inbb018 LIKE inbb_t.inbb018, 
   inbb019 LIKE inbb_t.inbb019, 
   inbb020 LIKE inbb_t.inbb020, 
   inbc_t_inbc001 LIKE inbc_t.inbc001, 
   inbc_t_inbc002 LIKE inbc_t.inbc002, 
   inbc_t_inbc003 LIKE inbc_t.inbc003, 
   inbc_t_inbc004 LIKE inbc_t.inbc004, 
   inbc_t_inbc009 LIKE inbc_t.inbc009, 
   inbc_t_inbc010 LIKE inbc_t.inbc010, 
   inbc_t_inbc011 LIKE inbc_t.inbc011, 
   inbc_t_inbc015 LIKE inbc_t.inbc015, 
   inbc_t_inbc016 LIKE inbc_t.inbc016, 
   inbc_t_inbc017 LIKE inbc_t.inbc017, 
   inbc_t_inbc018 LIKE inbc_t.inbc018, 
   inbc_t_inbc019 LIKE inbc_t.inbc019, 
   inbc_t_inbc020 LIKE inbc_t.inbc020, 
   inbc_t_inbc021 LIKE inbc_t.inbc021, 
   inbc_t_inbc022 LIKE inbc_t.inbc022, 
   inbc_t_inbc023 LIKE inbc_t.inbc023, 
   inbc_t_inbcseq LIKE inbc_t.inbcseq, 
   inbc_t_inbcseq1 LIKE inbc_t.inbcseq1, 
   l_inbadocno_desc LIKE type_t.chr50, 
   l_inba003_desc LIKE type_t.chr50, 
   l_inba005_desc LIKE type_t.chr50, 
   l_inbb016_desc LIKE type_t.chr100, 
   l_inbc004_desc LIKE type_t.chr50, 
   l_inbc020_desc LIKE type_t.chr100, 
   l_inbc021_desc LIKE type_t.chr100, 
   l_inbc002_desc LIKE type_t.chr100, 
   l_inbc022_desc LIKE type_t.chr100, 
   l_inbc023_desc LIKE type_t.chr100, 
   l_imaa127_desc LIKE type_t.chr80, 
   l_inbadocnodesc LIKE type_t.chr100, 
   l_inbastusdesc LIKE type_t.chr50, 
   l_inba003desc LIKE type_t.chr100, 
   l_inba004desc LIKE type_t.chr100, 
   l_inba005desc LIKE type_t.chr100, 
   l_inba007desc LIKE type_t.chr30, 
   l_inbb016desc LIKE type_t.chr80, 
   l_inbc004desc LIKE type_t.chr100, 
   l_inbc020desc LIKE type_t.chr80, 
   l_inbc002desc LIKE type_t.chr80, 
   l_inbc005desc LIKE type_t.chr80, 
   l_inbc006desc LIKE type_t.chr80, 
   l_inbc021desc LIKE type_t.chr80, 
   l_inbc022desc LIKE type_t.chr80, 
   l_inbc023desc LIKE type_t.chr80, 
   l_imaa127desc LIKE type_t.chr80
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"
{<point name="ins_data.define_customerization" edit="c" mark="Y"/>}
#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH ainr305_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.inba004,sr.l_inba004_desc,sr.l_type,sr.inba007,sr.l_inba007_desc,sr.inbadocdt,sr.inba002,sr.inbadocno,sr.inbastus,sr.l_inbastus_desc,sr.inbbseq,sr.inbb001,sr.imaal_t_imaal003,sr.imaal_t_imaal004,sr.inbb010,sr.inbb011,sr.inbb014,sr.inbc_t_inbc005,sr.l_inbc005_desc,sr.inbc_t_inbc006,sr.l_inbc006_desc,sr.inbc_t_inbc007,sr.inbb012,sr.inbb015,sr.l_keys,sr.l_flag,sr.inba003,sr.inba005,sr.inba006,sr.inba008,sr.inbb016,sr.inbb017,sr.inbb018,sr.inbb019,sr.inbb020,sr.inbc_t_inbc001,sr.inbc_t_inbc002,sr.inbc_t_inbc003,sr.inbc_t_inbc004,sr.inbc_t_inbc009,sr.inbc_t_inbc010,sr.inbc_t_inbc011,sr.inbc_t_inbc015,sr.inbc_t_inbc016,sr.inbc_t_inbc017,sr.inbc_t_inbc018,sr.inbc_t_inbc019,sr.inbc_t_inbc020,sr.inbc_t_inbc021,sr.inbc_t_inbc022,sr.inbc_t_inbc023,sr.inbc_t_inbcseq,sr.inbc_t_inbcseq1,sr.l_inbadocno_desc,sr.l_inba003_desc,sr.l_inba005_desc,sr.l_inbb016_desc,sr.l_inbc004_desc,sr.l_inbc020_desc,sr.l_inbc021_desc,sr.l_inbc002_desc,sr.l_inbc022_desc,sr.l_inbc023_desc,sr.l_imaa127_desc,sr.l_inbadocnodesc,sr.l_inbastusdesc,sr.l_inba003desc,sr.l_inba004desc,sr.l_inba005desc,sr.l_inba007desc,sr.l_inbb016desc,sr.l_inbc004desc,sr.l_inbc020desc,sr.l_inbc002desc,sr.l_inbc005desc,sr.l_inbc006desc,sr.l_inbc021desc,sr.l_inbc022desc,sr.l_inbc023desc,sr.l_imaa127desc
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "ainr305_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION

{</section>}

{<section id="ainr305_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION ainr305_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"
{<point name="rep_data.define_customerization" edit="c" mark="Y"/>}
#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION

{</section>}

{<section id="ainr305_x01.other_function" readonly="Y" >}
{<point name="other.function"/>}

{</section>}

