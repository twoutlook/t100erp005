<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="awsi012" std_prog="awsi012" erpver="1.0" module="AWS" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="input.a.wsab001" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_wsab_m.wsab001) AND NOT cl_null(g_wsab_m.wsab002) AND NOT cl_null(g_wsab_m.wsab003) AND NOT cl_null(g_wsab_m.wsab004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_wsab_m.wsab001 != g_wsab001_t  OR g_wsab_m.wsab002 != g_wsab002_t  OR g_wsab_m.wsab003 != g_wsab003_t  OR g_wsab_m.wsab004 != g_wsab004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM wsab_t WHERE "||"wsabent = '" ||g_enterprise|| "' AND "||"wsab001 = '"||g_wsab_m.wsab001 ||"' AND "|| "wsab002 = '"||g_wsab_m.wsab002 ||"' AND "|| "wsab003 = '"||g_wsab_m.wsab003 ||"' AND "|| "wsab004 = '"||g_wsab_m.wsab004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_wsab_m.wsab001
            CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001='24' AND gzcbl002=? AND gzcbl003='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_wsab_m.wsab001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_wsab_m.wsab001_desc
]]>
  </point>
  <point name="input.a.wsab002" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_wsab_m.wsab001) AND NOT cl_null(g_wsab_m.wsab002) AND NOT cl_null(g_wsab_m.wsab003) AND NOT cl_null(g_wsab_m.wsab004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_wsab_m.wsab001 != g_wsab001_t  OR g_wsab_m.wsab002 != g_wsab002_t  OR g_wsab_m.wsab003 != g_wsab003_t  OR g_wsab_m.wsab004 != g_wsab004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM wsab_t WHERE "||"wsabent = '" ||g_enterprise|| "' AND "||"wsab001 = '"||g_wsab_m.wsab001 ||"' AND "|| "wsab002 = '"||g_wsab_m.wsab002 ||"' AND "|| "wsab003 = '"||g_wsab_m.wsab003 ||"' AND "|| "wsab004 = '"||g_wsab_m.wsab004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.wsab003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_wsab_m.wsab001) AND NOT cl_null(g_wsab_m.wsab002) AND NOT cl_null(g_wsab_m.wsab003) AND NOT cl_null(g_wsab_m.wsab004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_wsab_m.wsab001 != g_wsab001_t  OR g_wsab_m.wsab002 != g_wsab002_t  OR g_wsab_m.wsab003 != g_wsab003_t  OR g_wsab_m.wsab004 != g_wsab004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM wsab_t WHERE "||"wsabent = '" ||g_enterprise|| "' AND "||"wsab001 = '"||g_wsab_m.wsab001 ||"' AND "|| "wsab002 = '"||g_wsab_m.wsab002 ||"' AND "|| "wsab003 = '"||g_wsab_m.wsab003 ||"' AND "|| "wsab004 = '"||g_wsab_m.wsab004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_wsab_m.wsab002
            LET g_ref_fields[2] = g_wsab_m.wsab003
            CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_wsab_m.wsab003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_wsab_m.wsab003_desc
]]>
  </point>
  <point name="input.a.wsab004" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_wsab_m.wsab001) AND NOT cl_null(g_wsab_m.wsab002) AND NOT cl_null(g_wsab_m.wsab003) AND NOT cl_null(g_wsab_m.wsab004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_wsab_m.wsab001 != g_wsab001_t  OR g_wsab_m.wsab002 != g_wsab002_t  OR g_wsab_m.wsab003 != g_wsab003_t  OR g_wsab_m.wsab004 != g_wsab004_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM wsab_t WHERE "||"wsabent = '" ||g_enterprise|| "' AND "||"wsab001 = '"||g_wsab_m.wsab001 ||"' AND "|| "wsab002 = '"||g_wsab_m.wsab002 ||"' AND "|| "wsab003 = '"||g_wsab_m.wsab003 ||"' AND "|| "wsab004 = '"||g_wsab_m.wsab004 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_wsab_m.wsab004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_wsab_m.wsab004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_wsab_m.wsab004_desc
]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_wsab_m.wsab001
            CALL ap_ref_array2(g_ref_fields,"SELECT gzcbl004 FROM gzcbl_t WHERE gzcbl001='24' AND gzcbl002=? AND gzcbl003='"||g_lang||"'","") RETURNING g_rtn_fields
            LET g_wsab_m.wsab001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_wsab_m.wsab001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_wsab_m.wsab002
            LET g_ref_fields[2] = g_wsab_m.wsab003
            CALL ap_ref_array2(g_ref_fields,"SELECT oobal004 FROM oobal_t WHERE oobalent='"||g_enterprise||"' AND oobal001=? AND oobal002=? AND oobal003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_wsab_m.wsab003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_wsab_m.wsab003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_wsab_m.wsab004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_wsab_m.wsab004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_wsab_m.wsab004_desc
]]>
  </point>
  <section id="awsi012.browser_fill" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a30產生
#+ 瀏覽頁簽資料填充(六階樹狀)
PRIVATE FUNCTION awsi012_browser_fill(ps_wc,ps_page_action) 
   DEFINE ps_wc              STRING
   DEFINE ps_page_action     STRING
   DEFINE ls_sql             STRING
   DEFINE li_idx             LIKE type_t.num5
   DEFINE li_idx2            LIKE type_t.num5
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_wsab_m.* TO NULL
   CALL g_browser.clear()
    
   LET ls_sql = " SELECT UNIQUE wsab003 ",
                " FROM wsab_t ",
                "  ",
                "  ",
                " WHERE wsabent = '" ||g_enterprise|| "' AND ", g_wc ,cl_sql_add_filter("wsab_t")
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料             
   PREPARE browse_pre FROM ls_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   LET li_idx = 1 
   FOREACH browse_cur INTO g_browser[li_idx].b_wsab003
      
      LET g_browser[li_idx].b_pid     = 0
      LET g_browser[li_idx].b_id      = 0, ".", li_idx USING "<<<"
      LET g_browser[li_idx].b_exp     = FALSE
      LET g_browser[li_idx].b_expcode = 1
      LET g_browser[li_idx].b_hasC    = TRUE
      LET g_browser[li_idx].b_show    = g_browser[li_idx].b_wsab003
      CALL awsi012_desc_show(li_idx)
      LET li_idx = li_idx + 1
      
      IF li_idx > g_max_rec AND g_error_show = 1 THEN
         CALL cl_err( '', 9035, 1)
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   CALL g_browser.deleteElement(g_browser.getLength())
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count        #總筆數
   
   #樹展開
   #FOR li_idx = 1 TO g_browser.getLength()
   #   FOR li_idx2 = 1 TO g_browser_expand.getLength()
   #      IF g_browser_expand[li_idx2].b_wsab003.equals(g_browser[li_idx].b_wsab003)
   #         AND g_browser_expand[li_idx2].b_wsab006.equals(g_browser[li_idx].b_wsab006)
   #         THEN
   #         CALL awsi012_browser_expand(li_idx)
   #         LET g_browser[li_idx].b_isExp = 1 
   #         LET g_browser[li_idx].b_exp = TRUE
   #      END IF 
   #   END FOR
   #END FOR
   
   FREE browse_pre
   
END FUNCTION
 
#+ Tree子節點展開
PRIVATE FUNCTION awsi012_browser_expand(pi_id)
   DEFINE pi_id            LIKE type_t.num10
   DEFINE li_lv            LIKE type_t.num10
   DEFINE li_idx           LIKE type_t.num10
   DEFINE ls_wc            STRING
   DEFINE ls_type_list     STRING
   DEFINE ls_sql           STRING
   #add-point:browser_expand段define
   {<point name="browser_expand.define"/>}
   #end add-point
   
   #已經展開過或展開leaf
   IF g_browser[pi_id].b_isExp = TRUE OR g_browser[pi_id].b_expcode > (3-1) THEN
      RETURN
   END IF
   
   #leaf展開
   IF g_browser[pi_id].b_expcode = (3-1) THEN
      CALL awsi012_browser_expand_leaf(pi_id)
      RETURN
   END IF
   
   LET li_lv = g_browser[pi_id].b_expcode
   LET g_browser[pi_id].b_isExp = TRUE
   
   CASE li_lv
      WHEN 1
         LET ls_wc = " AND wsab003 = '",g_browser[pi_id].b_wsab003,"' "
         LET ls_type_list = "wsab003"
                            ,",wsab006"
      WHEN 2               
         LET ls_wc = " AND wsab003 = '", g_browser[pi_id].b_wsab003, "'"
                     ," AND wsab006 = '", g_browser[pi_id].b_wsab006, "'"
         LET ls_type_list = "wsab003"
                            ,",wsab006"
      WHEN 3
         LET ls_wc = " AND wsab003 = '", g_browser[pi_id].b_wsab003, "'"
                     ," AND wsab006 = '", g_browser[pi_id].b_wsab006, "'"
         LET ls_type_list = "wsab003"
                            ,",wsab006"
      WHEN 4                
         LET ls_wc = " AND wsab003 = '", g_browser[pi_id].b_wsab003, "'"
                     ," AND wsab006 = '", g_browser[pi_id].b_wsab006, "'"
         LET ls_type_list = "wsab003"
                            ,",wsab006"
      WHEN 5
         LET ls_wc = " AND wsab003 = '", g_browser[pi_id].b_wsab003, "'"
                     ," AND wsab006 = '", g_browser[pi_id].b_wsab006, "'"
         LET ls_type_list = "wsab003"
                            ,",wsab006"
   END CASE
   
   LET ls_sql = " SELECT UNIQUE   ", ls_type_list, 
                " FROM wsab_t ",
                "  ",
                "  ",
                " WHERE wsabent = '" ||g_enterprise|| "' AND ", g_wc, ls_wc #,cl_get_extra_cond('zzuser', 'zzgrup')
 
   LET li_lv = g_browser[pi_id].b_expcode 
    
   #add-point:browser_expand段before prepare
   {<point name="browser_expand.before_prepare"/>}
   #end add-point
                
   PREPARE expand_pre FROM ls_sql
   DECLARE expand_cur CURSOR FOR expand_pre
   
   LET li_idx = pi_id + 1
   CALL g_browser.insertElement(li_idx)
   FOREACH expand_cur INTO g_browser[li_idx].b_wsab003,g_browser[li_idx].b_wsab006
      LET g_browser[li_idx].b_pid     = g_browser[pi_id].b_id 
      LET g_browser[li_idx].b_id      = g_browser[pi_id].b_id , ".", li_idx USING "<<<"
      LET g_browser[li_idx].b_exp     = FALSE
      LET g_browser[li_idx].b_expcode = li_lv + 1
      LET g_browser[li_idx].b_hasC    = TRUE
      CASE li_lv
         WHEN 1
            LET g_browser[li_idx].b_show = g_browser[li_idx].b_wsab006
         WHEN 2
         WHEN 3
         WHEN 4
         WHEN 5
      END CASE
      CALL awsi012_desc_show(li_idx)
      LET li_idx = li_idx + 1
      CALL g_browser.insertElement(li_idx)
   END FOREACH
   
   CALL g_browser.deleteElement(li_idx)
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count        #總筆數
 
END FUNCTION
 
#+ Tree leaf節點展開
PRIVATE FUNCTION awsi012_browser_expand_leaf(pi_id)
   DEFINE pi_id            LIKE type_t.num10
   DEFINE li_lv            LIKE type_t.num10
   DEFINE li_idx           LIKE type_t.num10
   DEFINE ls_wc            STRING
   DEFINE ls_sql           STRING
   DEFINE ls_type_list     STRING
   #add-point:browser_expand_leaf段define
   {<point name="browser_expand_leaf.define"/>}
   #end add-point
   
   LET ls_wc = " AND wsab003 = '", g_browser[pi_id].b_wsab003, "'"
               ," AND wsab006 = '", g_browser[pi_id].b_wsab006, "'"
 
   LET ls_sql = " SELECT UNIQUE wsab001,wsab002,wsab003,wsab004,wsab006 ",
                " FROM wsab_t ",
                "  ",
                "  ",
                
                " WHERE wsabent = '" ||g_enterprise|| "' AND ", g_wc, ls_wc #,cl_get_extra_cond('zzuser', 'zzgrup')
 
   LET li_lv = g_browser[pi_id].b_expcode 
          
   LET ls_sql = ls_sql, " ORDER BY wsab001"
          
   #add-point:browser_expand_leaf段before prepare
   {<point name="browser_expand_leaf.before_prepare"/>}
   #end add-point 
          
   PREPARE leaf_pre FROM ls_sql
   DECLARE leaf_cur CURSOR FOR leaf_pre
   
   LET g_cnt = pi_id + 1
   CALL g_browser.insertElement(g_cnt)
   FOREACH leaf_cur INTO g_browser[g_cnt].b_wsab001,g_browser[g_cnt].b_wsab002,g_browser[g_cnt].b_wsab003, 
       g_browser[g_cnt].b_wsab004,g_browser[g_cnt].b_wsab006
      LET g_browser[g_cnt].b_pid     = g_browser[pi_id].b_id 
      LET g_browser[g_cnt].b_id      = g_browser[pi_id].b_id , ".", g_cnt USING "<<<"
      LET g_browser[g_cnt].b_exp     = FALSE
      LET g_browser[g_cnt].b_expcode = li_lv + 1
      LET g_browser[g_cnt].b_hasC    = FALSE
      LET g_browser[g_cnt].b_show = g_browser[g_cnt].b_wsab001
      CALL awsi012_desc_show(g_cnt)
      LET g_cnt = g_cnt + 1
      CALL g_browser.insertElement(g_cnt)
   END FOREACH
   
   CALL g_browser.deleteElement(g_cnt)
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count        #總筆數
                      
END FUNCTION
 
#+ 組合顯示在畫面上的資訊
PRIVATE FUNCTION awsi012_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   #add-point:desc_show段define 
   {<point name="desc_show.define"/>}
   #end add-point
   
   LET li_tmp = g_cnt
   LET g_cnt = pi_ac
   
   #add-point:desc_show段desc處理
   {<point name="desc_show.show"/>} 
   #end add-point
   LET g_cnt = li_tmp
   
END FUNCTION
 
#+ 簡易快速查詢
PRIVATE FUNCTION awsi012_browser_search()
   DEFINE ls_wc       STRING   #若有輸入g_searchstr時用來代換g_wc的暫存變數
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #END add-point
 
   IF NOT cl_null(g_searchstr) THEN
      LET ls_wc = " lower(", g_searchcol, ") LIKE '", g_searchstr, "%'"
      LET ls_wc = ls_wc.toLowerCase()
   ELSE
      LET ls_wc = " 1=1 "
   END IF
 
   LET g_wc = ls_wc
 
END FUNCTION
 
 
]]>
  </section>
  <section id="awsi012.construct" ver="6" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION awsi012_construct()
   DEFINE ls_return      STRING
   DEFINE ls_result      STRING 
   DEFINE ls_wc          STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point
   
   CLEAR FORM
   INITIALIZE g_wsab_m.* TO NULL
   INITIALIZE g_wc TO NULL
   LET g_current_row = 1
 
   LET g_qryparam.state = "c"
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #螢幕上取條件
      CONSTRUCT BY NAME g_wc ON wsab001,wsab002,wsab003,wsab004,wsab006
      
         BEFORE CONSTRUCT                                    
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point             
      
         #公用欄位開窗相關處理
         
      
         #一般欄位
                  #此段落由子樣板a01產生
         BEFORE FIELD wsab001
            #add-point:BEFORE FIELD wsab001
            {<point name="construct.b.wsab001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab001
            
            #add-point:AFTER FIELD wsab001
            {<point name="construct.a.wsab001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.wsab001
         ON ACTION controlp INFIELD wsab001
            #add-point:ON ACTION controlp INFIELD wsab001
            {<point name="construct.c.wsab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab002
            #add-point:BEFORE FIELD wsab002
            {<point name="construct.b.wsab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab002
            
            #add-point:AFTER FIELD wsab002
            {<point name="construct.a.wsab002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.wsab002
         ON ACTION controlp INFIELD wsab002
            #add-point:ON ACTION controlp INFIELD wsab002
            {<point name="construct.c.wsab002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab003
            #add-point:BEFORE FIELD wsab003
            {<point name="construct.b.wsab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab003
            
            #add-point:AFTER FIELD wsab003
            {<point name="construct.a.wsab003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.wsab003
         ON ACTION controlp INFIELD wsab003
            #add-point:ON ACTION controlp INFIELD wsab003
            {<point name="construct.c.wsab003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab004
            #add-point:BEFORE FIELD wsab004
            {<point name="construct.b.wsab004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab004
            
            #add-point:AFTER FIELD wsab004
            {<point name="construct.a.wsab004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.wsab004
         ON ACTION controlp INFIELD wsab004
            #add-point:ON ACTION controlp INFIELD wsab004
            {<point name="construct.c.wsab004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab006
            #add-point:BEFORE FIELD wsab006
            {<point name="construct.b.wsab006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab006
            
            #add-point:AFTER FIELD wsab006
            {<point name="construct.a.wsab006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.wsab006
         ON ACTION controlp INFIELD wsab006
            #add-point:ON ACTION controlp INFIELD wsab006
            {<point name="construct.c.wsab006" />}
            #END add-point
 
 
           
      END CONSTRUCT
      
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point   
      
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
  
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
  
END FUNCTION
]]>
  </section>
  <section id="awsi012.default_search" ver="5" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION awsi012_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " wsab001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " wsab002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " wsab003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " wsab004 = '", g_argv[04], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.delete" ver="6" status="" src="s">
    <![CDATA[#+ 資料刪除 
PRIVATE FUNCTION awsi012_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point  
   
   IF g_wsab_m.wsab001 IS NULL
   OR g_wsab_m.wsab002 IS NULL
   OR g_wsab_m.wsab003 IS NULL
   OR g_wsab_m.wsab004 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   CALL awsi012_show()
   
   CALL s_transaction_begin()
    
   LET g_wsab001_t = g_wsab_m.wsab001
   LET g_wsab002_t = g_wsab_m.wsab002
   LET g_wsab003_t = g_wsab_m.wsab003
   LET g_wsab004_t = g_wsab_m.wsab004
 
   
   
 
   OPEN awsi012_cl USING g_enterprise,
                           g_wsab_m.wsab001
                           ,g_wsab_m.wsab002
                           ,g_wsab_m.wsab003
                           ,g_wsab_m.wsab004
 
   IF STATUS THEN
      CALL cl_err("OPEN awsi012_cl:", STATUS, 0)
      CLOSE awsi012_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE awsi012_master_referesh USING g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004 INTO g_wsab_m.wsab001, 
       g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004,g_wsab_m.wsab006,g_wsab_m.wsab001_desc,g_wsab_m.wsab003_desc, 
       g_wsab_m.wsab004_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_wsab_m.wsab001,SQLCA.sqlcode,0)
      RETURN
   END IF
   
   IF cl_ask_delete() THEN
 
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
 
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL awsi012_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
      DELETE FROM wsab_t 
       WHERE wsabent = g_enterprise AND wsab001 = g_wsab_m.wsab001 
         AND wsab002 = g_wsab_m.wsab002 
         AND wsab003 = g_wsab_m.wsab003 
         AND wsab004 = g_wsab_m.wsab004 
 
 
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("wsab_t",SQLCA.sqlcode,0)
         CALL s_transaction_end('N','0')
      END IF
  
      
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
      
          
      CLEAR FORM
      CALL awsi012_ui_browser_refresh()
      IF g_browser_cnt > 0 THEN
         CALL awsi012_fetch("P")
      ELSE
         CALL awsi012_browser_fill(" 1=1 ","F")
      END IF
      
   END IF
 
   CLOSE awsi012_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_wsab_m.wsab001,"D")
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.description" ver="10" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000026
#+ 
#+ Filename...: awsi012
#+ Description: 單據性質簽核設定維護作業
#+ Creator....: 00544(2013/12/18)
#+ Modifier...: 01251(2014/06/28)
#+ Buildtype..: 應用 i01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="awsi012.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION awsi012_fetch(p_fl)
   DEFINE p_fl       LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point  
   
   CASE p_fl
      WHEN "F" LET g_current_idx = 1
      WHEN "P"
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN "N"
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN "L" 
         LET g_current_idx = g_header_cnt        
      WHEN "/"
         IF (NOT g_no_ask) THEN      
            CALL cl_getmsg("fetch", g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,": " FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT
            
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF           
         END IF
         IF g_jump > 0 THEN
            LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE     
   END CASE
   
   LET g_browser_cnt = g_browser.getLength()
 
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx - 1
   DISPLAY g_browser_idx TO FORMONLY.b_index        #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count        #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index        #當下筆數
   
   #單頭筆數顯示
   #DISPLAY g_browser_idx TO FORMONLY.idx            #當下筆數
   #DISPLAY g_browser_cnt TO FORMONLY.cnt            #總筆數
   
   IF g_browser[g_current_idx].b_expcode <> "3" THEN
      INITIALIZE g_wsab_m.* TO NULL
      DISPLAY BY NAME g_wsab_m.*
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
      RETURN
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   # 設定browse索引
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx)
 
   CALL cl_navigator_setting(g_browser_idx, g_current_cnt) 
   CALL cl_navigator_setting(g_browser_idx, g_browser_cnt )
 
   #代表沒有資料, 無需做後續資料撈取之動作
   IF g_current_idx = 0 THEN
      RETURN
   END IF
 
   LET g_wsab_m.wsab001 = g_browser[g_current_idx].b_wsab001
   LET g_wsab_m.wsab002 = g_browser[g_current_idx].b_wsab002
   LET g_wsab_m.wsab003 = g_browser[g_current_idx].b_wsab003
   LET g_wsab_m.wsab004 = g_browser[g_current_idx].b_wsab004
 
                       
   #重讀DB,因TEMP有不被更新特性
   EXECUTE awsi012_master_referesh USING g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004 INTO g_wsab_m.wsab001, 
       g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004,g_wsab_m.wsab006,g_wsab_m.wsab001_desc,g_wsab_m.wsab003_desc, 
       g_wsab_m.wsab004_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("wsab_t",SQLCA.sqlcode,0)
      INITIALIZE g_wsab_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #重新顯示
   CALL awsi012_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.filter" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION awsi012_filter()
 
 
 
 
 
 
 
 
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
 
 
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION awsi012_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE TYPE type_g_wsab_m RECORD
       wsab001 LIKE wsab_t.wsab001, 
   wsab001_desc LIKE type_t.chr80, 
   wsab002 LIKE wsab_t.wsab002, 
   wsab003 LIKE wsab_t.wsab003, 
   wsab003_desc LIKE type_t.chr80, 
   wsab004 LIKE wsab_t.wsab004, 
   wsab004_desc LIKE type_t.chr80, 
   wsab006 LIKE wsab_t.wsab006
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_wsab_m        type_g_wsab_m
DEFINE g_wsab_m_t      type_g_wsab_m                #備份舊值
   DEFINE g_wsab001_t LIKE wsab_t.wsab001
DEFINE g_wsab002_t LIKE wsab_t.wsab002
DEFINE g_wsab003_t LIKE wsab_t.wsab003
DEFINE g_wsab004_t LIKE wsab_t.wsab004
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD                   #資料瀏覽之欄位  
                #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
            b_wsab001 LIKE wsab_t.wsab001,
      b_wsab002 LIKE wsab_t.wsab002,
      b_wsab003 LIKE wsab_t.wsab003,
      b_wsab004 LIKE wsab_t.wsab004,
      b_wsab006 LIKE wsab_t.wsab006
         #,rank           LIKE type_t.num10
      END RECORD 
   
#+ 此段落由子樣板a54產生
DEFINE g_browser_expand   DYNAMIC ARRAY OF RECORD                   #資料瀏覽之欄位  
      b_wsab003 STRING
      ,b_wsab006 STRING
      END RECORD 
 
 
   
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
  
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE g_jump                LIKE type_t.num10             #查詢指定的筆數 
DEFINE g_no_ask              LIKE type_t.num5              #是否開啟指定筆視窗 
DEFINE g_rec_b               LIKE type_t.num5              #單身筆數                         
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_pagestart           LIKE type_t.num5              #page起始筆數
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_state               STRING
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_aw                  STRING             #確定當下點擊的單身
 
#快速搜尋用
DEFINE g_searchcol           STRING             #查詢欄位代碼
DEFINE g_searchstr           STRING             #查詢欄位字串
DEFINE g_order               STRING             #查詢排序模式
 
#Browser用
DEFINE g_current_idx         LIKE type_t.num5   #Browser 所在筆數(當下page)
DEFINE g_current_row         LIKE type_t.num5   #Browser 所在筆數(暫存用)
DEFINE g_current_cnt         LIKE type_t.num10  #Browser 總筆數(當下page)
DEFINE g_browser_idx         LIKE type_t.num5   #Browser 所在筆數(所有資料)
DEFINE g_browser_cnt         LIKE type_t.num5   #Browser 總筆數(所有資料)
DEFINE g_tmp_page            LIKE type_t.num5   
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_chk                 BOOLEAN
DEFINE g_default             BOOLEAN            #是否有外部參數查詢
DEFINE g_log1                STRING             #log用
DEFINE g_log2                STRING             #log用
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="awsi012.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION awsi012_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_main_hidden = 0
   
   
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL awsi012_default_search()
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.input" ver="5" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION awsi012_input(p_cmd)
   DEFINE p_cmd           LIKE type_t.chr1
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_n             LIKE type_t.num5        #檢查重複用  
   DEFINE l_cnt           LIKE type_t.num5        #檢查重複用  
   DEFINE l_lock_sw       LIKE type_t.chr1        #單身鎖住否  
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_i             LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE ls_return       STRING
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #切換畫面
   CALL gfrm_curr.setElementHidden("mainlayout",0)
   CALL gfrm_curr.setElementImage("mainhidden","small/arr-u.png")
   LET g_main_hidden = 1
   
   CALL cl_set_head_visible("","YES")  
   
   IF p_cmd = 'r' THEN
      #此段落的r動作等同於a
      LET p_cmd = 'a'
   END IF
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   LET g_qryparam.state = "i"
   
   #控制key欄位可否輸入
   CALL awsi012_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL awsi012_set_no_entry(p_cmd)
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DISPLAY BY NAME g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004,g_wsab_m.wsab006 

   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #單頭段
      INPUT BY NAME g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004,g_wsab_m.wsab006  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            #其他table資料備份(確定是否更改用)
            
            #add-point:input開始前
            {<point name="input.before.input"/>}
            #end add-point
   
                  #此段落由子樣板a02產生
         AFTER FIELD wsab001
            
            #add-point:AFTER FIELD wsab001
            {<point name="input.a.wsab001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab001
            #add-point:BEFORE FIELD wsab001
            {<point name="input.b.wsab001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE wsab001
            #add-point:ON CHANGE wsab001
            {<point name="input.g.wsab001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab002
            #add-point:BEFORE FIELD wsab002
            {<point name="input.b.wsab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab002
            
            #add-point:AFTER FIELD wsab002
            {<point name="input.a.wsab002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE wsab002
            #add-point:ON CHANGE wsab002
            {<point name="input.g.wsab002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab003
            
            #add-point:AFTER FIELD wsab003
            {<point name="input.a.wsab003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab003
            #add-point:BEFORE FIELD wsab003
            {<point name="input.b.wsab003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE wsab003
            #add-point:ON CHANGE wsab003
            {<point name="input.g.wsab003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab004
            
            #add-point:AFTER FIELD wsab004
            {<point name="input.a.wsab004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab004
            #add-point:BEFORE FIELD wsab004
            {<point name="input.b.wsab004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE wsab004
            #add-point:ON CHANGE wsab004
            {<point name="input.g.wsab004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD wsab006
            #add-point:BEFORE FIELD wsab006
            {<point name="input.b.wsab006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD wsab006
            
            #add-point:AFTER FIELD wsab006
            {<point name="input.a.wsab006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE wsab006
            #add-point:ON CHANGE wsab006
            {<point name="input.g.wsab006" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.wsab001
         ON ACTION controlp INFIELD wsab001
            #add-point:ON ACTION controlp INFIELD wsab001
            {<point name="input.c.wsab001" />}
            #END add-point
 
         #Ctrlp:input.c.wsab002
         ON ACTION controlp INFIELD wsab002
            #add-point:ON ACTION controlp INFIELD wsab002
            {<point name="input.c.wsab002" />}
            #END add-point
 
         #Ctrlp:input.c.wsab003
         ON ACTION controlp INFIELD wsab003
            #add-point:ON ACTION controlp INFIELD wsab003
            {<point name="input.c.wsab003" />}
            #END add-point
 
         #Ctrlp:input.c.wsab004
         ON ACTION controlp INFIELD wsab004
            #add-point:ON ACTION controlp INFIELD wsab004
            {<point name="input.c.wsab004" />}
            #END add-point
 
         #Ctrlp:input.c.wsab006
         ON ACTION controlp INFIELD wsab006
            #add-point:ON ACTION controlp INFIELD wsab006
            {<point name="input.c.wsab006" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
                
            CALL cl_showmsg()   #錯誤訊息統整顯示
 
            IF p_cmd <> "u" THEN
               LET l_count = 1  
 
               SELECT COUNT(*) INTO l_count FROM wsab_t
                WHERE wsabent = g_enterprise AND wsab001 = g_wsab_m.wsab001
                  AND wsab002 = g_wsab_m.wsab002
                  AND wsab003 = g_wsab_m.wsab003
                  AND wsab004 = g_wsab_m.wsab004
 
               IF l_count = 0 THEN
               
                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point
               
                  INSERT INTO wsab_t (wsabent,wsab001,wsab002,wsab003,wsab004,wsab006)
                  VALUES (g_enterprise,g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004, 
                      g_wsab_m.wsab006) 
                  
                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point
                  
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("wsab_t",SQLCA.sqlcode,1)  
                     CONTINUE DIALOG
                  END IF
                  
                  
                  
                  #資料多語言用-增/改
                  
                  
                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  
                  CALL s_transaction_end('Y','0')
               ELSE
                  CALL cl_err( "g_wsab_m.wsab001", "std-00006", 0 )
                  CALL s_transaction_end('N','0')
               END IF 
            ELSE
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               UPDATE wsab_t SET (wsab001,wsab002,wsab003,wsab004,wsab006) = (g_wsab_m.wsab001,g_wsab_m.wsab002, 
                   g_wsab_m.wsab003,g_wsab_m.wsab004,g_wsab_m.wsab006)
                WHERE wsabent = g_enterprise AND wsab001 = g_wsab001_t #
                  AND wsab002 = g_wsab002_t
                  AND wsab003 = g_wsab003_t
                  AND wsab004 = g_wsab004_t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("wsab_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("wsab_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     
                     #資料多語言用-增/改
                     
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     LET g_log1 = util.JSON.stringify(g_wsab_m_t)
                     LET g_log2 = util.JSON.stringify(g_wsab_m)
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     ELSE
                        CALL s_transaction_end('Y','0')
                     END IF
               END CASE
            END IF
           #controlp
      END INPUT
          
      #add-point:input段more input 
      {<point name="input.more_input"/>}
      #end add-point
          
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name, g_fld_name, g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION awsi012_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   CLEAR FORM #清畫面欄位內容
   INITIALIZE g_wsab_m.* LIKE wsab_t.*             #DEFAULT 設定
   LET g_wsab001_t = NULL
   LET g_wsab002_t = NULL
   LET g_wsab003_t = NULL
   LET g_wsab004_t = NULL
 
   CALL s_transaction_begin()
   
   WHILE TRUE
      #+ 此段落由子樣板a55產生
      #六階樹狀給值
      LET g_current_idx = g_curr_diag.getCurrentRow("s_browse")
      IF g_current_idx > 0 THEN
         IF NOT cl_null(g_browser[g_current_idx].b_show) THEN
            LET g_wsab_m.wsab003 = g_browser[g_current_idx].b_wsab003
            LET g_wsab_m.wsab006 = g_browser[g_current_idx].b_wsab006
         END IF
      END IF
 
 
      #公用欄位給值
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
 
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point   
     
      CALL awsi012_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_wsab_m.* = g_wsab_m_t.*
         CALL awsi012_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      LET g_rec_b = 0
      EXIT WHILE
   END WHILE
   
   LET g_wsab001_t = g_wsab_m.wsab001
   LET g_wsab002_t = g_wsab_m.wsab002
   LET g_wsab003_t = g_wsab_m.wsab003
   LET g_wsab004_t = g_wsab_m.wsab004
 
   
   LET g_state = "Y"
 
 
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.main" ver="5" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aws","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT wsab001,'',wsab002,wsab003,'',wsab004,'',wsab006", 
                      " FROM wsab_t",
                      " WHERE wsabent= ? AND wsab001=? AND wsab002=? AND wsab003=? AND wsab004=? FOR  
                          UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE awsi012_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE wsab001,wsab002,wsab003,wsab004,wsab006,t1.gzcbl004 ,t2.oobal004 ,t3.ooefl003", 

               " FROM wsab_t",
                              " LEFT JOIN gzcbl_t t1 ON t1.gzcbl001='24' AND t1.gzcbl002=wsab001 AND t1.gzcbl003='"||g_lang||"' ",
               " LEFT JOIN oobal_t t2 ON t2.oobalent='"||g_enterprise||"' AND t2.oobal001=wsab002 AND t2.oobal002=wsab003 AND t2.oobal003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=wsab004 AND t3.ooefl002='"||g_dlang||"' ",
 
               " WHERE wsabent = '" ||g_enterprise|| "' AND wsab001 = ? AND wsab002 = ? AND wsab003 = ? AND wsab004 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE awsi012_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_awsi012 WITH FORM cl_ap_formpath("aws",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL awsi012_init()   
 
      #進入選單 Menu (="N")
      CALL awsi012_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_awsi012
      
   END IF 
   
   CLOSE awsi012_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="awsi012.modify" ver="4" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION awsi012_modify()
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point
   
   IF g_wsab_m.wsab001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF 
   
   EXECUTE awsi012_master_referesh USING g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004 INTO g_wsab_m.wsab001, 
       g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004,g_wsab_m.wsab006,g_wsab_m.wsab001_desc,g_wsab_m.wsab003_desc, 
       g_wsab_m.wsab004_desc
 
   ERROR ""
  
   LET g_wsab001_t = g_wsab_m.wsab001
   LET g_wsab002_t = g_wsab_m.wsab002
   LET g_wsab003_t = g_wsab_m.wsab003
   LET g_wsab004_t = g_wsab_m.wsab004
 
   
   CALL s_transaction_begin()
   
   OPEN awsi012_cl USING g_enterprise,g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004
   IF STATUS THEN
      CALL cl_err("OPEN awsi012_cl:", STATUS, 1)
      CLOSE awsi012_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE awsi012_master_referesh USING g_wsab_m.wsab001,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004 INTO g_wsab_m.wsab001, 
       g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab004,g_wsab_m.wsab006,g_wsab_m.wsab001_desc,g_wsab_m.wsab003_desc, 
       g_wsab_m.wsab004_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err("wsab_t",SQLCA.sqlcode,0)
      CLOSE awsi012_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL awsi012_show()
   
   WHILE TRUE
      LET g_wsab_m.wsab001 = g_wsab001_t
      LET g_wsab_m.wsab002 = g_wsab002_t
      LET g_wsab_m.wsab003 = g_wsab003_t
      LET g_wsab_m.wsab004 = g_wsab004_t
 
      
      #寫入修改者/修改日期資訊
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
 
      CALL awsi012_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_wsab_m.* = g_wsab_m_t.*
         CALL awsi012_show()
         CALL cl_err("",9001,0)
         EXIT WHILE
      END IF
 
      #若有modid跟moddt則進行update
 
 
      EXIT WHILE
      
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_wsab_m.wsab001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE awsi012_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_wsab_m.wsab001,"U")
   
   LET g_worksheet_hidden = 0
   
END FUNCTION   
]]>
  </section>
  <section id="awsi012.other_dialog" ver="1" status="" src="s">
    <![CDATA[ 
]]>
  </section>
  <section id="awsi012.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="awsi012.query" ver="5" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION awsi012_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point
   
   LET INT_FLAG = 0
   LET ls_wc = g_wc
   
   #切換畫面
 
   CALL g_browser.clear() 
 
   IF g_worksheet_hidden THEN  #browser panel折疊
      CALL gfrm_curr.setElementHidden("worksheet_vbox",0)
      CALL gfrm_curr.setElementImage("worksheethidden","worksheethidden-24.png")
      LET g_worksheet_hidden = 0
   END IF
   IF g_header_hidden THEN    #單頭折疊
      CALL gfrm_curr.setElementHidden("vb_master",0)
      CALL gfrm_curr.setElementImage("controls","headerhidden-24")
      LET g_header_hidden = 0
   END IF
 
   INITIALIZE g_wsab_m.* TO NULL
   ERROR ""
 
   DISPLAY " " TO FORMONLY.b_count
   DISPLAY " " TO FORMONLY.h_count
   CALL awsi012_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL awsi012_browser_fill(g_wc,"F")
      CALL awsi012_fetch("")
      RETURN
   ELSE
      LET g_current_row = 1
      LET g_current_cnt = 0
      CALL g_browser_expand.clear()
   END IF
   
   LET g_error_show = 1
   CALL awsi012_browser_fill(g_wc,"F")   # 移到第一頁
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL awsi012_fetch("F") 
   END IF
   
   LET g_wc_filter = ""
   
END FUNCTION
]]>
  </section>
  <section id="awsi012.reproduce" ver="4" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION awsi012_reproduce()
   DEFINE l_newno     LIKE wsab_t.wsab001 
   DEFINE l_oldno     LIKE wsab_t.wsab001 
   DEFINE l_newno02     LIKE wsab_t.wsab002 
   DEFINE l_oldno02     LIKE wsab_t.wsab002 
   DEFINE l_newno03     LIKE wsab_t.wsab003 
   DEFINE l_oldno03     LIKE wsab_t.wsab003 
   DEFINE l_newno04     LIKE wsab_t.wsab004 
   DEFINE l_oldno04     LIKE wsab_t.wsab004 
 
   DEFINE l_master    RECORD LIKE wsab_t.*
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
   
   #切換畫面
   
   IF g_wsab_m.wsab001 IS NULL
      OR g_wsab_m.wsab002 IS NULL
      OR g_wsab_m.wsab003 IS NULL
      OR g_wsab_m.wsab004 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_wsab001_t = g_wsab_m.wsab001
   LET g_wsab002_t = g_wsab_m.wsab002
   LET g_wsab003_t = g_wsab_m.wsab003
   LET g_wsab004_t = g_wsab_m.wsab004
 
   
   LET g_wsab_m.wsab001 = ""
   LET g_wsab_m.wsab002 = ""
   LET g_wsab_m.wsab003 = ""
   LET g_wsab_m.wsab004 = ""
 
    
   CALL awsi012_set_entry("a")
   CALL awsi012_set_no_entry("a")
   
   #公用欄位給予預設值
   
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL awsi012_input("r")
 
      LET g_wsab_m.wsab001_desc = ''
   DISPLAY BY NAME g_wsab_m.wsab001_desc
   LET g_wsab_m.wsab003_desc = ''
   DISPLAY BY NAME g_wsab_m.wsab003_desc
   LET g_wsab_m.wsab004_desc = ''
   DISPLAY BY NAME g_wsab_m.wsab004_desc
 
   
   IF INT_FLAG  THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   CALL s_transaction_begin()
   
   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point
   
   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("wsab_t",SQLCA.sqlcode,1)
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point
   
   CALL s_transaction_end('Y','0')
   
   
 
   
   LET g_wsab001_t = g_wsab_m.wsab001
   LET g_wsab002_t = g_wsab_m.wsab002
   LET g_wsab003_t = g_wsab_m.wsab003
   LET g_wsab004_t = g_wsab_m.wsab004
 
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
                   
END FUNCTION
]]>
  </section>
  <section id="awsi012.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION awsi012_set_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point     
 
   IF p_cmd = "a" THEN
      CALL cl_set_comp_entry("wsab001,wsab002,wsab003,wsab004",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION awsi012_set_no_entry(p_cmd)
   DEFINE p_cmd LIKE type_t.chr1
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("wsab001,wsab002,wsab003,wsab004",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION awsi012_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_wsab_m.wsab001
   LET g_pk_array[1].column = 'wsab001'
   LET g_pk_array[2].values = g_wsab_m.wsab002
   LET g_pk_array[2].column = 'wsab002'
   LET g_pk_array[3].values = g_wsab_m.wsab003
   LET g_pk_array[3].column = 'wsab003'
   LET g_pk_array[4].values = g_wsab_m.wsab004
   LET g_pk_array[4].column = 'wsab004'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="awsi012.show" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示 
PRIVATE FUNCTION awsi012_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_wsab_m_t.* = g_wsab_m.*      #保存單頭舊值
   
   #在browser 移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #帶出公用欄位reference值
   
    
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL awsi012_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
 
   #將資料輸出到畫面上
   DISPLAY BY NAME g_wsab_m.wsab001,g_wsab_m.wsab001_desc,g_wsab_m.wsab002,g_wsab_m.wsab003,g_wsab_m.wsab003_desc, 
       g_wsab_m.wsab004,g_wsab_m.wsab004_desc,g_wsab_m.wsab006
   
   #顯示狀態(stus)圖片
   
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="awsi012.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="awsi012.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="awsi012.ui_browser_refresh" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION awsi012_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point     
 
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_wsab001 = g_wsab_m.wsab001
         AND g_browser[l_i].b_wsab002 = g_wsab_m.wsab002
         AND g_browser[l_i].b_wsab003 = g_wsab_m.wsab003
         AND g_browser[l_i].b_wsab004 = g_wsab_m.wsab004
 
         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
       END IF
   END FOR
   
   DISPLAY g_header_cnt TO FORMONLY.b_count     #page count
   DISPLAY g_header_cnt TO FORMONLY.h_count     #page count
   LET g_browser_cnt = g_browser_cnt-1
   IF g_current_idx > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_idx = g_browser_cnt
   END IF
  
END FUNCTION
]]>
  </section>
  <section id="awsi012.ui_dialog" ver="8" status="" src="s">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION awsi012_ui_dialog() 
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   LET li_exit = FALSE
   LET g_current_row = 0
   LET g_current_idx = 1
   
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL awsi012_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE li_exit = FALSE
      
      CALL awsi012_browser_fill(g_wc,"")
      
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_wsab001 = g_wsab001_t
               AND g_browser[li_idx].b_wsab002 = g_wsab002_t
               AND g_browser[li_idx].b_wsab003 = g_wsab003_t
               AND g_browser[li_idx].b_wsab004 = g_wsab004_t
 
               THEN
               LET g_current_row = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
    
      IF g_worksheet_hidden = 1 THEN
         MENU
            BEFORE MENU 
                  
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               
               #還原為原本指定筆數
               IF g_current_row > 0 THEN
                  LET g_current_idx = g_current_row
               END IF
               
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL awsi012_fetch("")   
               END IF               
         
               
            ON ACTION first
               CALL awsi012_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL awsi012_fetch("N")
               LET g_current_row = g_current_idx
            
            ON ACTION jump
               CALL awsi012_fetch("/")
               LET g_current_row = g_current_idx
            
            ON ACTION previous
               CALL awsi012_fetch("P")
               LET g_current_row = g_current_idx
            
            ON ACTION last 
               CALL awsi012_fetch("L")  
               #CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               #CALL fgl_set_arr_curr(g_current_idx)
               LET g_current_row = g_current_idx
            
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT MENU 
            
            ON ACTION close
               LET li_exit = TRUE
               EXIT MENU
            
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 1
               END IF
               EXIT MENU
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 1
               END IF
               EXIT MENU
            
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
          
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL awsi012_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL awsi012_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL awsi012_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
            
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL awsi012_modify()
               #add-point:ON ACTION modify
               {<point name="menu2.modify" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL awsi012_delete()
               #add-point:ON ACTION delete
               {<point name="menu2.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL awsi012_insert()
               #add-point:ON ACTION insert
               {<point name="menu2.insert" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu2.output" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL awsi012_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu2.reproduce" />}
               #END add-point
               EXIT MENU
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL awsi012_query()
               #add-point:ON ACTION query
               {<point name="menu2.query" />}
               #END add-point
               
            END IF
 
 
            #
            
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL awsi012_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.menu.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL awsi012_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.menu.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL awsi012_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.menu.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
            
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END MENU
      
      ELSE
      
         DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
           
            INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
               BEFORE INPUT
            
            END INPUT
      
            #左側瀏覽頁簽
            DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTE(COUNT=g_rec_b)
            
               BEFORE ROW
                  #回歸舊筆數位置 (回到當時異動的筆數)
                  LET g_current_idx = DIALOG.getCurrentRow("s_browse")
                  IF g_current_idx = 0 THEN
                     LET g_current_idx = 1
                  END IF
                  LET g_current_row = g_current_idx  #目前指標
                  LET g_current_sw = TRUE
                  CALL cl_show_fld_cont()     
                  
                  #當每次點任一筆資料都會需要用到               
                  CALL awsi012_fetch("")      
                  
               #+ 此段落由子樣板a53產生
               ON EXPAND (g_row_index)
                  #樹展開
                  CALL awsi012_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1
                  LET g_browser_expand[g_browser_expand.getLength()+1].b_wsab003 = g_browser[g_row_index].b_wsab003
                  LET g_browser_expand[g_browser_expand.getLength()].b_wsab006  = g_browser[g_row_index].b_wsab006
                  
               
               ON COLLAPSE (g_row_index)
                  #樹關閉
 
 
            
            END DISPLAY
 
            #add-point:ui_dialog段自定義display array
            {<point name="ui_dialog.more_displayarray"/>}
            #end add-point
 
         
            BEFORE DIALOG
               CALL cl_navigator_setting(g_current_idx, g_current_cnt)
               LET g_curr_diag = ui.DIALOG.getCurrent()
               #LET g_page = "first" 
               #還原為原本指定筆數
               IF g_current_row > 1 THEN
                  #當刪除最後一筆資料時可能產生錯誤, 進行額外判斷
                  IF g_current_row > g_browser.getLength() THEN
                     LET g_current_row = g_browser.getLength()
                  END IF 
                  LET g_current_idx = g_current_row
                  CALL DIALOG.setCurrentRow("s_browse",g_current_idx)
               END IF
 
               #當每次點任一筆資料都會需要用到  
               IF g_browser_cnt > 0 THEN
                  CALL awsi012_fetch("")   
               END IF               
               
            AFTER DIALOG
               #add-point:ui_dialog段 after dialog
               {<point name="ui_dialog.after_dialog"/>}
               #end add-point
            
         
            
            
            ON ACTION first
               CALL awsi012_fetch("F") 
               LET g_current_row = g_current_idx
            
            ON ACTION next
               CALL awsi012_fetch("N")
               LET g_current_row = g_current_idx
         
            ON ACTION jump
               CALL awsi012_fetch("/")
               LET g_current_row = g_current_idx
         
            ON ACTION previous
               CALL awsi012_fetch("P")
               LET g_current_row = g_current_idx
         
            ON ACTION last 
               CALL awsi012_fetch("L")  
               LET g_current_row = g_current_idx
         
            ON ACTION exit
               LET g_action_choice="exit"
               LET INT_FLAG = FALSE
               LET li_exit = TRUE
               EXIT DIALOG 
         
            ON ACTION close
               LET li_exit = TRUE
               EXIT DIALOG
         
            ON ACTION mainhidden       #主頁摺疊
               IF g_main_hidden THEN
                  CALL gfrm_curr.setElementHidden("mainlayout",0)
                  CALL gfrm_curr.setElementImage("mainhidden","16/worksheethidden.png")
                  LET g_main_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("mainlayout",1)
                  CALL gfrm_curr.setElementImage("mainhidden","16/mainhidden.png")
                  LET g_main_hidden = 1
               END IF
               
            ON ACTION worksheethidden   #瀏覽頁折疊
               IF g_worksheet_hidden THEN
                  CALL gfrm_curr.setElementHidden("worksheet",0)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/mainhidden.png")
                  LET g_worksheet_hidden = 0
               ELSE
                  CALL gfrm_curr.setElementHidden("worksheet",1)
                  CALL gfrm_curr.setElementImage("worksheethidden","16/worksheethidden.png")
                  LET g_worksheet_hidden = 1
               END IF
         
            #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            ON ACTION controls   
               IF g_header_hidden THEN
                  CALL gfrm_curr.setElementHidden("vb_master",0)
                  CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
                  LET g_header_hidden = 0     #visible
               ELSE
                  CALL gfrm_curr.setElementHidden("vb_master",1)
                  CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
                  LET g_header_hidden = 1     #hidden     
               END IF
 
            #快速搜尋
            ON ACTION searchdata
               LET g_current_idx = 1
               LET g_searchstr = GET_FLDBUF(searchstr)
               CALL awsi012_browser_search()
               EXIT DIALOG
               
            ON ACTION queryplansel
               CALL cl_dlg_qryplan_select() RETURNING ls_wc
               #不是空條件才寫入g_wc跟重新找資料
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  CALL awsi012_browser_fill(g_wc,"F")   #browser_fill()會將notice區塊清空
                  CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               END IF
            
            ON ACTION qbe_select
               CALL cl_qbe_list("m") RETURNING ls_wc
               IF NOT cl_null(ls_wc) THEN
                  LET g_wc = ls_wc
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL awsi012_browser_fill(g_wc,"F")
                  IF g_browser_cnt = 0 THEN
                     CALL cl_err("","-100",1)
                     CLEAR FORM
                  ELSE
                     CALL awsi012_fetch("F")
                  END IF
               END IF
               #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
               CALL cl_notice()
               
            
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL awsi012_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL awsi012_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL awsi012_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL awsi012_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL awsi012_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
            
            
 
            #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL awsi012_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL awsi012_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL awsi012_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
            #主選單用ACTION
            &include "main_menu.4gl"
            &include "relating_action.4gl"
            #交談指令共用ACTION
            &include "common_action.4gl"
            
         END DIALOG 
      
      END IF
      
   END WHILE
 
END FUNCTION
]]>
  </section>
</add_points>
