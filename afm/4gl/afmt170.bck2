#該程式未解開Section, 採用最新樣板產出!
{<section id="afmt170.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0006(2016-09-28 16:13:14), PR版次:0006(2016-10-31 17:50:43)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000035
#+ Filename...: afmt170
#+ Description: 償還本息維護
#+ Creator....: 07166(2015-11-18 15:56:57)
#+ Modifier...: 08729 -SD/PR- 08729
 
{</section>}
 
{<section id="afmt170.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#Modify.........: No.151125-00001#2 15/11/27 By catmoon 作廢前詢問「是否執行作廢？」
#160302-00029#1  2016/03/13 By 01727   增加摘要栏位
#160302-00030#3  2016/03/29 By 01727   增加其他本位幣頁簽
#160122-00001#38 2016/03/30 By 02599   添加交易帳戶編號用戶權限空管,控管‘融资合同编号’对应的‘贷款账户’是当前用户有权限的交易账户资料
#160405-00009#2  2016/04/11 By 01531   1、追单:计算已计提的利息fmcw017时，应是小于等于当前还款日期fmcvdocno的资料
#                                      2、追单:历史汇率fmcw018计算有误 
#160322-00025#23 2016/04/19 By 07673   nmbc_t增加nmbcorga来源组织栏位,新增是给该栏位赋值
#160318-00025#25 2016/04/27 BY 07900   校验代码重复错误讯息的修改
#160818-00017#12 2016/08/24 By 07900    删除修改未重新判断状态码
#160822-00008#7  2016/08/29 By 08732   _t_o新舊值調整
#160912-00014#2  2016/10/03 By 08729   新增列印串查到afmr170
#161006-00005#34 2016/10/28 By 08732   組織類型與職能開窗調整
#161028-00032#1  2016/10/31 By 08171   法人欄位權限檢核
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_fmcv_m        RECORD
       fmcvsite LIKE fmcv_t.fmcvsite, 
   fmcvsite_desc LIKE type_t.chr80, 
   fmcvcomp LIKE fmcv_t.fmcvcomp, 
   fmcvcomp_desc LIKE type_t.chr80, 
   fmcvdocno LIKE fmcv_t.fmcvdocno, 
   fmcvdocdt LIKE fmcv_t.fmcvdocdt, 
   fmcvstus LIKE fmcv_t.fmcvstus, 
   fmcvownid LIKE fmcv_t.fmcvownid, 
   fmcvownid_desc LIKE type_t.chr80, 
   fmcvowndp LIKE fmcv_t.fmcvowndp, 
   fmcvowndp_desc LIKE type_t.chr80, 
   fmcvcrtid LIKE fmcv_t.fmcvcrtid, 
   fmcvcrtid_desc LIKE type_t.chr80, 
   fmcvcrtdp LIKE fmcv_t.fmcvcrtdp, 
   fmcvcrtdp_desc LIKE type_t.chr80, 
   fmcvcrtdt LIKE fmcv_t.fmcvcrtdt, 
   fmcvmodid LIKE fmcv_t.fmcvmodid, 
   fmcvmodid_desc LIKE type_t.chr80, 
   fmcvmoddt LIKE fmcv_t.fmcvmoddt, 
   fmcvcnfid LIKE fmcv_t.fmcvcnfid, 
   fmcvcnfid_desc LIKE type_t.chr80, 
   fmcvcnfdt LIKE fmcv_t.fmcvcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_fmcw_d        RECORD
       fmcwseq LIKE fmcw_t.fmcwseq, 
   fmcw021 LIKE fmcw_t.fmcw021, 
   fmcw022 LIKE fmcw_t.fmcw022, 
   fmcw001 LIKE fmcw_t.fmcw001, 
   fmcw002 LIKE fmcw_t.fmcw002, 
   fmcw003 LIKE fmcw_t.fmcw003, 
   fmcw002_desc LIKE type_t.chr500, 
   fmcw003_desc LIKE type_t.chr30, 
   fmcw004 LIKE fmcw_t.fmcw004, 
   fmcw005 LIKE fmcw_t.fmcw005, 
   fmcw005_desc LIKE type_t.chr500, 
   fmcw006 LIKE fmcw_t.fmcw006, 
   fmcw010 LIKE fmcw_t.fmcw010, 
   fmcw011 LIKE fmcw_t.fmcw011, 
   fmcw017 LIKE fmcw_t.fmcw017, 
   fmcw018 LIKE fmcw_t.fmcw018, 
   fmcw023 LIKE fmcw_t.fmcw023, 
   fmcw026 LIKE fmcw_t.fmcw026
       END RECORD
PRIVATE TYPE type_g_fmcw2_d RECORD
       fmcwseq LIKE fmcw_t.fmcwseq, 
   fmcw007 LIKE fmcw_t.fmcw007, 
   fmcw008 LIKE fmcw_t.fmcw008, 
   fmcw009 LIKE fmcw_t.fmcw009, 
   fmcw016 LIKE fmcw_t.fmcw016, 
   fmcw016_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_fmcw3_d RECORD
       fmcwseq LIKE fmcw_t.fmcwseq, 
   fmcw021_desc LIKE type_t.chr500, 
   fmcw022_desc LIKE type_t.chr500, 
   fmcw002_desc1 LIKE type_t.chr500, 
   fmcw003_desc1 LIKE type_t.chr500, 
   fmcw006_desc LIKE type_t.chr500, 
   fmcw010_desc LIKE type_t.chr500, 
   fmcw011_desc LIKE type_t.chr500, 
   fmcw012 LIKE fmcw_t.fmcw012, 
   fmcw013 LIKE fmcw_t.fmcw013, 
   fmcw019 LIKE fmcw_t.fmcw019, 
   fmcw024 LIKE fmcw_t.fmcw024, 
   fmcw014 LIKE fmcw_t.fmcw014, 
   fmcw015 LIKE fmcw_t.fmcw015, 
   fmcw020 LIKE fmcw_t.fmcw020, 
   fmcw025 LIKE fmcw_t.fmcw025
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_fmcvdocno LIKE fmcv_t.fmcvdocno
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_glaa015           LIKE glaa_t.glaa015   #151202-00020#2
DEFINE g_glaa019           LIKE glaa_t.glaa019   #151202-00020#2
DEFINE g_glaa005           LIKE glaa_t.glaa005   #151202-00020#2
#end add-point
       
#模組變數(Module Variables)
DEFINE g_fmcv_m          type_g_fmcv_m
DEFINE g_fmcv_m_t        type_g_fmcv_m
DEFINE g_fmcv_m_o        type_g_fmcv_m
DEFINE g_fmcv_m_mask_o   type_g_fmcv_m #轉換遮罩前資料
DEFINE g_fmcv_m_mask_n   type_g_fmcv_m #轉換遮罩後資料
 
   DEFINE g_fmcvdocno_t LIKE fmcv_t.fmcvdocno
 
 
DEFINE g_fmcw_d          DYNAMIC ARRAY OF type_g_fmcw_d
DEFINE g_fmcw_d_t        type_g_fmcw_d
DEFINE g_fmcw_d_o        type_g_fmcw_d
DEFINE g_fmcw_d_mask_o   DYNAMIC ARRAY OF type_g_fmcw_d #轉換遮罩前資料
DEFINE g_fmcw_d_mask_n   DYNAMIC ARRAY OF type_g_fmcw_d #轉換遮罩後資料
DEFINE g_fmcw2_d          DYNAMIC ARRAY OF type_g_fmcw2_d
DEFINE g_fmcw2_d_t        type_g_fmcw2_d
DEFINE g_fmcw2_d_o        type_g_fmcw2_d
DEFINE g_fmcw2_d_mask_o   DYNAMIC ARRAY OF type_g_fmcw2_d #轉換遮罩前資料
DEFINE g_fmcw2_d_mask_n   DYNAMIC ARRAY OF type_g_fmcw2_d #轉換遮罩後資料
DEFINE g_fmcw3_d          DYNAMIC ARRAY OF type_g_fmcw3_d
DEFINE g_fmcw3_d_t        type_g_fmcw3_d
DEFINE g_fmcw3_d_o        type_g_fmcw3_d
DEFINE g_fmcw3_d_mask_o   DYNAMIC ARRAY OF type_g_fmcw3_d #轉換遮罩前資料
DEFINE g_fmcw3_d_mask_n   DYNAMIC ARRAY OF type_g_fmcw3_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
DEFINE g_fmcvcomp_str        STRING
DEFINE g_glaald              LIKE glaa_t.glaald
DEFINE g_glaa003             LIKE glaa_t.glaa003
DEFINE g_glaa024             LIKE glaa_t.glaa024
DEFINE g_glaa025             LIKE glaa_t.glaa025
DEFINE g_glaa026             LIKE glaa_t.glaa026
DEFINE g_sql_bank            STRING #160122-00001#38 add
DEFINE g_wc_cs_comp          STRING #161006-00005#34   add
#end add-point
 
{</section>}
 
{<section id="afmt170.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT fmcvsite,'',fmcvcomp,'',fmcvdocno,fmcvdocdt,fmcvstus,fmcvownid,'',fmcvowndp, 
       '',fmcvcrtid,'',fmcvcrtdp,'',fmcvcrtdt,fmcvmodid,'',fmcvmoddt,fmcvcnfid,'',fmcvcnfdt", 
                      " FROM fmcv_t",
                      " WHERE fmcvent= ? AND fmcvdocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt170_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.fmcvsite,t0.fmcvcomp,t0.fmcvdocno,t0.fmcvdocdt,t0.fmcvstus,t0.fmcvownid, 
       t0.fmcvowndp,t0.fmcvcrtid,t0.fmcvcrtdp,t0.fmcvcrtdt,t0.fmcvmodid,t0.fmcvmoddt,t0.fmcvcnfid,t0.fmcvcnfdt, 
       t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooag011",
               " FROM fmcv_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent="||g_enterprise||" AND t1.ooag001=t0.fmcvownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.fmcvowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.fmcvcrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.fmcvcrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.fmcvmodid  ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.fmcvcnfid  ",
 
               " WHERE t0.fmcvent = " ||g_enterprise|| " AND t0.fmcvdocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE afmt170_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afmt170 WITH FORM cl_ap_formpath("afm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afmt170_init()   
 
      #進入選單 Menu (="N")
      CALL afmt170_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_afmt170
      
   END IF 
   
   CLOSE afmt170_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="afmt170.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION afmt170_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('fmcvstus','13','A,D,N,Y,R,W,C,X')
 
      CALL cl_set_combo_scc('fmcw004','8859') 
   CALL cl_set_combo_scc('fmcw008','8708') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2','3',","1")
   CALL g_idx_group.addAttribute("","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_fin_create_account_center_tmp()
   CALL cl_set_toolbaritem_visible("refund",FALSE)
   #160122-00001#38--add--str--
   LET g_sql_bank=NULL
   CALL s_anmi120_get_bank_account_sql(g_user,g_dept) RETURNING g_sub_success,g_sql_bank
   #160122-00001#38--add--end
   
   #161006-00005#34   add---s
   CALL s_fin_azzi800_sons_query(g_today) 
   CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp   
   CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
   #161006-00005#34   add---e
   #end add-point
   
   #初始化搜尋條件
   CALL afmt170_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="afmt170.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION afmt170_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL afmt170_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_fmcv_m.* TO NULL
         CALL g_fmcw_d.clear()
         CALL g_fmcw2_d.clear()
         CALL g_fmcw3_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL afmt170_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_fmcw_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt170_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2','3',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2','3',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL afmt170_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_fmcw2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt170_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL afmt170_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_fmcw3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt170_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[3] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page3, before row動作 name="ui_dialog.body3.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL afmt170_idx_chk()
               #add-point:page3自定義行為 name="ui_dialog.body3.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為 name="ui_dialog.body3.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL afmt170_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL afmt170_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL afmt170_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL afmt170_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
 
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL afmt170_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL afmt170_set_act_visible()   
            CALL afmt170_set_act_no_visible()
            IF NOT (g_fmcv_m.fmcvdocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " fmcvent = " ||g_enterprise|| " AND",
                                  " fmcvdocno = '", g_fmcv_m.fmcvdocno, "' "
 
               #填到對應位置
               CALL afmt170_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmcv_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmcw_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL afmt170_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmcv_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmcw_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL afmt170_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL afmt170_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL afmt170_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt170_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL afmt170_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt170_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL afmt170_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt170_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL afmt170_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt170_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL afmt170_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt170_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_fmcw_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_fmcw2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_fmcw3_d)
                  LET g_export_id[3]   = "s_detail3"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL afmt170_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL afmt170_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL afmt170_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL afmt170_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = " fmcvent = '",g_enterprise,"'  AND fmcvsite = '",g_fmcv_m.fmcvsite,"' AND fmcvdocno = '",g_fmcv_m.fmcvdocno,"' " #160912-00014#2
               #END add-point
               &include "erp/afm/afmt170_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL afmt170_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL afmt170_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION refund
            LET g_action_choice="refund"
            IF cl_auth_chk_act("refund") THEN
               
               #add-point:ON ACTION refund name="menu.refund"
                IF g_fmcv_m.fmcvstus = 'N' THEN
                 # CALL afmt070_01(g_fmcv_m.fmcvdocno)
                  CALL afmt170_show()
               END IF
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL afmt170_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL afmt170_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL afmt170_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_fmcv_m.fmcvdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="afmt170.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION afmt170_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   DEFINE  l_glaa005             LIKE glaa_t.glaa005
   DEFINE  l_b1                  LIKE fmcw_t.fmcw017
   DEFINE  l_b2                  LIKE fmcw_t.fmcw006
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT fmcvdocno ",
                      " FROM fmcv_t ",
                      " ",
                      " LEFT JOIN fmcw_t ON fmcwent = fmcvent AND fmcvdocno = fmcwdocno ", "  ",
                      #add-point:browser_fill段sql(fmcw_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE fmcvent = " ||g_enterprise|| " AND fmcwent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("fmcv_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT fmcvdocno ",
                      " FROM fmcv_t ", 
                      "  ",
                      "  ",
                      " WHERE fmcvent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("fmcv_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   #160122-00001#38--add--str--             
   LET l_sub_sql = " SELECT DISTINCT fmcvdocno ",
                   " FROM fmcv_t ",
                   " LEFT JOIN fmcw_t ON fmcwent = fmcvent AND fmcvdocno = fmcwdocno ", 
                   " WHERE fmcvent = '" ||g_enterprise|| "'",
                   "   AND TRIM(fmcw007) IS NULL ",
                   "   AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("fmcv_t"),
                   " UNION ",
                   " SELECT DISTINCT fmcvdocno ",
                   " FROM fmcv_t,fmcw_t",
                   " WHERE fmcwent = fmcvent AND fmcvdocno = fmcwdocno ",
                   "   AND fmcvent = '" ||g_enterprise|| "'",
                   "   AND fmcw007 IN (",g_sql_bank,")", 
                   "   AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("fmcv_t")
   
   #160122-00001#38--add--end
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_fmcv_m.* TO NULL
      CALL g_fmcw_d.clear()        
      CALL g_fmcw2_d.clear() 
      CALL g_fmcw3_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.fmcvdocno Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmcvstus,t0.fmcvdocno ",
                  " FROM fmcv_t t0",
                  "  ",
                  "  LEFT JOIN fmcw_t ON fmcwent = fmcvent AND fmcvdocno = fmcwdocno ", "  ", 
                  #add-point:browser_fill段sql(fmcw_t1) name="browser_fill.join.fmcw_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.fmcvent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("fmcv_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmcvstus,t0.fmcvdocno ",
                  " FROM fmcv_t t0",
                  "  ",
                  
                  " WHERE t0.fmcvent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("fmcv_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   #160122-00001#38--add--str--
   LET g_sql = " SELECT DISTINCT t0.fmcvstus,t0.fmcvdocno ",
               " FROM fmcv_t t0",
               "  LEFT JOIN fmcw_t ON fmcwent = fmcvent AND fmcvdocno = fmcwdocno ",
               " WHERE t0.fmcvent = '" ||g_enterprise|| "'",
               "   AND TRIM(fmcw007) IS NULL",
               "   AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("fmcv_t"),
               " UNION ",
               " SELECT DISTINCT t0.fmcvstus,t0.fmcvdocno ",
               " FROM fmcv_t t0,fmcw_t",
               " WHERE fmcwent = fmcvent AND fmcvdocno = fmcwdocno ",
               "   AND t0.fmcvent = '" ||g_enterprise|| "'",
               "   AND fmcw007 IN (",g_sql_bank,")", 
               "   AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("fmcv_t")
   #160122-00001#38--add--end
   #end add-point
   LET g_sql = g_sql, " ORDER BY fmcvdocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"fmcv_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_fmcvdocno
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_fmcvdocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   SELECT SUM(fmcw006) INTO l_b2 
       FROM fmcw_t LEFT JOIN fmcv_t ON fmcvdocno = fmcwdocno AND fmcvent = fmcwent
      WHERE fmcwdocno = g_fmcv_m.fmcvdocno
        AND fmcw004 = '2'
        AND fmcwent = g_enterprise
     DISPLAY l_b2 TO formonly.slbl_b2
      
     SELECT SUM(fmcw017) INTO l_b1 
       FROM fmcw_t LEFT JOIN fmcv_t ON fmcvdocno = fmcwdocno AND fmcvent = fmcwent
      WHERE fmcwdocno = g_fmcv_m.fmcvdocno
        AND fmcwent = g_enterprise
     DISPLAY l_b1 TO formonly.lbl_b1
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION afmt170_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_fmcv_m.fmcvdocno = g_browser[g_current_idx].b_fmcvdocno   
 
   EXECUTE afmt170_master_referesh USING g_fmcv_m.fmcvdocno INTO g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp, 
       g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt,g_fmcv_m.fmcvownid_desc,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid_desc, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvcnfid_desc
   
   CALL afmt170_fmcv_t_mask()
   CALL afmt170_show()
      
END FUNCTION
 
{</section>}
 
{<section id="afmt170.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION afmt170_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION afmt170_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_fmcvdocno = g_fmcv_m.fmcvdocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION afmt170_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_fmcv_m.* TO NULL
   CALL g_fmcw_d.clear()        
   CALL g_fmcw2_d.clear() 
   CALL g_fmcw3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON fmcvsite,fmcvsite_desc,fmcvcomp,fmcvcomp_desc,fmcvdocno,fmcvdocdt,fmcvstus, 
          fmcvownid,fmcvowndp,fmcvcrtid,fmcvcrtdp,fmcvcrtdt,fmcvmodid,fmcvmoddt,fmcvcnfid,fmcvcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<fmcvcrtdt>>----
         AFTER FIELD fmcvcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<fmcvmoddt>>----
         AFTER FIELD fmcvmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmcvcnfdt>>----
         AFTER FIELD fmcvcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmcvpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.fmcvsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvsite
            #add-point:ON ACTION controlp INFIELD fmcvsite name="construct.c.fmcvsite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #CALL q_ooef001()                       #161006-00005#34   mark
            CALL q_ooef001_33()                     #161006-00005#34   add          #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvsite  #顯示到畫面上
            NEXT FIELD fmcvsite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvsite
            #add-point:BEFORE FIELD fmcvsite name="construct.b.fmcvsite"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvsite_desc
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvsite
            
            #add-point:AFTER FIELD fmcvsite name="construct.a.fmcvsite"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvsite_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvsite_desc
            #add-point:BEFORE FIELD fmcvsite_desc name="construct.b.fmcvsite_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvsite_desc
            
            #add-point:AFTER FIELD fmcvsite_desc name="construct.a.fmcvsite_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcvsite_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvsite_desc
            #add-point:ON ACTION controlp INFIELD fmcvsite_desc name="construct.c.fmcvsite_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcvcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvcomp
            #add-point:ON ACTION controlp INFIELD fmcvcomp name="construct.c.fmcvcomp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef003 = 'Y' AND ooef001 IN",g_wc_cs_comp   #161006-00005#34   add
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvcomp  #顯示到畫面上
            NEXT FIELD fmcvcomp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcomp
            #add-point:BEFORE FIELD fmcvcomp name="construct.b.fmcvcomp"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvcomp_desc
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvcomp
            
            #add-point:AFTER FIELD fmcvcomp name="construct.a.fmcvcomp"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvcomp_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcomp_desc
            #add-point:BEFORE FIELD fmcvcomp_desc name="construct.b.fmcvcomp_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvcomp_desc
            
            #add-point:AFTER FIELD fmcvcomp_desc name="construct.a.fmcvcomp_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcvcomp_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvcomp_desc
            #add-point:ON ACTION controlp INFIELD fmcvcomp_desc name="construct.c.fmcvcomp_desc"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcvdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvdocno
            #add-point:ON ACTION controlp INFIELD fmcvdocno name="construct.c.fmcvdocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcvdocno_01()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvdocno  #顯示到畫面上
            NEXT FIELD fmcvdocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvdocno
            #add-point:BEFORE FIELD fmcvdocno name="construct.b.fmcvdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvdocno
            
            #add-point:AFTER FIELD fmcvdocno name="construct.a.fmcvdocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvdocdt
            #add-point:BEFORE FIELD fmcvdocdt name="construct.b.fmcvdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvdocdt
            
            #add-point:AFTER FIELD fmcvdocdt name="construct.a.fmcvdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcvdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvdocdt
            #add-point:ON ACTION controlp INFIELD fmcvdocdt name="construct.c.fmcvdocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvstus
            #add-point:BEFORE FIELD fmcvstus name="construct.b.fmcvstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvstus
            
            #add-point:AFTER FIELD fmcvstus name="construct.a.fmcvstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcvstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvstus
            #add-point:ON ACTION controlp INFIELD fmcvstus name="construct.c.fmcvstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcvownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvownid
            #add-point:ON ACTION controlp INFIELD fmcvownid name="construct.c.fmcvownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvownid  #顯示到畫面上
            NEXT FIELD fmcvownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvownid
            #add-point:BEFORE FIELD fmcvownid name="construct.b.fmcvownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvownid
            
            #add-point:AFTER FIELD fmcvownid name="construct.a.fmcvownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcvowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvowndp
            #add-point:ON ACTION controlp INFIELD fmcvowndp name="construct.c.fmcvowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvowndp  #顯示到畫面上
            NEXT FIELD fmcvowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvowndp
            #add-point:BEFORE FIELD fmcvowndp name="construct.b.fmcvowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvowndp
            
            #add-point:AFTER FIELD fmcvowndp name="construct.a.fmcvowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcvcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvcrtid
            #add-point:ON ACTION controlp INFIELD fmcvcrtid name="construct.c.fmcvcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvcrtid  #顯示到畫面上
            NEXT FIELD fmcvcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcrtid
            #add-point:BEFORE FIELD fmcvcrtid name="construct.b.fmcvcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvcrtid
            
            #add-point:AFTER FIELD fmcvcrtid name="construct.a.fmcvcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcvcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvcrtdp
            #add-point:ON ACTION controlp INFIELD fmcvcrtdp name="construct.c.fmcvcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvcrtdp  #顯示到畫面上
            NEXT FIELD fmcvcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcrtdp
            #add-point:BEFORE FIELD fmcvcrtdp name="construct.b.fmcvcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvcrtdp
            
            #add-point:AFTER FIELD fmcvcrtdp name="construct.a.fmcvcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcrtdt
            #add-point:BEFORE FIELD fmcvcrtdt name="construct.b.fmcvcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcvmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvmodid
            #add-point:ON ACTION controlp INFIELD fmcvmodid name="construct.c.fmcvmodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvmodid  #顯示到畫面上
            NEXT FIELD fmcvmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvmodid
            #add-point:BEFORE FIELD fmcvmodid name="construct.b.fmcvmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvmodid
            
            #add-point:AFTER FIELD fmcvmodid name="construct.a.fmcvmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvmoddt
            #add-point:BEFORE FIELD fmcvmoddt name="construct.b.fmcvmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcvcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvcnfid
            #add-point:ON ACTION controlp INFIELD fmcvcnfid name="construct.c.fmcvcnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcvcnfid  #顯示到畫面上
            NEXT FIELD fmcvcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcnfid
            #add-point:BEFORE FIELD fmcvcnfid name="construct.b.fmcvcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvcnfid
            
            #add-point:AFTER FIELD fmcvcnfid name="construct.a.fmcvcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcnfdt
            #add-point:BEFORE FIELD fmcvcnfdt name="construct.b.fmcvcnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON fmcwseq,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004,fmcw005,fmcw006, 
          fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcw007,fmcw008,fmcw009,fmcw016,fmcw021_desc, 
          fmcw022_desc,fmcw002_desc1,fmcw003_desc1,fmcw006_desc,fmcw010_desc,fmcw011_desc,fmcw012,fmcw013, 
          fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025
           FROM s_detail1[1].fmcwseq,s_detail1[1].fmcw021,s_detail1[1].fmcw022,s_detail1[1].fmcw001, 
               s_detail1[1].fmcw002,s_detail1[1].fmcw003,s_detail1[1].fmcw004,s_detail1[1].fmcw005,s_detail1[1].fmcw006, 
               s_detail1[1].fmcw010,s_detail1[1].fmcw011,s_detail1[1].fmcw017,s_detail1[1].fmcw018,s_detail1[1].fmcw023, 
               s_detail1[1].fmcw026,s_detail2[1].fmcw007,s_detail2[1].fmcw008,s_detail2[1].fmcw009,s_detail2[1].fmcw016, 
               s_detail3[1].fmcw021_desc,s_detail3[1].fmcw022_desc,s_detail3[1].fmcw002_desc1,s_detail3[1].fmcw003_desc1, 
               s_detail3[1].fmcw006_desc,s_detail3[1].fmcw010_desc,s_detail3[1].fmcw011_desc,s_detail3[1].fmcw012, 
               s_detail3[1].fmcw013,s_detail3[1].fmcw019,s_detail3[1].fmcw024,s_detail3[1].fmcw014,s_detail3[1].fmcw015, 
               s_detail3[1].fmcw020,s_detail3[1].fmcw025
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcwseq
            #add-point:BEFORE FIELD fmcwseq name="construct.b.page1.fmcwseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcwseq
            
            #add-point:AFTER FIELD fmcwseq name="construct.a.page1.fmcwseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcwseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcwseq
            #add-point:ON ACTION controlp INFIELD fmcwseq name="construct.c.page1.fmcwseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.fmcw021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw021
            #add-point:ON ACTION controlp INFIELD fmcw021 name="construct.c.page1.fmcw021"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where=" fmcs004 IN (",g_sql_bank,")" #160122-00001#38 add
            CALL q_fmcrdocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcw021  #顯示到畫面上
            NEXT FIELD fmcw021                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw021
            #add-point:BEFORE FIELD fmcw021 name="construct.b.page1.fmcw021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw021
            
            #add-point:AFTER FIELD fmcw021 name="construct.a.page1.fmcw021"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw022
            #add-point:BEFORE FIELD fmcw022 name="construct.b.page1.fmcw022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw022
            
            #add-point:AFTER FIELD fmcw022 name="construct.a.page1.fmcw022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw022
            #add-point:ON ACTION controlp INFIELD fmcw022 name="construct.c.page1.fmcw022"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.fmcw001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw001
            #add-point:ON ACTION controlp INFIELD fmcw001 name="construct.c.page1.fmcw001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #CALL q_ooef001()                       #161006-00005#34   mark
            CALL q_ooef001_33()                     #161006-00005#34   add            #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcw001  #顯示到畫面上
            NEXT FIELD fmcw001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw001
            #add-point:BEFORE FIELD fmcw001 name="construct.b.page1.fmcw001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw001
            
            #add-point:AFTER FIELD fmcw001 name="construct.a.page1.fmcw001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw002
            #add-point:ON ACTION controlp INFIELD fmcw002 name="construct.c.page1.fmcw002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcsdocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcw002  #顯示到畫面上
            NEXT FIELD fmcw002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw002
            #add-point:BEFORE FIELD fmcw002 name="construct.b.page1.fmcw002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw002
            
            #add-point:AFTER FIELD fmcw002 name="construct.a.page1.fmcw002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw003
            #add-point:ON ACTION controlp INFIELD fmcw003 name="construct.c.page1.fmcw003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcs002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcw003  #顯示到畫面上
            NEXT FIELD fmcw003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw003
            #add-point:BEFORE FIELD fmcw003 name="construct.b.page1.fmcw003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw003
            
            #add-point:AFTER FIELD fmcw003 name="construct.a.page1.fmcw003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw002_desc
            #add-point:BEFORE FIELD fmcw002_desc name="construct.b.page1.fmcw002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw002_desc
            
            #add-point:AFTER FIELD fmcw002_desc name="construct.a.page1.fmcw002_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw002_desc
            #add-point:ON ACTION controlp INFIELD fmcw002_desc name="construct.c.page1.fmcw002_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw003_desc
            #add-point:BEFORE FIELD fmcw003_desc name="construct.b.page1.fmcw003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw003_desc
            
            #add-point:AFTER FIELD fmcw003_desc name="construct.a.page1.fmcw003_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw003_desc
            #add-point:ON ACTION controlp INFIELD fmcw003_desc name="construct.c.page1.fmcw003_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw004
            #add-point:BEFORE FIELD fmcw004 name="construct.b.page1.fmcw004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw004
            
            #add-point:AFTER FIELD fmcw004 name="construct.a.page1.fmcw004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw004
            #add-point:ON ACTION controlp INFIELD fmcw004 name="construct.c.page1.fmcw004"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.fmcw005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw005
            #add-point:ON ACTION controlp INFIELD fmcw005 name="construct.c.page1.fmcw005"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooai001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcw005  #顯示到畫面上
            NEXT FIELD fmcw005                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw005
            #add-point:BEFORE FIELD fmcw005 name="construct.b.page1.fmcw005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw005
            
            #add-point:AFTER FIELD fmcw005 name="construct.a.page1.fmcw005"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw006
            #add-point:BEFORE FIELD fmcw006 name="construct.b.page1.fmcw006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw006
            
            #add-point:AFTER FIELD fmcw006 name="construct.a.page1.fmcw006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw006
            #add-point:ON ACTION controlp INFIELD fmcw006 name="construct.c.page1.fmcw006"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.fmcw010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw010
            #add-point:ON ACTION controlp INFIELD fmcw010 name="construct.c.page1.fmcw010"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_glaa003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcw010  #顯示到畫面上
            NEXT FIELD fmcw010                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw010
            #add-point:BEFORE FIELD fmcw010 name="construct.b.page1.fmcw010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw010
            
            #add-point:AFTER FIELD fmcw010 name="construct.a.page1.fmcw010"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw011
            #add-point:BEFORE FIELD fmcw011 name="construct.b.page1.fmcw011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw011
            
            #add-point:AFTER FIELD fmcw011 name="construct.a.page1.fmcw011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw011
            #add-point:ON ACTION controlp INFIELD fmcw011 name="construct.c.page1.fmcw011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw017
            #add-point:BEFORE FIELD fmcw017 name="construct.b.page1.fmcw017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw017
            
            #add-point:AFTER FIELD fmcw017 name="construct.a.page1.fmcw017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw017
            #add-point:ON ACTION controlp INFIELD fmcw017 name="construct.c.page1.fmcw017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw018
            #add-point:BEFORE FIELD fmcw018 name="construct.b.page1.fmcw018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw018
            
            #add-point:AFTER FIELD fmcw018 name="construct.a.page1.fmcw018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw018
            #add-point:ON ACTION controlp INFIELD fmcw018 name="construct.c.page1.fmcw018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw023
            #add-point:BEFORE FIELD fmcw023 name="construct.b.page1.fmcw023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw023
            
            #add-point:AFTER FIELD fmcw023 name="construct.a.page1.fmcw023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw023
            #add-point:ON ACTION controlp INFIELD fmcw023 name="construct.c.page1.fmcw023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw026
            #add-point:BEFORE FIELD fmcw026 name="construct.b.page1.fmcw026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw026
            
            #add-point:AFTER FIELD fmcw026 name="construct.a.page1.fmcw026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcw026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw026
            #add-point:ON ACTION controlp INFIELD fmcw026 name="construct.c.page1.fmcw026"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.fmcw007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw007
            #add-point:ON ACTION controlp INFIELD fmcw007 name="construct.c.page2.fmcw007"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
#            CALL q_nmaa001_02()                   #呼叫開窗    #160122-00001#38 mark
            LET g_qryparam.where=" nmas002 IN (",g_sql_bank,")" #160122-00001#38 add
            CALL q_fmcw007()                       #呼叫開窗     #160122-00001#38 add
            DISPLAY g_qryparam.return1 TO fmcw007  #顯示到畫面上
            NEXT FIELD fmcw007                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw007
            #add-point:BEFORE FIELD fmcw007 name="construct.b.page2.fmcw007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw007
            
            #add-point:AFTER FIELD fmcw007 name="construct.a.page2.fmcw007"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw008
            #add-point:BEFORE FIELD fmcw008 name="construct.b.page2.fmcw008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw008
            
            #add-point:AFTER FIELD fmcw008 name="construct.a.page2.fmcw008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcw008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw008
            #add-point:ON ACTION controlp INFIELD fmcw008 name="construct.c.page2.fmcw008"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page2.fmcw009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw009
            #add-point:ON ACTION controlp INFIELD fmcw009 name="construct.c.page2.fmcw009"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_nmaj001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcw009  #顯示到畫面上
            NEXT FIELD fmcw009                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw009
            #add-point:BEFORE FIELD fmcw009 name="construct.b.page2.fmcw009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw009
            
            #add-point:AFTER FIELD fmcw009 name="construct.a.page2.fmcw009"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw016
            #add-point:BEFORE FIELD fmcw016 name="construct.b.page2.fmcw016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw016
            
            #add-point:AFTER FIELD fmcw016 name="construct.a.page2.fmcw016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcw016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw016
            #add-point:ON ACTION controlp INFIELD fmcw016 name="construct.c.page2.fmcw016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw021_desc
            #add-point:BEFORE FIELD fmcw021_desc name="construct.b.page3.fmcw021_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw021_desc
            
            #add-point:AFTER FIELD fmcw021_desc name="construct.a.page3.fmcw021_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw021_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw021_desc
            #add-point:ON ACTION controlp INFIELD fmcw021_desc name="construct.c.page3.fmcw021_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw022_desc
            #add-point:BEFORE FIELD fmcw022_desc name="construct.b.page3.fmcw022_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw022_desc
            
            #add-point:AFTER FIELD fmcw022_desc name="construct.a.page3.fmcw022_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw022_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw022_desc
            #add-point:ON ACTION controlp INFIELD fmcw022_desc name="construct.c.page3.fmcw022_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw002_desc1
            #add-point:BEFORE FIELD fmcw002_desc1 name="construct.b.page3.fmcw002_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw002_desc1
            
            #add-point:AFTER FIELD fmcw002_desc1 name="construct.a.page3.fmcw002_desc1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw002_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw002_desc1
            #add-point:ON ACTION controlp INFIELD fmcw002_desc1 name="construct.c.page3.fmcw002_desc1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw003_desc1
            #add-point:BEFORE FIELD fmcw003_desc1 name="construct.b.page3.fmcw003_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw003_desc1
            
            #add-point:AFTER FIELD fmcw003_desc1 name="construct.a.page3.fmcw003_desc1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw003_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw003_desc1
            #add-point:ON ACTION controlp INFIELD fmcw003_desc1 name="construct.c.page3.fmcw003_desc1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw006_desc
            #add-point:BEFORE FIELD fmcw006_desc name="construct.b.page3.fmcw006_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw006_desc
            
            #add-point:AFTER FIELD fmcw006_desc name="construct.a.page3.fmcw006_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw006_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw006_desc
            #add-point:ON ACTION controlp INFIELD fmcw006_desc name="construct.c.page3.fmcw006_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw010_desc
            #add-point:BEFORE FIELD fmcw010_desc name="construct.b.page3.fmcw010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw010_desc
            
            #add-point:AFTER FIELD fmcw010_desc name="construct.a.page3.fmcw010_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw010_desc
            #add-point:ON ACTION controlp INFIELD fmcw010_desc name="construct.c.page3.fmcw010_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw011_desc
            #add-point:BEFORE FIELD fmcw011_desc name="construct.b.page3.fmcw011_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw011_desc
            
            #add-point:AFTER FIELD fmcw011_desc name="construct.a.page3.fmcw011_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw011_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw011_desc
            #add-point:ON ACTION controlp INFIELD fmcw011_desc name="construct.c.page3.fmcw011_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw012
            #add-point:BEFORE FIELD fmcw012 name="construct.b.page3.fmcw012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw012
            
            #add-point:AFTER FIELD fmcw012 name="construct.a.page3.fmcw012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw012
            #add-point:ON ACTION controlp INFIELD fmcw012 name="construct.c.page3.fmcw012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw013
            #add-point:BEFORE FIELD fmcw013 name="construct.b.page3.fmcw013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw013
            
            #add-point:AFTER FIELD fmcw013 name="construct.a.page3.fmcw013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw013
            #add-point:ON ACTION controlp INFIELD fmcw013 name="construct.c.page3.fmcw013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw019
            #add-point:BEFORE FIELD fmcw019 name="construct.b.page3.fmcw019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw019
            
            #add-point:AFTER FIELD fmcw019 name="construct.a.page3.fmcw019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw019
            #add-point:ON ACTION controlp INFIELD fmcw019 name="construct.c.page3.fmcw019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw024
            #add-point:BEFORE FIELD fmcw024 name="construct.b.page3.fmcw024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw024
            
            #add-point:AFTER FIELD fmcw024 name="construct.a.page3.fmcw024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw024
            #add-point:ON ACTION controlp INFIELD fmcw024 name="construct.c.page3.fmcw024"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw014
            #add-point:BEFORE FIELD fmcw014 name="construct.b.page3.fmcw014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw014
            
            #add-point:AFTER FIELD fmcw014 name="construct.a.page3.fmcw014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw014
            #add-point:ON ACTION controlp INFIELD fmcw014 name="construct.c.page3.fmcw014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw015
            #add-point:BEFORE FIELD fmcw015 name="construct.b.page3.fmcw015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw015
            
            #add-point:AFTER FIELD fmcw015 name="construct.a.page3.fmcw015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw015
            #add-point:ON ACTION controlp INFIELD fmcw015 name="construct.c.page3.fmcw015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw020
            #add-point:BEFORE FIELD fmcw020 name="construct.b.page3.fmcw020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw020
            
            #add-point:AFTER FIELD fmcw020 name="construct.a.page3.fmcw020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw020
            #add-point:ON ACTION controlp INFIELD fmcw020 name="construct.c.page3.fmcw020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw025
            #add-point:BEFORE FIELD fmcw025 name="construct.b.page3.fmcw025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw025
            
            #add-point:AFTER FIELD fmcw025 name="construct.a.page3.fmcw025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page3.fmcw025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw025
            #add-point:ON ACTION controlp INFIELD fmcw025 name="construct.c.page3.fmcw025"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "fmcv_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "fmcw_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION afmt170_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_fmcw_d.clear()
   CALL g_fmcw2_d.clear()
   CALL g_fmcw3_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL afmt170_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL afmt170_browser_fill("")
      CALL afmt170_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
   LET g_detail_idx_list[3] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL afmt170_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL afmt170_fetch("F") 
      #顯示單身筆數
      CALL afmt170_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION afmt170_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_fmcv_m.fmcvdocno = g_browser[g_current_idx].b_fmcvdocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE afmt170_master_referesh USING g_fmcv_m.fmcvdocno INTO g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp, 
       g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt,g_fmcv_m.fmcvownid_desc,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid_desc, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvcnfid_desc
   
   #遮罩相關處理
   LET g_fmcv_m_mask_o.* =  g_fmcv_m.*
   CALL afmt170_fmcv_t_mask()
   LET g_fmcv_m_mask_n.* =  g_fmcv_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt170_set_act_visible()   
   CALL afmt170_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   CALL afmt170_fmcvsite()
   # N未確認/D抽單/R已拒絕允許修改
   IF g_fmcv_m.fmcvstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_fmcv_m_t.* = g_fmcv_m.*
   LET g_fmcv_m_o.* = g_fmcv_m.*
   
   LET g_data_owner = g_fmcv_m.fmcvownid      
   LET g_data_dept  = g_fmcv_m.fmcvowndp
   
   #重新顯示   
   CALL afmt170_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.insert" >}
#+ 資料新增
PRIVATE FUNCTION afmt170_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   DEFINE l_success LIKE type_t.num5
   DEFINE l_errno   LIKE gzze_t.gzze001
   DEFINE l_ld      LIKE glaa_t.glaald
   DEFINE l_glaald  LIKE glaa_t.glaald   #160302-00030#3
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
 
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_fmcw_d.clear()   
   CALL g_fmcw2_d.clear()  
   CALL g_fmcw3_d.clear()  
 
 
   INITIALIZE g_fmcv_m.* TO NULL             #DEFAULT 設定
   
   LET g_fmcvdocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmcv_m.fmcvownid = g_user
      LET g_fmcv_m.fmcvowndp = g_dept
      LET g_fmcv_m.fmcvcrtid = g_user
      LET g_fmcv_m.fmcvcrtdp = g_dept 
      LET g_fmcv_m.fmcvcrtdt = cl_get_current()
      LET g_fmcv_m.fmcvmodid = g_user
      LET g_fmcv_m.fmcvmoddt = cl_get_current()
      LET g_fmcv_m.fmcvstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      LET g_fmcv_m.fmcvsite = g_site
      CALL s_fin_orga_get_comp_ld(g_fmcv_m.fmcvsite) RETURNING l_success,l_errno,g_fmcv_m.fmcvcomp,l_ld
      LET g_fmcv_m.fmcvsite_desc = s_desc_get_department_desc(g_fmcv_m.fmcvsite)
      LET g_fmcv_m.fmcvcomp_desc = s_desc_get_department_desc(g_fmcv_m.fmcvcomp)
      CALL afmt170_fmcw_visible()    #151202-00020#2
      LET g_fmcv_m.fmcvdocdt = g_today
     #160302-00030#1 Add  ---(S)---
      SELECT glaald INTO l_glaald FROM glaa_t WHERE glaaent = g_enterprise
         AND glaa014 = 'Y'
         AND glaacomp = g_fmcv_m.fmcvcomp
      CALL afmt170_OtherCurr_dis(l_glaald)
     #160302-00030#1 Add  ---(E)---
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_fmcv_m_t.* = g_fmcv_m.*
      LET g_fmcv_m_o.* = g_fmcv_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmcv_m.fmcvstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL afmt170_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_fmcv_m.* TO NULL
         INITIALIZE g_fmcw_d TO NULL
         INITIALIZE g_fmcw2_d TO NULL
         INITIALIZE g_fmcw3_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL afmt170_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_fmcw_d.clear()
      #CALL g_fmcw2_d.clear()
      #CALL g_fmcw3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt170_set_act_visible()   
   CALL afmt170_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmcvent = " ||g_enterprise|| " AND",
                      " fmcvdocno = '", g_fmcv_m.fmcvdocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt170_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE afmt170_cl
   
   CALL afmt170_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE afmt170_master_referesh USING g_fmcv_m.fmcvdocno INTO g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp, 
       g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt,g_fmcv_m.fmcvownid_desc,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid_desc, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvcnfid_desc
   
   
   #遮罩相關處理
   LET g_fmcv_m_mask_o.* =  g_fmcv_m.*
   CALL afmt170_fmcv_t_mask()
   LET g_fmcv_m_mask_n.* =  g_fmcv_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmcv_m.fmcvsite,g_fmcv_m.fmcvsite_desc,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvcomp_desc, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvownid_desc, 
       g_fmcv_m.fmcvowndp,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtid_desc,g_fmcv_m.fmcvcrtdp, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfid_desc,g_fmcv_m.fmcvcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_fmcv_m.fmcvownid      
   LET g_data_dept  = g_fmcv_m.fmcvowndp
   
   #功能已完成,通報訊息中心
   CALL afmt170_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.modify" >}
#+ 資料修改
PRIVATE FUNCTION afmt170_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   DEFINE l_success  LIKE type_t.num5
   #end add-point
   
   #保存單頭舊值
   LET g_fmcv_m_t.* = g_fmcv_m.*
   LET g_fmcv_m_o.* = g_fmcv_m.*
   
   IF g_fmcv_m.fmcvdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
   CALL s_transaction_begin()
   
   OPEN afmt170_cl USING g_enterprise,g_fmcv_m.fmcvdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt170_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt170_master_referesh USING g_fmcv_m.fmcvdocno INTO g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp, 
       g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt,g_fmcv_m.fmcvownid_desc,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid_desc, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvcnfid_desc
   
   #檢查是否允許此動作
   IF NOT afmt170_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmcv_m_mask_o.* =  g_fmcv_m.*
   CALL afmt170_fmcv_t_mask()
   LET g_fmcv_m_mask_n.* =  g_fmcv_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL afmt170_show()
   #add-point:modify段show之後 name="modify.after_show"
   CALL afmt170_fmcvsite()
   CALL s_fin_date_close_chk(g_glaald,g_fmcv_m.fmcvcomp,'ANM',g_fmcv_m.fmcvdocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_fmcv_m.fmcvmodid = g_user 
LET g_fmcv_m.fmcvmoddt = cl_get_current()
LET g_fmcv_m.fmcvmodid_desc = cl_get_username(g_fmcv_m.fmcvmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_fmcv_m.fmcvstus MATCHES "[DR]" THEN 
         LET g_fmcv_m.fmcvstus = "N"
      END IF
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL afmt170_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE fmcv_t SET (fmcvmodid,fmcvmoddt) = (g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt)
          WHERE fmcvent = g_enterprise AND fmcvdocno = g_fmcvdocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_fmcv_m.* = g_fmcv_m_t.*
            CALL afmt170_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_fmcv_m.fmcvdocno != g_fmcv_m_t.fmcvdocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE fmcw_t SET fmcwdocno = g_fmcv_m.fmcvdocno
 
          WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m_t.fmcvdocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "fmcw_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt170_set_act_visible()   
   CALL afmt170_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " fmcvent = " ||g_enterprise|| " AND",
                      " fmcvdocno = '", g_fmcv_m.fmcvdocno, "' "
 
   #填到對應位置
   CALL afmt170_browser_fill("")
 
   CLOSE afmt170_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt170_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="afmt170.input" >}
#+ 資料輸入
PRIVATE FUNCTION afmt170_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_fmcz009              LIKE fmcz_t.fmcz009
   DEFINE l_fmcz010              LIKE fmcz_t.fmcz010
   DEFINE l_fmcw006              LIKE fmcw_t.fmcw006
   DEFINE l_fmcw017              LIKE fmcw_t.fmcw017
   DEFINE l_sumfmcw006           LIKE fmcw_t.fmcw006
   DEFINE l_sumfmcs008           LIKE fmcs_t.fmcs008
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_errno                LIKE gzze_t.gzze001
   DEFINE l_ld                   LIKE glaa_t.glaald
   DEFINE l_ooef004              LIKE ooef_t.ooef004
   DEFINE l_glaa005              LIKE glaa_t.glaa005
   DEFINE l_b1                   LIKE fmcw_t.fmcw017
   DEFINE l_b2                   LIKE fmcw_t.fmcw006
   DEFINE l_glaa013              LIKE glaa_t.glaa013
   DEFINE l_fmcs017_sum          LIKE fmcs_t.fmcs017   #151202-00020#2
   DEFINE l_glaald               LIKE glaa_t.glaald    #160302-00030#3
   DEFINE l_fmcs004              LIKE fmcs_t.fmcs004   #160122-00001#38 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
 
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmcv_m.fmcvsite,g_fmcv_m.fmcvsite_desc,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvcomp_desc, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvownid_desc, 
       g_fmcv_m.fmcvowndp,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtid_desc,g_fmcv_m.fmcvcrtdp, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfid_desc,g_fmcv_m.fmcvcnfdt
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT fmcwseq,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004,fmcw005,fmcw006, 
       fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcwseq,fmcw007,fmcw008,fmcw009,fmcw016,fmcwseq, 
       fmcw012,fmcw013,fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025 FROM fmcw_t WHERE fmcwent=? AND  
       fmcwdocno=? AND fmcwseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt170_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL afmt170_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL afmt170_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus 
 
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="afmt170.input.head" >}
      #單頭段
      INPUT BY NAME g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus  
 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN afmt170_cl USING g_enterprise,g_fmcv_m.fmcvdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt170_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afmt170_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL afmt170_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL afmt170_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvsite
            
            #add-point:AFTER FIELD fmcvsite name="input.a.fmcvsite"
           IF NOT cl_null(g_fmcv_m.fmcvsite) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmcv_m.fmcvsite

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_42") THEN
                  #檢查成功時後續處理
                  CALL s_fin_orga_get_comp_ld(g_fmcv_m.fmcvsite) RETURNING l_success,l_errno,g_fmcv_m.fmcvcomp,l_ld     
                  CALL s_fin_account_center_sons_query('6',g_fmcv_m.fmcvsite,g_today,'')
                  CALL s_fin_account_center_comp_str()  RETURNING g_fmcvcomp_str
                  CALL s_fin_get_wc_str(g_fmcvcomp_str) RETURNING g_fmcvcomp_str
                  CALL afmt170_fmcw_visible()    #151202-00020#2
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF

              #160302-00030#1 Add  ---(S)---
               SELECT glaald INTO l_glaald FROM glaa_t WHERE glaaent = g_enterprise
                  AND glaa014 = 'Y'
                  AND glaacomp = g_fmcv_m.fmcvcomp
               CALL afmt170_OtherCurr_dis(l_glaald)
              #160302-00030#1 Add  ---(E)---
            END IF 
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvsite_desc

            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvsite
            #add-point:BEFORE FIELD fmcvsite name="input.b.fmcvsite"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvsite_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcvsite
            #add-point:ON CHANGE fmcvsite name="input.g.fmcvsite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvcomp
            
            #add-point:AFTER FIELD fmcvcomp name="input.a.fmcvcomp"
            IF NOT cl_null(g_fmcv_m.fmcvcomp) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
              #LET g_chkparam.arg1 = g_fmcv_m.fmcvcomp #161028-00032#1 mark
               LET g_chkparam.arg1 = g_fmcv_m.fmcvsite #161028-00032#1 add
               LET g_chkparam.arg2 = g_fmcv_m.fmcvcomp #161028-00032#1 add
               #160318-00025#25  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aoo-00095:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#25  by 07900 --add-end   
               #呼叫檢查存在並帶值的library
              #IF cl_chk_exist("v_ooef001_15") THEN #161028-00032#1 mark
               IF cl_chk_exist("v_ooef001_12") THEN #161028-00032#1 add
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
               CALL afmt170_fmcw_visible()    #151202-00020#2

              #160302-00030#1 Add  ---(S)---
               SELECT glaald INTO l_glaald FROM glaa_t WHERE glaaent = g_enterprise
                  AND glaa014 = 'Y'
                  AND glaacomp = g_fmcv_m.fmcvcomp
               CALL afmt170_OtherCurr_dis(l_glaald)
              #160302-00030#1 Add  ---(E)---
            END IF 
            #161028-00032#1 --s add
            #g_wc_cs_comp有無存在
            IF NOT cl_null(g_fmcv_m.fmcvcomp)THEN
               CALL s_fin_account_center_sons_query('3',g_fmcv_m.fmcvsite,g_today,'1')
               CALL s_fin_account_center_comp_str()RETURNING g_wc_cs_comp
               CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
               IF s_chr_get_index_of(g_wc_cs_comp,g_fmcv_m.fmcvcomp,1) = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aap-00034'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_fmcv_m.fmcvcomp = g_fmcv_m_t.fmcvcomp
                  LET g_fmcv_m.fmcvcomp_desc = s_desc_get_department_desc(g_fmcv_m.fmcvcomp)
                  DISPLAY BY NAME g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvcomp_desc
                  NEXT FIELD CURRENT
               END IF
            END IF
            #161028-00032#1 --e add

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvcomp_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvcomp
            #add-point:BEFORE FIELD fmcvcomp name="input.b.fmcvcomp"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcv_m.fmcvcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmcv_m.fmcvcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcv_m.fmcvcomp_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcvcomp
            #add-point:ON CHANGE fmcvcomp name="input.g.fmcvcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvdocno
            #add-point:BEFORE FIELD fmcvdocno name="input.b.fmcvdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvdocno
            
            #add-point:AFTER FIELD fmcvdocno name="input.a.fmcvdocno"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_fmcv_m.fmcvdocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_fmcv_m.fmcvdocno != g_fmcvdocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmcv_t WHERE "||"fmcvent = '" ||g_enterprise|| "' AND "||"fmcvdocno = '"||g_fmcv_m.fmcvdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcvdocno
            #add-point:ON CHANGE fmcvdocno name="input.g.fmcvdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvdocdt
            #add-point:BEFORE FIELD fmcvdocdt name="input.b.fmcvdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvdocdt
            
            #add-point:AFTER FIELD fmcvdocdt name="input.a.fmcvdocdt"
             IF NOT cl_null(g_fmcv_m.fmcvdocdt) THEN
               #依据对应的主账套编码，抓取对应关账日期
               CALL afmt170_fmcvsite()
               SELECT glaa013 INTO l_glaa013 FROM glaa_t
                WHERE glaaent = g_enterprise
                  AND glaald = g_glaald
               IF g_fmcv_m.fmcvdocdt <= l_glaa013 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00160'
                  LET g_errparam.extend = g_fmcv_m.fmcvdocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_fmcv_m.fmcvdocdt = g_fmcv_m_t.fmcvdocdt 
                  NEXT FIELD fmcvdocdt
               END IF
            END IF           {#ADP版次:1#}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcvdocdt
            #add-point:ON CHANGE fmcvdocdt name="input.g.fmcvdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcvstus
            #add-point:BEFORE FIELD fmcvstus name="input.b.fmcvstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcvstus
            
            #add-point:AFTER FIELD fmcvstus name="input.a.fmcvstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcvstus
            #add-point:ON CHANGE fmcvstus name="input.g.fmcvstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.fmcvsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvsite
            #add-point:ON ACTION controlp INFIELD fmcvsite name="input.c.fmcvsite"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcv_m.fmcvsite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_ooef001_33()                                #呼叫開窗

            LET g_fmcv_m.fmcvsite = g_qryparam.return1              

            DISPLAY g_fmcv_m.fmcvsite TO fmcvsite              #

            NEXT FIELD fmcvsite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.fmcvcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvcomp
            #add-point:ON ACTION controlp INFIELD fmcvcomp name="input.c.fmcvcomp"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcv_m.fmcvcomp             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_fmcv_m.fmcvsite #s


            CALL q_fmcvcomp_01()                                #呼叫開窗

            LET g_fmcv_m.fmcvcomp = g_qryparam.return1              

            DISPLAY g_fmcv_m.fmcvcomp TO fmcvcomp              #

            NEXT FIELD fmcvcomp                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.fmcvdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvdocno
            #add-point:ON ACTION controlp INFIELD fmcvdocno name="input.c.fmcvdocno"
             INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcv_m.fmcvdocno            #給予default值

            #給予arg
            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooef001 = g_fmcv_m.fmcvcomp
               AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 #
            LET g_qryparam.arg2 = g_prog #

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_fmcv_m.fmcvdocno = g_qryparam.return1              

            DISPLAY g_fmcv_m.fmcvdocno TO fmcvdocno              #

            NEXT FIELD fmcvdocno                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.fmcvdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvdocdt
            #add-point:ON ACTION controlp INFIELD fmcvdocdt name="input.c.fmcvdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmcvstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcvstus
            #add-point:ON ACTION controlp INFIELD fmcvstus name="input.c.fmcvstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_fmcv_m.fmcvdocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL s_aooi200_gen_docno(g_site,g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_prog) RETURNING l_success,g_fmcv_m.fmcvdocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_fmcv_m.fmcvdocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD fmcvdocno         
               END IF
               DISPLAY BY NAME g_fmcv_m.fmcvdocno
               #end add-point
               
               INSERT INTO fmcv_t (fmcvent,fmcvsite,fmcvcomp,fmcvdocno,fmcvdocdt,fmcvstus,fmcvownid, 
                   fmcvowndp,fmcvcrtid,fmcvcrtdp,fmcvcrtdt,fmcvmodid,fmcvmoddt,fmcvcnfid,fmcvcnfdt)
               VALUES (g_enterprise,g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt, 
                   g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp,g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp, 
                   g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt,g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt)  
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_fmcv_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL afmt170_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL afmt170_b_fill()
                  CALL afmt170_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL afmt170_fmcv_t_mask_restore('restore_mask_o')
               
               UPDATE fmcv_t SET (fmcvsite,fmcvcomp,fmcvdocno,fmcvdocdt,fmcvstus,fmcvownid,fmcvowndp, 
                   fmcvcrtid,fmcvcrtdp,fmcvcrtdt,fmcvmodid,fmcvmoddt,fmcvcnfid,fmcvcnfdt) = (g_fmcv_m.fmcvsite, 
                   g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid, 
                   g_fmcv_m.fmcvowndp,g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid, 
                   g_fmcv_m.fmcvmoddt,g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt)
                WHERE fmcvent = g_enterprise AND fmcvdocno = g_fmcvdocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "fmcv_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL afmt170_fmcv_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_fmcv_m_t)
               LET g_log2 = util.JSON.stringify(g_fmcv_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="afmt170.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_fmcw_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_fmcw_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL afmt170_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2','3',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_fmcw_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt170_cl USING g_enterprise,g_fmcv_m.fmcvdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt170_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afmt170_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmcw_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmcw_d[l_ac].fmcwseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_fmcw_d_t.* = g_fmcw_d[l_ac].*  #BACKUP
               LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #BACKUP
               CALL afmt170_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL afmt170_set_no_entry_b(l_cmd)
               IF NOT afmt170_lock_b("fmcw_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt170_bcl INTO g_fmcw_d[l_ac].fmcwseq,g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022, 
                      g_fmcw_d[l_ac].fmcw001,g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw004, 
                      g_fmcw_d[l_ac].fmcw005,g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw011, 
                      g_fmcw_d[l_ac].fmcw017,g_fmcw_d[l_ac].fmcw018,g_fmcw_d[l_ac].fmcw023,g_fmcw_d[l_ac].fmcw026, 
                      g_fmcw2_d[l_ac].fmcwseq,g_fmcw2_d[l_ac].fmcw007,g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009, 
                      g_fmcw2_d[l_ac].fmcw016,g_fmcw3_d[l_ac].fmcwseq,g_fmcw3_d[l_ac].fmcw012,g_fmcw3_d[l_ac].fmcw013, 
                      g_fmcw3_d[l_ac].fmcw019,g_fmcw3_d[l_ac].fmcw024,g_fmcw3_d[l_ac].fmcw014,g_fmcw3_d[l_ac].fmcw015, 
                      g_fmcw3_d[l_ac].fmcw020,g_fmcw3_d[l_ac].fmcw025
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_fmcw_d_t.fmcwseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmcw_d_mask_o[l_ac].* =  g_fmcw_d[l_ac].*
                  CALL afmt170_fmcw_t_mask()
                  LET g_fmcw_d_mask_n[l_ac].* =  g_fmcw_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt170_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
 
            #其他table進行lock
            
 
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmcw_d[l_ac].* TO NULL 
            INITIALIZE g_fmcw_d_t.* TO NULL 
            INITIALIZE g_fmcw_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_fmcw_d[l_ac].fmcw022 = "0"
      LET g_fmcw_d[l_ac].fmcw006 = "0"
      LET g_fmcw_d[l_ac].fmcw011 = "0"
      LET g_fmcw_d[l_ac].fmcw017 = "0"
      LET g_fmcw_d[l_ac].fmcw023 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            LET g_fmcw_d[l_ac].fmcw022 = ''
            LET g_fmcw_d[l_ac].fmcw001 = g_site
            LET g_fmcw2_d[l_ac].fmcw008 = "2"
            LET g_fmcw_d[l_ac].fmcw004 = "2"
            #end add-point
            LET g_fmcw_d_t.* = g_fmcw_d[l_ac].*     #新輸入資料
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt170_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL afmt170_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmcw_d[li_reproduce_target].* = g_fmcw_d[li_reproduce].*
               LET g_fmcw2_d[li_reproduce_target].* = g_fmcw2_d[li_reproduce].*
               LET g_fmcw3_d[li_reproduce_target].* = g_fmcw3_d[li_reproduce].*
 
               LET g_fmcw_d[li_reproduce_target].fmcwseq = NULL
 
            END IF
            
 
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            SELECT MAX(fmcwseq)+1 INTO g_fmcw_d[l_ac].fmcwseq FROM fmcw_t
               WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
            IF cl_null(g_fmcw_d[l_ac].fmcwseq) OR g_fmcw_d[l_ac].fmcwseq = 0 THEN
               LET g_fmcw_d[l_ac].fmcwseq = 1
            END IF 
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmcw_t 
             WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
 
               AND fmcwseq = g_fmcw_d[l_ac].fmcwseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcv_m.fmcvdocno
               LET gs_keys[2] = g_fmcw_d[g_detail_idx].fmcwseq
               CALL afmt170_insert_b('fmcw_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_fmcw_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt170_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmcv_m.fmcvdocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_fmcw_d_t.fmcwseq
 
            
               #刪除同層單身
               IF NOT afmt170_delete_b('fmcw_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt170_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt170_key_delete_b(gs_keys,'fmcw_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt170_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt170_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_fmcw_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmcw_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw021
            
            #add-point:AFTER FIELD fmcw021 name="input.a.page1.fmcw021"
            #151202-00020#2--add--str
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw021) THEN
               CALL afmt170_fmcw021_chk(g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_fmcw_d[l_ac].fmcw021 
                  LET g_errparam.code   = g_errno
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               #160122-00001#38--add--str--
               IF NOT cl_null(g_fmcw_d[l_ac].fmcw021) AND NOT cl_null(g_fmcw_d[l_ac].fmcw022) THEN 
                  #账户
                  SELECT fmcs004 INTO l_fmcs004
                    FROM fmcs_t
                   WHERE fmcsent = g_enterprise 
                     AND fmcsdocno = g_fmcw_d[l_ac].fmcw021 
                     AND fmcsseq = g_fmcw_d[l_ac].fmcw022
                  IF NOT s_anmi120_nmll002_chk(l_fmcs004,g_user) THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_fmcw_d[l_ac].fmcw021,'|',g_fmcw_d[l_ac].fmcw022,'|',l_fmcs004
                     LET g_errparam.code   = 'anm-00399' 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #160122-00001#38--add--end
               CALL afmt170_fmcw021_ref(g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022)
            END IF
            #151202-00020#2--add--end
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw021
            #add-point:BEFORE FIELD fmcw021 name="input.b.page1.fmcw021"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw021
            #add-point:ON CHANGE fmcw021 name="input.g.page1.fmcw021"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw022
            
            #add-point:AFTER FIELD fmcw022 name="input.a.page1.fmcw022"
            #151202-00020#2--add--str
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw021) AND NOT cl_null(g_fmcw_d[l_ac].fmcw022) THEN
               CALL afmt170_fmcw021_chk(g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_fmcw_d[l_ac].fmcw021||g_fmcw_d[l_ac].fmcw022
                  LET g_errparam.code   = g_errno 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               #160122-00001#38--add--str--
               #账户
               SELECT fmcs004 INTO l_fmcs004
                 FROM fmcs_t
                WHERE fmcsent = g_enterprise 
                  AND fmcsdocno = g_fmcw_d[l_ac].fmcw021 
                  AND fmcsseq = g_fmcw_d[l_ac].fmcw022
               IF NOT s_anmi120_nmll002_chk(l_fmcs004,g_user) THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_fmcw_d[l_ac].fmcw021,'|',g_fmcw_d[l_ac].fmcw022,'|',l_fmcs004
                  LET g_errparam.code   = 'anm-00399' 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               #160122-00001#38--add--end
               CALL afmt170_fmcw021_ref(g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022)
            END IF
            #151202-00020#2--add--end
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw022
            #add-point:BEFORE FIELD fmcw022 name="input.b.page1.fmcw022"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw022
            #add-point:ON CHANGE fmcw022 name="input.g.page1.fmcw022"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw001
            
            #add-point:AFTER FIELD fmcw001 name="input.a.page1.fmcw001"
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw001) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmcw_d[l_ac].fmcw001
               LET g_chkparam.arg2 = g_fmcv_m.fmcvcomp
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_43") THEN
                  #檢查成功時後續處理
                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 
            


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw001
            #add-point:BEFORE FIELD fmcw001 name="input.b.page1.fmcw001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw001
            #add-point:ON CHANGE fmcw001 name="input.g.page1.fmcw001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw002
            
            #add-point:AFTER FIELD fmcw002 name="input.a.page1.fmcw002"
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw002) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = g_fmcw_d[l_ac].fmcw002
               LET g_chkparam.arg3 = g_fmcw_d[l_ac].fmcw001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_fmcs001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF 
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw002
            CALL ap_ref_array2(g_ref_fields,"SELECT fmcj002 FROM fmcj_t WHERE fmcjent='"||g_enterprise||"' AND fmcjdocno = ? ","") RETURNING g_rtn_fields
            LET g_fmcw_d[l_ac].fmcw002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw002_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw002
            #LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw001
            #CALL ap_ref_array2(g_ref_fields,"SELECT fmaj006 FROM fmaj_t WHERE fmajent='"||g_enterprise||"' AND fmaj001 = ? AND fmaj002=?  ","") RETURNING g_rtn_fields
            #LET g_fmcw_d[l_ac].fmcw002_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_fmcw_d[l_ac].fmcw002_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw002
            #add-point:BEFORE FIELD fmcw002 name="input.b.page1.fmcw002"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw002
            CALL ap_ref_array2(g_ref_fields,"SELECT fmcj002 FROM fmcj_t WHERE fmcjent='"||g_enterprise||"' AND fmcjdocno = ? ","") RETURNING g_rtn_fields
            LET g_fmcw_d[l_ac].fmcw002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw002_desc
            
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw002
            #LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw001
            #CALL ap_ref_array2(g_ref_fields,"SELECT fmaj006 FROM fmaj_t WHERE fmajent='"||g_enterprise||"' AND fmaj001 = ? AND fmaj002=?  ","") RETURNING g_rtn_fields
            #LET g_fmcw_d[l_ac].fmcw002_desc = '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_fmcw_d[l_ac].fmcw002_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw002
            #add-point:ON CHANGE fmcw002 name="input.g.page1.fmcw002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw003
            
            #add-point:AFTER FIELD fmcw003 name="input.a.page1.fmcw003"
               IF NOT cl_null(g_fmcw_d[l_ac].fmcw003) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg3 = g_fmcw_d[l_ac].fmcw003
               LET g_chkparam.arg2 = g_fmcw_d[l_ac].fmcw001
               LET g_chkparam.arg1 = g_fmcw_d[l_ac].fmcw002
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_fmcs002") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 
            
            
#            #由 项次 带出 贷款账户
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw003
#            LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
#            LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
#            CALL ap_ref_array2(g_ref_fields,"SELECT fmcs004 FROM fmcs_t WHERE fmcsent='"||g_enterprise||"' AND fmcs002=? AND fmcs001=? AND fmcs003=? ","") RETURNING g_rtn_fields
#            LET g_fmcw_d[l_ac].fmcw003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw003_desc
            
#            #由 项次 带出 币别
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw003
#            LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
#            LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
#            CALL ap_ref_array2(g_ref_fields,"SELECT fmcs007 FROM fmcs_t WHERE fmcsent='"||g_enterprise||"' AND fmcs002=? AND fmcs001=? AND fmcs003=? ","") RETURNING g_rtn_fields
#            LET g_fmcw_d[l_ac].fmcw005= '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005
            
            #由 项次 带出 贷款账户
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw002
            #LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
            #LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
            CALL ap_ref_array2(g_ref_fields,"SELECT fmck003 FROM fmck_t WHERE fmckent='"||g_enterprise||"' AND fmckdocno=? ","") RETURNING g_rtn_fields
            LET g_fmcw_d[l_ac].fmcw003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw003_desc
            #
            ##由 项次 带出 币别
            #INITIALIZE g_ref_fields TO NULL
            #LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw003
            #LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
            #LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
            #CALL ap_ref_array2(g_ref_fields,"SELECT fmcs007 FROM fmcs_t WHERE fmcsent='"||g_enterprise||"' AND fmcs002=? AND fmcs001=? AND fmcs003=? ","") RETURNING g_rtn_fields
            #LET g_fmcw_d[l_ac].fmcw005= '', g_rtn_fields[1] , ''
            #DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw003
            #add-point:BEFORE FIELD fmcw003 name="input.b.page1.fmcw003"
#            #由 项次 带出 贷款账户
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw003
#            LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
#            LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
#            CALL ap_ref_array2(g_ref_fields,"SELECT fmcs004 FROM fmcs_t WHERE fmcsent='"||g_enterprise||"' AND fmcs002=? AND fmcs001=? AND fmcs003=? ","") RETURNING g_rtn_fields
#            LET g_fmcw_d[l_ac].fmcw003_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw003_desc
#            
#            #由 项次 带出 币别
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw003
#            LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
#            LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
#            CALL ap_ref_array2(g_ref_fields,"SELECT fmcs007 FROM fmcs_t WHERE fmcsent='"||g_enterprise||"' AND fmcs002=? AND fmcs001=? AND fmcs003=? ","") RETURNING g_rtn_fields
#            LET g_fmcw_d[l_ac].fmcw005= '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005
           
           # 由 项次 带出 贷款账户
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw002
            #LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
            #LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
            CALL ap_ref_array2(g_ref_fields,"SELECT fmck003 FROM fmck_t WHERE fmckent='"||g_enterprise||"' AND fmckdocno=? ","") RETURNING g_rtn_fields
            LET g_fmcw_d[l_ac].fmcw003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw003_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw003
            #add-point:ON CHANGE fmcw003 name="input.g.page1.fmcw003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw002_desc
            #add-point:BEFORE FIELD fmcw002_desc name="input.b.page1.fmcw002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw002_desc
            
            #add-point:AFTER FIELD fmcw002_desc name="input.a.page1.fmcw002_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw002_desc
            #add-point:ON CHANGE fmcw002_desc name="input.g.page1.fmcw002_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw003_desc
            #add-point:BEFORE FIELD fmcw003_desc name="input.b.page1.fmcw003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw003_desc
            
            #add-point:AFTER FIELD fmcw003_desc name="input.a.page1.fmcw003_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw003_desc
            #add-point:ON CHANGE fmcw003_desc name="input.g.page1.fmcw003_desc"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw004
            
            #add-point:AFTER FIELD fmcw004 name="input.a.page1.fmcw004"
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw004) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmcw_d[l_ac].fmcw004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_fmcw004") THEN
                  #檢查成功時後續處理
                  
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 

            #依合同+项次在计提利息档取得所有的已计提的利息，在归还本息档取得所有已归还的利息（均为单头日期之前的资料），将差额显示在“已计提利息”栏位
            IF g_fmcw_d[l_ac].fmcw004 = '2' THEN
               SELECT SUM(fmcz009),fmcz010 INTO l_fmcz009,l_fmcz010 
                 FROM fmcz_t LEFT JOIN fmcy_t ON fmcydocon = fmczdocno AND fmcyent = fmczent
                WHERE fmcz002 = g_fmcw_d[l_ac].fmcw002
                  AND fmcz003 = g_fmcw_d[l_ac].fmcw003
                  AND fmcz004 = '0'
                  AND fmczent = g_enterprise
                  AND fmcydocdt < g_fmcvd_m.fmcvdocdt
                  
               IF cl_null(l_fmcz009) THEN
                  LET l_fmcz009 = 0
               END IF                  
                
               SELECT SUM(fmcw006) INTO l_fmcw006 
                 FROM fmcw_t LEFT JOIN fmcv_t ON fmcvdocon = fmcwdocno AND fmcvent = fmcwent
                WHERE fmcw002 = g_fmcw_d[l_ac].fmcw002
                  AND fmcw003 = g_fmcw_d[l_ac].fmcw003
                  AND fmcvdocno = g_fmcvd_m.fmcvdocno
                  AND fmcvent = g_enterprise
                  AND fmcvdocdt < g_fmcvd_m.fmcvdocdt
               IF cl_null(l_fmcw006) THEN
                  LET l_fmcw006 = 0
               END IF 
               
               LET l_fmcw017 = l_fmcz009 - l_fmcw006
               IF l_fmcw017 < 0 THEN
                  INITIALIZE g_errparam TO NULL 
                   LET g_errparam.extend = "" 
                   LET g_errparam.code   = "afm-00192" 
                   LET g_errparam.popup  = FALSE 
                   CALL cl_err()
                   RETURN 
               ELSE
                  LET g_fmcw_d[l_ac].fmcw017 = l_fmcw017
                  LET g_fmcw_d[l_ac].fmcw018 = l_fmcz010
                  DISPLAY BY NAME g_fmcw_d[l_ac].fmcw017
                  DISPLAY BY NAME g_fmcw_d[l_ac].fmcw018                 
               END IF
            END IF
                  
            #151202-00020#2--add---str--                  
            CALL afmt170_fmcw006_chk()
            IF NOT cl_null(g_errno) THEN    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = "afm-00193" 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               NEXT FIELD fmcw006
            END IF
            #151202-00020#2--add---end--  
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw004
            #add-point:BEFORE FIELD fmcw004 name="input.b.page1.fmcw004"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw004
            #add-point:ON CHANGE fmcw004 name="input.g.page1.fmcw004"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw005
            
            #add-point:AFTER FIELD fmcw005 name="input.a.page1.fmcw005"
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw005) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmcw_d[l_ac].fmcw005               
               #160318-00025#25  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aoo-00011:sub-01302|aooi140|",cl_get_progname("aooi140",g_lang,"2"),"|:EXEPROGaooi140"
               #160318-00025#25  by 07900 --add-end    
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooai001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF 
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"' ","") RETURNING g_rtn_fields
            LET g_fmcw_d[l_ac].fmcw005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw005
            #add-point:BEFORE FIELD fmcw005 name="input.b.page1.fmcw005"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw005
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"' ","") RETURNING g_rtn_fields
            LET g_fmcw_d[l_ac].fmcw005_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005_desc
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw005
            #add-point:ON CHANGE fmcw005 name="input.g.page1.fmcw005"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw006
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_fmcw_d[l_ac].fmcw006,"0","0","","","azz-00079",1) THEN
               NEXT FIELD fmcw006
            END IF 
 
 
 
            #add-point:AFTER FIELD fmcw006 name="input.a.page1.fmcw006"
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw006) THEN 
               #151202-00020#2--mod---str--
#               SELECT SUM(fmcw006) INTO l_sumfmcw006 FROM fmcw_t
#                WHERE fmcw002 = g_fmcw_d[l_ac].fmcw002
#                  AND fmcw003 = g_fmcw_d[l_ac].fmcw003
#                  AND fmcw004 = '1'
#                  AND fmcwent = g_enterprise
#               LET l_sumfmcw006 = l_sumfmcw006 + g_fmcw_d[l_ac].fmcw006
#               SELECT SUM(fmcs008) INTO l_sumfmcs008 FROM fmcs_t
#                WHERE fmcs001 = g_fmcw_d[l_ac].fmcw002
#                  AND fmcs002 = g_fmcw_d[l_ac].fmcw003
#                  AND fmcsent = g_enterprise
#               IF l_sumfmcw006 > l_sumfmcs008 THEN
#                   INITIALIZE g_errparam TO NULL 
#                   LET g_errparam.extend = "" 
#                   LET g_errparam.code   = "afm-00193" 
#                   LET g_errparam.popup  = FALSE 
#                   CALL cl_err()
#                   RETURN
#               END IF   
               IF g_fmcw_d[l_ac].fmcw004 = '1' THEN  #类别=1.本金
                  SELECT SUM(fmcw006) INTO l_sumfmcw006 FROM fmcw_t,fmcv_t
                   WHERE fmcvent = fmcwent AND fmcvdocno = fmcwdocno 
                     AND fmcw021 = g_fmcw_d[l_ac].fmcw021
                     AND fmcw022 = g_fmcw_d[l_ac].fmcw022
                     AND fmcw004 = '1' AND fmcvstus = 'N'
                     AND fmcwent = g_enterprise
                  IF cl_null(l_sumfmcw006) THEN LET l_sumfmcw006 = 0 END IF
                  #到账金额，已归还本金
                  SELECT SUM(fmcs008),SUM(fmcs017) INTO l_sumfmcs008,l_fmcs017_sum FROM fmcs_t
                   WHERE fmcsdocno = g_fmcw_d[l_ac].fmcw021
                     AND fmcsseq = g_fmcw_d[l_ac].fmcw022
                     AND fmcsent = g_enterprise
                  
                  IF cl_null(l_sumfmcs008) THEN LET l_sumfmcs008 = 0 END IF
                  IF cl_null(l_fmcs017_sum) THEN LET l_fmcs017_sum = 0 END IF
                  #融资到帐单号+项次的  到帐金额-已归还金额-未审核的还本付息单中相同单号+项次的本金金额   是否大于0，否则报错
                  #IF ((l_cmd = 'a' OR (g_fmcw_d[l_ac].fmcw004 <> g_fmcw_d_t.fmcw004 AND NOT cl_null(g_fmcw_d_t.fmcw004)))   #160822-00008#7  mark
                  IF ((l_cmd = 'a' OR (g_fmcw_d[l_ac].fmcw004 <> g_fmcw_d_o.fmcw004 AND NOT cl_null(g_fmcw_d_o.fmcw004)))    #160822-00008#7
                   AND l_sumfmcs008 - l_fmcs017_sum - l_sumfmcw006 - g_fmcw_d[l_ac].fmcw006 < 0)
                  #OR (l_cmd = 'u' AND l_sumfmcs008 - (l_fmcs017_sum + l_sumfmcw006 + g_fmcw_d[l_ac].fmcw006 - g_fmcw_d_t.fmcw006) < 0 ) THEN  #160822-00008#7  mark
                  OR (l_cmd = 'u' AND l_sumfmcs008 - (l_fmcs017_sum + l_sumfmcw006 + g_fmcw_d[l_ac].fmcw006 - g_fmcw_d_o.fmcw006) < 0 ) THEN   #160822-00008#7

                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = "" 
                      LET g_errparam.code   = "afm-00193" 
                      LET g_errparam.popup  = FALSE 
                      CALL cl_err()
                      NEXT FIELD fmcw006
                  END IF   
               END IF
               #151202-00020#2--mod---end--               
            END IF 
            

          #IF NOT cl_null(g_fmcw_d[l_ac].fmcw006) THEN  #151202-00020#2 mark
           #IF NOT cl_null(g_fmcw_d[l_ac].fmcw006) AND g_fmcw_d[l_ac].fmcw006 <> g_fmcw_d_t.fmcw006 THEN  #151202-00020#2 add  #160822-00008#7--mark
           IF NOT cl_null(g_fmcw_d[l_ac].fmcw006) AND g_fmcw_d[l_ac].fmcw006 <> g_fmcw_d_o.fmcw006 THEN                        #160822-00008#7
             CALL afmt170_fmcw006()
           END IF
           LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw006
            #add-point:BEFORE FIELD fmcw006 name="input.b.page1.fmcw006"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw006
            #add-point:ON CHANGE fmcw006 name="input.g.page1.fmcw006"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw010
            
            #add-point:AFTER FIELD fmcw010 name="input.a.page1.fmcw010"
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw010
            #add-point:BEFORE FIELD fmcw010 name="input.b.page1.fmcw010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw010
            #add-point:ON CHANGE fmcw010 name="input.g.page1.fmcw010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_fmcw_d[l_ac].fmcw011,"0","0","","","azz-00079",1) THEN
               NEXT FIELD fmcw011
            END IF 
 
 
 
            #add-point:AFTER FIELD fmcw011 name="input.a.page1.fmcw011"
            IF NOT cl_null(g_fmcw_d[l_ac].fmcw011) THEN 
            END IF 
            
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw011
            #add-point:BEFORE FIELD fmcw011 name="input.b.page1.fmcw011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw011
            #add-point:ON CHANGE fmcw011 name="input.g.page1.fmcw011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw017
            #add-point:BEFORE FIELD fmcw017 name="input.b.page1.fmcw017"
             
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw017
            
            #add-point:AFTER FIELD fmcw017 name="input.a.page1.fmcw017"
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw017
            #add-point:ON CHANGE fmcw017 name="input.g.page1.fmcw017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw018
            #add-point:BEFORE FIELD fmcw018 name="input.b.page1.fmcw018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw018
            
            #add-point:AFTER FIELD fmcw018 name="input.a.page1.fmcw018"
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw018
            #add-point:ON CHANGE fmcw018 name="input.g.page1.fmcw018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw023
            #add-point:BEFORE FIELD fmcw023 name="input.b.page1.fmcw023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw023
            
            #add-point:AFTER FIELD fmcw023 name="input.a.page1.fmcw023"
            LET g_fmcw_d_o.* = g_fmcw_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw023
            #add-point:ON CHANGE fmcw023 name="input.g.page1.fmcw023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw026
            #add-point:BEFORE FIELD fmcw026 name="input.b.page1.fmcw026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw026
            
            #add-point:AFTER FIELD fmcw026 name="input.a.page1.fmcw026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw026
            #add-point:ON CHANGE fmcw026 name="input.g.page1.fmcw026"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.fmcw021
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw021
            #add-point:ON ACTION controlp INFIELD fmcw021 name="input.c.page1.fmcw021"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw_d[l_ac].fmcw021             #給予default值
            LET g_qryparam.default2 = "" #g_fmcw_d[l_ac].fmcsseq #項次
            LET g_qryparam.default3 = "" #g_fmcw_d[l_ac].fmcs001 #融資合同號
            LET g_qryparam.default4 = "" #g_fmcw_d[l_ac].fmcs002 #融資合同項次
            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.where = " fmcrcomp = '",g_fmcv_m.fmcvcomp,"'"
                                  ," AND fmcs004 IN (",g_sql_bank,")" #160122-00001#38 add

            CALL q_fmcrdocno_2()                                #呼叫開窗

            LET g_fmcw_d[l_ac].fmcw021 = g_qryparam.return1              
            LET g_fmcw_d[l_ac].fmcw022 = g_qryparam.return2 
            LET g_fmcw_d[l_ac].fmcw002 = g_qryparam.return3 
            LET g_fmcw_d[l_ac].fmcw003 = g_qryparam.return4 
            DISPLAY g_fmcw_d[l_ac].fmcw021 TO fmcw021              #
            CALL afmt170_fmcw021_ref(g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022)
            LET g_qryparam.where = ""
            #DISPLAY g_fmcw_d[l_ac].fmcsseq TO fmcsseq #項次
            #DISPLAY g_fmcw_d[l_ac].fmcs001 TO fmcs001 #融資合同號
            #DISPLAY g_fmcw_d[l_ac].fmcs002 TO fmcs002 #融資合同項次
            NEXT FIELD fmcw021                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw022
            #add-point:ON ACTION controlp INFIELD fmcw022 name="input.c.page1.fmcw022"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw001
            #add-point:ON ACTION controlp INFIELD fmcw001 name="input.c.page1.fmcw001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw_d[l_ac].fmcw001             #給予default值
            LET g_qryparam.default2 = "" #g_fmcw_d[l_ac].ooef001 #组织编号
            #給予arg
            #LET g_qryparam.arg1 = g_fmcv_m.fmcvcomp #s  #161006-00005#34   mark


            #CALL q_ooef001()                       #161006-00005#34   mark
            CALL q_ooef001_33()                     #161006-00005#34   add                             #呼叫開窗

            LET g_fmcw_d[l_ac].fmcw001 = g_qryparam.return1              
            #LET g_fmcw_d[l_ac].ooef001 = g_qryparam.return2 
            DISPLAY g_fmcw_d[l_ac].fmcw001 TO fmcw001              #
            #DISPLAY g_fmcw_d[l_ac].ooef001 TO ooef001 #组织编号
            NEXT FIELD fmcw001                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw002
            #add-point:ON ACTION controlp INFIELD fmcw002 name="input.c.page1.fmcw002"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw_d[l_ac].fmcw002             #給予default值
            LET g_qryparam.default2 = ""
            #給予arg
            LET g_qryparam.arg1 = g_fmcw_d[l_ac].fmcw001 #s


            CALL q_fmcw002()                                #呼叫開窗

            LET g_fmcw_d[l_ac].fmcw002 = g_qryparam.return1              

            DISPLAY g_fmcw_d[l_ac].fmcw002 TO fmcw002              #

            NEXT FIELD fmcw002                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw003
            #add-point:ON ACTION controlp INFIELD fmcw003 name="input.c.page1.fmcw003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw_d[l_ac].fmcw003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_fmcw_d[l_ac].fmcw001 #s
            LET g_qryparam.arg2 = g_fmcw_d[l_ac].fmcw002

            CALL q_fmcw003()                                #呼叫開窗

            LET g_fmcw_d[l_ac].fmcw003 = g_qryparam.return1              

            DISPLAY g_fmcw_d[l_ac].fmcw003 TO fmcw003              #

            NEXT FIELD fmcw003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw002_desc
            #add-point:ON ACTION controlp INFIELD fmcw002_desc name="input.c.page1.fmcw002_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw003_desc
            #add-point:ON ACTION controlp INFIELD fmcw003_desc name="input.c.page1.fmcw003_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw004
            #add-point:ON ACTION controlp INFIELD fmcw004 name="input.c.page1.fmcw004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw005
            #add-point:ON ACTION controlp INFIELD fmcw005 name="input.c.page1.fmcw005"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw_d[l_ac].fmcw005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooai001()                                #呼叫開窗

            LET g_fmcw_d[l_ac].fmcw005 = g_qryparam.return1              

            DISPLAY g_fmcw_d[l_ac].fmcw005 TO fmcw005              #

            NEXT FIELD fmcw005                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw006
            #add-point:ON ACTION controlp INFIELD fmcw006 name="input.c.page1.fmcw006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw010
            #add-point:ON ACTION controlp INFIELD fmcw010 name="input.c.page1.fmcw010"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw_d[l_ac].fmcw010             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_glaa003()                                #呼叫開窗

            LET g_fmcw_d[l_ac].fmcw010 = g_qryparam.return1              

            DISPLAY g_fmcw_d[l_ac].fmcw010 TO fmcw010              #

            NEXT FIELD fmcw010                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw011
            #add-point:ON ACTION controlp INFIELD fmcw011 name="input.c.page1.fmcw011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw017
            #add-point:ON ACTION controlp INFIELD fmcw017 name="input.c.page1.fmcw017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw018
            #add-point:ON ACTION controlp INFIELD fmcw018 name="input.c.page1.fmcw018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw023
            #add-point:ON ACTION controlp INFIELD fmcw023 name="input.c.page1.fmcw023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcw026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw026
            #add-point:ON ACTION controlp INFIELD fmcw026 name="input.c.page1.fmcw026"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmcw_d[l_ac].* = g_fmcw_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt170_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_fmcw_d[l_ac].fmcwseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_fmcw_d[l_ac].* = g_fmcw_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL afmt170_fmcw_t_mask_restore('restore_mask_o')
      
               UPDATE fmcw_t SET (fmcwdocno,fmcwseq,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004, 
                   fmcw005,fmcw006,fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcw007,fmcw008,fmcw009, 
                   fmcw016,fmcw012,fmcw013,fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025) = (g_fmcv_m.fmcvdocno, 
                   g_fmcw_d[l_ac].fmcwseq,g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022,g_fmcw_d[l_ac].fmcw001, 
                   g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw004,g_fmcw_d[l_ac].fmcw005, 
                   g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw011,g_fmcw_d[l_ac].fmcw017, 
                   g_fmcw_d[l_ac].fmcw018,g_fmcw_d[l_ac].fmcw023,g_fmcw_d[l_ac].fmcw026,g_fmcw2_d[l_ac].fmcw007, 
                   g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009,g_fmcw2_d[l_ac].fmcw016,g_fmcw3_d[l_ac].fmcw012, 
                   g_fmcw3_d[l_ac].fmcw013,g_fmcw3_d[l_ac].fmcw019,g_fmcw3_d[l_ac].fmcw024,g_fmcw3_d[l_ac].fmcw014, 
                   g_fmcw3_d[l_ac].fmcw015,g_fmcw3_d[l_ac].fmcw020,g_fmcw3_d[l_ac].fmcw025)
                WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno 
 
                  AND fmcwseq = g_fmcw_d_t.fmcwseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmcw_d[l_ac].* = g_fmcw_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcw_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_fmcw_d[l_ac].* = g_fmcw_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcv_m.fmcvdocno
               LET gs_keys_bak[1] = g_fmcvdocno_t
               LET gs_keys[2] = g_fmcw_d[g_detail_idx].fmcwseq
               LET gs_keys_bak[2] = g_fmcw_d_t.fmcwseq
               CALL afmt170_update_b('fmcw_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL afmt170_fmcw_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_fmcw_d[g_detail_idx].fmcwseq = g_fmcw_d_t.fmcwseq 
 
                  ) THEN
                  LET gs_keys[01] = g_fmcv_m.fmcvdocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_fmcw_d_t.fmcwseq
 
                  CALL afmt170_key_update_b(gs_keys,'fmcw_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmcv_m),util.JSON.stringify(g_fmcw_d_t)
               LET g_log2 = util.JSON.stringify(g_fmcv_m),util.JSON.stringify(g_fmcw_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL afmt170_unlock_b("fmcw_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
             SELECT SUM(fmcw006) INTO l_b2 
               FROM fmcw_t LEFT JOIN fmcv_t ON fmcvdocno = fmcwdocno AND fmcvent = fmcwent
              WHERE fmcwdocno = g_fmcv_m.fmcvdocno
                AND fmcw004 = '2'
                AND fmcwent = g_enterprise
             DISPLAY l_b2 TO formonly.slbl_b2

             SELECT SUM(fmcw017) INTO l_b1 
               FROM fmcw_t LEFT JOIN fmcv_t ON fmcvdocno = fmcwdocno AND fmcvent = fmcwent
              WHERE fmcwdocno = g_fmcv_m.fmcvdocno
                AND fmcwent = g_enterprise
             DISPLAY l_b1 TO formonly.lbl_b1
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmcw_d[li_reproduce_target].* = g_fmcw_d[li_reproduce].*
               LET g_fmcw2_d[li_reproduce_target].* = g_fmcw2_d[li_reproduce].*
               LET g_fmcw3_d[li_reproduce_target].* = g_fmcw3_d[li_reproduce].*
 
               LET g_fmcw_d[li_reproduce_target].fmcwseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmcw_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmcw_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_fmcw2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            
            CALL afmt170_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_fmcw2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmcw2_d[l_ac].* TO NULL 
            INITIALIZE g_fmcw2_d_t.* TO NULL 
            INITIALIZE g_fmcw2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_fmcw2_d_t.* = g_fmcw2_d[l_ac].*     #新輸入資料
            LET g_fmcw2_d_o.* = g_fmcw2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt170_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL afmt170_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmcw_d[li_reproduce_target].* = g_fmcw_d[li_reproduce].*
               LET g_fmcw2_d[li_reproduce_target].* = g_fmcw2_d[li_reproduce].*
               LET g_fmcw3_d[li_reproduce_target].* = g_fmcw3_d[li_reproduce].*
 
               LET g_fmcw2_d[li_reproduce_target].fmcwseq = NULL
            END IF
            
 
 
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt170_cl USING g_enterprise,g_fmcv_m.fmcvdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt170_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afmt170_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmcw2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmcw2_d[l_ac].fmcwseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_fmcw2_d_t.* = g_fmcw2_d[l_ac].*  #BACKUP
               LET g_fmcw2_d_o.* = g_fmcw2_d[l_ac].*  #BACKUP
               CALL afmt170_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL afmt170_set_no_entry_b(l_cmd)
               IF NOT afmt170_lock_b("fmcw_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt170_bcl INTO g_fmcw_d[l_ac].fmcwseq,g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022, 
                      g_fmcw_d[l_ac].fmcw001,g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw004, 
                      g_fmcw_d[l_ac].fmcw005,g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw011, 
                      g_fmcw_d[l_ac].fmcw017,g_fmcw_d[l_ac].fmcw018,g_fmcw_d[l_ac].fmcw023,g_fmcw_d[l_ac].fmcw026, 
                      g_fmcw2_d[l_ac].fmcwseq,g_fmcw2_d[l_ac].fmcw007,g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009, 
                      g_fmcw2_d[l_ac].fmcw016,g_fmcw3_d[l_ac].fmcwseq,g_fmcw3_d[l_ac].fmcw012,g_fmcw3_d[l_ac].fmcw013, 
                      g_fmcw3_d[l_ac].fmcw019,g_fmcw3_d[l_ac].fmcw024,g_fmcw3_d[l_ac].fmcw014,g_fmcw3_d[l_ac].fmcw015, 
                      g_fmcw3_d[l_ac].fmcw020,g_fmcw3_d[l_ac].fmcw025
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmcw2_d_mask_o[l_ac].* =  g_fmcw2_d[l_ac].*
                  CALL afmt170_fmcw_t_mask()
                  LET g_fmcw2_d_mask_n[l_ac].* =  g_fmcw2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt170_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
 
            #其他table進行lock
            
 
 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmcv_m.fmcvdocno
               LET gs_keys[gs_keys.getLength()+1] = g_fmcw2_d_t.fmcwseq
            
               #刪除同層單身
               IF NOT afmt170_delete_b('fmcw_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt170_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt170_key_delete_b(gs_keys,'fmcw_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt170_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt170_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_fmcw_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmcw2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmcw_t 
             WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
               AND fmcwseq = g_fmcw2_d[l_ac].fmcwseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcv_m.fmcvdocno
               LET gs_keys[2] = g_fmcw2_d[g_detail_idx].fmcwseq
               CALL afmt170_insert_b('fmcw_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_fmcw_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt170_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmcw2_d[l_ac].* = g_fmcw2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt170_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_fmcw2_d[l_ac].* = g_fmcw2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL afmt170_fmcw_t_mask_restore('restore_mask_o')
                              
               UPDATE fmcw_t SET (fmcwdocno,fmcwseq,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004, 
                   fmcw005,fmcw006,fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcw007,fmcw008,fmcw009, 
                   fmcw016,fmcw012,fmcw013,fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025) = (g_fmcv_m.fmcvdocno, 
                   g_fmcw_d[l_ac].fmcwseq,g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022,g_fmcw_d[l_ac].fmcw001, 
                   g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw004,g_fmcw_d[l_ac].fmcw005, 
                   g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw011,g_fmcw_d[l_ac].fmcw017, 
                   g_fmcw_d[l_ac].fmcw018,g_fmcw_d[l_ac].fmcw023,g_fmcw_d[l_ac].fmcw026,g_fmcw2_d[l_ac].fmcw007, 
                   g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009,g_fmcw2_d[l_ac].fmcw016,g_fmcw3_d[l_ac].fmcw012, 
                   g_fmcw3_d[l_ac].fmcw013,g_fmcw3_d[l_ac].fmcw019,g_fmcw3_d[l_ac].fmcw024,g_fmcw3_d[l_ac].fmcw014, 
                   g_fmcw3_d[l_ac].fmcw015,g_fmcw3_d[l_ac].fmcw020,g_fmcw3_d[l_ac].fmcw025) #自訂欄位頁簽 
 
                WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
                  AND fmcwseq = g_fmcw2_d_t.fmcwseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmcw2_d[l_ac].* = g_fmcw2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcw_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_fmcw2_d[l_ac].* = g_fmcw2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcv_m.fmcvdocno
               LET gs_keys_bak[1] = g_fmcvdocno_t
               LET gs_keys[2] = g_fmcw2_d[g_detail_idx].fmcwseq
               LET gs_keys_bak[2] = g_fmcw2_d_t.fmcwseq
               CALL afmt170_update_b('fmcw_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL afmt170_fmcw_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_fmcw2_d[g_detail_idx].fmcwseq = g_fmcw2_d_t.fmcwseq 
                  ) THEN
                  LET gs_keys[01] = g_fmcv_m.fmcvdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_fmcw2_d_t.fmcwseq
                  CALL afmt170_key_update_b(gs_keys,'fmcw_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmcv_m),util.JSON.stringify(g_fmcw2_d_t)
               LET g_log2 = util.JSON.stringify(g_fmcv_m),util.JSON.stringify(g_fmcw2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw007
            
            #add-point:AFTER FIELD fmcw007 name="input.a.page2.fmcw007"
            IF NOT cl_null(g_fmcw2_d[l_ac].fmcw007) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmcw2_d[l_ac].fmcw007
               LET g_chkparam.arg2 = g_fmcv_m.fmcvcomp
               LET g_chkparam.arg3 = g_fmcw_d[l_ac].fmcw005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_fmcw007") THEN
                  #檢查成功時後續處理
                  #160122-00001#38--add--str--
                  IF NOT s_anmi120_nmll002_chk(g_fmcw2_d[l_ac].fmcw007,g_user) THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_fmcw2_d[l_ac].fmcw007
                     LET g_errparam.code   = 'anm-00574' 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_fmcw2_d[l_ac].fmcw007=g_fmcw2_d_t.fmcw007
                     NEXT FIELD CURRENT
                  END IF
                  #160122-00001#38--add--end
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF  


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw007
            #add-point:BEFORE FIELD fmcw007 name="input.b.page2.fmcw007"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw007
            #add-point:ON CHANGE fmcw007 name="input.g.page2.fmcw007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw008
            #add-point:BEFORE FIELD fmcw008 name="input.b.page2.fmcw008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw008
            
            #add-point:AFTER FIELD fmcw008 name="input.a.page2.fmcw008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw008
            #add-point:ON CHANGE fmcw008 name="input.g.page2.fmcw008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw009
            
            #add-point:AFTER FIELD fmcw009 name="input.a.page2.fmcw009"
            IF NOT cl_null(g_fmcw2_d[l_ac].fmcw009) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmcw2_d[l_ac].fmcw009

               #160318-00025#25  by 07900 --add-str
                LET g_errshow = TRUE #是否開窗                   
                LET g_chkparam.err_str[1] ="aap-00002:sub-01302|aapi010|",cl_get_progname("aapi010",g_lang,"2"),"|:EXEPROGaapi010"
                #160318-00025#25  by 07900 --add-end   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_nmaj001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw009
            #add-point:BEFORE FIELD fmcw009 name="input.b.page2.fmcw009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw009
            #add-point:ON CHANGE fmcw009 name="input.g.page2.fmcw009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw016
            
            #add-point:AFTER FIELD fmcw016 name="input.a.page2.fmcw016"
            IF NOT cl_null(g_fmcw2_d[l_ac].fmcw016) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmcw2_d[l_ac].fmcw016
               LET g_chkparam.arg2 = g_fmcv_m.fmcvcomp
                 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_nmai002_1") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            END IF 
            
            
           SELECT glaald  INTO g_glaald  #法人对应的主帐别的帐别
              FROM glaa_t 
             WHERE glaacomp = g_fmcv_m.fmcvcomp 
               AND glaaent = g_enterprise
               AND glaa014 = 'Y'
            
            SELECT glaa005 INTO l_glaa005 FROM glaa_t 
            WHERE glaaent = g_enterprise 
              AND glaacomp = g_fmcv_m.fmcvcomp
              AND glaald = g_glaald
              AND glaastus = 'Y'
              
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = l_glaa005
            LET g_ref_fields[2] = g_fmcw2_d[l_ac].fmcw016            
            CALL ap_ref_array2(g_ref_fields,"SELECT nmail004 FROM nmail_t WHERE nmailent='"||g_enterprise||"' AND nmail001 = ? AND nmail002=? AND nmail003='"||g_dlang||"' ","") RETURNING g_rtn_fields
            LET g_fmcw2_d[l_ac].fmcw016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcw2_d[l_ac].fmcw016_desc

#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_fmcw2_d[l_ac].fmcw016
#            CALL ap_ref_array2(g_ref_fields,"SELECT nmail004 FROM nmail_t WHERE nmailent='"||g_enterprise||"' AND nmail002=? AND nmail003='"||g_dlang||"' ","") RETURNING g_rtn_fields
#            LET g_fmcw2_d[l_ac].fmcw016_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_fmcw2_d[l_ac].fmcw016_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw016
            #add-point:BEFORE FIELD fmcw016 name="input.b.page2.fmcw016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw016
            #add-point:ON CHANGE fmcw016 name="input.g.page2.fmcw016"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.fmcw007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw007
            #add-point:ON ACTION controlp INFIELD fmcw007 name="input.c.page2.fmcw007"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw2_d[l_ac].fmcw007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_fmcv_m.fmcvcomp #s
            LET g_qryparam.arg2 = g_fmcw_d[l_ac].fmcw005 #s
            LET g_qryparam.where=" nmas002 IN (",g_sql_bank,")" #160122-00001#38 add
            CALL q_fmcw007()                                #呼叫開窗
            
            LET g_fmcw2_d[l_ac].fmcw007 = g_qryparam.return1              

            DISPLAY g_fmcw2_d[l_ac].fmcw007 TO fmcw007              #

            NEXT FIELD fmcw007                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcw008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw008
            #add-point:ON ACTION controlp INFIELD fmcw008 name="input.c.page2.fmcw008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcw009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw009
            #add-point:ON ACTION controlp INFIELD fmcw009 name="input.c.page2.fmcw009"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw2_d[l_ac].fmcw009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_nmaj001_2()                                #呼叫開窗

            LET g_fmcw2_d[l_ac].fmcw009 = g_qryparam.return1              

            DISPLAY g_fmcw2_d[l_ac].fmcw009 TO fmcw009              #

            NEXT FIELD fmcw009                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcw016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw016
            #add-point:ON ACTION controlp INFIELD fmcw016 name="input.c.page2.fmcw016"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcw2_d[l_ac].fmcw016             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.where = " nmai001 = '",g_glaa005,"'"


            CALL q_nmai002()                                #呼叫開窗

            LET g_fmcw2_d[l_ac].fmcw016 = g_qryparam.return1              

            DISPLAY g_fmcw2_d[l_ac].fmcw016 TO fmcw016              #

            NEXT FIELD fmcw016                          #返回原欄位
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_fmcw2_d[l_ac].* = g_fmcw2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt170_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL afmt170_unlock_b("fmcw_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmcw_d[li_reproduce_target].* = g_fmcw_d[li_reproduce].*
               LET g_fmcw2_d[li_reproduce_target].* = g_fmcw2_d[li_reproduce].*
               LET g_fmcw3_d[li_reproduce_target].* = g_fmcw3_d[li_reproduce].*
 
               LET g_fmcw2_d[li_reproduce_target].fmcwseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmcw2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmcw2_d.getLength()+1
            END IF
            
      END INPUT
      INPUT ARRAY g_fmcw3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body3.before_input2"
            
            #end add-point
            
            CALL afmt170_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_fmcw3_d.getLength()
            #add-point:資料輸入前 name="input.body3.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmcw3_d[l_ac].* TO NULL 
            INITIALIZE g_fmcw3_d_t.* TO NULL 
            INITIALIZE g_fmcw3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
                  LET g_fmcw3_d[l_ac].fmcw013 = "0"
      LET g_fmcw3_d[l_ac].fmcw019 = "0"
      LET g_fmcw3_d[l_ac].fmcw024 = "0"
      LET g_fmcw3_d[l_ac].fmcw015 = "0"
      LET g_fmcw3_d[l_ac].fmcw020 = "0"
      LET g_fmcw3_d[l_ac].fmcw025 = "0"
 
            #add-point:modify段before備份 name="input.body3.insert.before_bak"
            
            #end add-point
            LET g_fmcw3_d_t.* = g_fmcw3_d[l_ac].*     #新輸入資料
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt170_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body3.insert.after_set_entry_b"
            
            #end add-point
            CALL afmt170_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmcw_d[li_reproduce_target].* = g_fmcw_d[li_reproduce].*
               LET g_fmcw2_d[li_reproduce_target].* = g_fmcw2_d[li_reproduce].*
               LET g_fmcw3_d[li_reproduce_target].* = g_fmcw3_d[li_reproduce].*
 
               LET g_fmcw3_d[li_reproduce_target].fmcwseq = NULL
            END IF
            
 
 
 
            #add-point:modify段before insert name="input.body3.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body3.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[3] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt170_cl USING g_enterprise,g_fmcv_m.fmcvdocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt170_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afmt170_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmcw3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmcw3_d[l_ac].fmcwseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_fmcw3_d_t.* = g_fmcw3_d[l_ac].*  #BACKUP
               LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #BACKUP
               CALL afmt170_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body3.after_set_entry_b"
               
               #end add-point  
               CALL afmt170_set_no_entry_b(l_cmd)
               IF NOT afmt170_lock_b("fmcw_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt170_bcl INTO g_fmcw_d[l_ac].fmcwseq,g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022, 
                      g_fmcw_d[l_ac].fmcw001,g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw004, 
                      g_fmcw_d[l_ac].fmcw005,g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw011, 
                      g_fmcw_d[l_ac].fmcw017,g_fmcw_d[l_ac].fmcw018,g_fmcw_d[l_ac].fmcw023,g_fmcw_d[l_ac].fmcw026, 
                      g_fmcw2_d[l_ac].fmcwseq,g_fmcw2_d[l_ac].fmcw007,g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009, 
                      g_fmcw2_d[l_ac].fmcw016,g_fmcw3_d[l_ac].fmcwseq,g_fmcw3_d[l_ac].fmcw012,g_fmcw3_d[l_ac].fmcw013, 
                      g_fmcw3_d[l_ac].fmcw019,g_fmcw3_d[l_ac].fmcw024,g_fmcw3_d[l_ac].fmcw014,g_fmcw3_d[l_ac].fmcw015, 
                      g_fmcw3_d[l_ac].fmcw020,g_fmcw3_d[l_ac].fmcw025
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmcw3_d_mask_o[l_ac].* =  g_fmcw3_d[l_ac].*
                  CALL afmt170_fmcw_t_mask()
                  LET g_fmcw3_d_mask_n[l_ac].* =  g_fmcw3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt170_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body3.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
 
            #其他table進行lock
            
 
 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body3.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body3.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前 name="input.body3.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmcv_m.fmcvdocno
               LET gs_keys[gs_keys.getLength()+1] = g_fmcw3_d_t.fmcwseq
            
               #刪除同層單身
               IF NOT afmt170_delete_b('fmcw_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt170_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt170_key_delete_b(gs_keys,'fmcw_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt170_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
 
               
               #add-point:單身3刪除中 name="input.body3.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt170_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身3刪除後 name="input.body3.a_delete"
               
               #end add-point
               LET l_count = g_fmcw_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body3.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmcw3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前 name="input.body3.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmcw_t 
             WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
               AND fmcwseq = g_fmcw3_d[l_ac].fmcwseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前 name="input.body3.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcv_m.fmcvdocno
               LET gs_keys[2] = g_fmcw3_d[g_detail_idx].fmcwseq
               CALL afmt170_insert_b('fmcw_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3 name="input.body3.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_fmcw_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt170_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body3.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmcw3_d[l_ac].* = g_fmcw3_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt170_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_fmcw3_d[l_ac].* = g_fmcw3_d_t.*
            ELSE
               #add-point:單身page3修改前 name="input.body3.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL afmt170_fmcw_t_mask_restore('restore_mask_o')
                              
               UPDATE fmcw_t SET (fmcwdocno,fmcwseq,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004, 
                   fmcw005,fmcw006,fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcw007,fmcw008,fmcw009, 
                   fmcw016,fmcw012,fmcw013,fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025) = (g_fmcv_m.fmcvdocno, 
                   g_fmcw_d[l_ac].fmcwseq,g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022,g_fmcw_d[l_ac].fmcw001, 
                   g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw004,g_fmcw_d[l_ac].fmcw005, 
                   g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw011,g_fmcw_d[l_ac].fmcw017, 
                   g_fmcw_d[l_ac].fmcw018,g_fmcw_d[l_ac].fmcw023,g_fmcw_d[l_ac].fmcw026,g_fmcw2_d[l_ac].fmcw007, 
                   g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009,g_fmcw2_d[l_ac].fmcw016,g_fmcw3_d[l_ac].fmcw012, 
                   g_fmcw3_d[l_ac].fmcw013,g_fmcw3_d[l_ac].fmcw019,g_fmcw3_d[l_ac].fmcw024,g_fmcw3_d[l_ac].fmcw014, 
                   g_fmcw3_d[l_ac].fmcw015,g_fmcw3_d[l_ac].fmcw020,g_fmcw3_d[l_ac].fmcw025) #自訂欄位頁簽 
 
                WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
                  AND fmcwseq = g_fmcw3_d_t.fmcwseq #項次 
                  
               #add-point:單身page3修改中 name="input.body3.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmcw3_d[l_ac].* = g_fmcw3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcw_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_fmcw3_d[l_ac].* = g_fmcw3_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcv_m.fmcvdocno
               LET gs_keys_bak[1] = g_fmcvdocno_t
               LET gs_keys[2] = g_fmcw3_d[g_detail_idx].fmcwseq
               LET gs_keys_bak[2] = g_fmcw3_d_t.fmcwseq
               CALL afmt170_update_b('fmcw_t',gs_keys,gs_keys_bak,"'3'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL afmt170_fmcw_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_fmcw3_d[g_detail_idx].fmcwseq = g_fmcw3_d_t.fmcwseq 
                  ) THEN
                  LET gs_keys[01] = g_fmcv_m.fmcvdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_fmcw3_d_t.fmcwseq
                  CALL afmt170_key_update_b(gs_keys,'fmcw_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmcv_m),util.JSON.stringify(g_fmcw3_d_t)
               LET g_log2 = util.JSON.stringify(g_fmcv_m),util.JSON.stringify(g_fmcw3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後 name="input.body3.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw021_desc
            #add-point:BEFORE FIELD fmcw021_desc name="input.b.page3.fmcw021_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw021_desc
            
            #add-point:AFTER FIELD fmcw021_desc name="input.a.page3.fmcw021_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw021_desc
            #add-point:ON CHANGE fmcw021_desc name="input.g.page3.fmcw021_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw022_desc
            #add-point:BEFORE FIELD fmcw022_desc name="input.b.page3.fmcw022_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw022_desc
            
            #add-point:AFTER FIELD fmcw022_desc name="input.a.page3.fmcw022_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw022_desc
            #add-point:ON CHANGE fmcw022_desc name="input.g.page3.fmcw022_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw002_desc1
            #add-point:BEFORE FIELD fmcw002_desc1 name="input.b.page3.fmcw002_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw002_desc1
            
            #add-point:AFTER FIELD fmcw002_desc1 name="input.a.page3.fmcw002_desc1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw002_desc1
            #add-point:ON CHANGE fmcw002_desc1 name="input.g.page3.fmcw002_desc1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw003_desc1
            #add-point:BEFORE FIELD fmcw003_desc1 name="input.b.page3.fmcw003_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw003_desc1
            
            #add-point:AFTER FIELD fmcw003_desc1 name="input.a.page3.fmcw003_desc1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw003_desc1
            #add-point:ON CHANGE fmcw003_desc1 name="input.g.page3.fmcw003_desc1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw006_desc
            #add-point:BEFORE FIELD fmcw006_desc name="input.b.page3.fmcw006_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw006_desc
            
            #add-point:AFTER FIELD fmcw006_desc name="input.a.page3.fmcw006_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw006_desc
            #add-point:ON CHANGE fmcw006_desc name="input.g.page3.fmcw006_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw010_desc
            #add-point:BEFORE FIELD fmcw010_desc name="input.b.page3.fmcw010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw010_desc
            
            #add-point:AFTER FIELD fmcw010_desc name="input.a.page3.fmcw010_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw010_desc
            #add-point:ON CHANGE fmcw010_desc name="input.g.page3.fmcw010_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw011_desc
            #add-point:BEFORE FIELD fmcw011_desc name="input.b.page3.fmcw011_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw011_desc
            
            #add-point:AFTER FIELD fmcw011_desc name="input.a.page3.fmcw011_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw011_desc
            #add-point:ON CHANGE fmcw011_desc name="input.g.page3.fmcw011_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw012
            #add-point:BEFORE FIELD fmcw012 name="input.b.page3.fmcw012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw012
            
            #add-point:AFTER FIELD fmcw012 name="input.a.page3.fmcw012"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw012
            #add-point:ON CHANGE fmcw012 name="input.g.page3.fmcw012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw013
            #add-point:BEFORE FIELD fmcw013 name="input.b.page3.fmcw013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw013
            
            #add-point:AFTER FIELD fmcw013 name="input.a.page3.fmcw013"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw013
            #add-point:ON CHANGE fmcw013 name="input.g.page3.fmcw013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw019
            #add-point:BEFORE FIELD fmcw019 name="input.b.page3.fmcw019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw019
            
            #add-point:AFTER FIELD fmcw019 name="input.a.page3.fmcw019"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw019
            #add-point:ON CHANGE fmcw019 name="input.g.page3.fmcw019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw024
            #add-point:BEFORE FIELD fmcw024 name="input.b.page3.fmcw024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw024
            
            #add-point:AFTER FIELD fmcw024 name="input.a.page3.fmcw024"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw024
            #add-point:ON CHANGE fmcw024 name="input.g.page3.fmcw024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw014
            #add-point:BEFORE FIELD fmcw014 name="input.b.page3.fmcw014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw014
            
            #add-point:AFTER FIELD fmcw014 name="input.a.page3.fmcw014"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw014
            #add-point:ON CHANGE fmcw014 name="input.g.page3.fmcw014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw015
            #add-point:BEFORE FIELD fmcw015 name="input.b.page3.fmcw015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw015
            
            #add-point:AFTER FIELD fmcw015 name="input.a.page3.fmcw015"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw015
            #add-point:ON CHANGE fmcw015 name="input.g.page3.fmcw015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw020
            #add-point:BEFORE FIELD fmcw020 name="input.b.page3.fmcw020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw020
            
            #add-point:AFTER FIELD fmcw020 name="input.a.page3.fmcw020"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw020
            #add-point:ON CHANGE fmcw020 name="input.g.page3.fmcw020"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcw025
            #add-point:BEFORE FIELD fmcw025 name="input.b.page3.fmcw025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcw025
            
            #add-point:AFTER FIELD fmcw025 name="input.a.page3.fmcw025"
            LET g_fmcw3_d_o.* = g_fmcw3_d[l_ac].*  #160822-00008#7
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcw025
            #add-point:ON CHANGE fmcw025 name="input.g.page3.fmcw025"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page3.fmcw021_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw021_desc
            #add-point:ON ACTION controlp INFIELD fmcw021_desc name="input.c.page3.fmcw021_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw022_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw022_desc
            #add-point:ON ACTION controlp INFIELD fmcw022_desc name="input.c.page3.fmcw022_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw002_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw002_desc1
            #add-point:ON ACTION controlp INFIELD fmcw002_desc1 name="input.c.page3.fmcw002_desc1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw003_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw003_desc1
            #add-point:ON ACTION controlp INFIELD fmcw003_desc1 name="input.c.page3.fmcw003_desc1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw006_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw006_desc
            #add-point:ON ACTION controlp INFIELD fmcw006_desc name="input.c.page3.fmcw006_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw010_desc
            #add-point:ON ACTION controlp INFIELD fmcw010_desc name="input.c.page3.fmcw010_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw011_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw011_desc
            #add-point:ON ACTION controlp INFIELD fmcw011_desc name="input.c.page3.fmcw011_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw012
            #add-point:ON ACTION controlp INFIELD fmcw012 name="input.c.page3.fmcw012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw013
            #add-point:ON ACTION controlp INFIELD fmcw013 name="input.c.page3.fmcw013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw019
            #add-point:ON ACTION controlp INFIELD fmcw019 name="input.c.page3.fmcw019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw024
            #add-point:ON ACTION controlp INFIELD fmcw024 name="input.c.page3.fmcw024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw014
            #add-point:ON ACTION controlp INFIELD fmcw014 name="input.c.page3.fmcw014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw015
            #add-point:ON ACTION controlp INFIELD fmcw015 name="input.c.page3.fmcw015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw020
            #add-point:ON ACTION controlp INFIELD fmcw020 name="input.c.page3.fmcw020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page3.fmcw025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcw025
            #add-point:ON ACTION controlp INFIELD fmcw025 name="input.c.page3.fmcw025"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row name="input.body3.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_fmcw3_d[l_ac].* = g_fmcw3_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt170_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL afmt170_unlock_b("fmcw_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2 name="input.body3.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body3.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmcw_d[li_reproduce_target].* = g_fmcw_d[li_reproduce].*
               LET g_fmcw2_d[li_reproduce_target].* = g_fmcw2_d[li_reproduce].*
               LET g_fmcw3_d[li_reproduce_target].* = g_fmcw3_d[li_reproduce].*
 
               LET g_fmcw3_d[li_reproduce_target].fmcwseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmcw3_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmcw3_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="afmt170.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2','3',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue(""))
         CALL DIALOG.setCurrentRow("s_detail3",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD fmcvdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD fmcwseq
               WHEN "s_detail2"
                  NEXT FIELD fmcwseq_2
               WHEN "s_detail3"
                  NEXT FIELD fmcwseq_3
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
         LET g_detail_idx_list[3] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
         CALL g_curr_diag.setCurrentRow("s_detail3",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION afmt170_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE  l_glaa005             LIKE glaa_t.glaa005
   DEFINE  l_b1                  LIKE fmcw_t.fmcw017
   DEFINE  l_b2                  LIKE fmcw_t.fmcw006
   DEFINE  l_glaald              LIKE glaa_t.glaald   #160302-00030#3
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
 
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL afmt170_b_fill() #單身填充
      CALL afmt170_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL afmt170_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
  #160302-00030#1 Add  ---(S)---
   SELECT glaald INTO l_glaald FROM glaa_t WHERE glaaent = g_enterprise
      AND glaa014 = 'Y'
      AND glaacomp = g_fmcv_m.fmcvcomp
   CALL afmt170_OtherCurr_dis(l_glaald)
  #160302-00030#1 Add  ---(E)---
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_fmcv_m.fmcvsite
    CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_fmcv_m.fmcvsite_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_fmcv_m.fmcvsite_desc

    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = g_fmcv_m.fmcvcomp
    CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET g_fmcv_m.fmcvcomp_desc = '', g_rtn_fields[1] , ''
    DISPLAY BY NAME g_fmcv_m.fmcvcomp_desc
    
    CALL afmt170_fmcw_visible()    #151202-00020#2
   #end add-point
   
   #遮罩相關處理
   LET g_fmcv_m_mask_o.* =  g_fmcv_m.*
   CALL afmt170_fmcv_t_mask()
   LET g_fmcv_m_mask_n.* =  g_fmcv_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmcv_m.fmcvsite,g_fmcv_m.fmcvsite_desc,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvcomp_desc, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvownid_desc, 
       g_fmcv_m.fmcvowndp,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtid_desc,g_fmcv_m.fmcvcrtdp, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfid_desc,g_fmcv_m.fmcvcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmcv_m.fmcvstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_fmcw_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw002
      CALL ap_ref_array2(g_ref_fields,"SELECT fmcj002 FROM fmcj_t WHERE fmcjent='"||g_enterprise||"' AND fmcjdocno = ? ","") RETURNING g_rtn_fields
      LET g_fmcw_d[l_ac].fmcw002_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_fmcw_d[l_ac].fmcw002_desc

       #由 项次 带出 贷款账户
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw003
      LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
      LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
      CALL ap_ref_array2(g_ref_fields,"SELECT fmcs004 FROM fmcs_t WHERE fmcsent='"||g_enterprise||"' AND fmcs002=? AND fmcs001=? AND fmcs003=? ","") RETURNING g_rtn_fields
      LET g_fmcw_d[l_ac].fmcw003_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_fmcw_d[l_ac].fmcw003_desc
      
      #由 项次 带出 币别
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw003
      LET g_ref_fields[2] = g_fmcw_d[l_ac].fmcw002
      LET g_ref_fields[3] = g_fmcw_d[l_ac].fmcw001
      CALL ap_ref_array2(g_ref_fields,"SELECT fmcs007 FROM fmcs_t WHERE fmcsent='"||g_enterprise||"' AND fmcs002=? AND fmcs001=? AND fmcs003=? ","") RETURNING g_rtn_fields
      LET g_fmcw_d[l_ac].fmcw005= '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_fmcw_d[l_ac].fmcw005
      CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"' ","") RETURNING g_rtn_fields
      LET g_fmcw_d[l_ac].fmcw005_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005_desc

     SELECT glaald  INTO g_glaald  #法人对应的主帐别的帐别
       FROM glaa_t 
      WHERE glaacomp = g_fmcv_m.fmcvcomp 
        AND glaaent = g_enterprise
        AND glaa014 = 'Y'
     
     SELECT glaa005 INTO l_glaa005 FROM glaa_t 
     WHERE glaaent = g_enterprise 
       AND glaacomp = g_fmcv_m.fmcvcomp
       AND glaald = g_glaald
       AND glaastus = 'Y'
      
     INITIALIZE g_ref_fields TO NULL
     LET g_ref_fields[1] = l_glaa005
     LET g_ref_fields[2] = g_fmcw2_d[l_ac].fmcw016            
     CALL ap_ref_array2(g_ref_fields,"SELECT nmail004 FROM nmail_t WHERE nmailent='"||g_enterprise||"' AND nmail001 = ? AND nmail002=? AND nmail003='"||g_dlang||"' ","") RETURNING g_rtn_fields
     LET g_fmcw2_d[l_ac].fmcw016_desc = '', g_rtn_fields[1] , ''
     DISPLAY BY NAME g_fmcw2_d[l_ac].fmcw016_desc
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_fmcw2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_fmcw3_d.getLength()
      #add-point:show段單身reference name="show.body3.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
     SELECT SUM(fmcw006) INTO l_b2 
       FROM fmcw_t LEFT JOIN fmcv_t ON fmcvdocno = fmcwdocno AND fmcvent = fmcwent
      WHERE fmcwdocno = g_fmcv_m.fmcvdocno
        AND fmcw004 = '2'
        AND fmcwent = g_enterprise
     DISPLAY l_b2 TO formonly.slbl_b2
      
     SELECT SUM(fmcw017) INTO l_b1 
       FROM fmcw_t LEFT JOIN fmcv_t ON fmcvdocno = fmcwdocno AND fmcvent = fmcwent
      WHERE fmcwdocno = g_fmcv_m.fmcvdocno
        AND fmcwent = g_enterprise
     DISPLAY l_b1 TO formonly.lbl_b1
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL afmt170_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION afmt170_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION afmt170_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE fmcv_t.fmcvdocno 
   DEFINE l_oldno     LIKE fmcv_t.fmcvdocno 
 
   DEFINE l_master    RECORD LIKE fmcv_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE fmcw_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_fmcv_m.fmcvdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
    
   LET g_fmcv_m.fmcvdocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmcv_m.fmcvownid = g_user
      LET g_fmcv_m.fmcvowndp = g_dept
      LET g_fmcv_m.fmcvcrtid = g_user
      LET g_fmcv_m.fmcvcrtdp = g_dept 
      LET g_fmcv_m.fmcvcrtdt = cl_get_current()
      LET g_fmcv_m.fmcvmodid = g_user
      LET g_fmcv_m.fmcvmoddt = cl_get_current()
      LET g_fmcv_m.fmcvstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmcv_m.fmcvstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL afmt170_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_fmcv_m.* TO NULL
      INITIALIZE g_fmcw_d TO NULL
      INITIALIZE g_fmcw2_d TO NULL
      INITIALIZE g_fmcw3_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL afmt170_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt170_set_act_visible()   
   CALL afmt170_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmcvent = " ||g_enterprise|| " AND",
                      " fmcvdocno = '", g_fmcv_m.fmcvdocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt170_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL afmt170_idx_chk()
   
   LET g_data_owner = g_fmcv_m.fmcvownid      
   LET g_data_dept  = g_fmcv_m.fmcvowndp
   
   #功能已完成,通報訊息中心
   CALL afmt170_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION afmt170_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE fmcw_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE afmt170_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM fmcw_t
    WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcvdocno_t
 
    INTO TEMP afmt170_detail
 
   #將key修正為調整後   
   UPDATE afmt170_detail 
      #更新key欄位
      SET fmcwdocno = g_fmcv_m.fmcvdocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO fmcw_t SELECT * FROM afmt170_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE afmt170_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.delete" >}
#+ 資料刪除
PRIVATE FUNCTION afmt170_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_n             LIKE type_t.num5 #160122-00001#38
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   DEFINE l_success  LIKE type_t.num5
   #end add-point
   
   IF g_fmcv_m.fmcvdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN afmt170_cl USING g_enterprise,g_fmcv_m.fmcvdocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt170_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt170_master_referesh USING g_fmcv_m.fmcvdocno INTO g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp, 
       g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt,g_fmcv_m.fmcvownid_desc,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid_desc, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT afmt170_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmcv_m_mask_o.* =  g_fmcv_m.*
   CALL afmt170_fmcv_t_mask()
   LET g_fmcv_m_mask_n.* =  g_fmcv_m.*
   
   CALL afmt170_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL afmt170_fmcvsite()
   CALL s_fin_date_close_chk(g_glaald,g_fmcv_m.fmcvcomp,'ANM',g_fmcv_m.fmcvdocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      #160122-00001#38--add--str--
      LET l_n = 0 
      #單身存在當前用戶沒有權限的交易帳戶編碼
      SELECT COUNT(*) INTO l_n FROM fmcw_t
       WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
         AND fmcw007 NOT IN( SELECT UNIQUE nmll001 FROM nmll_t WHERE nmllent = g_enterprise AND nmll002 = g_user AND nmllstus='Y')
         AND fmcw007 NOT IN( SELECT UNIQUE nmlm001 FROM nmlm_t WHERE nmlment = g_enterprise AND nmlm002 = g_dept AND nmlmstus='Y')
         AND TRIM(fmcw007) IS NOT NULL
      IF l_n > 0 THEN
         IF NOT cl_ask_confirm('anm-00395') THEN
            CLOSE afmt170_cl
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
      #160122-00001#38--add--end
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL afmt170_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_fmcvdocno_t = g_fmcv_m.fmcvdocno
 
 
      DELETE FROM fmcv_t
       WHERE fmcvent = g_enterprise AND fmcvdocno = g_fmcv_m.fmcvdocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_fmcv_m.fmcvdocno,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      SELECT glaald  INTO g_glaald  #法人对应的主帐别的帐别
              FROM glaa_t 
             WHERE glaacomp = g_fmcv_m.fmcvcomp 
               AND glaaent = g_enterprise
               AND glaa014 = 'Y'
      IF NOT s_aooi200_fin_del_docno(g_glaald,g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt) THEN
          CALL s_transaction_end('N','0')
          CALL cl_err_collect_show()
          RETURN
       END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM fmcw_t
       WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE afmt170_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_fmcw_d.clear() 
      CALL g_fmcw2_d.clear()       
      CALL g_fmcw3_d.clear()       
 
     
      CALL afmt170_ui_browser_refresh()  
      #CALL afmt170_ui_headershow()  
      #CALL afmt170_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL afmt170_browser_fill("")
         CALL afmt170_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE afmt170_cl
 
   #功能已完成,通報訊息中心
   CALL afmt170_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="afmt170.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afmt170_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
#   DEFINE sum1     LIKE type_t.num10
#   DEFINE sum2     LIKE type_t.num10
   #end add-point
   
   #清空第一階單身
   CALL g_fmcw_d.clear()
   CALL g_fmcw2_d.clear()
   CALL g_fmcw3_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF afmt170_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT fmcwseq,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004,fmcw005, 
             fmcw006,fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcwseq,fmcw007,fmcw008,fmcw009, 
             fmcw016,fmcwseq,fmcw012,fmcw013,fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025 ,t1.fmcj002 , 
             t2.fmck003 ,t3.ooail003 FROM fmcw_t",   
                     " INNER JOIN fmcv_t ON fmcvent = " ||g_enterprise|| " AND fmcvdocno = fmcwdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN fmcj_t t1 ON t1.fmcjent="||g_enterprise||" AND t1.fmcjdocno=fmcw002  ",
               " LEFT JOIN fmck_t t2 ON t2.fmckent="||g_enterprise||" AND t2.fmckdocno=fmcw002 AND t2.fmckseq=fmcw003  ",
               " LEFT JOIN ooail_t t3 ON t3.ooailent="||g_enterprise||" AND t3.ooail001=fmcw005 AND t3.ooail002='"||g_dlang||"' ",
 
                     " WHERE fmcwent=? AND fmcwdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         #151202-00020#2---mod--str
#         LET g_sql = "SELECT  UNIQUE fmcwseq,fmcw001,fmcw002,fmcw003,fmcw004,fmcw005,fmcw006,fmcw017, 
#             fmcw018,fmcw007,fmcw008,fmcw009,fmcw010,fmcw011,fmcw012,fmcw013,fmcw014,fmcw015,fmcw016 , 
#             t1.fmcj002 ,t2.fmcs007 ,t3.ooail003 ,t4.nmail004 FROM fmcw_t",
         LET g_sql = "SELECT UNIQUE fmcwseq,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004,fmcw005, ",
                     "              fmcw006,fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcwseq, ",
                     "              fmcw007,fmcw008,fmcw009,fmcw016,fmcwseq,fmcw012,fmcw013,fmcw019, ",   #160302-00030#3  Add fmcwseq
                     "              fmcw024,fmcw014,fmcw015,fmcw020,fmcw025,t1.fmcj002 ,t2.fmcs007 , ",
                     "              t3.ooail003 ,t4.nmail004 FROM fmcw_t",    #160302-00029#1 Add fmcw026
         #151202-00020#2---mod--end
                     " INNER JOIN fmcv_t ON fmcvdocno = fmcwdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN fmcj_t t1 ON t1.fmcjent='"||g_enterprise||"' AND t1.fmcjsite=fmcw002  ",
               " LEFT JOIN fmcs_t t2 ON t2.fmcsent='"||g_enterprise||"' AND t2.fmcs002=fmcw003 AND t2.fmcs001=fmcw002  ",
               " LEFT JOIN ooail_t t3 ON t3.ooailent='"||g_enterprise||"' AND t3.ooail001=fmcw005 AND t3.ooail002='"||g_dlang||"' ",
               " LEFT JOIN nmail_t t4 ON t4.nmailent='"||g_enterprise||"' AND t4.nmail001='"||g_glaa005||"' AND t4.nmail002=fmcw016 AND t4.nmail003='"||g_dlang||"' ",
 
                     " WHERE fmcwent=? AND fmcwdocno=?"
         LET g_sql = g_sql CLIPPED ," AND (fmcw007 IN (",g_sql_bank,") OR TRIM(fmcw007) IS NULL )" #160122-00001#38 add
         LET g_sql = cl_sql_add_mask(g_sql)            
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY fmcw_t.fmcwseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
#          LET sum1 = 0
#          LET sum2 = 0
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE afmt170_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR afmt170_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_fmcv_m.fmcvdocno
                                               
      FOREACH b_fill_cs INTO g_fmcw_d[l_ac].fmcwseq,g_fmcw_d[l_ac].fmcw021,g_fmcw_d[l_ac].fmcw022,g_fmcw_d[l_ac].fmcw001, 
          g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw004,g_fmcw_d[l_ac].fmcw005, 
          g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw011,g_fmcw_d[l_ac].fmcw017, 
          g_fmcw_d[l_ac].fmcw018,g_fmcw_d[l_ac].fmcw023,g_fmcw_d[l_ac].fmcw026,g_fmcw2_d[l_ac].fmcwseq, 
          g_fmcw2_d[l_ac].fmcw007,g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009,g_fmcw2_d[l_ac].fmcw016, 
          g_fmcw3_d[l_ac].fmcwseq,g_fmcw3_d[l_ac].fmcw012,g_fmcw3_d[l_ac].fmcw013,g_fmcw3_d[l_ac].fmcw019, 
          g_fmcw3_d[l_ac].fmcw024,g_fmcw3_d[l_ac].fmcw014,g_fmcw3_d[l_ac].fmcw015,g_fmcw3_d[l_ac].fmcw020, 
          g_fmcw3_d[l_ac].fmcw025,g_fmcw_d[l_ac].fmcw002_desc,g_fmcw_d[l_ac].fmcw003_desc,g_fmcw_d[l_ac].fmcw005_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
#         LET sum1 = sum1 + g_fmcw_d[l_ac].fmcw017
#         IF g_fmcw_d[l_ac].fmcw004 = '1' THEN
#            LET sum2 = sum2 + g_fmcw_d[l_ac].fmcw006
#         END IF
        #160302-00030#3 Add  ---(S)---
         LET g_fmcw3_d[l_ac].fmcw021_desc = g_fmcw_d[l_ac].fmcw021
         LET g_fmcw3_d[l_ac].fmcw022_desc = g_fmcw_d[l_ac].fmcw022
         LET g_fmcw3_d[l_ac].fmcw002_desc1= g_fmcw_d[l_ac].fmcw002
         LET g_fmcw3_d[l_ac].fmcw003_desc1= g_fmcw_d[l_ac].fmcw003
         LET g_fmcw3_d[l_ac].fmcw006_desc = g_fmcw_d[l_ac].fmcw006
         LET g_fmcw3_d[l_ac].fmcw010_desc = g_fmcw_d[l_ac].fmcw010
         LET g_fmcw3_d[l_ac].fmcw011_desc = g_fmcw_d[l_ac].fmcw011
        #160302-00030#3 Add  ---(E)---





         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
#    DISPLAY sum1 TO formonly.lbl_b1
#    DISPLAY sum2 TO formonly.slbl_b2
   #end add-point
   
   CALL g_fmcw_d.deleteElement(g_fmcw_d.getLength())
   CALL g_fmcw2_d.deleteElement(g_fmcw2_d.getLength())
   CALL g_fmcw3_d.deleteElement(g_fmcw3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE afmt170_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_fmcw_d.getLength()
      LET g_fmcw_d_mask_o[l_ac].* =  g_fmcw_d[l_ac].*
      CALL afmt170_fmcw_t_mask()
      LET g_fmcw_d_mask_n[l_ac].* =  g_fmcw_d[l_ac].*
   END FOR
   
   LET g_fmcw2_d_mask_o.* =  g_fmcw2_d.*
   FOR l_ac = 1 TO g_fmcw2_d.getLength()
      LET g_fmcw2_d_mask_o[l_ac].* =  g_fmcw2_d[l_ac].*
      CALL afmt170_fmcw_t_mask()
      LET g_fmcw2_d_mask_n[l_ac].* =  g_fmcw2_d[l_ac].*
   END FOR
   LET g_fmcw3_d_mask_o.* =  g_fmcw3_d.*
   FOR l_ac = 1 TO g_fmcw3_d.getLength()
      LET g_fmcw3_d_mask_o[l_ac].* =  g_fmcw3_d[l_ac].*
      CALL afmt170_fmcw_t_mask()
      LET g_fmcw3_d_mask_n[l_ac].* =  g_fmcw3_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION afmt170_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2','3',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM fmcw_t
       WHERE fmcwent = g_enterprise AND
         fmcwdocno = ps_keys_bak[1] AND fmcwseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmcw_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_fmcw2_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'3'" THEN 
         CALL g_fmcw3_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION afmt170_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2','3',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO fmcw_t
                  (fmcwent,
                   fmcwdocno,
                   fmcwseq
                   ,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004,fmcw005,fmcw006,fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcw007,fmcw008,fmcw009,fmcw016,fmcw012,fmcw013,fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_fmcw_d[g_detail_idx].fmcw021,g_fmcw_d[g_detail_idx].fmcw022,g_fmcw_d[g_detail_idx].fmcw001, 
                       g_fmcw_d[g_detail_idx].fmcw002,g_fmcw_d[g_detail_idx].fmcw003,g_fmcw_d[g_detail_idx].fmcw004, 
                       g_fmcw_d[g_detail_idx].fmcw005,g_fmcw_d[g_detail_idx].fmcw006,g_fmcw_d[g_detail_idx].fmcw010, 
                       g_fmcw_d[g_detail_idx].fmcw011,g_fmcw_d[g_detail_idx].fmcw017,g_fmcw_d[g_detail_idx].fmcw018, 
                       g_fmcw_d[g_detail_idx].fmcw023,g_fmcw_d[g_detail_idx].fmcw026,g_fmcw2_d[g_detail_idx].fmcw007, 
                       g_fmcw2_d[g_detail_idx].fmcw008,g_fmcw2_d[g_detail_idx].fmcw009,g_fmcw2_d[g_detail_idx].fmcw016, 
                       g_fmcw3_d[g_detail_idx].fmcw012,g_fmcw3_d[g_detail_idx].fmcw013,g_fmcw3_d[g_detail_idx].fmcw019, 
                       g_fmcw3_d[g_detail_idx].fmcw024,g_fmcw3_d[g_detail_idx].fmcw014,g_fmcw3_d[g_detail_idx].fmcw015, 
                       g_fmcw3_d[g_detail_idx].fmcw020,g_fmcw3_d[g_detail_idx].fmcw025)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmcw_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_fmcw2_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'3'" THEN 
         CALL g_fmcw3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      #這裡刪除第二三頁簽最後一行是因為上方有判斷新增的時候如果在某一頁簽新增則其他頁簽增加一行,這裡會產生一個空行
      CALL g_fmcw2_d.DeleteElement(g_fmcw2_d.getLength())    #160302-00030#1 Add
      CALL g_fmcw3_d.DeleteElement(g_fmcw3_d.getLength())    #160302-00030#1 Add
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION afmt170_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2','3',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "fmcw_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL afmt170_fmcw_t_mask_restore('restore_mask_o')
               
      UPDATE fmcw_t 
         SET (fmcwdocno,
              fmcwseq
              ,fmcw021,fmcw022,fmcw001,fmcw002,fmcw003,fmcw004,fmcw005,fmcw006,fmcw010,fmcw011,fmcw017,fmcw018,fmcw023,fmcw026,fmcw007,fmcw008,fmcw009,fmcw016,fmcw012,fmcw013,fmcw019,fmcw024,fmcw014,fmcw015,fmcw020,fmcw025) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_fmcw_d[g_detail_idx].fmcw021,g_fmcw_d[g_detail_idx].fmcw022,g_fmcw_d[g_detail_idx].fmcw001, 
                  g_fmcw_d[g_detail_idx].fmcw002,g_fmcw_d[g_detail_idx].fmcw003,g_fmcw_d[g_detail_idx].fmcw004, 
                  g_fmcw_d[g_detail_idx].fmcw005,g_fmcw_d[g_detail_idx].fmcw006,g_fmcw_d[g_detail_idx].fmcw010, 
                  g_fmcw_d[g_detail_idx].fmcw011,g_fmcw_d[g_detail_idx].fmcw017,g_fmcw_d[g_detail_idx].fmcw018, 
                  g_fmcw_d[g_detail_idx].fmcw023,g_fmcw_d[g_detail_idx].fmcw026,g_fmcw2_d[g_detail_idx].fmcw007, 
                  g_fmcw2_d[g_detail_idx].fmcw008,g_fmcw2_d[g_detail_idx].fmcw009,g_fmcw2_d[g_detail_idx].fmcw016, 
                  g_fmcw3_d[g_detail_idx].fmcw012,g_fmcw3_d[g_detail_idx].fmcw013,g_fmcw3_d[g_detail_idx].fmcw019, 
                  g_fmcw3_d[g_detail_idx].fmcw024,g_fmcw3_d[g_detail_idx].fmcw014,g_fmcw3_d[g_detail_idx].fmcw015, 
                  g_fmcw3_d[g_detail_idx].fmcw020,g_fmcw3_d[g_detail_idx].fmcw025) 
         WHERE fmcwent = g_enterprise AND fmcwdocno = ps_keys_bak[1] AND fmcwseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmcw_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmcw_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL afmt170_fmcw_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION afmt170_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION afmt170_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION afmt170_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL afmt170_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2','3',"
   #僅鎖定自身table
   LET ls_group = "fmcw_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN afmt170_bcl USING g_enterprise,
                                       g_fmcv_m.fmcvdocno,g_fmcw_d[g_detail_idx].fmcwseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "afmt170_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION afmt170_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','2','3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE afmt170_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION afmt170_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("fmcvdocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("fmcvdocno",TRUE)
      CALL cl_set_comp_entry("fmcvdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("fmcvdocdt",TRUE)
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION afmt170_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_success  LIKE type_t.num5    
   DEFINE l_slip     LIKE type_t.chr10  
   DEFINE l_dfin0033 LIKE type_t.chr80 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("fmcvdocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("fmcvdocno",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("fmcvdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   IF NOT cl_null(g_fmcv_m.fmcvdocno) THEN
      #获取单别
      CALL s_aooi200_fin_get_slip(g_fmcv_m.fmcvdocno) RETURNING l_success,l_slip
      #是否可改日期
      CALL s_fin_get_doc_para(g_glaald,g_fmcv_m.fmcvdocno,l_slip,'D-FIN-0033') RETURNING l_dfin0033
      IF l_dfin0033 = "N"  THEN
         CALL cl_set_comp_entry("fmcvdocdt",FALSE)
      ELSE
         CALL cl_set_comp_entry("fmcvdocdt",TRUE)
      END IF
   END IF
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION afmt170_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION afmt170_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION afmt170_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION afmt170_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_fmcv_m.fmcvstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION afmt170_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION afmt170_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION afmt170_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " fmcvdocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "fmcv_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "fmcw_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION afmt170_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   DEFINE l_success  LIKE type_t.num5
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_fmcv_m.fmcvdocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN afmt170_cl USING g_enterprise,g_fmcv_m.fmcvdocno
   IF STATUS THEN
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt170_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE afmt170_master_referesh USING g_fmcv_m.fmcvdocno INTO g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp, 
       g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt,g_fmcv_m.fmcvownid_desc,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid_desc, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT afmt170_action_chk() THEN
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmcv_m.fmcvsite,g_fmcv_m.fmcvsite_desc,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvcomp_desc, 
       g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvownid_desc, 
       g_fmcv_m.fmcvowndp,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtid_desc,g_fmcv_m.fmcvcrtdp, 
       g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvmoddt, 
       g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfid_desc,g_fmcv_m.fmcvcnfdt
 
   CASE g_fmcv_m.fmcvstus
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL afmt170_fmcvsite()
   CALL s_fin_date_close_chk(g_glaald,g_fmcv_m.fmcvcomp,'ANM',g_fmcv_m.fmcvdocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_fmcv_m.fmcvstus
            
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "C"
               HIDE OPTION "closed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_fmcv_m.fmcvstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)
      END CASE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT afmt170_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt170_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT afmt170_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt170_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
        
            #end add-point
         END IF
         EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
 
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "A" 
      AND lc_state <> "D"
      AND lc_state <> "N"
      AND lc_state <> "Y"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "C"
      AND lc_state <> "X"
      ) OR 
      g_fmcv_m.fmcvstus = lc_state OR cl_null(lc_state) THEN
      CLOSE afmt170_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   #確認
   IF lc_state = 'Y' THEN
      IF NOT cl_ask_confirm('aim-00108') THEN   #是否執行確認？
          CALL s_transaction_end('N','0')      
          RETURN
      END IF
      IF NOT s_afmt170_confirm_chk(g_fmcv_m.fmcvdocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      IF NOT s_afmt170_conf_upd(g_fmcv_m.fmcvdocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
   END IF
   IF lc_state = 'N' THEN
      IF NOT cl_ask_confirm('aim-00110') THEN   #是否執行取消確認？
         CALL s_transaction_end('N','0')       
         RETURN
      ELSE
      END IF
      IF NOT s_afmt170_unconfirm_chk(g_fmcv_m.fmcvdocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      #151202-00020#2--add---str--
      IF NOT s_afmt170_unconf_upd(g_fmcv_m.fmcvdocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      #151202-00020#2--add---end--
   END IF

   #151125-00001#2 --- add start ---
   IF lc_state = 'X' THEN
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0') 
         RETURN
      END IF
   END IF
   #151125-00001#2 --- add end   ---
   #end add-point
   
   LET g_fmcv_m.fmcvmodid = g_user
   LET g_fmcv_m.fmcvmoddt = cl_get_current()
   LET g_fmcv_m.fmcvstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE fmcv_t 
      SET (fmcvstus,fmcvmodid,fmcvmoddt) 
        = (g_fmcv_m.fmcvstus,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt)     
    WHERE fmcvent = g_enterprise AND fmcvdocno = g_fmcv_m.fmcvdocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE afmt170_master_referesh USING g_fmcv_m.fmcvdocno INTO g_fmcv_m.fmcvsite,g_fmcv_m.fmcvcomp, 
          g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvowndp, 
          g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtdp,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmoddt, 
          g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfdt,g_fmcv_m.fmcvownid_desc,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid_desc, 
          g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_fmcv_m.fmcvsite,g_fmcv_m.fmcvsite_desc,g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvcomp_desc, 
          g_fmcv_m.fmcvdocno,g_fmcv_m.fmcvdocdt,g_fmcv_m.fmcvstus,g_fmcv_m.fmcvownid,g_fmcv_m.fmcvownid_desc, 
          g_fmcv_m.fmcvowndp,g_fmcv_m.fmcvowndp_desc,g_fmcv_m.fmcvcrtid,g_fmcv_m.fmcvcrtid_desc,g_fmcv_m.fmcvcrtdp, 
          g_fmcv_m.fmcvcrtdp_desc,g_fmcv_m.fmcvcrtdt,g_fmcv_m.fmcvmodid,g_fmcv_m.fmcvmodid_desc,g_fmcv_m.fmcvmoddt, 
          g_fmcv_m.fmcvcnfid,g_fmcv_m.fmcvcnfid_desc,g_fmcv_m.fmcvcnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   LET g_success = 'Y'
   IF lc_state = 'Y' THEN 
       CALL afmt170_confrim_ins()
       IF g_success = 'Y' THEN
          CALL s_transaction_end('Y','1')
       ELSE
          CALL s_transaction_end('N','1')
          RETURN
       END IF
    END IF
    
    IF lc_state = 'N' THEN #取消审核
       DELETE FROM nmbc_t WHERE nmbcdocno = g_fmcv_m.fmcvdocno AND nmbcent = g_enterprise 
       IF g_success = 'Y' THEN
          CALL s_transaction_end('Y','1')
       ELSE
          CALL s_transaction_end('N','1')
          RETURN
       END IF
    END IF       
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE afmt170_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt170_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt170.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION afmt170_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_fmcw_d.getLength() THEN
         LET g_detail_idx = g_fmcw_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmcw_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmcw_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_fmcw2_d.getLength() THEN
         LET g_detail_idx = g_fmcw2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmcw2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmcw2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_fmcw3_d.getLength() THEN
         LET g_detail_idx = g_fmcw3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmcw3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmcw3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afmt170_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   DEFINE sum1     LIKE type_t.num10
   DEFINE sum2     LIKE type_t.num10
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
    
   #end add-point
    
   LET l_ac = li_ac
   
   CALL afmt170_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION afmt170_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt170.status_show" >}
PRIVATE FUNCTION afmt170_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="afmt170.mask_functions" >}
&include "erp/afm/afmt170_mask.4gl"
 
{</section>}
 
{<section id="afmt170.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION afmt170_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
    DEFINE l_success  LIKE type_t.num5
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL afmt170_show()
   CALL afmt170_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   CALL s_afmt170_confirm_chk(g_fmcv_m.fmcvdocno)
         RETURNING l_success
    IF NOT l_success THEN
       CLOSE afmt170_cl
       CALL s_transaction_end('N','0')
       RETURN FALSE
    END IF
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_fmcv_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_fmcw_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_fmcw2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_fmcw3_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
 
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL afmt170_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt170_ui_headershow()
   CALL afmt170_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION afmt170_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt170_ui_headershow()  
   CALL afmt170_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="afmt170.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION afmt170_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_fmcv_m.fmcvdocno
   LET g_pk_array[1].column = 'fmcvdocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt170.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="afmt170.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION afmt170_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL afmt170_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_fmcv_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt170.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION afmt170_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#12 2016/08/24 By 07900   --add--s--
   SELECT fmcvstus INTO g_fmcv_m.fmcvstus
     FROM fmcv_t
    WHERE fmcvent = g_enterprise
      AND fmcvdocno = g_fmcv_m.fmcvdocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_fmcv_m.fmcvstus
        WHEN 'C'
           LET g_errno = 'ain-00197'
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_fmcv_m.fmcvdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL afmt170_set_act_visible()
        CALL afmt170_set_act_no_visible()
        CALL afmt170_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#12 2016/08/24 By 07900   --add--e--
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt170.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL afmt170_fmcw006 (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2015/11/20 By lihuanc
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt170_fmcw006()
DEFINE  l_fmcw005             LIKE fmcw_t.fmcw005,
        l_fmcw006             LIKE fmcw_t.fmcw006,
        l_fmbj005             LIKE fmbj_t.fmbj005,
        l_fmck005             LIKE fmck_t.fmck005,
        l_fmck006             LIKE fmck_t.fmck006,
        l_fmck007             LIKE fmck_t.fmck007,
        l_glaald              LIKE glaa_t.glaald,
        l_glaa001             LIKE glaa_t.glaa001,
        l_glaa016             LIKE glaa_t.glaa016, 
        l_glaa020             LIKE glaa_t.glaa020
#151202-00020#2 add---str
DEFINE  l_glaa015             LIKE glaa_t.glaa015     
DEFINE  l_glaa019             LIKE glaa_t.glaa019    
DEFINE  l_fmcz006             LIKE fmcz_t.fmcz006
DEFINE  l_fmcz011             LIKE fmcz_t.fmcz011
DEFINE  l_fmcz013             LIKE fmcz_t.fmcz013
DEFINE  l_fmcz015             LIKE fmcz_t.fmcz015
DEFINE  l_fmcz019             LIKE fmcz_t.fmcz019
DEFINE  l_fmcz020             LIKE fmcz_t.fmcz020
DEFINE  l_fmcz021             LIKE fmcz_t.fmcz021
DEFINE  l_fmcz022             LIKE fmcz_t.fmcz022
DEFINE  l_fmcw018             LIKE fmcw_t.fmcw018
DEFINE  l_fmcw019             LIKE fmcw_t.fmcw019
DEFINE  l_fmcw020             LIKE fmcw_t.fmcw020
#151202-00020#2 add---end
DEFINE  l_fmcz009             LIKE fmcz_t.fmcz009   #160405-00009#2
        
        SELECT DISTINCT fmck002,fmck004,fmck005,fmck006,fmck007 #币别 账户 金额 利率方式 浮动方式 利率
          INTO l_fmcw005,l_fmcw006, #币别 账户 金额
               l_fmck005,l_fmck006,l_fmck007 #利率方式 浮动方式 利率
          FROM fmck_t
         WHERE fmckdocno=g_fmcw_d[l_ac].fmcw002 
           AND fmckseq = g_fmcw_d[l_ac].fmcw003
           AND fmckent = g_enterprise
         #取得主帐别
         SELECT glaald,glaa015,glaa019   #151202-00020#2 add glaa015,glaa019
           INTO l_glaald,l_glaa015,l_glaa019 #法人对应的主帐别的帐别  #151202-00020#2 add l_glaa015,l_glaa019
           FROM glaa_t 
          WHERE glaacomp = g_fmcv_m.fmcvcomp 
            AND glaaent = g_enterprise
            AND glaa014 = 'Y'
         #取得币别 账户 金额
        #LET g_fmcw_d[l_ac].fmcw005 = l_fmcw005   #yangtt mark
       #####  LET g_fmcw_d[l_ac].fmcw006 = l_fmcw006
         DISPLAY BY NAME g_fmcw_d[l_ac].fmcw005   #####,g_fmcw_d[l_ac].fmcw006 
         #取得匯率
         CALL s_fin_get_curr_rate(g_fmcv_m.fmcvcomp,l_glaald,g_today,g_fmcw_d[l_ac].fmcw005,'') #（法人，帐别，时间，币别，参数）
                     RETURNING g_fmcw_d[l_ac].fmcw010,g_fmcw3_d[l_ac].fmcw012,g_fmcw3_d[l_ac].fmcw014
         #取得使用币别，汇率参照表，使用汇率
         SELECT glaa001#,glaa002,glaa025 #使用币别，汇率参照表，使用汇率
           INTO l_glaa001#,l_glaa002,l_glaa025
           FROM glaa_t 
          WHERE glaald = l_glaald #主帐别
            AND glaacomp = g_fmcv_m.fmcvcomp #法人
            AND glaaent = g_enterprise
         SELECT glaa016#,glaa017,glaa018 #币别2，换算基准，汇率采用
           INTO l_glaa016#,l_glaa017,l_glaa018
           FROM glaa_t 
          WHERE glaald = l_glaald #主帐别
            AND glaa015 = 'Y'
            AND glaacomp = g_fmcv_m.fmcvcomp #法人
            AND glaaent = g_enterprise
         SELECT glaa020#,glaa021,glaa023 #币别3，换算基准，汇率采用
           INTO l_glaa020#,l_glaa021,l_glaa023
           FROM glaa_t 
          WHERE glaald = l_glaald #主帐别
            AND glaa019 = 'Y'
            AND glaacomp = g_fmcv_m.fmcvcomp #法人
            AND glaaent = g_enterprise
#          #汇率取位
#         CALL s_curr_round_ld('1',g_glaald,l_fmcw005,g_fmcw_d[l_ac].fmcw010,1) #(1.取币种参照表号,帐别，币种，利率，1：按单价设定)
#                     RETURNING g_sub_success,g_errno,g_fmcw_d[l_ac].fmcw010
#         CALL s_curr_round_ld('1',g_glaald,l_fmcw005,g_fmcw_d[l_ac].fmcw012,1) #(1.取币种参照表号,帐别，币种，利率，1：按单价设定)
#                     RETURNING g_sub_success,g_errno,g_fmcw_d[l_ac].fmcw012
#         CALL s_curr_round_ld('1',g_glaald,l_fmcw005,g_fmcw_d[l_ac].fmcw014,1) #(1.取币种参照表号,帐别，币种，利率，1：按单价设定)
#                     RETURNING g_sub_success,g_errno,g_fmcw_d[l_ac].fmcw014
#         UPDATE fmcw_t              #单身表(afmt170)
#                        SET fmcw010 = g_fmcw_d[l_ac].fmcw010, #利率
#                            fmcw012 = g_fmcw_d[l_ac].fmcw012,
#                            fmcw014 = g_fmcw_d[l_ac].fmcw014
#                      WHERE fmcw001 = g_fmcw_d[l_ac].fmcw002 #融资合同号
#                        AND fmcw002 = g_fmcw_d[l_ac].fmcw003 #融资合同项次
#                        AND fmcw005 = l_fmcw005 #币别
#                        AND fmcwent = g_enterprise
#                     IF SQLCA.SQLCODE THEN
#                         INITIALIZE g_errparam TO NULL 
#                         LET g_errparam.extend = "upd fmcw_t" 
#                         LET g_errparam.code   = SQLCA.sqlcode 
#                         LET g_errparam.popup  = TRUE 
#                         CALL cl_err()
#                         CALL s_transaction_end('N','0')
#                         LET g_success = 'N' 
#                         RETURN 
#                     END IF
#                     IF  g_success = 'Y' THEN 
#                         CALL s_transaction_end('Y','0')
#                         CALL afmt170_show()
#                     ELSE
#                         RETURN   #不操作【基准利率确定】           
#                     END IF  
         #计算金额
         LET g_fmcw_d[l_ac].fmcw011 = g_fmcw_d[l_ac].fmcw010 * g_fmcw_d[l_ac].fmcw006
         LET g_fmcw3_d[l_ac].fmcw013 = g_fmcw3_d[l_ac].fmcw012 * g_fmcw_d[l_ac].fmcw006
         LET g_fmcw3_d[l_ac].fmcw015 = g_fmcw3_d[l_ac].fmcw014 * g_fmcw_d[l_ac].fmcw006
         #金额取位
         CALL s_curr_round_ld('1',l_glaald,l_glaa001,g_fmcw_d[l_ac].fmcw011,2) #(1.取币种参照表号,帐别，币种1，金额1，2：按金额设定)
                     RETURNING g_sub_success,g_errno,g_fmcw_d[l_ac].fmcw011
         CALL s_curr_round_ld('1',l_glaald,l_glaa016,g_fmcw3_d[l_ac].fmcw013,2) #(1.取币种参照表号,帐别，币种2，金额2，2：按金额设定)
                     RETURNING g_sub_success,g_errno,g_fmcw3_d[l_ac].fmcw013
         CALL s_curr_round_ld('1',l_glaald,l_glaa020,g_fmcw3_d[l_ac].fmcw015,2) #(1.取币种参照表号,帐别，币种3，金额3，2：按金额设定)
                     RETURNING g_sub_success,g_errno,g_fmcw3_d[l_ac].fmcw015
         #151202-00020#2---add---str--
         SELECT fmcs009,fmcs011,fmcs013 
           INTO l_fmcw018,l_fmcw019,l_fmcw020
           FROM fmcs_t
          WHERE fmcsent = g_enterprise AND fmcsdocno = g_fmcw_d[l_ac].fmcw021
            AND fmcsseq = g_fmcw_d[l_ac].fmcw022
         IF g_fmcw_d[l_ac].fmcw004 = '1' THEN  #还款性质=1.本金
            #历史汇率	还款性质=本金时，按融资到帐单+项次带出汇率fmcs009	
            LET g_fmcw_d[l_ac].fmcw018 = l_fmcw018
            LET g_fmcw3_d[l_ac].fmcw019 = l_fmcw019
            LET g_fmcw3_d[l_ac].fmcw020 = l_fmcw020
           #本币汇差	还款性质=本金时，金额*（汇率-历史汇率）
           LET g_fmcw_d[l_ac].fmcw023 = g_fmcw_d[l_ac].fmcw011 *(g_fmcw_d[l_ac].fmcw010 - g_fmcw_d[l_ac].fmcw018)
           CALL s_curr_round_ld('1',l_glaald,l_glaa001,g_fmcw_d[l_ac].fmcw023,2)
                     RETURNING g_sub_success,g_errno,g_fmcw_d[l_ac].fmcw023
           IF l_glaa015 = 'Y' THEN
              #本币汇差二	还款性质=本金时，金额*（汇率-历史汇率二）
              LET g_fmcw3_d[l_ac].fmcw024 = g_fmcw3_d[l_ac].fmcw013 *(g_fmcw3_d[l_ac].fmcw012 - g_fmcw3_d[l_ac].fmcw019)
              CALL s_curr_round_ld('1',l_glaald,l_glaa016,g_fmcw3_d[l_ac].fmcw024,2)
                     RETURNING g_sub_success,g_errno,g_fmcw3_d[l_ac].fmcw024
           END IF
           
           IF l_glaa019 = 'Y' THEN
              #本币汇差三	还款性质=本金时，金额*（汇率-历史汇率三）
              LET g_fmcw3_d[l_ac].fmcw025 = g_fmcw3_d[l_ac].fmcw015 *(g_fmcw3_d[l_ac].fmcw014 - g_fmcw3_d[l_ac].fmcw020)
              CALL s_curr_round_ld('1',l_glaald,l_glaa020,g_fmcw3_d[l_ac].fmcw025,2)
                     RETURNING g_sub_success,g_errno,g_fmcw3_d[l_ac].fmcw025
           END IF
         END IF
         IF g_fmcw_d[l_ac].fmcw004 = '2' THEN  #还款性质=2.利息
           
           SELECT SUM(fmcz006),SUM(fmcz011),SUM(fmcz013),SUM(fmcz015),SUM(fmcz019),SUM(fmcz020),SUM(fmcz021),SUM(fmcz022),SUM(fmcz009)   #160405-00009#2 add SUM(fmcz009) 
             INTO l_fmcz006,l_fmcz011,l_fmcz013,l_fmcz015,l_fmcz019,l_fmcz020,l_fmcz021,l_fmcz022,l_fmcz009  #160405-00009#2 add l_fmcz009
             FROM fmcz_t,fmcy_t  #160405-00009#2 add fmcy_t
            WHERE fmczent = g_enterprise AND fmcz016 = g_fmcw_d[l_ac].fmcw021
              AND fmcz017 = g_fmcw_d[l_ac].fmcw022 AND fmcz004 = '1'
              AND fmcyent = fmczent AND fmcydocno=fmczdocno AND fmcydocdt<=g_fmcv_m.fmcvdocdt #160405-00009#2 add
              
           IF cl_null(l_fmcz006) THEN LET l_fmcz006 = 0 END IF
           IF cl_null(l_fmcz011) THEN LET l_fmcz011 = 0 END IF
           IF cl_null(l_fmcz013) THEN LET l_fmcz013 = 0 END IF
           IF cl_null(l_fmcz015) THEN LET l_fmcz015 = 0 END IF
           IF cl_null(l_fmcz019) THEN LET l_fmcz019 = 0 END IF
           IF cl_null(l_fmcz020) THEN LET l_fmcz020 = 0 END IF
           IF cl_null(l_fmcz021) THEN LET l_fmcz021 = 0 END IF
           IF cl_null(l_fmcz022) THEN LET l_fmcz022 = 0 END IF
           IF cl_null(l_fmcz009) THEN LET l_fmcz009 = 0 END IF #160405-00009#2 add
           
           #已計提未支付利息,还款性质=利息时，到计提利息档取得 (计提利息原币-已归还利息原币)
           #LET g_fmcw_d[l_ac].fmcw017 = l_fmcz006 - l_fmcz019 #160405-00009#2 mark
           LET g_fmcw_d[l_ac].fmcw017 = l_fmcz009 - l_fmcz019  #160405-00009#2 add

           #历史汇率:还款性质=利息时，到计提利息档取得 （计提利息本币-已归还利息本币）/(计提利息原币-已归还利息原币)
           #LET g_fmcw_d[l_ac].fmcw018 = (l_fmcz011 - l_fmcz020)/(l_fmcz006 - l_fmcz019)  #160405-00009#2 mark
           LET g_fmcw_d[l_ac].fmcw018 = (l_fmcz011 - l_fmcz020)/(l_fmcz009 - l_fmcz019)   #160405-00009#2 add
           IF g_fmcw_d[l_ac].fmcw018 = 0 OR cl_null(g_fmcw_d[l_ac].fmcw018) THEN
              LET g_fmcw_d[l_ac].fmcw018 = l_fmcw018
           END IF
           #本币汇差:还款性质=利息时，已计提未支付金额*（汇率-历史汇率）
           LET g_fmcw_d[l_ac].fmcw023 = g_fmcw_d[l_ac].fmcw017 *(g_fmcw_d[l_ac].fmcw010 - g_fmcw_d[l_ac].fmcw018)
           CALL s_curr_round_ld('1',l_glaald,l_glaa001,g_fmcw_d[l_ac].fmcw017,2)
                     RETURNING g_sub_success,g_errno,g_fmcw_d[l_ac].fmcw017
           CALL s_curr_round_ld('1',l_glaald,l_glaa001,g_fmcw_d[l_ac].fmcw023,2)
                     RETURNING g_sub_success,g_errno,g_fmcw_d[l_ac].fmcw023
           IF l_glaa015 = 'Y' THEN
              #历史汇率:还款性质=利息时，到计提利息档取得 （计提利息本币二-已归还利息本币二）/(计提利息原币-已归还利息原币)
              #LET g_fmcw3_d[l_ac].fmcw019 = (l_fmcz013 - l_fmcz021)/(l_fmcz006 - l_fmcz019)  #160405-00009#2 mark
              LET g_fmcw3_d[l_ac].fmcw019 = (l_fmcz013 - l_fmcz021)/(l_fmcz009 - l_fmcz019)   #160405-00009#2 add
              IF g_fmcw3_d[l_ac].fmcw019 = 0 OR cl_null(g_fmcw3_d[l_ac].fmcw019) THEN
                 LET g_fmcw3_d[l_ac].fmcw019 = l_fmcw019
              END IF
              #本币二汇差:还款性质=利息时，已计提未支付金额*（汇率-历史汇率二）
              LET g_fmcw3_d[l_ac].fmcw024 = g_fmcw_d[l_ac].fmcw017 *(g_fmcw3_d[l_ac].fmcw012 - g_fmcw3_d[l_ac].fmcw019)
              CALL s_curr_round_ld('1',l_glaald,l_glaa016,g_fmcw3_d[l_ac].fmcw024,2)
                     RETURNING g_sub_success,g_errno,g_fmcw3_d[l_ac].fmcw024
           END IF
           
           IF l_glaa019 = 'Y' THEN
              #历史汇率:还款性质=利息时，到计提利息档取得 （计提利息本币三-已归还利息本币三）/(计提利息原币-已归还利息原币)
              #LET g_fmcw3_d[l_ac].fmcw020 = (l_fmcz015 - l_fmcz022)/(l_fmcz006 - l_fmcz019)  #160405-00009#2 mark 
              LET g_fmcw3_d[l_ac].fmcw020 = (l_fmcz015 - l_fmcz022)/(l_fmcz009 - l_fmcz019)   #160405-00009#2 add
              IF g_fmcw3_d[l_ac].fmcw020 = 0 OR cl_null(g_fmcw3_d[l_ac].fmcw020) THEN
                 LET g_fmcw3_d[l_ac].fmcw020 = l_fmcw020
              END IF
              #本币三汇差:还款性质=利息时，已计提未支付金额*（汇率-历史汇率三）
              LET g_fmcw3_d[l_ac].fmcw025 = g_fmcw_d[l_ac].fmcw017 *(g_fmcw3_d[l_ac].fmcw014 - g_fmcw3_d[l_ac].fmcw020)
              CALL s_curr_round_ld('1',l_glaald,l_glaa020,g_fmcw3_d[l_ac].fmcw025,2)
                     RETURNING g_sub_success,g_errno,g_fmcw3_d[l_ac].fmcw025
           END IF
         END IF
         #151202-00020#2---add---end--
         
         DISPLAY BY NAME g_fmcw_d[l_ac].fmcw011,g_fmcw3_d[l_ac].fmcw013,g_fmcw3_d[l_ac].fmcw015
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL afmt170_confrim_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2015/11/21 By lihuanc
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt170_confrim_ins()
      
   DEFINE l_ac              LIKE type_t.num10
   DEFINE l_fmcwseq         LIKE fmcw_t.fmcwseq
      LET l_ac = 1 
      SELECT MAX(fmcwseq) INTO l_fmcwseq 
        FROM fmcw_t 
       WHERE fmcwent = g_enterprise AND fmcwdocno = g_fmcv_m.fmcvdocno 
 
      FOR l_ac = 1 TO l_fmcwseq 
          INSERT INTO nmbc_t
                  (nmbcent,
                   nmbccomp,nmbcsite,nmbcdocno,nmbcseq,
                   nmbc001,nmbc002,nmbc003,nmbc005,nmbc006,nmbc007,nmbc100,
                   nmbc101,nmbc103,nmbc113,nmbc121,nmbc123,nmbc131,nmbc133,nmbc012
                   ,nmbcorga )#160322-00025#23
                 VALUES(g_enterprise,
                   #151202-00020#2---mod--str
#                   g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvsite,g_fmcv_m.fmcvdocno,g_fmcw_d[l_ac].fmcwseq,'afmt070',
#                   g_fmcw_d[l_ac].fmcw007,g_fmcw_d[l_ac].fmcw007,g_fmcv_m.fmcvdocdt,g_fmcw_d[l_ac].fmcw008,g_fmcw_d[l_ac].fmcw009,
#                   g_fmcw_d[l_ac].fmcw005,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw011,
#                   g_fmcw_d[l_ac].fmcw012,g_fmcw_d[l_ac].fmcw013,g_fmcw_d[l_ac].fmcw014,g_fmcw_d[l_ac].fmcw015,g_fmcw_d[l_ac].fmcw016)
                   g_fmcv_m.fmcvcomp,g_fmcv_m.fmcvsite,g_fmcv_m.fmcvdocno,g_fmcw_d[l_ac].fmcwseq,'afmt170',
                   g_fmcw2_d[l_ac].fmcw007,g_fmcw2_d[l_ac].fmcw007,g_fmcv_m.fmcvdocdt,g_fmcw2_d[l_ac].fmcw008,g_fmcw2_d[l_ac].fmcw009,
                   g_fmcw_d[l_ac].fmcw005,g_fmcw_d[l_ac].fmcw010,g_fmcw_d[l_ac].fmcw006,g_fmcw_d[l_ac].fmcw011,
                   g_fmcw3_d[l_ac].fmcw012,g_fmcw3_d[l_ac].fmcw013,g_fmcw3_d[l_ac].fmcw014,g_fmcw3_d[l_ac].fmcw015,g_fmcw2_d[l_ac].fmcw016
                   ,g_fmcw_d[l_ac].fmcw001) #160322-00025#23
                   #151202-00020#2---mod--end
          IF l_ac > g_max_browse THEN
             EXIT FOR
          END IF
      
      
       END FOR       
  
   
END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL afmt170_fmcvsite (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2015/11/24 By lihuanc
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt170_fmcvsite()
     LET g_glaald = null
     LET g_glaa024 = null
     LET g_glaa003 = null
     SELECT glaald,glaa003,glaa005,glaa024,glaa025,glaa026 
       INTO g_glaald,g_glaa003,g_glaa005,g_glaa024,g_glaa025,g_glaa026 FROM glaa_t,ooef_t
       WHERE glaaent = ooefent AND glaacomp = ooef017 
           AND glaaent = g_enterprise AND ooef001 = g_fmcv_m.fmcvsite
           AND glaa014 = 'Y'
END FUNCTION

################################################################################
# Descriptions...: 到账单号检查
# Memo...........:
# Usage..........: CALL afmt170_fmcw021_chk(p_fmcw021,p_fmcw022)
# Date & Author..: 2016/01/13 By yangtt
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt170_fmcw021_chk(p_fmcw021,p_fmcw022)
DEFINE p_fmcw021         LIKE fmcw_t.fmcw021
DEFINE p_fmcw022         LIKE fmcw_t.fmcw022
DEFINE l_fmcrstus        LIKE fmcr_t.fmcrstus 
DEFINE l_n               LIKE type_t.num5
   
   LET g_errno = ''
   IF NOT cl_null(p_fmcw021) THEN
      SELECT fmcrstus INTO l_fmcrstus FROM fmcr_t
       WHERE fmcrent = g_enterprise AND fmcrdocno = p_fmcw021 
      CASE
         WHEN SQLCA.SQLCODE = 100 LET g_errno = 'afm-00225'
         WHEN l_fmcrstus <> 'Y' LET g_errno = 'afm-00226'
      END CASE
   END IF
   
   LET l_n = 0 
   IF NOT cl_null(p_fmcw021) AND NOT cl_null(p_fmcw022) THEN
      SELECT COUNT(*) INTO l_n FROM fmcs_t
       WHERE fmcsent = g_enterprise AND fmcsdocno = p_fmcw021 
         AND fmcsseq = p_fmcw022
      IF l_n = 0 THEN
         LET g_errno = 'afm-00227'
      END IF
   END IF
END FUNCTION

################################################################################
# Descriptions...: 到账单号栏位带值
# Memo...........:
# Usage..........: CALL afmt170_fmcw021_ref(p_fmcw021,p_fmcw022)
# Date & Author..: 2016/01/13 By yangtt
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt170_fmcw021_ref(p_fmcw021,p_fmcw022)
DEFINE p_fmcw021         LIKE fmcw_t.fmcw021
DEFINE p_fmcw022         LIKE fmcw_t.fmcw022

   IF NOT cl_null(p_fmcw021) AND NOT cl_null(p_fmcw022) THEN
      SELECT fmcj002 INTO g_fmcw_d[l_ac].fmcw002_desc FROM fmcj_t
       WHERE fmcjent =g_enterprise AND fmcjdocno = g_fmcw_d[l_ac].fmcw002
       
      SELECT fmcs001,fmcs002,fmcs003,fmcs004,fmcs007,fmcs004
        INTO g_fmcw_d[l_ac].fmcw002,g_fmcw_d[l_ac].fmcw003,g_fmcw_d[l_ac].fmcw001,g_fmcw_d[l_ac].fmcw003_desc,
             g_fmcw_d[l_ac].fmcw005,g_fmcw2_d[l_ac].fmcw007
        FROM fmcs_t
       WHERE fmcsent = g_enterprise AND fmcsdocno = p_fmcw021
         AND fmcsseq = p_fmcw022
   END IF
END FUNCTION

################################################################################
# Descriptions...: 本位币栏位隐藏显示
# Memo...........:
# Usage..........: CALL afmt170_fmcw_visible()
# Date & Author..: 2016/01/24 By yangtt
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt170_fmcw_visible()
   #取得主帐别
   SELECT glaald,glaa015,glaa019   
     INTO g_glaald,g_glaa015,g_glaa019 
     FROM glaa_t 
    WHERE glaacomp = g_fmcv_m.fmcvcomp 
      AND glaaent = g_enterprise
      AND glaa014 = 'Y'
   CALL cl_set_comp_visible('fmcw014,fmcw015,fmcw020,fmcw025',TRUE)
   CALL cl_set_comp_visible('fmcw012,fmcw013,fmcw019,fmcw024',TRUE)
   IF g_glaa015 = 'Y' THEN
      CALL cl_set_comp_visible('fmcw012,fmcw013,fmcw019,fmcw024',TRUE)
   ELSE
      CALL cl_set_comp_visible('fmcw012,fmcw013,fmcw019,fmcw024',FALSE)
   END IF
   IF g_glaa019 = 'Y' THEN
      CALL cl_set_comp_visible('fmcw014,fmcw015,fmcw020,fmcw025',TRUE)
   ELSE
      CALL cl_set_comp_visible('fmcw014,fmcw015,fmcw020,fmcw025',FALSE)
   END IF
END FUNCTION

################################################################################
# Descriptions...: 栏位检查
# Memo...........:
# Usage..........: CALL afmt170_fmcw006_chk()
# Date & Author..: 2015/01/15 By yangtt
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt170_fmcw006_chk()
   DEFINE l_sumfmcw006           LIKE fmcw_t.fmcw006
   DEFINE l_sumfmcs008           LIKE fmcs_t.fmcs008
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_fmcs017_sum          LIKE fmcs_t.fmcs017   
   
   LET g_errno = ''
   IF NOT cl_null(g_fmcw_d[l_ac].fmcw006) THEN 
      IF g_fmcw_d[l_ac].fmcw004 = '1' THEN  #类别=1.本金
         SELECT SUM(fmcw006) INTO l_sumfmcw006 FROM fmcw_t
          WHERE fmcw021 = g_fmcw_d[l_ac].fmcw021
            AND fmcw022 = g_fmcw_d[l_ac].fmcw022
            AND fmcw004 = '1'
            AND fmcwent = g_enterprise
         IF cl_null(l_sumfmcw006) THEN LET l_sumfmcw006 = 0 END IF
         #到账金额，已归还本金
         SELECT SUM(fmcs008),SUM(fmcs017) INTO l_sumfmcs008,l_fmcs017_sum FROM fmcs_t
          WHERE fmcsdocno = g_fmcw_d[l_ac].fmcw021
            AND fmcsseq = g_fmcw_d[l_ac].fmcw022
            AND fmcsent = g_enterprise
         
         IF cl_null(l_sumfmcs008) THEN LET l_sumfmcs008 = 0 END IF
         IF cl_null(l_fmcs017_sum) THEN LET l_fmcs017_sum = 0 END IF
         #融资到帐单号+项次的  到帐金额-已归还金额-未审核的还本付息单中相同单号+项次的本金金额   是否大于0，否则报错
         IF l_sumfmcs008 - l_fmcs017_sum - l_sumfmcw006 - g_fmcw_d[l_ac].fmcw006 < 0 THEN
             LET g_errno = "afm-00193" 
         END IF
      END IF              
   END IF 
END FUNCTION

################################################################################
# Descriptions...: 其他本位幣欄位顯示
# Memo...........:
# Usage..........: CALL afmt170_OtherCurr_dis(p_glaald)
#                  RETURNING ---
# Input parameter: p_glaald       帳套
# Return code....: ---
# Date & Author..: 2016/03/29 By 01727
# Modify.........: #160302-00030#3 Add
################################################################################
PRIVATE FUNCTION afmt170_OtherCurr_dis(p_glaald)
   DEFINE p_glaald         LIKE glaa_t.glaald
   DEFINE l_glaa015        LIKE glaa_t.glaa015
   DEFINE l_glaa016        LIKE glaa_t.glaa016
   DEFINE l_glaa019        LIKE glaa_t.glaa019
   DEFINE l_glaa020        LIKE glaa_t.glaa020
   DEFINE l_gzzd005        LIKE gzzd_t.gzzd005

   IF cl_null(p_glaald) THEN RETURN END IF

   CALL s_ld_sel_glaa(p_glaald,'glaa015|glaa016|glaa019|glaa020')
        RETURNING g_sub_success,l_glaa015,l_glaa016,l_glaa019,l_glaa020

   IF l_glaa015 = 'N' AND l_glaa019 = 'N' THEN
      CALL cl_set_comp_visible('bpage_2',FALSE)
      RETURN
   ELSE
      CALL cl_set_comp_visible('bpage_2',TRUE)
   END IF

   CALL cl_set_comp_visible("fmcw012,fmcw013,fmcw019,fmcw024",TRUE)
   CALL cl_set_comp_visible("fmcw014,fmcw015,fmcw020,fmcw025",TRUE)

   IF l_glaa015 = 'N' THEN
      CALL cl_set_comp_visible("fmcw012,fmcw013,fmcw019,fmcw024",FALSE)
   ELSE
      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw012'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa016,")"
      CALL cl_set_comp_att_text('fmcw012',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw013'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa016,")"
      CALL cl_set_comp_att_text('fmcw013',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw019'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa016,")"
      CALL cl_set_comp_att_text('fmcw019',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw024'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa016,")"
      CALL cl_set_comp_att_text('fmcw024',l_gzzd005)

   END IF

   IF l_glaa019 = 'N' THEN
      CALL cl_set_comp_visible("fmcw014,fmcw015,fmcw020,fmcw025",FALSE)
   ELSE
      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw014'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa020,")"
      CALL cl_set_comp_att_text('fmcw014',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw015'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa020,")"
      CALL cl_set_comp_att_text('fmcw015',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw020'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa020,")"
      CALL cl_set_comp_att_text('fmcw020',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt170'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcw025'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa020,")"
      CALL cl_set_comp_att_text('fmcw025',l_gzzd005)

   END IF

END FUNCTION

 
{</section>}
 
