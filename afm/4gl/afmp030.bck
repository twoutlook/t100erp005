#該程式未解開Section, 採用最新樣板產出!
{<section id="afmp030.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0004(2016-10-17 15:14:03), PR版次:0004(2016-10-28 16:31:41)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000026
#+ Filename...: afmp030
#+ Description: 融資系統整批拋轉還原作業
#+ Creator....: 01727(2016-03-05 10:04:11)
#+ Modifier...: 08171 -SD/PR- 08171
 
{</section>}
 
{<section id="afmp030.global" >}
#應用 p02 樣板自動產生(Version:19)
#add-point:填寫註解說明
# Modify.....: 140829-00070#30 15/01/13 By zhangwei 增加邏輯:憑證還原時,根據參數判斷是否需要更新分錄資料
#160318-00005#11    2016/03/25   by 07675   將重複內容的錯誤訊息置換為公用錯誤訊息
#160905-00002#3     160905       By albireo SQL補入ENT
#161028-00032#1     161028       By 08171   AFM_帳套/法人/來源組織權限控管,交易對象參考控制組
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc" 
#add-point:增加匯入變數檔
#
##end add-point
 
#模組變數(Module Variables)
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10             #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num10             #目前所在頁數
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
 
TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
   glapld             LIKE glap_t.glapld,
   glapld_desc        LIKE type_t.chr80, 
   glapcomp           LIKE glap_t.glapcomp,
   glapcomp_desc      LIKE type_t.chr80,
   glap007            LIKE glap_t.glap008,
   glapdocdt          LIKE glap_t.glapdocdt,
   #end add-point
        wc               STRING
                     END RECORD
 
TYPE type_g_detail_d RECORD
#add-point:自定義模組變數(Module Variable)  #注意要在add-point內寫入END RECORD
   sel           LIKE type_t.chr1,
   glapdocno     LIKE glap_t.glapdocno,
   glapdocdt     LIKE glap_t.glapdocdt,
   glap007       LIKE glap_t.glap007,
   glap008       LIKE glap_t.glap008,
   glap008_desc  LIKE gzzal_t.gzzal003,
   glaq003       LIKE glaq_t.glaq003,
   glaq004       LIKE glaq_t.glaq004
END RECORD

DEFINE g_master    type_parameter
DEFINE g_glaa121         LIKE glaa_t.glaa121   #140829-00070#30 Add
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
DEFINE g_detail_cnt         LIKE type_t.num10              #單身 總筆數(所有資料)
DEFINE g_detail_d  DYNAMIC ARRAY OF type_g_detail_d
 
#add-point:傳入參數說明

#end add-point
 
{</section>}
 
{<section id="afmp030.main" >}
#+ 作業開始 
MAIN
   DEFINE ls_js  STRING
   #add-point:main段define
   DEFINE l_sql   STRING
   #end add-point   
   #add-point:main段define
   
   #end add-point   
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afm","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   #锁资料
   LET l_sql = "SELECT glapent,glapld,glapdocno FROM glap_t WHERE glapent = ? AND glapld = ? AND glapdocno = ? FOR UPDATE"
   LET l_sql = cl_sql_forupd(l_sql)                #轉換不同資料庫語法
   LET l_sql = cl_sql_add_mask(l_sql)              #遮蔽特定資料
   DECLARE afmp030_cl CURSOR FROM l_sql            # LOCK CURSOR

   IF NOT cl_null(g_argv[04]) THEN
      LET g_bgjob = 'Y'
   END IF
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      LET g_master.glapld   = g_argv[01]
      LET g_master.glapcomp = g_argv[02]
      LET g_master.glap007  = g_argv[03]
      LET g_detail_d[1].glapdocno = g_argv[04]
      LET g_master.wc = "glapdocno = '",g_detail_d[1].glapdocno,"'"
      CALL afmp030_b_fill()
      LET g_detail_d[1].sel = 'Y'
      SELECT glaa121 INTO g_glaa121 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_master.glapld
      CALL afmp030_process()
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afmp030 WITH FORM cl_ap_formpath("afm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afmp030_init()   
 
      #進入選單 Menu (="N")
      CALL afmp030_ui_dialog() 
 
      #add-point:畫面關閉前
      
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_afmp030
   END IF 
   
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
{</section>}
 
{<section id="afmp030.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION afmp030_init()
   #add-point:init段define
   
   #end add-point   
   #add-point:init段define
   
   #end add-point   
   
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
 
   #add-point:畫面資料初始化
   CALL cl_set_combo_scc('glap007','8007')
   CALL cl_set_combo_scc('b_glap007','8007')
   CALL cl_set_combo_scc_part('glap008','8035','M14,M17,M18,M19')
   CALL cl_set_combo_scc_part('b_glap008','8035','M14,M17,M18,M19')
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmp030.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION afmp030_ui_dialog()
   DEFINE li_idx   LIKE type_t.num10
   #add-point:ui_dialog段define
   DEFINE l_errno    LIKE gzze_t.gzze001
   DEFINE l_success  LIKE type_t.num10
   DEFINE l_glaa013  LIKE glaa_t.glaa013
   DEFINE l_count    LIKE type_t.num5
   DEFINE l_comp_wc  STRING  #161028-00032#1
   #end add-point 
   #add-point:ui_dialog段define
   
   #end add-point 
   
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "  
   CALL cl_set_act_visible("accept,cancel", FALSE)
         
   LET g_detail_cnt = g_detail_d.getLength()
   #add-point:ui_dialog段before dialog 
 
   #end add-point
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_detail_d.clear()
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL afmp030_init()
      END IF
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #add-point:ui_dialog段construct
         
         #end add-point
         #add-point:ui_dialog段input
         INPUT BY NAME g_master.glapld ATTRIBUTE(WITHOUT DEFAULTS)
                   
            BEFORE INPUT
               IF cl_null(g_master.glapld) THEN
                  SELECT ooef017 INTO g_master.glapcomp
                    FROM ooef_t
                   WHERE ooefent=g_enterprise
                     AND ooef001=g_site
                     AND ooefstus='Y'
                  SELECT glaald INTO g_master.glapld FROM glaa_t WHERE glaaent = g_enterprise 
                                                                   AND glaacomp = g_master.glapcomp 
                                                                   AND glaa014 = 'Y'
                  CALL s_desc_get_department_desc(g_master.glapcomp) RETURNING   g_master.glapcomp_desc
                  CALL s_desc_get_ld_desc(g_master.glapld)  RETURNING   g_master.glapld_desc                                                   
               END IF                
               SELECT glaa121 INTO g_glaa121 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_master.glapld   #140829-00070#30 15/01/13   Add
               DISPLAY BY NAME  g_master.glapcomp,g_master.glapcomp_desc,g_master.glapld,g_master.glapld_desc
               
            AFTER FIELD glapld           
               IF NOT cl_null(g_master.glapld) THEN
                  #161028-00032#1 --s add
                  CALL s_fin_ld_chk(g_master.glapld,g_user,'Y')RETURNING g_sub_success,g_errno  
                  IF NOT g_sub_success THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_errparam.replace[1] = 'agli010'
                     LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                     LET g_errparam.exeprog = 'agli010'
                     LET g_master.glapld = ''                   
                     CALL s_desc_get_ld_desc(g_master.glapld) RETURNING g_master.glapld_desc
                     DISPLAY BY NAME g_master.glapld_desc
                     NEXT FIELD CURRENT
                  END IF      
                  #161028-00032#1 --e add
                  LET l_count=0
                  SELECT COUNT(*) INTO l_count 
                    FROM glaa_t
                   WHERE glaaent = g_enterprise
                     AND glaald  = g_master.glapld
                  IF cl_null(l_count) OR l_count=0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00016'
                     LET g_errparam.extend = g_master.glapld
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
                     LET g_master.glapld=''
                     NEXT FIELD CURRENT                                                   
                  END IF            
            
                  #檢查帳套的權限設定agli010
                  IF NOT s_ld_chk_authorization(g_user,g_master.glapld)THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'sub-01302' #'agl-00051'  #160318-00005#11 mod 
                     LET g_errparam.extend = g_master.glapld
                      #160318-00005#11   --add--str
                     LET g_errparam.replace[1] ='agli010'
                     LET g_errparam.replace[2] = cl_get_progname('agli010',g_lang,"2")
                     LET g_errparam.exeprog    ='agli010'
                     #160318-00005#11  --add--end
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
                     LET g_master.glapld=''
                     NEXT FIELD CURRENT
                  END IF

                  SELECT glaa121 INTO g_glaa121 FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_master.glapld
               END IF    
               CALL s_desc_get_ld_desc(g_master.glapld)  RETURNING   g_master.glapld_desc 
               SELECT glaacomp INTO g_master.glapcomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_master.glapld
               CALL s_desc_get_department_desc(g_master.glapcomp) RETURNING   g_master.glapcomp_desc
               DISPLAY BY NAME  g_master.glapcomp,g_master.glapcomp_desc,g_master.glapld,g_master.glapld_desc  

            ON ACTION controlp INFIELD glapld
               #161028-00032#1 --s add
               #取得帳務組織下所屬成員之帳別   
               CALL s_fin_account_center_comp_str() RETURNING l_comp_wc
               #將取回的字串轉換為SQL條件
               CALL afmp030_get_ooef001_wc(l_comp_wc) RETURNING l_comp_wc
               #161028-00032#1 --e add
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_master.glapld             #給予default值
               LET g_qryparam.where = " (glaa008 = 'Y' OR glaa014 = 'Y') AND glaacomp IN ",l_comp_wc,"" #161028-00032#1 add
               #給予arg
               LET g_qryparam.arg1 = g_user #s
               LET g_qryparam.arg2 = g_dept #s
            
               CALL q_authorised_ld()                                #呼叫開窗

               LET g_master.glapld = g_qryparam.return1              

               DISPLAY g_master.glapld TO glapld              #
               CALL s_desc_get_ld_desc(g_master.glapld)  RETURNING   g_master.glapld_desc 
               SELECT glaacomp INTO g_master.glapcomp FROM glaa_t WHERE glaaent = g_enterprise AND glaald = g_master.glapld
               CALL s_desc_get_department_desc(g_master.glapcomp) RETURNING   g_master.glapcomp_desc
               DISPLAY BY NAME  g_master.glapcomp,g_master.glapcomp_desc,g_master.glapld,g_master.glapld_desc  
               NEXT FIELD glapld                          #返回原欄位

            END INPUT   
         
         CONSTRUCT BY NAME g_master.wc ON glap008,glapdocno,glapdocdt

            ON ACTION controlp INFIELD glapdocno
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE 
               LET g_qryparam.where = " glapstus = 'N' AND glap007='FM' "
               CALL q_glapdocno()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO glapdocno  #顯示到畫面上
               NEXT FIELD glapdocno                     #返回原欄位

           ON ACTION controlp INFIELD glap008
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE 
               LET g_qryparam.where = " glapstus = 'N' "
               CALL q_glap008_1()                           #呼叫開窗
               DISPLAY g_qryparam.return1 TO glap008  #顯示到畫面上
               NEXT FIELD glap008                     #返回原欄位

         END CONSTRUCT
   
        INPUT ARRAY g_detail_d FROM s_detail1.*
             ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                       INSERT ROW = FALSE,
                       DELETE ROW = FALSE,
                       APPEND ROW = FALSE)         
                       
            BEFORE ROW
               LET l_ac = ARR_CURR()                  
               DISPLAY l_ac TO FORMONLY.h_index
               
         END INPUT
         #end add-point
         #add-point:ui_dialog段自定義display array
         
         #end add-point
 
         BEFORE DIALOG
            IF g_detail_d.getLength() > 0 THEN
               CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
            ELSE
               CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
               CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
            END IF
            #add-point:ui_dialog段before_dialog2
            LET g_master.glap007='FM'
            DISPLAY BY NAME g_master.glap007
            NEXT FIELD glapld
            #end add-point
 
         #選擇全部
         ON ACTION selall
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 1)
            #add-point:ui_dialog段on action selall
            
            #end add-point            
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "Y"
               #add-point:ui_dialog段on action selall
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selall
            
            #end add-point
 
         #取消全部
         ON ACTION selnone
            CALL DIALOG.setSelectionRange("s_detail1", 1, -1, 0)
            FOR li_idx = 1 TO g_detail_d.getLength()
               LET g_detail_d[li_idx].sel = "N"
               #add-point:ui_dialog段on action selnone
               
               #end add-point
            END FOR
            #add-point:ui_dialog段on action selnone
            
            #end add-point
 
         #勾選所選資料
         ON ACTION sel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "Y"
               END IF
            END FOR
            #add-point:ui_dialog段on action sel
            
            #end add-point
 
         #取消所選資料
         ON ACTION unsel
            FOR li_idx = 1 TO g_detail_d.getLength()
               IF DIALOG.isRowSelected("s_detail1", li_idx) THEN
                  LET g_detail_d[li_idx].sel = "N"
               END IF
            END FOR
            #add-point:ui_dialog段on action unsel
            
            #end add-point
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL afmp030_filter()
            #add-point:ON ACTION filter
            
            #END add-point
            EXIT DIALOG
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION accept
            #add-point:ui_dialog段accept之前
            
            #end add-point
            CALL afmp030_query()
             
         # 條件清除
         ON ACTION qbeclear
            #add-point:ui_dialog段
            
            #end add-point
 
         # 重新整理
         ON ACTION datarefresh
            LET g_error_show = 1
            #add-point:ui_dialog段datarefresh
            
            #end add-point
            CALL afmp030_b_fill()
 
         #add-point:ui_dialog段action
         ON ACTION batch_execute
            IF cl_null(g_master.glapld) THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = 'anm-00328'
               LET g_errparam.popup  = TRUE 
               CALL cl_err()                       
            ELSE            
               CALL afmp030_process()
               IF g_success ='N' THEN
                  CONTINUE DIALOG
               END IF               
               IF g_bgjob = "N" THEN            
                  CALL cl_ask_confirm3("std-00012","")
               END IF
               CALL afmp030_b_fill()
               CALL afmp030_fetch()            
               NEXT FIELD glapld
            END IF
         #end add-point
 
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="afmp030.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION afmp030_query()
   DEFINE ls_wc      STRING
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   
   #end add-point 
   #add-point:query段define
   
   #end add-point 
    
   #add-point:cs段after_construct
   
   #end add-point
        
   LET g_error_show = 1
   CALL afmp030_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   #add-point:cs段after_query
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmp030.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afmp030_b_fill()
 
   DEFINE ls_wc           STRING
   #add-point:b_fill段define
   DEFINE l_glaa013   LIKE glaa_t.glaa013
   #end add-point
   #add-point:b_fill段define
   
   #end add-point
 
   #add-point:b_fill段sql_before
   IF cl_null(g_master.wc) THEN
      LET g_master.wc =" 1=1 "
   END IF
   
   LET g_sql =" SELECT  DISTINCT 'N',glapdocno,glapdocdt,glap007,glap008,'',SUM(glaq003),SUM(glaq004)",
              "   FROM glap_t,glaq_t ",
              "  WHERE glapent = glaqent ",
              "    AND glapld = glaqld ",
              "    AND glapdocno = glaqdocno ", 
              "    AND glapent=?",              
              "    AND glapld = '",g_master.glapld,"' ",
              "    AND glapcomp = '",g_master.glapcomp,"' ",
              "    AND glap007 = '",g_master.glap007,"' ",              
              "    AND glapstus = 'N' ",
              "    AND ",g_master.wc

   LET l_glaa013=''
   SELECT glaa013 INTO l_glaa013 FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald  = g_master.glapld 
   IF NOT cl_null(l_glaa013) THEN
      LET g_sql = g_sql,"    AND glapdocdt > '",l_glaa013,"' "
   END IF
   LET g_sql = g_sql,"    GROUP BY glapdocno,glapdocdt,glap007,glap008",
                     "    ORDER BY glapdocno,glapdocdt,glap007,glap008"
   #end add-point
 
   PREPARE afmp030_sel FROM g_sql
   DECLARE b_fill_curs CURSOR FOR afmp030_sel
   
   CALL g_detail_d.clear()
   #add-point:b_fill段其他頁簽清空
   
   #end add-point
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs USING g_enterprise INTO 
   #add-point:b_fill段foreach_into
   g_detail_d[l_ac].*
   #end add-point
   
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #add-point:b_fill段資料填充
 
      #end add-point
      
      CALL afmp030_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      
   END FOREACH
   LET g_error_show = 0
   
   #add-point:b_fill段資料填充(其他單身)
   CALL g_detail_d.deleteElement(g_detail_d.getLength())
   #end add-point
    
   LET g_detail_cnt = l_ac - 1 
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE afmp030_sel
   
   LET l_ac = 1
   CALL afmp030_fetch()
   #add-point:b_fill段資料填充(其他單身)
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afmp030.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afmp030_fetch()
 
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define
   
   #end add-point
   #add-point:fetch段define
   
   #end add-point
   
   LET li_ac = l_ac 
   
   #add-point:單身填充後
   
   #end add-point 
   
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="afmp030.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION afmp030_detail_show()
   #add-point:show段define
   
   #end add-point
   #add-point:show段define
   
   #end add-point
   
   #add-point:detail_show段
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afmp030.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION afmp030_filter()
   #add-point:filter段define
   
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   DISPLAY ARRAY g_detail_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      ON UPDATE
 
   END DISPLAY
 
   LET l_ac = 1
   LET g_detail_cnt = 1
   #add-point:filter段define
   
   #end add-point    
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
   
   CALL afmp030_b_fill()
   
END FUNCTION
 
{</section>}
 
{<section id="afmp030.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION afmp030_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
 
   #end add-point    
   #add-point:filter段define
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="afmp030.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION afmp030_filter_show(ps_field,ps_object)
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = afmp030_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="afmp030.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

################################################################################
# Descriptions...: 拋磚還原
# Memo...........:
# Usage..........: CALL afmp030_process()
# Input parameter: 
# Return code....: 
# Date & Author..: 20141128 By huangrh
# Modify.........:
################################################################################
PRIVATE FUNCTION afmp030_process()
   DEFINE l_i         LIKE type_t.num5
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_n         LIKE type_t.num5
   DEFINE l_str       STRING
   DEFINE l_glaa014   LIKE glaa_t.glaa014
   DEFINE l_type       LIKE type_t.chr5         #140829-00070#31 15/01/13   Add
   DEFINE l_nmbsdocno  LIKE nmbs_t.nmbsdocno    #140829-00070#31 15/01/13   Add
   DEFINE l_wc         STRING
   DEFINE l_success    LIKE type_t.chr1
   DEFINE l_prog       LIKE type_t.chr10
   DEFINE l_glapstus   LIKE glap_t.glapstus
 
   LET g_success = 'Y'
   LET l_n = 0

   #STEP1.鎖定傳票單頭資料
   #STEP2.刪除傳票資料
   #STEP3.更新前端資料傳票號碼

   CALL cl_err_collect_init()
   CALL s_transaction_begin()

   FOR l_i = 1 TO g_detail_cnt
      IF g_detail_d[l_i].sel = 'N' THEN
         CONTINUE FOR 
      END IF

      OPEN afmp030_cl USING g_enterprise,g_master.glapld,g_detail_d[l_i].glapdocno

      IF STATUS THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = g_detail_d[l_i].glapdocno,"  OPEN afmp030_cl:"
         LET g_errparam.code   =  STATUS
         LET g_errparam.popup  = TRUE
         CALL cl_err()

         CLOSE afmp030_cl
         LET g_success = 'N'
         CONTINUE FOR
      END IF

      SELECT glapstus INTO l_glapstus FROM glap_t
       WHERE glapent = g_enterprise
         AND glapld = g_master.glapld
         AND glapdocno = g_detail_d[l_i].glapdocno

      IF l_glapstus <> 'N' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = g_detail_d[l_i].glapdocno
         LET g_errparam.code   = 'axr-00076'
         LET g_errparam.popup  = TRUE
         CALL cl_err()
         LET g_success = 'N'
         CONTINUE FOR
      END IF

      CALL afmp030_delete_gl(g_detail_d[l_i].glapdocno) RETURNING l_success

      IF l_success = FALSE THEN
         LET g_success = 'N'
      END IF

      #先让g_prog='aglt310',可以删除最大编号
      LET l_prog = g_prog
      LET g_prog = 'aglt310'

      CALL s_aooi200_fin_del_docno(g_master.glapld,g_detail_d[l_i].glapdocno,g_detail_d[l_i].glapdocdt)
         RETURNING l_success
      IF NOT l_success THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aap-00300'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N',0)
         CONTINUE FOR
      END IF
      LET g_prog = l_prog

      IF g_glaa121 = 'Y' THEN
         CASE
            WHEN g_detail_d[l_i].glap008 = 'M19'
               LET l_wc = " glgadocno IN (SELECT fmdfdocno FROM fmdf_t WHERE fmdfent = '",g_enterprise,"'",
                          "                  AND fmdfld = '",g_master.glapld,"'",
                          "                  AND fmdf003 = '",g_detail_d[l_i].glapdocno,"')"
            WHEN g_detail_d[l_i].glap008 = 'M14' OR g_detail_d[l_i].glap008 = 'M17' OR g_detail_d[l_i].glap008 = 'M18'
               LET l_wc = " glgadocno IN (SELECT fmctdocno FROM fmct_t WHERE fmctent = '",g_enterprise,"'",
                          "                  AND fmctld = '",g_master.glapld,"'",
                          "                  AND fmct002 = '",g_detail_d[l_i].glapdocno,"')"
         END CASE
         CALL s_pre_voucher_upd(g_detail_d[l_i].glap007,g_detail_d[l_i].glap008,g_master.glapld,'','','',l_wc)
            RETURNING l_success

         IF l_success = FALSE THEN
            LET g_success = 'N'
         END IF
      END IF

      IF g_detail_d[l_i].glap008 = 'M19' THEN
         UPDATE fmdf_t SET fmdf003 = '' WHERE fmdfent = g_enterprise
            AND fmdfld  = g_master.glapld
            AND fmdf003 = g_detail_d[l_i].glapdocno
      ELSE
         UPDATE fmct_t SET fmct002 = '',
                           fmct003 = ''
          WHERE fmctld  = g_master.glapld
            AND fmct002 = g_detail_d[l_i].glapdocno
            AND fmctent = g_enterprise         #160905-00002#3
      END IF

      LET l_n = l_n + 1   #成功筆數
      IF cl_null(l_str) THEN
         LET l_str = g_detail_d[l_i].glapdocno
      ELSE
         LET l_str = l_str,"/'",g_detail_d[l_i].glapdocno,"'"  #成功還原的單號
      END IF 

   END FOR

   IF g_success = 'N' THEN
      CALL s_transaction_end('N',1)
      CALL cl_err_collect_show()
   ELSE
      CALL s_transaction_end('Y',1)    
   END IF

   IF g_success = 'Y' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code   = "anm-00306"
      LET g_errparam.popup  = TRUE
      LET g_errparam.replace[1] = l_n
      LET g_errparam.replace[2] = l_str
      CALL cl_err()
   END IF


END FUNCTION

################################################################################
# Descriptions...: 刪除傳票資料
# Memo...........:
# Usage..........: CALL afmp030_delete_gl(p_glapdocno)
#                  RETURNING r_success
# Input parameter: p_glapdocno    傳票編號
# Return code....: r_success      成功否
# Date & Author..: 2016/03/05 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION afmp030_delete_gl(p_glapdocno)
   DEFINE p_glapdocno      LIKE glap_t.glapdocno
   DEFINE r_success        LIKE type_t.num5

   LET r_success = TRUE

   DELETE FROM glap_t WHERE glapent = g_enterprise
         AND glapld = g_master.glapld
         AND glapdocno = p_glapdocno

   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'DELETE glap_t',p_glapdocno
      LET g_errparam.code   = SQLCA.SQLCODE
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF

   DELETE FROM glaq_t WHERE glaqent = g_enterprise
      AND glaqld = g_master.glapld
      AND glaqdocno = p_glapdocno

   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'DELETE glaq_t',p_glapdocno
      LET g_errparam.code   = SQLCA.SQLCODE
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF

   DELETE FROM glbc_t WHERE glbcent = g_enterprise
      AND glbcld  = g_master.glapld
      AND glbcdocno = p_glapdocno

   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'DELETE glbc_t',p_glapdocno
      LET g_errparam.code   = SQLCA.SQLCODE
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF

   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 轉成SQL
# Memo...........: #161028-00032#1
# Usage..........: CALL afmp030_get_ooef001_wc(p_wc)
#                  RETURNING 回传参数
# Input parameter: p_wc 帳套
# Return code....: r_wc ('帳套')
# Date & Author..: 161028 By 08171
# Modify.........:
################################################################################
PRIVATE FUNCTION afmp030_get_ooef001_wc(p_wc)
   DEFINE p_wc       STRING
   DEFINE r_wc       STRING
   DEFINE tok        base.StringTokenizer
   DEFINE l_str      STRING

   LET tok = base.StringTokenizer.create(p_wc,",")
   WHILE tok.hasMoreTokens()
      IF cl_null(l_str) THEN
         LET l_str = tok.nextToken()
      ELSE
         LET l_str = l_str,"','",tok.nextToken()
      END IF      
   END WHILE   
   LET r_wc = "('",l_str,"')"
   
   RETURN r_wc
END FUNCTION

#end add-point
 
{</section>}
 
