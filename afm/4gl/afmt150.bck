#該程式未解開Section, 採用最新樣板產出!
{<section id="afmt150.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0006(2016-07-29 14:04:59), PR版次:0006(2017-01-06 18:05:36)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000050
#+ Filename...: afmt150
#+ Description: 融資質押及解除設定作業
#+ Creator....: 06862(2015-11-18 14:03:15)
#+ Modifier...: 03538 -SD/PR- 08729
 
{</section>}
 
{<section id="afmt150.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#Modify.........: No.151125-00001#2 15/11/27 By catmoon 作廢前詢問「是否執行作廢？」
#151130-00015#2  2015/12/22 BY Xiaozg  根据是否可以更改單據日期 設定開放單據日期修改
#160318-00005#12 2016/03/25 by 07675   將重複內容的錯誤訊息置換為公用錯誤訊息
#160318-00025#6  2016/04/19 By 07675   將重複內容的錯誤訊息置換為公用錯誤訊息(r.v）
#160518-00035#12 2016/07/25 By 03538   增加設定類型欄位,並且依此欄位於確認/取消確認時做對應處理
#160729-00002#1  2016/07/29 By 03538   增加摘要欄位
#160818-00017#12 2016/08/24 By 07900    删除修改未重新判断状态码
#161006-00005#12 2016/10/19 By 08732    組織類型與職能開窗調整
#161028-00032#1  2016/10/31 By 08171   查詢時法人開窗調整
#161104-00046#2  2017/01/06 By 08729   單別預設值;資料依照單別user dept權限過濾單號
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_fmdd_m        RECORD
       fmddsite LIKE fmdd_t.fmddsite, 
   fmddsite_desc LIKE type_t.chr80, 
   fmddcomp LIKE fmdd_t.fmddcomp, 
   fmddcomp_desc LIKE type_t.chr80, 
   fmdd001 LIKE fmdd_t.fmdd001, 
   fmdddocno LIKE fmdd_t.fmdddocno, 
   fmdddocdt LIKE fmdd_t.fmdddocdt, 
   fmdd002 LIKE fmdd_t.fmdd002, 
   fmddstus LIKE fmdd_t.fmddstus, 
   fmddownid LIKE fmdd_t.fmddownid, 
   fmddownid_desc LIKE type_t.chr80, 
   fmddowndp LIKE fmdd_t.fmddowndp, 
   fmddowndp_desc LIKE type_t.chr80, 
   fmddcrtid LIKE fmdd_t.fmddcrtid, 
   fmddcrtid_desc LIKE type_t.chr80, 
   fmddcrtdp LIKE fmdd_t.fmddcrtdp, 
   fmddcrtdp_desc LIKE type_t.chr80, 
   fmddcrtdt LIKE fmdd_t.fmddcrtdt, 
   fmddmodid LIKE fmdd_t.fmddmodid, 
   fmddmodid_desc LIKE type_t.chr80, 
   fmddmoddt LIKE fmdd_t.fmddmoddt, 
   fmddcnfid LIKE fmdd_t.fmddcnfid, 
   fmddcnfid_desc LIKE type_t.chr80, 
   fmddcnfdt LIKE fmdd_t.fmddcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_fmde_d        RECORD
       fmdeseq LIKE fmde_t.fmdeseq, 
   fmde001 LIKE fmde_t.fmde001, 
   fmde002 LIKE fmde_t.fmde002, 
   fmde003 LIKE fmde_t.fmde003, 
   fmde003_desc LIKE type_t.chr500, 
   fmde003_desc_2 LIKE type_t.chr500, 
   fmde003_desc_3 LIKE type_t.chr500, 
   fmde003_desc_4 LIKE type_t.chr500, 
   fmde003_desc_5 LIKE type_t.chr500, 
   fmde003_desc_6 LIKE type_t.chr500, 
   fmde003_desc_7 LIKE type_t.chr500, 
   fmde004 LIKE fmde_t.fmde004
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_fmdddocno LIKE fmdd_t.fmdddocno
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE  g_chk_fmde004         LIKE type_t.chr1 
DEFINE  g_glaald          LIKE glaa_t.glaald
DEFINE  g_glaa003         LIKE glaa_t.glaa003
DEFINE  g_glaa024         LIKE glaa_t.glaa024
DEFINE  g_glaa025         LIKE glaa_t.glaa025
DEFINE  g_glaa026         LIKE glaa_t.glaa026
DEFINE  g_wc_cs_comp      STRING   #161006-00005#12  add
DEFINE g_user_dept_wc     STRING      #161104-00046#15
DEFINE g_user_dept_wc_q   STRING      #161104-00046#15
DEFINE g_user_slip_wc     STRING      #161104-00046#15
#end add-point
       
#模組變數(Module Variables)
DEFINE g_fmdd_m          type_g_fmdd_m
DEFINE g_fmdd_m_t        type_g_fmdd_m
DEFINE g_fmdd_m_o        type_g_fmdd_m
DEFINE g_fmdd_m_mask_o   type_g_fmdd_m #轉換遮罩前資料
DEFINE g_fmdd_m_mask_n   type_g_fmdd_m #轉換遮罩後資料
 
   DEFINE g_fmdddocno_t LIKE fmdd_t.fmdddocno
 
 
DEFINE g_fmde_d          DYNAMIC ARRAY OF type_g_fmde_d
DEFINE g_fmde_d_t        type_g_fmde_d
DEFINE g_fmde_d_o        type_g_fmde_d
DEFINE g_fmde_d_mask_o   DYNAMIC ARRAY OF type_g_fmde_d #轉換遮罩前資料
DEFINE g_fmde_d_mask_n   DYNAMIC ARRAY OF type_g_fmde_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="afmt150.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afm","")
 
   #add-point:作業初始化 name="main.init"
   #161104-00046#15-----s
   #建立與單頭array相同的temptable
   CALL s_aooi200def_create('','g_fmdd_m','','','','','','')RETURNING g_sub_success
   
   #單別控制組
   LET g_user_dept_wc = ''
   CALL s_fin_get_user_dept_control('fmddcomp','','fmddent','fmdddocno') RETURNING g_user_dept_wc
   #開窗使用
   LET g_user_dept_wc_q = g_user_dept_wc
   
   CALL s_control_get_docno_sql(g_user,g_dept) RETURNING g_sub_success,g_user_slip_wc  
   #161104-00046#15-----e
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT fmddsite,'',fmddcomp,'',fmdd001,fmdddocno,fmdddocdt,fmdd002,fmddstus, 
       fmddownid,'',fmddowndp,'',fmddcrtid,'',fmddcrtdp,'',fmddcrtdt,fmddmodid,'',fmddmoddt,fmddcnfid, 
       '',fmddcnfdt", 
                      " FROM fmdd_t",
                      " WHERE fmddent= ? AND fmdddocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt150_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.fmddsite,t0.fmddcomp,t0.fmdd001,t0.fmdddocno,t0.fmdddocdt,t0.fmdd002, 
       t0.fmddstus,t0.fmddownid,t0.fmddowndp,t0.fmddcrtid,t0.fmddcrtdp,t0.fmddcrtdt,t0.fmddmodid,t0.fmddmoddt, 
       t0.fmddcnfid,t0.fmddcnfdt,t1.ooefl003 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 , 
       t7.ooag011 ,t8.ooag011",
               " FROM fmdd_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.fmddsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.fmddcomp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.fmddownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.fmddowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.fmddcrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.fmddcrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.fmddmodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.fmddcnfid  ",
 
               " WHERE t0.fmddent = " ||g_enterprise|| " AND t0.fmdddocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE afmt150_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afmt150 WITH FORM cl_ap_formpath("afm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afmt150_init()   
 
      #進入選單 Menu (="N")
      CALL afmt150_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_afmt150
      
   END IF 
   
   CLOSE afmt150_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="afmt150.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION afmt150_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   LET g_chk_fmde004 = 'Y'
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('fmddstus','13','A,D,R,W,N,Y,X')
 
      CALL cl_set_combo_scc('fmdd001','8808') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   #161006-00005#12   add---s
   CALL s_fin_create_account_center_tmp()
   CALL s_fin_azzi800_sons_query(g_today) 
   CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp   
   CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
   #161006-00005#12   add---e
   #end add-point
   
   #初始化搜尋條件
   CALL afmt150_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="afmt150.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION afmt150_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL afmt150_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_fmdd_m.* TO NULL
         CALL g_fmde_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL afmt150_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_fmde_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt150_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL afmt150_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL afmt150_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL afmt150_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL afmt150_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL afmt150_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL afmt150_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL afmt150_set_act_visible()   
            CALL afmt150_set_act_no_visible()
            IF NOT (g_fmdd_m.fmdddocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " fmddent = " ||g_enterprise|| " AND",
                                  " fmdddocno = '", g_fmdd_m.fmdddocno, "' "
 
               #填到對應位置
               CALL afmt150_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmdd_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmde_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL afmt150_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmdd_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmde_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL afmt150_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL afmt150_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL afmt150_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt150_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL afmt150_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt150_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL afmt150_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt150_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL afmt150_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt150_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL afmt150_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt150_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_fmde_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL afmt150_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL afmt150_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL afmt150_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL afmt150_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/afm/afmt150_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               
               #END add-point
               &include "erp/afm/afmt150_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL afmt150_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL afmt150_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL afmt150_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL afmt150_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL afmt150_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_fmdd_m.fmdddocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="afmt150.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION afmt150_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   CALL cl_set_act_visible("output", FALSE)
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT fmdddocno ",
                      " FROM fmdd_t ",
                      " ",
                      " LEFT JOIN fmde_t ON fmdeent = fmddent AND fmdddocno = fmdedocno ", "  ",
                      #add-point:browser_fill段sql(fmde_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE fmddent = " ||g_enterprise|| " AND fmdeent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("fmdd_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT fmdddocno ",
                      " FROM fmdd_t ", 
                      "  ",
                      "  ",
                      " WHERE fmddent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("fmdd_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_fmdd_m.* TO NULL
      CALL g_fmde_d.clear()        
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.fmdddocno Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmddstus,t0.fmdddocno ",
                  " FROM fmdd_t t0",
                  "  ",
                  "  LEFT JOIN fmde_t ON fmdeent = fmddent AND fmdddocno = fmdedocno ", "  ", 
                  #add-point:browser_fill段sql(fmde_t1) name="browser_fill.join.fmde_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.fmddent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("fmdd_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmddstus,t0.fmdddocno ",
                  " FROM fmdd_t t0",
                  "  ",
                  
                  " WHERE t0.fmddent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("fmdd_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY fmdddocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"fmdd_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_fmdddocno
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_fmdddocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION afmt150_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_fmdd_m.fmdddocno = g_browser[g_current_idx].b_fmdddocno   
 
   EXECUTE afmt150_master_referesh USING g_fmdd_m.fmdddocno INTO g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid_desc,g_fmdd_m.fmddcrtdp_desc, 
       g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddcnfid_desc
   
   CALL afmt150_fmdd_t_mask()
   CALL afmt150_show()
      
END FUNCTION
 
{</section>}
 
{<section id="afmt150.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION afmt150_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION afmt150_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_fmdddocno = g_fmdd_m.fmdddocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION afmt150_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_fmdd_m.* TO NULL
   CALL g_fmde_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON fmddsite,fmddcomp,fmdd001,fmdddocno,fmdddocdt,fmdd002,fmddstus,fmddownid, 
          fmddowndp,fmddcrtid,fmddcrtdp,fmddcrtdt,fmddmodid,fmddmoddt,fmddcnfid,fmddcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<fmddcrtdt>>----
         AFTER FIELD fmddcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<fmddmoddt>>----
         AFTER FIELD fmddmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmddcnfdt>>----
         AFTER FIELD fmddcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmddpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.fmddsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddsite
            #add-point:ON ACTION controlp INFIELD fmddsite name="construct.c.fmddsite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #CALL q_ooef001()     #161006-00005#12   mark                    
            CALL q_ooef001_33()   #161006-00005#12   add                          #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmddsite  #顯示到畫面上
            NEXT FIELD fmddsite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddsite
            #add-point:BEFORE FIELD fmddsite name="construct.b.fmddsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddsite
            
            #add-point:AFTER FIELD fmddsite name="construct.a.fmddsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmddcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddcomp
            #add-point:ON ACTION controlp INFIELD fmddcomp name="construct.c.fmddcomp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooef003 = 'Y' AND ooef001 IN ",g_wc_cs_comp   #161006-00005#12   add
            #CALL q_ooef017_01()                           #呼叫開窗 #161028-00032#1 mark
            CALL q_ooef001()                                        #161028-00032#1 add
            DISPLAY g_qryparam.return1 TO fmddcomp  #顯示到畫面上
            NEXT FIELD fmddcomp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddcomp
            #add-point:BEFORE FIELD fmddcomp name="construct.b.fmddcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddcomp
            
            #add-point:AFTER FIELD fmddcomp name="construct.a.fmddcomp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdd001
            #add-point:BEFORE FIELD fmdd001 name="construct.b.fmdd001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdd001
            
            #add-point:AFTER FIELD fmdd001 name="construct.a.fmdd001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdd001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdd001
            #add-point:ON ACTION controlp INFIELD fmdd001 name="construct.c.fmdd001"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmdddocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdddocno
            #add-point:ON ACTION controlp INFIELD fmdddocno name="construct.c.fmdddocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #161104-00046#15-add(s)
            #單別權限控管
            IF NOT cl_null(g_user_dept_wc_q) AND NOT g_user_dept_wc_q = ' 1=1'  THEN
               LET g_qryparam.where = g_user_dept_wc_q 
            END IF
            #161104-00046#15-add(e)
            CALL q_fmdddocno_01()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdddocno  #顯示到畫面上
            NEXT FIELD fmdddocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdddocno
            #add-point:BEFORE FIELD fmdddocno name="construct.b.fmdddocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdddocno
            
            #add-point:AFTER FIELD fmdddocno name="construct.a.fmdddocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdddocdt
            #add-point:BEFORE FIELD fmdddocdt name="construct.b.fmdddocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdddocdt
            
            #add-point:AFTER FIELD fmdddocdt name="construct.a.fmdddocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdddocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdddocdt
            #add-point:ON ACTION controlp INFIELD fmdddocdt name="construct.c.fmdddocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdd002
            #add-point:BEFORE FIELD fmdd002 name="construct.b.fmdd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdd002
            
            #add-point:AFTER FIELD fmdd002 name="construct.a.fmdd002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdd002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdd002
            #add-point:ON ACTION controlp INFIELD fmdd002 name="construct.c.fmdd002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddstus
            #add-point:BEFORE FIELD fmddstus name="construct.b.fmddstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddstus
            
            #add-point:AFTER FIELD fmddstus name="construct.a.fmddstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmddstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddstus
            #add-point:ON ACTION controlp INFIELD fmddstus name="construct.c.fmddstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmddownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddownid
            #add-point:ON ACTION controlp INFIELD fmddownid name="construct.c.fmddownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmddownid  #顯示到畫面上
            NEXT FIELD fmddownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddownid
            #add-point:BEFORE FIELD fmddownid name="construct.b.fmddownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddownid
            
            #add-point:AFTER FIELD fmddownid name="construct.a.fmddownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmddowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddowndp
            #add-point:ON ACTION controlp INFIELD fmddowndp name="construct.c.fmddowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmddowndp  #顯示到畫面上
            NEXT FIELD fmddowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddowndp
            #add-point:BEFORE FIELD fmddowndp name="construct.b.fmddowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddowndp
            
            #add-point:AFTER FIELD fmddowndp name="construct.a.fmddowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmddcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddcrtid
            #add-point:ON ACTION controlp INFIELD fmddcrtid name="construct.c.fmddcrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmddcrtid  #顯示到畫面上
            NEXT FIELD fmddcrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddcrtid
            #add-point:BEFORE FIELD fmddcrtid name="construct.b.fmddcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddcrtid
            
            #add-point:AFTER FIELD fmddcrtid name="construct.a.fmddcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmddcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddcrtdp
            #add-point:ON ACTION controlp INFIELD fmddcrtdp name="construct.c.fmddcrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmddcrtdp  #顯示到畫面上
            NEXT FIELD fmddcrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddcrtdp
            #add-point:BEFORE FIELD fmddcrtdp name="construct.b.fmddcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddcrtdp
            
            #add-point:AFTER FIELD fmddcrtdp name="construct.a.fmddcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddcrtdt
            #add-point:BEFORE FIELD fmddcrtdt name="construct.b.fmddcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmddmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddmodid
            #add-point:ON ACTION controlp INFIELD fmddmodid name="construct.c.fmddmodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmddmodid  #顯示到畫面上
            NEXT FIELD fmddmodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddmodid
            #add-point:BEFORE FIELD fmddmodid name="construct.b.fmddmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddmodid
            
            #add-point:AFTER FIELD fmddmodid name="construct.a.fmddmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddmoddt
            #add-point:BEFORE FIELD fmddmoddt name="construct.b.fmddmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmddcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddcnfid
            #add-point:ON ACTION controlp INFIELD fmddcnfid name="construct.c.fmddcnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmddcnfid  #顯示到畫面上
            NEXT FIELD fmddcnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddcnfid
            #add-point:BEFORE FIELD fmddcnfid name="construct.b.fmddcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddcnfid
            
            #add-point:AFTER FIELD fmddcnfid name="construct.a.fmddcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddcnfdt
            #add-point:BEFORE FIELD fmddcnfdt name="construct.b.fmddcnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON fmdeseq,fmde001,fmde002,fmde003,fmde004
           FROM s_detail1[1].fmdeseq,s_detail1[1].fmde001,s_detail1[1].fmde002,s_detail1[1].fmde003, 
               s_detail1[1].fmde004
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdeseq
            #add-point:BEFORE FIELD fmdeseq name="construct.b.page1.fmdeseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdeseq
            
            #add-point:AFTER FIELD fmdeseq name="construct.a.page1.fmdeseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdeseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdeseq
            #add-point:ON ACTION controlp INFIELD fmdeseq name="construct.c.page1.fmdeseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.fmde001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde001
            #add-point:ON ACTION controlp INFIELD fmde001 name="construct.c.page1.fmde001"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcj001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmde001  #顯示到畫面上
            NEXT FIELD fmde001                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde001
            #add-point:BEFORE FIELD fmde001 name="construct.b.page1.fmde001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde001
            
            #add-point:AFTER FIELD fmde001 name="construct.a.page1.fmde001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmde002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde002
            #add-point:ON ACTION controlp INFIELD fmde002 name="construct.c.page1.fmde002"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcj001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmde002  #顯示到畫面上
            NEXT FIELD fmde002                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde002
            #add-point:BEFORE FIELD fmde002 name="construct.b.page1.fmde002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde002
            
            #add-point:AFTER FIELD fmde002 name="construct.a.page1.fmde002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmde003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde003
            #add-point:ON ACTION controlp INFIELD fmde003 name="construct.c.page1.fmde003"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcj001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmde003  #顯示到畫面上
            NEXT FIELD fmde003                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde003
            #add-point:BEFORE FIELD fmde003 name="construct.b.page1.fmde003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde003
            
            #add-point:AFTER FIELD fmde003 name="construct.a.page1.fmde003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmde004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde004
            #add-point:ON ACTION controlp INFIELD fmde004 name="construct.c.page1.fmde004"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inbddocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmde004  #顯示到畫面上
            NEXT FIELD fmde004                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde004
            #add-point:BEFORE FIELD fmde004 name="construct.b.page1.fmde004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde004
            
            #add-point:AFTER FIELD fmde004 name="construct.a.page1.fmde004"
            
            #END add-point
            
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "fmdd_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "fmde_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   #161104-00046#15-add(s)
   IF cl_null(g_user_dept_wc)THEN
      LET g_user_dept_wc = ' 1=1'
   END IF
   IF g_user_dept_wc <>  " 1=1" THEN
      LET g_wc = g_wc ," AND ", g_user_dept_wc CLIPPED
   END IF   
   #161104-00046#15-add(e)
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION afmt150_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_fmde_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL afmt150_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL afmt150_browser_fill("")
      CALL afmt150_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL afmt150_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL afmt150_fetch("F") 
      #顯示單身筆數
      CALL afmt150_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION afmt150_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_fmdd_m.fmdddocno = g_browser[g_current_idx].b_fmdddocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE afmt150_master_referesh USING g_fmdd_m.fmdddocno INTO g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid_desc,g_fmdd_m.fmddcrtdp_desc, 
       g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddcnfid_desc
   
   #遮罩相關處理
   LET g_fmdd_m_mask_o.* =  g_fmdd_m.*
   CALL afmt150_fmdd_t_mask()
   LET g_fmdd_m_mask_n.* =  g_fmdd_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt150_set_act_visible()   
   CALL afmt150_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   # N未確認/D抽單/R已拒絕允許修改
   IF g_fmdd_m.fmddstus NOT MATCHES "[NDR]" THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   CALL afmt150_fmddsite_ref()
   #end add-point
   
   #保存單頭舊值
   LET g_fmdd_m_t.* = g_fmdd_m.*
   LET g_fmdd_m_o.* = g_fmdd_m.*
   
   LET g_data_owner = g_fmdd_m.fmddownid      
   LET g_data_dept  = g_fmdd_m.fmddowndp
   
   #重新顯示   
   CALL afmt150_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.insert" >}
#+ 資料新增
PRIVATE FUNCTION afmt150_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_fmde_d.clear()   
 
 
   INITIALIZE g_fmdd_m.* TO NULL             #DEFAULT 設定
   
   LET g_fmdddocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmdd_m.fmddownid = g_user
      LET g_fmdd_m.fmddowndp = g_dept
      LET g_fmdd_m.fmddcrtid = g_user
      LET g_fmdd_m.fmddcrtdp = g_dept 
      LET g_fmdd_m.fmddcrtdt = cl_get_current()
      LET g_fmdd_m.fmddmodid = g_user
      LET g_fmdd_m.fmddmoddt = cl_get_current()
      LET g_fmdd_m.fmddstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_fmdd_m.fmdd001 = "1"
 
  
      #add-point:單頭預設值 name="insert.default"
      LET g_fmdd_m.fmddsite = g_site 
      CALL afmt150_site_desc(g_fmdd_m.fmddsite) RETURNING g_fmdd_m.fmddsite_desc
      SELECT ooef017 INTO g_fmdd_m.fmddcomp FROM ooef_t WHERE ooefent= g_enterprise AND ooef001=g_fmdd_m.fmddsite
      CALL afmt150_site_desc(g_fmdd_m.fmddcomp) RETURNING g_fmdd_m.fmddcomp_desc
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_fmdd_m_t.* = g_fmdd_m.*
      LET g_fmdd_m_o.* = g_fmdd_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmdd_m.fmddstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL afmt150_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_fmdd_m.* TO NULL
         INITIALIZE g_fmde_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL afmt150_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_fmde_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt150_set_act_visible()   
   CALL afmt150_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmddent = " ||g_enterprise|| " AND",
                      " fmdddocno = '", g_fmdd_m.fmdddocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt150_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE afmt150_cl
   
   CALL afmt150_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE afmt150_master_referesh USING g_fmdd_m.fmdddocno INTO g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid_desc,g_fmdd_m.fmddcrtdp_desc, 
       g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddcnfid_desc
   
   
   #遮罩相關處理
   LET g_fmdd_m_mask_o.* =  g_fmdd_m.*
   CALL afmt150_fmdd_t_mask()
   LET g_fmdd_m_mask_n.* =  g_fmdd_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmdd_m.fmddsite,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtid_desc, 
       g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdp_desc,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid,g_fmdd_m.fmddmodid_desc, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfid_desc,g_fmdd_m.fmddcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_fmdd_m.fmddownid      
   LET g_data_dept  = g_fmdd_m.fmddowndp
   
   #功能已完成,通報訊息中心
   CALL afmt150_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.modify" >}
#+ 資料修改
PRIVATE FUNCTION afmt150_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_fmdd_m_t.* = g_fmdd_m.*
   LET g_fmdd_m_o.* = g_fmdd_m.*
   
   IF g_fmdd_m.fmdddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
   CALL s_transaction_begin()
   
   OPEN afmt150_cl USING g_enterprise,g_fmdd_m.fmdddocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt150_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt150_master_referesh USING g_fmdd_m.fmdddocno INTO g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid_desc,g_fmdd_m.fmddcrtdp_desc, 
       g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddcnfid_desc
   
   #檢查是否允許此動作
   IF NOT afmt150_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmdd_m_mask_o.* =  g_fmdd_m.*
   CALL afmt150_fmdd_t_mask()
   LET g_fmdd_m_mask_n.* =  g_fmdd_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL afmt150_show()
   #add-point:modify段show之後 name="modify.after_show"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL afmt150_fmddsite_ref()
   CALL s_fin_date_close_chk(g_glaald,g_fmdd_m.fmddcomp,'ANM',g_fmdd_m.fmdddocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_fmdd_m.fmddmodid = g_user 
LET g_fmdd_m.fmddmoddt = cl_get_current()
LET g_fmdd_m.fmddmodid_desc = cl_get_username(g_fmdd_m.fmddmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_fmdd_m.fmddstus MATCHES "[DR]" THEN 
         LET g_fmdd_m.fmddstus = "N"
      END IF

      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL afmt150_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE fmdd_t SET (fmddmodid,fmddmoddt) = (g_fmdd_m.fmddmodid,g_fmdd_m.fmddmoddt)
          WHERE fmddent = g_enterprise AND fmdddocno = g_fmdddocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_fmdd_m.* = g_fmdd_m_t.*
            CALL afmt150_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_fmdd_m.fmdddocno != g_fmdd_m_t.fmdddocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE fmde_t SET fmdedocno = g_fmdd_m.fmdddocno
 
          WHERE fmdeent = g_enterprise AND fmdedocno = g_fmdd_m_t.fmdddocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "fmde_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmde_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt150_set_act_visible()   
   CALL afmt150_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " fmddent = " ||g_enterprise|| " AND",
                      " fmdddocno = '", g_fmdd_m.fmdddocno, "' "
 
   #填到對應位置
   CALL afmt150_browser_fill("")
 
   CLOSE afmt150_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt150_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="afmt150.input" >}
#+ 資料輸入
PRIVATE FUNCTION afmt150_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_ooef004             LIKE ooef_t.ooef004
   DEFINE  l_sql                 STRING 
   DEFINE  g_ooef006             LIKE ooef_t.ooef006           #融资组织所在地区
   DEFINE  g_glaa026             LIKE glaa_t.glaa026
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_glaa013             LIKE glaa_t.glaa013
   DEFINE  l_inbdstus            LIKE inbd_t.inbdstus
   DEFINE  l_inbdsite            LIKE inbd_t.inbdsite
   DEFINE  l_flag                LIKE type_t.num5    #161104-00046#15-add
   DEFINE  l_slip                LIKE ooba_t.ooba002 #161104-00046#15-add
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
 
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmdd_m.fmddsite,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtid_desc, 
       g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdp_desc,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid,g_fmdd_m.fmddmodid_desc, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfid_desc,g_fmdd_m.fmddcnfdt
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT fmdeseq,fmde001,fmde002,fmde003,fmde004 FROM fmde_t WHERE fmdeent=? AND  
       fmdedocno=? AND fmdeseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt150_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL afmt150_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL afmt150_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_fmdd_m.fmddsite,g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002, 
       g_fmdd_m.fmddstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
 
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="afmt150.input.head" >}
      #單頭段
      INPUT BY NAME g_fmdd_m.fmddsite,g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002, 
          g_fmdd_m.fmddstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN afmt150_cl USING g_enterprise,g_fmdd_m.fmdddocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt150_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE afmt150_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL afmt150_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL afmt150_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddsite
            
            #add-point:AFTER FIELD fmddsite name="input.a.fmddsite"
            IF NOT cl_null(g_fmdd_m.fmddsite) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_fmdd_m.fmddsite

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_42") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  CALL afmt150_site_desc(g_fmdd_m.fmddsite) RETURNING g_fmdd_m.fmddsite_desc
                  DISPLAY BY NAME g_fmdd_m.fmddsite_desc
                  SELECT ooef017 INTO g_fmdd_m.fmddcomp FROM ooef_t WHERE ooefent= g_enterprise AND ooef001=g_fmdd_m.fmddsite
                  CALL afmt150_site_desc(g_fmdd_m.fmddcomp) RETURNING g_fmdd_m.fmddcomp_desc
                  DISPLAY BY NAME g_fmdd_m.fmddcomp,g_fmdd_m.fmddcomp_desc
                  CALL afmt150_fmddsite_ref()
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddsite
            #add-point:BEFORE FIELD fmddsite name="input.b.fmddsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmddsite
            #add-point:ON CHANGE fmddsite name="input.g.fmddsite"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdd001
            #add-point:BEFORE FIELD fmdd001 name="input.b.fmdd001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdd001
            
            #add-point:AFTER FIELD fmdd001 name="input.a.fmdd001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdd001
            #add-point:ON CHANGE fmdd001 name="input.g.fmdd001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdddocno
            #add-point:BEFORE FIELD fmdddocno name="input.b.fmdddocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdddocno
            
            #add-point:AFTER FIELD fmdddocno name="input.a.fmdddocno"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_fmdd_m.fmdddocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_fmdd_m.fmdddocno != g_fmdddocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmdd_t WHERE "||"fmddent = '" ||g_enterprise|| "' AND "||"fmdddocno = '"||g_fmdd_m.fmdddocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               #确认单别存在
               CALL afmt150_fmddsite_ref()
               CALL s_aooi200_fin_chk_slip(g_glaald,g_glaa024,g_fmdd_m.fmdddocno,'afmt150') RETURNING l_success
                  IF l_success = FALSE THEN
                     LET g_fmdd_m.fmdddocno = g_fmdd_m_t.fmdddocno
                     NEXT FIELD fmdddocno
                  END IF
               #161104-00046#15-----s
               CALL s_aooi200_fin_get_slip(g_fmdd_m.fmdddocno) RETURNING g_sub_success,l_slip
               CALL s_control_chk_doc('1',g_fmdd_m.fmdddocno,'4',g_user,g_dept,'','') RETURNING g_sub_success,l_flag
               IF g_sub_success AND l_flag THEN             
               ELSE
                  LET g_fmdd_m.fmdddocno = g_fmdd_m_o.fmdddocno 
                  NEXT FIELD CURRENT                  
               END IF
               #刪除單別預設temptable
               DELETE FROM s_aooi200def1
               #以目前畫面資訊新增temp資料   #請勿調整.*
               INSERT INTO s_aooi200def1 VALUES(g_fmdd_m.*)
               #依單別預設取用資訊
               CALL s_aooi200def_get('','',g_fmdd_m.fmddsite,'2',l_slip,'','',g_glaald)
               #依單別預設值TEMP內容 給予到畫面上   #請勿調整.*
               SELECT * INTO g_fmdd_m.* FROM s_aooi200def1
               #161104-00046#15-----e  
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdddocno
            #add-point:ON CHANGE fmdddocno name="input.g.fmdddocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdddocdt
            #add-point:BEFORE FIELD fmdddocdt name="input.b.fmdddocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdddocdt
            
            #add-point:AFTER FIELD fmdddocdt name="input.a.fmdddocdt"
            IF NOT cl_null(g_fmdd_m.fmdddocdt) THEN
               #依据对应的主账套编码，抓取对应关账日期
               CALL afmt150_fmddsite_ref()
               SELECT glaa013 INTO l_glaa013 FROM glaa_t
                                            WHERE glaaent = g_enterprise
                                              AND glaald = g_glaald
               IF g_fmdd_m.fmdddocdt <= l_glaa013 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00160'
                  LET g_errparam.extend = g_fmdd_m.fmdddocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_fmdd_m.fmdddocdt = g_fmdd_m_t.fmdddocdt 
                  NEXT FIELD fmdddocdt
               END IF
            END IF           {#ADP版次:1#}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdddocdt
            #add-point:ON CHANGE fmdddocdt name="input.g.fmdddocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdd002
            #add-point:BEFORE FIELD fmdd002 name="input.b.fmdd002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdd002
            
            #add-point:AFTER FIELD fmdd002 name="input.a.fmdd002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdd002
            #add-point:ON CHANGE fmdd002 name="input.g.fmdd002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmddstus
            #add-point:BEFORE FIELD fmddstus name="input.b.fmddstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmddstus
            
            #add-point:AFTER FIELD fmddstus name="input.a.fmddstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmddstus
            #add-point:ON CHANGE fmddstus name="input.g.fmddstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.fmddsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddsite
            #add-point:ON ACTION controlp INFIELD fmddsite name="input.c.fmddsite"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdd_m.fmddsite             #給予default值
            #LET g_qryparam.where = " ooef206 = 'Y'"   #161006-00005#12   mark  
            #給予arg
            LET g_qryparam.arg1 = "" #


            #CALL q_ooef001()     #161006-00005#12   mark                    
            CALL q_ooef001_33()   #161006-00005#12   add

            LET g_fmdd_m.fmddsite = g_qryparam.return1              
            CALL afmt150_site_desc(g_fmdd_m.fmddsite) RETURNING g_fmdd_m.fmddsite_desc
            SELECT ooef017,ooef006 INTO g_fmdd_m.fmddcomp,g_ooef006 FROM ooef_t WHERE ooefent= g_enterprise AND ooef001=g_fmdd_m.fmddsite
            CALL afmt150_site_desc(g_fmdd_m.fmddcomp) RETURNING g_fmdd_m.fmddcomp_desc
            SELECT glaa026 INTO g_glaa026 FROM glaa_t WHERE glaaent = g_enterprise AND glaa014 = 'Y' AND glaacomp = g_fmdd_m.fmddcomp
            DISPLAY BY NAME g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp,g_fmdd_m.fmddcomp_desc
            DISPLAY g_fmdd_m.fmddsite TO fmddsite              #
            CALL afmt150_fmddsite_ref()
            NEXT FIELD fmddsite                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.fmdd001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdd001
            #add-point:ON ACTION controlp INFIELD fmdd001 name="input.c.fmdd001"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdddocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdddocno
            #add-point:ON ACTION controlp INFIELD fmdddocno name="input.c.fmdddocno"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdd_m.fmdddocno             #給予default值

            #給予arg
            SELECT ooef004 INTO l_ooef004 FROM ooef_t
             WHERE ooef001 = g_fmdd_m.fmddcomp
               AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_ooef004 
            LET g_qryparam.arg2 = g_prog    
            #LET g_qryparam.where = "ooba001 = '",l_ooef004,"' AND oobx003 = 'afmt150'"
            #LET g_qryparam.arg1 = "" #
            #161104-00046#15-----s
            IF NOT cl_null(g_user_slip_wc)THEN
               LET g_qryparam.where = g_user_slip_wc
            END IF
            #161104-00046#15-----e
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_fmdd_m.fmdddocno = g_qryparam.return1  
            LET g_qryparam.where = ""            

            DISPLAY g_fmdd_m.fmdddocno TO fmdddocno              #

            NEXT FIELD fmdddocno                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.fmdddocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdddocdt
            #add-point:ON ACTION controlp INFIELD fmdddocdt name="input.c.fmdddocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdd002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdd002
            #add-point:ON ACTION controlp INFIELD fmdd002 name="input.c.fmdd002"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmddstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmddstus
            #add-point:ON ACTION controlp INFIELD fmddstus name="input.c.fmddstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_fmdd_m.fmdddocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
           
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               CALL afmt150_fmddsite_ref()
               CALL s_aooi200_fin_gen_docno(g_glaald,g_glaa024,g_glaa003,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_prog) RETURNING l_success,g_fmdd_m.fmdddocno
               IF l_success  = 0  THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_fmdd_m.fmdddocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD fmdddocno
               END IF
               DISPLAY g_fmdd_m.fmdddocno TO fmdddocno
               #end add-point
               
               INSERT INTO fmdd_t (fmddent,fmddsite,fmddcomp,fmdd001,fmdddocno,fmdddocdt,fmdd002,fmddstus, 
                   fmddownid,fmddowndp,fmddcrtid,fmddcrtdp,fmddcrtdt,fmddmodid,fmddmoddt,fmddcnfid,fmddcnfdt) 
 
               VALUES (g_enterprise,g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp,g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno, 
                   g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid,g_fmdd_m.fmddowndp, 
                   g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid,g_fmdd_m.fmddmoddt, 
                   g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_fmdd_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL afmt150_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL afmt150_b_fill()
                  CALL afmt150_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL afmt150_fmdd_t_mask_restore('restore_mask_o')
               
               UPDATE fmdd_t SET (fmddsite,fmddcomp,fmdd001,fmdddocno,fmdddocdt,fmdd002,fmddstus,fmddownid, 
                   fmddowndp,fmddcrtid,fmddcrtdp,fmddcrtdt,fmddmodid,fmddmoddt,fmddcnfid,fmddcnfdt) = (g_fmdd_m.fmddsite, 
                   g_fmdd_m.fmddcomp,g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002, 
                   g_fmdd_m.fmddstus,g_fmdd_m.fmddownid,g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp, 
                   g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid,g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt) 
 
                WHERE fmddent = g_enterprise AND fmdddocno = g_fmdddocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "fmdd_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL afmt150_fmdd_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_fmdd_m_t)
               LET g_log2 = util.JSON.stringify(g_fmdd_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="afmt150.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_fmde_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_fmde_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL afmt150_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_fmde_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt150_cl USING g_enterprise,g_fmdd_m.fmdddocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt150_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE afmt150_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmde_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmde_d[l_ac].fmdeseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_fmde_d_t.* = g_fmde_d[l_ac].*  #BACKUP
               LET g_fmde_d_o.* = g_fmde_d[l_ac].*  #BACKUP
               CALL afmt150_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL afmt150_set_no_entry_b(l_cmd)
               IF NOT afmt150_lock_b("fmde_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt150_bcl INTO g_fmde_d[l_ac].fmdeseq,g_fmde_d[l_ac].fmde001,g_fmde_d[l_ac].fmde002, 
                      g_fmde_d[l_ac].fmde003,g_fmde_d[l_ac].fmde004
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_fmde_d_t.fmdeseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmde_d_mask_o[l_ac].* =  g_fmde_d[l_ac].*
                  CALL afmt150_fmde_t_mask()
                  LET g_fmde_d_mask_n[l_ac].* =  g_fmde_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt150_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmde_d[l_ac].* TO NULL 
            INITIALIZE g_fmde_d_t.* TO NULL 
            INITIALIZE g_fmde_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_fmde_d_t.* = g_fmde_d[l_ac].*     #新輸入資料
            LET g_fmde_d_o.* = g_fmde_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt150_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL afmt150_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmde_d[li_reproduce_target].* = g_fmde_d[li_reproduce].*
 
               LET g_fmde_d[li_reproduce_target].fmdeseq = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            SELECT MAX(fmdeseq)+1 INTO g_fmde_d[l_ac].fmdeseq FROM fmde_t
               WHERE fmdeent = g_enterprise AND fmdedocno = g_fmdd_m.fmdddocno
            IF cl_null(g_fmde_d[l_ac].fmdeseq) OR g_fmde_d[l_ac].fmdeseq = 0 THEN
               LET g_fmde_d[l_ac].fmdeseq = 1
            END IF 
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmde_t 
             WHERE fmdeent = g_enterprise AND fmdedocno = g_fmdd_m.fmdddocno
 
               AND fmdeseq = g_fmde_d[l_ac].fmdeseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmdd_m.fmdddocno
               LET gs_keys[2] = g_fmde_d[g_detail_idx].fmdeseq
               CALL afmt150_insert_b('fmde_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_fmde_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmde_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt150_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmdd_m.fmdddocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_fmde_d_t.fmdeseq
 
            
               #刪除同層單身
               IF NOT afmt150_delete_b('fmde_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt150_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt150_key_delete_b(gs_keys,'fmde_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt150_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt150_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_fmde_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmde_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde001
            
            #add-point:AFTER FIELD fmde001 name="input.a.page1.fmde001"
            IF NOT cl_null(g_fmde_d[l_ac].fmde001) THEN
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_fmde_d[l_ac].fmde001 
               #160318-00025#6--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "abm-00079:sub-01302|apmm100|",cl_get_progname("apmm100",g_lang,"2"),"|:EXEPROGapmm100"
               #160318-00025#6--add--end
               IF cl_chk_exist("v_fmcj001") THEN
                  IF NOT cl_null(g_fmde_d[l_ac].fmde002) THEN
                    LET g_chkparam.arg2 = g_fmde_d[l_ac].fmde002
                    #160318-00025#6--add--str
                    LET g_errshow = TRUE 
                    LET g_chkparam.err_str[1] = "abm-00079:sub-01302|apmm100|",cl_get_progname("apmm100",g_lang,"2"),"|:EXEPROGapmm100"
                    #160318-00025#6--add--end
                    IF NOT cl_chk_exist("v_fmcj001_1") THEN
                       NEXT FIELD CURRENT
                    END IF
                    IF l_cmd = 'a' AND NOT cl_null(g_fmde_d[l_ac].fmde003) THEN
                       LET g_chkparam.arg3 = g_fmde_d[l_ac].fmde003
                       IF cl_chk_exist("v_fmde001") THEN
                          INITIALIZE g_errparam TO NULL 
                          LET g_errparam.extend = 'foreach:' 
                          LET g_errparam.code   = '-17'
                          LET g_errparam.popup  = FALSE 
                          CALL cl_err()
                          NEXT FIELD CURRENT
                       END IF
                    END IF  
                  END IF 
               ELSE
                  NEXT FIELD CURRENT                
               END IF 
            END IF            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde001
            #add-point:BEFORE FIELD fmde001 name="input.b.page1.fmde001"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmde001
            #add-point:ON CHANGE fmde001 name="input.g.page1.fmde001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde002
            #add-point:BEFORE FIELD fmde002 name="input.b.page1.fmde002"
     
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde002
            
            #add-point:AFTER FIELD fmde002 name="input.a.page1.fmde002"
            IF NOT cl_null(g_fmde_d[l_ac].fmde001) AND NOT cl_null(g_fmde_d[l_ac].fmde002) THEN
               INITIALIZE g_chkparam.* TO NULL               
               LET g_chkparam.arg1 = g_fmde_d[l_ac].fmde001
               LET g_chkparam.arg2 = g_fmde_d[l_ac].fmde002
               #160318-00025#6--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "abm-00079:sub-01302|apmm100|",cl_get_progname("apmm100",g_lang,"2"),"|:EXEPROGapmm100"
               #160318-00025#6--add--end
               IF NOT cl_chk_exist("v_fmcj001_1") THEN
                     NEXT FIELD CURRENT
               END IF
               LET g_chkparam.arg3 = g_fmde_d[l_ac].fmde003
               IF l_cmd = 'a' AND NOT cl_null(g_fmde_d[l_ac].fmde003) THEN
                  IF cl_chk_exist("v_fmde001") THEN
                    INITIALIZE g_errparam TO NULL 
                    LET g_errparam.extend = 'foreach:' 
                    LET g_errparam.code   = '-17'
                    LET g_errparam.popup  = FALSE 
                    CALL cl_err()
                    NEXT FIELD CURRENT
                  END IF
               END IF                
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmde002
            #add-point:ON CHANGE fmde002 name="input.g.page1.fmde002"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde003
            
            #add-point:AFTER FIELD fmde003 name="input.a.page1.fmde003"
            IF NOT cl_null(g_fmde_d[l_ac].fmde001) AND NOT cl_null(g_fmde_d[l_ac].fmde002) AND NOT cl_null(g_fmde_d[l_ac].fmde003) THEN 
               LET g_chkparam.arg1 = g_fmde_d[l_ac].fmde001
               LET g_chkparam.arg2 = g_fmde_d[l_ac].fmde002
               LET g_chkparam.arg3 = g_fmde_d[l_ac].fmde003
               #160318-00025#6--add--str
               LET g_errshow = TRUE 
               LET g_chkparam.err_str[1] = "abm-00079:sub-01302|apmm100|",cl_get_progname("apmm100",g_lang,"2"),"|:EXEPROGapmm100"
               #160318-00025#6--add--end
               IF NOT cl_chk_exist("v_fmcp001") THEN
                  LET g_fmde_d[l_ac].fmde003 = g_fmde_d_t.fmde003
                  NEXT FIELD CURRENT
               END IF
               IF l_cmd = 'a' THEN 
                  IF cl_chk_exist("v_fmde001") THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = 'foreach:' 
                     LET g_errparam.code   = '-17'
                     LET g_errparam.popup  = FALSE 
                     CALL cl_err()                    
                     NEXT FIELD CURRENT
                   END IF 
               END IF
               CALL afmt150_b_desc()
               #抵押物性质不为1时，留置单号不开启
               IF g_fmde_d[l_ac].fmde003_desc_4 != '1:产品/原料' OR cl_null(g_fmde_d[l_ac].fmde003_desc_3 ) THEN 
                  LET g_chk_fmde004 = 'N'      
               ELSE 
                  LET g_chk_fmde004 = 'Y'          
               END IF
               CALL afmt150_set_entry_b(l_cmd)
               CALL afmt150_set_no_entry_b(l_cmd) 
               END IF 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde003
            #add-point:BEFORE FIELD fmde003 name="input.b.page1.fmde003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmde003
            #add-point:ON CHANGE fmde003 name="input.g.page1.fmde003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmde004
            #add-point:BEFORE FIELD fmde004 name="input.b.page1.fmde004"
#            LET l_count = 1
#            SELECT count(*) INTO l_count FROM ooef_t 
#                                              WHERE ooefent = g_enterprise
#                                                AND ooef001 = g_fmde_d[l_ac].fmde003_desc_3 
#                                                AND ooefstus = 'Y'   
#            IF g_fmde_d[l_ac].fmde003_desc_4 != '1:产品/原料' OR cl_null(g_fmde_d[l_ac].fmde003_desc_3 ) OR l_count = 0 THEN 
#               LET g_chk_fmde004 = 'N'      
#            ELSE 
#               LET g_chk_fmde004 = 'Y'          
#            END IF
#            CALL afmt150_set_entry_b(l_cmd)
#            CALL afmt150_set_no_entry_b(l_cmd)             
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmde004
            
            #add-point:AFTER FIELD fmde004 name="input.a.page1.fmde004"
            IF g_chk_fmde004 = 'Y' THEN 
               IF NOT cl_null(g_fmde_d[l_ac].fmde004) THEN 
                  LET g_errno = ''
                  SELECT inbdstus,inbdsite INTO l_inbdstus,l_inbdsite FROM inbd_t
                   WHERE inbdent = g_enterprie AND inbddocno = g_fmde_d[l_ac].fmde004
                  CASE
                     WHEN SQLCA.SQLCODE = 100 LET g_errno = 'afm-00173'
                     WHEN l_inbdstus <> 'Y' LET g_errno =  'sub-01313' #'afm-00174' #160318-00005#12 mod 
                     WHEN l_inbdsite <> g_fmdd_m.fmddsite LET g_errno = 'afm-00175'
                  END CASE
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend =g_fmde_d[l_ac].fmde004
                     LET g_errparam.code   = g_errno
                     #160318-00005#12   --add--str
                     LET g_errparam.replace[1] ='aint160'
                     LET g_errparam.replace[2] = cl_get_progname('aint160',g_lang,"2")
                     LET g_errparam.exeprog    ='aint160'
                     #160318-00005#12  --add--end
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  
                  #若已取消留置，报错
                  LET l_n = 0 
                  SELECT COUNT(*) INTO l_n FROM inbd_t
                   WHERE inbdent = g_enterprise AND inbd004 = g_fmde_d[l_ac].fmde004
                  
                  IF l_n > 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend =g_fmde_d[l_ac].fmde004
                     LET g_errparam.code   = 'afm-00172'
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               ELSE 
                  NEXT FIELD CURRENT 
               END IF 
            END IF 
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmde004
            #add-point:ON CHANGE fmde004 name="input.g.page1.fmde004"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.fmde001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde001
            #add-point:ON ACTION controlp INFIELD fmde001 name="input.c.page1.fmde001"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段

           INITIALIZE g_qryparam.* TO NULL
           LET g_qryparam.state = 'i'
           LET g_qryparam.reqry = FALSE
           
           LET g_qryparam.default1 = g_fmde_d[l_ac].fmde001             #給予default值
           
           #給予arg
           LET g_qryparam.arg1 = g_fmdd_m.fmddsite #
           
           
           CALL q_fmcj001()                                #呼叫開窗
           
           LET g_fmde_d[l_ac].fmde001 = g_qryparam.return1 
           LET g_fmde_d[l_ac].fmde002 = g_qryparam.return2 
           LET g_fmde_d[l_ac].fmde003 = g_qryparam.return3            
           
           DISPLAY g_fmde_d[l_ac].fmde001 TO fmde001              #
           DISPLAY g_fmde_d[l_ac].fmde002 TO fmde002
           DISPLAY g_fmde_d[l_ac].fmde003 TO fmde003
           CALL afmt150_b_desc()
           NEXT FIELD fmde001                          #返回原欄位
           

            #END add-point
 
 
         #Ctrlp:input.c.page1.fmde002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde002
            #add-point:ON ACTION controlp INFIELD fmde002 name="input.c.page1.fmde002"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmde_d[l_ac].fmde002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_fmdd_m.fmddsite  #s
            LET g_qryparam.arg2 = g_fmde_d[l_ac].fmde001 #s

            CALL q_fmcj001_1()                                #呼叫開窗

            LET g_fmde_d[l_ac].fmde002 = g_qryparam.return1 
            LET g_fmde_d[l_ac].fmde003 = g_qryparam.return2            

            DISPLAY g_fmde_d[l_ac].fmde002 TO fmde002              #
            DISPLAY g_fmde_d[l_ac].fmde003 TO fmde003
            CALL afmt150_b_desc()
            NEXT FIELD fmde002                          #返回原欄位
            

            #END add-point
 
 
         #Ctrlp:input.c.page1.fmde003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde003
            #add-point:ON ACTION controlp INFIELD fmde003 name="input.c.page1.fmde003"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmde_d[l_ac].fmde003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_fmdd_m.fmddsite #s
            LET g_qryparam.arg2 = g_fmde_d[l_ac].fmde001 #s
            LET g_qryparam.arg3 = g_fmde_d[l_ac].fmde002 #s

            CALL q_fmcj001_2()                                #呼叫開窗

            LET g_fmde_d[l_ac].fmde003 = g_qryparam.return1              

            DISPLAY g_fmde_d[l_ac].fmde003 TO fmde003              #
            CALL afmt150_b_desc()
            NEXT FIELD fmde003                          #返回原欄位
            

            #END add-point
 
 
         #Ctrlp:input.c.page1.fmde004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmde004
            #add-point:ON ACTION controlp INFIELD fmde004 name="input.c.page1.fmde004"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            IF g_chk_fmde004 = 'Y' THEN 
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               
               LET g_qryparam.default1 = g_fmde_d[l_ac].fmde004             #給予default值
               
               #給予arg
               LET g_qryparam.arg1 = g_fmde_d[l_ac].fmde003_desc_3   #s
               
               
               CALL q_inbddocno_2()                                #呼叫開窗
               
               LET g_fmde_d[l_ac].fmde004 = g_qryparam.return1              
               
               DISPLAY g_fmde_d[l_ac].fmde004 TO fmde004              #
               
               NEXT FIELD fmde004                          #返回原欄位
            END IF 


            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmde_d[l_ac].* = g_fmde_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE afmt150_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_fmde_d[l_ac].fmdeseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_fmde_d[l_ac].* = g_fmde_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL afmt150_fmde_t_mask_restore('restore_mask_o')
      
               UPDATE fmde_t SET (fmdedocno,fmdeseq,fmde001,fmde002,fmde003,fmde004) = (g_fmdd_m.fmdddocno, 
                   g_fmde_d[l_ac].fmdeseq,g_fmde_d[l_ac].fmde001,g_fmde_d[l_ac].fmde002,g_fmde_d[l_ac].fmde003, 
                   g_fmde_d[l_ac].fmde004)
                WHERE fmdeent = g_enterprise AND fmdedocno = g_fmdd_m.fmdddocno 
 
                  AND fmdeseq = g_fmde_d_t.fmdeseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmde_d[l_ac].* = g_fmde_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmde_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_fmde_d[l_ac].* = g_fmde_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmde_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmdd_m.fmdddocno
               LET gs_keys_bak[1] = g_fmdddocno_t
               LET gs_keys[2] = g_fmde_d[g_detail_idx].fmdeseq
               LET gs_keys_bak[2] = g_fmde_d_t.fmdeseq
               CALL afmt150_update_b('fmde_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL afmt150_fmde_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_fmde_d[g_detail_idx].fmdeseq = g_fmde_d_t.fmdeseq 
 
                  ) THEN
                  LET gs_keys[01] = g_fmdd_m.fmdddocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_fmde_d_t.fmdeseq
 
                  CALL afmt150_key_update_b(gs_keys,'fmde_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmdd_m),util.JSON.stringify(g_fmde_d_t)
               LET g_log2 = util.JSON.stringify(g_fmdd_m),util.JSON.stringify(g_fmde_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL afmt150_unlock_b("fmde_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmde_d[li_reproduce_target].* = g_fmde_d[li_reproduce].*
 
               LET g_fmde_d[li_reproduce_target].fmdeseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmde_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmde_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
 
 
 
{</section>}
 
{<section id="afmt150.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD fmdddocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD fmdeseq
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION afmt150_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL afmt150_b_fill() #單身填充
      CALL afmt150_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL afmt150_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   CALL afmt150_site_desc(g_fmdd_m.fmddsite) RETURNING g_fmdd_m.fmddsite_desc
   SELECT ooef017 INTO g_fmdd_m.fmddcomp FROM ooef_t WHERE ooefent= g_enterprise AND ooef001=g_fmdd_m.fmddsite
   CALL afmt150_site_desc(g_fmdd_m.fmddcomp) RETURNING g_fmdd_m.fmddcomp_desc
   #end add-point
   
   #遮罩相關處理
   LET g_fmdd_m_mask_o.* =  g_fmdd_m.*
   CALL afmt150_fmdd_t_mask()
   LET g_fmdd_m_mask_n.* =  g_fmdd_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmdd_m.fmddsite,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtid_desc, 
       g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdp_desc,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid,g_fmdd_m.fmddmodid_desc, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfid_desc,g_fmdd_m.fmddcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmdd_m.fmddstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_fmde_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      CALL afmt150_b_desc()
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL afmt150_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION afmt150_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION afmt150_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE fmdd_t.fmdddocno 
   DEFINE l_oldno     LIKE fmdd_t.fmdddocno 
 
   DEFINE l_master    RECORD LIKE fmdd_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE fmde_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_fmdd_m.fmdddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
    
   LET g_fmdd_m.fmdddocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmdd_m.fmddownid = g_user
      LET g_fmdd_m.fmddowndp = g_dept
      LET g_fmdd_m.fmddcrtid = g_user
      LET g_fmdd_m.fmddcrtdp = g_dept 
      LET g_fmdd_m.fmddcrtdt = cl_get_current()
      LET g_fmdd_m.fmddmodid = g_user
      LET g_fmdd_m.fmddmoddt = cl_get_current()
      LET g_fmdd_m.fmddstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmdd_m.fmddstus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL afmt150_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_fmdd_m.* TO NULL
      INITIALIZE g_fmde_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL afmt150_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt150_set_act_visible()   
   CALL afmt150_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmddent = " ||g_enterprise|| " AND",
                      " fmdddocno = '", g_fmdd_m.fmdddocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt150_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL afmt150_idx_chk()
   
   LET g_data_owner = g_fmdd_m.fmddownid      
   LET g_data_dept  = g_fmdd_m.fmddowndp
   
   #功能已完成,通報訊息中心
   CALL afmt150_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION afmt150_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE fmde_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE afmt150_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM fmde_t
    WHERE fmdeent = g_enterprise AND fmdedocno = g_fmdddocno_t
 
    INTO TEMP afmt150_detail
 
   #將key修正為調整後   
   UPDATE afmt150_detail 
      #更新key欄位
      SET fmdedocno = g_fmdd_m.fmdddocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO fmde_t SELECT * FROM afmt150_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE afmt150_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.delete" >}
#+ 資料刪除
PRIVATE FUNCTION afmt150_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_fmdd_m.fmdddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN afmt150_cl USING g_enterprise,g_fmdd_m.fmdddocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt150_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt150_master_referesh USING g_fmdd_m.fmdddocno INTO g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid_desc,g_fmdd_m.fmddcrtdp_desc, 
       g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddcnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT afmt150_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmdd_m_mask_o.* =  g_fmdd_m.*
   CALL afmt150_fmdd_t_mask()
   LET g_fmdd_m_mask_n.* =  g_fmdd_m.*
   
   CALL afmt150_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL afmt150_fmddsite_ref()
   CALL s_fin_date_close_chk(g_glaald,g_fmdd_m.fmddcomp,'ANM',g_fmdd_m.fmdddocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL afmt150_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_fmdddocno_t = g_fmdd_m.fmdddocno
 
 
      DELETE FROM fmdd_t
       WHERE fmddent = g_enterprise AND fmdddocno = g_fmdd_m.fmdddocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_fmdd_m.fmdddocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM fmde_t
       WHERE fmdeent = g_enterprise AND fmdedocno = g_fmdd_m.fmdddocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmde_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      CALL afmt150_fmddsite_ref()
      IF NOT s_aooi200_fin_del_docno(g_glaald,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_fmdd_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE afmt150_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_fmde_d.clear() 
 
     
      CALL afmt150_ui_browser_refresh()  
      #CALL afmt150_ui_headershow()  
      #CALL afmt150_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL afmt150_browser_fill("")
         CALL afmt150_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE afmt150_cl
 
   #功能已完成,通報訊息中心
   CALL afmt150_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="afmt150.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afmt150_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_fmde_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF afmt150_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT fmdeseq,fmde001,fmde002,fmde003,fmde004  FROM fmde_t",   
                     " INNER JOIN fmdd_t ON fmddent = " ||g_enterprise|| " AND fmdddocno = fmdedocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                     
                     " WHERE fmdeent=? AND fmdedocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY fmde_t.fmdeseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE afmt150_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR afmt150_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_fmdd_m.fmdddocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_fmdd_m.fmdddocno INTO g_fmde_d[l_ac].fmdeseq,g_fmde_d[l_ac].fmde001, 
          g_fmde_d[l_ac].fmde002,g_fmde_d[l_ac].fmde003,g_fmde_d[l_ac].fmde004   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_fmde_d.deleteElement(g_fmde_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE afmt150_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_fmde_d.getLength()
      LET g_fmde_d_mask_o[l_ac].* =  g_fmde_d[l_ac].*
      CALL afmt150_fmde_t_mask()
      LET g_fmde_d_mask_n[l_ac].* =  g_fmde_d[l_ac].*
   END FOR
   
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION afmt150_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM fmde_t
       WHERE fmdeent = g_enterprise AND
         fmdedocno = ps_keys_bak[1] AND fmdeseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmde_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION afmt150_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO fmde_t
                  (fmdeent,
                   fmdedocno,
                   fmdeseq
                   ,fmde001,fmde002,fmde003,fmde004) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_fmde_d[g_detail_idx].fmde001,g_fmde_d[g_detail_idx].fmde002,g_fmde_d[g_detail_idx].fmde003, 
                       g_fmde_d[g_detail_idx].fmde004)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmde_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmde_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION afmt150_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "fmde_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL afmt150_fmde_t_mask_restore('restore_mask_o')
               
      UPDATE fmde_t 
         SET (fmdedocno,
              fmdeseq
              ,fmde001,fmde002,fmde003,fmde004) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_fmde_d[g_detail_idx].fmde001,g_fmde_d[g_detail_idx].fmde002,g_fmde_d[g_detail_idx].fmde003, 
                  g_fmde_d[g_detail_idx].fmde004) 
         WHERE fmdeent = g_enterprise AND fmdedocno = ps_keys_bak[1] AND fmdeseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmde_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmde_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL afmt150_fmde_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION afmt150_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION afmt150_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION afmt150_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL afmt150_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "fmde_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN afmt150_bcl USING g_enterprise,
                                       g_fmdd_m.fmdddocno,g_fmde_d[g_detail_idx].fmdeseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "afmt150_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION afmt150_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE afmt150_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION afmt150_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("fmdddocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("fmdddocno",TRUE)
      CALL cl_set_comp_entry("fmdddocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      CALL cl_set_comp_entry("fmdddocdt",TRUE)
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION afmt150_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   DEFINE l_success  LIKE type_t.num5     #151130-00015#2 
   DEFINE l_slip     LIKE type_t.chr10  #151130-00015#2
   DEFINE l_dfin0033  LIKE type_t.chr80 #151130-00015#2
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("fmdddocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("fmdddocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("fmdddocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
    #151130-00015#2 -begin -add by XZG 20151222
      IF NOT cl_null(g_fmdd_m.fmdddocno) THEN  
            #获取单别
            CALL s_aooi200_fin_get_slip(g_fmdd_m.fmdddocno) RETURNING l_success,l_slip
            #是否可改日期
            CALL s_fin_get_doc_para(g_glaald,g_fmdd_m.fmddcomp,l_slip,'D-FIN-0033') RETURNING l_dfin0033
            IF l_dfin0033 = "N"  THEN 
               CALL cl_set_comp_entry("fmdddocdt",FALSE)
            ELSE 
               CALL cl_set_comp_entry("fmdddocdt",TRUE)
            END IF          
         END IF 
      #151130-00015#2  -end
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION afmt150_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   IF g_chk_fmde004 = 'Y' THEN 
      CALL cl_set_comp_entry("fmde004",TRUE)
      CALL cl_set_comp_required("fmde004",TRUE)
   END IF
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION afmt150_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   IF g_chk_fmde004 = 'N' THEN 
      CALL cl_set_comp_entry("fmde004",FALSE)
   END IF 
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION afmt150_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION afmt150_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_fmdd_m.fmddstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF


   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION afmt150_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION afmt150_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION afmt150_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " fmdddocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "fmdd_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "fmde_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION afmt150_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   DEFINE l_fmcp007  LIKE fmcp_t.fmcp007,
          l_fmcp017  LIKE fmcp_t.fmcp017,
          l_fmcp016  LIKE fmcp_t.fmcp016,
          l_fmcp004  LIKE fmcp_t.fmcp004,
          l_fmcp005  LIKE fmcp_t.fmcp005,
          l_fmcp003  LIKE fmcp_t.fmcp003
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_fmdd_m.fmdddocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN afmt150_cl USING g_enterprise,g_fmdd_m.fmdddocno
   IF STATUS THEN
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt150_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE afmt150_master_referesh USING g_fmdd_m.fmdddocno INTO g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid_desc,g_fmdd_m.fmddcrtdp_desc, 
       g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddcnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT afmt150_action_chk() THEN
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmdd_m.fmddsite,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp,g_fmdd_m.fmddcomp_desc, 
       g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus,g_fmdd_m.fmddownid, 
       g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtid_desc, 
       g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdp_desc,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid,g_fmdd_m.fmddmodid_desc, 
       g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfid_desc,g_fmdd_m.fmddcnfdt
 
   CASE g_fmdd_m.fmddstus
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL afmt150_fmddsite_ref()
   CALL s_fin_date_close_chk(g_glaald,g_fmdd_m.fmddcomp,'ANM',g_fmdd_m.fmdddocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_fmdd_m.fmddstus
            
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_fmdd_m.fmddstus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)
      END CASE

      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT afmt150_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt150_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT afmt150_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt150_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
#            CALL s_transaction_begin()
#            FOR l_ac = 1 TO g_fmde_d.getLength() 
#                LET l_fmcp007 = NULL
#                LET l_fmcp017 = NULL
#                LET l_fmcp016 = NULL
#                LET l_fmcp004 = NULL
#                LET l_fmcp005 = NULL
#                LET l_fmcp003 = NULL
#                SELECT fmcp007,fmcp017,fmcp016,fmcp004,fmcp005,fmcp003 into l_fmcp007,l_fmcp017,l_fmcp016,l_fmcp004,l_fmcp005,l_fmcp003 
#                                                        FROM fmcp_t 
#                                                       WHERE fmcpdocno = g_fmde_d[l_ac].fmde001
#                                                         AND fmcpent = g_enterprise 
#                                                         AND fmcpseq = g_fmde_d[l_ac].fmde002
#                                                         AND fmcpseq2 = g_fmde_d[l_ac].fmde003 
#                UPDATE fmcp_t SET fmcp012 = '2',fmcp014 = NULL
#                            WHERE fmcpent = g_enterprise
#                              AND fmcpdocno = g_fmde_d[l_ac].fmde001
#                              AND fmcpseq = g_fmde_d[l_ac].fmde002
#                              AND fmcpseq2 = g_fmde_d[l_ac].fmde003
#                 IF SQLCA.sqlcode THEN
#                    INITIALIZE g_errparam TO NULL 
#                    LET g_errparam.extend = "fmcp_t" 
#                    LET g_errparam.code   = SQLCA.sqlcode 
#                    LET g_errparam.popup  = TRUE 
#                    CALL cl_err()
#                    CALL s_transaction_end('N','0')
#                 END IF
#                 #IF g_fmde_d[l_ac].fmde003_desc_4 = '2' THEN
#                 IF l_fmcp003 = '2' THEN                 
#                    UPDATE faah_t SET faah037 = 1
#                                WHERE faahent = g_enterprise
#                                  AND faah000 = l_fmcp017
#                                  AND faah001 = l_fmcp016
#                                  AND faah003 = l_fmcp004
#                                  AND faah004 = l_fmcp005
#                    IF SQLCA.sqlcode THEN
#                       INITIALIZE g_errparam TO NULL 
#                       LET g_errparam.extend = "faah_t" 
#                       LET g_errparam.code   = SQLCA.sqlcode 
#                       LET g_errparam.popup  = TRUE 
#                       CALL cl_err()
#                       CALL s_transaction_end('N','0')
#                    END IF
#                  ELSE 
#                    IF l_fmcp003 = 'A' THEN
#                       UPDATE fmmj_t SET fmmj010 = 'N'
#                                   WHERE fmmjent = g_enterprise
#                                     AND fmmjdocno = l_fmcp007
#                                     AND fmmjsite = g_fmde_d[l_ac].fmde003_desc_3                                      
#                       IF SQLCA.sqlcode THEN
#                          INITIALIZE g_errparam TO NULL 
#                          LET g_errparam.extend = "fmmj_t" 
#                          LET g_errparam.code   = SQLCA.sqlcode 
#                          LET g_errparam.popup  = TRUE 
#                          CALL cl_err()
#                          CALL s_transaction_end('N','0')
#                       END IF                                     
#                    END IF 
#                 END IF              
#            END FOR
#            CALL s_transaction_end('Y','0')  
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
#            CALL s_transaction_begin()
#            FOR l_ac = 1 TO g_fmde_d.getLength() 
#                LET l_fmcp007 = NULL
#                LET l_fmcp017 = NULL
#                LET l_fmcp016 = NULL
#                LET l_fmcp004 = NULL
#                LET l_fmcp005 = NULL
#                LET l_fmcp003 = NULL 
#                SELECT fmcp007,fmcp017,fmcp016,fmcp004,fmcp005,fmcp003 into l_fmcp007,l_fmcp017,l_fmcp016,l_fmcp004,l_fmcp005,l_fmcp003 
#                                                        FROM fmcp_t 
#                                                       WHERE fmcpdocno = g_fmde_d[l_ac].fmde001
#                                                         AND fmcpent = g_enterprise 
#                                                         AND fmcpseq = g_fmde_d[l_ac].fmde002
#                                                         AND fmcpseq2 = g_fmde_d[l_ac].fmde003 
#                UPDATE fmcp_t SET fmcp012 = '3',fmcp014 = g_fmde_d[l_ac].fmde004
#                            WHERE fmcpent = g_enterprise
#                              AND fmcpdocno = g_fmde_d[l_ac].fmde001
#                              AND fmcpseq = g_fmde_d[l_ac].fmde002
#                              AND fmcpseq2 = g_fmde_d[l_ac].fmde003
#                 IF SQLCA.sqlcode THEN
#                    INITIALIZE g_errparam TO NULL 
#                    LET g_errparam.extend = "fmcp_t" 
#                    LET g_errparam.code   = SQLCA.sqlcode 
#                    LET g_errparam.popup  = TRUE 
#                    CALL cl_err()
#                    CALL s_transaction_end('N','0')
#                 END IF
#                 IF l_fmcp003 = '2' THEN 
#                    UPDATE faah_t SET faah037 = 0
#                                WHERE faahent = g_enterprise
#                                  AND faah000 = l_fmcp017
#                                  AND faah001 = l_fmcp016
#                                  AND faah003 = l_fmcp004
#                                  AND faah004 = l_fmcp005
#                    IF SQLCA.sqlcode THEN
#                       INITIALIZE g_errparam TO NULL 
#                       LET g_errparam.extend = "faah_t" 
#                       LET g_errparam.code   = SQLCA.sqlcode 
#                       LET g_errparam.popup  = TRUE 
#                       CALL cl_err()
#                       CALL s_transaction_end('N','0')
#                    END IF
#                 ELSE 
#                    IF l_fmcp003 = 'A' THEN
#                       UPDATE fmmj_t SET fmmj010 = 'Y'
#                                   WHERE fmmjent = g_enterprise
#                                     AND fmmjdocno = l_fmcp007
#                                     AND fmmjsite = g_fmde_d[l_ac].fmde003_desc_3                                      
#                       IF SQLCA.sqlcode THEN
#                          INITIALIZE g_errparam TO NULL 
#                          LET g_errparam.extend = "fmmj_t" 
#                          LET g_errparam.code   = SQLCA.sqlcode 
#                          LET g_errparam.popup  = TRUE 
#                          CALL cl_err()
#                          CALL s_transaction_end('N','0')
#                       END IF                                     
#                    END IF 
#                 END IF          
#            END FOR
#            CALL s_transaction_end('Y','0')        
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "A" 
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "N"
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_fmdd_m.fmddstus = lc_state OR cl_null(lc_state) THEN
      CLOSE afmt150_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   #151125-00001#2 --- add start ---
   IF lc_state = 'X' THEN
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0') 
         RETURN
      END IF
   END IF
   #151125-00001#2 --- add end   ---
   
   #150413-00021#21---add--s---
   IF lc_state = 'Y' THEN
      IF NOT s_afmt150_conf_chk(g_fmdd_m.fmdddocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
     #IF NOT cl_ask_confirm('aim-00108') THEN   #160518-00035#12 mark
      IF NOT cl_ask_confirm('afm-00256') THEN   #160518-00035#12    
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      IF NOT s_afmt150_conf_upd(g_fmdd_m.fmdddocno) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
   END IF
   
   IF lc_state = 'N' THEN 
      #160518-00035#12 mark--s
      #IF NOT s_afmt150_unconf_chk(g_fmdd_m.fmdddocno) THEN
      #   CALL s_transaction_end('N','0')
      #   CALL cl_err_collect_show()
      #   RETURN
      #END IF
      #IF NOT cl_ask_confirm('aim-00110') THEN
      #   CALL s_transaction_end('N','0')
      #   CALL cl_err_collect_show()
      #   RETURN
      #END IF
      #IF NOT s_afmt150_unconf_upd(g_fmdd_m.fmdddocno) THEN
      #   CALL s_transaction_end('N','0')
      #   CALL cl_err_collect_show()
      #   RETURN
      #END IF
      #160518-00035#12 mark--e
      #160518-00035#12--s
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = ''
      LET g_errparam.code   = 'afm-00257'
      LET g_errparam.popup  = TRUE 
      CALL cl_err()      
      CALL s_transaction_end('N','0')
      CALL cl_err_collect_show()    
      RETURN      
      #160518-00035#12--e
   END IF 
   
   #150413-00021#21---add--e---
   #end add-point
   
   LET g_fmdd_m.fmddmodid = g_user
   LET g_fmdd_m.fmddmoddt = cl_get_current()
   LET g_fmdd_m.fmddstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE fmdd_t 
      SET (fmddstus,fmddmodid,fmddmoddt) 
        = (g_fmdd_m.fmddstus,g_fmdd_m.fmddmodid,g_fmdd_m.fmddmoddt)     
    WHERE fmddent = g_enterprise AND fmdddocno = g_fmdd_m.fmdddocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE afmt150_master_referesh USING g_fmdd_m.fmdddocno INTO g_fmdd_m.fmddsite,g_fmdd_m.fmddcomp, 
          g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus, 
          g_fmdd_m.fmddownid,g_fmdd_m.fmddowndp,g_fmdd_m.fmddcrtid,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdt, 
          g_fmdd_m.fmddmodid,g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfdt,g_fmdd_m.fmddsite_desc, 
          g_fmdd_m.fmddcomp_desc,g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid_desc, 
          g_fmdd_m.fmddcrtdp_desc,g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_fmdd_m.fmddsite,g_fmdd_m.fmddsite_desc,g_fmdd_m.fmddcomp,g_fmdd_m.fmddcomp_desc, 
          g_fmdd_m.fmdd001,g_fmdd_m.fmdddocno,g_fmdd_m.fmdddocdt,g_fmdd_m.fmdd002,g_fmdd_m.fmddstus, 
          g_fmdd_m.fmddownid,g_fmdd_m.fmddownid_desc,g_fmdd_m.fmddowndp,g_fmdd_m.fmddowndp_desc,g_fmdd_m.fmddcrtid, 
          g_fmdd_m.fmddcrtid_desc,g_fmdd_m.fmddcrtdp,g_fmdd_m.fmddcrtdp_desc,g_fmdd_m.fmddcrtdt,g_fmdd_m.fmddmodid, 
          g_fmdd_m.fmddmodid_desc,g_fmdd_m.fmddmoddt,g_fmdd_m.fmddcnfid,g_fmdd_m.fmddcnfid_desc,g_fmdd_m.fmddcnfdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE afmt150_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt150_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt150.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION afmt150_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_fmde_d.getLength() THEN
         LET g_detail_idx = g_fmde_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmde_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmde_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afmt150_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL afmt150_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION afmt150_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt150.status_show" >}
PRIVATE FUNCTION afmt150_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="afmt150.mask_functions" >}
&include "erp/afm/afmt150_mask.4gl"
 
{</section>}
 
{<section id="afmt150.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION afmt150_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL afmt150_show()
   CALL afmt150_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_fmdd_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_fmde_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
    CALL s_afmt150_conf_chk(g_fmdd_m.fmdddocno)
         RETURNING l_success
    IF NOT l_success THEN
       CLOSE afmt150_cl
       CALL s_transaction_end('N','0')
       RETURN FALSE
    END IF
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
  
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL afmt150_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt150_ui_headershow()
   CALL afmt150_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION afmt150_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt150_ui_headershow()  
   CALL afmt150_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="afmt150.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION afmt150_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_fmdd_m.fmdddocno
   LET g_pk_array[1].column = 'fmdddocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt150.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="afmt150.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION afmt150_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL afmt150_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_fmdd_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt150.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION afmt150_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#12 2016/08/24 By 07900  --add-s--
   SELECT fmddstus INTO g_fmdd_m.fmddstus
     FROM fmdd_t
    WHERE fmddent = g_enterprise
      AND fmdddocno = g_fmdd_m.fmdddocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_fmdd_m.fmddstus
        
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_fmdd_m.fmdddocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL afmt150_set_act_visible()
        CALL afmt150_set_act_no_visible()
        CALL afmt150_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#12 2016/08/24 By 07900  --add-e--
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt150.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 获取单身ref值
# Memo...........:
# Usage..........: CALL afmt150_b_desc()
#                  
# Date & Author..: 2015/11/20 By aiqq
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt150_b_desc()
DEFINE l_returns DYNAMIC ARRAY OF VARCHAR(500)
DEFINE l_i LIKE type_t.num10
DEFINE l_sql STRING
   IF NOT cl_null(g_fmde_d[l_ac].fmde001) AND NOT cl_null(g_fmde_d[l_ac].fmde002) AND NOT cl_null(g_fmde_d[l_ac].fmde003) THEN 

      LET l_sql = "SELECT fmcp015,fmcp001,fmcp002,fmcp003,fmcp004,fmcp005,fmcp007,fmcp008,
                   fmcp016,fmcp017,fmcp018,fmcp019,fmcp020,fmcp010,fmcp011 
                   FROM fmcp_t WHERE fmcpent='"||g_enterprise||"' AND fmcpdocno='"||g_fmde_d[l_ac].fmde001||"' 
                   AND fmcpseq="||g_fmde_d[l_ac].fmde002||" AND fmcpseq2="||g_fmde_d[l_ac].fmde003||" "
      DECLARE afmt150_b_cs CURSOR FROM l_sql
      INITIALIZE l_returns TO NULL
      FOREACH afmt150_b_cs INTO g_fmde_d[l_ac].fmde003_desc,g_fmde_d[l_ac].fmde003_desc_2,g_fmde_d[l_ac].fmde003_desc_3,
                                g_fmde_d[l_ac].fmde003_desc_4,l_returns[1],l_returns[2],l_returns[3],l_returns[4],
                                l_returns[5],l_returns[6],l_returns[7],l_returns[8],l_returns[9],
                                g_fmde_d[l_ac].fmde003_desc_6,g_fmde_d[l_ac].fmde003_desc_7
              CASE g_fmde_d[l_ac].fmde003_desc_4
                   WHEN '1'
                        LET g_fmde_d[l_ac].fmde003_desc_4 = '1:产品/原料'
                   WHEN '2'
                        LET g_fmde_d[l_ac].fmde003_desc_4 = '2:资产'
                   WHEN 'A'
                        LET g_fmde_d[l_ac].fmde003_desc_4 = 'A:银行票据'
                   WHEN 'B'
                        LET g_fmde_d[l_ac].fmde003_desc_4 = 'B:仓单/提单'
                   WHEN 'C'
                        LET g_fmde_d[l_ac].fmde003_desc_4 = 'C:股票'
                   WHEN 'D'
                        LET g_fmde_d[l_ac].fmde003_desc_4 = 'D:专利权'
                   OTHERWISE
              END CASE 
              CASE g_fmde_d[l_ac].fmde003_desc
                   WHEN '1'
                        LET g_fmde_d[l_ac].fmde003_desc = '1:保证担保'
                   WHEN '2'
                        LET g_fmde_d[l_ac].fmde003_desc = '2:抵押担保'
                   WHEN '3'
                        LET g_fmde_d[l_ac].fmde003_desc = 'A:质押担保'
                   WHEN '4'
                        LET g_fmde_d[l_ac].fmde003_desc = 'B:混合担保'
              END CASE 
              LET g_fmde_d[l_ac].fmde003_desc_5 = NULL
              FOR l_i=1 TO 9
                  IF NOT cl_null(l_returns[l_i]) THEN
                     IF cl_null(g_fmde_d[l_ac].fmde003_desc_5) THEN         
                        LET g_fmde_d[l_ac].fmde003_desc_5 = l_returns[l_i]
                     ELSE 
                        LET g_fmde_d[l_ac].fmde003_desc_5 = g_fmde_d[l_ac].fmde003_desc_5,"-",l_returns[l_i]
                     END IF 
                  END IF
              END FOR 
      END FOREACH 
   END IF 
   DISPLAY BY NAME g_fmde_d[l_ac].fmde003_desc,g_fmde_d[l_ac].fmde003_desc_2,g_fmde_d[l_ac].fmde003_desc_3,
                   g_fmde_d[l_ac].fmde003_desc_4,g_fmde_d[l_ac].fmde003_desc_5,g_fmde_d[l_ac].fmde003_desc_6,
                   g_fmde_d[l_ac].fmde003_desc_7
END FUNCTION

################################################################################
# Descriptions...: 获取组织说明
# Memo...........:
# Usage..........: CALL afmt150_site_desc(p_site)
#                  RETURNING r_ooefl003
# Input parameter: p_site       组织
# Return code....: r_ooefl003   组织说明
# Date & Author..: 2015/11/20   By   aiqq
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt150_site_desc(p_site)
DEFINE p_site        LIKE ooef_t.ooef001
DEFINE r_ooefl003    LIKE ooefl_t.ooefl003

   SELECT ooefl003 INTO r_ooefl003 FROM ooefl_t
    WHERE ooeflent = g_enterprise AND ooefl001 = p_site
      AND ooefl002 = g_dlang
      
   RETURN r_ooefl003
END FUNCTION

################################################################################
# Descriptions...: 获取法人主账套资料
# Memo...........:
# Usage..........: CALL afmt150_fmddsite_ref()
#                  RETURNING 回传参数
# Date & Author..: 2015/11/21 By aiqq
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt150_fmddsite_ref()
LET g_glaald = null
LET g_glaa024 = null
LET g_glaa003 = null
SELECT glaald,glaa003,glaa024,glaa025,glaa026 INTO g_glaald,g_glaa003,g_glaa024,g_glaa025,g_glaa026 FROM glaa_t,ooef_t
    WHERE glaaent = ooefent AND glaacomp = ooef017 
      AND glaaent = g_enterprise AND ooef001 = g_fmdd_m.fmddsite
      AND glaa014 = 'Y'
END FUNCTION

 
{</section>}
 
