#該程式未解開Section, 採用最新樣板產出!
{<section id="afmt190.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0008(2016-02-23 10:54:54), PR版次:0008(2016-10-31 15:18:51)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000032
#+ Filename...: afmt190
#+ Description: 融資重評價維護作業
#+ Creator....: 01727(2016-02-22 17:11:55)
#+ Modifier...: 01727 -SD/PR- 08732
 
{</section>}
 
{<section id="afmt190.global" >}
#應用 t01 樣板自動產生(Version:76)
#add-point:填寫註解說明
#160620-00010#2   2016/06/21 By 01531    拋轉傳票時，傳票憑證日期應該預設單據的財務日期，而非系統日期
#160818-00017#12  2016/08/24 By 07900    删除修改未重新判断状态码
#160913-00017#2   2016/09/21 By 07900   AFM模组调整交易客商开窗
#161011-00019#1   2016/10/12 By dorishsu 傳票未確認才可還原
#161006-00005#14  2016/10/19 By 08732    組織類型與職能開窗調整
#161028-00032#1   2016/10/31 By 08171    帳套開窗調整
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_fmdf_m        RECORD
       fmdfsite LIKE fmdf_t.fmdfsite, 
   fmdfsite_desc LIKE type_t.chr80, 
   fmdfld LIKE fmdf_t.fmdfld, 
   fmdfld_desc LIKE type_t.chr80, 
   fmdfcomp LIKE fmdf_t.fmdfcomp, 
   fmdfcomp_desc LIKE type_t.chr80, 
   fmdfdocno LIKE fmdf_t.fmdfdocno, 
   fmdfdocdt LIKE fmdf_t.fmdfdocdt, 
   fmdf001 LIKE fmdf_t.fmdf001, 
   fmdf002 LIKE fmdf_t.fmdf002, 
   fmdf003 LIKE fmdf_t.fmdf003, 
   fmdfstus LIKE fmdf_t.fmdfstus, 
   fmdfownid LIKE fmdf_t.fmdfownid, 
   fmdfownid_desc LIKE type_t.chr80, 
   fmdfowndp LIKE fmdf_t.fmdfowndp, 
   fmdfowndp_desc LIKE type_t.chr80, 
   fmdfcrtid LIKE fmdf_t.fmdfcrtid, 
   fmdfcrtid_desc LIKE type_t.chr80, 
   fmdfcrtdp LIKE fmdf_t.fmdfcrtdp, 
   fmdfcrtdp_desc LIKE type_t.chr80, 
   fmdfcrtdt LIKE fmdf_t.fmdfcrtdt, 
   fmdfmodid LIKE fmdf_t.fmdfmodid, 
   fmdfmodid_desc LIKE type_t.chr80, 
   fmdfmoddt LIKE fmdf_t.fmdfmoddt, 
   fmdfcnfid LIKE fmdf_t.fmdfcnfid, 
   fmdfcnfid_desc LIKE type_t.chr80, 
   fmdfcnfdt LIKE fmdf_t.fmdfcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_fmdg_d        RECORD
       fmdgseq LIKE fmdg_t.fmdgseq, 
   fmdg003 LIKE fmdg_t.fmdg003, 
   fmdg004 LIKE fmdg_t.fmdg004, 
   fmdg005 LIKE fmdg_t.fmdg005, 
   fmdg006 LIKE fmdg_t.fmdg006, 
   fmdg007 LIKE fmdg_t.fmdg007, 
   fmdg008 LIKE fmdg_t.fmdg008, 
   fmdg009 LIKE fmdg_t.fmdg009, 
   fmdg100 LIKE fmdg_t.fmdg100, 
   fmdg103 LIKE fmdg_t.fmdg103, 
   fmdg113 LIKE fmdg_t.fmdg113, 
   fmdg101 LIKE fmdg_t.fmdg101, 
   fmdg114 LIKE fmdg_t.fmdg114, 
   fmdg115 LIKE fmdg_t.fmdg115, 
   fmdg035 LIKE fmdg_t.fmdg035, 
   fmdg034 LIKE fmdg_t.fmdg034, 
   fmdg034_desc LIKE type_t.chr500, 
   fmdg033 LIKE fmdg_t.fmdg033, 
   fmdg033_desc LIKE type_t.chr500, 
   fmdg123 LIKE fmdg_t.fmdg123, 
   fmdg121 LIKE fmdg_t.fmdg121, 
   fmdg124 LIKE fmdg_t.fmdg124, 
   fmdg125 LIKE fmdg_t.fmdg125, 
   fmdg133 LIKE fmdg_t.fmdg133, 
   fmdg131 LIKE fmdg_t.fmdg131, 
   fmdg134 LIKE fmdg_t.fmdg134, 
   fmdg135 LIKE fmdg_t.fmdg135
       END RECORD
PRIVATE TYPE type_g_fmdg2_d RECORD
       fmdgseq LIKE fmdg_t.fmdgseq, 
   fmdg010 LIKE fmdg_t.fmdg010, 
   fmdg010_desc LIKE type_t.chr500, 
   fmdg011 LIKE fmdg_t.fmdg011, 
   fmdg011_desc LIKE type_t.chr500, 
   fmdg012 LIKE fmdg_t.fmdg012, 
   fmdg012_desc LIKE type_t.chr500, 
   fmdg013 LIKE fmdg_t.fmdg013, 
   fmdg013_desc LIKE type_t.chr500, 
   fmdg014 LIKE fmdg_t.fmdg014, 
   fmdg014_desc LIKE type_t.chr500, 
   fmdg015 LIKE fmdg_t.fmdg015, 
   fmdg015_desc LIKE type_t.chr500, 
   fmdg016 LIKE fmdg_t.fmdg016, 
   fmdg016_desc LIKE type_t.chr500, 
   fmdg017 LIKE fmdg_t.fmdg017, 
   fmdg017_desc LIKE type_t.chr500, 
   fmdg018 LIKE fmdg_t.fmdg018, 
   fmdg018_desc LIKE type_t.chr500, 
   fmdg019 LIKE fmdg_t.fmdg019, 
   fmdg020 LIKE fmdg_t.fmdg020, 
   fmdg021 LIKE fmdg_t.fmdg021, 
   fmdg021_desc LIKE type_t.chr500, 
   fmdg022 LIKE fmdg_t.fmdg022, 
   fmdg022_desc LIKE type_t.chr500, 
   fmdg023 LIKE fmdg_t.fmdg023, 
   fmdg024 LIKE fmdg_t.fmdg024, 
   fmdg025 LIKE fmdg_t.fmdg025, 
   fmdg026 LIKE fmdg_t.fmdg026, 
   fmdg027 LIKE fmdg_t.fmdg027, 
   fmdg028 LIKE fmdg_t.fmdg028, 
   fmdg029 LIKE fmdg_t.fmdg029, 
   fmdg030 LIKE fmdg_t.fmdg030, 
   fmdg031 LIKE fmdg_t.fmdg031, 
   fmdg032 LIKE fmdg_t.fmdg032
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_fmdfld LIKE fmdf_t.fmdfld,
      b_fmdfdocno LIKE fmdf_t.fmdfdocno,
      b_fmdf001 LIKE fmdf_t.fmdf001,
      b_fmdf002 LIKE fmdf_t.fmdf002
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_wc_cs_comp      STRING   #161006-00005#14   add
#end add-point
       
#模組變數(Module Variables)
DEFINE g_fmdf_m          type_g_fmdf_m
DEFINE g_fmdf_m_t        type_g_fmdf_m
DEFINE g_fmdf_m_o        type_g_fmdf_m
DEFINE g_fmdf_m_mask_o   type_g_fmdf_m #轉換遮罩前資料
DEFINE g_fmdf_m_mask_n   type_g_fmdf_m #轉換遮罩後資料
 
   DEFINE g_fmdfld_t LIKE fmdf_t.fmdfld
DEFINE g_fmdfdocno_t LIKE fmdf_t.fmdfdocno
DEFINE g_fmdf001_t LIKE fmdf_t.fmdf001
DEFINE g_fmdf002_t LIKE fmdf_t.fmdf002
 
 
DEFINE g_fmdg_d          DYNAMIC ARRAY OF type_g_fmdg_d
DEFINE g_fmdg_d_t        type_g_fmdg_d
DEFINE g_fmdg_d_o        type_g_fmdg_d
DEFINE g_fmdg_d_mask_o   DYNAMIC ARRAY OF type_g_fmdg_d #轉換遮罩前資料
DEFINE g_fmdg_d_mask_n   DYNAMIC ARRAY OF type_g_fmdg_d #轉換遮罩後資料
DEFINE g_fmdg2_d          DYNAMIC ARRAY OF type_g_fmdg2_d
DEFINE g_fmdg2_d_t        type_g_fmdg2_d
DEFINE g_fmdg2_d_o        type_g_fmdg2_d
DEFINE g_fmdg2_d_mask_o   DYNAMIC ARRAY OF type_g_fmdg2_d #轉換遮罩前資料
DEFINE g_fmdg2_d_mask_n   DYNAMIC ARRAY OF type_g_fmdg2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="afmt190.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT fmdfsite,'',fmdfld,'',fmdfcomp,'',fmdfdocno,fmdfdocdt,fmdf001,fmdf002, 
       fmdf003,fmdfstus,fmdfownid,'',fmdfowndp,'',fmdfcrtid,'',fmdfcrtdp,'',fmdfcrtdt,fmdfmodid,'',fmdfmoddt, 
       fmdfcnfid,'',fmdfcnfdt", 
                      " FROM fmdf_t",
                      " WHERE fmdfent= ? AND fmdfld=? AND fmdfdocno=? AND fmdf001=? AND fmdf002=? FOR  
                          UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt190_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.fmdfsite,t0.fmdfld,t0.fmdfcomp,t0.fmdfdocno,t0.fmdfdocdt,t0.fmdf001, 
       t0.fmdf002,t0.fmdf003,t0.fmdfstus,t0.fmdfownid,t0.fmdfowndp,t0.fmdfcrtid,t0.fmdfcrtdp,t0.fmdfcrtdt, 
       t0.fmdfmodid,t0.fmdfmoddt,t0.fmdfcnfid,t0.fmdfcnfdt,t1.ooefl003 ,t2.glaal002 ,t3.ooefl003 ,t4.ooag011 , 
       t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 ,t8.ooag011 ,t9.ooag011",
               " FROM fmdf_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.fmdfsite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN glaal_t t2 ON t2.glaalent="||g_enterprise||" AND t2.glaalld=t0.fmdfld AND t2.glaal001='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=t0.fmdfcomp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent="||g_enterprise||" AND t4.ooag001=t0.fmdfownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent="||g_enterprise||" AND t5.ooefl001=t0.fmdfowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent="||g_enterprise||" AND t6.ooag001=t0.fmdfcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent="||g_enterprise||" AND t7.ooefl001=t0.fmdfcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.fmdfmodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent="||g_enterprise||" AND t9.ooag001=t0.fmdfcnfid  ",
 
               " WHERE t0.fmdfent = " ||g_enterprise|| " AND t0.fmdfld = ? AND t0.fmdfdocno = ? AND t0.fmdf001 = ? AND t0.fmdf002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE afmt190_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afmt190 WITH FORM cl_ap_formpath("afm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afmt190_init()   
 
      #進入選單 Menu (="N")
      CALL afmt190_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_afmt190
      
   END IF 
   
   CLOSE afmt190_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="afmt190.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION afmt190_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   DEFINE l_success         LIKE type_t.num5
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('fmdfstus','13','N,Y,X,A,D,R,W')
 
      CALL cl_set_combo_scc('fmdg004','8873') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   CALL s_fin_create_account_center_tmp()
   CALL s_pre_voucher_cre_tmp_table() RETURNING l_success
   CALL s_fin_set_comp_scc('fmdf001','43')
   CALL s_fin_set_comp_scc('fmdf002','111')
   
   #161006-00005#14   add---s
   CALL s_fin_azzi800_sons_query(g_today) 
   CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp   
   CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
   #161006-00005#14   add---e
   #end add-point
   
   #初始化搜尋條件
   CALL afmt190_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="afmt190.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION afmt190_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   DEFINE  l_success             LIKE type_t.num5
   DEFINE  l_glaa121             LIKE glaa_t.glaa121
   DEFINE  l_ooba002             LIKE ooba_t.ooba002
   DEFINE  l_dfin0030            LIKE type_t.chr1
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_fmdf_m.* TO NULL
         CALL g_fmdg_d.clear()
         CALL g_fmdg2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL afmt190_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_fmdg_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt190_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL afmt190_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_fmdg2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt190_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL afmt190_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL afmt190_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL afmt190_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL afmt190_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL afmt190_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL afmt190_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL afmt190_set_act_visible()   
            CALL afmt190_set_act_no_visible()
            IF NOT (g_fmdf_m.fmdfld IS NULL
              OR g_fmdf_m.fmdfdocno IS NULL
              OR g_fmdf_m.fmdf001 IS NULL
              OR g_fmdf_m.fmdf002 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " fmdfent = " ||g_enterprise|| " AND",
                                  " fmdfld = '", g_fmdf_m.fmdfld, "' "
                                  ," AND fmdfdocno = '", g_fmdf_m.fmdfdocno, "' "
                                  ," AND fmdf001 = '", g_fmdf_m.fmdf001, "' "
                                  ," AND fmdf002 = '", g_fmdf_m.fmdf002, "' "
 
               #填到對應位置
               CALL afmt190_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmdf_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmdg_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL afmt190_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmdf_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmdg_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL afmt190_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL afmt190_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL afmt190_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt190_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL afmt190_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt190_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL afmt190_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt190_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL afmt190_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt190_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL afmt190_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt190_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_fmdg_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_fmdg2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL afmt190_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL afmt190_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_pre
            LET g_action_choice="open_pre"
            IF cl_auth_chk_act("open_pre") THEN
               
               #add-point:ON ACTION open_pre name="menu.open_pre"
               IF g_fmdf_m.fmdfstus <> 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'axr-00270'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  EXIT DIALOG
               END IF

               #获取单别
               CALL s_aooi200_fin_get_slip(g_fmdf_m.fmdfdocno) RETURNING l_success,l_ooba002
               #是否抛傳票
               CALL s_fin_get_doc_para(g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,l_ooba002,'D-FIN-0030')
                  RETURNING l_dfin0030

               IF l_dfin0030 = 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = l_ooba002
                  LET g_errparam.code   = 'axr-00225'
                  LET g_errparam.popup  = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF

               CALL s_transaction_begin()
               CALL cl_err_collect_init()
               IF NOT cl_null(g_fmdf_m.fmdfdocno) THEN
                  CALL s_pre_voucher_ins('FM','M19',g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,'19')
                     RETURNING l_success

                  IF l_success THEN
                     CALL s_transaction_end('Y','1')
                  ELSE
                     CALL s_transaction_end('N','1')
                  END IF
               END IF
               CALL cl_err_collect_show()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL afmt190_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axrp330
            LET g_action_choice="open_axrp330"
            IF cl_auth_chk_act("open_axrp330") THEN
               
               #add-point:ON ACTION open_axrp330 name="menu.open_axrp330"
               CALL afmt190_get_gl()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_reback
            LET g_action_choice="open_reback"
            IF cl_auth_chk_act("open_reback") THEN
               
               #add-point:ON ACTION open_reback name="menu.open_reback"
              ##傳票還原
               CALL afmt190_get_ungl()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               &include "erp/afm/afmt190_rep.4gl"
               #add-point:ON ACTION output.after
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_afmt190_01
            LET g_action_choice="open_afmt190_01"
            IF cl_auth_chk_act("open_afmt190_01") THEN
               
               #add-point:ON ACTION open_afmt190_01 name="menu.open_afmt190_01"
               CALL afmt190_01()
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL afmt190_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION open_axrt300_13
            LET g_action_choice="open_axrt300_13"
            IF cl_auth_chk_act("open_axrt300_13") THEN
               
               #add-point:ON ACTION open_axrt300_13 name="menu.open_axrt300_13"
               #傳票預覽
               IF NOT cl_null(g_fmdf_m.fmdfdocno) THEN
                  CALL s_ld_sel_glaa(g_fmdf_m.fmdfld,'glaa121') RETURNING g_sub_success,l_glaa121
                  IF l_glaa121 = 'Y' THEN
                     CALL s_pre_voucher('FM','M19',g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt) 
                  ELSE
                     CALL axrt300_13('FM',g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_prog)
                  END IF
               END IF
               #END add-point
               
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL afmt190_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL afmt190_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL afmt190_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_fmdf_m.fmdfdocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="afmt190.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION afmt190_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT fmdfld,fmdfdocno,fmdf001,fmdf002 ",
                      " FROM fmdf_t ",
                      " ",
                      " LEFT JOIN fmdg_t ON fmdgent = fmdfent AND fmdfld = fmdgld AND fmdfdocno = fmdgdocno AND fmdf001 = fmdg001 AND fmdf002 = fmdg002 ", "  ",
                      #add-point:browser_fill段sql(fmdg_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE fmdfent = " ||g_enterprise|| " AND fmdgent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("fmdf_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT fmdfld,fmdfdocno,fmdf001,fmdf002 ",
                      " FROM fmdf_t ", 
                      "  ",
                      "  ",
                      " WHERE fmdfent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("fmdf_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_fmdf_m.* TO NULL
      CALL g_fmdg_d.clear()        
      CALL g_fmdg2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.fmdfld,t0.fmdfdocno,t0.fmdf001,t0.fmdf002 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmdfstus,t0.fmdfld,t0.fmdfdocno,t0.fmdf001,t0.fmdf002 ",
                  " FROM fmdf_t t0",
                  "  ",
                  "  LEFT JOIN fmdg_t ON fmdgent = fmdfent AND fmdfld = fmdgld AND fmdfdocno = fmdgdocno AND fmdf001 = fmdg001 AND fmdf002 = fmdg002 ", "  ", 
                  #add-point:browser_fill段sql(fmdg_t1) name="browser_fill.join.fmdg_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.fmdfent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("fmdf_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmdfstus,t0.fmdfld,t0.fmdfdocno,t0.fmdf001,t0.fmdf002 ",
                  " FROM fmdf_t t0",
                  "  ",
                  
                  " WHERE t0.fmdfent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("fmdf_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY fmdfld,fmdfdocno,fmdf001,fmdf002 ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"fmdf_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_fmdfld,g_browser[g_cnt].b_fmdfdocno, 
          g_browser[g_cnt].b_fmdf001,g_browser[g_cnt].b_fmdf002
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_fmdfld) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION afmt190_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_fmdf_m.fmdfld = g_browser[g_current_idx].b_fmdfld   
   LET g_fmdf_m.fmdfdocno = g_browser[g_current_idx].b_fmdfdocno   
   LET g_fmdf_m.fmdf001 = g_browser[g_current_idx].b_fmdf001   
   LET g_fmdf_m.fmdf002 = g_browser[g_current_idx].b_fmdf002   
 
   EXECUTE afmt190_master_referesh USING g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002 INTO g_fmdf_m.fmdfsite, 
       g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt, 
       g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp_desc, 
       g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfcnfid_desc 
 
   
   CALL afmt190_fmdf_t_mask()
   CALL afmt190_show()
      
END FUNCTION
 
{</section>}
 
{<section id="afmt190.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION afmt190_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION afmt190_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_fmdfld = g_fmdf_m.fmdfld 
         AND g_browser[l_i].b_fmdfdocno = g_fmdf_m.fmdfdocno 
         AND g_browser[l_i].b_fmdf001 = g_fmdf_m.fmdf001 
         AND g_browser[l_i].b_fmdf002 = g_fmdf_m.fmdf002 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION afmt190_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   DEFINE l_type        STRING
   DEFINE l_ld_str      STRING
   DEFINE l_site_str    STRING
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_fmdf_m.* TO NULL
   CALL g_fmdg_d.clear()        
   CALL g_fmdg2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON fmdfsite,fmdfld,fmdfcomp,fmdfdocno,fmdfdocdt,fmdf001,fmdf002,fmdf003, 
          fmdfstus,fmdfownid,fmdfowndp,fmdfcrtid,fmdfcrtdp,fmdfcrtdt,fmdfmodid,fmdfmoddt,fmdfcnfid,fmdfcnfdt 
 
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<fmdfcrtdt>>----
         AFTER FIELD fmdfcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<fmdfmoddt>>----
         AFTER FIELD fmdfmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmdfcnfdt>>----
         AFTER FIELD fmdfcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmdfpstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfsite
            #add-point:BEFORE FIELD fmdfsite name="construct.b.fmdfsite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfsite
            
            #add-point:AFTER FIELD fmdfsite name="construct.a.fmdfsite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfsite
            #add-point:ON ACTION controlp INFIELD fmdfsite name="construct.c.fmdfsite"
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            #LET g_qryparam.where = " ooef201 = 'Y' "   #161006-00005#14   mark 
            #CALL q_ooef001()     #161006-00005#14   mark                    
            CALL q_ooef001_46()   #161006-00005#14   add
            DISPLAY g_qryparam.return1 TO fmdfsite  #顯示到畫面上
            NEXT FIELD fmdfsite                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfld
            #add-point:BEFORE FIELD fmdfld name="construct.b.fmdfld"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfld
            
            #add-point:AFTER FIELD fmdfld name="construct.a.fmdfld"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfld
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfld
            #add-point:ON ACTION controlp INFIELD fmdfld name="construct.c.fmdfld"
            CALL s_axrt300_get_site(g_user,l_site_str,'2') RETURNING l_ld_str
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
			  #LET g_qryparam.where = l_ld_str CLIPPED                                         #161028-00032#1 mark
			   LET g_qryparam.where = l_ld_str CLIPPED," AND (glaa008 = 'Y' OR glaa014 = 'Y')" #161028-00032#1 add
            CALL q_authorised_ld()                    #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfld      #顯示到畫面上
            NEXT FIELD fmdfld                         #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfcomp
            #add-point:BEFORE FIELD fmdfcomp name="construct.b.fmdfcomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfcomp
            
            #add-point:AFTER FIELD fmdfcomp name="construct.a.fmdfcomp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfcomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfcomp
            #add-point:ON ACTION controlp INFIELD fmdfcomp name="construct.c.fmdfcomp"
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef003 = 'Y' ",
                                   " AND ooef001 IN ", g_wc_cs_comp   #161006-00005#14   add
            CALL q_ooef001()                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfcomp  #顯示到畫面上
            NEXT FIELD fmdfcomp                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfdocno
            #add-point:BEFORE FIELD fmdfdocno name="construct.b.fmdfdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfdocno
            
            #add-point:AFTER FIELD fmdfdocno name="construct.a.fmdfdocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfdocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfdocno
            #add-point:ON ACTION controlp INFIELD fmdfdocno name="construct.c.fmdfdocno"
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_fmdfdocno()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfdocno  #顯示到畫面上
            NEXT FIELD fmdfdocno                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfdocdt
            #add-point:BEFORE FIELD fmdfdocdt name="construct.b.fmdfdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfdocdt
            
            #add-point:AFTER FIELD fmdfdocdt name="construct.a.fmdfdocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfdocdt
            #add-point:ON ACTION controlp INFIELD fmdfdocdt name="construct.c.fmdfdocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdf001
            #add-point:BEFORE FIELD fmdf001 name="construct.b.fmdf001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdf001
            
            #add-point:AFTER FIELD fmdf001 name="construct.a.fmdf001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdf001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdf001
            #add-point:ON ACTION controlp INFIELD fmdf001 name="construct.c.fmdf001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdf002
            #add-point:BEFORE FIELD fmdf002 name="construct.b.fmdf002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdf002
            
            #add-point:AFTER FIELD fmdf002 name="construct.a.fmdf002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdf002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdf002
            #add-point:ON ACTION controlp INFIELD fmdf002 name="construct.c.fmdf002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdf003
            #add-point:BEFORE FIELD fmdf003 name="construct.b.fmdf003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdf003
            
            #add-point:AFTER FIELD fmdf003 name="construct.a.fmdf003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdf003
            #add-point:ON ACTION controlp INFIELD fmdf003 name="construct.c.fmdf003"
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = " glap008 = 'M19'"
            CALL q_glapdocno_1()                     #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdf003    #顯示到畫面上
            NEXT FIELD fmdf003                       #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfstus
            #add-point:BEFORE FIELD fmdfstus name="construct.b.fmdfstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfstus
            
            #add-point:AFTER FIELD fmdfstus name="construct.a.fmdfstus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfstus
            #add-point:ON ACTION controlp INFIELD fmdfstus name="construct.c.fmdfstus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmdfownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfownid
            #add-point:ON ACTION controlp INFIELD fmdfownid name="construct.c.fmdfownid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfownid  #顯示到畫面上
            NEXT FIELD fmdfownid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfownid
            #add-point:BEFORE FIELD fmdfownid name="construct.b.fmdfownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfownid
            
            #add-point:AFTER FIELD fmdfownid name="construct.a.fmdfownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfowndp
            #add-point:ON ACTION controlp INFIELD fmdfowndp name="construct.c.fmdfowndp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfowndp  #顯示到畫面上
            NEXT FIELD fmdfowndp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfowndp
            #add-point:BEFORE FIELD fmdfowndp name="construct.b.fmdfowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfowndp
            
            #add-point:AFTER FIELD fmdfowndp name="construct.a.fmdfowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfcrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfcrtid
            #add-point:ON ACTION controlp INFIELD fmdfcrtid name="construct.c.fmdfcrtid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfcrtid  #顯示到畫面上
            NEXT FIELD fmdfcrtid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfcrtid
            #add-point:BEFORE FIELD fmdfcrtid name="construct.b.fmdfcrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfcrtid
            
            #add-point:AFTER FIELD fmdfcrtid name="construct.a.fmdfcrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmdfcrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfcrtdp
            #add-point:ON ACTION controlp INFIELD fmdfcrtdp name="construct.c.fmdfcrtdp"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfcrtdp  #顯示到畫面上
            NEXT FIELD fmdfcrtdp                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfcrtdp
            #add-point:BEFORE FIELD fmdfcrtdp name="construct.b.fmdfcrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfcrtdp
            
            #add-point:AFTER FIELD fmdfcrtdp name="construct.a.fmdfcrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfcrtdt
            #add-point:BEFORE FIELD fmdfcrtdt name="construct.b.fmdfcrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmdfmodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfmodid
            #add-point:ON ACTION controlp INFIELD fmdfmodid name="construct.c.fmdfmodid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfmodid  #顯示到畫面上
            NEXT FIELD fmdfmodid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfmodid
            #add-point:BEFORE FIELD fmdfmodid name="construct.b.fmdfmodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfmodid
            
            #add-point:AFTER FIELD fmdfmodid name="construct.a.fmdfmodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfmoddt
            #add-point:BEFORE FIELD fmdfmoddt name="construct.b.fmdfmoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmdfcnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfcnfid
            #add-point:ON ACTION controlp INFIELD fmdfcnfid name="construct.c.fmdfcnfid"
            #應用 a08 樣板自動產生(Version:3)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdfcnfid  #顯示到畫面上
            NEXT FIELD fmdfcnfid                     #返回原欄位
    



            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfcnfid
            #add-point:BEFORE FIELD fmdfcnfid name="construct.b.fmdfcnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfcnfid
            
            #add-point:AFTER FIELD fmdfcnfid name="construct.a.fmdfcnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfcnfdt
            #add-point:BEFORE FIELD fmdfcnfdt name="construct.b.fmdfcnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON fmdgseq,fmdg003,fmdg004,fmdg005,fmdg006,fmdg007,fmdg008,fmdg009,fmdg100, 
          fmdg103,fmdg113,fmdg101,fmdg114,fmdg115,fmdg035,fmdg034,fmdg034_desc,fmdg033,fmdg033_desc, 
          fmdg123,fmdg121,fmdg124,fmdg125,fmdg133,fmdg131,fmdg134,fmdg135,fmdg010,fmdg011,fmdg012,fmdg013, 
          fmdg014,fmdg015,fmdg016,fmdg017,fmdg018,fmdg019,fmdg020,fmdg021,fmdg022,fmdg023,fmdg024,fmdg025, 
          fmdg026,fmdg027,fmdg028,fmdg029,fmdg030,fmdg031,fmdg032
           FROM s_detail1[1].fmdgseq,s_detail1[1].fmdg003,s_detail1[1].fmdg004,s_detail1[1].fmdg005, 
               s_detail1[1].fmdg006,s_detail1[1].fmdg007,s_detail1[1].fmdg008,s_detail1[1].fmdg009,s_detail1[1].fmdg100, 
               s_detail1[1].fmdg103,s_detail1[1].fmdg113,s_detail1[1].fmdg101,s_detail1[1].fmdg114,s_detail1[1].fmdg115, 
               s_detail1[1].fmdg035,s_detail1[1].fmdg034,s_detail1[1].fmdg034_desc,s_detail1[1].fmdg033, 
               s_detail1[1].fmdg033_desc,s_detail1[1].fmdg123,s_detail1[1].fmdg121,s_detail1[1].fmdg124, 
               s_detail1[1].fmdg125,s_detail1[1].fmdg133,s_detail1[1].fmdg131,s_detail1[1].fmdg134,s_detail1[1].fmdg135, 
               s_detail2[1].fmdg010,s_detail2[1].fmdg011,s_detail2[1].fmdg012,s_detail2[1].fmdg013,s_detail2[1].fmdg014, 
               s_detail2[1].fmdg015,s_detail2[1].fmdg016,s_detail2[1].fmdg017,s_detail2[1].fmdg018,s_detail2[1].fmdg019, 
               s_detail2[1].fmdg020,s_detail2[1].fmdg021,s_detail2[1].fmdg022,s_detail2[1].fmdg023,s_detail2[1].fmdg024, 
               s_detail2[1].fmdg025,s_detail2[1].fmdg026,s_detail2[1].fmdg027,s_detail2[1].fmdg028,s_detail2[1].fmdg029, 
               s_detail2[1].fmdg030,s_detail2[1].fmdg031,s_detail2[1].fmdg032
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdgseq
            #add-point:BEFORE FIELD fmdgseq name="construct.b.page1.fmdgseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdgseq
            
            #add-point:AFTER FIELD fmdgseq name="construct.a.page1.fmdgseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdgseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdgseq
            #add-point:ON ACTION controlp INFIELD fmdgseq name="construct.c.page1.fmdgseq"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg003
            #add-point:BEFORE FIELD fmdg003 name="construct.b.page1.fmdg003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg003
            
            #add-point:AFTER FIELD fmdg003 name="construct.a.page1.fmdg003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg003
            #add-point:ON ACTION controlp INFIELD fmdg003 name="construct.c.page1.fmdg003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg004
            #add-point:BEFORE FIELD fmdg004 name="construct.b.page1.fmdg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg004
            
            #add-point:AFTER FIELD fmdg004 name="construct.a.page1.fmdg004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg004
            #add-point:ON ACTION controlp INFIELD fmdg004 name="construct.c.page1.fmdg004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg005
            #add-point:BEFORE FIELD fmdg005 name="construct.b.page1.fmdg005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg005
            
            #add-point:AFTER FIELD fmdg005 name="construct.a.page1.fmdg005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg005
            #add-point:ON ACTION controlp INFIELD fmdg005 name="construct.c.page1.fmdg005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg006
            #add-point:BEFORE FIELD fmdg006 name="construct.b.page1.fmdg006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg006
            
            #add-point:AFTER FIELD fmdg006 name="construct.a.page1.fmdg006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg006
            #add-point:ON ACTION controlp INFIELD fmdg006 name="construct.c.page1.fmdg006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg007
            #add-point:BEFORE FIELD fmdg007 name="construct.b.page1.fmdg007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg007
            
            #add-point:AFTER FIELD fmdg007 name="construct.a.page1.fmdg007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg007
            #add-point:ON ACTION controlp INFIELD fmdg007 name="construct.c.page1.fmdg007"
            #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
            CALL q_fmctdocno()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdg007    #顯示到畫面上
            NEXT FIELD fmdg007                       #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg008
            #add-point:BEFORE FIELD fmdg008 name="construct.b.page1.fmdg008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg008
            
            #add-point:AFTER FIELD fmdg008 name="construct.a.page1.fmdg008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg008
            #add-point:ON ACTION controlp INFIELD fmdg008 name="construct.c.page1.fmdg008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg009
            #add-point:BEFORE FIELD fmdg009 name="construct.b.page1.fmdg009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg009
            
            #add-point:AFTER FIELD fmdg009 name="construct.a.page1.fmdg009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg009
            #add-point:ON ACTION controlp INFIELD fmdg009 name="construct.c.page1.fmdg009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg100
            #add-point:BEFORE FIELD fmdg100 name="construct.b.page1.fmdg100"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg100
            
            #add-point:AFTER FIELD fmdg100 name="construct.a.page1.fmdg100"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg100
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg100
            #add-point:ON ACTION controlp INFIELD fmdg100 name="construct.c.page1.fmdg100"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg103
            #add-point:BEFORE FIELD fmdg103 name="construct.b.page1.fmdg103"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg103
            
            #add-point:AFTER FIELD fmdg103 name="construct.a.page1.fmdg103"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg103
            #add-point:ON ACTION controlp INFIELD fmdg103 name="construct.c.page1.fmdg103"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg113
            #add-point:BEFORE FIELD fmdg113 name="construct.b.page1.fmdg113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg113
            
            #add-point:AFTER FIELD fmdg113 name="construct.a.page1.fmdg113"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg113
            #add-point:ON ACTION controlp INFIELD fmdg113 name="construct.c.page1.fmdg113"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg101
            #add-point:BEFORE FIELD fmdg101 name="construct.b.page1.fmdg101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg101
            
            #add-point:AFTER FIELD fmdg101 name="construct.a.page1.fmdg101"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg101
            #add-point:ON ACTION controlp INFIELD fmdg101 name="construct.c.page1.fmdg101"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg114
            #add-point:BEFORE FIELD fmdg114 name="construct.b.page1.fmdg114"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg114
            
            #add-point:AFTER FIELD fmdg114 name="construct.a.page1.fmdg114"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg114
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg114
            #add-point:ON ACTION controlp INFIELD fmdg114 name="construct.c.page1.fmdg114"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg115
            #add-point:BEFORE FIELD fmdg115 name="construct.b.page1.fmdg115"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg115
            
            #add-point:AFTER FIELD fmdg115 name="construct.a.page1.fmdg115"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg115
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg115
            #add-point:ON ACTION controlp INFIELD fmdg115 name="construct.c.page1.fmdg115"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg035
            #add-point:BEFORE FIELD fmdg035 name="construct.b.page1.fmdg035"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg035
            
            #add-point:AFTER FIELD fmdg035 name="construct.a.page1.fmdg035"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg035
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg035
            #add-point:ON ACTION controlp INFIELD fmdg035 name="construct.c.page1.fmdg035"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg034
            #add-point:BEFORE FIELD fmdg034 name="construct.b.page1.fmdg034"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg034
            
            #add-point:AFTER FIELD fmdg034 name="construct.a.page1.fmdg034"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg034
            #add-point:ON ACTION controlp INFIELD fmdg034 name="construct.c.page1.fmdg034"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg034_desc
            #add-point:BEFORE FIELD fmdg034_desc name="construct.b.page1.fmdg034_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg034_desc
            
            #add-point:AFTER FIELD fmdg034_desc name="construct.a.page1.fmdg034_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg034_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg034_desc
            #add-point:ON ACTION controlp INFIELD fmdg034_desc name="construct.c.page1.fmdg034_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg033
            #add-point:BEFORE FIELD fmdg033 name="construct.b.page1.fmdg033"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg033
            
            #add-point:AFTER FIELD fmdg033 name="construct.a.page1.fmdg033"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg033
            #add-point:ON ACTION controlp INFIELD fmdg033 name="construct.c.page1.fmdg033"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg033_desc
            #add-point:BEFORE FIELD fmdg033_desc name="construct.b.page1.fmdg033_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg033_desc
            
            #add-point:AFTER FIELD fmdg033_desc name="construct.a.page1.fmdg033_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg033_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg033_desc
            #add-point:ON ACTION controlp INFIELD fmdg033_desc name="construct.c.page1.fmdg033_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg123
            #add-point:BEFORE FIELD fmdg123 name="construct.b.page1.fmdg123"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg123
            
            #add-point:AFTER FIELD fmdg123 name="construct.a.page1.fmdg123"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg123
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg123
            #add-point:ON ACTION controlp INFIELD fmdg123 name="construct.c.page1.fmdg123"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg121
            #add-point:BEFORE FIELD fmdg121 name="construct.b.page1.fmdg121"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg121
            
            #add-point:AFTER FIELD fmdg121 name="construct.a.page1.fmdg121"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg121
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg121
            #add-point:ON ACTION controlp INFIELD fmdg121 name="construct.c.page1.fmdg121"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg124
            #add-point:BEFORE FIELD fmdg124 name="construct.b.page1.fmdg124"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg124
            
            #add-point:AFTER FIELD fmdg124 name="construct.a.page1.fmdg124"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg124
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg124
            #add-point:ON ACTION controlp INFIELD fmdg124 name="construct.c.page1.fmdg124"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg125
            #add-point:BEFORE FIELD fmdg125 name="construct.b.page1.fmdg125"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg125
            
            #add-point:AFTER FIELD fmdg125 name="construct.a.page1.fmdg125"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg125
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg125
            #add-point:ON ACTION controlp INFIELD fmdg125 name="construct.c.page1.fmdg125"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg133
            #add-point:BEFORE FIELD fmdg133 name="construct.b.page1.fmdg133"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg133
            
            #add-point:AFTER FIELD fmdg133 name="construct.a.page1.fmdg133"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg133
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg133
            #add-point:ON ACTION controlp INFIELD fmdg133 name="construct.c.page1.fmdg133"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg131
            #add-point:BEFORE FIELD fmdg131 name="construct.b.page1.fmdg131"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg131
            
            #add-point:AFTER FIELD fmdg131 name="construct.a.page1.fmdg131"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg131
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg131
            #add-point:ON ACTION controlp INFIELD fmdg131 name="construct.c.page1.fmdg131"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg134
            #add-point:BEFORE FIELD fmdg134 name="construct.b.page1.fmdg134"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg134
            
            #add-point:AFTER FIELD fmdg134 name="construct.a.page1.fmdg134"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg134
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg134
            #add-point:ON ACTION controlp INFIELD fmdg134 name="construct.c.page1.fmdg134"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg135
            #add-point:BEFORE FIELD fmdg135 name="construct.b.page1.fmdg135"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg135
            
            #add-point:AFTER FIELD fmdg135 name="construct.a.page1.fmdg135"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmdg135
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg135
            #add-point:ON ACTION controlp INFIELD fmdg135 name="construct.c.page1.fmdg135"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg010
            #add-point:BEFORE FIELD fmdg010 name="construct.b.page2.fmdg010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg010
            
            #add-point:AFTER FIELD fmdg010 name="construct.a.page2.fmdg010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg010
            #add-point:ON ACTION controlp INFIELD fmdg010 name="construct.c.page2.fmdg010"
            #帳款對象
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_25()        #160913-00017#2  ADD 
           # CALL q_pmaa001()      #160913-00017#2 mark          #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmdg010
            NEXT FIELD fmdg010
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg011
            #add-point:BEFORE FIELD fmdg011 name="construct.b.page2.fmdg011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg011
            
            #add-point:AFTER FIELD fmdg011 name="construct.a.page2.fmdg011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg011
            #add-point:ON ACTION controlp INFIELD fmdg011 name="construct.c.page2.fmdg011"
            #收款對象
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmac002_1()
            DISPLAY g_qryparam.return1 TO fmdg011
            NEXT FIELD fmdg011
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg012
            #add-point:BEFORE FIELD fmdg012 name="construct.b.page2.fmdg012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg012
            
            #add-point:AFTER FIELD fmdg012 name="construct.a.page2.fmdg012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg012
            #add-point:ON ACTION controlp INFIELD fmdg012 name="construct.c.page2.fmdg012"
            #業務部門
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_today
            CALL q_ooeg001_4()
            DISPLAY g_qryparam.return1 TO fmdg012
            NEXT FIELD fmdg012
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg013
            #add-point:BEFORE FIELD fmdg013 name="construct.b.page2.fmdg013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg013
            
            #add-point:AFTER FIELD fmdg013 name="construct.a.page2.fmdg013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg013
            #add-point:ON ACTION controlp INFIELD fmdg013 name="construct.c.page2.fmdg013"
            #責任中心
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_today
            CALL q_ooeg001_4()
            DISPLAY g_qryparam.return1 TO fmdg013
            NEXT FIELD fmdg013
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg014
            #add-point:BEFORE FIELD fmdg014 name="construct.b.page2.fmdg014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg014
            
            #add-point:AFTER FIELD fmdg014 name="construct.a.page2.fmdg014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg014
            #add-point:ON ACTION controlp INFIELD fmdg014 name="construct.c.page2.fmdg014"
            #區域
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_287()
            DISPLAY g_qryparam.return1 TO fmdg014
            NEXT FIELD fmdg014
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg015
            #add-point:BEFORE FIELD fmdg015 name="construct.b.page2.fmdg015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg015
            
            #add-point:AFTER FIELD fmdg015 name="construct.a.page2.fmdg015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg015
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg015
            #add-point:ON ACTION controlp INFIELD fmdg015 name="construct.c.page2.fmdg015"
            #客群
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002_281()
            DISPLAY g_qryparam.return1 TO fmdg014
            NEXT FIELD fmdg014
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg016
            #add-point:BEFORE FIELD fmdg016 name="construct.b.page2.fmdg016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg016
            
            #add-point:AFTER FIELD fmdg016 name="construct.a.page2.fmdg016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg016
            #add-point:ON ACTION controlp INFIELD fmdg016 name="construct.c.page2.fmdg016"
            #產品類別
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001()
            DISPLAY g_qryparam.return1 TO fmdg016
            NEXT FIELD fmdg016
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg017
            #add-point:BEFORE FIELD fmdg017 name="construct.b.page2.fmdg017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg017
            
            #add-point:AFTER FIELD fmdg017 name="construct.a.page2.fmdg017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg017
            #add-point:ON ACTION controlp INFIELD fmdg017 name="construct.c.page2.fmdg017"
            #人員
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_8()
            DISPLAY g_qryparam.return1 TO fmdg017
            NEXT FIELD fmdg017
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg018
            #add-point:BEFORE FIELD fmdg018 name="construct.b.page2.fmdg018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg018
            
            #add-point:AFTER FIELD fmdg018 name="construct.a.page2.fmdg018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg018
            #add-point:ON ACTION controlp INFIELD fmdg018 name="construct.c.page2.fmdg018"
            #專案代號
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pjba001()
            DISPLAY g_qryparam.return1 TO fmdg018
            NEXT FIELD fmdg018
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg019
            #add-point:BEFORE FIELD fmdg019 name="construct.b.page2.fmdg019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg019
            
            #add-point:AFTER FIELD fmdg019 name="construct.a.page2.fmdg019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg019
            #add-point:ON ACTION controlp INFIELD fmdg019 name="construct.c.page2.fmdg019"
            #WBS
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "pjbb012='1'"
            CALL q_pjbb002()
            DISPLAY g_qryparam.return1 TO fmdg019
            NEXT FIELD fmdg019
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg020
            #add-point:BEFORE FIELD fmdg020 name="construct.b.page2.fmdg020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg020
            
            #add-point:AFTER FIELD fmdg020 name="construct.a.page2.fmdg020"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg020
            #add-point:ON ACTION controlp INFIELD fmdg020 name="construct.c.page2.fmdg020"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg021
            #add-point:BEFORE FIELD fmdg021 name="construct.b.page2.fmdg021"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg021
            
            #add-point:AFTER FIELD fmdg021 name="construct.a.page2.fmdg021"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg021
            #add-point:ON ACTION controlp INFIELD fmdg021 name="construct.c.page2.fmdg021"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg022
            #add-point:BEFORE FIELD fmdg022 name="construct.b.page2.fmdg022"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg022
            
            #add-point:AFTER FIELD fmdg022 name="construct.a.page2.fmdg022"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg022
            #add-point:ON ACTION controlp INFIELD fmdg022 name="construct.c.page2.fmdg022"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg023
            #add-point:BEFORE FIELD fmdg023 name="construct.b.page2.fmdg023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg023
            
            #add-point:AFTER FIELD fmdg023 name="construct.a.page2.fmdg023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg023
            #add-point:ON ACTION controlp INFIELD fmdg023 name="construct.c.page2.fmdg023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg024
            #add-point:BEFORE FIELD fmdg024 name="construct.b.page2.fmdg024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg024
            
            #add-point:AFTER FIELD fmdg024 name="construct.a.page2.fmdg024"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg024
            #add-point:ON ACTION controlp INFIELD fmdg024 name="construct.c.page2.fmdg024"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg025
            #add-point:BEFORE FIELD fmdg025 name="construct.b.page2.fmdg025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg025
            
            #add-point:AFTER FIELD fmdg025 name="construct.a.page2.fmdg025"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg025
            #add-point:ON ACTION controlp INFIELD fmdg025 name="construct.c.page2.fmdg025"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg026
            #add-point:BEFORE FIELD fmdg026 name="construct.b.page2.fmdg026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg026
            
            #add-point:AFTER FIELD fmdg026 name="construct.a.page2.fmdg026"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg026
            #add-point:ON ACTION controlp INFIELD fmdg026 name="construct.c.page2.fmdg026"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg027
            #add-point:BEFORE FIELD fmdg027 name="construct.b.page2.fmdg027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg027
            
            #add-point:AFTER FIELD fmdg027 name="construct.a.page2.fmdg027"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg027
            #add-point:ON ACTION controlp INFIELD fmdg027 name="construct.c.page2.fmdg027"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg028
            #add-point:BEFORE FIELD fmdg028 name="construct.b.page2.fmdg028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg028
            
            #add-point:AFTER FIELD fmdg028 name="construct.a.page2.fmdg028"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg028
            #add-point:ON ACTION controlp INFIELD fmdg028 name="construct.c.page2.fmdg028"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg029
            #add-point:BEFORE FIELD fmdg029 name="construct.b.page2.fmdg029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg029
            
            #add-point:AFTER FIELD fmdg029 name="construct.a.page2.fmdg029"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg029
            #add-point:ON ACTION controlp INFIELD fmdg029 name="construct.c.page2.fmdg029"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg030
            #add-point:BEFORE FIELD fmdg030 name="construct.b.page2.fmdg030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg030
            
            #add-point:AFTER FIELD fmdg030 name="construct.a.page2.fmdg030"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg030
            #add-point:ON ACTION controlp INFIELD fmdg030 name="construct.c.page2.fmdg030"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg031
            #add-point:BEFORE FIELD fmdg031 name="construct.b.page2.fmdg031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg031
            
            #add-point:AFTER FIELD fmdg031 name="construct.a.page2.fmdg031"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg031
            #add-point:ON ACTION controlp INFIELD fmdg031 name="construct.c.page2.fmdg031"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg032
            #add-point:BEFORE FIELD fmdg032 name="construct.b.page2.fmdg032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg032
            
            #add-point:AFTER FIELD fmdg032 name="construct.a.page2.fmdg032"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmdg032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg032
            #add-point:ON ACTION controlp INFIELD fmdg032 name="construct.c.page2.fmdg032"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "fmdf_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "fmdg_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION afmt190_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_fmdg_d.clear()
   CALL g_fmdg2_d.clear()
 
   
   #add-point:query段other name="query.other"
   CALL cl_set_comp_visible("fmdg121,fmdg123,fmdg124,fmdg125",TRUE)
   CALL cl_set_comp_visible("fmdg131,fmdg133,fmdg134,fmdg135",TRUE)
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL afmt190_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL afmt190_browser_fill("")
      CALL afmt190_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL afmt190_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL afmt190_fetch("F") 
      #顯示單身筆數
      CALL afmt190_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION afmt190_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_fmdf_m.fmdfld = g_browser[g_current_idx].b_fmdfld
   LET g_fmdf_m.fmdfdocno = g_browser[g_current_idx].b_fmdfdocno
   LET g_fmdf_m.fmdf001 = g_browser[g_current_idx].b_fmdf001
   LET g_fmdf_m.fmdf002 = g_browser[g_current_idx].b_fmdf002
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE afmt190_master_referesh USING g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002 INTO g_fmdf_m.fmdfsite, 
       g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt, 
       g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp_desc, 
       g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfcnfid_desc 
 
   
   #遮罩相關處理
   LET g_fmdf_m_mask_o.* =  g_fmdf_m.*
   CALL afmt190_fmdf_t_mask()
   LET g_fmdf_m_mask_n.* =  g_fmdf_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt190_set_act_visible()   
   CALL afmt190_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_fmdf_m_t.* = g_fmdf_m.*
   LET g_fmdf_m_o.* = g_fmdf_m.*
   
   LET g_data_owner = g_fmdf_m.fmdfownid      
   LET g_data_dept  = g_fmdf_m.fmdfowndp
   
   #重新顯示   
   CALL afmt190_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.insert" >}
#+ 資料新增
PRIVATE FUNCTION afmt190_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_fmdg_d.clear()   
   CALL g_fmdg2_d.clear()  
 
 
   INITIALIZE g_fmdf_m.* TO NULL             #DEFAULT 設定
   
   LET g_fmdfld_t = NULL
   LET g_fmdfdocno_t = NULL
   LET g_fmdf001_t = NULL
   LET g_fmdf002_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmdf_m.fmdfownid = g_user
      LET g_fmdf_m.fmdfowndp = g_dept
      LET g_fmdf_m.fmdfcrtid = g_user
      LET g_fmdf_m.fmdfcrtdp = g_dept 
      LET g_fmdf_m.fmdfcrtdt = cl_get_current()
      LET g_fmdf_m.fmdfmodid = g_user
      LET g_fmdf_m.fmdfmoddt = cl_get_current()
      LET g_fmdf_m.fmdfstus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_fmdf_m_t.* = g_fmdf_m.*
      LET g_fmdf_m_o.* = g_fmdf_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmdf_m.fmdfstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
 
    
      CALL afmt190_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_fmdf_m.* TO NULL
         INITIALIZE g_fmdg_d TO NULL
         INITIALIZE g_fmdg2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL afmt190_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_fmdg_d.clear()
      #CALL g_fmdg2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt190_set_act_visible()   
   CALL afmt190_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmdfld_t = g_fmdf_m.fmdfld
   LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
   LET g_fmdf001_t = g_fmdf_m.fmdf001
   LET g_fmdf002_t = g_fmdf_m.fmdf002
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmdfent = " ||g_enterprise|| " AND",
                      " fmdfld = '", g_fmdf_m.fmdfld, "' "
                      ," AND fmdfdocno = '", g_fmdf_m.fmdfdocno, "' "
                      ," AND fmdf001 = '", g_fmdf_m.fmdf001, "' "
                      ," AND fmdf002 = '", g_fmdf_m.fmdf002, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt190_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE afmt190_cl
   
   CALL afmt190_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE afmt190_master_referesh USING g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002 INTO g_fmdf_m.fmdfsite, 
       g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt, 
       g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp_desc, 
       g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfcnfid_desc 
 
   
   
   #遮罩相關處理
   LET g_fmdf_m_mask_o.* =  g_fmdf_m.*
   CALL afmt190_fmdf_t_mask()
   LET g_fmdf_m_mask_n.* =  g_fmdf_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmdf_m.fmdfsite,g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp, 
       g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp, 
       g_fmdf_m.fmdfowndp_desc,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp,g_fmdf_m.fmdfcrtdp_desc, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid, 
       g_fmdf_m.fmdfcnfid_desc,g_fmdf_m.fmdfcnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_fmdf_m.fmdfownid      
   LET g_data_dept  = g_fmdf_m.fmdfowndp
   
   #功能已完成,通報訊息中心
   CALL afmt190_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.modify" >}
#+ 資料修改
PRIVATE FUNCTION afmt190_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_fmdf_m_t.* = g_fmdf_m.*
   LET g_fmdf_m_o.* = g_fmdf_m.*
   
   IF g_fmdf_m.fmdfld IS NULL
   OR g_fmdf_m.fmdfdocno IS NULL
   OR g_fmdf_m.fmdf001 IS NULL
   OR g_fmdf_m.fmdf002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_fmdfld_t = g_fmdf_m.fmdfld
   LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
   LET g_fmdf001_t = g_fmdf_m.fmdf001
   LET g_fmdf002_t = g_fmdf_m.fmdf002
 
   CALL s_transaction_begin()
   
   OPEN afmt190_cl USING g_enterprise,g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt190_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE afmt190_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt190_master_referesh USING g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002 INTO g_fmdf_m.fmdfsite, 
       g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt, 
       g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp_desc, 
       g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfcnfid_desc 
 
   
   #檢查是否允許此動作
   IF NOT afmt190_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmdf_m_mask_o.* =  g_fmdf_m.*
   CALL afmt190_fmdf_t_mask()
   LET g_fmdf_m_mask_n.* =  g_fmdf_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL afmt190_show()
   #add-point:modify段show之後 name="modify.after_show"
   
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_fmdfld_t = g_fmdf_m.fmdfld
      LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
      LET g_fmdf001_t = g_fmdf_m.fmdf001
      LET g_fmdf002_t = g_fmdf_m.fmdf002
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_fmdf_m.fmdfmodid = g_user 
LET g_fmdf_m.fmdfmoddt = cl_get_current()
LET g_fmdf_m.fmdfmodid_desc = cl_get_username(g_fmdf_m.fmdfmodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL afmt190_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE fmdf_t SET (fmdfmodid,fmdfmoddt) = (g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt)
          WHERE fmdfent = g_enterprise AND fmdfld = g_fmdfld_t
            AND fmdfdocno = g_fmdfdocno_t
            AND fmdf001 = g_fmdf001_t
            AND fmdf002 = g_fmdf002_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_fmdf_m.* = g_fmdf_m_t.*
            CALL afmt190_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_fmdf_m.fmdfld != g_fmdf_m_t.fmdfld
      OR g_fmdf_m.fmdfdocno != g_fmdf_m_t.fmdfdocno
      OR g_fmdf_m.fmdf001 != g_fmdf_m_t.fmdf001
      OR g_fmdf_m.fmdf002 != g_fmdf_m_t.fmdf002
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE fmdg_t SET fmdgld = g_fmdf_m.fmdfld
                                       ,fmdgdocno = g_fmdf_m.fmdfdocno
                                       ,fmdg001 = g_fmdf_m.fmdf001
                                       ,fmdg002 = g_fmdf_m.fmdf002
 
          WHERE fmdgent = g_enterprise AND fmdgld = g_fmdf_m_t.fmdfld
            AND fmdgdocno = g_fmdf_m_t.fmdfdocno
            AND fmdg001 = g_fmdf_m_t.fmdf001
            AND fmdg002 = g_fmdf_m_t.fmdf002
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "fmdg_t" 
            #   LET g_errparam.code   = "std-00009" 
            #   LET g_errparam.popup  = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt190_set_act_visible()   
   CALL afmt190_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " fmdfent = " ||g_enterprise|| " AND",
                      " fmdfld = '", g_fmdf_m.fmdfld, "' "
                      ," AND fmdfdocno = '", g_fmdf_m.fmdfdocno, "' "
                      ," AND fmdf001 = '", g_fmdf_m.fmdf001, "' "
                      ," AND fmdf002 = '", g_fmdf_m.fmdf002, "' "
 
   #填到對應位置
   CALL afmt190_browser_fill("")
 
   CLOSE afmt190_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt190_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="afmt190.input" >}
#+ 資料輸入
PRIVATE FUNCTION afmt190_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_ooba002             LIKE ooba_t.ooba002
   DEFINE  l_dfin0030            LIKE type_t.chr1
   DEFINE  l_glaa121             LIKE glaa_t.glaa121
   DEFINE  l_success             LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmdf_m.fmdfsite,g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp, 
       g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp, 
       g_fmdf_m.fmdfowndp_desc,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp,g_fmdf_m.fmdfcrtdp_desc, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid, 
       g_fmdf_m.fmdfcnfid_desc,g_fmdf_m.fmdfcnfdt
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT fmdgseq,fmdg003,fmdg004,fmdg005,fmdg006,fmdg007,fmdg008,fmdg009,fmdg100, 
       fmdg103,fmdg113,fmdg101,fmdg114,fmdg115,fmdg035,fmdg034,fmdg033,fmdg123,fmdg121,fmdg124,fmdg125, 
       fmdg133,fmdg131,fmdg134,fmdg135,fmdgseq,fmdg010,fmdg011,fmdg012,fmdg013,fmdg014,fmdg015,fmdg016, 
       fmdg017,fmdg018,fmdg019,fmdg020,fmdg021,fmdg022,fmdg023,fmdg024,fmdg025,fmdg026,fmdg027,fmdg028, 
       fmdg029,fmdg030,fmdg031,fmdg032 FROM fmdg_t WHERE fmdgent=? AND fmdgld=? AND fmdgdocno=? AND  
       fmdg001=? AND fmdg002=? AND fmdgseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt190_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL afmt190_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL afmt190_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_fmdf_m.fmdfsite,g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt, 
       g_fmdf_m.fmdf001,g_fmdf_m.fmdf002,g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="afmt190.input.head" >}
      #單頭段
      INPUT BY NAME g_fmdf_m.fmdfsite,g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt, 
          g_fmdf_m.fmdf001,g_fmdf_m.fmdf002,g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN afmt190_cl USING g_enterprise,g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt190_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afmt190_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL afmt190_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            
            #end add-point
            CALL afmt190_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfsite
            
            #add-point:AFTER FIELD fmdfsite name="input.a.fmdfsite"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdf_m.fmdfsite
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdf_m.fmdfsite_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdf_m.fmdfsite_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfsite
            #add-point:BEFORE FIELD fmdfsite name="input.b.fmdfsite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdfsite
            #add-point:ON CHANGE fmdfsite name="input.g.fmdfsite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfld
            
            #add-point:AFTER FIELD fmdfld name="input.a.fmdfld"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdf_m.fmdfld
            CALL ap_ref_array2(g_ref_fields,"SELECT glaal002 FROM glaal_t WHERE glaalent='"||g_enterprise||"' AND glaalld=? AND glaal001='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdf_m.fmdfld_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdf_m.fmdfld_desc

            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_fmdf_m.fmdfld) AND NOT cl_null(g_fmdf_m.fmdfdocno) AND NOT cl_null(g_fmdf_m.fmdf001) AND NOT cl_null(g_fmdf_m.fmdf002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_fmdf_m.fmdfld != g_fmdfld_t  OR g_fmdf_m.fmdfdocno != g_fmdfdocno_t  OR g_fmdf_m.fmdf001 != g_fmdf001_t  OR g_fmdf_m.fmdf002 != g_fmdf002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmdf_t WHERE "||"fmdfent = '" ||g_enterprise|| "' AND "||"fmdfld = '"||g_fmdf_m.fmdfld ||"' AND "|| "fmdfdocno = '"||g_fmdf_m.fmdfdocno ||"' AND "|| "fmdf001 = '"||g_fmdf_m.fmdf001 ||"' AND "|| "fmdf002 = '"||g_fmdf_m.fmdf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfld
            #add-point:BEFORE FIELD fmdfld name="input.b.fmdfld"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdfld
            #add-point:ON CHANGE fmdfld name="input.g.fmdfld"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfcomp
            
            #add-point:AFTER FIELD fmdfcomp name="input.a.fmdfcomp"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdf_m.fmdfcomp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdf_m.fmdfcomp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdf_m.fmdfcomp_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfcomp
            #add-point:BEFORE FIELD fmdfcomp name="input.b.fmdfcomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdfcomp
            #add-point:ON CHANGE fmdfcomp name="input.g.fmdfcomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfdocno
            #add-point:BEFORE FIELD fmdfdocno name="input.b.fmdfdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfdocno
            
            #add-point:AFTER FIELD fmdfdocno name="input.a.fmdfdocno"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_fmdf_m.fmdfld) AND NOT cl_null(g_fmdf_m.fmdfdocno) AND NOT cl_null(g_fmdf_m.fmdf001) AND NOT cl_null(g_fmdf_m.fmdf002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_fmdf_m.fmdfld != g_fmdfld_t  OR g_fmdf_m.fmdfdocno != g_fmdfdocno_t  OR g_fmdf_m.fmdf001 != g_fmdf001_t  OR g_fmdf_m.fmdf002 != g_fmdf002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmdf_t WHERE "||"fmdfent = '" ||g_enterprise|| "' AND "||"fmdfld = '"||g_fmdf_m.fmdfld ||"' AND "|| "fmdfdocno = '"||g_fmdf_m.fmdfdocno ||"' AND "|| "fmdf001 = '"||g_fmdf_m.fmdf001 ||"' AND "|| "fmdf002 = '"||g_fmdf_m.fmdf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdfdocno
            #add-point:ON CHANGE fmdfdocno name="input.g.fmdfdocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfdocdt
            #add-point:BEFORE FIELD fmdfdocdt name="input.b.fmdfdocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfdocdt
            
            #add-point:AFTER FIELD fmdfdocdt name="input.a.fmdfdocdt"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdfdocdt
            #add-point:ON CHANGE fmdfdocdt name="input.g.fmdfdocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdf001
            #add-point:BEFORE FIELD fmdf001 name="input.b.fmdf001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdf001
            
            #add-point:AFTER FIELD fmdf001 name="input.a.fmdf001"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_fmdf_m.fmdfld) AND NOT cl_null(g_fmdf_m.fmdfdocno) AND NOT cl_null(g_fmdf_m.fmdf001) AND NOT cl_null(g_fmdf_m.fmdf002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_fmdf_m.fmdfld != g_fmdfld_t  OR g_fmdf_m.fmdfdocno != g_fmdfdocno_t  OR g_fmdf_m.fmdf001 != g_fmdf001_t  OR g_fmdf_m.fmdf002 != g_fmdf002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmdf_t WHERE "||"fmdfent = '" ||g_enterprise|| "' AND "||"fmdfld = '"||g_fmdf_m.fmdfld ||"' AND "|| "fmdfdocno = '"||g_fmdf_m.fmdfdocno ||"' AND "|| "fmdf001 = '"||g_fmdf_m.fmdf001 ||"' AND "|| "fmdf002 = '"||g_fmdf_m.fmdf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdf001
            #add-point:ON CHANGE fmdf001 name="input.g.fmdf001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdf002
            #add-point:BEFORE FIELD fmdf002 name="input.b.fmdf002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdf002
            
            #add-point:AFTER FIELD fmdf002 name="input.a.fmdf002"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  NOT cl_null(g_fmdf_m.fmdfld) AND NOT cl_null(g_fmdf_m.fmdfdocno) AND NOT cl_null(g_fmdf_m.fmdf001) AND NOT cl_null(g_fmdf_m.fmdf002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_fmdf_m.fmdfld != g_fmdfld_t  OR g_fmdf_m.fmdfdocno != g_fmdfdocno_t  OR g_fmdf_m.fmdf001 != g_fmdf001_t  OR g_fmdf_m.fmdf002 != g_fmdf002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmdf_t WHERE "||"fmdfent = '" ||g_enterprise|| "' AND "||"fmdfld = '"||g_fmdf_m.fmdfld ||"' AND "|| "fmdfdocno = '"||g_fmdf_m.fmdfdocno ||"' AND "|| "fmdf001 = '"||g_fmdf_m.fmdf001 ||"' AND "|| "fmdf002 = '"||g_fmdf_m.fmdf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF




            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdf002
            #add-point:ON CHANGE fmdf002 name="input.g.fmdf002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdf003
            #add-point:BEFORE FIELD fmdf003 name="input.b.fmdf003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdf003
            
            #add-point:AFTER FIELD fmdf003 name="input.a.fmdf003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdf003
            #add-point:ON CHANGE fmdf003 name="input.g.fmdf003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdfstus
            #add-point:BEFORE FIELD fmdfstus name="input.b.fmdfstus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdfstus
            
            #add-point:AFTER FIELD fmdfstus name="input.a.fmdfstus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdfstus
            #add-point:ON CHANGE fmdfstus name="input.g.fmdfstus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.fmdfsite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfsite
            #add-point:ON ACTION controlp INFIELD fmdfsite name="input.c.fmdfsite"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdfld
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfld
            #add-point:ON ACTION controlp INFIELD fmdfld name="input.c.fmdfld"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdfcomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfcomp
            #add-point:ON ACTION controlp INFIELD fmdfcomp name="input.c.fmdfcomp"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdfdocno
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfdocno
            #add-point:ON ACTION controlp INFIELD fmdfdocno name="input.c.fmdfdocno"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdfdocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfdocdt
            #add-point:ON ACTION controlp INFIELD fmdfdocdt name="input.c.fmdfdocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdf001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdf001
            #add-point:ON ACTION controlp INFIELD fmdf001 name="input.c.fmdf001"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdf002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdf002
            #add-point:ON ACTION controlp INFIELD fmdf002 name="input.c.fmdf002"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdf003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdf003
            #add-point:ON ACTION controlp INFIELD fmdf003 name="input.c.fmdf003"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmdfstus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdfstus
            #add-point:ON ACTION controlp INFIELD fmdfstus name="input.c.fmdfstus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #end add-point
               
               INSERT INTO fmdf_t (fmdfent,fmdfsite,fmdfld,fmdfcomp,fmdfdocno,fmdfdocdt,fmdf001,fmdf002, 
                   fmdf003,fmdfstus,fmdfownid,fmdfowndp,fmdfcrtid,fmdfcrtdp,fmdfcrtdt,fmdfmodid,fmdfmoddt, 
                   fmdfcnfid,fmdfcnfdt)
               VALUES (g_enterprise,g_fmdf_m.fmdfsite,g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno, 
                   g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002,g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus, 
                   g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp,g_fmdf_m.fmdfcrtdt, 
                   g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_fmdf_m:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL afmt190_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL afmt190_b_fill()
                  CALL afmt190_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL afmt190_fmdf_t_mask_restore('restore_mask_o')
               
               UPDATE fmdf_t SET (fmdfsite,fmdfld,fmdfcomp,fmdfdocno,fmdfdocdt,fmdf001,fmdf002,fmdf003, 
                   fmdfstus,fmdfownid,fmdfowndp,fmdfcrtid,fmdfcrtdp,fmdfcrtdt,fmdfmodid,fmdfmoddt,fmdfcnfid, 
                   fmdfcnfdt) = (g_fmdf_m.fmdfsite,g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno, 
                   g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002,g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus, 
                   g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp,g_fmdf_m.fmdfcrtdt, 
                   g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt)
                WHERE fmdfent = g_enterprise AND fmdfld = g_fmdfld_t
                  AND fmdfdocno = g_fmdfdocno_t
                  AND fmdf001 = g_fmdf001_t
                  AND fmdf002 = g_fmdf002_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "fmdf_t:",SQLERRMESSAGE 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL afmt190_fmdf_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_fmdf_m_t)
               LET g_log2 = util.JSON.stringify(g_fmdf_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_fmdfld_t = g_fmdf_m.fmdfld
            LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
            LET g_fmdf001_t = g_fmdf_m.fmdf001
            LET g_fmdf002_t = g_fmdf_m.fmdf002
 
            
      END INPUT
   
 
{</section>}
 
{<section id="afmt190.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_fmdg_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = FALSE, 
                  DELETE ROW = FALSE,
                  APPEND ROW = FALSE)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_fmdg_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL afmt190_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_fmdg_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt190_cl USING g_enterprise,g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt190_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afmt190_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmdg_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmdg_d[l_ac].fmdgseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_fmdg_d_t.* = g_fmdg_d[l_ac].*  #BACKUP
               LET g_fmdg_d_o.* = g_fmdg_d[l_ac].*  #BACKUP
               CALL afmt190_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL afmt190_set_no_entry_b(l_cmd)
               IF NOT afmt190_lock_b("fmdg_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt190_bcl INTO g_fmdg_d[l_ac].fmdgseq,g_fmdg_d[l_ac].fmdg003,g_fmdg_d[l_ac].fmdg004, 
                      g_fmdg_d[l_ac].fmdg005,g_fmdg_d[l_ac].fmdg006,g_fmdg_d[l_ac].fmdg007,g_fmdg_d[l_ac].fmdg008, 
                      g_fmdg_d[l_ac].fmdg009,g_fmdg_d[l_ac].fmdg100,g_fmdg_d[l_ac].fmdg103,g_fmdg_d[l_ac].fmdg113, 
                      g_fmdg_d[l_ac].fmdg101,g_fmdg_d[l_ac].fmdg114,g_fmdg_d[l_ac].fmdg115,g_fmdg_d[l_ac].fmdg035, 
                      g_fmdg_d[l_ac].fmdg034,g_fmdg_d[l_ac].fmdg033,g_fmdg_d[l_ac].fmdg123,g_fmdg_d[l_ac].fmdg121, 
                      g_fmdg_d[l_ac].fmdg124,g_fmdg_d[l_ac].fmdg125,g_fmdg_d[l_ac].fmdg133,g_fmdg_d[l_ac].fmdg131, 
                      g_fmdg_d[l_ac].fmdg134,g_fmdg_d[l_ac].fmdg135,g_fmdg2_d[l_ac].fmdgseq,g_fmdg2_d[l_ac].fmdg010, 
                      g_fmdg2_d[l_ac].fmdg011,g_fmdg2_d[l_ac].fmdg012,g_fmdg2_d[l_ac].fmdg013,g_fmdg2_d[l_ac].fmdg014, 
                      g_fmdg2_d[l_ac].fmdg015,g_fmdg2_d[l_ac].fmdg016,g_fmdg2_d[l_ac].fmdg017,g_fmdg2_d[l_ac].fmdg018, 
                      g_fmdg2_d[l_ac].fmdg019,g_fmdg2_d[l_ac].fmdg020,g_fmdg2_d[l_ac].fmdg021,g_fmdg2_d[l_ac].fmdg022, 
                      g_fmdg2_d[l_ac].fmdg023,g_fmdg2_d[l_ac].fmdg024,g_fmdg2_d[l_ac].fmdg025,g_fmdg2_d[l_ac].fmdg026, 
                      g_fmdg2_d[l_ac].fmdg027,g_fmdg2_d[l_ac].fmdg028,g_fmdg2_d[l_ac].fmdg029,g_fmdg2_d[l_ac].fmdg030, 
                      g_fmdg2_d[l_ac].fmdg031,g_fmdg2_d[l_ac].fmdg032
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_fmdg_d_t.fmdgseq,":",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmdg_d_mask_o[l_ac].* =  g_fmdg_d[l_ac].*
                  CALL afmt190_fmdg_t_mask()
                  LET g_fmdg_d_mask_n[l_ac].* =  g_fmdg_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt190_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmdg_d[l_ac].* TO NULL 
            INITIALIZE g_fmdg_d_t.* TO NULL 
            INITIALIZE g_fmdg_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_fmdg_d[l_ac].fmdg103 = "0"
      LET g_fmdg_d[l_ac].fmdg113 = "0"
      LET g_fmdg_d[l_ac].fmdg114 = "0"
      LET g_fmdg_d[l_ac].fmdg115 = "0"
      LET g_fmdg_d[l_ac].fmdg123 = "0"
      LET g_fmdg_d[l_ac].fmdg124 = "0"
      LET g_fmdg_d[l_ac].fmdg125 = "0"
      LET g_fmdg_d[l_ac].fmdg133 = "0"
      LET g_fmdg_d[l_ac].fmdg134 = "0"
      LET g_fmdg_d[l_ac].fmdg135 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_fmdg_d_t.* = g_fmdg_d[l_ac].*     #新輸入資料
            LET g_fmdg_d_o.* = g_fmdg_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt190_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            
            #end add-point
            CALL afmt190_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmdg_d[li_reproduce_target].* = g_fmdg_d[li_reproduce].*
               LET g_fmdg2_d[li_reproduce_target].* = g_fmdg2_d[li_reproduce].*
 
               LET g_fmdg_d[li_reproduce_target].fmdgseq = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmdg_t 
             WHERE fmdgent = g_enterprise AND fmdgld = g_fmdf_m.fmdfld
               AND fmdgdocno = g_fmdf_m.fmdfdocno
               AND fmdg001 = g_fmdf_m.fmdf001
               AND fmdg002 = g_fmdf_m.fmdf002
 
               AND fmdgseq = g_fmdg_d[l_ac].fmdgseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmdf_m.fmdfld
               LET gs_keys[2] = g_fmdf_m.fmdfdocno
               LET gs_keys[3] = g_fmdf_m.fmdf001
               LET gs_keys[4] = g_fmdf_m.fmdf002
               LET gs_keys[5] = g_fmdg_d[g_detail_idx].fmdgseq
               CALL afmt190_insert_b('fmdg_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               INITIALIZE g_fmdg_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt190_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmdf_m.fmdfld
               LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdfdocno
               LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf001
               LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf002
 
               LET gs_keys[gs_keys.getLength()+1] = g_fmdg_d_t.fmdgseq
 
            
               #刪除同層單身
               IF NOT afmt190_delete_b('fmdg_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt190_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt190_key_delete_b(gs_keys,'fmdg_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt190_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt190_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_fmdg_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmdg_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdgseq
            #add-point:BEFORE FIELD fmdgseq name="input.b.page1.fmdgseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdgseq
            
            #add-point:AFTER FIELD fmdgseq name="input.a.page1.fmdgseq"
            #應用 a05 樣板自動產生(Version:3)
            #確認資料無重複
            IF  g_fmdf_m.fmdfld IS NOT NULL AND g_fmdf_m.fmdfdocno IS NOT NULL AND g_fmdf_m.fmdf001 IS NOT NULL AND g_fmdf_m.fmdf002 IS NOT NULL AND g_fmdg_d[g_detail_idx].fmdgseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_fmdf_m.fmdfld != g_fmdfld_t OR g_fmdf_m.fmdfdocno != g_fmdfdocno_t OR g_fmdf_m.fmdf001 != g_fmdf001_t OR g_fmdf_m.fmdf002 != g_fmdf002_t OR g_fmdg_d[g_detail_idx].fmdgseq != g_fmdg_d_t.fmdgseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmdg_t WHERE "||"fmdgent = '" ||g_enterprise|| "' AND "||"fmdgld = '"||g_fmdf_m.fmdfld ||"' AND "|| "fmdgdocno = '"||g_fmdf_m.fmdfdocno ||"' AND "|| "fmdg001 = '"||g_fmdf_m.fmdf001 ||"' AND "|| "fmdg002 = '"||g_fmdf_m.fmdf002 ||"' AND "|| "fmdgseq = '"||g_fmdg_d[g_detail_idx].fmdgseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdgseq
            #add-point:ON CHANGE fmdgseq name="input.g.page1.fmdgseq"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg003
            #add-point:BEFORE FIELD fmdg003 name="input.b.page1.fmdg003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg003
            
            #add-point:AFTER FIELD fmdg003 name="input.a.page1.fmdg003"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg003
            #add-point:ON CHANGE fmdg003 name="input.g.page1.fmdg003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg004
            #add-point:BEFORE FIELD fmdg004 name="input.b.page1.fmdg004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg004
            
            #add-point:AFTER FIELD fmdg004 name="input.a.page1.fmdg004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg004
            #add-point:ON CHANGE fmdg004 name="input.g.page1.fmdg004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg005
            #add-point:BEFORE FIELD fmdg005 name="input.b.page1.fmdg005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg005
            
            #add-point:AFTER FIELD fmdg005 name="input.a.page1.fmdg005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg005
            #add-point:ON CHANGE fmdg005 name="input.g.page1.fmdg005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg006
            #add-point:BEFORE FIELD fmdg006 name="input.b.page1.fmdg006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg006
            
            #add-point:AFTER FIELD fmdg006 name="input.a.page1.fmdg006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg006
            #add-point:ON CHANGE fmdg006 name="input.g.page1.fmdg006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg007
            #add-point:BEFORE FIELD fmdg007 name="input.b.page1.fmdg007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg007
            
            #add-point:AFTER FIELD fmdg007 name="input.a.page1.fmdg007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg007
            #add-point:ON CHANGE fmdg007 name="input.g.page1.fmdg007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg008
            #add-point:BEFORE FIELD fmdg008 name="input.b.page1.fmdg008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg008
            
            #add-point:AFTER FIELD fmdg008 name="input.a.page1.fmdg008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg008
            #add-point:ON CHANGE fmdg008 name="input.g.page1.fmdg008"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg009
            #add-point:BEFORE FIELD fmdg009 name="input.b.page1.fmdg009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg009
            
            #add-point:AFTER FIELD fmdg009 name="input.a.page1.fmdg009"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg009
            #add-point:ON CHANGE fmdg009 name="input.g.page1.fmdg009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg100
            #add-point:BEFORE FIELD fmdg100 name="input.b.page1.fmdg100"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg100
            
            #add-point:AFTER FIELD fmdg100 name="input.a.page1.fmdg100"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg100
            #add-point:ON CHANGE fmdg100 name="input.g.page1.fmdg100"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg103
            #add-point:BEFORE FIELD fmdg103 name="input.b.page1.fmdg103"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg103
            
            #add-point:AFTER FIELD fmdg103 name="input.a.page1.fmdg103"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg103
            #add-point:ON CHANGE fmdg103 name="input.g.page1.fmdg103"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg113
            #add-point:BEFORE FIELD fmdg113 name="input.b.page1.fmdg113"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg113
            
            #add-point:AFTER FIELD fmdg113 name="input.a.page1.fmdg113"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg113
            #add-point:ON CHANGE fmdg113 name="input.g.page1.fmdg113"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg101
            #add-point:BEFORE FIELD fmdg101 name="input.b.page1.fmdg101"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg101
            
            #add-point:AFTER FIELD fmdg101 name="input.a.page1.fmdg101"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg101
            #add-point:ON CHANGE fmdg101 name="input.g.page1.fmdg101"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg114
            #add-point:BEFORE FIELD fmdg114 name="input.b.page1.fmdg114"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg114
            
            #add-point:AFTER FIELD fmdg114 name="input.a.page1.fmdg114"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg114
            #add-point:ON CHANGE fmdg114 name="input.g.page1.fmdg114"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg115
            #add-point:BEFORE FIELD fmdg115 name="input.b.page1.fmdg115"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg115
            
            #add-point:AFTER FIELD fmdg115 name="input.a.page1.fmdg115"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg115
            #add-point:ON CHANGE fmdg115 name="input.g.page1.fmdg115"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg035
            #add-point:BEFORE FIELD fmdg035 name="input.b.page1.fmdg035"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg035
            
            #add-point:AFTER FIELD fmdg035 name="input.a.page1.fmdg035"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg035
            #add-point:ON CHANGE fmdg035 name="input.g.page1.fmdg035"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg034
            
            #add-point:AFTER FIELD fmdg034 name="input.a.page1.fmdg034"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg034
            #add-point:BEFORE FIELD fmdg034 name="input.b.page1.fmdg034"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg034
            #add-point:ON CHANGE fmdg034 name="input.g.page1.fmdg034"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg033
            
            #add-point:AFTER FIELD fmdg033 name="input.a.page1.fmdg033"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg033
            #add-point:BEFORE FIELD fmdg033 name="input.b.page1.fmdg033"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg033
            #add-point:ON CHANGE fmdg033 name="input.g.page1.fmdg033"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg123
            #add-point:BEFORE FIELD fmdg123 name="input.b.page1.fmdg123"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg123
            
            #add-point:AFTER FIELD fmdg123 name="input.a.page1.fmdg123"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg123
            #add-point:ON CHANGE fmdg123 name="input.g.page1.fmdg123"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg121
            #add-point:BEFORE FIELD fmdg121 name="input.b.page1.fmdg121"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg121
            
            #add-point:AFTER FIELD fmdg121 name="input.a.page1.fmdg121"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg121
            #add-point:ON CHANGE fmdg121 name="input.g.page1.fmdg121"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg124
            #add-point:BEFORE FIELD fmdg124 name="input.b.page1.fmdg124"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg124
            
            #add-point:AFTER FIELD fmdg124 name="input.a.page1.fmdg124"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg124
            #add-point:ON CHANGE fmdg124 name="input.g.page1.fmdg124"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg125
            #add-point:BEFORE FIELD fmdg125 name="input.b.page1.fmdg125"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg125
            
            #add-point:AFTER FIELD fmdg125 name="input.a.page1.fmdg125"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg125
            #add-point:ON CHANGE fmdg125 name="input.g.page1.fmdg125"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg133
            #add-point:BEFORE FIELD fmdg133 name="input.b.page1.fmdg133"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg133
            
            #add-point:AFTER FIELD fmdg133 name="input.a.page1.fmdg133"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg133
            #add-point:ON CHANGE fmdg133 name="input.g.page1.fmdg133"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg131
            #add-point:BEFORE FIELD fmdg131 name="input.b.page1.fmdg131"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg131
            
            #add-point:AFTER FIELD fmdg131 name="input.a.page1.fmdg131"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg131
            #add-point:ON CHANGE fmdg131 name="input.g.page1.fmdg131"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg134
            #add-point:BEFORE FIELD fmdg134 name="input.b.page1.fmdg134"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg134
            
            #add-point:AFTER FIELD fmdg134 name="input.a.page1.fmdg134"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg134
            #add-point:ON CHANGE fmdg134 name="input.g.page1.fmdg134"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg135
            #add-point:BEFORE FIELD fmdg135 name="input.b.page1.fmdg135"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg135
            
            #add-point:AFTER FIELD fmdg135 name="input.a.page1.fmdg135"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg135
            #add-point:ON CHANGE fmdg135 name="input.g.page1.fmdg135"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.fmdgseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdgseq
            #add-point:ON ACTION controlp INFIELD fmdgseq name="input.c.page1.fmdgseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg003
            #add-point:ON ACTION controlp INFIELD fmdg003 name="input.c.page1.fmdg003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg004
            #add-point:ON ACTION controlp INFIELD fmdg004 name="input.c.page1.fmdg004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg005
            #add-point:ON ACTION controlp INFIELD fmdg005 name="input.c.page1.fmdg005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg006
            #add-point:ON ACTION controlp INFIELD fmdg006 name="input.c.page1.fmdg006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg007
            #add-point:ON ACTION controlp INFIELD fmdg007 name="input.c.page1.fmdg007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg008
            #add-point:ON ACTION controlp INFIELD fmdg008 name="input.c.page1.fmdg008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg009
            #add-point:ON ACTION controlp INFIELD fmdg009 name="input.c.page1.fmdg009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg100
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg100
            #add-point:ON ACTION controlp INFIELD fmdg100 name="input.c.page1.fmdg100"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg103
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg103
            #add-point:ON ACTION controlp INFIELD fmdg103 name="input.c.page1.fmdg103"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg113
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg113
            #add-point:ON ACTION controlp INFIELD fmdg113 name="input.c.page1.fmdg113"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg101
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg101
            #add-point:ON ACTION controlp INFIELD fmdg101 name="input.c.page1.fmdg101"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg114
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg114
            #add-point:ON ACTION controlp INFIELD fmdg114 name="input.c.page1.fmdg114"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg115
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg115
            #add-point:ON ACTION controlp INFIELD fmdg115 name="input.c.page1.fmdg115"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg035
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg035
            #add-point:ON ACTION controlp INFIELD fmdg035 name="input.c.page1.fmdg035"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg034
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg034
            #add-point:ON ACTION controlp INFIELD fmdg034 name="input.c.page1.fmdg034"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg033
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg033
            #add-point:ON ACTION controlp INFIELD fmdg033 name="input.c.page1.fmdg033"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg123
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg123
            #add-point:ON ACTION controlp INFIELD fmdg123 name="input.c.page1.fmdg123"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg121
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg121
            #add-point:ON ACTION controlp INFIELD fmdg121 name="input.c.page1.fmdg121"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg124
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg124
            #add-point:ON ACTION controlp INFIELD fmdg124 name="input.c.page1.fmdg124"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg125
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg125
            #add-point:ON ACTION controlp INFIELD fmdg125 name="input.c.page1.fmdg125"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg133
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg133
            #add-point:ON ACTION controlp INFIELD fmdg133 name="input.c.page1.fmdg133"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg131
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg131
            #add-point:ON ACTION controlp INFIELD fmdg131 name="input.c.page1.fmdg131"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg134
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg134
            #add-point:ON ACTION controlp INFIELD fmdg134 name="input.c.page1.fmdg134"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmdg135
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg135
            #add-point:ON ACTION controlp INFIELD fmdg135 name="input.c.page1.fmdg135"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmdg_d[l_ac].* = g_fmdg_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt190_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_fmdg_d[l_ac].fmdgseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_fmdg_d[l_ac].* = g_fmdg_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL afmt190_fmdg_t_mask_restore('restore_mask_o')
      
               UPDATE fmdg_t SET (fmdgld,fmdgdocno,fmdg001,fmdg002,fmdgseq,fmdg003,fmdg004,fmdg005,fmdg006, 
                   fmdg007,fmdg008,fmdg009,fmdg100,fmdg103,fmdg113,fmdg101,fmdg114,fmdg115,fmdg035,fmdg034, 
                   fmdg033,fmdg123,fmdg121,fmdg124,fmdg125,fmdg133,fmdg131,fmdg134,fmdg135,fmdg010,fmdg011, 
                   fmdg012,fmdg013,fmdg014,fmdg015,fmdg016,fmdg017,fmdg018,fmdg019,fmdg020,fmdg021,fmdg022, 
                   fmdg023,fmdg024,fmdg025,fmdg026,fmdg027,fmdg028,fmdg029,fmdg030,fmdg031,fmdg032) = (g_fmdf_m.fmdfld, 
                   g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002,g_fmdg_d[l_ac].fmdgseq,g_fmdg_d[l_ac].fmdg003, 
                   g_fmdg_d[l_ac].fmdg004,g_fmdg_d[l_ac].fmdg005,g_fmdg_d[l_ac].fmdg006,g_fmdg_d[l_ac].fmdg007, 
                   g_fmdg_d[l_ac].fmdg008,g_fmdg_d[l_ac].fmdg009,g_fmdg_d[l_ac].fmdg100,g_fmdg_d[l_ac].fmdg103, 
                   g_fmdg_d[l_ac].fmdg113,g_fmdg_d[l_ac].fmdg101,g_fmdg_d[l_ac].fmdg114,g_fmdg_d[l_ac].fmdg115, 
                   g_fmdg_d[l_ac].fmdg035,g_fmdg_d[l_ac].fmdg034,g_fmdg_d[l_ac].fmdg033,g_fmdg_d[l_ac].fmdg123, 
                   g_fmdg_d[l_ac].fmdg121,g_fmdg_d[l_ac].fmdg124,g_fmdg_d[l_ac].fmdg125,g_fmdg_d[l_ac].fmdg133, 
                   g_fmdg_d[l_ac].fmdg131,g_fmdg_d[l_ac].fmdg134,g_fmdg_d[l_ac].fmdg135,g_fmdg2_d[l_ac].fmdg010, 
                   g_fmdg2_d[l_ac].fmdg011,g_fmdg2_d[l_ac].fmdg012,g_fmdg2_d[l_ac].fmdg013,g_fmdg2_d[l_ac].fmdg014, 
                   g_fmdg2_d[l_ac].fmdg015,g_fmdg2_d[l_ac].fmdg016,g_fmdg2_d[l_ac].fmdg017,g_fmdg2_d[l_ac].fmdg018, 
                   g_fmdg2_d[l_ac].fmdg019,g_fmdg2_d[l_ac].fmdg020,g_fmdg2_d[l_ac].fmdg021,g_fmdg2_d[l_ac].fmdg022, 
                   g_fmdg2_d[l_ac].fmdg023,g_fmdg2_d[l_ac].fmdg024,g_fmdg2_d[l_ac].fmdg025,g_fmdg2_d[l_ac].fmdg026, 
                   g_fmdg2_d[l_ac].fmdg027,g_fmdg2_d[l_ac].fmdg028,g_fmdg2_d[l_ac].fmdg029,g_fmdg2_d[l_ac].fmdg030, 
                   g_fmdg2_d[l_ac].fmdg031,g_fmdg2_d[l_ac].fmdg032)
                WHERE fmdgent = g_enterprise AND fmdgld = g_fmdf_m.fmdfld 
                  AND fmdgdocno = g_fmdf_m.fmdfdocno 
                  AND fmdg001 = g_fmdf_m.fmdf001 
                  AND fmdg002 = g_fmdf_m.fmdf002 
 
                  AND fmdgseq = g_fmdg_d_t.fmdgseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmdg_d[l_ac].* = g_fmdg_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmdg_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_fmdg_d[l_ac].* = g_fmdg_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmdf_m.fmdfld
               LET gs_keys_bak[1] = g_fmdfld_t
               LET gs_keys[2] = g_fmdf_m.fmdfdocno
               LET gs_keys_bak[2] = g_fmdfdocno_t
               LET gs_keys[3] = g_fmdf_m.fmdf001
               LET gs_keys_bak[3] = g_fmdf001_t
               LET gs_keys[4] = g_fmdf_m.fmdf002
               LET gs_keys_bak[4] = g_fmdf002_t
               LET gs_keys[5] = g_fmdg_d[g_detail_idx].fmdgseq
               LET gs_keys_bak[5] = g_fmdg_d_t.fmdgseq
               CALL afmt190_update_b('fmdg_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL afmt190_fmdg_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_fmdg_d[g_detail_idx].fmdgseq = g_fmdg_d_t.fmdgseq 
 
                  ) THEN
                  LET gs_keys[01] = g_fmdf_m.fmdfld
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdfdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf001
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf002
 
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdg_d_t.fmdgseq
 
                  CALL afmt190_key_update_b(gs_keys,'fmdg_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmdf_m),util.JSON.stringify(g_fmdg_d_t)
               LET g_log2 = util.JSON.stringify(g_fmdf_m),util.JSON.stringify(g_fmdg_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL afmt190_unlock_b("fmdg_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmdg_d[li_reproduce_target].* = g_fmdg_d[li_reproduce].*
               LET g_fmdg2_d[li_reproduce_target].* = g_fmdg2_d[li_reproduce].*
 
               LET g_fmdg_d[li_reproduce_target].fmdgseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmdg_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmdg_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_fmdg2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            
            CALL afmt190_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_fmdg2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmdg2_d[l_ac].* TO NULL 
            INITIALIZE g_fmdg2_d_t.* TO NULL 
            INITIALIZE g_fmdg2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_fmdg2_d_t.* = g_fmdg2_d[l_ac].*     #新輸入資料
            LET g_fmdg2_d_o.* = g_fmdg2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt190_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL afmt190_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmdg_d[li_reproduce_target].* = g_fmdg_d[li_reproduce].*
               LET g_fmdg2_d[li_reproduce_target].* = g_fmdg2_d[li_reproduce].*
 
               LET g_fmdg2_d[li_reproduce_target].fmdgseq = NULL
            END IF
            
 
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt190_cl USING g_enterprise,g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt190_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CLOSE afmt190_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmdg2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmdg2_d[l_ac].fmdgseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_fmdg2_d_t.* = g_fmdg2_d[l_ac].*  #BACKUP
               LET g_fmdg2_d_o.* = g_fmdg2_d[l_ac].*  #BACKUP
               CALL afmt190_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL afmt190_set_no_entry_b(l_cmd)
               IF NOT afmt190_lock_b("fmdg_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt190_bcl INTO g_fmdg_d[l_ac].fmdgseq,g_fmdg_d[l_ac].fmdg003,g_fmdg_d[l_ac].fmdg004, 
                      g_fmdg_d[l_ac].fmdg005,g_fmdg_d[l_ac].fmdg006,g_fmdg_d[l_ac].fmdg007,g_fmdg_d[l_ac].fmdg008, 
                      g_fmdg_d[l_ac].fmdg009,g_fmdg_d[l_ac].fmdg100,g_fmdg_d[l_ac].fmdg103,g_fmdg_d[l_ac].fmdg113, 
                      g_fmdg_d[l_ac].fmdg101,g_fmdg_d[l_ac].fmdg114,g_fmdg_d[l_ac].fmdg115,g_fmdg_d[l_ac].fmdg035, 
                      g_fmdg_d[l_ac].fmdg034,g_fmdg_d[l_ac].fmdg033,g_fmdg_d[l_ac].fmdg123,g_fmdg_d[l_ac].fmdg121, 
                      g_fmdg_d[l_ac].fmdg124,g_fmdg_d[l_ac].fmdg125,g_fmdg_d[l_ac].fmdg133,g_fmdg_d[l_ac].fmdg131, 
                      g_fmdg_d[l_ac].fmdg134,g_fmdg_d[l_ac].fmdg135,g_fmdg2_d[l_ac].fmdgseq,g_fmdg2_d[l_ac].fmdg010, 
                      g_fmdg2_d[l_ac].fmdg011,g_fmdg2_d[l_ac].fmdg012,g_fmdg2_d[l_ac].fmdg013,g_fmdg2_d[l_ac].fmdg014, 
                      g_fmdg2_d[l_ac].fmdg015,g_fmdg2_d[l_ac].fmdg016,g_fmdg2_d[l_ac].fmdg017,g_fmdg2_d[l_ac].fmdg018, 
                      g_fmdg2_d[l_ac].fmdg019,g_fmdg2_d[l_ac].fmdg020,g_fmdg2_d[l_ac].fmdg021,g_fmdg2_d[l_ac].fmdg022, 
                      g_fmdg2_d[l_ac].fmdg023,g_fmdg2_d[l_ac].fmdg024,g_fmdg2_d[l_ac].fmdg025,g_fmdg2_d[l_ac].fmdg026, 
                      g_fmdg2_d[l_ac].fmdg027,g_fmdg2_d[l_ac].fmdg028,g_fmdg2_d[l_ac].fmdg029,g_fmdg2_d[l_ac].fmdg030, 
                      g_fmdg2_d[l_ac].fmdg031,g_fmdg2_d[l_ac].fmdg032
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmdg2_d_mask_o[l_ac].* =  g_fmdg2_d[l_ac].*
                  CALL afmt190_fmdg_t_mask()
                  LET g_fmdg2_d_mask_n[l_ac].* =  g_fmdg2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt190_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmdf_m.fmdfld
               LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdfdocno
               LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf001
               LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf002
               LET gs_keys[gs_keys.getLength()+1] = g_fmdg2_d_t.fmdgseq
            
               #刪除同層單身
               IF NOT afmt190_delete_b('fmdg_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt190_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt190_key_delete_b(gs_keys,'fmdg_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt190_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt190_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_fmdg_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmdg2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmdg_t 
             WHERE fmdgent = g_enterprise AND fmdgld = g_fmdf_m.fmdfld
               AND fmdgdocno = g_fmdf_m.fmdfdocno
               AND fmdg001 = g_fmdf_m.fmdf001
               AND fmdg002 = g_fmdf_m.fmdf002
               AND fmdgseq = g_fmdg2_d[l_ac].fmdgseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmdf_m.fmdfld
               LET gs_keys[2] = g_fmdf_m.fmdfdocno
               LET gs_keys[3] = g_fmdf_m.fmdf001
               LET gs_keys[4] = g_fmdf_m.fmdf002
               LET gs_keys[5] = g_fmdg2_d[g_detail_idx].fmdgseq
               CALL afmt190_insert_b('fmdg_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_fmdg_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt190_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmdg2_d[l_ac].* = g_fmdg2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt190_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_fmdg2_d[l_ac].* = g_fmdg2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL afmt190_fmdg_t_mask_restore('restore_mask_o')
                              
               UPDATE fmdg_t SET (fmdgld,fmdgdocno,fmdg001,fmdg002,fmdgseq,fmdg003,fmdg004,fmdg005,fmdg006, 
                   fmdg007,fmdg008,fmdg009,fmdg100,fmdg103,fmdg113,fmdg101,fmdg114,fmdg115,fmdg035,fmdg034, 
                   fmdg033,fmdg123,fmdg121,fmdg124,fmdg125,fmdg133,fmdg131,fmdg134,fmdg135,fmdg010,fmdg011, 
                   fmdg012,fmdg013,fmdg014,fmdg015,fmdg016,fmdg017,fmdg018,fmdg019,fmdg020,fmdg021,fmdg022, 
                   fmdg023,fmdg024,fmdg025,fmdg026,fmdg027,fmdg028,fmdg029,fmdg030,fmdg031,fmdg032) = (g_fmdf_m.fmdfld, 
                   g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002,g_fmdg_d[l_ac].fmdgseq,g_fmdg_d[l_ac].fmdg003, 
                   g_fmdg_d[l_ac].fmdg004,g_fmdg_d[l_ac].fmdg005,g_fmdg_d[l_ac].fmdg006,g_fmdg_d[l_ac].fmdg007, 
                   g_fmdg_d[l_ac].fmdg008,g_fmdg_d[l_ac].fmdg009,g_fmdg_d[l_ac].fmdg100,g_fmdg_d[l_ac].fmdg103, 
                   g_fmdg_d[l_ac].fmdg113,g_fmdg_d[l_ac].fmdg101,g_fmdg_d[l_ac].fmdg114,g_fmdg_d[l_ac].fmdg115, 
                   g_fmdg_d[l_ac].fmdg035,g_fmdg_d[l_ac].fmdg034,g_fmdg_d[l_ac].fmdg033,g_fmdg_d[l_ac].fmdg123, 
                   g_fmdg_d[l_ac].fmdg121,g_fmdg_d[l_ac].fmdg124,g_fmdg_d[l_ac].fmdg125,g_fmdg_d[l_ac].fmdg133, 
                   g_fmdg_d[l_ac].fmdg131,g_fmdg_d[l_ac].fmdg134,g_fmdg_d[l_ac].fmdg135,g_fmdg2_d[l_ac].fmdg010, 
                   g_fmdg2_d[l_ac].fmdg011,g_fmdg2_d[l_ac].fmdg012,g_fmdg2_d[l_ac].fmdg013,g_fmdg2_d[l_ac].fmdg014, 
                   g_fmdg2_d[l_ac].fmdg015,g_fmdg2_d[l_ac].fmdg016,g_fmdg2_d[l_ac].fmdg017,g_fmdg2_d[l_ac].fmdg018, 
                   g_fmdg2_d[l_ac].fmdg019,g_fmdg2_d[l_ac].fmdg020,g_fmdg2_d[l_ac].fmdg021,g_fmdg2_d[l_ac].fmdg022, 
                   g_fmdg2_d[l_ac].fmdg023,g_fmdg2_d[l_ac].fmdg024,g_fmdg2_d[l_ac].fmdg025,g_fmdg2_d[l_ac].fmdg026, 
                   g_fmdg2_d[l_ac].fmdg027,g_fmdg2_d[l_ac].fmdg028,g_fmdg2_d[l_ac].fmdg029,g_fmdg2_d[l_ac].fmdg030, 
                   g_fmdg2_d[l_ac].fmdg031,g_fmdg2_d[l_ac].fmdg032) #自訂欄位頁簽
                WHERE fmdgent = g_enterprise AND fmdgld = g_fmdf_m.fmdfld
                  AND fmdgdocno = g_fmdf_m.fmdfdocno
                  AND fmdg001 = g_fmdf_m.fmdf001
                  AND fmdg002 = g_fmdf_m.fmdf002
                  AND fmdgseq = g_fmdg2_d_t.fmdgseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmdg2_d[l_ac].* = g_fmdg2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmdg_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     LET g_fmdg2_d[l_ac].* = g_fmdg2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmdf_m.fmdfld
               LET gs_keys_bak[1] = g_fmdfld_t
               LET gs_keys[2] = g_fmdf_m.fmdfdocno
               LET gs_keys_bak[2] = g_fmdfdocno_t
               LET gs_keys[3] = g_fmdf_m.fmdf001
               LET gs_keys_bak[3] = g_fmdf001_t
               LET gs_keys[4] = g_fmdf_m.fmdf002
               LET gs_keys_bak[4] = g_fmdf002_t
               LET gs_keys[5] = g_fmdg2_d[g_detail_idx].fmdgseq
               LET gs_keys_bak[5] = g_fmdg2_d_t.fmdgseq
               CALL afmt190_update_b('fmdg_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL afmt190_fmdg_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_fmdg2_d[g_detail_idx].fmdgseq = g_fmdg2_d_t.fmdgseq 
                  ) THEN
                  LET gs_keys[01] = g_fmdf_m.fmdfld
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdfdocno
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf001
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdf_m.fmdf002
                  LET gs_keys[gs_keys.getLength()+1] = g_fmdg2_d_t.fmdgseq
                  CALL afmt190_key_update_b(gs_keys,'fmdg_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmdf_m),util.JSON.stringify(g_fmdg2_d_t)
               LET g_log2 = util.JSON.stringify(g_fmdf_m),util.JSON.stringify(g_fmdg2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg010
            
            #add-point:AFTER FIELD fmdg010 name="input.a.page2.fmdg010"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg010) THEN
               CALL s_voucher_glaq021_chk(g_fmdg2_d[l_ac].fmdg010)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ''
                  LET g_errparam.code   = g_errno
                  LET g_errparam.replace[1] = 'apmm100'
                  LET g_errparam.replace[2] = cl_get_progname('apmm100',g_lang,"2")
                  LET g_errparam.exeprog = 'apmm100'
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET g_fmdg2_d[l_ac].fmdg010 = g_fmdg2_d_t.fmdg010
                  NEXT FIELD fmdg010
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg010
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg010_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg010
            #add-point:BEFORE FIELD fmdg010 name="input.b.page2.fmdg010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg010
            #add-point:ON CHANGE fmdg010 name="input.g.page2.fmdg010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg011
            
            #add-point:AFTER FIELD fmdg011 name="input.a.page2.fmdg011"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg011) THEN
               CALL s_voucher_glaq021_chk(g_fmdg2_d[l_ac].fmdg011)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.extend = ''
                  LET g_errparam.code   = g_errno
                  LET g_errparam.replace[1] = 'apmm100'
                  LET g_errparam.replace[2] = cl_get_progname('apmm100',g_lang,"2")
                  LET g_errparam.exeprog = 'apmm100'
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  
                  LET g_fmdg2_d[l_ac].fmdg011_desc = g_fmdg2_d_t.fmdg011
                  NEXT FIELD fmdg011_desc
               END IF              
                              
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg011
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg011_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg011
            #add-point:BEFORE FIELD fmdg011 name="input.b.page2.fmdg011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg011
            #add-point:ON CHANGE fmdg011 name="input.g.page2.fmdg011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg012
            
            #add-point:AFTER FIELD fmdg012 name="input.a.page2.fmdg012"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg012) THEN
               CALL s_department_chk(g_fmdg2_d[l_ac].fmdg012,g_fmdf_m.fmdfdocdt) RETURNING g_sub_success
               IF NOT g_sub_success THEN
                  LET g_fmdg2_d[l_ac].fmdg012 = g_fmdg2_d_t.fmdg012
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg012
                  CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_fmdg2_d[l_ac].fmdg012_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg012_desc
                  NEXT FIELD fmdg012                  
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg012
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg012_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg012
            #add-point:BEFORE FIELD fmdg012 name="input.b.page2.fmdg012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg012
            #add-point:ON CHANGE fmdg012 name="input.g.page2.fmdg012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg013
            
            #add-point:AFTER FIELD fmdg013 name="input.a.page2.fmdg013"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg013) THEN
               CALL s_voucher_glaq019_chk(g_fmdg2_d[l_ac].fmdg013,g_fmdf_m.fmdfdocdt) 
               IF NOT cl_null(g_errno) THEN
                  LET g_fmdg2_d[l_ac].fmdg013 = g_fmdg2_d_t.fmdg013
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg013
                  CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_fmdg2_d[l_ac].fmdg013_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg013_desc
                  NEXT FIELD fmdg013
               END IF
                              
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg013
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg013_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg013
            #add-point:BEFORE FIELD fmdg013 name="input.b.page2.fmdg013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg013
            #add-point:ON CHANGE fmdg013 name="input.g.page2.fmdg013"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg014
            
            #add-point:AFTER FIELD fmdg014 name="input.a.page2.fmdg014"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg014) THEN
               IF NOT s_azzi650_chk_exist('287',g_fmdg2_d[l_ac].fmdg014) THEN
                  LET g_fmdg2_d[l_ac].fmdg014 = g_fmdg2_d_t.fmdg014
                  NEXT FIELD fmdg014               
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg014
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='287' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg014_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg014_desc
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg014
            #add-point:BEFORE FIELD fmdg014 name="input.b.page2.fmdg014"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg014
            #add-point:ON CHANGE fmdg014 name="input.g.page2.fmdg014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg015
            
            #add-point:AFTER FIELD fmdg015 name="input.a.page2.fmdg015"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg015) THEN
               IF NOT s_azzi650_chk_exist('281',g_fmdg2_d[l_ac].fmdg015) THEN
                  LET g_fmdg2_d[l_ac].fmdg015 = g_fmdg2_d_t.fmdg015
                  NEXT FIELD fmdg015             
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg015
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='281' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg015_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg015
            #add-point:BEFORE FIELD fmdg015 name="input.b.page2.fmdg015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg015
            #add-point:ON CHANGE fmdg015 name="input.g.page2.fmdg015"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg016
            
            #add-point:AFTER FIELD fmdg016 name="input.a.page2.fmdg016"
            #產品類別
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg016) THEN
               IF ( g_fmdg2_d[l_ac].fmdg016 != g_fmdg2_d_t.fmdg016 OR g_fmdg2_d_t.fmdg016 IS NULL) THEN
                  SELECT glaa121 INTO l_glaa121 FROM glaa_t WHERE glaaent = g_enterprise
                     AND glaald = g_fmdf_m.fmdfld
                  IF l_glaa121 = 'N' THEN
                     CALL s_voucher_glaq024_chk(g_fmdg2_d[l_ac].fmdg016)
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.extend = ""
                        LET g_errparam.code   = g_errno
                        LET g_errparam.replace[1] = 'arti202'
                        LET g_errparam.replace[2] = cl_get_progname('arti202',g_lang,"2")
                        LET g_errparam.exeprog = 'arti202'
                        LET g_errparam.popup  = TRUE
                        CALL cl_err()
                        LET g_fmdg2_d[l_ac].fmdg016 = g_fmdg2_d_t.fmdg016
                        INITIALIZE g_ref_fields TO NULL
                        LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg016
                        CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
                        LET g_fmdg2_d[l_ac].fmdg016_desc = '', g_rtn_fields[1] , ''
                        DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg016,g_fmdg2_d[l_ac].fmdg016_desc
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg016
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg016_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg016
            #add-point:BEFORE FIELD fmdg016 name="input.b.page2.fmdg016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg016
            #add-point:ON CHANGE fmdg016 name="input.g.page2.fmdg016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg017
            
            #add-point:AFTER FIELD fmdg017 name="input.a.page2.fmdg017"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg017) THEN
               CALL s_employee_chk(g_fmdg2_d[l_ac].fmdg017) RETURNING g_sub_success
               IF NOT g_sub_success THEN 
                  LET g_fmdg2_d[l_ac].fmdg017 = g_fmdg2_d_t.fmdg017
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg017
                  CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
                  LET g_fmdg2_d[l_ac].fmdg017_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg017_desc
                  NEXT FIELD fmdg017
               END IF
            END IF
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg017_desc

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg017
            #add-point:BEFORE FIELD fmdg017 name="input.b.page2.fmdg017"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg017
            #add-point:ON CHANGE fmdg017 name="input.g.page2.fmdg017"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg018
            
            #add-point:AFTER FIELD fmdg018 name="input.a.page2.fmdg018"
             IF NOT cl_null(g_fmdg2_d[l_ac].fmdg018) THEN 
               CALL s_aap_project_chk(g_fmdg2_d[l_ac].fmdg018) RETURNING g_sub_success,g_errno
               IF NOT g_sub_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.replace[1] = 'apjm200'
                  LET g_errparam.replace[2] = cl_get_progname('apjm200',g_lang,"2")
                  LET g_errparam.exeprog = 'apjm200'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_fmdg2_d[l_ac].fmdg018=g_fmdg2_d_t.fmdg018
                  NEXT FIELD CURRENT
               END IF  
            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg018
            CALL ap_ref_array2(g_ref_fields,"SELECT pjbal003 FROM pjbal_t WHERE pjbalent='"||g_enterprise||"' AND pjbal001=? AND pjbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg018_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg018
            #add-point:BEFORE FIELD fmdg018 name="input.b.page2.fmdg018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg018
            #add-point:ON CHANGE fmdg018 name="input.g.page2.fmdg018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg019
            #add-point:BEFORE FIELD fmdg019 name="input.b.page2.fmdg019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg019
            
            #add-point:AFTER FIELD fmdg019 name="input.a.page2.fmdg019"
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg019) THEN  
               CALL s_voucher_glaq028_chk(g_fmdg2_d[l_ac].fmdg018,g_fmdg2_d[l_ac].fmdg019)
               IF NOT cl_null(g_errno) THEN  
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_fmdg2_d[l_ac].fmdg019 = g_fmdg2_d_t.fmdg019
                  NEXT FIELD CURRENT
               END IF                    
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg019
            #add-point:ON CHANGE fmdg019 name="input.g.page2.fmdg019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg020
            #add-point:BEFORE FIELD fmdg020 name="input.b.page2.fmdg020"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg020
            
            #add-point:AFTER FIELD fmdg020 name="input.a.page2.fmdg020"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg020
            #add-point:ON CHANGE fmdg020 name="input.g.page2.fmdg020"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg021
            
            #add-point:AFTER FIELD fmdg021 name="input.a.page2.fmdg021"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg021
            CALL ap_ref_array2(g_ref_fields,"SELECT oojdl003 FROM oojdl_t WHERE oojdlent='"||g_enterprise||"' AND oojdl001=? AND oojdl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg021_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg021_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg021
            #add-point:BEFORE FIELD fmdg021 name="input.b.page2.fmdg021"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg021
            #add-point:ON CHANGE fmdg021 name="input.g.page2.fmdg021"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg022
            
            #add-point:AFTER FIELD fmdg022 name="input.a.page2.fmdg022"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg022
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='2002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg022_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg022_desc


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg022
            #add-point:BEFORE FIELD fmdg022 name="input.b.page2.fmdg022"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg022
            #add-point:ON CHANGE fmdg022 name="input.g.page2.fmdg022"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg023
            #add-point:BEFORE FIELD fmdg023 name="input.b.page2.fmdg023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg023
            
            #add-point:AFTER FIELD fmdg023 name="input.a.page2.fmdg023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg023
            #add-point:ON CHANGE fmdg023 name="input.g.page2.fmdg023"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg024
            #add-point:BEFORE FIELD fmdg024 name="input.b.page2.fmdg024"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg024
            
            #add-point:AFTER FIELD fmdg024 name="input.a.page2.fmdg024"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg024
            #add-point:ON CHANGE fmdg024 name="input.g.page2.fmdg024"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg025
            #add-point:BEFORE FIELD fmdg025 name="input.b.page2.fmdg025"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg025
            
            #add-point:AFTER FIELD fmdg025 name="input.a.page2.fmdg025"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg025
            #add-point:ON CHANGE fmdg025 name="input.g.page2.fmdg025"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg026
            #add-point:BEFORE FIELD fmdg026 name="input.b.page2.fmdg026"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg026
            
            #add-point:AFTER FIELD fmdg026 name="input.a.page2.fmdg026"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg026
            #add-point:ON CHANGE fmdg026 name="input.g.page2.fmdg026"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg027
            #add-point:BEFORE FIELD fmdg027 name="input.b.page2.fmdg027"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg027
            
            #add-point:AFTER FIELD fmdg027 name="input.a.page2.fmdg027"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg027
            #add-point:ON CHANGE fmdg027 name="input.g.page2.fmdg027"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg028
            #add-point:BEFORE FIELD fmdg028 name="input.b.page2.fmdg028"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg028
            
            #add-point:AFTER FIELD fmdg028 name="input.a.page2.fmdg028"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg028
            #add-point:ON CHANGE fmdg028 name="input.g.page2.fmdg028"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg029
            #add-point:BEFORE FIELD fmdg029 name="input.b.page2.fmdg029"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg029
            
            #add-point:AFTER FIELD fmdg029 name="input.a.page2.fmdg029"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg029
            #add-point:ON CHANGE fmdg029 name="input.g.page2.fmdg029"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg030
            #add-point:BEFORE FIELD fmdg030 name="input.b.page2.fmdg030"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg030
            
            #add-point:AFTER FIELD fmdg030 name="input.a.page2.fmdg030"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg030
            #add-point:ON CHANGE fmdg030 name="input.g.page2.fmdg030"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg031
            #add-point:BEFORE FIELD fmdg031 name="input.b.page2.fmdg031"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg031
            
            #add-point:AFTER FIELD fmdg031 name="input.a.page2.fmdg031"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg031
            #add-point:ON CHANGE fmdg031 name="input.g.page2.fmdg031"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmdg032
            #add-point:BEFORE FIELD fmdg032 name="input.b.page2.fmdg032"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmdg032
            
            #add-point:AFTER FIELD fmdg032 name="input.a.page2.fmdg032"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmdg032
            #add-point:ON CHANGE fmdg032 name="input.g.page2.fmdg032"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.fmdg010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg010
            #add-point:ON ACTION controlp INFIELD fmdg010 name="input.c.page2.fmdg010"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg010            #給予default值
            #給予arg
            LET g_qryparam.arg1 = ""                            #呼叫開窗
            CALL q_pmaa001_25()        #160913-00017#2  ADD 
           # CALL q_pmaa001()      #160913-00017#2 mark          #呼叫開窗
            LET g_fmdg2_d[l_ac].fmdg010 = g_qryparam.return1
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg010
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg010,g_fmdg2_d[l_ac].fmdg010_desc
            NEXT FIELD fmdg010                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg011
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg011
            #add-point:ON ACTION controlp INFIELD fmdg011 name="input.c.page2.fmdg011"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg011            #給予default值
            #給予arg
            LET g_qryparam.arg1 = ""                            #呼叫開窗
            CALL q_pmaa001_25()        #160913-00017#2  ADD 
           # CALL q_pmaa001()      #160913-00017#2 mark          #呼叫開窗
            LET g_fmdg2_d[l_ac].fmdg011 = g_qryparam.return1
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg011
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg011_desc = '', g_rtn_fields[1] , ''

            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg011,g_fmdg2_d[l_ac].fmdg011_desc
            NEXT FIELD fmdg011                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg012
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg012
            #add-point:ON ACTION controlp INFIELD fmdg012 name="input.c.page2.fmdg012"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg012            #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_fmdf_m.fmdfdocdt                            #呼叫開窗
            CALL q_ooeg001_4()        
            LET g_fmdg2_d[l_ac].fmdg012 = g_qryparam.return1
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg012               #
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg012
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg012_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg012_desc
            NEXT FIELD fmdg012                          #返回原欄位

            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg013
            #add-point:ON ACTION controlp INFIELD fmdg013 name="input.c.page2.fmdg013"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg013            #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_fmdf_m.fmdfdocdt                            #呼叫開窗
            CALL q_ooeg001_5()        
            LET g_fmdg2_d[l_ac].fmdg013 = g_qryparam.return1
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg013
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg013
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg013_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg013_desc
            NEXT FIELD fmdg013                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg014
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg014
            #add-point:ON ACTION controlp INFIELD fmdg014 name="input.c.page2.fmdg014"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg015            #給予default值

            #給予arg
            LET g_qryparam.arg1 = ""                            #呼叫開窗
            CALL q_oocq002_281()   
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg015
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='287' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg015,g_fmdg2_d[l_ac].fmdg015_desc

            NEXT FIELD fmdg015                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg015
            #add-point:ON ACTION controlp INFIELD fmdg015 name="input.c.page2.fmdg015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg016
            #add-point:ON ACTION controlp INFIELD fmdg016 name="input.c.page2.fmdg016"
            #產品類別
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg016
            CALL q_rtax001()
            LET g_fmdg2_d[l_ac].fmdg016 = g_qryparam.return1
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg016
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg016,g_fmdg2_d[l_ac].fmdg016_desc
            NEXT FIELD fmdg016
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg017
            #add-point:ON ACTION controlp INFIELD fmdg017 name="input.c.page2.fmdg017"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg017            #給予default值

            #給予arg
            LET g_qryparam.arg1 = ""                            #呼叫開窗
            CALL q_ooag001_8()
            LET g_fmdg2_d[l_ac].fmdg017 = g_qryparam.return1
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg017
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg017_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg017,g_fmdg2_d[l_ac].fmdg017_desc
            NEXT FIELD fmdg017                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg018
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg018
            #add-point:ON ACTION controlp INFIELD fmdg018 name="input.c.page2.fmdg018"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg018            #給予default值

            #給予arg
            LET g_qryparam.arg1 = ""                            #呼叫開窗
            CALL q_pjba001() 
            LET g_fmdg2_d[l_ac].fmdg018 = g_qryparam.return1              
 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmdg2_d[l_ac].fmdg018
            CALL ap_ref_array2(g_ref_fields,"SELECT pjbal003 FROM pjbal_t WHERE pjbalent='"||g_enterprise||"' AND pjbal001=? AND pjbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_fmdg2_d[l_ac].fmdg018_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmdg2_d[l_ac].fmdg018,g_fmdg2_d[l_ac].fmdg018_desc
            NEXT FIELD fmdg018                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg019
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg019
            #add-point:ON ACTION controlp INFIELD fmdg019 name="input.c.page2.fmdg019"
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmdg2_d[l_ac].fmdg019            #給予default值

            #給予arg
            LET g_qryparam.arg1 = ""                            #呼叫開窗
            IF NOT cl_null(g_fmdg2_d[l_ac].fmdg018) THEN
               LET g_qryparam.where = "pjbb012='1' AND pjbb001='",g_fmdg2_d[l_ac].fmdg018,"'"
            ELSE
               LET g_qryparam.where = "pjbb012='1'"
            END IF
            CALL q_pjbb002()             #呼叫開窗
            LET g_fmdg2_d[l_ac].fmdg019 = g_qryparam.return1
            NEXT FIELD fmdg019                          #返回原欄位
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg020
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg020
            #add-point:ON ACTION controlp INFIELD fmdg020 name="input.c.page2.fmdg020"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg021
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg021
            #add-point:ON ACTION controlp INFIELD fmdg021 name="input.c.page2.fmdg021"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg022
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg022
            #add-point:ON ACTION controlp INFIELD fmdg022 name="input.c.page2.fmdg022"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg023
            #add-point:ON ACTION controlp INFIELD fmdg023 name="input.c.page2.fmdg023"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg024
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg024
            #add-point:ON ACTION controlp INFIELD fmdg024 name="input.c.page2.fmdg024"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg025
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg025
            #add-point:ON ACTION controlp INFIELD fmdg025 name="input.c.page2.fmdg025"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg026
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg026
            #add-point:ON ACTION controlp INFIELD fmdg026 name="input.c.page2.fmdg026"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg027
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg027
            #add-point:ON ACTION controlp INFIELD fmdg027 name="input.c.page2.fmdg027"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg028
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg028
            #add-point:ON ACTION controlp INFIELD fmdg028 name="input.c.page2.fmdg028"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg029
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg029
            #add-point:ON ACTION controlp INFIELD fmdg029 name="input.c.page2.fmdg029"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg030
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg030
            #add-point:ON ACTION controlp INFIELD fmdg030 name="input.c.page2.fmdg030"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg031
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg031
            #add-point:ON ACTION controlp INFIELD fmdg031 name="input.c.page2.fmdg031"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmdg032
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmdg032
            #add-point:ON ACTION controlp INFIELD fmdg032 name="input.c.page2.fmdg032"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_fmdg2_d[l_ac].* = g_fmdg2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CLOSE afmt190_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL afmt190_unlock_b("fmdg_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmdg_d[li_reproduce_target].* = g_fmdg_d[li_reproduce].*
               LET g_fmdg2_d[li_reproduce_target].* = g_fmdg2_d[li_reproduce].*
 
               LET g_fmdg2_d[li_reproduce_target].fmdgseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmdg2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmdg2_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="afmt190.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD fmdfld
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD fmdgseq
               WHEN "s_detail2"
                  NEXT FIELD fmdgseq_2
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   IF NOT INT_FLAG THEN
      SELECT glaa121 INTO l_glaa121 FROM glaa_t WHERE glaaent = g_enterprise
         AND glaald = g_fmdf_m.fmdfld
      CALL s_aooi200_fin_get_slip(g_fmdf_m.fmdfdocno) RETURNING l_success,l_ooba002
      CALL s_fin_get_doc_para(g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,l_ooba002,'D-FIN-0030') RETURNING l_dfin0030
      IF l_glaa121 = 'Y' AND l_dfin0030 = 'Y' THEN
         IF s_axrt300_xrcb105_chk(g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno) THEN
            CALL s_transaction_begin()
            CALL s_pre_voucher_ins('AR','R10',g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,'1')
               RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N',0)
            ELSE 
               CALL s_transaction_end('Y',0)
            END IF
         END IF
      END IF
   END IF
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION afmt190_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE l_glaa015           LIKE glaa_t.glaa015
   DEFINE l_glaa019           LIKE glaa_t.glaa019
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL afmt190_b_fill() #單身填充
      CALL afmt190_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL afmt190_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"

   CALL s_ld_sel_glaa(g_fmdf_m.fmdfld,'glaa015|glaa019')
        RETURNING g_sub_success,l_glaa015,l_glaa019

   IF l_glaa015 = 'Y' THEN
      CALL cl_set_comp_visible("fmdg121,fmdg123,fmdg124,fmdg125",TRUE)
   ELSE
      CALL cl_set_comp_visible("fmdg121,fmdg123,fmdg124,fmdg125",FALSE)
   END IF

   IF l_glaa019 = 'Y' THEN
      CALL cl_set_comp_visible("fmdg131,fmdg133,fmdg134,fmdg135",TRUE)
   ELSE
      CALL cl_set_comp_visible("fmdg131,fmdg133,fmdg134,fmdg135",FALSE)
   END IF

   #end add-point
   
   #遮罩相關處理
   LET g_fmdf_m_mask_o.* =  g_fmdf_m.*
   CALL afmt190_fmdf_t_mask()
   LET g_fmdf_m_mask_n.* =  g_fmdf_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmdf_m.fmdfsite,g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp, 
       g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp, 
       g_fmdf_m.fmdfowndp_desc,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp,g_fmdf_m.fmdfcrtdp_desc, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid, 
       g_fmdf_m.fmdfcnfid_desc,g_fmdf_m.fmdfcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmdf_m.fmdfstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_fmdg_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_fmdg2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL afmt190_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION afmt190_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION afmt190_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE fmdf_t.fmdfld 
   DEFINE l_oldno     LIKE fmdf_t.fmdfld 
   DEFINE l_newno02     LIKE fmdf_t.fmdfdocno 
   DEFINE l_oldno02     LIKE fmdf_t.fmdfdocno 
   DEFINE l_newno03     LIKE fmdf_t.fmdf001 
   DEFINE l_oldno03     LIKE fmdf_t.fmdf001 
   DEFINE l_newno04     LIKE fmdf_t.fmdf002 
   DEFINE l_oldno04     LIKE fmdf_t.fmdf002 
 
   DEFINE l_master    RECORD LIKE fmdf_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE fmdg_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_fmdf_m.fmdfld IS NULL
   OR g_fmdf_m.fmdfdocno IS NULL
   OR g_fmdf_m.fmdf001 IS NULL
   OR g_fmdf_m.fmdf002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_fmdfld_t = g_fmdf_m.fmdfld
   LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
   LET g_fmdf001_t = g_fmdf_m.fmdf001
   LET g_fmdf002_t = g_fmdf_m.fmdf002
 
    
   LET g_fmdf_m.fmdfld = ""
   LET g_fmdf_m.fmdfdocno = ""
   LET g_fmdf_m.fmdf001 = ""
   LET g_fmdf_m.fmdf002 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmdf_m.fmdfownid = g_user
      LET g_fmdf_m.fmdfowndp = g_dept
      LET g_fmdf_m.fmdfcrtid = g_user
      LET g_fmdf_m.fmdfcrtdp = g_dept 
      LET g_fmdf_m.fmdfcrtdt = cl_get_current()
      LET g_fmdf_m.fmdfmodid = g_user
      LET g_fmdf_m.fmdfmoddt = cl_get_current()
      LET g_fmdf_m.fmdfstus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmdf_m.fmdfstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_fmdf_m.fmdfld_desc = ''
   DISPLAY BY NAME g_fmdf_m.fmdfld_desc
 
   
   CALL afmt190_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_fmdf_m.* TO NULL
      INITIALIZE g_fmdg_d TO NULL
      INITIALIZE g_fmdg2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL afmt190_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt190_set_act_visible()   
   CALL afmt190_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmdfld_t = g_fmdf_m.fmdfld
   LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
   LET g_fmdf001_t = g_fmdf_m.fmdf001
   LET g_fmdf002_t = g_fmdf_m.fmdf002
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmdfent = " ||g_enterprise|| " AND",
                      " fmdfld = '", g_fmdf_m.fmdfld, "' "
                      ," AND fmdfdocno = '", g_fmdf_m.fmdfdocno, "' "
                      ," AND fmdf001 = '", g_fmdf_m.fmdf001, "' "
                      ," AND fmdf002 = '", g_fmdf_m.fmdf002, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt190_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL afmt190_idx_chk()
   
   LET g_data_owner = g_fmdf_m.fmdfownid      
   LET g_data_dept  = g_fmdf_m.fmdfowndp
   
   #功能已完成,通報訊息中心
   CALL afmt190_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION afmt190_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE fmdg_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE afmt190_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM fmdg_t
    WHERE fmdgent = g_enterprise AND fmdgld = g_fmdfld_t
     AND fmdgdocno = g_fmdfdocno_t
     AND fmdg001 = g_fmdf001_t
     AND fmdg002 = g_fmdf002_t
 
    INTO TEMP afmt190_detail
 
   #將key修正為調整後   
   UPDATE afmt190_detail 
      #更新key欄位
      SET fmdgld = g_fmdf_m.fmdfld
          , fmdgdocno = g_fmdf_m.fmdfdocno
          , fmdg001 = g_fmdf_m.fmdf001
          , fmdg002 = g_fmdf_m.fmdf002
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO fmdg_t SELECT * FROM afmt190_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE afmt190_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_fmdfld_t = g_fmdf_m.fmdfld
   LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
   LET g_fmdf001_t = g_fmdf_m.fmdf001
   LET g_fmdf002_t = g_fmdf_m.fmdf002
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.delete" >}
#+ 資料刪除
PRIVATE FUNCTION afmt190_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_fmdf_m.fmdfld IS NULL
   OR g_fmdf_m.fmdfdocno IS NULL
   OR g_fmdf_m.fmdf001 IS NULL
   OR g_fmdf_m.fmdf002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN afmt190_cl USING g_enterprise,g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt190_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE afmt190_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt190_master_referesh USING g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002 INTO g_fmdf_m.fmdfsite, 
       g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt, 
       g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp_desc, 
       g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfcnfid_desc 
 
   
   
   #檢查是否允許此動作
   IF NOT afmt190_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmdf_m_mask_o.* =  g_fmdf_m.*
   CALL afmt190_fmdf_t_mask()
   LET g_fmdf_m_mask_n.* =  g_fmdf_m.*
   
   CALL afmt190_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL afmt190_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_fmdfld_t = g_fmdf_m.fmdfld
      LET g_fmdfdocno_t = g_fmdf_m.fmdfdocno
      LET g_fmdf001_t = g_fmdf_m.fmdf001
      LET g_fmdf002_t = g_fmdf_m.fmdf002
 
 
      DELETE FROM fmdf_t
       WHERE fmdfent = g_enterprise AND fmdfld = g_fmdf_m.fmdfld
         AND fmdfdocno = g_fmdf_m.fmdfdocno
         AND fmdf001 = g_fmdf_m.fmdf001
         AND fmdf002 = g_fmdf_m.fmdf002
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_fmdf_m.fmdfld,":",SQLERRMESSAGE  
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM fmdg_t
       WHERE fmdgent = g_enterprise AND fmdgld = g_fmdf_m.fmdfld
         AND fmdgdocno = g_fmdf_m.fmdfdocno
         AND fmdg001 = g_fmdf_m.fmdf001
         AND fmdg002 = g_fmdf_m.fmdf002
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      #刪除單號
      IF NOT s_aooi200_fin_del_docno(g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt) THEN
         CALL s_transaction_end('N','0')
         CALL cl_err_collect_show()
         RETURN
      END IF
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE afmt190_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_fmdg_d.clear() 
      CALL g_fmdg2_d.clear()       
 
     
      CALL afmt190_ui_browser_refresh()  
      #CALL afmt190_ui_headershow()  
      #CALL afmt190_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL afmt190_browser_fill("")
         CALL afmt190_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE afmt190_cl
 
   #功能已完成,通報訊息中心
   CALL afmt190_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="afmt190.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afmt190_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_fmdg_d.clear()
   CALL g_fmdg2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF afmt190_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT fmdgseq,fmdg003,fmdg004,fmdg005,fmdg006,fmdg007,fmdg008,fmdg009, 
             fmdg100,fmdg103,fmdg113,fmdg101,fmdg114,fmdg115,fmdg035,fmdg034,fmdg033,fmdg123,fmdg121, 
             fmdg124,fmdg125,fmdg133,fmdg131,fmdg134,fmdg135,fmdgseq,fmdg010,fmdg011,fmdg012,fmdg013, 
             fmdg014,fmdg015,fmdg016,fmdg017,fmdg018,fmdg019,fmdg020,fmdg021,fmdg022,fmdg023,fmdg024, 
             fmdg025,fmdg026,fmdg027,fmdg028,fmdg029,fmdg030,fmdg031,fmdg032 ,t1.pmaal003 ,t2.pmaal003 , 
             t3.ooefl003 ,t4.ooefl003 ,t5.oocql004 ,t6.oocql004 ,t7.rtaxl003 ,t8.ooag011 ,t9.pjbal003 , 
             t10.oojdl003 ,t11.oocql004 FROM fmdg_t",   
                     " INNER JOIN fmdf_t ON fmdfent = " ||g_enterprise|| " AND fmdfld = fmdgld ",
                     " AND fmdfdocno = fmdgdocno ",
                     " AND fmdf001 = fmdg001 ",
                     " AND fmdf002 = fmdg002 ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                                    " LEFT JOIN pmaal_t t1 ON t1.pmaalent="||g_enterprise||" AND t1.pmaal001=fmdg010 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent="||g_enterprise||" AND t2.pmaal001=fmdg011 AND t2.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent="||g_enterprise||" AND t3.ooefl001=fmdg012 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=fmdg013 AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent="||g_enterprise||" AND t5.oocql001='287' AND t5.oocql002=fmdg014 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent="||g_enterprise||" AND t6.oocql001='281' AND t6.oocql002=fmdg015 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN rtaxl_t t7 ON t7.rtaxlent="||g_enterprise||" AND t7.rtaxl001=fmdg016 AND t7.rtaxl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=fmdg017  ",
               " LEFT JOIN pjbal_t t9 ON t9.pjbalent="||g_enterprise||" AND t9.pjbal001=fmdg018 AND t9.pjbal002='"||g_dlang||"' ",
               " LEFT JOIN oojdl_t t10 ON t10.oojdlent="||g_enterprise||" AND t10.oojdl001=fmdg021 AND t10.oojdl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t11 ON t11.oocqlent="||g_enterprise||" AND t11.oocql001='2002' AND t11.oocql002=fmdg022 AND t11.oocql003='"||g_dlang||"' ",
 
                     " WHERE fmdgent=? AND fmdgld=? AND fmdgdocno=? AND fmdg001=? AND fmdg002=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY fmdg_t.fmdgseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE afmt190_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR afmt190_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
                                               
      FOREACH b_fill_cs INTO g_fmdg_d[l_ac].fmdgseq,g_fmdg_d[l_ac].fmdg003,g_fmdg_d[l_ac].fmdg004,g_fmdg_d[l_ac].fmdg005, 
          g_fmdg_d[l_ac].fmdg006,g_fmdg_d[l_ac].fmdg007,g_fmdg_d[l_ac].fmdg008,g_fmdg_d[l_ac].fmdg009, 
          g_fmdg_d[l_ac].fmdg100,g_fmdg_d[l_ac].fmdg103,g_fmdg_d[l_ac].fmdg113,g_fmdg_d[l_ac].fmdg101, 
          g_fmdg_d[l_ac].fmdg114,g_fmdg_d[l_ac].fmdg115,g_fmdg_d[l_ac].fmdg035,g_fmdg_d[l_ac].fmdg034, 
          g_fmdg_d[l_ac].fmdg033,g_fmdg_d[l_ac].fmdg123,g_fmdg_d[l_ac].fmdg121,g_fmdg_d[l_ac].fmdg124, 
          g_fmdg_d[l_ac].fmdg125,g_fmdg_d[l_ac].fmdg133,g_fmdg_d[l_ac].fmdg131,g_fmdg_d[l_ac].fmdg134, 
          g_fmdg_d[l_ac].fmdg135,g_fmdg2_d[l_ac].fmdgseq,g_fmdg2_d[l_ac].fmdg010,g_fmdg2_d[l_ac].fmdg011, 
          g_fmdg2_d[l_ac].fmdg012,g_fmdg2_d[l_ac].fmdg013,g_fmdg2_d[l_ac].fmdg014,g_fmdg2_d[l_ac].fmdg015, 
          g_fmdg2_d[l_ac].fmdg016,g_fmdg2_d[l_ac].fmdg017,g_fmdg2_d[l_ac].fmdg018,g_fmdg2_d[l_ac].fmdg019, 
          g_fmdg2_d[l_ac].fmdg020,g_fmdg2_d[l_ac].fmdg021,g_fmdg2_d[l_ac].fmdg022,g_fmdg2_d[l_ac].fmdg023, 
          g_fmdg2_d[l_ac].fmdg024,g_fmdg2_d[l_ac].fmdg025,g_fmdg2_d[l_ac].fmdg026,g_fmdg2_d[l_ac].fmdg027, 
          g_fmdg2_d[l_ac].fmdg028,g_fmdg2_d[l_ac].fmdg029,g_fmdg2_d[l_ac].fmdg030,g_fmdg2_d[l_ac].fmdg031, 
          g_fmdg2_d[l_ac].fmdg032,g_fmdg2_d[l_ac].fmdg010_desc,g_fmdg2_d[l_ac].fmdg011_desc,g_fmdg2_d[l_ac].fmdg012_desc, 
          g_fmdg2_d[l_ac].fmdg013_desc,g_fmdg2_d[l_ac].fmdg014_desc,g_fmdg2_d[l_ac].fmdg015_desc,g_fmdg2_d[l_ac].fmdg016_desc, 
          g_fmdg2_d[l_ac].fmdg017_desc,g_fmdg2_d[l_ac].fmdg018_desc,g_fmdg2_d[l_ac].fmdg021_desc,g_fmdg2_d[l_ac].fmdg022_desc 
 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_fmdg_d.deleteElement(g_fmdg_d.getLength())
   CALL g_fmdg2_d.deleteElement(g_fmdg2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE afmt190_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_fmdg_d.getLength()
      LET g_fmdg_d_mask_o[l_ac].* =  g_fmdg_d[l_ac].*
      CALL afmt190_fmdg_t_mask()
      LET g_fmdg_d_mask_n[l_ac].* =  g_fmdg_d[l_ac].*
   END FOR
   
   LET g_fmdg2_d_mask_o.* =  g_fmdg2_d.*
   FOR l_ac = 1 TO g_fmdg2_d.getLength()
      LET g_fmdg2_d_mask_o[l_ac].* =  g_fmdg2_d[l_ac].*
      CALL afmt190_fmdg_t_mask()
      LET g_fmdg2_d_mask_n[l_ac].* =  g_fmdg2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION afmt190_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM fmdg_t
       WHERE fmdgent = g_enterprise AND
         fmdgld = ps_keys_bak[1] AND fmdgdocno = ps_keys_bak[2] AND fmdg001 = ps_keys_bak[3] AND fmdg002 = ps_keys_bak[4] AND fmdgseq = ps_keys_bak[5]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmdg_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_fmdg2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION afmt190_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO fmdg_t
                  (fmdgent,
                   fmdgld,fmdgdocno,fmdg001,fmdg002,
                   fmdgseq
                   ,fmdg003,fmdg004,fmdg005,fmdg006,fmdg007,fmdg008,fmdg009,fmdg100,fmdg103,fmdg113,fmdg101,fmdg114,fmdg115,fmdg035,fmdg034,fmdg033,fmdg123,fmdg121,fmdg124,fmdg125,fmdg133,fmdg131,fmdg134,fmdg135,fmdg010,fmdg011,fmdg012,fmdg013,fmdg014,fmdg015,fmdg016,fmdg017,fmdg018,fmdg019,fmdg020,fmdg021,fmdg022,fmdg023,fmdg024,fmdg025,fmdg026,fmdg027,fmdg028,fmdg029,fmdg030,fmdg031,fmdg032) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
                   ,g_fmdg_d[g_detail_idx].fmdg003,g_fmdg_d[g_detail_idx].fmdg004,g_fmdg_d[g_detail_idx].fmdg005, 
                       g_fmdg_d[g_detail_idx].fmdg006,g_fmdg_d[g_detail_idx].fmdg007,g_fmdg_d[g_detail_idx].fmdg008, 
                       g_fmdg_d[g_detail_idx].fmdg009,g_fmdg_d[g_detail_idx].fmdg100,g_fmdg_d[g_detail_idx].fmdg103, 
                       g_fmdg_d[g_detail_idx].fmdg113,g_fmdg_d[g_detail_idx].fmdg101,g_fmdg_d[g_detail_idx].fmdg114, 
                       g_fmdg_d[g_detail_idx].fmdg115,g_fmdg_d[g_detail_idx].fmdg035,g_fmdg_d[g_detail_idx].fmdg034, 
                       g_fmdg_d[g_detail_idx].fmdg033,g_fmdg_d[g_detail_idx].fmdg123,g_fmdg_d[g_detail_idx].fmdg121, 
                       g_fmdg_d[g_detail_idx].fmdg124,g_fmdg_d[g_detail_idx].fmdg125,g_fmdg_d[g_detail_idx].fmdg133, 
                       g_fmdg_d[g_detail_idx].fmdg131,g_fmdg_d[g_detail_idx].fmdg134,g_fmdg_d[g_detail_idx].fmdg135, 
                       g_fmdg2_d[g_detail_idx].fmdg010,g_fmdg2_d[g_detail_idx].fmdg011,g_fmdg2_d[g_detail_idx].fmdg012, 
                       g_fmdg2_d[g_detail_idx].fmdg013,g_fmdg2_d[g_detail_idx].fmdg014,g_fmdg2_d[g_detail_idx].fmdg015, 
                       g_fmdg2_d[g_detail_idx].fmdg016,g_fmdg2_d[g_detail_idx].fmdg017,g_fmdg2_d[g_detail_idx].fmdg018, 
                       g_fmdg2_d[g_detail_idx].fmdg019,g_fmdg2_d[g_detail_idx].fmdg020,g_fmdg2_d[g_detail_idx].fmdg021, 
                       g_fmdg2_d[g_detail_idx].fmdg022,g_fmdg2_d[g_detail_idx].fmdg023,g_fmdg2_d[g_detail_idx].fmdg024, 
                       g_fmdg2_d[g_detail_idx].fmdg025,g_fmdg2_d[g_detail_idx].fmdg026,g_fmdg2_d[g_detail_idx].fmdg027, 
                       g_fmdg2_d[g_detail_idx].fmdg028,g_fmdg2_d[g_detail_idx].fmdg029,g_fmdg2_d[g_detail_idx].fmdg030, 
                       g_fmdg2_d[g_detail_idx].fmdg031,g_fmdg2_d[g_detail_idx].fmdg032)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmdg_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_fmdg2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION afmt190_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "fmdg_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL afmt190_fmdg_t_mask_restore('restore_mask_o')
               
      UPDATE fmdg_t 
         SET (fmdgld,fmdgdocno,fmdg001,fmdg002,
              fmdgseq
              ,fmdg003,fmdg004,fmdg005,fmdg006,fmdg007,fmdg008,fmdg009,fmdg100,fmdg103,fmdg113,fmdg101,fmdg114,fmdg115,fmdg035,fmdg034,fmdg033,fmdg123,fmdg121,fmdg124,fmdg125,fmdg133,fmdg131,fmdg134,fmdg135,fmdg010,fmdg011,fmdg012,fmdg013,fmdg014,fmdg015,fmdg016,fmdg017,fmdg018,fmdg019,fmdg020,fmdg021,fmdg022,fmdg023,fmdg024,fmdg025,fmdg026,fmdg027,fmdg028,fmdg029,fmdg030,fmdg031,fmdg032) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
              ,g_fmdg_d[g_detail_idx].fmdg003,g_fmdg_d[g_detail_idx].fmdg004,g_fmdg_d[g_detail_idx].fmdg005, 
                  g_fmdg_d[g_detail_idx].fmdg006,g_fmdg_d[g_detail_idx].fmdg007,g_fmdg_d[g_detail_idx].fmdg008, 
                  g_fmdg_d[g_detail_idx].fmdg009,g_fmdg_d[g_detail_idx].fmdg100,g_fmdg_d[g_detail_idx].fmdg103, 
                  g_fmdg_d[g_detail_idx].fmdg113,g_fmdg_d[g_detail_idx].fmdg101,g_fmdg_d[g_detail_idx].fmdg114, 
                  g_fmdg_d[g_detail_idx].fmdg115,g_fmdg_d[g_detail_idx].fmdg035,g_fmdg_d[g_detail_idx].fmdg034, 
                  g_fmdg_d[g_detail_idx].fmdg033,g_fmdg_d[g_detail_idx].fmdg123,g_fmdg_d[g_detail_idx].fmdg121, 
                  g_fmdg_d[g_detail_idx].fmdg124,g_fmdg_d[g_detail_idx].fmdg125,g_fmdg_d[g_detail_idx].fmdg133, 
                  g_fmdg_d[g_detail_idx].fmdg131,g_fmdg_d[g_detail_idx].fmdg134,g_fmdg_d[g_detail_idx].fmdg135, 
                  g_fmdg2_d[g_detail_idx].fmdg010,g_fmdg2_d[g_detail_idx].fmdg011,g_fmdg2_d[g_detail_idx].fmdg012, 
                  g_fmdg2_d[g_detail_idx].fmdg013,g_fmdg2_d[g_detail_idx].fmdg014,g_fmdg2_d[g_detail_idx].fmdg015, 
                  g_fmdg2_d[g_detail_idx].fmdg016,g_fmdg2_d[g_detail_idx].fmdg017,g_fmdg2_d[g_detail_idx].fmdg018, 
                  g_fmdg2_d[g_detail_idx].fmdg019,g_fmdg2_d[g_detail_idx].fmdg020,g_fmdg2_d[g_detail_idx].fmdg021, 
                  g_fmdg2_d[g_detail_idx].fmdg022,g_fmdg2_d[g_detail_idx].fmdg023,g_fmdg2_d[g_detail_idx].fmdg024, 
                  g_fmdg2_d[g_detail_idx].fmdg025,g_fmdg2_d[g_detail_idx].fmdg026,g_fmdg2_d[g_detail_idx].fmdg027, 
                  g_fmdg2_d[g_detail_idx].fmdg028,g_fmdg2_d[g_detail_idx].fmdg029,g_fmdg2_d[g_detail_idx].fmdg030, 
                  g_fmdg2_d[g_detail_idx].fmdg031,g_fmdg2_d[g_detail_idx].fmdg032) 
         WHERE fmdgent = g_enterprise AND fmdgld = ps_keys_bak[1] AND fmdgdocno = ps_keys_bak[2] AND fmdg001 = ps_keys_bak[3] AND fmdg002 = ps_keys_bak[4] AND fmdgseq = ps_keys_bak[5]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmdg_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmdg_t:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL afmt190_fmdg_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION afmt190_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION afmt190_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION afmt190_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL afmt190_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "fmdg_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN afmt190_bcl USING g_enterprise,
                                       g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
                                           g_fmdg_d[g_detail_idx].fmdgseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "afmt190_bcl:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION afmt190_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE afmt190_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION afmt190_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("fmdfdocno,fmdfld",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("fmdfld,fmdfdocno,fmdf001,fmdf002",TRUE)
      CALL cl_set_comp_entry("fmdfdocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION afmt190_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("fmdfld,fmdfdocno,fmdf001,fmdf002",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("fmdfdocno,fmdfld",FALSE)
   END IF 
 
   IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("fmdfdocdt",FALSE)
      END IF
   END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION afmt190_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION afmt190_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION afmt190_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION afmt190_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:2)
   IF g_fmdf_m.fmdfstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF



   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION afmt190_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION afmt190_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION afmt190_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " fmdfld = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " fmdfdocno = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " fmdf001 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " fmdf002 = '", g_argv[04], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "fmdf_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "fmdg_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION afmt190_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_glaa121      LIKE glaa_t.glaa121
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_wc           STRING
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
 
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_fmdf_m.fmdfld IS NULL
      OR g_fmdf_m.fmdfdocno IS NULL      OR g_fmdf_m.fmdf001 IS NULL      OR g_fmdf_m.fmdf002 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN afmt190_cl USING g_enterprise,g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002
   IF STATUS THEN
      CLOSE afmt190_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt190_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE afmt190_master_referesh USING g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002 INTO g_fmdf_m.fmdfsite, 
       g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtdp, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfdt, 
       g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp_desc, 
       g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfcnfid_desc 
 
   
 
   #檢查是否允許此動作
   IF NOT afmt190_action_chk() THEN
      CLOSE afmt190_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmdf_m.fmdfsite,g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp, 
       g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
       g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfownid_desc,g_fmdf_m.fmdfowndp, 
       g_fmdf_m.fmdfowndp_desc,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp,g_fmdf_m.fmdfcrtdp_desc, 
       g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid, 
       g_fmdf_m.fmdfcnfid_desc,g_fmdf_m.fmdfcnfdt
 
   CASE g_fmdf_m.fmdfstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   SELECT glaa121 INTO l_glaa121 FROM glaa_t
    WHERE glaaent = g_enterprise
      AND glaald = g_fmdf_m.fmdfld
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_fmdf_m.fmdfstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      CALL s_transaction_begin()
      CALL cl_err_collect_init()
      LET l_success=TRUE
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT afmt190_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt190_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT afmt190_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt190_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            CALL s_afmp040_conf_chk(g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfld) RETURNING l_success
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      ) OR 
      g_fmdf_m.fmdfstus = lc_state OR cl_null(lc_state) THEN
      CLOSE afmt190_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   IF l_glaa121 = 'Y' AND l_success = TRUE THEN 
      LET l_wc = "glgadocno = '",g_fmdf_m.fmdfdocno,"'"
      CALL s_pre_voucher_upd('FM','M19',g_fmdf_m.fmdfld,lc_state,'','',l_wc) RETURNING l_success
   END IF
   
   CALL cl_err_collect_show()
   IF l_success = FALSE THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   LET g_fmdf_m.fmdfmodid = g_user
   LET g_fmdf_m.fmdfmoddt = cl_get_current()
   LET g_fmdf_m.fmdfstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE fmdf_t 
      SET (fmdfstus,fmdfmodid,fmdfmoddt) 
        = (g_fmdf_m.fmdfstus,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt)     
    WHERE fmdfent = g_enterprise AND fmdfld = g_fmdf_m.fmdfld
      AND fmdfdocno = g_fmdf_m.fmdfdocno      AND fmdf001 = g_fmdf_m.fmdf001      AND fmdf002 = g_fmdf_m.fmdf002
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE afmt190_master_referesh USING g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002 INTO g_fmdf_m.fmdfsite, 
          g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001,g_fmdf_m.fmdf002, 
          g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfcrtid, 
          g_fmdf_m.fmdfcrtdp,g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmoddt,g_fmdf_m.fmdfcnfid, 
          g_fmdf_m.fmdfcnfdt,g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld_desc,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfownid_desc, 
          g_fmdf_m.fmdfowndp_desc,g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfmodid_desc, 
          g_fmdf_m.fmdfcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_fmdf_m.fmdfsite,g_fmdf_m.fmdfsite_desc,g_fmdf_m.fmdfld,g_fmdf_m.fmdfld_desc, 
          g_fmdf_m.fmdfcomp,g_fmdf_m.fmdfcomp_desc,g_fmdf_m.fmdfdocno,g_fmdf_m.fmdfdocdt,g_fmdf_m.fmdf001, 
          g_fmdf_m.fmdf002,g_fmdf_m.fmdf003,g_fmdf_m.fmdfstus,g_fmdf_m.fmdfownid,g_fmdf_m.fmdfownid_desc, 
          g_fmdf_m.fmdfowndp,g_fmdf_m.fmdfowndp_desc,g_fmdf_m.fmdfcrtid,g_fmdf_m.fmdfcrtid_desc,g_fmdf_m.fmdfcrtdp, 
          g_fmdf_m.fmdfcrtdp_desc,g_fmdf_m.fmdfcrtdt,g_fmdf_m.fmdfmodid,g_fmdf_m.fmdfmodid_desc,g_fmdf_m.fmdfmoddt, 
          g_fmdf_m.fmdfcnfid,g_fmdf_m.fmdfcnfid_desc,g_fmdf_m.fmdfcnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE afmt190_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt190_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt190.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION afmt190_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_fmdg_d.getLength() THEN
         LET g_detail_idx = g_fmdg_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmdg_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmdg_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_fmdg2_d.getLength() THEN
         LET g_detail_idx = g_fmdg2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmdg2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmdg2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afmt190_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL afmt190_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION afmt190_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt190.status_show" >}
PRIVATE FUNCTION afmt190_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="afmt190.mask_functions" >}
&include "erp/afm/afmt190_mask.4gl"
 
{</section>}
 
{<section id="afmt190.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION afmt190_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL afmt190_show()
   CALL afmt190_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_fmdf_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_fmdg_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_fmdg2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL afmt190_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt190_ui_headershow()
   CALL afmt190_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION afmt190_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt190_ui_headershow()  
   CALL afmt190_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="afmt190.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION afmt190_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_fmdf_m.fmdfld
   LET g_pk_array[1].column = 'fmdfld'
   LET g_pk_array[2].values = g_fmdf_m.fmdfdocno
   LET g_pk_array[2].column = 'fmdfdocno'
   LET g_pk_array[3].values = g_fmdf_m.fmdf001
   LET g_pk_array[3].column = 'fmdf001'
   LET g_pk_array[4].values = g_fmdf_m.fmdf002
   LET g_pk_array[4].column = 'fmdf002'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt190.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="afmt190.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION afmt190_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL afmt190_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_fmdf_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt190.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION afmt190_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#12 2016/08/24 By 07900  --add--s--
   SELECT fmdfstus INTO g_fmdf_m.fmdfstus
     FROM fmdf_t
    WHERE fmdfent = g_enterprise
      AND fmdfdocno = g_fmdf_m.fmdfdocno
      AND fmdfld = g_fmdf_m.fmdfld
      AND fmdf001 = g_fmdf_m.fmdf001
      AND fmdf002 = g_fmdf_m.fmdf002
      
   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_fmdf_m.fmdfstus
       
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_fmdf_m.fmdfdocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL afmt190_set_act_visible()
        CALL afmt190_set_act_no_visible()
        CALL afmt190_show()
        RETURN FALSE
     END IF
   END IF
   
   
   #160818-00017#12 2016/08/24 By 07900  --add--e--
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt190.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 整批產生
# Memo...........:
# Usage..........: CALL afmt190_01()
#                  RETURNING ---
# Input parameter: 
# Return code....: 
# Date & Author..: 2016/02/25 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt190_01()
   DEFINE l_fmdf         RECORD
           fmdfsite      LIKE fmdf_t.fmdfsite,
           fmdfsite_desc LIKE ooefl_t.ooefl003,
           fmdfld        LIKE fmdf_t.fmdfld,
           fmdfld_desc   LIKE glaal_t.glaal002,
           fmdfdocno     LIKE fmdf_t.fmdfdocno,
           fmdf001       LIKE fmdf_t.fmdf001,
           fmdf002       LIKE fmdf_t.fmdf002
                         END RECORD
   DEFINE t_fmdf         RECORD
           fmdfsite      LIKE fmdf_t.fmdfsite,
           fmdfsite_desc LIKE ooefl_t.ooefl003,
           fmdfld        LIKE fmdf_t.fmdfld,
           fmdfld_desc   LIKE glaal_t.glaal002,
           fmdfdocno     LIKE fmdf_t.fmdfdocno,
           fmdf001       LIKE fmdf_t.fmdf001,
           fmdf002       LIKE fmdf_t.fmdf002
                         END RECORD
   DEFINE l_fmdfcomp     LIKE fmdf_t.fmdfcomp
   DEFINE l_success      LIKE type_t.num5
   DEFINE l_ooef017      LIKE ooef_t.ooef017
   DEFINE l_flag         LIKE fmdf_t.fmdfdocdt
   DEFINE l_glaa024      LIKE glaa_t.glaa024
   DEFINE ls_wc          STRING
   DEFINE l_fmdfdocno    LIKE fmdf_t.fmdfdocno

   INITIALIZE l_fmdf.* TO NULL
   INITIALIZE t_fmdf.* TO NULL

   OPEN WINDOW w_afmt190_s01 WITH FORM cl_ap_formpath("afm","afmt190_s01")
   CALL s_fin_set_comp_scc('fmdf001','43')
   CALL s_fin_set_comp_scc('fmdf002','111')
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #輸入開始
      INPUT BY NAME l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc,l_fmdf.fmdfld,l_fmdf.fmdfld_desc,l_fmdf.fmdfdocno,
                    l_fmdf.fmdf001,l_fmdf.fmdf002

         BEFORE INPUT
            IF cl_null(l_fmdf.fmdfld) THEN
               #取得預設的帳務中心,因新增階段的時候,並不會知道site,所以以登入人員做為依據
               CALL s_fin_get_account_center('',g_user,'3',g_today) RETURNING l_success,l_fmdf.fmdfsite,g_errno
               #該帳務中心與帳別無法勾稽到,以登入人員g_user取得預設帳別/法人
               CALL s_fin_orga_get_comp_ld(l_fmdf.fmdfsite) RETURNING l_success,g_errno,l_fmdfcomp,l_fmdf.fmdfld

               SELECT ooef017 INTO l_ooef017 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = l_fmdf.fmdfsite
               LET l_flag = cl_get_para(g_enterprise,l_ooef017,'S-FIN-2007')   #关账日期

               LET l_fmdf.fmdf001 = YEAR(l_flag)
               LET l_fmdf.fmdf002 = MONTH(l_flag)
               CALL s_desc_get_department_desc(l_fmdf.fmdfsite) RETURNING l_fmdf.fmdfsite_desc
               CALL s_desc_get_ld_desc(l_fmdf.fmdfld) RETURNING l_fmdf.fmdfld_desc
            END IF

         AFTER FIELD fmdfsite
            IF NOT cl_null(l_fmdf.fmdfsite) THEN
               CALL s_axrt300_site_geared_ld(l_fmdf.fmdfsite,l_fmdf.fmdfld,g_user,g_today,'site')
                  RETURNING l_success,l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc,l_fmdf.fmdfld,l_fmdf.fmdfld_desc
               DISPLAY BY NAME l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc
               DISPLAY BY NAME l_fmdf.fmdfld,l_fmdf.fmdfld_desc
               IF NOT l_success THEN NEXT FIELD CURRENT END IF
            ELSE
               LET l_fmdf.fmdfsite_desc = ''
            END IF
            DISPLAY BY NAME l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc
            DISPLAY BY NAME l_fmdf.fmdfld,l_fmdf.fmdfld_desc

         AFTER FIELD fmdfld
            IF NOT cl_null(l_fmdf.fmdfld) THEN
               CALL s_axrt300_site_geared_ld(l_fmdf.fmdfsite,l_fmdf.fmdfld,g_user,g_today,'ld')
                  RETURNING l_success,l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc,l_fmdf.fmdfld,l_fmdf.fmdfld_desc
               DISPLAY BY NAME l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc
               DISPLAY BY NAME l_fmdf.fmdfld,l_fmdf.fmdfld_desc
               IF NOT l_success THEN
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET l_fmdf.fmdfld_desc = ''
            END IF
            DISPLAY BY NAME l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc
            DISPLAY BY NAME l_fmdf.fmdfld,l_fmdf.fmdfld_desc

         AFTER FIELD fmdfdocno
            IF NOT cl_null(l_fmdf.fmdfdocno) THEN
               CALL s_ld_sel_glaa(l_fmdf.fmdfld,'glaa024') RETURNING g_sub_success,l_glaa024
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = l_glaa024
               LET g_chkparam.arg2 = l_fmdf.fmdfdocno
               IF NOT s_aooi200_fin_chk_slip(l_fmdf.fmdfld,l_glaa024,l_fmdf.fmdfdocno,'afmt190') THEN
                  LET l_fmdf.fmdfdocno = ''
                  NEXT FIELD CURRENT
               END IF
            END IF

         ON ACTION controlp INFIELD fmdfsite
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = l_fmdf.fmdfsite             #給予default值
            #LET g_qryparam.where = " ooef201 = 'Y' "   #161006-00005#14   mark 
            #CALL q_ooef001()     #161006-00005#14   mark                    
            CALL q_ooef001_46()   #161006-00005#14   add
            LET l_fmdf.fmdfsite = g_qryparam.return1              #將開窗取得的值回傳到變數
            CALL s_axrt300_xrca_ref('fmdfsite',l_fmdf.fmdfsite,'','') RETURNING l_success,l_fmdf.fmdfsite_desc
            IF NOT cl_null(l_fmdf.fmdfsite) THEN
               CALL s_axrt300_site_geared_ld(l_fmdf.fmdfsite,l_fmdf.fmdfld,g_user,g_today,'site')
                  RETURNING l_success,l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc,l_fmdf.fmdfld,l_fmdf.fmdfld_desc
            END IF
            DISPLAY BY NAME l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc
            DISPLAY BY NAME l_fmdf.fmdfld,l_fmdf.fmdfld_desc
            DISPLAY BY NAME l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc
            NEXT FIELD fmdfsite

         ON ACTION controlp INFIELD fmdfld
            CALL s_fin_create_account_center_tmp()
            #取得帳務組織下所屬成員
            CALL s_fin_account_center_sons_query('3',l_fmdf.fmdfsite,g_today,'1')
            #取得帳務組織下所屬成員之帳別
            CALL s_fin_account_center_comp_str() RETURNING ls_wc
            #將取回的字串轉換為SQL條件
            CALL afmt190_get_ooef001_wc(ls_wc) RETURNING ls_wc
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = l_fmdf.fmdfld             #給予default值
            IF NOT cl_null(ls_wc) AND ls_wc <> '(\'\')' THEN
               LET g_qryparam.where = " (glaa008 = 'Y' OR glaa014 = 'Y') AND glaacomp IN ",ls_wc,""
            ELSE
               LET g_qryparam.where = " (glaa008 = 'Y' OR glaa014 = 'Y')"
            END IF
            LET g_qryparam.arg1 = g_user
            LET g_qryparam.arg2 = g_dept
            CALL  q_authorised_ld()                                  #呼叫開窗
            LET l_fmdf.fmdfld = g_qryparam.return1       #將開窗取得的值回傳到變數
            IF NOT cl_null(l_fmdf.fmdfld) THEN
               CALL s_axrt300_site_geared_ld(l_fmdf.fmdfsite,l_fmdf.fmdfld,g_user,g_today,'ld')
                  RETURNING l_success,l_fmdf.fmdfsite,l_fmdf.fmdfsite_desc,l_fmdf.fmdfld,l_fmdf.fmdfld_desc
            END IF
            DISPLAY BY NAME l_fmdf.fmdfld,l_fmdf.fmdfld_desc
            NEXT FIELD fmdfld                              #返回原欄位

         ON ACTION controlp INFIELD fmdfdocno
            CALL s_ld_sel_glaa(l_fmdf.fmdfld,'glaa024') RETURNING g_sub_success,l_glaa024
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = l_fmdf.fmdfdocno             #給予default值
            #給予arg
            LET g_qryparam.arg1 = l_glaa024
            #LET g_qryparam.arg2 = 'afmt190'     #160705-00042#2 160711 by sakura mark
            LET g_qryparam.arg2 = g_prog         #160705-00042#2 160711 by sakura add
            CALL q_ooba002_1()                                #呼叫開窗
            LET l_fmdf.fmdfdocno = g_qryparam.return1
            DISPLAY l_fmdf.fmdfdocno TO fmdfdocno              #
            NEXT FIELD fmdfdocno                          #返回原欄位

         AFTER INPUT
            CALL afmt190_chk(l_fmdf.fmdfsite,l_fmdf.fmdfld,l_fmdf.fmdf001,l_fmdf.fmdf002)
               RETURNING l_success
            IF NOT l_success THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = "afm-00244" 
               LET g_errparam.replace[1] = l_fmdf.fmdfld
               LET g_errparam.replace[2] = l_fmdf.fmdf001
               LET g_errparam.replace[3] = l_fmdf.fmdf002
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               NEXT FIELD fmdfsite
            ELSE
               IF NOT cl_null(g_errno) THEN
                  IF NOT cl_ask_confirm(g_errno) THEN
                     NEXT FIELD fmdfsite
                  END IF
               END IF
            END IF

      END INPUT

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit
         LET INT_FLAG = TRUE
         EXIT DIALOG

   END DIALOG

   #畫面關閉
   CLOSE WINDOW w_afmt190_s01

   LET l_fmdfdocno = ''
   IF NOT INT_FLAG THEN
      CALL s_transaction_begin()
      CALL cl_err_collect_init()
      CALL s_afmp040_get_fmdf(l_fmdf.fmdfsite,l_fmdf.fmdfld,l_fmdf.fmdfdocno,l_fmdf.fmdf001,l_fmdf.fmdf002)
         RETURNING g_success,l_fmdfdocno
      IF g_success = 'N' THEN
         CALL cl_err_collect_show()
         CALL s_transaction_end('N','0')
      ELSE
         CALL s_transaction_end('Y','0')
         CALL cl_err_collect_show()  
      END IF
   END IF

   IF NOT cl_null(l_fmdfdocno) THEN   #組合新增資料的條件
      IF g_wc = " 1=2" THEN LET g_wc = " 1=1" END IF
      LET g_add_browse = "  fmdfdocno = '",l_fmdfdocno, "' "

      #根據資料狀態切換action狀態
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
      CALL afmt190_set_act_visible()   
      CALL afmt190_set_act_no_visible()

      #填到最後面
      LET g_current_idx = g_browser.getLength() + 1
      CALL afmt190_browser_fill("")
   
      DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
      CALL afmt190_ui_headershow()
   END IF

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt190_get_ooef001_wc(p_wc)
   DEFINE p_wc       STRING
   DEFINE r_wc       STRING
   DEFINE tok        base.StringTokenizer
   DEFINE l_str      STRING

   LET tok = base.StringTokenizer.create(p_wc,",")
   WHILE tok.hasMoreTokens()
      IF cl_null(l_str) THEN
         LET l_str = tok.nextToken()
      ELSE
         LET l_str = l_str,"','",tok.nextToken()
      END IF      
   END WHILE   
   LET r_wc = "('",l_str,"')"
   
   RETURN r_wc

END FUNCTION

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt190_chk(p_fmdfsite,p_fmdfld,p_fmdf001,p_fmdf002)
   DEFINE p_fmdfsite      LIKE fmdf_t.fmdfsite
   DEFINE p_fmdfld        LIKE fmdf_t.fmdfld
   DEFINE p_fmdf001       LIKE fmdf_t.fmdf001
   DEFINE p_fmdf002       LIKE fmdf_t.fmdf002
   DEFINE r_success       LIKE type_t.num5
   DEFINE l_count         LIKE type_t.num5

   LET g_errno = " "
   LET r_success = TRUE

   LET l_count = 0
   SELECT COUNT(*) INTO l_count FROM fmdf_t
    WHERE fmdfent = g_enterprise
      AND fmdfld = p_fmdfld
      AND fmdfsite = p_fmdfsite
      AND fmdf001 = p_fmdf001
      AND fmdf002 = p_fmdf002
      AND fmdfstus <> 'X'

   IF cl_null(l_count) THEN LET l_count = 0 END IF

   IF l_count = 1 THEN
      LET g_errno = 'afm-00235'
   END IF

   LET l_count = 0
   SELECT COUNT(*) INTO l_count FROM fmdf_t
    WHERE fmdfent = g_enterprise
      AND fmdfld = p_fmdfld
      AND fmdfsite = p_fmdfsite
      AND fmdf001 = p_fmdf001
      AND fmdf002 = p_fmdf002
      AND fmdfstus = 'Y'

   IF cl_null(l_count) THEN LET l_count = 0 END IF

   IF l_count = 1 THEN
      LET r_success = FALSE
   END IF

   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 產生傳票/查詢傳票
# Memo...........:
# Usage..........: CALL afmt190_get_gl()
#                  RETURNING ----
# Input parameter: 
# Return code....: 
# Date & Author..: 2016/03/14 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt190_get_gl()
   DEFINE l_success         LIKE type_t.num5
   DEFINE l_slip            LIKE fmdf_t.fmdfdocno
   DEFINE l_dfin0030        LIKE type_t.chr1
   DEFINE l_glap001         LIKE glap_t.glap001
   DEFINE l_wc              STRING
   DEFINE la_param          RECORD
          prog              STRING,
          actionid          STRING,
          background        LIKE type_t.chr1,
          param             DYNAMIC ARRAY OF STRING
                            END RECORD
   DEFINE ls_js             STRING
   DEFINE l_laa121          LIKE glaa_t.glaa121
   DEFINE l_date            LIKE fmdf_t.fmdfdocdt

   LET l_success = TRUE

   IF g_fmdf_m.fmdfdocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code   = "std-00003"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN
   END IF

   #已拋轉傳票查詢總帳傳票
   IF NOT cl_null(g_fmdf_m.fmdf003) THEN
      LET l_glap001 = ''
      SELECT glap001 INTO l_glap001 FROM glap_t
       WHERE glapent = g_enterprise AND glapld = g_fmdf_m.fmdfld
         AND glapdocno = g_fmdf_m.fmdf003
      IF NOT l_glap001 MATCHES '[1235]' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'sub-00029'
         LET g_errparam.extend = g_fmdf_m.fmdfdocno
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN
      ELSE
         LET la_param.prog = 'aglt310'
         LET la_param.param[1] = g_fmdf_m.fmdfld
         LET la_param.param[2] = g_fmdf_m.fmdf003
         LET ls_js = util.JSON.stringify( la_param )
         CALL cl_cmdrun_wait(ls_js)
      END IF
      RETURN
   END IF

   #未確認單據不可拋轉
   IF g_fmdf_m.fmdfstus <> 'Y' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = g_fmdf_m.fmdfdocno
      LET g_errparam.code   = "anm-00185"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN
   END IF

   #單別設置不拋轉總帳者不可拋轉
   CALL s_aooi200_fin_get_slip(g_fmdf_m.fmdfdocno) RETURNING l_success,l_slip
   CALL s_fin_get_doc_para(g_fmdf_m.fmdfld,g_fmdf_m.fmdfcomp,l_slip,'D-FIN-0030') RETURNING l_dfin0030
   IF l_dfin0030 MATCHES "[Nn]" THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = l_slip
      LET g_errparam.code   = 'axr-00225'
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN
   END IF

   #CALL axrp330_01(g_fmdf_m.fmdfld) RETURNING l_slip,l_date                        #160620-00010#2 mark
   CALL axrp330_01(g_fmdf_m.fmdfld,g_fmdf_m.fmdfdocdt) RETURNING l_slip,l_date       #160620-00010#2 add
   IF cl_null(l_slip) OR cl_null(l_date) THEN
      RETURN
   END IF

   CALL cl_err_collect_init()
   CALL s_transaction_begin()

   SELECT glaa121 INTO l_laa121 FROM glaa_t WHERE glaaent = g_enterprise
     AND glaald = g_fmdf_m.fmdfld

   IF l_laa121 = 'Y' THEN
      LET l_wc =" glgbdocno = '",g_fmdf_m.fmdfdocno,"' "
      CALL s_pre_voucher_ins_glap('FM','M19',g_fmdf_m.fmdfld,l_date,l_slip,'1',l_wc)
           RETURNING g_sub_success,g_fmdf_m.fmdf003,g_fmdf_m.fmdf003
   ELSE
      LET l_wc =" fmdfdocno = '",g_fmdf_m.fmdfdocno,"' "
      CALL s_afmt145_gen_fm('19',g_fmdf_m.fmdfld,l_date,l_slip,'0',l_wc,'N',g_prog)
        RETURNING g_sub_success,g_fmdf_m.fmdf003,g_fmdf_m.fmdf003
   END IF
   CALL cl_err_collect_show()
               
   IF g_sub_success THEN
      UPDATE glga_t SET glga007 = g_fmdf_m.fmdf003
       WHERE glgaent = g_enterprise AND glgald = g_fmdf_m.fmdfld
         AND glgadocno=g_fmdf_m.fmdfdocno AND glga100 = 'FM' AND glga101 = 'M19'
      CALL s_transaction_end('Y','0')
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'adz-00217'
      LET g_errparam.popup = TRUE
      CALL cl_err()
   ELSE
      IF cl_null(g_fmdf_m.fmdf003) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ''
         LET g_errparam.code   = 'axc-00530'
         LET g_errparam.popup = TRUE
         CALL cl_err()
      ELSE
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ''
         LET g_errparam.code   = 'axr-00120'
         LET g_errparam.popup = TRUE
         CALL cl_err()
      END IF
      CALL s_transaction_end('N','0')
   END IF

   CALL afmt190_ui_headershow()

END FUNCTION
################################################################################
# Descriptions...: 傳票還原
# Memo...........:
# Usage..........: CALL afmt190_get_ungl()
#                  RETURNING ----
# Input parameter: 
# Return code....: 
# Date & Author..: 2016/03/14 By 01727
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt190_get_ungl()
   DEFINE l_success         LIKE type_t.num5
   DEFINE l_slip            LIKE fmdf_t.fmdfdocno
   DEFINE l_dfin0030        LIKE type_t.chr1
   DEFINE l_glap001         LIKE glap_t.glap001
   DEFINE l_wc              STRING
   DEFINE la_param          RECORD
          prog              STRING,
          actionid          STRING,
          background        LIKE type_t.chr1,
          param             DYNAMIC ARRAY OF STRING
                            END RECORD
   DEFINE ls_js             STRING
   DEFINE l_laa121          LIKE glaa_t.glaa121
   DEFINE l_date            LIKE fmdf_t.fmdfdocdt
   DEFINE l_stus            LIKE glap_t.glapstus
   DEFINE l_glapdocdt       LIKE glap_t.glapdocdt

   #傳票還原
   IF g_fmdf_m.fmdfdocno IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code   = "std-00003"
      LET g_errparam.popup  = FALSE
      CALL cl_err()
      RETURN
   END IF

   #無傳票 不可還原
   IF g_fmdf_m.fmdf003 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = ""
      LET g_errparam.code   = "anm-00186"
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      RETURN
   END IF

   SELECT glapstus,glapdocdt INTO l_stus,l_glapdocdt FROM glap_t
    WHERE glapent = g_enterprise
      AND glapdocno = g_fmdf_m.fmdf003

  #傳票還原單據日期不可小於等於過帳日期
   CALL s_afm_close_day_chk(g_fmdf_m.fmdfld,l_glapdocdt) RETURNING g_sub_success,g_errno
   IF NOT g_sub_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = g_errno
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF

  #傳票已經確認不可還原
   #IF l_stus = 'Y' THEN             #161011-00019#1 mark
   IF l_stus NOT MATCHES '[N]' THEN  #161011-00019#1 add
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'axr-00076'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF

   INITIALIZE la_param.* TO NULL
   LET la_param.prog = 'afmp030'
   LET la_param.param[1] = g_fmdf_m.fmdfld
   LET la_param.param[2] = g_fmdf_m.fmdfcomp
   LET la_param.param[3] = 'FM'
   LET la_param.param[4] = g_fmdf_m.fmdf003
   LET ls_js = util.JSON.stringify( la_param )
   CALL cl_cmdrun_wait(ls_js)

   CALL afmt190_ui_headershow()

END FUNCTION

 
{</section>}
 
