#該程式未解開Section, 採用最新樣板產出!
{<section id="afmt180.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0006(2016-09-28 14:43:28), PR版次:0006(2017-01-06 19:25:49)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000050
#+ Filename...: afmt180
#+ Description: 融資計提利息維護
#+ Creator....: 06862(2015-11-19 18:03:14)
#+ Modifier...: 08729 -SD/PR- 08729
 
{</section>}
 
{<section id="afmt180.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
#Modify.........: No.151125-00001#2 15/11/27 By catmoon 作廢前詢問「是否執行作廢？」
#160302-00029#1  2016/03/13 By 01727   增加摘要栏位,且可以修改
#160302-00029#3  2016/03/29 By 01727   增加其他本位幣頁簽
#160818-00017#12 2016/08/24 By 07900   删除修改未重新判断状态码
#160912-00014#3  2016/10/04 By 08729   新增列印時串查到afmr180,將原本鎖掉的列印開啟
#161006-00005#34 2016/10/28 By 08732   組織類型與職能開窗調整
#161104-00046#15 2017/01/06 By 08729   單別預設值;資料依照單別user dept權限過濾單號
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_fmcy_m        RECORD
       fmcysite LIKE fmcy_t.fmcysite, 
   fmcysite_desc LIKE type_t.chr80, 
   fmcycomp LIKE fmcy_t.fmcycomp, 
   fmcycomp_desc LIKE type_t.chr80, 
   fmcy001 LIKE fmcy_t.fmcy001, 
   fmcy002 LIKE fmcy_t.fmcy002, 
   fmcydocno LIKE fmcy_t.fmcydocno, 
   fmcydocdt LIKE fmcy_t.fmcydocdt, 
   fmcystus LIKE fmcy_t.fmcystus, 
   fmcyownid LIKE fmcy_t.fmcyownid, 
   fmcyownid_desc LIKE type_t.chr80, 
   fmcyowndp LIKE fmcy_t.fmcyowndp, 
   fmcyowndp_desc LIKE type_t.chr80, 
   fmcycrtid LIKE fmcy_t.fmcycrtid, 
   fmcycrtid_desc LIKE type_t.chr80, 
   fmcycrtdp LIKE fmcy_t.fmcycrtdp, 
   fmcycrtdp_desc LIKE type_t.chr80, 
   fmcycrtdt LIKE fmcy_t.fmcycrtdt, 
   fmcymodid LIKE fmcy_t.fmcymodid, 
   fmcymodid_desc LIKE type_t.chr80, 
   fmcymoddt LIKE fmcy_t.fmcymoddt, 
   fmcycnfid LIKE fmcy_t.fmcycnfid, 
   fmcycnfid_desc LIKE type_t.chr80, 
   fmcycnfdt LIKE fmcy_t.fmcycnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_fmcz_d        RECORD
       fmczseq LIKE fmcz_t.fmczseq, 
   fmcz016 LIKE fmcz_t.fmcz016, 
   fmcz017 LIKE fmcz_t.fmcz017, 
   fmcz001 LIKE fmcz_t.fmcz001, 
   fmcz002 LIKE fmcz_t.fmcz002, 
   fmcz003 LIKE fmcz_t.fmcz003, 
   fmcz018 LIKE fmcz_t.fmcz018, 
   fmcz004 LIKE fmcz_t.fmcz004, 
   fmcz005 LIKE fmcz_t.fmcz005, 
   fmcz006 LIKE fmcz_t.fmcz006, 
   fmcz003_desc LIKE type_t.chr500, 
   fmcz007 LIKE fmcz_t.fmcz007, 
   fmcz008 LIKE fmcz_t.fmcz008, 
   fmcz009 LIKE fmcz_t.fmcz009, 
   fmcz010 LIKE fmcz_t.fmcz010, 
   fmcz011 LIKE fmcz_t.fmcz011, 
   fmcz023 LIKE fmcz_t.fmcz023
       END RECORD
PRIVATE TYPE type_g_fmcz2_d RECORD
       fmczseq LIKE fmcz_t.fmczseq, 
   fmcz016_desc LIKE type_t.chr20, 
   fmcz017_desc LIKE type_t.num10, 
   fmcz002_desc LIKE type_t.chr20, 
   fmcz003_desc1 LIKE type_t.num10, 
   fmcz018_desc LIKE type_t.num10, 
   fmcz004_desc LIKE type_t.chr1, 
   fmcz009_desc LIKE type_t.num20_6, 
   fmcz010_desc LIKE type_t.num26_10, 
   fmcz011_desc LIKE type_t.num20_6, 
   fmcz012 LIKE fmcz_t.fmcz012, 
   fmcz013 LIKE fmcz_t.fmcz013, 
   fmcz014 LIKE fmcz_t.fmcz014, 
   fmcz015 LIKE fmcz_t.fmcz015
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_fmcydocno LIKE fmcy_t.fmcydocno
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_glaa015        LIKE glaa_t.glaa015
DEFINE g_glaa019        LIKE glaa_t.glaa019
DEFINE g_wc_cs_comp     STRING #161006-00005#34   add
DEFINE g_user_dept_wc        STRING #161104-00046#15
DEFINE g_user_dept_wc_q      STRING #161104-00046#15
#end add-point
       
#模組變數(Module Variables)
DEFINE g_fmcy_m          type_g_fmcy_m
DEFINE g_fmcy_m_t        type_g_fmcy_m
DEFINE g_fmcy_m_o        type_g_fmcy_m
DEFINE g_fmcy_m_mask_o   type_g_fmcy_m #轉換遮罩前資料
DEFINE g_fmcy_m_mask_n   type_g_fmcy_m #轉換遮罩後資料
 
   DEFINE g_fmcydocno_t LIKE fmcy_t.fmcydocno
 
 
DEFINE g_fmcz_d          DYNAMIC ARRAY OF type_g_fmcz_d
DEFINE g_fmcz_d_t        type_g_fmcz_d
DEFINE g_fmcz_d_o        type_g_fmcz_d
DEFINE g_fmcz_d_mask_o   DYNAMIC ARRAY OF type_g_fmcz_d #轉換遮罩前資料
DEFINE g_fmcz_d_mask_n   DYNAMIC ARRAY OF type_g_fmcz_d #轉換遮罩後資料
DEFINE g_fmcz2_d          DYNAMIC ARRAY OF type_g_fmcz2_d
DEFINE g_fmcz2_d_t        type_g_fmcz2_d
DEFINE g_fmcz2_d_o        type_g_fmcz2_d
DEFINE g_fmcz2_d_mask_o   DYNAMIC ARRAY OF type_g_fmcz2_d #轉換遮罩前資料
DEFINE g_fmcz2_d_mask_n   DYNAMIC ARRAY OF type_g_fmcz2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
 
#end add-point
 
{</section>}
 
{<section id="afmt180.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afm","")
 
   #add-point:作業初始化 name="main.init"
   #161104-00046#15-add(s)
   #建立與單頭array相同的temptable
   CALL s_aooi200def_create('','g_fmcy_m','','','','','','')RETURNING g_sub_success
   
   #單別控制組
   LET g_user_dept_wc = ''
   CALL s_fin_get_user_dept_control('fmcycomp','','fmcyent','fmcydocno') RETURNING g_user_dept_wc
   #開窗使用
   LET g_user_dept_wc_q = g_user_dept_wc
   
   #CALL s_control_get_docno_sql(g_user,g_dept) RETURNING g_sub_success,g_user_slip_wc  
   #161104-00046#15-add(e)
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT fmcysite,'',fmcycomp,'',fmcy001,fmcy002,fmcydocno,fmcydocdt,fmcystus, 
       fmcyownid,'',fmcyowndp,'',fmcycrtid,'',fmcycrtdp,'',fmcycrtdt,fmcymodid,'',fmcymoddt,fmcycnfid, 
       '',fmcycnfdt", 
                      " FROM fmcy_t",
                      " WHERE fmcyent= ? AND fmcydocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt180_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.fmcysite,t0.fmcycomp,t0.fmcy001,t0.fmcy002,t0.fmcydocno,t0.fmcydocdt, 
       t0.fmcystus,t0.fmcyownid,t0.fmcyowndp,t0.fmcycrtid,t0.fmcycrtdp,t0.fmcycrtdt,t0.fmcymodid,t0.fmcymoddt, 
       t0.fmcycnfid,t0.fmcycnfdt,t1.ooefl003 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 , 
       t7.ooag011 ,t8.ooag011",
               " FROM fmcy_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.fmcysite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent="||g_enterprise||" AND t2.ooefl001=t0.fmcycomp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.fmcyownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.fmcyowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.fmcycrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.fmcycrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.fmcymodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.fmcycnfid  ",
 
               " WHERE t0.fmcyent = " ||g_enterprise|| " AND t0.fmcydocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE afmt180_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afmt180 WITH FORM cl_ap_formpath("afm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afmt180_init()   
 
      #進入選單 Menu (="N")
      CALL afmt180_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_afmt180
      
   END IF 
   
   CLOSE afmt180_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="afmt180.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION afmt180_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('fmcystus','13','A,D,R,W,N,X,Y,C')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1','2',","1")
   CALL g_idx_group.addAttribute("","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
  #CALL cl_set_comp_visible("fmcz012,fmcz013,fmcz014,fmcz015",FALSE)   #160302-00029#3 Mark
   CALL cl_set_combo_scc_part('fmcz004','8872','1,2,3,4,5,6,7')
   CALL cl_set_combo_scc_part('fmcz004_desc','8872','1,2,3,4,5,6,7')        #160302-00029#3 Add
   
   #161006-00005#34   add---s
   CALL s_fin_create_account_center_tmp()
   CALL s_fin_azzi800_sons_query(g_today) 
   CALL s_fin_account_center_comp_str() RETURNING g_wc_cs_comp   
   CALL s_fin_get_wc_str(g_wc_cs_comp) RETURNING g_wc_cs_comp
   #161006-00005#34   add---e
   #end add-point
   
   #初始化搜尋條件
   CALL afmt180_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="afmt180.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION afmt180_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL afmt180_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_fmcy_m.* TO NULL
         CALL g_fmcz_d.clear()
         CALL g_fmcz2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL afmt180_init()
      END IF
   
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
    
         DISPLAY ARRAY g_fmcz_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt180_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1','2',",l_ac)
               
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL afmt180_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_fmcz2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL afmt180_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL afmt180_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         
         #end add-point
         
      
         BEFORE DIALOG
            #先填充browser資料
            CALL afmt180_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL afmt180_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL afmt180_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL afmt180_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL afmt180_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL afmt180_set_act_visible()   
            CALL afmt180_set_act_no_visible()
            IF NOT (g_fmcy_m.fmcydocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " fmcyent = " ||g_enterprise|| " AND",
                                  " fmcydocno = '", g_fmcy_m.fmcydocno, "' "
 
               #填到對應位置
               CALL afmt180_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:3)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status name="menu.bpm_status"
            
            #END add-point
 
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmcy_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmcz_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL afmt180_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "fmcy_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "fmcz_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL afmt180_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL afmt180_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL afmt180_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt180_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL afmt180_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt180_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL afmt180_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt180_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL afmt180_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt180_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL afmt180_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL afmt180_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_fmcz_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_fmcz2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL afmt180_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL afmt180_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL afmt180_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL afmt180_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               LET g_rep_wc = " fmcyent = '",g_enterprise,"'  AND fmcysite = '",g_fmcy_m.fmcysite,"' AND fmcydocno = '",g_fmcy_m.fmcydocno,"' " #160912-00014#3
               #END add-point
               &include "erp/afm/afmt180_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               LET g_rep_wc = " fmcyent = '",g_enterprise,"'  AND fmcysite = '",g_fmcy_m.fmcysite,"' AND fmcydocno = '",g_fmcy_m.fmcydocno,"' " #160912-00014#3
               #END add-point
               &include "erp/afm/afmt180_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL afmt180_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL afmt180_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL afmt180_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL afmt180_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL afmt180_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow(g_fmcy_m.fmcydocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
 
{</section>}
 
{<section id="afmt180.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION afmt180_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   CALL afmt180_b_glaa_show()
   #CALL cl_set_act_visible("output", FALSE) #160912-00014#3 mark
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT fmcydocno ",
                      " FROM fmcy_t ",
                      " ",
                      " LEFT JOIN fmcz_t ON fmczent = fmcyent AND fmcydocno = fmczdocno ", "  ",
                      #add-point:browser_fill段sql(fmcz_t1) name="browser_fill.cnt.join.}"
                      
                      #end add-point
 
 
                      " ", 
                      " ", 
 
 
                      " WHERE fmcyent = " ||g_enterprise|| " AND fmczent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("fmcy_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT fmcydocno ",
                      " FROM fmcy_t ", 
                      "  ",
                      "  ",
                      " WHERE fmcyent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("fmcy_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_fmcy_m.* TO NULL
      CALL g_fmcz_d.clear()        
      CALL g_fmcz2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.fmcydocno Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmcystus,t0.fmcydocno ",
                  " FROM fmcy_t t0",
                  "  ",
                  "  LEFT JOIN fmcz_t ON fmczent = fmcyent AND fmcydocno = fmczdocno ", "  ", 
                  #add-point:browser_fill段sql(fmcz_t1) name="browser_fill.join.fmcz_t1"
                  
                  #end add-point
 
 
                  " ", 
 
 
                  
                  " WHERE t0.fmcyent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("fmcy_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.fmcystus,t0.fmcydocno ",
                  " FROM fmcy_t t0",
                  "  ",
                  
                  " WHERE t0.fmcyent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("fmcy_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   
   #end add-point
   LET g_sql = g_sql, " ORDER BY fmcydocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"fmcy_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_fmcydocno
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         
         #end add-point
      
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "C"
            LET g_browser[g_cnt].b_statepic = "stus/16/closed.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_fmcydocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   CALL cl_set_act_visible("insert", FALSE)
   #end add-point   
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION afmt180_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_fmcy_m.fmcydocno = g_browser[g_current_idx].b_fmcydocno   
 
   EXECUTE afmt180_master_referesh USING g_fmcy_m.fmcydocno INTO g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid_desc,g_fmcy_m.fmcycrtdp_desc, 
       g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcycnfid_desc
   
   CALL afmt180_fmcy_t_mask()
   CALL afmt180_show()
      
END FUNCTION
 
{</section>}
 
{<section id="afmt180.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION afmt180_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION afmt180_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_fmcydocno = g_fmcy_m.fmcydocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION afmt180_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_fmcy_m.* TO NULL
   CALL g_fmcz_d.clear()        
   CALL g_fmcz2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON fmcysite,fmcycomp,fmcy001,fmcy002,fmcydocno,fmcydocdt,fmcystus,fmcyownid, 
          fmcyowndp,fmcycrtid,fmcycrtdp,fmcycrtdt,fmcymodid,fmcymoddt,fmcycnfid,fmcycnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<fmcycrtdt>>----
         AFTER FIELD fmcycrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<fmcymoddt>>----
         AFTER FIELD fmcymoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmcycnfdt>>----
         AFTER FIELD fmcycnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<fmcypstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.fmcysite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcysite
            #add-point:ON ACTION controlp INFIELD fmcysite name="construct.c.fmcysite"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #CALL q_ooef001()                       #161006-00005#34   mark
            CALL q_ooef001_33()                     #161006-00005#34   add           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcysite  #顯示到畫面上
            NEXT FIELD fmcysite                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcysite
            #add-point:BEFORE FIELD fmcysite name="construct.b.fmcysite"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcysite
            
            #add-point:AFTER FIELD fmcysite name="construct.a.fmcysite"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcycomp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcycomp
            #add-point:ON ACTION controlp INFIELD fmcycomp name="construct.c.fmcycomp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " ooef003 = 'Y' AND ooef001 IN",g_wc_cs_comp   #161006-00005#34   add
            CALL q_ooef001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcycomp  #顯示到畫面上
            NEXT FIELD fmcycomp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcycomp
            #add-point:BEFORE FIELD fmcycomp name="construct.b.fmcycomp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcycomp
            
            #add-point:AFTER FIELD fmcycomp name="construct.a.fmcycomp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcy001
            #add-point:BEFORE FIELD fmcy001 name="construct.b.fmcy001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcy001
            
            #add-point:AFTER FIELD fmcy001 name="construct.a.fmcy001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcy001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcy001
            #add-point:ON ACTION controlp INFIELD fmcy001 name="construct.c.fmcy001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcy002
            #add-point:BEFORE FIELD fmcy002 name="construct.b.fmcy002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcy002
            
            #add-point:AFTER FIELD fmcy002 name="construct.a.fmcy002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcy002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcy002
            #add-point:ON ACTION controlp INFIELD fmcy002 name="construct.c.fmcy002"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcydocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcydocno
            #add-point:ON ACTION controlp INFIELD fmcydocno name="construct.c.fmcydocno"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            #161104-00046#15-add(s)
            #單別權限控管
            IF NOT cl_null(g_user_dept_wc_q) AND NOT g_user_dept_wc_q = ' 1=1'  THEN
               LET g_qryparam.where = g_user_dept_wc_q 
            END IF
            #161104-00046#15-add(e)
            CALL q_fmcydocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcydocno  #顯示到畫面上
            NEXT FIELD fmcydocno                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcydocno
            #add-point:BEFORE FIELD fmcydocno name="construct.b.fmcydocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcydocno
            
            #add-point:AFTER FIELD fmcydocno name="construct.a.fmcydocno"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcydocdt
            #add-point:BEFORE FIELD fmcydocdt name="construct.b.fmcydocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcydocdt
            
            #add-point:AFTER FIELD fmcydocdt name="construct.a.fmcydocdt"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcydocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcydocdt
            #add-point:ON ACTION controlp INFIELD fmcydocdt name="construct.c.fmcydocdt"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcystus
            #add-point:BEFORE FIELD fmcystus name="construct.b.fmcystus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcystus
            
            #add-point:AFTER FIELD fmcystus name="construct.a.fmcystus"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcystus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcystus
            #add-point:ON ACTION controlp INFIELD fmcystus name="construct.c.fmcystus"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcyownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcyownid
            #add-point:ON ACTION controlp INFIELD fmcyownid name="construct.c.fmcyownid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcyownid  #顯示到畫面上
            NEXT FIELD fmcyownid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcyownid
            #add-point:BEFORE FIELD fmcyownid name="construct.b.fmcyownid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcyownid
            
            #add-point:AFTER FIELD fmcyownid name="construct.a.fmcyownid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcyowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcyowndp
            #add-point:ON ACTION controlp INFIELD fmcyowndp name="construct.c.fmcyowndp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcyowndp  #顯示到畫面上
            NEXT FIELD fmcyowndp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcyowndp
            #add-point:BEFORE FIELD fmcyowndp name="construct.b.fmcyowndp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcyowndp
            
            #add-point:AFTER FIELD fmcyowndp name="construct.a.fmcyowndp"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcycrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcycrtid
            #add-point:ON ACTION controlp INFIELD fmcycrtid name="construct.c.fmcycrtid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcycrtid  #顯示到畫面上
            NEXT FIELD fmcycrtid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcycrtid
            #add-point:BEFORE FIELD fmcycrtid name="construct.b.fmcycrtid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcycrtid
            
            #add-point:AFTER FIELD fmcycrtid name="construct.a.fmcycrtid"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.fmcycrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcycrtdp
            #add-point:ON ACTION controlp INFIELD fmcycrtdp name="construct.c.fmcycrtdp"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcycrtdp  #顯示到畫面上
            NEXT FIELD fmcycrtdp                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcycrtdp
            #add-point:BEFORE FIELD fmcycrtdp name="construct.b.fmcycrtdp"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcycrtdp
            
            #add-point:AFTER FIELD fmcycrtdp name="construct.a.fmcycrtdp"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcycrtdt
            #add-point:BEFORE FIELD fmcycrtdt name="construct.b.fmcycrtdt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcymodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcymodid
            #add-point:ON ACTION controlp INFIELD fmcymodid name="construct.c.fmcymodid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcymodid  #顯示到畫面上
            NEXT FIELD fmcymodid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcymodid
            #add-point:BEFORE FIELD fmcymodid name="construct.b.fmcymodid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcymodid
            
            #add-point:AFTER FIELD fmcymodid name="construct.a.fmcymodid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcymoddt
            #add-point:BEFORE FIELD fmcymoddt name="construct.b.fmcymoddt"
            
            #END add-point
 
 
         #Ctrlp:construct.c.fmcycnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcycnfid
            #add-point:ON ACTION controlp INFIELD fmcycnfid name="construct.c.fmcycnfid"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcycnfid  #顯示到畫面上
            NEXT FIELD fmcycnfid                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcycnfid
            #add-point:BEFORE FIELD fmcycnfid name="construct.b.fmcycnfid"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcycnfid
            
            #add-point:AFTER FIELD fmcycnfid name="construct.a.fmcycnfid"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcycnfdt
            #add-point:BEFORE FIELD fmcycnfdt name="construct.b.fmcycnfdt"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON fmczseq,fmcz016,fmcz017,fmcz001,fmcz002,fmcz003,fmcz018,fmcz005,fmcz006, 
          fmcz003_desc,fmcz007,fmcz008,fmcz009,fmcz010,fmcz011,fmcz023,fmcz016_desc,fmcz017_desc,fmcz002_desc, 
          fmcz003_desc1,fmcz018_desc,fmcz004_desc,fmcz009_desc,fmcz010_desc,fmcz011_desc,fmcz012,fmcz013, 
          fmcz014,fmcz015
           FROM s_detail1[1].fmczseq,s_detail1[1].fmcz016,s_detail1[1].fmcz017,s_detail1[1].fmcz001, 
               s_detail1[1].fmcz002,s_detail1[1].fmcz003,s_detail1[1].fmcz018,s_detail1[1].fmcz005,s_detail1[1].fmcz006, 
               s_detail1[1].fmcz003_desc,s_detail1[1].fmcz007,s_detail1[1].fmcz008,s_detail1[1].fmcz009, 
               s_detail1[1].fmcz010,s_detail1[1].fmcz011,s_detail1[1].fmcz023,s_detail2[1].fmcz016_desc, 
               s_detail2[1].fmcz017_desc,s_detail2[1].fmcz002_desc,s_detail2[1].fmcz003_desc1,s_detail2[1].fmcz018_desc, 
               s_detail2[1].fmcz004_desc,s_detail2[1].fmcz009_desc,s_detail2[1].fmcz010_desc,s_detail2[1].fmcz011_desc, 
               s_detail2[1].fmcz012,s_detail2[1].fmcz013,s_detail2[1].fmcz014,s_detail2[1].fmcz015
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmczseq
            #add-point:BEFORE FIELD fmczseq name="construct.b.page1.fmczseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmczseq
            
            #add-point:AFTER FIELD fmczseq name="construct.a.page1.fmczseq"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmczseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmczseq
            #add-point:ON ACTION controlp INFIELD fmczseq name="construct.c.page1.fmczseq"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.fmcz016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz016
            #add-point:ON ACTION controlp INFIELD fmcz016 name="construct.c.page1.fmcz016"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcrdocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcz016  #顯示到畫面上
            NEXT FIELD fmcz016                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz016
            #add-point:BEFORE FIELD fmcz016 name="construct.b.page1.fmcz016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz016
            
            #add-point:AFTER FIELD fmcz016 name="construct.a.page1.fmcz016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz017
            #add-point:ON ACTION controlp INFIELD fmcz017 name="construct.c.page1.fmcz017"
            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcrdocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcz017  #顯示到畫面上
            NEXT FIELD fmcz017                     #返回原欄位
    


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz017
            #add-point:BEFORE FIELD fmcz017 name="construct.b.page1.fmcz017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz017
            
            #add-point:AFTER FIELD fmcz017 name="construct.a.page1.fmcz017"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz001
            #add-point:BEFORE FIELD fmcz001 name="construct.b.page1.fmcz001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz001
            
            #add-point:AFTER FIELD fmcz001 name="construct.a.page1.fmcz001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz001
            #add-point:ON ACTION controlp INFIELD fmcz001 name="construct.c.page1.fmcz001"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcz001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcz001  #顯示到畫面上
            NEXT FIELD fmcz001                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz002
            #add-point:BEFORE FIELD fmcz002 name="construct.b.page1.fmcz002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz002
            
            #add-point:AFTER FIELD fmcz002 name="construct.a.page1.fmcz002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz002
            #add-point:ON ACTION controlp INFIELD fmcz002 name="construct.c.page1.fmcz002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcz001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcz002  #顯示到畫面上
            NEXT FIELD fmcz002                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz003
            #add-point:BEFORE FIELD fmcz003 name="construct.b.page1.fmcz003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz003
            
            #add-point:AFTER FIELD fmcz003 name="construct.a.page1.fmcz003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz003
            #add-point:ON ACTION controlp INFIELD fmcz003 name="construct.c.page1.fmcz003"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz018
            #add-point:BEFORE FIELD fmcz018 name="construct.b.page1.fmcz018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz018
            
            #add-point:AFTER FIELD fmcz018 name="construct.a.page1.fmcz018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz018
            #add-point:ON ACTION controlp INFIELD fmcz018 name="construct.c.page1.fmcz018"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz004
            #add-point:BEFORE FIELD fmcz004 name="construct.b.page1.fmcz004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz004
            
            #add-point:AFTER FIELD fmcz004 name="construct.a.page1.fmcz004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz004
            #add-point:ON ACTION controlp INFIELD fmcz004 name="construct.c.page1.fmcz004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz005
            #add-point:BEFORE FIELD fmcz005 name="construct.b.page1.fmcz005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz005
            
            #add-point:AFTER FIELD fmcz005 name="construct.a.page1.fmcz005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz005
            #add-point:ON ACTION controlp INFIELD fmcz005 name="construct.c.page1.fmcz005"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_fmcz001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO fmcz005  #顯示到畫面上
            NEXT FIELD fmcz005                     #返回原欄位
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz006
            #add-point:BEFORE FIELD fmcz006 name="construct.b.page1.fmcz006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz006
            
            #add-point:AFTER FIELD fmcz006 name="construct.a.page1.fmcz006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz006
            #add-point:ON ACTION controlp INFIELD fmcz006 name="construct.c.page1.fmcz006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz003_desc
            #add-point:BEFORE FIELD fmcz003_desc name="construct.b.page1.fmcz003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz003_desc
            
            #add-point:AFTER FIELD fmcz003_desc name="construct.a.page1.fmcz003_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz003_desc
            #add-point:ON ACTION controlp INFIELD fmcz003_desc name="construct.c.page1.fmcz003_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz007
            #add-point:BEFORE FIELD fmcz007 name="construct.b.page1.fmcz007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz007
            
            #add-point:AFTER FIELD fmcz007 name="construct.a.page1.fmcz007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz007
            #add-point:ON ACTION controlp INFIELD fmcz007 name="construct.c.page1.fmcz007"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz008
            #add-point:BEFORE FIELD fmcz008 name="construct.b.page1.fmcz008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz008
            
            #add-point:AFTER FIELD fmcz008 name="construct.a.page1.fmcz008"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz008
            #add-point:ON ACTION controlp INFIELD fmcz008 name="construct.c.page1.fmcz008"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz009
            #add-point:BEFORE FIELD fmcz009 name="construct.b.page1.fmcz009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz009
            
            #add-point:AFTER FIELD fmcz009 name="construct.a.page1.fmcz009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz009
            #add-point:ON ACTION controlp INFIELD fmcz009 name="construct.c.page1.fmcz009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz010
            #add-point:BEFORE FIELD fmcz010 name="construct.b.page1.fmcz010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz010
            
            #add-point:AFTER FIELD fmcz010 name="construct.a.page1.fmcz010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz010
            #add-point:ON ACTION controlp INFIELD fmcz010 name="construct.c.page1.fmcz010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz011
            #add-point:BEFORE FIELD fmcz011 name="construct.b.page1.fmcz011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz011
            
            #add-point:AFTER FIELD fmcz011 name="construct.a.page1.fmcz011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz011
            #add-point:ON ACTION controlp INFIELD fmcz011 name="construct.c.page1.fmcz011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz023
            #add-point:BEFORE FIELD fmcz023 name="construct.b.page1.fmcz023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz023
            
            #add-point:AFTER FIELD fmcz023 name="construct.a.page1.fmcz023"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.fmcz023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz023
            #add-point:ON ACTION controlp INFIELD fmcz023 name="construct.c.page1.fmcz023"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz016_desc
            #add-point:BEFORE FIELD fmcz016_desc name="construct.b.page2.fmcz016_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz016_desc
            
            #add-point:AFTER FIELD fmcz016_desc name="construct.a.page2.fmcz016_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz016_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz016_desc
            #add-point:ON ACTION controlp INFIELD fmcz016_desc name="construct.c.page2.fmcz016_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz017_desc
            #add-point:BEFORE FIELD fmcz017_desc name="construct.b.page2.fmcz017_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz017_desc
            
            #add-point:AFTER FIELD fmcz017_desc name="construct.a.page2.fmcz017_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz017_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz017_desc
            #add-point:ON ACTION controlp INFIELD fmcz017_desc name="construct.c.page2.fmcz017_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz002_desc
            #add-point:BEFORE FIELD fmcz002_desc name="construct.b.page2.fmcz002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz002_desc
            
            #add-point:AFTER FIELD fmcz002_desc name="construct.a.page2.fmcz002_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz002_desc
            #add-point:ON ACTION controlp INFIELD fmcz002_desc name="construct.c.page2.fmcz002_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz003_desc1
            #add-point:BEFORE FIELD fmcz003_desc1 name="construct.b.page2.fmcz003_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz003_desc1
            
            #add-point:AFTER FIELD fmcz003_desc1 name="construct.a.page2.fmcz003_desc1"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz003_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz003_desc1
            #add-point:ON ACTION controlp INFIELD fmcz003_desc1 name="construct.c.page2.fmcz003_desc1"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz018_desc
            #add-point:BEFORE FIELD fmcz018_desc name="construct.b.page2.fmcz018_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz018_desc
            
            #add-point:AFTER FIELD fmcz018_desc name="construct.a.page2.fmcz018_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz018_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz018_desc
            #add-point:ON ACTION controlp INFIELD fmcz018_desc name="construct.c.page2.fmcz018_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz004_desc
            #add-point:BEFORE FIELD fmcz004_desc name="construct.b.page2.fmcz004_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz004_desc
            
            #add-point:AFTER FIELD fmcz004_desc name="construct.a.page2.fmcz004_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz004_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz004_desc
            #add-point:ON ACTION controlp INFIELD fmcz004_desc name="construct.c.page2.fmcz004_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz009_desc
            #add-point:BEFORE FIELD fmcz009_desc name="construct.b.page2.fmcz009_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz009_desc
            
            #add-point:AFTER FIELD fmcz009_desc name="construct.a.page2.fmcz009_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz009_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz009_desc
            #add-point:ON ACTION controlp INFIELD fmcz009_desc name="construct.c.page2.fmcz009_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz010_desc
            #add-point:BEFORE FIELD fmcz010_desc name="construct.b.page2.fmcz010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz010_desc
            
            #add-point:AFTER FIELD fmcz010_desc name="construct.a.page2.fmcz010_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz010_desc
            #add-point:ON ACTION controlp INFIELD fmcz010_desc name="construct.c.page2.fmcz010_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz011_desc
            #add-point:BEFORE FIELD fmcz011_desc name="construct.b.page2.fmcz011_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz011_desc
            
            #add-point:AFTER FIELD fmcz011_desc name="construct.a.page2.fmcz011_desc"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz011_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz011_desc
            #add-point:ON ACTION controlp INFIELD fmcz011_desc name="construct.c.page2.fmcz011_desc"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz012
            #add-point:BEFORE FIELD fmcz012 name="construct.b.page2.fmcz012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz012
            
            #add-point:AFTER FIELD fmcz012 name="construct.a.page2.fmcz012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz012
            #add-point:ON ACTION controlp INFIELD fmcz012 name="construct.c.page2.fmcz012"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz013
            #add-point:BEFORE FIELD fmcz013 name="construct.b.page2.fmcz013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz013
            
            #add-point:AFTER FIELD fmcz013 name="construct.a.page2.fmcz013"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz013
            #add-point:ON ACTION controlp INFIELD fmcz013 name="construct.c.page2.fmcz013"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz014
            #add-point:BEFORE FIELD fmcz014 name="construct.b.page2.fmcz014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz014
            
            #add-point:AFTER FIELD fmcz014 name="construct.a.page2.fmcz014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz014
            #add-point:ON ACTION controlp INFIELD fmcz014 name="construct.c.page2.fmcz014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz015
            #add-point:BEFORE FIELD fmcz015 name="construct.b.page2.fmcz015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz015
            
            #add-point:AFTER FIELD fmcz015 name="construct.a.page2.fmcz015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.fmcz015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz015
            #add-point:ON ACTION controlp INFIELD fmcz015 name="construct.c.page2.fmcz015"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "fmcy_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "fmcz_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   #161104-00046#15-add(s)
   IF cl_null(g_user_dept_wc)THEN
      LET g_user_dept_wc = ' 1=1'
   END IF
   IF g_user_dept_wc <>  " 1=1" THEN
      LET g_wc = g_wc ," AND ", g_user_dept_wc CLIPPED
   END IF   
   #161104-00046#15-add(e)
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION afmt180_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_fmcz_d.clear()
   CALL g_fmcz2_d.clear()
 
   
   #add-point:query段other name="query.other"
   
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL afmt180_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL afmt180_browser_fill("")
      CALL afmt180_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL afmt180_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL afmt180_fetch("F") 
      #顯示單身筆數
      CALL afmt180_idx_chk()
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION afmt180_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_fmcy_m.fmcydocno = g_browser[g_current_idx].b_fmcydocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE afmt180_master_referesh USING g_fmcy_m.fmcydocno INTO g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid_desc,g_fmcy_m.fmcycrtdp_desc, 
       g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcycnfid_desc
   
   #遮罩相關處理
   LET g_fmcy_m_mask_o.* =  g_fmcy_m.*
   CALL afmt180_fmcy_t_mask()
   LET g_fmcy_m_mask_n.* =  g_fmcy_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt180_set_act_visible()   
   CALL afmt180_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
   
   #保存單頭舊值
   LET g_fmcy_m_t.* = g_fmcy_m.*
   LET g_fmcy_m_o.* = g_fmcy_m.*
   
   LET g_data_owner = g_fmcy_m.fmcyownid      
   LET g_data_dept  = g_fmcy_m.fmcyowndp
   
   #重新顯示   
   CALL afmt180_show()
 
   #應用 a56 樣板自動產生(Version:3)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.insert" >}
#+ 資料新增
PRIVATE FUNCTION afmt180_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_fmcz_d.clear()   
   CALL g_fmcz2_d.clear()  
 
 
   INITIALIZE g_fmcy_m.* TO NULL             #DEFAULT 設定
   
   LET g_fmcydocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmcy_m.fmcyownid = g_user
      LET g_fmcy_m.fmcyowndp = g_dept
      LET g_fmcy_m.fmcycrtid = g_user
      LET g_fmcy_m.fmcycrtdp = g_dept 
      LET g_fmcy_m.fmcycrtdt = cl_get_current()
      LET g_fmcy_m.fmcymodid = g_user
      LET g_fmcy_m.fmcymoddt = cl_get_current()
      LET g_fmcy_m.fmcystus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值 name="insert.default"
      
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_fmcy_m_t.* = g_fmcy_m.*
      LET g_fmcy_m_o.* = g_fmcy_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmcy_m.fmcystus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         
      END CASE
 
 
 
    
      CALL afmt180_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_fmcy_m.* TO NULL
         INITIALIZE g_fmcz_d TO NULL
         INITIALIZE g_fmcz2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         
         #end add-point 
         CALL afmt180_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_fmcz_d.clear()
      #CALL g_fmcz2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt180_set_act_visible()   
   CALL afmt180_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmcyent = " ||g_enterprise|| " AND",
                      " fmcydocno = '", g_fmcy_m.fmcydocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt180_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE afmt180_cl
   
   CALL afmt180_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE afmt180_master_referesh USING g_fmcy_m.fmcydocno INTO g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid_desc,g_fmcy_m.fmcycrtdp_desc, 
       g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcycnfid_desc
   
   
   #遮罩相關處理
   LET g_fmcy_m_mask_o.* =  g_fmcy_m.*
   CALL afmt180_fmcy_t_mask()
   LET g_fmcy_m_mask_n.* =  g_fmcy_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmcy_m.fmcysite,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtid_desc, 
       g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdp_desc,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid,g_fmcy_m.fmcymodid_desc, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfid_desc,g_fmcy_m.fmcycnfdt
   
   #add-point:新增結束後 name="insert.after"
   
   #end add-point 
   
   LET g_data_owner = g_fmcy_m.fmcyownid      
   LET g_data_dept  = g_fmcy_m.fmcyowndp
   
   #功能已完成,通報訊息中心
   CALL afmt180_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.modify" >}
#+ 資料修改
PRIVATE FUNCTION afmt180_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   DEFINE l_success  LIKE type_t.num5
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   #保存單頭舊值
   LET g_fmcy_m_t.* = g_fmcy_m.*
   LET g_fmcy_m_o.* = g_fmcy_m.*
   
   IF g_fmcy_m.fmcydocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
   CALL s_transaction_begin()
   
   OPEN afmt180_cl USING g_enterprise,g_fmcy_m.fmcydocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt180_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt180_master_referesh USING g_fmcy_m.fmcydocno INTO g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid_desc,g_fmcy_m.fmcycrtdp_desc, 
       g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcycnfid_desc
   
   #檢查是否允許此動作
   IF NOT afmt180_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmcy_m_mask_o.* =  g_fmcy_m.*
   CALL afmt180_fmcy_t_mask()
   LET g_fmcy_m_mask_n.* =  g_fmcy_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
 
   
   CALL afmt180_show()
   #add-point:modify段show之後 name="modify.after_show"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL s_fin_date_close_chk('',g_fmcy_m.fmcycomp,'ANM',g_fmcy_m.fmcydocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
 
    
   WHILE TRUE
      LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_fmcy_m.fmcymodid = g_user 
LET g_fmcy_m.fmcymoddt = cl_get_current()
LET g_fmcy_m.fmcymodid_desc = cl_get_username(g_fmcy_m.fmcymodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL afmt180_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE fmcy_t SET (fmcymodid,fmcymoddt) = (g_fmcy_m.fmcymodid,g_fmcy_m.fmcymoddt)
          WHERE fmcyent = g_enterprise AND fmcydocno = g_fmcydocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_fmcy_m.* = g_fmcy_m_t.*
            CALL afmt180_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_fmcy_m.fmcydocno != g_fmcy_m_t.fmcydocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         
         #end add-point
         
         #更新單身key值
         UPDATE fmcz_t SET fmczdocno = g_fmcy_m.fmcydocno
 
          WHERE fmczent = g_enterprise AND fmczdocno = g_fmcy_m_t.fmcydocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "fmcz_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt180_set_act_visible()   
   CALL afmt180_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " fmcyent = " ||g_enterprise|| " AND",
                      " fmcydocno = '", g_fmcy_m.fmcydocno, "' "
 
   #填到對應位置
   CALL afmt180_browser_fill("")
 
   CLOSE afmt180_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt180_msgcentre_notify('modify')
 
END FUNCTION 
 
{</section>}
 
{<section id="afmt180.input" >}
#+ 資料輸入
PRIVATE FUNCTION afmt180_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE  l_glaa013             LIKE glaa_t.glaa013
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmcy_m.fmcysite,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtid_desc, 
       g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdp_desc,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid,g_fmcy_m.fmcymodid_desc, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfid_desc,g_fmcy_m.fmcycnfdt
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT fmczseq,fmcz016,fmcz017,fmcz001,fmcz002,fmcz003,fmcz018,fmcz004,fmcz005, 
       fmcz006,fmcz007,fmcz008,fmcz009,fmcz010,fmcz011,fmcz023,fmczseq,fmcz012,fmcz013,fmcz014,fmcz015  
       FROM fmcz_t WHERE fmczent=? AND fmczdocno=? AND fmczseq=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmt180_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql name="input.other_sql"
   
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL afmt180_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   
   #end add-point
   CALL afmt180_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp,g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno, 
       g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="afmt180.input.head" >}
      #單頭段
      INPUT BY NAME g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp,g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno, 
          g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN afmt180_cl USING g_enterprise,g_fmcy_m.fmcydocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt180_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE afmt180_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL afmt180_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
           
            #end add-point
            CALL afmt180_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcysite
            
            #add-point:AFTER FIELD fmcysite name="input.a.fmcysite"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcysite
            #add-point:BEFORE FIELD fmcysite name="input.b.fmcysite"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcysite
            #add-point:ON CHANGE fmcysite name="input.g.fmcysite"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcycomp
            
            #add-point:AFTER FIELD fmcycomp name="input.a.fmcycomp"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcycomp
            #add-point:BEFORE FIELD fmcycomp name="input.b.fmcycomp"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcycomp
            #add-point:ON CHANGE fmcycomp name="input.g.fmcycomp"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcy001
            #add-point:BEFORE FIELD fmcy001 name="input.b.fmcy001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcy001
            
            #add-point:AFTER FIELD fmcy001 name="input.a.fmcy001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcy001
            #add-point:ON CHANGE fmcy001 name="input.g.fmcy001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcy002
            #add-point:BEFORE FIELD fmcy002 name="input.b.fmcy002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcy002
            
            #add-point:AFTER FIELD fmcy002 name="input.a.fmcy002"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcy002
            #add-point:ON CHANGE fmcy002 name="input.g.fmcy002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcydocno
            #add-point:BEFORE FIELD fmcydocno name="input.b.fmcydocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcydocno
            
            #add-point:AFTER FIELD fmcydocno name="input.a.fmcydocno"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_fmcy_m.fmcydocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_fmcy_m.fmcydocno != g_fmcydocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmcy_t WHERE "||"fmcyent = '" ||g_enterprise|| "' AND "||"fmcydocno = '"||g_fmcy_m.fmcydocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcydocno
            #add-point:ON CHANGE fmcydocno name="input.g.fmcydocno"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcydocdt
            #add-point:BEFORE FIELD fmcydocdt name="input.b.fmcydocdt"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcydocdt
            
            #add-point:AFTER FIELD fmcydocdt name="input.a.fmcydocdt"
            SELECT glaa013 INTO l_glaa013 FROM glaa_t,ooef_t
                   WHERE glaaent = ooefent AND glaacomp = ooef017 
                     AND glaaent = g_enterprise AND ooef001 = g_fmcy_m.fmcysite
                     AND glaa014 = 'Y'
               IF g_fmcy_m.fmcydocdt <= l_glaa013 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00160'
                  LET g_errparam.extend = g_fmcy_m.fmcydocdt
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_fmcy_m.fmcydocdt = g_fmcy_m_t.fmcydocdt 
                  NEXT FIELD fmcydocdt
               END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcydocdt
            #add-point:ON CHANGE fmcydocdt name="input.g.fmcydocdt"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcystus
            #add-point:BEFORE FIELD fmcystus name="input.b.fmcystus"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcystus
            
            #add-point:AFTER FIELD fmcystus name="input.a.fmcystus"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcystus
            #add-point:ON CHANGE fmcystus name="input.g.fmcystus"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.fmcysite
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcysite
            #add-point:ON ACTION controlp INFIELD fmcysite name="input.c.fmcysite"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmcycomp
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcycomp
            #add-point:ON ACTION controlp INFIELD fmcycomp name="input.c.fmcycomp"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmcy001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcy001
            #add-point:ON ACTION controlp INFIELD fmcy001 name="input.c.fmcy001"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmcy002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcy002
            #add-point:ON ACTION controlp INFIELD fmcy002 name="input.c.fmcy002"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmcydocno
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcydocno
            #add-point:ON ACTION controlp INFIELD fmcydocno name="input.c.fmcydocno"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmcydocdt
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcydocdt
            #add-point:ON ACTION controlp INFIELD fmcydocdt name="input.c.fmcydocdt"
            
            #END add-point
 
 
         #Ctrlp:input.c.fmcystus
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcystus
            #add-point:ON ACTION controlp INFIELD fmcystus name="input.c.fmcystus"
            
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_fmcy_m.fmcydocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               
               #end add-point
               
               INSERT INTO fmcy_t (fmcyent,fmcysite,fmcycomp,fmcy001,fmcy002,fmcydocno,fmcydocdt,fmcystus, 
                   fmcyownid,fmcyowndp,fmcycrtid,fmcycrtdp,fmcycrtdt,fmcymodid,fmcymoddt,fmcycnfid,fmcycnfdt) 
 
               VALUES (g_enterprise,g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp,g_fmcy_m.fmcy001,g_fmcy_m.fmcy002, 
                   g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid,g_fmcy_m.fmcyowndp, 
                   g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid,g_fmcy_m.fmcymoddt, 
                   g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt) 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_fmcy_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL afmt180_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL afmt180_b_fill()
                  CALL afmt180_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
               
               #將遮罩欄位還原
               CALL afmt180_fmcy_t_mask_restore('restore_mask_o')
               
               UPDATE fmcy_t SET (fmcysite,fmcycomp,fmcy001,fmcy002,fmcydocno,fmcydocdt,fmcystus,fmcyownid, 
                   fmcyowndp,fmcycrtid,fmcycrtdp,fmcycrtdt,fmcymodid,fmcymoddt,fmcycnfid,fmcycnfdt) = (g_fmcy_m.fmcysite, 
                   g_fmcy_m.fmcycomp,g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt, 
                   g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid,g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp, 
                   g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid,g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt) 
 
                WHERE fmcyent = g_enterprise AND fmcydocno = g_fmcydocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "fmcy_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL afmt180_fmcy_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_fmcy_m_t)
               LET g_log2 = util.JSON.stringify(g_fmcy_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
            
      END INPUT
   
 
{</section>}
 
{<section id="afmt180.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_fmcz_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_fmcz_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL afmt180_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1','2',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_fmcz_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            CALL cl_set_act_visible("delete", FALSE)
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt180_cl USING g_enterprise,g_fmcy_m.fmcydocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt180_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE afmt180_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmcz_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmcz_d[l_ac].fmczseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_fmcz_d_t.* = g_fmcz_d[l_ac].*  #BACKUP
               LET g_fmcz_d_o.* = g_fmcz_d[l_ac].*  #BACKUP
               CALL afmt180_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               
               #end add-point  
               CALL afmt180_set_no_entry_b(l_cmd)
               IF NOT afmt180_lock_b("fmcz_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt180_bcl INTO g_fmcz_d[l_ac].fmczseq,g_fmcz_d[l_ac].fmcz016,g_fmcz_d[l_ac].fmcz017, 
                      g_fmcz_d[l_ac].fmcz001,g_fmcz_d[l_ac].fmcz002,g_fmcz_d[l_ac].fmcz003,g_fmcz_d[l_ac].fmcz018, 
                      g_fmcz_d[l_ac].fmcz004,g_fmcz_d[l_ac].fmcz005,g_fmcz_d[l_ac].fmcz006,g_fmcz_d[l_ac].fmcz007, 
                      g_fmcz_d[l_ac].fmcz008,g_fmcz_d[l_ac].fmcz009,g_fmcz_d[l_ac].fmcz010,g_fmcz_d[l_ac].fmcz011, 
                      g_fmcz_d[l_ac].fmcz023,g_fmcz2_d[l_ac].fmczseq,g_fmcz2_d[l_ac].fmcz012,g_fmcz2_d[l_ac].fmcz013, 
                      g_fmcz2_d[l_ac].fmcz014,g_fmcz2_d[l_ac].fmcz015
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_fmcz_d_t.fmczseq,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmcz_d_mask_o[l_ac].* =  g_fmcz_d[l_ac].*
                  CALL afmt180_fmcz_t_mask()
                  LET g_fmcz_d_mask_n[l_ac].* =  g_fmcz_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt180_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmcz_d[l_ac].* TO NULL 
            INITIALIZE g_fmcz_d_t.* TO NULL 
            INITIALIZE g_fmcz_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_fmcz_d[l_ac].fmcz017 = "0"
      LET g_fmcz_d[l_ac].fmcz018 = "0"
      LET g_fmcz_d[l_ac].fmcz006 = "0"
      LET g_fmcz_d[l_ac].fmcz007 = "0"
      LET g_fmcz_d[l_ac].fmcz009 = "0"
      LET g_fmcz_d[l_ac].fmcz011 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            
            #end add-point
            LET g_fmcz_d_t.* = g_fmcz_d[l_ac].*     #新輸入資料
            LET g_fmcz_d_o.* = g_fmcz_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt180_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            CALL cl_set_act_visible("delete", FALSE)
            #end add-point
            CALL afmt180_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmcz_d[li_reproduce_target].* = g_fmcz_d[li_reproduce].*
               LET g_fmcz2_d[li_reproduce_target].* = g_fmcz2_d[li_reproduce].*
 
               LET g_fmcz_d[li_reproduce_target].fmczseq = NULL
 
            END IF
            
 
 
            #add-point:modify段before insert name="input.body.before_insert"
            
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmcz_t 
             WHERE fmczent = g_enterprise AND fmczdocno = g_fmcy_m.fmcydocno
 
               AND fmczseq = g_fmcz_d[l_ac].fmczseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcy_m.fmcydocno
               LET gs_keys[2] = g_fmcz_d[g_detail_idx].fmczseq
               CALL afmt180_insert_b('fmcz_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_fmcz_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt180_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmcy_m.fmcydocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_fmcz_d_t.fmczseq
 
            
               #刪除同層單身
               IF NOT afmt180_delete_b('fmcz_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt180_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt180_key_delete_b(gs_keys,'fmcz_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt180_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt180_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               
               #end add-point
               LET l_count = g_fmcz_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmcz_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmczseq
            #add-point:BEFORE FIELD fmczseq name="input.b.page1.fmczseq"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmczseq
            
            #add-point:AFTER FIELD fmczseq name="input.a.page1.fmczseq"
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_fmcy_m.fmcydocno IS NOT NULL AND g_fmcz_d[g_detail_idx].fmczseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_fmcy_m.fmcydocno != g_fmcydocno_t OR g_fmcz_d[g_detail_idx].fmczseq != g_fmcz_d_t.fmczseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM fmcz_t WHERE "||"fmczent = '" ||g_enterprise|| "' AND "||"fmczdocno = '"||g_fmcy_m.fmcydocno ||"' AND "|| "fmczseq = '"||g_fmcz_d[g_detail_idx].fmczseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmczseq
            #add-point:ON CHANGE fmczseq name="input.g.page1.fmczseq"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz016
            
            #add-point:AFTER FIELD fmcz016 name="input.a.page1.fmcz016"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz016
            #add-point:BEFORE FIELD fmcz016 name="input.b.page1.fmcz016"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz016
            #add-point:ON CHANGE fmcz016 name="input.g.page1.fmcz016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz017
            
            #add-point:AFTER FIELD fmcz017 name="input.a.page1.fmcz017"
 
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz017
            #add-point:BEFORE FIELD fmcz017 name="input.b.page1.fmcz017"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz017
            #add-point:ON CHANGE fmcz017 name="input.g.page1.fmcz017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz001
            #add-point:BEFORE FIELD fmcz001 name="input.b.page1.fmcz001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz001
            
            #add-point:AFTER FIELD fmcz001 name="input.a.page1.fmcz001"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz001
            #add-point:ON CHANGE fmcz001 name="input.g.page1.fmcz001"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz002
            
            #add-point:AFTER FIELD fmcz002 name="input.a.page1.fmcz002"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz002
            #add-point:BEFORE FIELD fmcz002 name="input.b.page1.fmcz002"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz002
            #add-point:ON CHANGE fmcz002 name="input.g.page1.fmcz002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz003
            #add-point:BEFORE FIELD fmcz003 name="input.b.page1.fmcz003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz003
            
            #add-point:AFTER FIELD fmcz003 name="input.a.page1.fmcz003"
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_fmcz_d[l_ac].fmcz002
            LET g_ref_fields[2] = g_fmcz_d[l_ac].fmcz003
            CALL ap_ref_array2(g_ref_fields,"SELECT fmck010 FROM fmck_t WHERE fmckent='"||g_enterprise||"' AND fmckdocno=? AND fmckseq=? ","") RETURNING g_rtn_fields
            LET g_fmcz_d[l_ac].fmcz003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_fmcz_d[l_ac].fmcz003_desc


            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz003
            #add-point:ON CHANGE fmcz003 name="input.g.page1.fmcz003"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz018
            
            #add-point:AFTER FIELD fmcz018 name="input.a.page1.fmcz018"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz018
            #add-point:BEFORE FIELD fmcz018 name="input.b.page1.fmcz018"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz018
            #add-point:ON CHANGE fmcz018 name="input.g.page1.fmcz018"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz004
            #add-point:BEFORE FIELD fmcz004 name="input.b.page1.fmcz004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz004
            
            #add-point:AFTER FIELD fmcz004 name="input.a.page1.fmcz004"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz004
            #add-point:ON CHANGE fmcz004 name="input.g.page1.fmcz004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz005
            #add-point:BEFORE FIELD fmcz005 name="input.b.page1.fmcz005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz005
            
            #add-point:AFTER FIELD fmcz005 name="input.a.page1.fmcz005"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz005
            #add-point:ON CHANGE fmcz005 name="input.g.page1.fmcz005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz006
            #add-point:BEFORE FIELD fmcz006 name="input.b.page1.fmcz006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz006
            
            #add-point:AFTER FIELD fmcz006 name="input.a.page1.fmcz006"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz006
            #add-point:ON CHANGE fmcz006 name="input.g.page1.fmcz006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz003_desc
            #add-point:BEFORE FIELD fmcz003_desc name="input.b.page1.fmcz003_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz003_desc
            
            #add-point:AFTER FIELD fmcz003_desc name="input.a.page1.fmcz003_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz003_desc
            #add-point:ON CHANGE fmcz003_desc name="input.g.page1.fmcz003_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz007
            #add-point:BEFORE FIELD fmcz007 name="input.b.page1.fmcz007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz007
            
            #add-point:AFTER FIELD fmcz007 name="input.a.page1.fmcz007"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz007
            #add-point:ON CHANGE fmcz007 name="input.g.page1.fmcz007"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz008
            #add-point:BEFORE FIELD fmcz008 name="input.b.page1.fmcz008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz008
            
            #add-point:AFTER FIELD fmcz008 name="input.a.page1.fmcz008"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz008
            #add-point:ON CHANGE fmcz008 name="input.g.page1.fmcz008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz009
            
            #add-point:AFTER FIELD fmcz009 name="input.a.page1.fmcz009"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz009
            #add-point:BEFORE FIELD fmcz009 name="input.b.page1.fmcz009"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz009
            #add-point:ON CHANGE fmcz009 name="input.g.page1.fmcz009"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz010
            
            #add-point:AFTER FIELD fmcz010 name="input.a.page1.fmcz010"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz010
            #add-point:BEFORE FIELD fmcz010 name="input.b.page1.fmcz010"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz010
            #add-point:ON CHANGE fmcz010 name="input.g.page1.fmcz010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz011
            
            #add-point:AFTER FIELD fmcz011 name="input.a.page1.fmcz011"


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz011
            #add-point:BEFORE FIELD fmcz011 name="input.b.page1.fmcz011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz011
            #add-point:ON CHANGE fmcz011 name="input.g.page1.fmcz011"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz023
            #add-point:BEFORE FIELD fmcz023 name="input.b.page1.fmcz023"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz023
            
            #add-point:AFTER FIELD fmcz023 name="input.a.page1.fmcz023"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz023
            #add-point:ON CHANGE fmcz023 name="input.g.page1.fmcz023"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.fmczseq
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmczseq
            #add-point:ON ACTION controlp INFIELD fmczseq name="input.c.page1.fmczseq"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz016
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz016
            #add-point:ON ACTION controlp INFIELD fmcz016 name="input.c.page1.fmcz016"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcz_d[l_ac].fmcz016             #給予default值
            LET g_qryparam.default2 = "" #g_fmcz_d[l_ac].fmcsseq #項次
            LET g_qryparam.default3 = "" #g_fmcz_d[l_ac].fmcs001 #融資合同號
            LET g_qryparam.default4 = "" #g_fmcz_d[l_ac].fmcs002 #融資合同項次
            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_fmcrdocno_2()                                #呼叫開窗

            LET g_fmcz_d[l_ac].fmcz016 = g_qryparam.return1              
            LET g_fmcz_d[l_ac].fmcz017 = g_qryparam.return2 
            LET g_fmcz_d[l_ac].fmcz001 = g_qryparam.return3 
            LET g_fmcz_d[l_ac].fmcz002 = g_qryparam.return4 
            DISPLAY g_fmcz_d[l_ac].fmcz016 TO fmcz016              #
            #DISPLAY g_fmcz_d[l_ac].fmcsseq TO fmcsseq #項次
            #DISPLAY g_fmcz_d[l_ac].fmcs001 TO fmcs001 #融資合同號
            #DISPLAY g_fmcz_d[l_ac].fmcs002 TO fmcs002 #融資合同項次
            NEXT FIELD fmcz016                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz017
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz017
            #add-point:ON ACTION controlp INFIELD fmcz017 name="input.c.page1.fmcz017"
            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_fmcz_d[l_ac].fmcz017             #給予default值
            LET g_qryparam.default2 = "" #g_fmcz_d[l_ac].fmcsseq #項次
            LET g_qryparam.default3 = "" #g_fmcz_d[l_ac].fmcs001 #融資合同號
            LET g_qryparam.default4 = "" #g_fmcz_d[l_ac].fmcs002 #融資合同項次
            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_fmcrdocno_2()                                #呼叫開窗

            LET g_fmcz_d[l_ac].fmcz016 = g_qryparam.return1              
            LET g_fmcz_d[l_ac].fmcz017 = g_qryparam.return2 
            LET g_fmcz_d[l_ac].fmcz001 = g_qryparam.return3 
            LET g_fmcz_d[l_ac].fmcz002 = g_qryparam.return4 
            DISPLAY g_fmcz_d[l_ac].fmcz017 TO fmcz017              #
            #DISPLAY g_fmcz_d[l_ac].fmcsseq TO fmcsseq #項次
            #DISPLAY g_fmcz_d[l_ac].fmcs001 TO fmcs001 #融資合同號
            #DISPLAY g_fmcz_d[l_ac].fmcs002 TO fmcs002 #融資合同項次
            NEXT FIELD fmcz017                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz001
            #add-point:ON ACTION controlp INFIELD fmcz001 name="input.c.page1.fmcz001"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz002
            #add-point:ON ACTION controlp INFIELD fmcz002 name="input.c.page1.fmcz002"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz003
            #add-point:ON ACTION controlp INFIELD fmcz003 name="input.c.page1.fmcz003"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz018
            #add-point:ON ACTION controlp INFIELD fmcz018 name="input.c.page1.fmcz018"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz004
            #add-point:ON ACTION controlp INFIELD fmcz004 name="input.c.page1.fmcz004"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz005
            #add-point:ON ACTION controlp INFIELD fmcz005 name="input.c.page1.fmcz005"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz006
            #add-point:ON ACTION controlp INFIELD fmcz006 name="input.c.page1.fmcz006"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz003_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz003_desc
            #add-point:ON ACTION controlp INFIELD fmcz003_desc name="input.c.page1.fmcz003_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz007
            #add-point:ON ACTION controlp INFIELD fmcz007 name="input.c.page1.fmcz007"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz008
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz008
            #add-point:ON ACTION controlp INFIELD fmcz008 name="input.c.page1.fmcz008"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz009
            #add-point:ON ACTION controlp INFIELD fmcz009 name="input.c.page1.fmcz009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz010
            #add-point:ON ACTION controlp INFIELD fmcz010 name="input.c.page1.fmcz010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz011
            #add-point:ON ACTION controlp INFIELD fmcz011 name="input.c.page1.fmcz011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.fmcz023
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz023
            #add-point:ON ACTION controlp INFIELD fmcz023 name="input.c.page1.fmcz023"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmcz_d[l_ac].* = g_fmcz_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE afmt180_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_fmcz_d[l_ac].fmczseq 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_fmcz_d[l_ac].* = g_fmcz_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL afmt180_fmcz_t_mask_restore('restore_mask_o')
      
               UPDATE fmcz_t SET (fmczdocno,fmczseq,fmcz016,fmcz017,fmcz001,fmcz002,fmcz003,fmcz018, 
                   fmcz004,fmcz005,fmcz006,fmcz007,fmcz008,fmcz009,fmcz010,fmcz011,fmcz023,fmcz012,fmcz013, 
                   fmcz014,fmcz015) = (g_fmcy_m.fmcydocno,g_fmcz_d[l_ac].fmczseq,g_fmcz_d[l_ac].fmcz016, 
                   g_fmcz_d[l_ac].fmcz017,g_fmcz_d[l_ac].fmcz001,g_fmcz_d[l_ac].fmcz002,g_fmcz_d[l_ac].fmcz003, 
                   g_fmcz_d[l_ac].fmcz018,g_fmcz_d[l_ac].fmcz004,g_fmcz_d[l_ac].fmcz005,g_fmcz_d[l_ac].fmcz006, 
                   g_fmcz_d[l_ac].fmcz007,g_fmcz_d[l_ac].fmcz008,g_fmcz_d[l_ac].fmcz009,g_fmcz_d[l_ac].fmcz010, 
                   g_fmcz_d[l_ac].fmcz011,g_fmcz_d[l_ac].fmcz023,g_fmcz2_d[l_ac].fmcz012,g_fmcz2_d[l_ac].fmcz013, 
                   g_fmcz2_d[l_ac].fmcz014,g_fmcz2_d[l_ac].fmcz015)
                WHERE fmczent = g_enterprise AND fmczdocno = g_fmcy_m.fmcydocno 
 
                  AND fmczseq = g_fmcz_d_t.fmczseq #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmcz_d[l_ac].* = g_fmcz_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcz_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_fmcz_d[l_ac].* = g_fmcz_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcy_m.fmcydocno
               LET gs_keys_bak[1] = g_fmcydocno_t
               LET gs_keys[2] = g_fmcz_d[g_detail_idx].fmczseq
               LET gs_keys_bak[2] = g_fmcz_d_t.fmczseq
               CALL afmt180_update_b('fmcz_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL afmt180_fmcz_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_fmcz_d[g_detail_idx].fmczseq = g_fmcz_d_t.fmczseq 
 
                  ) THEN
                  LET gs_keys[01] = g_fmcy_m.fmcydocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_fmcz_d_t.fmczseq
 
                  CALL afmt180_key_update_b(gs_keys,'fmcz_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmcy_m),util.JSON.stringify(g_fmcz_d_t)
               LET g_log2 = util.JSON.stringify(g_fmcy_m),util.JSON.stringify(g_fmcz_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            
            #end add-point
            CALL afmt180_unlock_b("fmcz_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
             CALL cl_set_act_visible("delete", TRUE)
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmcz_d[li_reproduce_target].* = g_fmcz_d[li_reproduce].*
               LET g_fmcz2_d[li_reproduce_target].* = g_fmcz2_d[li_reproduce].*
 
               LET g_fmcz_d[li_reproduce_target].fmczseq = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmcz_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmcz_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_fmcz2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 
 
                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body2.before_input2"
            
            #end add-point
            
            CALL afmt180_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue(""))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_fmcz2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            
            #end add-point
            
         BEFORE INSERT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_fmcz2_d[l_ac].* TO NULL 
            INITIALIZE g_fmcz2_d_t.* TO NULL 
            INITIALIZE g_fmcz2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_fmcz2_d[l_ac].fmcz017_desc = "0"
      LET g_fmcz2_d[l_ac].fmcz018_desc = "0"
      LET g_fmcz2_d[l_ac].fmcz009_desc = "0"
      LET g_fmcz2_d[l_ac].fmcz011_desc = "0"
      LET g_fmcz2_d[l_ac].fmcz013 = "0"
      LET g_fmcz2_d[l_ac].fmcz015 = "0"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            
            #end add-point
            LET g_fmcz2_d_t.* = g_fmcz2_d[l_ac].*     #新輸入資料
            LET g_fmcz2_d_o.* = g_fmcz2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL afmt180_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            
            #end add-point
            CALL afmt180_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_fmcz_d[li_reproduce_target].* = g_fmcz_d[li_reproduce].*
               LET g_fmcz2_d[li_reproduce_target].* = g_fmcz2_d[li_reproduce].*
 
               LET g_fmcz2_d[li_reproduce_target].fmczseq = NULL
            END IF
            
 
 
            #add-point:modify段before insert name="input.body2.before_insert"
            
            #end add-point  
 
         BEFORE ROW     
            #add-point:modify段before row2 name="input.body2.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET g_detail_idx_list[2] = l_ac
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN afmt180_cl USING g_enterprise,g_fmcy_m.fmcydocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN afmt180_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE afmt180_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_fmcz2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_fmcz2_d[l_ac].fmczseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_fmcz2_d_t.* = g_fmcz2_d[l_ac].*  #BACKUP
               LET g_fmcz2_d_o.* = g_fmcz2_d[l_ac].*  #BACKUP
               CALL afmt180_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               
               #end add-point  
               CALL afmt180_set_no_entry_b(l_cmd)
               IF NOT afmt180_lock_b("fmcz_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH afmt180_bcl INTO g_fmcz_d[l_ac].fmczseq,g_fmcz_d[l_ac].fmcz016,g_fmcz_d[l_ac].fmcz017, 
                      g_fmcz_d[l_ac].fmcz001,g_fmcz_d[l_ac].fmcz002,g_fmcz_d[l_ac].fmcz003,g_fmcz_d[l_ac].fmcz018, 
                      g_fmcz_d[l_ac].fmcz004,g_fmcz_d[l_ac].fmcz005,g_fmcz_d[l_ac].fmcz006,g_fmcz_d[l_ac].fmcz007, 
                      g_fmcz_d[l_ac].fmcz008,g_fmcz_d[l_ac].fmcz009,g_fmcz_d[l_ac].fmcz010,g_fmcz_d[l_ac].fmcz011, 
                      g_fmcz_d[l_ac].fmcz023,g_fmcz2_d[l_ac].fmczseq,g_fmcz2_d[l_ac].fmcz012,g_fmcz2_d[l_ac].fmcz013, 
                      g_fmcz2_d[l_ac].fmcz014,g_fmcz2_d[l_ac].fmcz015
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE  
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_fmcz2_d_mask_o[l_ac].* =  g_fmcz2_d[l_ac].*
                  CALL afmt180_fmcz_t_mask()
                  LET g_fmcz2_d_mask_n[l_ac].* =  g_fmcz2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL afmt180_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
 
            #其他table進行lock
            
 
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_fmcy_m.fmcydocno
               LET gs_keys[gs_keys.getLength()+1] = g_fmcz2_d_t.fmczseq
            
               #刪除同層單身
               IF NOT afmt180_delete_b('fmcz_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt180_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT afmt180_key_delete_b(gs_keys,'fmcz_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE afmt180_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE afmt180_bcl
 
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               
               #end add-point
               LET l_count = g_fmcz_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_fmcz2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM fmcz_t 
             WHERE fmczent = g_enterprise AND fmczdocno = g_fmcy_m.fmcydocno
               AND fmczseq = g_fmcz2_d[l_ac].fmczseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcy_m.fmcydocno
               LET gs_keys[2] = g_fmcz2_d[g_detail_idx].fmczseq
               CALL afmt180_insert_b('fmcz_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               
               #end add-point
            ELSE    
               INITIALIZE g_fmcz_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL afmt180_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_fmcz2_d[l_ac].* = g_fmcz2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE afmt180_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_fmcz2_d[l_ac].* = g_fmcz2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL afmt180_fmcz_t_mask_restore('restore_mask_o')
                              
               UPDATE fmcz_t SET (fmczdocno,fmczseq,fmcz016,fmcz017,fmcz001,fmcz002,fmcz003,fmcz018, 
                   fmcz004,fmcz005,fmcz006,fmcz007,fmcz008,fmcz009,fmcz010,fmcz011,fmcz023,fmcz012,fmcz013, 
                   fmcz014,fmcz015) = (g_fmcy_m.fmcydocno,g_fmcz_d[l_ac].fmczseq,g_fmcz_d[l_ac].fmcz016, 
                   g_fmcz_d[l_ac].fmcz017,g_fmcz_d[l_ac].fmcz001,g_fmcz_d[l_ac].fmcz002,g_fmcz_d[l_ac].fmcz003, 
                   g_fmcz_d[l_ac].fmcz018,g_fmcz_d[l_ac].fmcz004,g_fmcz_d[l_ac].fmcz005,g_fmcz_d[l_ac].fmcz006, 
                   g_fmcz_d[l_ac].fmcz007,g_fmcz_d[l_ac].fmcz008,g_fmcz_d[l_ac].fmcz009,g_fmcz_d[l_ac].fmcz010, 
                   g_fmcz_d[l_ac].fmcz011,g_fmcz_d[l_ac].fmcz023,g_fmcz2_d[l_ac].fmcz012,g_fmcz2_d[l_ac].fmcz013, 
                   g_fmcz2_d[l_ac].fmcz014,g_fmcz2_d[l_ac].fmcz015) #自訂欄位頁簽
                WHERE fmczent = g_enterprise AND fmczdocno = g_fmcy_m.fmcydocno
                  AND fmczseq = g_fmcz2_d_t.fmczseq #項次 
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_fmcz2_d[l_ac].* = g_fmcz2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcz_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_fmcz2_d[l_ac].* = g_fmcz2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_fmcy_m.fmcydocno
               LET gs_keys_bak[1] = g_fmcydocno_t
               LET gs_keys[2] = g_fmcz2_d[g_detail_idx].fmczseq
               LET gs_keys_bak[2] = g_fmcz2_d_t.fmczseq
               CALL afmt180_update_b('fmcz_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL afmt180_fmcz_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_fmcz2_d[g_detail_idx].fmczseq = g_fmcz2_d_t.fmczseq 
                  ) THEN
                  LET gs_keys[01] = g_fmcy_m.fmcydocno
                  LET gs_keys[gs_keys.getLength()+1] = g_fmcz2_d_t.fmczseq
                  CALL afmt180_key_update_b(gs_keys,'fmcz_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_fmcy_m),util.JSON.stringify(g_fmcz2_d_t)
               LET g_log2 = util.JSON.stringify(g_fmcy_m),util.JSON.stringify(g_fmcz2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz016_desc
            #add-point:BEFORE FIELD fmcz016_desc name="input.b.page2.fmcz016_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz016_desc
            
            #add-point:AFTER FIELD fmcz016_desc name="input.a.page2.fmcz016_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz016_desc
            #add-point:ON CHANGE fmcz016_desc name="input.g.page2.fmcz016_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz017_desc
            #add-point:BEFORE FIELD fmcz017_desc name="input.b.page2.fmcz017_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz017_desc
            
            #add-point:AFTER FIELD fmcz017_desc name="input.a.page2.fmcz017_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz017_desc
            #add-point:ON CHANGE fmcz017_desc name="input.g.page2.fmcz017_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz002_desc
            #add-point:BEFORE FIELD fmcz002_desc name="input.b.page2.fmcz002_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz002_desc
            
            #add-point:AFTER FIELD fmcz002_desc name="input.a.page2.fmcz002_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz002_desc
            #add-point:ON CHANGE fmcz002_desc name="input.g.page2.fmcz002_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz003_desc1
            #add-point:BEFORE FIELD fmcz003_desc1 name="input.b.page2.fmcz003_desc1"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz003_desc1
            
            #add-point:AFTER FIELD fmcz003_desc1 name="input.a.page2.fmcz003_desc1"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz003_desc1
            #add-point:ON CHANGE fmcz003_desc1 name="input.g.page2.fmcz003_desc1"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz018_desc
            #add-point:BEFORE FIELD fmcz018_desc name="input.b.page2.fmcz018_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz018_desc
            
            #add-point:AFTER FIELD fmcz018_desc name="input.a.page2.fmcz018_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz018_desc
            #add-point:ON CHANGE fmcz018_desc name="input.g.page2.fmcz018_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz004_desc
            #add-point:BEFORE FIELD fmcz004_desc name="input.b.page2.fmcz004_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz004_desc
            
            #add-point:AFTER FIELD fmcz004_desc name="input.a.page2.fmcz004_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz004_desc
            #add-point:ON CHANGE fmcz004_desc name="input.g.page2.fmcz004_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz009_desc
            #add-point:BEFORE FIELD fmcz009_desc name="input.b.page2.fmcz009_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz009_desc
            
            #add-point:AFTER FIELD fmcz009_desc name="input.a.page2.fmcz009_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz009_desc
            #add-point:ON CHANGE fmcz009_desc name="input.g.page2.fmcz009_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz010_desc
            #add-point:BEFORE FIELD fmcz010_desc name="input.b.page2.fmcz010_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz010_desc
            
            #add-point:AFTER FIELD fmcz010_desc name="input.a.page2.fmcz010_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz010_desc
            #add-point:ON CHANGE fmcz010_desc name="input.g.page2.fmcz010_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz011_desc
            #add-point:BEFORE FIELD fmcz011_desc name="input.b.page2.fmcz011_desc"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz011_desc
            
            #add-point:AFTER FIELD fmcz011_desc name="input.a.page2.fmcz011_desc"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz011_desc
            #add-point:ON CHANGE fmcz011_desc name="input.g.page2.fmcz011_desc"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz012
            #add-point:BEFORE FIELD fmcz012 name="input.b.page2.fmcz012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz012
            
            #add-point:AFTER FIELD fmcz012 name="input.a.page2.fmcz012"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz012
            #add-point:ON CHANGE fmcz012 name="input.g.page2.fmcz012"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz013
            #add-point:BEFORE FIELD fmcz013 name="input.b.page2.fmcz013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz013
            
            #add-point:AFTER FIELD fmcz013 name="input.a.page2.fmcz013"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz013
            #add-point:ON CHANGE fmcz013 name="input.g.page2.fmcz013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz014
            #add-point:BEFORE FIELD fmcz014 name="input.b.page2.fmcz014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz014
            
            #add-point:AFTER FIELD fmcz014 name="input.a.page2.fmcz014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz014
            #add-point:ON CHANGE fmcz014 name="input.g.page2.fmcz014"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD fmcz015
            #add-point:BEFORE FIELD fmcz015 name="input.b.page2.fmcz015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD fmcz015
            
            #add-point:AFTER FIELD fmcz015 name="input.a.page2.fmcz015"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE fmcz015
            #add-point:ON CHANGE fmcz015 name="input.g.page2.fmcz015"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.fmcz016_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz016_desc
            #add-point:ON ACTION controlp INFIELD fmcz016_desc name="input.c.page2.fmcz016_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz017_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz017_desc
            #add-point:ON ACTION controlp INFIELD fmcz017_desc name="input.c.page2.fmcz017_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz002_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz002_desc
            #add-point:ON ACTION controlp INFIELD fmcz002_desc name="input.c.page2.fmcz002_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz003_desc1
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz003_desc1
            #add-point:ON ACTION controlp INFIELD fmcz003_desc1 name="input.c.page2.fmcz003_desc1"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz018_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz018_desc
            #add-point:ON ACTION controlp INFIELD fmcz018_desc name="input.c.page2.fmcz018_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz004_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz004_desc
            #add-point:ON ACTION controlp INFIELD fmcz004_desc name="input.c.page2.fmcz004_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz009_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz009_desc
            #add-point:ON ACTION controlp INFIELD fmcz009_desc name="input.c.page2.fmcz009_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz010_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz010_desc
            #add-point:ON ACTION controlp INFIELD fmcz010_desc name="input.c.page2.fmcz010_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz011_desc
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz011_desc
            #add-point:ON ACTION controlp INFIELD fmcz011_desc name="input.c.page2.fmcz011_desc"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz012
            #add-point:ON ACTION controlp INFIELD fmcz012 name="input.c.page2.fmcz012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz013
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz013
            #add-point:ON ACTION controlp INFIELD fmcz013 name="input.c.page2.fmcz013"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz014
            #add-point:ON ACTION controlp INFIELD fmcz014 name="input.c.page2.fmcz014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page2.fmcz015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD fmcz015
            #add-point:ON ACTION controlp INFIELD fmcz015 name="input.c.page2.fmcz015"
            
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row name="input.body2.after_row"
            
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_fmcz2_d[l_ac].* = g_fmcz2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE afmt180_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL afmt180_unlock_b("fmcz_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2 name="input.body2.after_row2"
            
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            
            #end add-point   
    
         ON ACTION controlo
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_fmcz_d[li_reproduce_target].* = g_fmcz_d[li_reproduce].*
               LET g_fmcz2_d[li_reproduce_target].* = g_fmcz2_d[li_reproduce].*
 
               LET g_fmcz2_d[li_reproduce_target].fmczseq = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_fmcz2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_fmcz2_d.getLength()+1
            END IF
            
      END INPUT
 
      
 
 
 
 
{</section>}
 
{<section id="afmt180.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1','2',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue(""))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            
            #end add-point  
            NEXT FIELD fmcydocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD fmczseq
               WHEN "s_detail2"
                  NEXT FIELD fmczseq_2
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   
   #end add-point    
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION afmt180_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   DEFINE  l_glaald              LIKE glaa_t.glaald   #160302-00029#3
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL afmt180_b_fill() #單身填充
      CALL afmt180_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL afmt180_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   LET g_fmcy_m.fmcysite_desc = s_desc_get_department_desc(g_fmcy_m.fmcysite)
   LET g_fmcy_m.fmcycomp_desc = s_desc_get_department_desc(g_fmcy_m.fmcycomp)
   DISPLAY BY NAME g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp_desc
  #160302-00029#3 Add  ---(S)---
   SELECT glaald INTO l_glaald FROM glaa_t WHERE glaaent = g_enterprise
      AND glaa014 = 'Y'
      AND glaacomp = g_fmcy_m.fmcycomp
   CALL afmt180_OtherCurr_dis(l_glaald)
  #160302-00029#3 Add  ---(E)---
   #end add-point
   
   #遮罩相關處理
   LET g_fmcy_m_mask_o.* =  g_fmcy_m.*
   CALL afmt180_fmcy_t_mask()
   LET g_fmcy_m_mask_n.* =  g_fmcy_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_fmcy_m.fmcysite,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtid_desc, 
       g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdp_desc,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid,g_fmcy_m.fmcymodid_desc, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfid_desc,g_fmcy_m.fmcycnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmcy_m.fmcystus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_fmcz_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_fmcz2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL afmt180_detail_show()
 
   #add-point:show段之後 name="show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION afmt180_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   CALL afmt180_b_glaa_show()
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION afmt180_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   
   #end add-point   
   DEFINE l_newno     LIKE fmcy_t.fmcydocno 
   DEFINE l_oldno     LIKE fmcy_t.fmcydocno 
 
   DEFINE l_master    RECORD LIKE fmcy_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE fmcz_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   
   LET g_master_insert = FALSE
   
   IF g_fmcy_m.fmcydocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
    
   LET g_fmcy_m.fmcydocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_fmcy_m.fmcyownid = g_user
      LET g_fmcy_m.fmcyowndp = g_dept
      LET g_fmcy_m.fmcycrtid = g_user
      LET g_fmcy_m.fmcycrtdp = g_dept 
      LET g_fmcy_m.fmcycrtdt = cl_get_current()
      LET g_fmcy_m.fmcymodid = g_user
      LET g_fmcy_m.fmcymoddt = cl_get_current()
      LET g_fmcy_m.fmcystus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_fmcy_m.fmcystus 
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
   
   
   CALL afmt180_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_fmcy_m.* TO NULL
      INITIALIZE g_fmcz_d TO NULL
      INITIALIZE g_fmcz2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      
      #end add-point
      CALL afmt180_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL afmt180_set_act_visible()   
   CALL afmt180_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " fmcyent = " ||g_enterprise|| " AND",
                      " fmcydocno = '", g_fmcy_m.fmcydocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL afmt180_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   CALL afmt180_idx_chk()
   
   LET g_data_owner = g_fmcy_m.fmcyownid      
   LET g_data_dept  = g_fmcy_m.fmcyowndp
   
   #功能已完成,通報訊息中心
   CALL afmt180_msgcentre_notify('reproduce')
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION afmt180_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE fmcz_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE afmt180_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM fmcz_t
    WHERE fmczent = g_enterprise AND fmczdocno = g_fmcydocno_t
 
    INTO TEMP afmt180_detail
 
   #將key修正為調整後   
   UPDATE afmt180_detail 
      #更新key欄位
      SET fmczdocno = g_fmcy_m.fmcydocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO fmcz_t SELECT * FROM afmt180_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE afmt180_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.delete" >}
#+ 資料刪除
PRIVATE FUNCTION afmt180_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   DEFINE  l_success       LIKE type_t.num5
   DEFINE  l_glaald        LIKE glaa_t.glaald
   DEFINE  l_lastday       LIKE type_t.dat
   DEFINE  l_firstday      LIKE type_t.dat
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_fmcy_m.fmcydocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN afmt180_cl USING g_enterprise,g_fmcy_m.fmcydocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt180_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE afmt180_master_referesh USING g_fmcy_m.fmcydocno INTO g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid_desc,g_fmcy_m.fmcycrtdp_desc, 
       g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcycnfid_desc
   
   
   #檢查是否允許此動作
   IF NOT afmt180_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_fmcy_m_mask_o.* =  g_fmcy_m.*
   CALL afmt180_fmcy_t_mask()
   LET g_fmcy_m_mask_n.* =  g_fmcy_m.*
   
   CALL afmt180_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL s_fin_date_close_chk('',g_fmcy_m.fmcycomp,'ANM',g_fmcy_m.fmcydocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
     #160302-00029#3 Add  ---(S)---
      CALL afmt180_fmdc_upd() RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      CALL afmt180_fmdh_upd() RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
     #160302-00029#3 Add  ---(E)---
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL afmt180_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_fmcydocno_t = g_fmcy_m.fmcydocno
 
 
      DELETE FROM fmcy_t
       WHERE fmcyent = g_enterprise AND fmcydocno = g_fmcy_m.fmcydocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_fmcy_m.fmcydocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      SELECT glaald INTO l_glaald FROM glaa_t 
       WHERE glaaent = g_enterprise AND glaacomp = g_fmcy_m.fmcycomp 
         AND glaa014 = 'Y'
      #单据编号是以年度期别最后一天来编号
      CALL s_date_get_ymtodate(g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcy001,g_fmcy_m.fmcy002)
       RETURNING l_firstday,l_lastday
      IF NOT s_aooi200_fin_del_docno(l_glaald,g_fmcy_m.fmcydocno,l_lastday) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM fmcz_t
       WHERE fmczent = g_enterprise AND fmczdocno = g_fmcy_m.fmcydocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      
      #end add-point
      
            
                                                               
 
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_fmcy_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE afmt180_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_fmcz_d.clear() 
      CALL g_fmcz2_d.clear()       
 
     
      CALL afmt180_ui_browser_refresh()  
      #CALL afmt180_ui_headershow()  
      #CALL afmt180_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL afmt180_browser_fill("")
         CALL afmt180_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE afmt180_cl
 
   #功能已完成,通報訊息中心
   CALL afmt180_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="afmt180.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afmt180_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #清空第一階單身
   CALL g_fmcz_d.clear()
   CALL g_fmcz2_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
   
   #判斷是否填充
   IF afmt180_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT fmczseq,fmcz016,fmcz017,fmcz001,fmcz002,fmcz003,fmcz018,fmcz004, 
             fmcz005,fmcz006,fmcz007,fmcz008,fmcz009,fmcz010,fmcz011,fmcz023,fmczseq,fmcz012,fmcz013, 
             fmcz014,fmcz015  FROM fmcz_t",   
                     " INNER JOIN fmcy_t ON fmcyent = " ||g_enterprise|| " AND fmcydocno = fmczdocno ",
 
                     #"",
                     
                     "",
                     #下層單身所需的join條件
 
                     
                     " WHERE fmczent=? AND fmczdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY fmcz_t.fmczseq"
         
         #add-point:單身填充控制 name="b_fill.sql"
         
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE afmt180_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR afmt180_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_fmcy_m.fmcydocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_fmcy_m.fmcydocno INTO g_fmcz_d[l_ac].fmczseq,g_fmcz_d[l_ac].fmcz016, 
          g_fmcz_d[l_ac].fmcz017,g_fmcz_d[l_ac].fmcz001,g_fmcz_d[l_ac].fmcz002,g_fmcz_d[l_ac].fmcz003, 
          g_fmcz_d[l_ac].fmcz018,g_fmcz_d[l_ac].fmcz004,g_fmcz_d[l_ac].fmcz005,g_fmcz_d[l_ac].fmcz006, 
          g_fmcz_d[l_ac].fmcz007,g_fmcz_d[l_ac].fmcz008,g_fmcz_d[l_ac].fmcz009,g_fmcz_d[l_ac].fmcz010, 
          g_fmcz_d[l_ac].fmcz011,g_fmcz_d[l_ac].fmcz023,g_fmcz2_d[l_ac].fmczseq,g_fmcz2_d[l_ac].fmcz012, 
          g_fmcz2_d[l_ac].fmcz013,g_fmcz2_d[l_ac].fmcz014,g_fmcz2_d[l_ac].fmcz015   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_fmcz_d[l_ac].fmcz002
         LET g_ref_fields[2] = g_fmcz_d[l_ac].fmcz003
         CALL ap_ref_array2(g_ref_fields,"SELECT fmck010 FROM fmck_t WHERE fmckent='"||g_enterprise||"' AND fmckdocno=? AND fmckseq=? ","") RETURNING g_rtn_fields
         LET g_fmcz_d[l_ac].fmcz003_desc = '', g_rtn_fields[1] , ''
        #160302-00029#3 Add  ---(S)---
         LET g_fmcz2_d[l_ac].fmcz016_desc = g_fmcz_d[l_ac].fmcz016
         LET g_fmcz2_d[l_ac].fmcz017_desc = g_fmcz_d[l_ac].fmcz017
         LET g_fmcz2_d[l_ac].fmcz002_desc = g_fmcz_d[l_ac].fmcz002
         LET g_fmcz2_d[l_ac].fmcz003_desc1= g_fmcz_d[l_ac].fmcz003
         LET g_fmcz2_d[l_ac].fmcz018_desc = g_fmcz_d[l_ac].fmcz018
         LET g_fmcz2_d[l_ac].fmcz004_desc = g_fmcz_d[l_ac].fmcz004
         LET g_fmcz2_d[l_ac].fmcz009_desc = g_fmcz_d[l_ac].fmcz009
         LET g_fmcz2_d[l_ac].fmcz010_desc = g_fmcz_d[l_ac].fmcz010
         LET g_fmcz2_d[l_ac].fmcz011_desc = g_fmcz_d[l_ac].fmcz011
        #160302-00029#3 Add  ---(E)---

         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   
   #end add-point
   
   CALL g_fmcz_d.deleteElement(g_fmcz_d.getLength())
   CALL g_fmcz2_d.deleteElement(g_fmcz2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE afmt180_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_fmcz_d.getLength()
      LET g_fmcz_d_mask_o[l_ac].* =  g_fmcz_d[l_ac].*
      CALL afmt180_fmcz_t_mask()
      LET g_fmcz_d_mask_n[l_ac].* =  g_fmcz_d[l_ac].*
   END FOR
   
   LET g_fmcz2_d_mask_o.* =  g_fmcz2_d.*
   FOR l_ac = 1 TO g_fmcz2_d.getLength()
      LET g_fmcz2_d_mask_o[l_ac].* =  g_fmcz2_d[l_ac].*
      CALL afmt180_fmcz_t_mask()
      LET g_fmcz2_d_mask_n[l_ac].* =  g_fmcz2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION afmt180_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      
      #end add-point    
      DELETE FROM fmcz_t
       WHERE fmczent = g_enterprise AND
         fmczdocno = ps_keys_bak[1] AND fmczseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmcz_d.deleteElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_fmcz2_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
 
   
   #add-point:delete_b段other name="delete_b.other"
   
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION afmt180_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      
      #end add-point 
      INSERT INTO fmcz_t
                  (fmczent,
                   fmczdocno,
                   fmczseq
                   ,fmcz016,fmcz017,fmcz001,fmcz002,fmcz003,fmcz018,fmcz004,fmcz005,fmcz006,fmcz007,fmcz008,fmcz009,fmcz010,fmcz011,fmcz023,fmcz012,fmcz013,fmcz014,fmcz015) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_fmcz_d[g_detail_idx].fmcz016,g_fmcz_d[g_detail_idx].fmcz017,g_fmcz_d[g_detail_idx].fmcz001, 
                       g_fmcz_d[g_detail_idx].fmcz002,g_fmcz_d[g_detail_idx].fmcz003,g_fmcz_d[g_detail_idx].fmcz018, 
                       g_fmcz_d[g_detail_idx].fmcz004,g_fmcz_d[g_detail_idx].fmcz005,g_fmcz_d[g_detail_idx].fmcz006, 
                       g_fmcz_d[g_detail_idx].fmcz007,g_fmcz_d[g_detail_idx].fmcz008,g_fmcz_d[g_detail_idx].fmcz009, 
                       g_fmcz_d[g_detail_idx].fmcz010,g_fmcz_d[g_detail_idx].fmcz011,g_fmcz_d[g_detail_idx].fmcz023, 
                       g_fmcz2_d[g_detail_idx].fmcz012,g_fmcz2_d[g_detail_idx].fmcz013,g_fmcz2_d[g_detail_idx].fmcz014, 
                       g_fmcz2_d[g_detail_idx].fmcz015)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_fmcz_d.insertElement(li_idx) 
      END IF 
      IF ps_page <> "'2'" THEN 
         CALL g_fmcz2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other name="insert_b.other"
   
   #end add-point     
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION afmt180_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1','2',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "fmcz_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      
      #end add-point 
      
      #將遮罩欄位還原
      CALL afmt180_fmcz_t_mask_restore('restore_mask_o')
               
      UPDATE fmcz_t 
         SET (fmczdocno,
              fmczseq
              ,fmcz016,fmcz017,fmcz001,fmcz002,fmcz003,fmcz018,fmcz004,fmcz005,fmcz006,fmcz007,fmcz008,fmcz009,fmcz010,fmcz011,fmcz023,fmcz012,fmcz013,fmcz014,fmcz015) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_fmcz_d[g_detail_idx].fmcz016,g_fmcz_d[g_detail_idx].fmcz017,g_fmcz_d[g_detail_idx].fmcz001, 
                  g_fmcz_d[g_detail_idx].fmcz002,g_fmcz_d[g_detail_idx].fmcz003,g_fmcz_d[g_detail_idx].fmcz018, 
                  g_fmcz_d[g_detail_idx].fmcz004,g_fmcz_d[g_detail_idx].fmcz005,g_fmcz_d[g_detail_idx].fmcz006, 
                  g_fmcz_d[g_detail_idx].fmcz007,g_fmcz_d[g_detail_idx].fmcz008,g_fmcz_d[g_detail_idx].fmcz009, 
                  g_fmcz_d[g_detail_idx].fmcz010,g_fmcz_d[g_detail_idx].fmcz011,g_fmcz_d[g_detail_idx].fmcz023, 
                  g_fmcz2_d[g_detail_idx].fmcz012,g_fmcz2_d[g_detail_idx].fmcz013,g_fmcz2_d[g_detail_idx].fmcz014, 
                  g_fmcz2_d[g_detail_idx].fmcz015) 
         WHERE fmczent = g_enterprise AND fmczdocno = ps_keys_bak[1] AND fmczseq = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmcz_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "fmcz_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL afmt180_fmcz_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
 
   
   #add-point:update_b段other name="update_b.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION afmt180_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION afmt180_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION afmt180_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
    
   #先刷新資料
   #CALL afmt180_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1','2',"
   #僅鎖定自身table
   LET ls_group = "fmcz_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN afmt180_bcl USING g_enterprise,
                                       g_fmcy_m.fmcydocno,g_fmcz_d[g_detail_idx].fmczseq     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "afmt180_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other name="lock_b.other"
   
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION afmt180_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
    
   LET ls_group = "'1','2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE afmt180_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   
   #end add-point  
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION afmt180_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   CALL cl_set_comp_entry("fmcydocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("fmcydocno",TRUE)
      CALL cl_set_comp_entry("fmcydocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION afmt180_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("fmcydocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("fmcydocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("fmcydocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION afmt180_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   
   #end add-point  
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION afmt180_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   
   #end add-point     
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION afmt180_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION afmt180_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #應用 a63 樣板自動產生(Version:1)
   IF g_fmcy_m.fmcystus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   #無需複製功能
   CALL cl_set_act_visible("reproduce",FALSE)
  #160302-00029#1 Mark ---(S)---
  ##無需修改功能
  #CALL cl_set_act_visible("modify,modify_detail",FALSE)
  #160302-00029#1 Mark ---(E)---

   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION afmt180_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION afmt180_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   
   #end add-point   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION afmt180_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " fmcydocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "fmcy_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "fmcz_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION afmt180_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   DEFINE l_success  LIKE type_t.num5
   DEFINE l_n        LIKE type_t.num5
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_fmcy_m.fmcydocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN afmt180_cl USING g_enterprise,g_fmcy_m.fmcydocno
   IF STATUS THEN
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN afmt180_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE afmt180_master_referesh USING g_fmcy_m.fmcydocno INTO g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid_desc,g_fmcy_m.fmcycrtdp_desc, 
       g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcycnfid_desc
   
 
   #檢查是否允許此動作
   IF NOT afmt180_action_chk() THEN
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_fmcy_m.fmcysite,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp,g_fmcy_m.fmcycomp_desc, 
       g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus,g_fmcy_m.fmcyownid, 
       g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtid_desc, 
       g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdp_desc,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid,g_fmcy_m.fmcymodid_desc, 
       g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfid_desc,g_fmcy_m.fmcycnfdt
 
   CASE g_fmcy_m.fmcystus
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "C"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   #檢查當單據日期小於等於關帳日期時，不可異動單據
   CALL s_fin_date_close_chk('',g_fmcy_m.fmcycomp,'ANM',g_fmcy_m.fmcydocdt) RETURNING l_success
   IF l_success = FALSE THEN
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_fmcy_m.fmcystus
            
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "C"
               HIDE OPTION "closed"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      
      #end add-point
      
      #應用 a36 樣板自動產生(Version:5)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT afmt180_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt180_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT afmt180_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE afmt180_cl
            RETURN
         END IF
 
 
 
	  
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制 name="statechange.approved"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制 name="statechange.withdraw"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制 name="statechange.rejection"
            
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制 name="statechange.signing"
      #      
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            #检查融资合同有没存在afmt185
            LET l_n = 0
            SELECT COUNT(*) INTO l_n FROM fmcu_t
             WHERE fmcuent = g_enterprise AND fmcu003 = g_fmcy_m.fmcydocno
            IF l_n > 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'afm-00242'
               LET g_errparam.extend = g_fmcy_m.fmcydocno
               LET g_errparam.popup = TRUE
               CALL cl_err()
               CLOSE afmt180_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            
            #end add-point
         END IF
         EXIT MENU
      ON ACTION closed
         IF cl_auth_chk_act("closed") THEN
            LET lc_state = "C"
            #add-point:action控制 name="statechange.closed"
            
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "A" 
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "N"
      AND lc_state <> "X"
      AND lc_state <> "Y"
      AND lc_state <> "C"
      ) OR 
      g_fmcy_m.fmcystus = lc_state OR cl_null(lc_state) THEN
      CLOSE afmt180_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   #151125-00001#2 --- add start ---
   IF lc_state = 'X' THEN
      IF NOT cl_ask_confirm('aim-00109') THEN
         CALL s_transaction_end('N','0') 
         RETURN
      END IF
   END IF
   #151125-00001#2 --- add end   ---
   #end add-point
   
   LET g_fmcy_m.fmcymodid = g_user
   LET g_fmcy_m.fmcymoddt = cl_get_current()
   LET g_fmcy_m.fmcystus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE fmcy_t 
      SET (fmcystus,fmcymodid,fmcymoddt) 
        = (g_fmcy_m.fmcystus,g_fmcy_m.fmcymodid,g_fmcy_m.fmcymoddt)     
    WHERE fmcyent = g_enterprise AND fmcydocno = g_fmcy_m.fmcydocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "C"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/closed.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE afmt180_master_referesh USING g_fmcy_m.fmcydocno INTO g_fmcy_m.fmcysite,g_fmcy_m.fmcycomp, 
          g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus, 
          g_fmcy_m.fmcyownid,g_fmcy_m.fmcyowndp,g_fmcy_m.fmcycrtid,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdt, 
          g_fmcy_m.fmcymodid,g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfdt,g_fmcy_m.fmcysite_desc, 
          g_fmcy_m.fmcycomp_desc,g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid_desc, 
          g_fmcy_m.fmcycrtdp_desc,g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcycnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_fmcy_m.fmcysite,g_fmcy_m.fmcysite_desc,g_fmcy_m.fmcycomp,g_fmcy_m.fmcycomp_desc, 
          g_fmcy_m.fmcy001,g_fmcy_m.fmcy002,g_fmcy_m.fmcydocno,g_fmcy_m.fmcydocdt,g_fmcy_m.fmcystus, 
          g_fmcy_m.fmcyownid,g_fmcy_m.fmcyownid_desc,g_fmcy_m.fmcyowndp,g_fmcy_m.fmcyowndp_desc,g_fmcy_m.fmcycrtid, 
          g_fmcy_m.fmcycrtid_desc,g_fmcy_m.fmcycrtdp,g_fmcy_m.fmcycrtdp_desc,g_fmcy_m.fmcycrtdt,g_fmcy_m.fmcymodid, 
          g_fmcy_m.fmcymodid_desc,g_fmcy_m.fmcymoddt,g_fmcy_m.fmcycnfid,g_fmcy_m.fmcycnfid_desc,g_fmcy_m.fmcycnfdt 
 
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   
   #end add-point  
 
   CLOSE afmt180_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL afmt180_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt180.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION afmt180_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_fmcz_d.getLength() THEN
         LET g_detail_idx = g_fmcz_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmcz_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmcz_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_fmcz2_d.getLength() THEN
         LET g_detail_idx = g_fmcz2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_fmcz2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_fmcz2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afmt180_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   
   #end add-point
    
   LET l_ac = li_ac
   
   CALL afmt180_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION afmt180_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="afmt180.status_show" >}
PRIVATE FUNCTION afmt180_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="afmt180.mask_functions" >}
&include "erp/afm/afmt180_mask.4gl"
 
{</section>}
 
{<section id="afmt180.signature" >}
   #應用 a39 樣板自動產生(Version:10)
#+ BPM提交
PRIVATE FUNCTION afmt180_send()
   #add-point:send段define(客製用) name="send.define_customerization"
   
   #end add-point 
   #add-point:send段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="send.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="send.pre_function"
   
   #end add-point
   
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
 
 
   CALL afmt180_show()
   CALL afmt180_set_pk_array()
   
   #add-point: 初始化的ADP name="send.before_send"
   
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_fmcy_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_fmcz_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_fmcz2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP name="send.before_cli"
   
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP name="send.after_send"
   
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL afmt180_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt180_ui_headershow()
   CALL afmt180_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
#應用 a40 樣板自動產生(Version:9)
#+ BPM抽單
PRIVATE FUNCTION afmt180_draw_out()
   #add-point:draw段define name="draw.define_customerization"
   
   #end add-point
   #add-point:draw段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="draw.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="draw.pre_function"
   
   #end add-point
   
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_idx].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL afmt180_ui_headershow()  
   CALL afmt180_ui_detailshow()
 
   #add-point:Function後置處理  name="draw.after_function"
   
   #end add-point
 
   RETURN TRUE
   
END FUNCTION
 
 
 
 
 
{</section>}
 
{<section id="afmt180.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION afmt180_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_fmcy_m.fmcydocno
   LET g_pk_array[1].column = 'fmcydocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt180.other_dialog" readonly="Y" >}
   
 
{</section>}
 
{<section id="afmt180.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION afmt180_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL afmt180_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_fmcy_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="afmt180.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION afmt180_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#12 2016/08/24 By 07900 --add--s--
   SELECT fmcystus INTO g_fmcy_m.fmcystus
     FROM fmcy_t
    WHERE fmcyent = g_enterprise
      AND fmcydocno = g_fmcy_m.fmcydocno

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_fmcy_m.fmcystus
        WHEN 'C'
           LET g_errno = 'ain-00197'
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_fmcy_m.fmcydocno
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL afmt180_set_act_visible()
        CALL afmt180_set_act_no_visible()
        CALL afmt180_show()
        RETURN FALSE
     END IF
   END IF
   
   #160818-00017#12 2016/08/24 By 07900 --add--s--
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="afmt180.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL afmt180_b_glaa_show()
# Date & Author..: 2015/12/03 By 06862
# Modify.........:
################################################################################
PRIVATE FUNCTION afmt180_b_glaa_show()
    
    LET g_glaa015 = null 
    LET g_glaa019 = null
    
    SELECT glaa015,glaa019 INTO g_glaa015,g_glaa019 FROM glaa_t 
                          WHERE glaaent = 99 
                            AND glaacomp = g_fmcy_m.fmcycomp
                            AND glaa014 = 'Y'
    #是否启用本位币二、本位币三
    IF NOT cl_null(g_glaa015) AND g_glaa015 = 'Y' THEN 
       CALL cl_set_comp_visible("fmcz012,fmcz013",TRUE)
    ELSE 
       CALL cl_set_comp_visible("fmcz012,fmcz013",FALSE) 
    END IF 
    IF NOT cl_null(g_glaa019) AND g_glaa019 = 'Y' THEN 
       CALL cl_set_comp_visible("fmcz014,fmcz015",TRUE)
    ELSE 
       CALL cl_set_comp_visible("fmcz014,fmcz015",FALSE) 
    END IF  
    
END FUNCTION

################################################################################
# Descriptions...: 其他本位幣欄位顯示
# Memo...........:
# Usage..........: CALL afmt18_OtherCurr_dis(p_glaald)
#                  RETURNING ---
# Input parameter: p_glaald       帳套
# Return code....: ---
# Date & Author..: 2016/03/29 By 01727
# Modify.........: #160302-00029#3 Add
################################################################################
PRIVATE FUNCTION afmt180_OtherCurr_dis(p_glaald)
   DEFINE p_glaald         LIKE glaa_t.glaald
   DEFINE l_glaa015        LIKE glaa_t.glaa015
   DEFINE l_glaa016        LIKE glaa_t.glaa016
   DEFINE l_glaa019        LIKE glaa_t.glaa019
   DEFINE l_glaa020        LIKE glaa_t.glaa020
   DEFINE l_gzzd005        LIKE gzzd_t.gzzd005

   IF cl_null(p_glaald) THEN RETURN END IF

   CALL s_ld_sel_glaa(p_glaald,'glaa015|glaa016|glaa019|glaa020')
        RETURNING g_sub_success,l_glaa015,l_glaa016,l_glaa019,l_glaa020

   IF l_glaa015 = 'N' AND l_glaa019 = 'N' THEN
      CALL cl_set_comp_visible('bpage_2',FALSE)
      RETURN
   ELSE
      CALL cl_set_comp_visible('bpage_2',TRUE)
   END IF

   CALL cl_set_comp_visible("fmcz012,fmcz013,fmcz014,fmcz015",TRUE)

   IF l_glaa015 = 'N' THEN
      CALL cl_set_comp_visible("fmcz012,fmcz013",FALSE)
   ELSE
      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt180'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcz012'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa016,")"
      CALL cl_set_comp_att_text('fmcz012',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt180'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcz013'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa016,")"
      CALL cl_set_comp_att_text('fmcz013',l_gzzd005)

   END IF

   IF l_glaa019 = 'N' THEN
      CALL cl_set_comp_visible("fmcz014,fmcz015",FALSE)
   ELSE
      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt180'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcz014'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa020,")"
      CALL cl_set_comp_att_text('fmcz014',l_gzzd005)

      LET l_gzzd005 = ''
      SELECT gzzd005 INTO l_gzzd005 FROM gzzd_t WHERE gzzd001 = 'afmt180'
         AND gzzd002 = g_lang
         AND gzzd003 = 'lbl_fmcz015'

      LET l_gzzd005 = l_gzzd005,"(",l_glaa020,")"
      CALL cl_set_comp_att_text('fmcz015',l_gzzd005)

   END IF

END FUNCTION

################################################################################
# Descriptions...: 更新融資到帳已攤銷費用
# Memo...........:
# Usage..........: CALL afmt180_fmdc_upd()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      更新成功否
# Date & Author..: 2016/03/30 By 01727
# Modify.........: 160302-00029#3
################################################################################
PRIVATE FUNCTION afmt180_fmdc_upd()
   DEFINE r_success         LIKE type_t.num5
   DEFINE l_fmcz016         LIKE fmcz_t.fmcz016
   DEFINE l_fmcz017         LIKE fmcz_t.fmcz017
   DEFINE l_fmcz018         LIKE fmcz_t.fmcz018
   DEFINE l_fmcz009         LIKE fmcz_t.fmcz009
   DEFINE l_fmcz011         LIKE fmcz_t.fmcz011
   DEFINE l_fmcz013         LIKE fmcz_t.fmcz013
   DEFINE l_fmcz015         LIKE fmcz_t.fmcz015
   DEFINE l_sql             STRING

   LET r_success = TRUE

   LET l_sql = "SELECT fmcz016,fmcz017,fmcz018,fmcz009,fmcz011,fmcz013,fmcz015 FROM fmcz_t ",
               " WHERE fmczent   = '",g_enterprise,"'",
               "   AND fmczdocno = '",g_fmcy_m.fmcydocno,"'",
               "   AND fmcz018 IS NOT NULL"
   PREPARE afmt180_fmdc_upd_prep FROM l_sql
   DECLARE afmt180_fmdc_upd_curs CURSOR FOR afmt180_fmdc_upd_prep

   FOREACH afmt180_fmdc_upd_curs INTO l_fmcz016,l_fmcz017,l_fmcz018,l_fmcz009,l_fmcz011,l_fmcz013,l_fmcz015
      UPDATE fmdc_t SET fmdc019 = fmdc019 - l_fmcz009,
                        fmdc020 = fmdc020 - l_fmcz011,
                        fmdc021 = fmdc021 - l_fmcz013,
                        fmdc022 = fmdc022 - l_fmcz015
       WHERE fmdcent   = g_enterprise
         AND fmdcdocno = l_fmcz016
         AND fmdcseq   = l_fmcz017
         AND fmdcseq2  = l_fmcz018
       IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
         LET g_errparam.extend = "fmdc_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         LET r_success = FALSE
       END IF
   END FOREACH

   RETURN r_success

END FUNCTION

################################################################################
# Descriptions...: 更新融資到帳已調整利息
# Memo...........:
# Usage..........: CALL afmt180_fmdh_upd()
#                  RETURNING r_success
# Input parameter: 
# Return code....: r_success      更新成功否
# Date & Author..: 2016/03/30 By 01727
# Modify.........: 160302-00029#3
################################################################################
PRIVATE FUNCTION afmt180_fmdh_upd()
   DEFINE r_success         LIKE type_t.num5
   DEFINE l_fmcz016         LIKE fmcz_t.fmcz016
   DEFINE l_fmcz017         LIKE fmcz_t.fmcz017
   DEFINE l_fmcz009         LIKE fmcz_t.fmcz009
   DEFINE l_fmcz011         LIKE fmcz_t.fmcz011
   DEFINE l_fmcz013         LIKE fmcz_t.fmcz013
   DEFINE l_fmcz015         LIKE fmcz_t.fmcz015
   DEFINE l_sql             STRING

   LET r_success = TRUE

   LET l_sql = "SELECT fmcz016,fmcz017,fmcz009,fmcz011,fmcz013,fmcz015 FROM fmcz_t ",
               " WHERE fmczent   = '",g_enterprise,"'",
               "   AND fmczdocno = '",g_fmcy_m.fmcydocno,"'",
               "   AND fmcz004   = '2'"
   PREPARE afmt180_fmdh_upd_prep FROM l_sql
   DECLARE afmt180_fmdh_upd_curs CURSOR FOR afmt180_fmdh_upd_prep

   FOREACH afmt180_fmdh_upd_curs INTO l_fmcz016,l_fmcz017,l_fmcz009,l_fmcz011,l_fmcz013,l_fmcz015
      UPDATE fmdh_t SET fmdh008 = fmdh008 - l_fmcz009,
                        fmdh016 = fmdh016 - l_fmcz011,
                        fmdh017 = fmdh017 - l_fmcz013,
                        fmdh018 = fmdh018 - l_fmcz015
       WHERE fmdhent   = g_enterprise
         AND fmdhdocno = l_fmcz016
         AND fmdhseq   = l_fmcz017
       IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] <> 1 THEN
         LET g_errparam.extend = "fmdc_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         LET r_success = FALSE
       END IF
   END FOREACH

   RETURN r_success

END FUNCTION

 
{</section>}
 
