#該程式未解開Section, 採用最新樣板產出!
{<section id="afmq520.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:4(2015-05-28 11:57:46), PR版次:0004(2016-10-28 15:34:45)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000038
#+ Filename...: afmq520
#+ Description: 現值查詢
#+ Creator....: 03080(2015-05-26 16:59:03)
#+ Modifier...: 03080 -SD/PR- 08171
 
{</section>}
 
{<section id="afmq520.global" >}
#應用 q02 樣板自動產生(Version:38)
#add-point:填寫註解說明
#151028    151028   By albireo       排除作廢
#161006-00005#25  2016/10/21  By 06814    1.投資組織(fmmg002)開窗改用q_ooef001_33()，ooef206條件拿掉 
#                                         2.帳務中心(l_site)開窗改用q_ooef001_46() 
#161028-00032#1   2016/10/28  By 08171    AFM_帳套/法人/來源組織權限控管,交易對象參考控制組
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_fmmg_d RECORD
       #statepic       LIKE type_t.chr1,
       
       fmmg002 LIKE fmmg_t.fmmg002, 
   fmmg002_desc LIKE type_t.chr500, 
   fmmgdocno LIKE fmmg_t.fmmgdocno, 
   l_fmmjdocno LIKE type_t.chr20, 
   fmmg005 LIKE fmmg_t.fmmg005, 
   fmmg003 LIKE fmmg_t.fmmg003, 
   fmmg003_desc LIKE type_t.chr500 
       END RECORD
 
 
#add-point:自定義模組變數-標準(Module Variable)  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_input     RECORD
                   l_site      LIKE ooef_t.ooef001,
                   l_ld        LIKE glaa_t.glaald,
                   l_comp      LIKE ooef_t.ooef001,
                   l_site_desc LIKE type_t.chr80,
                   l_ld_desc   LIKE type_t.chr80,
                   l_comp_desc LIKE type_t.chr80
                   END RECORD
DEFINE g_memo_arr DYNAMIC ARRAY OF RECORD
                   fmmp001     LIKE fmmp_t.fmmp001,
                   fmmp002     LIKE fmmp_t.fmmp002,
                   fmmp005     LIKE fmmp_t.fmmp005,
                   fmmj006     LIKE fmmj_t.fmmj006,
                   fmmj007     LIKE fmmj_t.fmmj007,
                   fmmp006     LIKE fmmp_t.fmmp006,
                   fmmp007     LIKE fmmp_t.fmmp007,
                   fmmp008     LIKE fmmp_t.fmmp008,
                   fmmp009     LIKE fmmp_t.fmmp009
                   END RECORD
DEFINE g_rec_b2    LIKE type_t.num10
DEFINE g_wc_site   STRING
DEFINE g_wc_ld     STRING
#end add-point
 
#模組變數(Module Variables)
DEFINE g_master                     type_g_fmmg_d
DEFINE g_master_t                   type_g_fmmg_d
DEFINE g_fmmg_d          DYNAMIC ARRAY OF type_g_fmmg_d
DEFINE g_fmmg_d_t        type_g_fmmg_d
 
      
DEFINE g_wc                 STRING
DEFINE g_wc_t               STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                STRING
DEFINE g_wc_filter          STRING
DEFINE g_wc_filter_t        STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num10              
DEFINE l_ac_d               LIKE type_t.num10              #單身idx 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_current_page       LIKE type_t.num5              #目前所在頁數
DEFINE g_detail_cnt         LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_detail_cnt2        LIKE type_t.num10             #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_master_idx         LIKE type_t.num10
DEFINE g_detail_idx         LIKE type_t.num10
DEFINE g_detail_idx2        LIKE type_t.num10
DEFINE g_hyper_url          STRING                        #hyperlink的主要網址
DEFINE g_tot_cnt            LIKE type_t.num10             #計算總筆數
DEFINE g_num_in_page        LIKE type_t.num10             #每頁筆數
DEFINE g_current_row_tot    LIKE type_t.num10             #目前所在總筆數
DEFINE g_page_act_list      STRING                        #分頁ACTION清單
DEFINE g_page_start_num     LIKE type_t.num10             #目前頁面起始筆數
DEFINE g_page_end_num       LIKE type_t.num10             #目前頁面結束筆數
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_wc_filter_table    STRING
DEFINE g_detail_page_action STRING
DEFINE g_pagestart          LIKE type_t.num10
 
 
 
#add-point:自定義模組變數-客製(Module Variable) name="global.variable_customerization"

##end add-point
 
#add-point:傳入參數說明 name="global.argv"

#end add-point
 
{</section>}
 
{<section id="afmq520.main" >}
 #應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("afm","")
 
   #add-point:作業初始化 name="main.init"
   
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " ", 
                      " FROM ",
                      " "
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmq520_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT  ",
               " FROM  t0",
               
               " WHERE  "
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE afmq520_master_referesh FROM g_sql
 
   #add-point:main段define_sql name="main.body.define_sql"
   
   #end add-point 
   LET g_forupd_sql = ""
   #add-point:main段define_sql name="main.body.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE afmq520_bcl CURSOR FROM g_forupd_sql
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_afmq520 WITH FORM cl_ap_formpath("afm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL afmq520_init()   
 
      #進入選單 Menu (="N")
      CALL afmq520_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_afmq520
      
   END IF 
   
   CLOSE afmq520_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="afmq520.init" >}
#+ 畫面資料初始化
PRIVATE FUNCTION afmq520_init()
   #add-point:init段define-客製 name="init.define_customerization"
   
   #end add-point
   #add-point:init段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
 
   #add-point:FUNCTION前置處理 name="init.before_function"
   
   #end add-point
 
   LET g_error_show  = 1
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   
   
   #add-point:畫面資料初始化 name="init.init"
 
   #end add-point
 
   CALL afmq520_default_search()  
END FUNCTION
 
{</section>}
 
{<section id="afmq520.default_search" >}
PRIVATE FUNCTION afmq520_default_search()
   #add-point:default_search段define-客製 name="default_search.define_customerization"
   
   #end add-point
   #add-point:default_search段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point
 
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point
 
   #應用 qs27 樣板自動產生(Version:3)
   #+ 組承接外部參數時資料庫欄位對應條件(單身)
   IF NOT cl_null(g_argv[01]) THEN
      LET g_wc = g_wc, " fmmgdocno = '", g_argv[01], "' AND "
   END IF
 
 
 
 
 
 
 
   IF NOT cl_null(g_wc) THEN
      LET g_wc = g_wc.subString(1,g_wc.getLength()-5)
   ELSE
      #預設查詢條件
      LET g_wc = " 1=2"
   END IF
 
   #add-point:default_search段開始後 name="default_search.after"
   CALL s_fin_create_account_center_tmp()
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.ui_dialog" >}
#+ 功能選單 
PRIVATE FUNCTION afmq520_ui_dialog()
   #add-point:ui_dialog段define-客製 name="ui_dialog.define_customerization"
   
   #end add-point 
   DEFINE ls_wc      STRING
   DEFINE li_idx     LIKE type_t.num10
   DEFINE lc_action_choice_old     STRING
   DEFINE lc_current_row           LIKE type_t.num10
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
                     prog       STRING,
                     actionid   STRING,
                     background LIKE type_t.chr1,
                     param      DYNAMIC ARRAY OF STRING
                     END RECORD
   #add-point:ui_dialog段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point 
 
   #add-point:FUNCTION前置處理 name="ui_dialog.before_function"
   
   #end add-point
 
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()   
   
   LET g_action_choice = " "
   LET lc_action_choice_old = ""
   CALL cl_set_act_visible("accept,cancel", FALSE)
   CALL cl_get_num_in_page() RETURNING g_num_in_page
         
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
 
   LET g_detail_page_action = "detail_first"
   LET g_pagestart = 1
   LET g_current_row_tot = 1
   LET g_page_start_num = 1
   LET g_page_end_num = g_num_in_page
   IF NOT cl_null(g_wc) AND g_wc != " 1=2" THEN
      LET g_detail_idx = 1
      LET g_detail_idx2 = 1
      CALL afmq520_b_fill()
   ELSE
      CALL afmq520_query()
   END IF
   
   WHILE TRUE
 
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_fmmg_d.clear()
 
         LET g_wc  = " 1=2"
         LET g_wc2 = " 1=1"
         LET g_action_choice = ""
         LET g_detail_page_action = "detail_first"
         LET g_pagestart = 1
         LET g_current_row_tot = 1
         LET g_page_start_num = 1
         LET g_page_end_num = g_num_in_page
         LET g_detail_idx = 1
         LET g_detail_idx2 = 1
 
         CALL afmq520_init()
      END IF
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_fmmg_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               LET g_current_page = 1
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
 
               #為避免按上下筆影響執行效能，所以有作一些處理
               LET lc_action_choice_old = g_action_choice
               LET g_action_choice = "fetch"
               CALL afmq520_fetch()
               LET g_action_choice = lc_action_choice_old
               LET g_master_idx = l_ac
               CALL afmq520_detail_action_trans()
               #add-point:input段before row name="input.body.before_row"
               CALL afmq520_b_fill2(l_ac)
               #end add-point  
            
            #自訂ACTION(detail_show,page_1)
            
 
            #add-point:page1自定義行為 name="ui_dialog.body.page1.action"
            
            #end add-point
 
         END DISPLAY
      
 
         
 
      
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_memo_arr TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b2)

               BEFORE ROW


               BEFORE DISPLAY

         END DISPLAY
         #end add-point
         
         BEFORE DIALOG
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            CALL afmq520_detail_action_trans()
 
            #add-point:ui_dialog段before dialog name="ui_dialog.bef_dialog"
            
            #end add-point
 
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL afmq520_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION datainfo
            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               
               #add-point:ON ACTION datainfo name="menu.datainfo"
               
               #END add-point
               
               
            END IF
 
 
 
 
      
         ON ACTION filter
            LET g_action_choice="filter"
            CALL afmq520_filter()
            #add-point:ON ACTION filter name="menu.filter"
            
            #END add-point
 
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice = "exit"
            EXIT DIALOG
 
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
 
         ON ACTION datarefresh   # 重新整理
            LET g_error_show = 1
            CALL afmq520_b_fill()
 
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_fmmg_d)
               LET g_export_id[1]   = "s_detail1"
 
               #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
               
               #END add-point
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
 
 
         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum name="ui_dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
 
         ON ACTION detail_first               #page first
            LET g_action_choice = "detail_first"
            LET g_detail_page_action = "detail_first"
            CALL afmq520_b_fill()
 
         ON ACTION detail_previous                #page previous
            LET g_action_choice = "detail_previous"
            LET g_detail_page_action = "detail_previous"
            CALL afmq520_b_fill()
 
         ON ACTION detail_next                #page next
            LET g_action_choice = "detail_next"
            LET g_detail_page_action = "detail_next"
            CALL afmq520_b_fill()
 
         ON ACTION detail_last                #page last
            LET g_action_choice = "detail_last"
            LET g_detail_page_action = "detail_last"
            CALL afmq520_b_fill()
 
         
         
 
         #add-point:ui_dialog段自定義action name="ui_dialog.more_action"
         
         #end add-point
      
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
 
         #add-point:查詢方案相關ACTION設定前 name="ui_dialog.set_qbe_action_before"
         
         #end add-point
 
         #add-point:查詢方案相關ACTION設定後 name="ui_dialog.set_qbe_action_after"
         
         #end add-point
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.query" >}
#+ QBE資料查詢
PRIVATE FUNCTION afmq520_query()
   #add-point:query段define-客製 name="query.define_customerization"
   
   #end add-point 
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_wc2     LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   DEFINE l_wc_main  STRING
   DEFINE l_comp_wc  STRING  #161028-00032#1
   #end add-point 
   
   #add-point:FUNCTION前置處理 name="query.before_function"
   
   #end add-point
 
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_fmmg_d.clear()
 
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
   
   LET g_qryparam.state = "c"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_wc_filter = " 1=1"
   LET g_detail_page_action = ""
   LET g_pagestart = 1
   
   #wc備份
   LET ls_wc = g_wc
   LET ls_wc2 = g_wc2
   LET g_master_idx = l_ac
 
   
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單身根據table分拆construct
      CONSTRUCT g_wc_table ON fmmg002,fmmgdocno,fmmg005,fmmg003
           FROM s_detail1[1].b_fmmg002,s_detail1[1].b_fmmgdocno,s_detail1[1].b_fmmg005,s_detail1[1].b_fmmg003 
 
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
           # NEXT FIELD l_site
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #----<<b_fmmg002>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_fmmg002
            #add-point:BEFORE FIELD b_fmmg002 name="construct.b.page1.b_fmmg002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_fmmg002
            
            #add-point:AFTER FIELD b_fmmg002 name="construct.a.page1.b_fmmg002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.b_fmmg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmg002
            #add-point:ON ACTION controlp INFIELD b_fmmg002 name="construct.c.page1.b_fmmg002"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "ooef017 = '",g_input.l_comp,"' AND ooef001 IN ",g_wc_site CLIPPED
            CALL q_ooef001()
            DISPLAY g_qryparam.return1 TO b_fmmg002
            NEXT FIELD b_fmmg002
            #END add-point
 
 
         #----<<fmmg002_desc>>----
         #----<<b_fmmgdocno>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_fmmgdocno
            #add-point:BEFORE FIELD b_fmmgdocno name="construct.b.page1.b_fmmgdocno"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_fmmgdocno
            
            #add-point:AFTER FIELD b_fmmgdocno name="construct.a.page1.b_fmmgdocno"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.b_fmmgdocno
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmgdocno
            #add-point:ON ACTION controlp INFIELD b_fmmgdocno name="construct.c.page1.b_fmmgdocno"
            
            #END add-point
 
 
         #----<<l_fmmjdocno>>----
         #----<<b_fmmg005>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_fmmg005
            #add-point:BEFORE FIELD b_fmmg005 name="construct.b.page1.b_fmmg005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_fmmg005
            
            #add-point:AFTER FIELD b_fmmg005 name="construct.a.page1.b_fmmg005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.b_fmmg005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmg005
            #add-point:ON ACTION controlp INFIELD b_fmmg005 name="construct.c.page1.b_fmmg005"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_fmmg005()
            DISPLAY g_qryparam.return1 TO b_fmmg005
            NEXT FIELD b_fmmg005
            #END add-point
 
 
         #----<<b_fmmg003>>----
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD b_fmmg003
            #add-point:BEFORE FIELD b_fmmg003 name="construct.b.page1.b_fmmg003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD b_fmmg003
            
            #add-point:AFTER FIELD b_fmmg003 name="construct.a.page1.b_fmmg003"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.b_fmmg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmg003
            #add-point:ON ACTION controlp INFIELD b_fmmg003 name="construct.c.page1.b_fmmg003"
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_fmma001()
            DISPLAY g_qryparam.return1 TO b_fmmg003
            NEXT FIELD b_fmmg003
            #END add-point
 
 
         #----<<fmmg003_desc>>----
   
       
      END CONSTRUCT
      
 
      
 
  
      #add-point:query段more_construct name="query.more_construct"
      CONSTRUCT l_wc_main ON fmmg002,fmmjdocno,fmmg005,fmmg003,fmmjdocno
         FROM fmmg002,fmmjdocno,fmmg005,fmmg003,s_detail1[1].l_fmmjdocno
         ON ACTION controlp INFIELD fmmg002
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            #161006-00005#25 20161021 mark by beckxie---S
            #LET g_qryparam.where = "ooef017 = '",g_input.l_comp,"' AND ooef001 IN ",g_wc_site CLIPPED," AND ooef206 = 'Y'"
            #CALL q_ooef001()
            #161006-00005#25 20161021 mark by beckxie---E
            #161006-00005#25 20161021  add by beckxie---S
            LET g_qryparam.where = "ooef017 = '",g_input.l_comp,"' AND ooef001 IN ",g_wc_site
            CALL q_ooef001_33()
            #161006-00005#25 20161021  add by beckxie---E
            DISPLAY g_qryparam.return1 TO fmmg002
            NEXT FIELD fmmg002

         ON ACTION controlp INFIELD fmmjdocno
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "fmmjsite IN ",g_wc_site," "
            CALL q_fmmjdocno()
            DISPLAY g_qryparam.return1 TO fmmjdocno
            NEXT FIELD fmmjdocno        

         ON ACTION controlp INFIELD l_fmmjdocno
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = "fmmjsite IN ",g_wc_site," "
            CALL q_fmmjdocno()
            DISPLAY g_qryparam.return1 TO l_fmmjdocno
            NEXT FIELD l_fmmjdocno      
            
         ON ACTION controlp INFIELD fmmg005
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_fmmg005()
            DISPLAY g_qryparam.return1 TO fmmg005
            NEXT FIELD fmmg005
             
         ON ACTION controlp INFIELD fmmg003
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_fmma001()
            DISPLAY g_qryparam.return1 TO fmmg003
            NEXT FIELD fmmg003
      END CONSTRUCT
      
      
      INPUT BY NAME g_input.l_site,g_input.l_ld,g_input.l_comp
          ATTRIBUTE(WITHOUT DEFAULTS)
            
          AFTER FIELD l_site
             LET g_input.l_site_desc = ''
             DISPLAY BY NAME g_input.l_site_desc
             IF NOT cl_null(g_input.l_site)THEN
                CALL s_fin_account_center_with_ld_chk(g_input.l_site,g_input.l_ld,g_user,'3','Y','',g_today)
                    RETURNING g_sub_success,g_errno
                IF NOT g_sub_success THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = g_errno
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET g_input.l_site = ''
                   LET g_input.l_site_desc = ''
                  
                   DISPLAY BY NAME g_input.l_site,g_input.l_site_desc
                   NEXT FIELD CURRENT
                END IF
                #取得所屬法人+帳別
                CALL s_fin_orga_get_comp_ld(g_input.l_site) RETURNING g_sub_success,g_errno,g_input.l_comp,g_input.l_ld
                LET g_input.l_comp_desc = s_desc_get_department_desc(g_input.l_comp)  
                DISPLAY BY NAME g_input.l_comp_desc ,g_input.l_comp
                LET g_input.l_ld_desc = s_desc_get_ld_desc(g_input.l_ld)
                DISPLAY BY NAME g_input.l_ld,g_input.l_ld_desc
                CALL s_fin_account_center_sons_query('3',g_input.l_site,g_today,'1')
                CALL s_fin_account_center_sons_str() RETURNING g_wc_site
                CALL s_fin_get_wc_str(g_wc_site) RETURNING g_wc_site
                CALL s_fin_account_center_ld_str() RETURNING g_wc_ld
                CALL s_fin_get_wc_str(g_wc_ld) RETURNING g_wc_ld
             END IF
             LET g_input.l_site_desc = s_desc_get_department_desc(g_input.l_site)  
             DISPLAY BY NAME g_input.l_site_desc 
             #161028-00032#1 --s add
             CALL s_fin_account_center_sons_query('3',g_input.l_site,g_today,'1')
             CALL s_fin_account_center_sons_str() RETURNING g_wc_site
             CALL s_fin_get_wc_str(g_wc_site) RETURNING g_wc_site
             CALL s_fin_account_center_ld_str() RETURNING g_wc_ld
             CALL s_fin_get_wc_str(g_wc_ld) RETURNING g_wc_ld  
             #161028-00032#1 --e add             

          AFTER FIELD l_ld
             LET g_input.l_ld_desc  = ''
             DISPLAY BY NAME g_input.l_ld_desc
             IF NOT cl_null(g_input.l_ld) THEN
               #CALL s_fin_account_center_with_ld_chk(g_input.l_site,g_input.l_ld,g_user,'3','N','',g_today) RETURNING g_sub_success,g_errno      #161028-00032#1 mark
                CALL s_fin_account_center_with_ld_chk(g_input.l_site,g_input.l_ld,g_user,'3','Y',g_wc_ld,g_today) RETURNING g_sub_success,g_errno #161028-00032#1 add
                IF NOT g_sub_success THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = g_errno
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET g_input.l_ld = ''
                   LET g_input.l_ld_desc = s_desc_get_ld_desc(g_input.l_ld)
                   LET g_input.l_comp = ''
                   LET g_input.l_comp_desc = ''
                   DISPLAY BY NAME g_input.l_ld_desc,g_input.l_ld,g_input.l_comp,g_input.l_comp_desc

                   NEXT FIELD CURRENT
                END IF
                #檢查輸入帳套是否存在帳務中心下帳套範圍內
                IF s_chr_get_index_of(g_wc_ld,g_input.l_ld,1) = 0 THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = 'aap-00033'
                   LET g_errparam.extend = ''
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET g_input.l_ld = ''
                   LET g_input.l_ld_desc= ''
                   LET g_input.l_comp = ''
                   LET g_input.l_comp_desc = ''
                   DISPLAY BY NAME g_input.l_ld_desc,g_input.l_ld,g_input.l_comp,g_input.l_comp_desc
                   NEXT FIELD CURRENT
                END IF
                SELECT glaacomp INTO g_input.l_comp FROM glaa_t
                 WHERE glaaent = g_enterprise
                   AND glaald = g_input.l_ld
                LET g_input.l_comp_desc = s_desc_get_department_desc(g_input.l_comp)  
                DISPLAY BY NAME g_input.l_comp_desc ,g_input.l_comp
             END IF
             LET g_input.l_ld_desc  = s_desc_get_ld_desc(g_input.l_ld)    
             DISPLAY BY NAME g_input.l_ld_desc
             SELECT glaacomp INTO g_input.l_comp FROM glaa_t
              WHERE glaaent = g_enterprise
                AND glaald = g_input.l_ld
             LET g_input.l_comp_desc = s_desc_get_department_desc(g_input.l_comp)  
             DISPLAY BY NAME g_input.l_comp_desc ,g_input.l_comp

             
          ON ACTION controlp INFIELD l_site
             INITIALIZE g_qryparam.* TO NULL     
             LET g_qryparam.state = 'i'
             LET g_qryparam.reqry = FALSE
             LET g_qryparam.default1 = g_input.l_site
             #161006-00005#25 20161021 mark by beckxie---S
             #LET g_qryparam.where = " ooef204 = 'Y'"
             #CALL q_ooef001()
             #161006-00005#25 20161021 mark by beckxie---E
             CALL q_ooef001_46()   #161006-00005#25 20161021 add by beckxie
             LET g_input.l_site =  g_qryparam.return1 
             DISPLAY BY NAME g_input.l_site
             LET g_input.l_site_desc = s_desc_get_department_desc(g_input.l_site)  
             DISPLAY BY NAME g_input.l_site_desc  
             NEXT FIELD l_site
          ON ACTION controlp INFIELD l_ld
             #161028-00032#1 --s add
             #取得帳務組織下所屬成員之帳別   
             CALL s_fin_account_center_comp_str() RETURNING l_comp_wc
             #將取回的字串轉換為SQL條件
             CALL afmq520_get_ooef001_wc(l_comp_wc) RETURNING l_comp_wc
             #161028-00032#1 --e add 
             INITIALIZE g_qryparam.* TO NULL
             LET g_qryparam.state = 'i'
             LET g_qryparam.default1 = g_input.l_ld
             LET g_qryparam.reqry = FALSE
             LET g_qryparam.arg1 = g_user
             LET g_qryparam.arg2 = g_dept
             #LET g_qryparam.where = "glaald IN ",g_wc_ld CLIPPED #161028-00032#1 nark
             LET g_qryparam.where = " (glaa008 = 'Y' OR glaa014 = 'Y') AND glaacomp IN ",l_comp_wc,"" #161028-00032#1 add
             CALL q_authorised_ld()
             LET g_input.l_ld =  g_qryparam.return1 
             DISPLAY BY NAME g_input.l_ld
             LET g_input.l_ld_desc  = s_desc_get_ld_desc(g_input.l_ld)    
             DISPLAY BY NAME g_input.l_ld_desc
             
             SELECT glaacomp INTO g_input.l_comp FROM glaa_t
              WHERE glaaent = g_enterprise
                AND glaald = g_input.l_ld
             LET g_input.l_comp_desc = s_desc_get_department_desc(g_input.l_comp)  
             DISPLAY BY NAME g_input.l_comp_desc ,g_input.l_comp
             NEXT FIELD l_ld  
             
          
      END INPUT
      
      BEFORE DIALOG
         CALL afmq520_qbeclear()
      #end add-point 
 
      ON ACTION accept
         #add-point:ON ACTION accept name="query.accept"
         
         #end add-point
 
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
 
      #add-point:query段查詢方案相關ACTION設定前 name="query.set_qbe_action_before"
      
      #end add-point 
 
      ON ACTION qbeclear   # 條件清除
         CLEAR FORM
         #add-point:條件清除後 name="query.qbeclear"
         CALL afmq520_qbeclear()
         #end add-point 
 
      #add-point:query段查詢方案相關ACTION設定後 name="query.set_qbe_action_after"
      
      #end add-point 
 
   END DIALOG
 
   
 
   LET g_wc = g_wc_table 
 
 
   
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
 
 
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc = " 1=2"
      LET g_wc2 = " 1=1"
      LET g_wc_filter = g_wc_filter_t
      RETURN
   ELSE
      LET g_master_idx = 1
   END IF
        
   #add-point:cs段after_construct name="cs.after_construct"
   IF INT_FLAG THEN
   ELSE
      LET g_wc2 = g_wc2 CLIPPED," AND ",l_wc_main CLIPPED, " AND ",g_wc_table CLIPPED
      
      LET g_wc2 = g_wc2 CLIPPED," AND fmmg002 IN ",g_wc_site CLIPPED
   END IF   
   #end add-point
        
   LET g_error_show = 1
   CALL afmq520_b_fill()
   LET l_ac = g_master_idx
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = -100 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
 
   END IF
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
   
END FUNCTION
 
{</section>}
 
{<section id="afmq520.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION afmq520_b_fill()
   #add-point:b_fill段define-客製 name="b_fill.define_customerization"
   
   #end add-point
   DEFINE ls_wc           STRING
   DEFINE ls_wc2          STRING
   DEFINE ls_sql_rank     STRING
   #add-point:b_fill段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   
   #end add-point
 
 
   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   
   LET ls_wc = g_wc, " AND ", g_wc2, " AND ", g_wc_filter
   
   LET ls_sql_rank = "SELECT  UNIQUE fmmg002,'',fmmgdocno,'',fmmg005,fmmg003,''  ,DENSE_RANK() OVER( ORDER BY fmmg_t.fmmgdocno) AS RANK FROM fmmg_t", 
 
 
 
                     "",
                     " WHERE fmmgent= ? AND 1=1 AND ", ls_wc
    
   LET ls_sql_rank = ls_sql_rank, cl_sql_add_filter("fmmg_t"),
                     " ORDER BY fmmg_t.fmmgdocno"
 
   #add-point:b_fill段rank_sql_after name="b_fill.rank_sql_after"
   
   #end add-point
 
   LET g_sql = "SELECT COUNT(1) FROM (",ls_sql_rank,")"
 
   PREPARE b_fill_cnt_pre FROM g_sql
   EXECUTE b_fill_cnt_pre USING g_enterprise INTO g_tot_cnt
   FREE b_fill_cnt_pre
 
   #add-point:b_fill段rank_sql_after_count name="b_fill.rank_sql_after_count"
   
   #end add-point
 
   CASE g_detail_page_action
      WHEN "detail_first"
          LET g_pagestart = 1
 
      WHEN "detail_previous"
          LET g_pagestart = g_pagestart - g_num_in_page
          IF g_pagestart < 1 THEN
              LET g_pagestart = 1
          END IF
 
      WHEN "detail_next"
         LET g_pagestart = g_pagestart + g_num_in_page
         IF g_pagestart > g_tot_cnt THEN
            LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
            WHILE g_pagestart > g_tot_cnt
               LET g_pagestart = g_pagestart - g_num_in_page
            END WHILE
         END IF
 
      WHEN "detail_last"
         LET g_pagestart = g_tot_cnt - (g_tot_cnt mod g_num_in_page) + 1
         WHILE g_pagestart > g_tot_cnt
            LET g_pagestart = g_pagestart - g_num_in_page
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
 
   END CASE
 
   LET g_sql = "SELECT fmmg002,'',fmmgdocno,'',fmmg005,fmmg003,''",
               " FROM (",ls_sql_rank,")",
              " WHERE RANK >= ",g_pagestart,
                " AND RANK < ",g_pagestart + g_num_in_page
 
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   LET g_sql = "SELECT fmmg002,'',fmmgdocno,fmmjdocno,fmmg005,fmmg003 ",
                  "  FROM fmmg_t,fmmj_t ",
                  " WHERE fmmgent = fmmjent ",
                  "   AND fmmgdocno = fmmj001 ",
                  "   AND fmmgent = ? ",
                  "   AND fmmjstus <> 'X' ",   #Albireo 151028
                  "   AND ",g_wc2 CLIPPED
   #end add-point
 
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE afmq520_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR afmq520_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_fmmg_d.clear()
 
   #add-point:陣列清空 name="b_fill.array_clear"
   CALL g_memo_arr.clear()
   #end add-point
 
   LET g_cnt = l_ac
   IF g_cnt = 0 THEN
      LET g_cnt = 1
   END IF
   LET l_ac = 1   
 
   FOREACH b_fill_curs INTO g_fmmg_d[l_ac].fmmg002,g_fmmg_d[l_ac].fmmg002_desc,g_fmmg_d[l_ac].fmmgdocno, 
       g_fmmg_d[l_ac].l_fmmjdocno,g_fmmg_d[l_ac].fmmg005,g_fmmg_d[l_ac].fmmg003,g_fmmg_d[l_ac].fmmg003_desc 
 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
 
         EXIT FOREACH
      END IF
      
      #LET g_fmmg_d[l_ac].statepic = cl_get_actipic(g_fmmg_d[l_ac].statepic)
 
      
 
      #add-point:b_fill段資料填充 name="b_fill.fill"
      LET g_fmmg_d[l_ac].fmmg002_desc = s_desc_get_department_desc(g_fmmg_d[l_ac].fmmg002)  
      LET g_fmmg_d[l_ac].fmmg003_desc = s_desc_fmma001_desc(g_fmmg_d[l_ac].fmmg003)
      #end add-point
 
      CALL afmq520_detail_show("'1'")      
 
      CALL afmq520_fmmg_t_mask()
 
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend =  "" 
            LET g_errparam.code   =  9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
 
         END IF
         EXIT FOREACH
      END IF
      LET l_ac = l_ac + 1
      
   END FOREACH
   LET g_error_show = 0
   
 
   
   CALL g_fmmg_d.deleteElement(g_fmmg_d.getLength())   
 
   #add-point:陣列長度調整 name="b_fill.array_deleteElement"
   
   #end add-point
   
   #add-point:b_fill段資料填充(其他單身) name="b_fill.others.fill"
   LET g_tot_cnt = g_fmmg_d.getLength()
   CALL afmq520_b_fill2(1)
   #end add-point
 
   LET g_detail_cnt = g_fmmg_d.getLength()
#  DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   CLOSE b_fill_curs
   FREE afmq520_pb
 
   #調整單身index指標，避免翻頁後指到空白筆數
   CALL afmq520_detail_index_setting()
 
   #重新計算單身筆數並呈現
   CALL afmq520_detail_action_trans()
 
   IF g_fmmg_d.getLength() > 0 THEN
      LET l_ac = 1
      CALL afmq520_fetch()
   END IF
   
      CALL afmq520_filter_show('fmmg002','b_fmmg002')
   CALL afmq520_filter_show('fmmgdocno','b_fmmgdocno')
   CALL afmq520_filter_show('fmmg005','b_fmmg005')
   CALL afmq520_filter_show('fmmg003','b_fmmg003')
 
 
   #add-point:b_fill段結束前 name="b_fill.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.fetch" >}
#+ 單身陣列填充2
PRIVATE FUNCTION afmq520_fetch()
   #add-point:fetch段define-客製 name="fetch.define_customerization"
   
   #end add-point
   DEFINE li_ac           LIKE type_t.num10
   #add-point:fetch段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:FUNCTION前置處理 name="fetch.before_function"
   
   #end add-point
 
 
   #add-point:陣列清空 name="fetch.array_clear"
   
   #end add-point
   
   LET li_ac = l_ac 
   
 
   
   #add-point:單身填充後 name="fetch.after_fill"
   
   #end add-point 
   
 
   #add-point:陣列筆數調整 name="fetch.array_deleteElement"
   
   #end add-point
 
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="afmq520.detail_show" >}
#+ 顯示相關資料
PRIVATE FUNCTION afmq520_detail_show(ps_page)
   #add-point:show段define-客製 name="detail_show.define_customerization"
   
   #end add-point
   DEFINE ps_page    STRING
   DEFINE ls_sql     STRING
   #add-point:show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   
   #end add-point
 
   #add-point:detail_show段之前 name="detail_show.before"
   
   #end add-point
   
   
 
   #讀入ref值
   IF ps_page.getIndexOf("'1'",1) > 0 THEN
      #帶出公用欄位reference值page1
      
 
      #add-point:show段單身reference name="detail_show.body.reference"
      
      #end add-point
   END IF
   
 
 
   #add-point:detail_show段之後 name="detail_show.after"
   
   #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.filter" >}
#+ filter過濾功能
PRIVATE FUNCTION afmq520_filter()
   #add-point:filter段define-客製 name="filter.define_customerization"
   
   #end add-point
   DEFINE  ls_result   STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point
   
   #add-point:FUNCTION前置處理 name="filter.before_function"
   
   #end add-point
 
   LET l_ac = 1
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", TRUE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", TRUE)
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON fmmg002,fmmgdocno,fmmg005,fmmg003
                          FROM s_detail1[1].b_fmmg002,s_detail1[1].b_fmmgdocno,s_detail1[1].b_fmmg005, 
                              s_detail1[1].b_fmmg003
 
         BEFORE CONSTRUCT
                     DISPLAY afmq520_filter_parser('fmmg002') TO s_detail1[1].b_fmmg002
            DISPLAY afmq520_filter_parser('fmmgdocno') TO s_detail1[1].b_fmmgdocno
            DISPLAY afmq520_filter_parser('fmmg005') TO s_detail1[1].b_fmmg005
            DISPLAY afmq520_filter_parser('fmmg003') TO s_detail1[1].b_fmmg003
 
 
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #----<<b_fmmg002>>----
         #Ctrlp:construct.c.filter.page1.b_fmmg002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmg002
            #add-point:ON ACTION controlp INFIELD b_fmmg002 name="construct.c.filter.page1.b_fmmg002"
            
            #END add-point
 
 
         #----<<fmmg002_desc>>----
         #----<<b_fmmgdocno>>----
         #Ctrlp:construct.c.filter.page1.b_fmmgdocno
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmgdocno
            #add-point:ON ACTION controlp INFIELD b_fmmgdocno name="construct.c.filter.page1.b_fmmgdocno"
            
            #END add-point
 
 
         #----<<l_fmmjdocno>>----
         #----<<b_fmmg005>>----
         #Ctrlp:construct.c.filter.page1.b_fmmg005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmg005
            #add-point:ON ACTION controlp INFIELD b_fmmg005 name="construct.c.filter.page1.b_fmmg005"
            
            #END add-point
 
 
         #----<<b_fmmg003>>----
         #Ctrlp:construct.c.filter.page1.b_fmmg003
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD b_fmmg003
            #add-point:ON ACTION controlp INFIELD b_fmmg003 name="construct.c.filter.page1.b_fmmg003"
            
            #END add-point
 
 
         #----<<fmmg003_desc>>----
   
 
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
 
      ON ACTION accept
         ACCEPT DIALOG 
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
 
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter, " "
      LET g_wc_filter_t = g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   
      CALL afmq520_filter_show('fmmg002','b_fmmg002')
   CALL afmq520_filter_show('fmmgdocno','b_fmmgdocno')
   CALL afmq520_filter_show('fmmg005','b_fmmg005')
   CALL afmq520_filter_show('fmmg003','b_fmmg003')
 
    
   CALL afmq520_b_fill()
   
   CALL gfrm_curr.setFieldHidden("formonly.sel", FALSE)
   CALL gfrm_curr.setFieldHidden("formonly.statepic", FALSE)
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.filter_parser" >}
#+ filter欄位解析
PRIVATE FUNCTION afmq520_filter_parser(ps_field)
   #add-point:filter段define-客製 name="filter_parser.define_customerization"
   
   #end add-point
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_parser.before_function"
   
   #end add-point
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.filter_show" >}
#+ Browser標題欄位顯示搜尋條件
PRIVATE FUNCTION afmq520_filter_show(ps_field,ps_object)
   #add-point:filter_show段define-客製 name="filter_show.define_customerization"
   
   #end add-point
   DEFINE ps_field         STRING
   DEFINE ps_object        STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
   #add-point:filter_show段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_show.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="filter_show.before_function"
   
   #end add-point
 
   LET ls_name = "formonly.", ps_object
 
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = afmq520_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.insert" >}
#+ insert
PRIVATE FUNCTION afmq520_insert()
   #add-point:insert段define-客製 name="insert.define_customerization"
   
   #end add-point
   #add-point:insert段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   
   #end add-point
 
   #add-point:insert段control name="insert.control"
   
   #end add-point    
   
END FUNCTION
 
{</section>}
 
{<section id="afmq520.modify" >}
#+ modify
PRIVATE FUNCTION afmq520_modify()
   #add-point:modify段define-客製 name="modify.define_customerization"
   
   #end add-point
   #add-point:modify段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point
 
   #add-point:modify段control name="modify.control"
   
   #end add-point 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.reproduce" >}
#+ reproduce
PRIVATE FUNCTION afmq520_reproduce()
   #add-point:reproduce段define-客製 name="reproduce.define_customerization"
   
   #end add-point
   #add-point:reproduce段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
 
   #add-point:reproduce段control name="reproduce.control"
   
   #end add-point 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.delete" >}
#+ delete
PRIVATE FUNCTION afmq520_delete()
   #add-point:delete段define-客製 name="delete.define_customerization"
   
   #end add-point
   #add-point:delete段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point
 
   #add-point:delete段control name="delete.control"
   
   #end add-point 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.detail_action_trans" >}
#+ 單身分頁筆數顯示及action圖片顯示切換功能
PRIVATE FUNCTION afmq520_detail_action_trans()
   #add-point:detail_action_trans段define-客製 name="detail_action_trans.define_customerization"
   
   #end add-point
   #add-point:detail_action_trans段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_action_trans.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_action_trans.before_function"
   
   #end add-point
 
   #因應單身切頁功能，筆數計算方式調整
   LET g_current_row_tot = g_pagestart + g_detail_idx - 1
   DISPLAY g_current_row_tot TO FORMONLY.h_index
   DISPLAY g_tot_cnt TO FORMONLY.h_count
 
   #顯示單身頁面的起始與結束筆數
   LET g_page_start_num = g_pagestart
   LET g_page_end_num = g_pagestart + g_num_in_page - 1
   DISPLAY g_page_start_num TO FORMONLY.p_start
   DISPLAY g_page_end_num TO FORMONLY.p_end
 
   #目前不支援跳頁功能
   LET g_page_act_list = "detail_first,detail_previous,'',detail_next,detail_last"
   CALL cl_navigator_detail_page_setting(g_page_act_list,g_current_row_tot,g_pagestart,g_num_in_page,g_tot_cnt)
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.detail_index_setting" >}
#+ 單身切頁後，index重新調整，避免翻頁後指到空白筆數
PRIVATE FUNCTION afmq520_detail_index_setting()
   #add-point:detail_index_setting段define-客製 name="deatil_index_setting.define_customerization"
   
   #end add-point
   DEFINE li_redirect     BOOLEAN
   DEFINE ldig_curr       ui.Dialog
   #add-point:detail_index_setting段define-標準  (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_index_setting.define"
   
   #end add-point
 
   #add-point:FUNCTION前置處理 name="detail_index_setting.before_function"
   
   #end add-point
 
   IF g_curr_diag IS NOT NULL THEN
      CASE
         WHEN g_curr_diag.getCurrentRow("s_detail1") <= "0"
            LET g_detail_idx = 1
            IF g_fmmg_d.getLength() > 0 THEN
               LET li_redirect = TRUE
            END IF
         WHEN g_curr_diag.getCurrentRow("s_detail1") > g_fmmg_d.getLength() AND g_fmmg_d.getLength() > 0
            LET g_detail_idx = g_fmmg_d.getLength()
            LET li_redirect = TRUE
         WHEN g_curr_diag.getCurrentRow("s_detail1") != g_detail_idx
            IF g_detail_idx > g_fmmg_d.getLength() THEN
               LET g_detail_idx = g_fmmg_d.getLength()
            END IF
            LET li_redirect = TRUE
      END CASE
   END IF
 
   IF li_redirect THEN
      LET ldig_curr = ui.Dialog.getCurrent()
      CALL ldig_curr.setCurrentRow("s_detail1", g_detail_idx)
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="afmq520.mask_functions" >}
 &include "erp/afm/afmq520_mask.4gl"
 
{</section>}
 
{<section id="afmq520.other_function" readonly="Y" >}

################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL s_aooi150_ins (传入参数)
#                  RETURNING 回传参数
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 日期 By 作者
# Modify.........:
################################################################################
PRIVATE FUNCTION afmq520_b_fill2(p_ac)
   DEFINE p_ac   LIKE type_t.num10
   DEFINE l_sql  STRING
   DEFINE l_idx  LIKE type_t.num10
   IF cl_null(p_ac) OR p_ac <= 0 THEN RETURN END IF
   LET l_sql = "SELECT fmmp001,fmmp002,fmmp005,fmmj006,fmmj007, ",
               "       fmmp006,fmmp007,fmmp008,fmmp009 ",
               "  FROM fmmp_t,fmmj_t ",
               " WHERE fmmpent = fmmjent ",
               "   AND fmmp004 = fmmjdocno ",
               "   AND fmmpstus = 'Y' ",
               "   AND fmmjent = ",g_enterprise," ",
               "   AND fmmjdocno = ? ",
               "   AND fmmpld = ? "
   PREPARE sel_fmmpp1 FROM l_sql
   DECLARE sel_fmmpc1 CURSOR FOR sel_fmmpp1
   
   LET l_idx = 1
   CALL g_memo_arr.clear()
   FOREACH sel_fmmpc1 USING g_fmmg_d[p_ac].l_fmmjdocno,g_input.l_ld INTO g_memo_arr[l_idx].*
      IF SQLCA.SQLCODE THEN EXIT FOREACH END IF      
      LET l_idx = l_idx + 1
   END FOREACH
END FUNCTION

PRIVATE FUNCTION afmq520_qbeclear()
   CLEAR FORM
   INITIALIZE g_input.* TO NULL
   CALL s_aap_get_default_apcasite('1','','') RETURNING g_sub_success,g_errno,g_input.l_site,g_input.l_ld,g_input.l_comp
   LET g_input.l_comp_desc = s_desc_get_department_desc(g_input.l_comp)    
   LET g_input.l_ld_desc  = s_desc_get_ld_desc(g_input.l_ld)             #帳套
   LET g_input.l_site_desc = s_desc_get_department_desc(g_input.l_site) 
   DISPLAY BY NAME g_input.l_site,g_input.l_site_desc,g_input.l_ld,g_input.l_comp,g_input.l_comp_desc,g_input.l_ld_desc
   
   CALL s_fin_account_center_sons_query('3',g_input.l_site,g_today,'1')
   CALL s_fin_account_center_sons_str() RETURNING g_wc_site
   CALL s_fin_get_wc_str(g_wc_site) RETURNING g_wc_site
   CALL s_fin_account_center_ld_str() RETURNING g_wc_ld
   CALL s_fin_get_wc_str(g_wc_ld) RETURNING g_wc_ld
   
   
END FUNCTION

################################################################################
# Descriptions...: 轉成SQL
# Memo...........: #161028-00032#1
# Usage..........: CALL afmq520_get_ooef001_wc(p_wc)
#                  RETURNING 回传参数
# Input parameter: p_wc 帳套
# Return code....: r_wc ('帳套')
# Date & Author..: 161028 By 08171
# Modify.........:
################################################################################
PRIVATE FUNCTION afmq520_get_ooef001_wc(p_wc)
   DEFINE p_wc       STRING
   DEFINE r_wc       STRING
   DEFINE tok        base.StringTokenizer
   DEFINE l_str      STRING

   LET tok = base.StringTokenizer.create(p_wc,",")
   WHILE tok.hasMoreTokens()
      IF cl_null(l_str) THEN
         LET l_str = tok.nextToken()
      ELSE
         LET l_str = l_str,"','",tok.nextToken()
      END IF      
   END WHILE   
   LET r_wc = "('",l_str,"')"
   
   RETURN r_wc
END FUNCTION

 
{</section>}
 
