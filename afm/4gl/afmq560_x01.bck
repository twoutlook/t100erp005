#該程式未解開Section, 採用最新樣板產出!
{<section id="afmq560_x01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2016-02-04 10:33:40), PR版次:0001(2016-01-29 11:26:27)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000027
#+ Filename...: afmq560_x01
#+ Description: 各期利息收入查詢作業
#+ Creator....: 02159(2016-01-28 17:06:34)
#+ Modifier...: 02159 -SD/PR- 02159
 
{</section>}
 
{<section id="afmq560_x01.global" readonly="Y" >}
#報表 x01 樣板自動產生(Version:7)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING,                  #where condition 
       a1 STRING                   #tmptable name
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE g_tmp_table     STRING
#end add-point
 
{</section>}
 
{<section id="afmq560_x01.main" readonly="Y" >}
PUBLIC FUNCTION afmq560_x01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 STRING                  #tm.a1  tmptable name
#add-point:init段define(客製用) name="component.define_customerization"

#end add-point
#add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.a1 = p_arg2
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   LET g_tmp_table = tm.a1
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "afmq560_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL afmq560_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL afmq560_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL afmq560_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL afmq560_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL afmq560_x01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="afmq560_x01.create_tmptable" readonly="Y" >}
PRIVATE FUNCTION afmq560_x01_create_tmptable()
 
   #清除temptable 陣列
   CALL g_rep_tmpname.clear()
   
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before name="create_tmp.before"
   
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "l_fmmj002.fmmj_t.fmmj002,l_fmmj002_desc.type_t.chr100,fmmt003.fmmt_t.fmmt003,l_fmmj003.fmmj_t.fmmj003,l_fmmj003_desc.type_t.chr100,fmmt002.fmmt_t.fmmt002,fmmsdocno.fmms_t.fmmsdocno,l_fmmj027.fmmj_t.fmmj027,fmms001.fmms_t.fmms001,fmms002.fmms_t.fmms002,l_fmmj017.fmmj_t.fmmj017,l_fmmj031.fmmj_t.fmmj031,l_fmmjdocdt.fmmj_t.fmmjdocdt,fmmt005.fmmt_t.fmmt005,fmmt006.fmmt_t.fmmt006,fmmt007.fmmt_t.fmmt007,fmmt010.fmmt_t.fmmt010,fmmt014.fmmt_t.fmmt014,l_fmmn003.fmmn_t.fmmn003,l_fmmn005.fmmn_t.fmmn005,l_fmmn006.fmmn_t.fmmn006,l_fmmt010_sum.fmmt_t.fmmt010,l_fmmt014_sum.fmmt_t.fmmt014" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after name="create_tmp.after"
   
   #end add-point:create_tmp.after
END FUNCTION
 
{</section>}
 
{<section id="afmq560_x01.ins_prep" readonly="Y" >}
PRIVATE FUNCTION afmq560_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define (客製用) name="ins_prep.define_customerization"

#end add-point:ins_prep.define
#add-point:ins_prep.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_prep.define"

#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段 name="insert_prep"
         
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
 
{</section>}
 
{<section id="afmq560_x01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION afmq560_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define(客製用) name="sel_prep.define_customerization"

#end add-point
#add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"

#end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
 
   #add-point:sel_prep g_select name="sel_prep.g_select"
    #LET g_select = "SELECT * FROM "
#   #end add-point
#   LET g_select = " SELECT '','',fmmt003,'','',fmmt002,fmmsdocno,'',fmms001,fmms002,0,0,'',fmmt005,fmmt006, 
#       fmmt007,fmmt010,fmmt014,'',0,0,0,0,fmmscomp,fmmsent,fmmsstus,fmmt001,fmmt004,fmmt008,fmmt009, 
#       fmmt011,fmmt012,fmmt013,fmmt015,fmmt016,fmmt017,fmmt018,fmmt019,fmmtseq,( SELECT ooefl004 FROM ooefl_t WHERE ooefl_t.ooefl001 = fmms_t.fmmscomp AND ooefl_t.ooeflent = fmms_t.fmmsent AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,"),x.t1_ooefl004,trim(fmmscomp)||'.'||trim((SELECT ooefl004 FROM ooefl_t WHERE ooefl_t.ooefl001 = fmms_t.fmmscomp AND ooefl_t.ooeflent = fmms_t.fmmsent AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,")),trim(fmmt001)||'.'||trim(x.t1_ooefl004)"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
     #LET g_from = " FROM ",g_tmp_table CLIPPED
#   #end add-point
#    LET g_from = " FROM fmms_t LEFT OUTER JOIN ( SELECT fmmt_t.*,( SELECT ooefl004 FROM ooefl_t t1 WHERE t1.ooefl001 = fmmt_t.fmmt001 AND t1.ooeflent = fmmt_t.fmmtent AND t1.ooefl002 = '" , 
#        g_dlang,"'" ,") t1_ooefl004 FROM fmmt_t ) x  ON fmms_t.fmmsent = x.fmmtent AND fmms_t.fmmsdocno  
#        = x.fmmtdocno"
# 
#   #add-point:sel_prep g_where name="sel_prep.g_where"
 
#   #end add-point
#    LET g_where = " WHERE " ,tm.wc CLIPPED
# 
#   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("fmms_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   LET g_sql = "SELECT * FROM ",g_tmp_table," ORDER BY fmmt002,fmms001,fmms002"
   #end add-point
   PREPARE afmq560_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE afmq560_x01_curs CURSOR FOR afmq560_x01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="afmq560_x01.ins_data" readonly="Y" >}
PRIVATE FUNCTION afmq560_x01_ins_data()
DEFINE sr RECORD 
   l_fmmj002 LIKE fmmj_t.fmmj002, 
   l_fmmj002_desc LIKE type_t.chr100, 
   fmmt003 LIKE fmmt_t.fmmt003, 
   l_fmmj003 LIKE fmmj_t.fmmj003, 
   l_fmmj003_desc LIKE type_t.chr100, 
   fmmt002 LIKE fmmt_t.fmmt002, 
   fmmsdocno LIKE fmms_t.fmmsdocno, 
   l_fmmj027 LIKE fmmj_t.fmmj027, 
   fmms001 LIKE fmms_t.fmms001, 
   fmms002 LIKE fmms_t.fmms002, 
   l_fmmj017 LIKE fmmj_t.fmmj017, 
   l_fmmj031 LIKE fmmj_t.fmmj031, 
   l_fmmjdocdt LIKE fmmj_t.fmmjdocdt, 
   fmmt005 LIKE fmmt_t.fmmt005, 
   fmmt006 LIKE fmmt_t.fmmt006, 
   fmmt007 LIKE fmmt_t.fmmt007, 
   fmmt010 LIKE fmmt_t.fmmt010, 
   fmmt014 LIKE fmmt_t.fmmt014, 
   l_fmmn003 LIKE fmmn_t.fmmn003, 
   l_fmmn005 LIKE fmmn_t.fmmn005, 
   l_fmmn006 LIKE fmmn_t.fmmn006, 
   l_fmmt010_sum LIKE fmmt_t.fmmt010, 
   l_fmmt014_sum LIKE fmmt_t.fmmt014, 
   fmmscomp LIKE fmms_t.fmmscomp, 
   fmmsent LIKE fmms_t.fmmsent, 
   fmmsstus LIKE fmms_t.fmmsstus, 
   fmmt001 LIKE fmmt_t.fmmt001, 
   fmmt004 LIKE fmmt_t.fmmt004, 
   fmmt008 LIKE fmmt_t.fmmt008, 
   fmmt009 LIKE fmmt_t.fmmt009, 
   fmmt011 LIKE fmmt_t.fmmt011, 
   fmmt012 LIKE fmmt_t.fmmt012, 
   fmmt013 LIKE fmmt_t.fmmt013, 
   fmmt015 LIKE fmmt_t.fmmt015, 
   fmmt016 LIKE fmmt_t.fmmt016, 
   fmmt017 LIKE fmmt_t.fmmt017, 
   fmmt018 LIKE fmmt_t.fmmt018, 
   fmmt019 LIKE fmmt_t.fmmt019, 
   fmmtseq LIKE fmmt_t.fmmtseq, 
   ooefl_t_ooefl004 LIKE ooefl_t.ooefl004, 
   x_t1_ooefl004 LIKE ooefl_t.ooefl004, 
   l_fmmscomp_ooefl004 LIKE type_t.chr1000, 
   l_fmmt001_ooefl004 LIKE type_t.chr1000
 END RECORD
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"

#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH afmq560_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       
       #end add-point
 
       #add-point:ins_data段before.save name="ins_data.before.save"
       
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.l_fmmj002,sr.l_fmmj002_desc,sr.fmmt003,sr.l_fmmj003,sr.l_fmmj003_desc,sr.fmmt002,sr.fmmsdocno,sr.l_fmmj027,sr.fmms001,sr.fmms002,sr.l_fmmj017,sr.l_fmmj031,sr.l_fmmjdocdt,sr.fmmt005,sr.fmmt006,sr.fmmt007,sr.fmmt010,sr.fmmt014,sr.l_fmmn003,sr.l_fmmn005,sr.l_fmmn006,sr.l_fmmt010_sum,sr.l_fmmt014_sum
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "afmq560_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save name="ins_data.after.save"
       
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
 
END FUNCTION
 
{</section>}
 
{<section id="afmq560_x01.rep_data" readonly="Y" >}
PRIVATE FUNCTION afmq560_x01_rep_data()
#add-point:rep_data.define (客製用) name="rep_data.define_customerization"

#end add-point:rep_data.define
#add-point:rep_data.define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep_data.define"

#end add-point:rep_data.define
 
    #add-point:rep_data.before name="rep_data.before"
    
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after name="rep_data.after"
    
    #end add-point:rep_data.after
END FUNCTION
 
{</section>}
 
{<section id="afmq560_x01.other_function" readonly="Y" >}

 
{</section>}
 
