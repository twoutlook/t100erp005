<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="armt100" std_prog="armt100" erpver="1.0" module="ARM" ver="1" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.armt100_qrystr" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 串查單號
# Memo...........:
# Usage..........: CALL axmt540_qrystr(p_docno)
# Input parameter: p_docno   查詢單號
# Date & Author..: 2015-5-7 By zhujing
# Modify.........:
################################################################################
PRIVATE FUNCTION armt100_qrystr(p_docno)
   DEFINE p_docno LIKE rmaa_t.rmaadocno
   DEFINE l_slip     LIKE oobal_t.oobal002
   DEFINE l_prog     LIKE oobx_t.oobx004
   DEFINE l_success  LIKE type_t.num5
   DEFINE ls_js      STRING
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   #抓取單據別
   LET l_slip = ''
   LET l_prog = ''
   IF NOT cl_null(p_docno) THEN
      CALL s_aooi200_get_slip(p_docno) RETURNING l_success,l_slip
      IF NOT cl_null(l_slip) THEN
         #抓取程式名稱
         SELECT oobx004 INTO l_prog
           FROM oobx_t
          WHERE oobxent = g_enterprise
            AND oobx001 = l_slip
      END IF
      IF NOT cl_null(l_prog) THEN
         INITIALIZE la_param.* TO NULL
         LET la_param.prog     = l_prog
         LET la_param.param[1] = p_docno
         LET ls_js = util.JSON.stringify(la_param)
         CALL cl_cmdrun_wait(ls_js)
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.armt100_rmab_default_insert" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 根據出貨單號、項次帶出訂單單號、訂單項次、訂單項序、分批序、料件編號、品名、規格、產品特征、單位、數量
# Memo...........:
# Usage..........: CALL armt100_rmab_default_insert(p_rmab003,p_rmab004)
#                  RETURNING r_success
# Input parameter: p_rmab003   出貨單號
#                : p_rmab004   出貨項次
# Return code....: r_success   
# Date & Author..: 2015-5-8 By zhujing
# Modify.........:
################################################################################
PRIVATE FUNCTION armt100_rmab_default_insert(p_rmab003,p_rmab004)
   DEFINE p_rmab003     LIKE rmab_t.rmab003
   DEFINE p_rmab004     LIKE rmab_t.rmab004
   DEFINE l_xmdk002     LIKE xmdk_t.xmdk002
   DEFINE l_xmdl035     LIKE xmdl_t.xmdl035
   DEFINE l_xmdl037     LIKE xmdl_t.xmdl037
   DEFINE l_xmdl056     LIKE xmdl_t.xmdl056
   DEFINE r_success     LIKE type_t.num5
   DEFINE l_success     LIKE type_t.num5
   DEFINE l_sql_rmab    STRING

   LET r_success = TRUE
   LET g_errno = ''

   IF cl_null(g_rmab_d[l_ac].rmab005) THEN      #訂單單號
      LET g_rmab_d[l_ac].rmab006 = ''           #訂單項次
      LET g_rmab_d[l_ac].rmab007 = ''           #訂單項序
      LET g_rmab_d[l_ac].rmab008 = ''           #分批序
   END IF

   IF cl_null(g_rmab_d[l_ac].rmab006) THEN
      LET g_rmab_d[l_ac].rmab007 = ''
      LET g_rmab_d[l_ac].rmab008 = ''
   END IF

   IF cl_null(g_rmab_d[l_ac].rmab007) THEN
      LET g_rmab_d[l_ac].rmab008 = ''
   END IF
   
   SELECT xmdk002 INTO l_xmdk002
     FROM xmdk_t 
    WHERE xmdkent = g_enterprise
      AND xmdksite = g_site
      AND xmdkdocno = p_rmab003
      

   LET l_sql_rmab = " SELECT xmdl003,xmdl004,xmdl005,xmdl006,xmdl008,xmdl009,xmdl017,xmdl018,xmdl035,xmdl037,xmdl056 ",
                    " FROM xmdl_t ",
                    " WHERE xmdldocno = '",p_rmab003,"' ",
                    "   AND xmdlseq = ",p_rmab004,
                    "   AND xmdlent = ",g_enterprise,
                    "   AND xmdlsite = '",g_site,"' ",
                    " ORDER BY xmdl003,xmdl004,xmdl005,xmdl006 "
   PREPARE armt100_rmab_default_pre FROM l_sql_rmab
#   DECLARE armt100_rmab_default_cs CURSOR FOR armt100_rmab_default_pre
#   FOREACH armt100_rmab_default_cs INTO g_rmab_d[l_ac].rmab005,g_rmab_d[l_ac].rmab006,g_rmab_d[l_ac].rmab007,
#         g_rmab_d[l_ac].rmab008,g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010,g_rmab_d[l_ac].rmab011,g_rmab_d[l_ac].rmab012
   EXECUTE armt100_rmab_default_pre INTO g_rmab_d[l_ac].rmab005,g_rmab_d[l_ac].rmab006,g_rmab_d[l_ac].rmab007,
         g_rmab_d[l_ac].rmab008,g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010,g_rmab_d[l_ac].rmab011,g_rmab_d[l_ac].rmab012,
         l_xmdl035,l_xmdl037,l_xmdl056         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "FOREACH:" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
#         EXIT FOREACH
      END IF
      LET g_rmab_d[l_ac].rmabseq = l_ac
      LET g_rmab_d[l_ac].rmabsite = g_site
      LET g_rmab_d[l_ac].rmab001 = g_rmab_d_o.rmab001
      LET g_rmab_d[l_ac].rmab003 = p_rmab003
      LET g_rmab_d[l_ac].rmab004 = p_rmab004
      IF l_xmdk002 = '3' THEN
         LET g_rmab_d[l_ac].rmab013 = l_xmdl035
      ELSE         
         LET g_rmab_d[l_ac].rmab013 = l_xmdl056 - l_xmdl037
      END IF
#      LET g_rmab_d[l_ac].rmab013 = g_rmab_d[l_ac].rmab012
      LET g_rmab_d[l_ac].rmab014 = 0
      LET g_rmab_d[l_ac].rmab015 = 0
      LET g_rmab_d[l_ac].rmab016 = 0
      #获取料件品名规格
      CALL s_desc_get_item_desc(g_rmab_d[l_ac].rmab009)
         RETURNING g_rmab_d[l_ac].rmab009_desc,g_rmab_d[l_ac].rmab009_desc_1
      #获取产品特征说明
      CALL s_feature_description(g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010) 
         RETURNING l_success,g_rmab_d[l_ac].rmab010_desc
      #获取单位说明   
      CALL s_desc_get_unit_desc(g_rmab_d[l_ac].rmab011) RETURNING g_rmab_d[l_ac].rmab011_desc
      
      LET g_rmab_d_o.* = g_rmab_d[l_ac].*
      
#      INITIALIZE gs_keys TO NULL 
#      LET gs_keys[1] = g_rmaa_m.rmaadocno
#      LET gs_keys[2] = g_rmab_d[l_ac].rmabseq
#      LET g_detail_idx = l_ac
#      CALL armt100_insert_b('rmab_t',gs_keys,"'1'")
#      
#      LET g_rmab2_d[1].rmacseq1 = '1'
#      LET g_rmab2_d[1].rmac001 = g_rmab_d[g_detail_idx].rmab013
#      LET g_rmab2_d[1].rmac002 = ' '
#      LET g_rmab2_d[1].rmac003 = ' '
#      LET g_rmab2_d[1].rmac004 = ' '
#      LET g_rmab2_d[1].rmac005 = ' '
#      LET g_rmab2_d[1].rmac006 = g_today
#      LET g_rmab2_d[1].rmac007 = g_user
#      CALL s_desc_get_person_desc(g_rmab2_d[1].rmac007) RETURNING g_rmab2_d[1].rmac007_desc
#      INITIALIZE gs_keys TO NULL 
#      LET g_detail_idx2 = 1
#      LET gs_keys[1] = g_rmaa_m.rmaadocno
#      LET gs_keys[2] = g_rmab_d[g_detail_idx].rmabseq
#      LET gs_keys[3] = '1'
#      CALL armt100_insert_b('rmac_t',gs_keys,"'2'")
      
#      LET l_ac = l_ac + 1   
#   
#   END FOREACH

   RETURN r_success
   
END FUNCTION]]>
  </point>
  <point name="function.armt100_auto_insert_rmac" order="3" ver="1" cite_std="N" new="Y" status="d" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.armt100_rmaadocdt_rmaa008_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION armt100_rmaadocdt_rmaa008_chk()
   DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE

   IF NOT cl_null(g_rmaa_m.rmaa008) AND NOT cl_null(g_rmaa_m.rmaadocdt) THEN
      IF g_rmaa_m.rmaa008 < g_rmaa_m.rmaadocdt THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'axm-00267'    #扣帳日期不可小於單據日期！
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         
         LET r_success = FALSE
         RETURN r_success
      END IF
   END IF

   RETURN r_success 
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         #產品特徵
         CALL s_feature_description(g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010) RETURNING l_success,g_rmab_d[l_ac].rmab010_desc
         #获取料件品名规格
         CALL s_desc_get_item_desc(g_rmab_d[l_ac].rmab009)
            RETURNING g_rmab_d[l_ac].rmab009_desc,g_rmab_d[l_ac].rmab009_desc_1
         #获取单位说明
         CALL s_desc_get_unit_desc(g_rmab_d[l_ac].rmab011) RETURNING g_rmab_d[l_ac].rmab011_desc]]>
  </point>
  <point name="b_fill2.fill2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rmab2_d[l_ac].l_rmab009 = g_rmab_d[g_detail_idx].rmab009
            LET g_rmab2_d[l_ac].l_rmab009_desc = g_rmab_d[g_detail_idx].rmab009_desc
            LET g_rmab2_d[l_ac].l_rmab009_desc_1 = g_rmab_d[g_detail_idx].rmab009_desc_1
            LET g_rmab2_d[l_ac].l_rmab010 = g_rmab_d[g_detail_idx].rmab010
            LET g_rmab2_d[l_ac].l_rmab010_desc = g_rmab_d[g_detail_idx].rmab010_desc
            LET g_rmab2_d[l_ac].l_rmab011 = g_rmab_d[g_detail_idx].rmab011
            LET g_rmab2_d[l_ac].l_rmab011_desc = g_rmab_d[g_detail_idx].rmab011_desc
            LET g_rmab2_d[l_ac].rmac001 = g_rmab_d[g_detail_idx].rmab013]]>
  </point>
  <point name="construct.a.page1.rmab013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="construct.c.page1.rmab003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdldocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmab003  #顯示到畫面上
            NEXT FIELD rmab003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rmab005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmab005  #顯示到畫面上
            NEXT FIELD rmab005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rmab009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmab009  #顯示到畫面上
            NEXT FIELD rmab009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rmab010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdl009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmab010  #顯示到畫面上
            NEXT FIELD rmab010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.rmab011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmab011  #顯示到畫面上
            NEXT FIELD rmab011                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.l_rmab009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_15()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_rmab009  #顯示到畫面上
            NEXT FIELD l_rmab009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.l_rmab010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdl009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_rmab010  #顯示到畫面上
            NEXT FIELD l_rmab010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.l_rmab011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO l_rmab011  #顯示到畫面上
            NEXT FIELD l_rmab011                     #返回原欄位
           

]]>
  </point>
  <point name="construct.c.page2.rmac002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_17()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmac002  #顯示到畫面上
            NEXT FIELD rmac002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.rmac003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_inab002_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmac003  #顯示到畫面上
            NEXT FIELD rmac003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.rmac004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_inad003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmac004  #顯示到畫面上
            NEXT FIELD rmac004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.rmac005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rmac005()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmac005  #顯示到畫面上
            NEXT FIELD rmac005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.rmac007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmac007  #顯示到畫面上
            NEXT FIELD rmac007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaa001  #顯示到畫面上
            NEXT FIELD rmaa001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaa002  #顯示到畫面上
            NEXT FIELD rmaa002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaa003  #顯示到畫面上
            NEXT FIELD rmaa003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdkdocno_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaa005  #顯示到畫面上
            NEXT FIELD rmaa005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_xmdadocno_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaa006  #顯示到畫面上
            NEXT FIELD rmaa006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaacnfid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaacnfid  #顯示到畫面上
            NEXT FIELD rmaacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaacrtdp  #顯示到畫面上
            NEXT FIELD rmaacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaacrtid  #顯示到畫面上
            NEXT FIELD rmaacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_rmaadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaadocno  #顯示到畫面上
            NEXT FIELD rmaadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaamodid  #顯示到畫面上
            NEXT FIELD rmaamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaaowndp  #顯示到畫面上
            NEXT FIELD rmaaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaaownid  #顯示到畫面上
            NEXT FIELD rmaaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.rmaapstid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO rmaapstid  #顯示到畫面上
            NEXT FIELD rmaapstid                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_rmaa_m.rmaadocno,g_rmaa_m.rmaadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="delete_b.m_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      DELETE FROM rmac_t
       WHERE rmacent = g_enterprise AND
         rmacdocno = ps_keys_bak[1] AND rmacseq = ps_keys_bak[2]]]>
  </point>
  <point name="detail_reproduce.body.table1.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #更新申请退货数量
      ,rmab012 = 0
      ,rmab013 = 0
      ,rmab014 = 0
      ,rmab015 = 0
      ,rmab016 = 0]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_open                LIKE type_t.chr2              #開啟退品點收維護]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #判斷據點參數若不使用產品特徵時，則產品特徵需隱藏不可以維護(據點參數:S-BAS-0036)
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("rmab010,rmab010_desc,l_rmab010,l_rmab010_desc",FALSE)
   END IF
   CALL cl_set_comp_entry("rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007",FALSE)
   LET g_open = 'N']]>
  </point>
  <point name="input.a.page1.rmab002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.a.page1.rmab003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #判斷是否已過帳
            IF NOT cl_null(g_rmab_d[g_detail_idx].rmab003) THEN 
            #應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rmab_d[g_detail_idx].rmab003
               LET g_chkparam.arg2 = g_rmaa_m.rmaa001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xmdkdocno_6") THEN  #已過帳狀態的出貨單   
                  #檢查成功時後續處理
                  IF NOT cl_null(g_rmaa_m.rmaa005) AND g_rmaa_m.rmaa005 <>g_rmab_d[g_detail_idx].rmab003 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "axm-00520"   #單身來源單號不可與單頭不同！
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET g_rmab_d[g_detail_idx].rmab003 = g_rmab_d_o.rmab003            
                     NEXT FIELD CURRENT
                  END IF
               END IF
                  
            END IF]]>
  </point>
  <point name="input.a.page1.rmab004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #預設訂單單號、訂單項次、訂單項序、分批序。料號、產品特征、單位、申請退貨數量
            IF (NOT cl_null(g_rmab_d[g_detail_idx].rmab003) AND NOT cl_null(g_rmab_d[g_detail_idx].rmab004) AND cl_null(g_rmab_d[g_detail_idx].rmab005))
               OR g_rmab_d[g_detail_idx].rmab003<>g_rmab_d_o.rmab003 
               OR g_rmab_d[g_detail_idx].rmab004<>g_rmab_d_o.rmab004 THEN
               CALL armt100_rmab_default_insert(g_rmab_d[g_detail_idx].rmab003,g_rmab_d[g_detail_idx].rmab004) 
                  RETURNING l_success
               IF NOT l_success THEN
                  #賦予舊值
                  LET g_rmab_d[g_detail_idx].rmab005 = g_rmab_d_o.rmab005
                  LET g_rmab_d[g_detail_idx].rmab006 = g_rmab_d_o.rmab006
                  LET g_rmab_d[g_detail_idx].rmab007 = g_rmab_d_o.rmab007
                  LET g_rmab_d[g_detail_idx].rmab008 = g_rmab_d_o.rmab008
                  LET g_rmab_d[g_detail_idx].rmab009 = g_rmab_d_o.rmab009
                  LET g_rmab_d[g_detail_idx].rmab009_desc = g_rmab_d_o.rmab009_desc
                  LET g_rmab_d[g_detail_idx].rmab009_desc_1 = g_rmab_d_o.rmab009_desc_1
                  LET g_rmab_d[g_detail_idx].rmab010 = g_rmab_d_o.rmab010
                  LET g_rmab_d[g_detail_idx].rmab010_desc = g_rmab_d_o.rmab010_desc
                  LET g_rmab_d[g_detail_idx].rmab011 = g_rmab_d_o.rmab011
                  LET g_rmab_d[g_detail_idx].rmab011_desc = g_rmab_d_o.rmab011_desc
                  LET g_rmab_d[g_detail_idx].rmab012 = g_rmab_d_o.rmab012
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.rmab012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #检查是否有相同出货单号的申请退货数量
            LET l_rmab012 = 0
            SELECT SUM(rmab012) INTO l_rmab012 FROM rmab_t 
            LEFT OUTER JOIN rmaa_t ON rmabdocno = rmaadocno AND rmabsite = rmaasite AND rmabent = rmaaent
            WHERE rmab003 = g_rmab_d[g_detail_idx].rmab003 AND rmab004 = g_rmab_d[g_detail_idx].rmab004
            AND rmabent = g_enterprise AND rmabsite = g_site AND rmaastus <> 'X'
            IF cl_null(l_rmab012) THEN LET l_rmab012 = 0 END IF
            IF l_rmab012 > g_rmab_d[g_detail_idx].rmab012 THEN
               #报错已无可退退品
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = "arm-00015"   #已无可退退品
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rmab_d[g_detail_idx].rmab012 = 0
               DISPLAY g_rmab_d[g_detail_idx].rmab012 TO rmab012
               NEXT FIELD CURRENT
            ELSE
               LET g_rmab_d[g_detail_idx].rmab012 = g_rmab_d[g_detail_idx].rmab012 - l_rmab012
               DISPLAY g_rmab_d[g_detail_idx].rmab012 TO rmab012
            END IF
            #預設點收數量為申請退貨數量
            IF NOT cl_null(g_rmab_d[g_detail_idx].rmab012) OR g_rmab_d[g_detail_idx].rmab012<> g_rmab_d_o.rmab012 THEN
               LET g_rmab_d[g_detail_idx].rmab013 = g_rmab_d[g_detail_idx].rmab012
            END IF]]>
  </point>
  <point name="input.a.page1.rmabdocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rmaa_m.rmaadocno IS NOT NULL AND g_rmab_d[g_detail_idx].rmabdocno IS NOT NULL AND g_rmab_d[g_detail_idx].rmabseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rmaa_m.rmaadocno != g_rmaadocno_t OR g_rmab_d[g_detail_idx].rmabdocno != g_rmab_d_t.rmabdocno OR g_rmab_d[g_detail_idx].rmabseq != g_rmab_d_t.rmabseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rmab_t WHERE "||"rmabent = '" ||g_enterprise|| "' AND "||"rmabdocno = '"||g_rmaa_m.rmaadocno ||"' AND "|| "rmabseq = '"||g_rmab_d[g_detail_idx].rmabdocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.rmabseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rmaa_m.rmaadocno IS NOT NULL AND g_rmab_d[g_detail_idx].rmabseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rmaa_m.rmaadocno != g_rmaadocno_t OR g_rmab_d[g_detail_idx].rmabseq != g_rmab_d_t.rmabseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rmab_t WHERE "||"rmabent = '" ||g_enterprise|| "' AND "||"rmabdocno = '"||g_rmaa_m.rmaadocno ||"' AND "|| "rmabseq = '"||g_rmab_d[g_detail_idx].rmabseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.rmac001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #點收數量合計不可大於對應項次的申請退貨數量
            LET l_num = 0
            SELECT SUM(rmac001) INTO l_num
            FROM rmac_t
            WHERE rmacdocno = g_rmaa_m.rmaadocno
              AND rmacent = g_enterprise
              AND rmacsite = g_site
              AND ramcseq = g_rmab_d[g_detail_idx].rmabseq
            LET l_num = l_num + g_rmab2_d[g_detail_idx2].rmac001
            IF l_num > g_rmab_d[g_detail_idx].rmab012 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "" 
               LET g_errparam.code   = "arm-00003" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_rmab2_d[g_detail_idx2].rmac001 TO NULL
               DISPLAY g_rmab2_d[g_detail_idx2].rmac001 TO rmac001
            END IF]]>
  </point>
  <point name="input.a.page2.rmac002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rmab2_d[l_ac].rmac002) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rmab2_d[l_ac].rmac002

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inaa001_12") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rmab2_d[l_ac].rmac002
            CALL ap_ref_array2(g_ref_fields,"SELECT inayl003 FROM inayl_t WHERE inaylent='"||g_enterprise||"' AND inayl001=? AND inayl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_rmab2_d[l_ac].rmac002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rmab2_d[l_ac].rmac002_desc

]]>
  </point>
  <point name="input.a.page2.rmac003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rmab2_d[l_ac].rmac003) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site
               LET g_chkparam.arg2 = g_rmab2_d[l_ac].rmac002
               LET g_chkparam.arg3 = g_rmab2_d[l_ac].rmac003
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inab002_1") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rmab2_d[l_ac].rmacsite
            LET g_ref_fields[2] = g_rmab2_d[l_ac].rmac002
            LET g_ref_fields[3] = g_rmab2_d[l_ac].rmac003
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inabsite=? AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
            LET g_rmab2_d[l_ac].rmac003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rmab2_d[l_ac].rmac003_desc

]]>
  </point>
  <point name="input.a.page2.rmac004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rmab2_d[l_ac].rmac004) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_site     #營運據點
               LET g_chkparam.arg2 = g_rmab2_d[l_ac].l_rmab009    #料號  
               LET g_chkparam.arg3 = g_rmab2_d[l_ac].l_rmab010  #產品特征
               LET g_chkparam.arg4 = g_rmab2_d[l_ac].rmac004   #批號
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_inad001_1") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 

]]>
  </point>
  <point name="input.a.page2.rmac007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rmab2_d[l_ac].rmac007) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rmab2_d[l_ac].rmac007

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF


            END IF 
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_rmab2_d[l_ac].rmac007
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_rmab2_d[l_ac].rmac007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_rmab2_d[l_ac].rmac007_desc

]]>
  </point>
  <point name="input.a.page2.rmacseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_rmaa_m.rmaadocno IS NOT NULL AND g_rmab_d[g_detail_idx].rmabseq IS NOT NULL AND g_rmab2_d[g_detail_idx2].rmacseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_rmaa_m.rmaadocno != g_rmaadocno_t OR g_rmab_d[g_detail_idx].rmabseq != g_rmab_d[g_detail_idx].rmabseq OR g_rmab2_d[g_detail_idx2].rmacseq1 != g_rmab2_d_t.rmacseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rmac_t WHERE "||"rmacent = '" ||g_enterprise|| "' AND "||"rmacdocno = '"||g_rmaa_m.rmaadocno ||"' AND "|| "rmacseq = '"||g_rmab_d[g_detail_idx].rmabseq ||"' AND "|| "rmacseq1 = '"||g_rmab2_d[g_detail_idx2].rmacseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.rmaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            IF NOT cl_null(g_rmaa_m.rmaa001) THEN 
               
               CALL s_desc_get_trading_partner_abbr_desc(g_rmaa_m.rmaa001) RETURNING g_rmaa_m.rmaa001_desc
               DISPLAY BY NAME g_rmaa_m.rmaa001_desc
               
               IF NOT s_axmt540_client_chk(g_rmaa_m.rmaadocno,'1',g_rmaa_m.rmaa001,'') THEN
                  LET g_rmaa_m.rmaa001 = g_rmaa_m_o.rmaa001
                  CALL s_desc_get_trading_partner_abbr_desc(g_rmaa_m.rmaa001) RETURNING g_rmaa_m.rmaa001_desc
                  DISPLAY BY NAME g_rmaa_m.rmaa001_desc
                  NEXT FIELD CURRENT
#               ELSE
#                  SELECT    CASE 
#                  WHEN (pmaastus <>'Y') THEN 'apm-00201' 
#                  WHEN (NOT EXISTS ( SELECT pmab001 FROM pmab_t WHERE pmabent = pmaaent AND pmabsite = g_site AND pmab001 = pmaa001)) THEN 'ais-00055' 
#                  ELSE '1' END INTO l_err
#                  FROM pmaa_t
#                  WHERE pmaa001 = g_rmaa_m.rmaa001 AND pmaaent = g_enterprise AND (pmaa002 = '2' OR pmaa002 ='3') AND 1=1 
#                  
#                  IF l_err = '1' THEN
#               
#                  ELSE
#                     INITIALIZE g_errparam TO NULL 
#                     LET g_errparam.extend = "" 
#                     LET g_errparam.code = l_err
#                     LET g_errparam.popup = TRUE
#                     CALL cl_err()
#                     LET g_rmaa_m.rmaa001 = g_rmaa_m_o.rmaa001
#                     CALL s_desc_get_trading_partner_abbr_desc(g_rmaa_m.rmaa001) RETURNING g_rmaa_m.rmaa001_desc
#                     DISPLAY BY NAME g_rmaa_m.rmaa001_desc
#                     NEXT FIELD CURRENT
#                  END IF
               END IF
            ELSE
               LET g_rmaa_m.rmaa001_desc = NULL
               DISPLAY g_rmaa_m.rmaa001_desc TO rmaa001_desc

            END IF 
            
            ]]>
  </point>
  <point name="input.a.rmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_person_desc(g_rmaa_m.rmaa002) RETURNING g_rmaa_m.rmaa002_desc
            DISPLAY BY NAME g_rmaa_m.rmaa002_desc
            IF NOT cl_null(g_rmaa_m.rmaa002) THEN 
#應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               IF NOT s_employee_chk(g_rmaa_m.rmaa002) THEN
                     LET g_rmaa_m.rmaa002 = g_rmaa_m_o.rmaa002

                     CALL s_desc_get_person_desc(g_rmaa_m.rmaa002) RETURNING g_rmaa_m.rmaa002_desc
                     DISPLAY BY NAME g_rmaa_m.rmaa002_desc

                     NEXT FIELD CURRENT
                  END IF            
               
                  #帶出歸屬部門ooag003
                  SELECT ooag003 INTO g_rmaa_m.rmaa003
                    FROM ooag_t
                   WHERE ooagent = g_enterprise
                     AND ooag001 = g_rmaa_m.rmaa002
               
                  LET g_rmaa_m_o.rmaa003 = g_rmaa_m.rmaa003
                  DISPLAY BY NAME g_rmaa_m.rmaa003

                  CALL s_desc_get_department_desc(g_rmaa_m.rmaa003) RETURNING g_rmaa_m.rmaa003_desc
                  DISPLAY BY NAME g_rmaa_m.rmaa003_desc


            END IF 
            LET g_rmaa_m.rmaa002 = g_rmaa_m_o.rmaa002

]]>
  </point>
  <point name="input.a.rmaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_department_desc(g_rmaa_m.rmaa003) RETURNING g_rmaa_m.rmaa003_desc
            DISPLAY BY NAME g_rmaa_m.rmaa003_desc

            IF NOT cl_null(g_rmaa_m.rmaa003) THEN 
               IF g_rmaa_m.rmaa003 <> g_rmaa_m_o.rmaa003 OR cl_null(g_rmaa_m_o.rmaa003) THEN

                  IF NOT s_department_chk(g_rmaa_m.rmaa003,g_rmaa_m.rmaadocdt) THEN
                     LET g_rmaa_m.rmaa003 = g_rmaa_m_o.rmaa003

                     CALL s_desc_get_department_desc(g_rmaa_m.rmaa003) RETURNING g_rmaa_m.rmaa003_desc
                     DISPLAY BY NAME g_rmaa_m.rmaa003_desc

                     NEXT FIELD CURRENT
                  END IF               
               END IF
            END IF 

            LET g_rmaa_m_o.rmaa003 = g_rmaa_m.rmaa003]]>
  </point>
  <point name="input.a.rmaa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #判斷是否已過帳
            IF NOT cl_null(g_rmaa_m.rmaa005) THEN 
            #應用 a17 樣板自動產生(Version:2)
               #欄位存在檢查
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_rmaa_m.rmaa005
               LET g_chkparam.arg2 = g_rmaa_m.rmaa001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_xmdkdocno_6") THEN  #已過帳狀態的出貨單   
                  #檢查成功時後續處理
               ELSE
                  #檢查失敗時後續處理
                  LET g_rmaa_m_o.rmaa005 = g_rmaa_m.rmaa005
                  NEXT FIELD CURRENT
               END IF


            END IF]]>
  </point>
  <point name="input.a.rmaa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#            #檢驗訂單號是否在出貨單中v_xmdl003
#            IF NOT cl_null(g_rmaa_m.rmaa005) AND NOT cl_null(g_rmaa_m.rmaa006) THEN 
#            #應用 a17 樣板自動產生(Version:2)
#               #欄位存在檢查
#               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_rmaa_m.rmaa005
#               LET g_chkparam.arg2 = g_rmaa_m.rmaa006
#                  
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_xmdl003") THEN  #已過帳狀態的出貨單   
#                  #檢查成功時後續處理
#               ELSE
#                  #檢查失敗時後續處理
#                  NEXT FIELD CURRENT
#               END IF
#
#
#            END IF]]>
  </point>
  <point name="input.a.rmaa008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_rmaa_m.rmaa008) THEN
               IF g_rmaa_m.rmaa008 <> g_rmaa_m_o.rmaa008 OR cl_null(g_rmaa_m_o.rmaa008) THEN
                  
                  IF NOT armt100_rmaadocdt_rmaa008_chk() THEN
                     LET g_rmaa_m.rmaa008 = g_rmaa_m_o.rmaa008
                     NEXT FIELD CURRENT
                  END IF
                  CALL cl_get_para(g_enterprise,g_site,'S-MFG-0031') RETURNING l_para_data
                  IF g_rmaa_m.rmaa008 <= l_para_data THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'axm-00077'   #扣帳日期小於關帳日期，請重新輸入！
                     LET g_errparam.extend = g_rmaa_m.rmaa008
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_rmaa_m.rmaa008 = g_rmaa_m_o.rmaa008
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            LET g_rmaa_m_o.rmaa008 = g_rmaa_m.rmaa008   ]]>
  </point>
  <point name="input.a.rmaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_rmaa_m.rmaadocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_rmaa_m.rmaadocno != g_rmaadocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM rmaa_t WHERE "||"rmaaent = '" ||g_enterprise|| "' AND "||"rmaadocno = '"||g_rmaa_m.rmaadocno ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL s_aooi200_get_slip_desc(g_rmaa_m.rmaadocno) RETURNING g_rmaa_m.rmaadocno_desc
               DISPLAY BY NAME g_rmaa_m.rmaadocno_desc
            END IF

            IF cl_null(g_rmaa_m.rmaadocno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'sub-00324'   #單號欄位不可為空！
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD CURRENT
            END IF

            IF g_rmaa_m.rmaadocno <> g_rmaa_m_o.rmaadocno OR cl_null(g_rmaa_m_o.rmaadocno) THEN
               #檢查單別
               IF NOT s_aooi200_chk_slip(g_site,'',g_rmaa_m.rmaadocno,g_prog) THEN
                  LET g_rmaa_m.rmaadocno = g_rmaa_m_o.rmaadocno

                  CALL s_aooi200_get_slip_desc(g_rmaa_m.rmaadocno) RETURNING g_rmaa_m.rmaadocno_desc
                  DISPLAY BY NAME g_rmaa_m.rmaadocno_desc

                  NEXT FIELD CURRENT
               END IF
            END IF
            LET g_rmaa_m_o.rmaadocno = g_rmaa_m.rmaadocno
#            LET g_rmaa_m.rmaa002 = g_user
#            LET g_rmaa_m.rmaa003 = g_dept
#            LET g_rmaa_m.rmaadocdt = g_today
#            LET g_rmaa_m.rmaa008 = g_today
#            DISPLAY g_rmaa_m.rmaa002 TO rmaa002
#            DISPLAY g_rmaa_m.rmaa003 TO rmaa003
#            DISPLAY g_rmaa_m.rmaadocdt TO rmaadocdt
#            DISPLAY g_rmaa_m.rmaa008 TO rmaa008
            ]]>
  </point>
  <point name="input.accept" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         ]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_open = 'N'
   CALL cl_set_comp_entry("rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007",FALSE)]]>
  </point>
  <point name="input.body.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_rmabseq_backup = g_rmab_d[l_ac].rmabseq  #備份退品明細項次
               LET g_rmab2_d[1].rmacseq1 = '1'
               LET g_rmab2_d[1].l_rmab009 = g_rmab_d[l_ac].rmab009
               LET g_rmab2_d[1].l_rmab009_desc = g_rmab_d[l_ac].rmab009_desc
               LET g_rmab2_d[1].l_rmab009_desc_1 = g_rmab_d[l_ac].rmab009_desc_1
               LET g_rmab2_d[1].l_rmab010 = g_rmab_d[l_ac].rmab010
               LET g_rmab2_d[1].l_rmab010_desc = g_rmab_d[l_ac].rmab010_desc
               LET g_rmab2_d[1].l_rmab011 = g_rmab_d[l_ac].rmab011
               LET g_rmab2_d[1].l_rmab011_desc = g_rmab_d[l_ac].rmab011_desc
               LET g_rmab2_d[1].rmac001 = g_rmab_d[l_ac].rmab013
               LET g_rmab2_d[1].rmac002 = ' '
               LET g_rmab2_d[1].rmac003 = ' '
               LET g_rmab2_d[1].rmac004 = ' '
               LET g_rmab2_d[1].rmac005 = ' '
               LET g_rmab2_d[1].rmac006 = g_today
               LET g_rmab2_d[1].rmac007 = g_user
               CALL s_desc_get_person_desc(g_rmab2_d[1].rmac007) RETURNING g_rmab2_d[1].rmac007_desc
               INITIALIZE gs_keys TO NULL 
               LET g_detail_idx2 = 1
               LET gs_keys[1] = g_rmaa_m.rmaadocno
               LET gs_keys[2] = g_rmab_d[g_detail_idx].rmabseq
               LET gs_keys[3] = '1'
               CALL armt100_insert_b('rmac_t',gs_keys,"'2'")
               
               
               ]]>
  </point>
  <point name="input.body.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.before_input2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_num = 0
            SELECT COUNT(rmabseq) INTO l_num
              FROM rmab_t
             WHERE rmabent = g_enterprise
               AND rmabdocno = g_rmaa_m.rmaadocno]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #預設客訴單號-----(S)
            #客訴單未建立，邏輯待添加 TO BE ADDED
#            IF NOT cl_null(g_rmaa_m.rmaa004) THEN
#               LET g_rmab_d[l_ac].rmab001 = g_rmaa_m.rmaa004
#            END IF
            #預設客訴單號-----(E)
            
            #預設出貨單號
            IF NOT cl_null(g_rmaa_m.rmaa005) THEN
               LET g_rmab_d[l_ac].rmab003 = g_rmaa_m.rmaa005
            END IF
            #預設項次
            IF cl_null(g_rmab_d[l_ac].rmabseq) THEN
               SELECT MAX(rmabseq)+1
                 INTO g_rmab_d[l_ac].rmabseq
                 FROM rmab_t
                WHERE rmabent = g_enterprise
                  AND rmabdocno = g_rmaa_m.rmaadocno 

               IF cl_null(g_rmab_d[l_ac].rmabseq) THEN
                 LET g_rmab_d[l_ac].rmabseq = 1
               END IF
            END IF
            LET g_rmab_d[l_ac].rmabsite = g_site]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_rmabseq_backup = g_rmab_d[l_ac].rmabseq  #備份退品明細項次]]>
  </point>
  <point name="input.body.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               SELECT MAX(rmacseq1) INTO l_no
               FROM rmac_t
               WHERE rmacent = g_enterprise AND rmacdocno = g_rmaa_m.rmaadocno 
                 AND rmacseq = g_rmab_d_t.rmabseq
                 
               UPDATE rmac_t SET rmac001 = g_rmab_d[l_ac].rmab013,
                                 rmac006 = g_today,
                                 rmac007 = g_user,
                                 rmacsite = g_site
               #自訂欄位頁簽
               WHERE rmacent = g_enterprise AND rmacdocno = g_rmaa_m.rmaadocno 
                   AND rmacseq = g_rmab_d_t.rmabseq
                   AND rmacseq1 = 1
               LET l_no = 0
               
               IF l_no > 1 THEN                     
                  DELETE FROM rmac_t
                  WHERE rmacent = g_enterprise AND rmacdocno = g_rmaa_m.rmaadocno 
                    AND rmacseq = g_rmab_d_t.rmabseq
                    AND rmacseq1 <> 1
               END IF]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.body2.before_input2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
            IF l_open = 'N' AND g_open = 'N' THEN
               EXIT DIALOG
            END IF
            CALL cl_set_comp_entry("rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007",TRUE)]]>
  </point>
  <point name="input.body2.insert.before_bak" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_rmab2_d[l_ac].l_rmab009 = g_rmab_d[g_detail_idx].rmab009
            LET g_rmab2_d[l_ac].l_rmab009_desc = g_rmab_d[g_detail_idx].rmab009_desc
            LET g_rmab2_d[l_ac].l_rmab009_desc_1 = g_rmab_d[g_detail_idx].rmab009_desc_1
            LET g_rmab2_d[l_ac].l_rmab010 = g_rmab_d[g_detail_idx].rmab010
            LET g_rmab2_d[l_ac].l_rmab010_desc = g_rmab_d[g_detail_idx].rmab010_desc
            LET g_rmab2_d[l_ac].rmac001 = g_rmab_d[g_detail_idx].rmab013
            LET g_rmab2_d[l_ac].rmac002 = ' '
            LET g_rmab2_d[l_ac].rmac003 = ' '
            LET g_rmab2_d[l_ac].rmac004 = ' '
            LET g_rmab2_d[l_ac].rmac005 = ' '
            LET g_rmab2_d[l_ac].rmac006 = g_today
            LET g_rmab2_d[l_ac].rmac007 = g_user
            LET g_rmab2_d[l_ac].rmacsite = g_site
            #料件未维护库存管理特征，则不用输入库存管理特征
            LET l_num = 0
            SELECT inag003 INTO l_num FROM inag_t 
            WHERE inagent = g_enterprise AND inagsite = g_site AND inag001 = g_rmab_d[g_detail_idx].rmab009
            IF l_num = 0 OR cl_null(l_num) THEN
               CALL cl_set_comp_entry("rmac005",FALSE)
            END IF
            #預設項序
            IF cl_null(g_rmab2_d[l_ac].rmacseq1) THEN
               SELECT MAX(rmacseq1)+1
                 INTO g_rmab2_d[l_ac].rmacseq1
                 FROM rmac_t
                WHERE rmacent = g_enterprise
                  AND rmacdocno = g_rmaa_m.rmaadocno
                  AND rmacseq = g_rmab_d[g_detail_idx].rmabseq

               IF cl_null(g_rmab2_d[l_ac].rmacseq1) THEN
                 LET g_rmab2_d[l_ac].rmacseq1 = 1
               END IF
            END IF
            ]]>
  </point>
  <point name="input.c.page1.rmab003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmab_d[l_ac].rmab003             #給予default值
            LET g_qryparam.default2 = "" #g_rmab_d[l_ac].imaal004 #規格
            LET g_qryparam.default3 = "" #g_rmab_d[l_ac].xmdldocno #單據編號
            LET g_qryparam.default4 = "" #g_rmab_d[l_ac].xmdlseq #項次
            LET g_qryparam.default5 = "" #g_rmab_d[l_ac].xmdl003 #訂單單號
            LET g_qryparam.default6 = "" #g_rmab_d[l_ac].xmdl004 #訂單項次
            LET g_qryparam.default7 = "" #g_rmab_d[l_ac].xmdl005 #訂單項序
            LET g_qryparam.default8 = "" #g_rmab_d[l_ac].xmdl006 #訂單分批序
            LET g_qryparam.default9 = "" #g_rmab_d[l_ac].xmdl008 #料件編號
            LET g_qryparam.default10 = "" #g_rmab_d[l_ac].xmdl009 #產品特徵
            #給予arg
            LET g_qryparam.arg1 = g_rmaa_m.rmaa001 #收款客戶
            

            CALL q_xmdldocno()                                #呼叫開窗

            LET g_rmab_d[l_ac].rmab003 = g_qryparam.return1          #出貨單號            
            LET g_rmab_d[l_ac].rmab004 = g_qryparam.return2          #出貨項次
            LET g_rmab_d[l_ac].rmab005 = g_qryparam.return3          #訂單單號
            LET g_rmab_d[l_ac].rmab006 = g_qryparam.return4          #訂單項次
            LET g_rmab_d[l_ac].rmab007 = g_qryparam.return5          #訂單項序
            LET g_rmab_d[l_ac].rmab008 = g_qryparam.return6          #分批序
            LET g_rmab_d[l_ac].rmab009 = g_qryparam.return7          #料號
            LET g_rmab_d[l_ac].rmab010 = g_qryparam.return8         #產品特征
            LET g_rmab_d[l_ac].rmab011 = g_qryparam.return9         #產品特征
            LET g_rmab_d[l_ac].rmab012 = g_qryparam.return10         #產品特征
            CALL s_desc_get_item_desc(g_rmab_d[l_ac].rmab009)RETURNING g_rmab_d[l_ac].rmab009_desc,g_rmab_d[l_ac].rmab009_desc_1
            CALL s_feature_description(g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010) 
               RETURNING l_success,g_rmab_d[l_ac].rmab010_desc 
            CALL s_desc_get_unit_desc(g_rmab_d[l_ac].rmab011) RETURNING g_rmab_d[l_ac].rmab011_desc
            
            DISPLAY g_rmab_d[l_ac].rmab003 TO rmab003              
            DISPLAY g_rmab_d[l_ac].rmab004 TO rmab004       
            DISPLAY g_rmab_d[l_ac].rmab005 TO rmab005              
            DISPLAY g_rmab_d[l_ac].rmab006 TO rmab006              
            DISPLAY g_rmab_d[l_ac].rmab007 TO rmab007
            DISPLAY g_rmab_d[l_ac].rmab008 TO rmab008
            DISPLAY g_rmab_d[l_ac].rmab009 TO rmab009
            DISPLAY g_rmab_d[l_ac].rmab009_desc TO rmab009_desc
            DISPLAY g_rmab_d[l_ac].rmab009_desc_1 TO rmab009_desc_1
            DISPLAY g_rmab_d[l_ac].rmab010 TO rmab010
            DISPLAY g_rmab_d[l_ac].rmab010_desc TO rmab010_desc
            DISPLAY g_rmab_d[l_ac].rmab011 TO rmab011
            DISPLAY g_rmab_d[l_ac].rmab011_desc TO rmab011_desc
            NEXT FIELD rmab003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.rmac002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmab2_d[l_ac].rmac002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_inaa001_17()                                #呼叫開窗

            LET g_rmab2_d[l_ac].rmac002 = g_qryparam.return1              

            DISPLAY g_rmab2_d[l_ac].rmac002 TO rmac002              #

            NEXT FIELD rmac002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.rmac003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmab2_d[l_ac].rmac003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.arg2 = "" #s
            LET g_qryparam.arg3 = "" #s
            LET g_qryparam.arg4 = "" #s

            CALL q_inab002_13()                                #呼叫開窗

            LET g_rmab2_d[l_ac].rmac003 = g_qryparam.return1              

            DISPLAY g_rmab2_d[l_ac].rmac003 TO rmac003              #

            NEXT FIELD rmac003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.rmac004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmab2_d[l_ac].rmac004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s
            LET g_qryparam.arg2 = "" #s
            LET g_qryparam.arg3 = "" #s
            LET g_qryparam.arg4 = "" #s
            LET g_qryparam.arg5 = "" #s
            LET g_qryparam.arg6 = "" #s

            CALL q_inad003_2()                                #呼叫開窗

            LET g_rmab2_d[l_ac].rmac004 = g_qryparam.return1              

            DISPLAY g_rmab2_d[l_ac].rmac004 TO rmac004              #

            NEXT FIELD rmac004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.rmac007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmab2_d[l_ac].rmac007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooag001()                                #呼叫開窗

            LET g_rmab2_d[l_ac].rmac007 = g_qryparam.return1              

            DISPLAY g_rmab2_d[l_ac].rmac007 TO rmac007              #

            NEXT FIELD rmac007                          #返回原欄位

]]>
  </point>
  <point name="input.c.rmaa001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmaa_m.rmaa001             #給予default值
            CALL s_control_get_customer_sql('2',g_site,g_user,g_dept,g_rmaa_m.rmaadocno) RETURNING l_success,l_where
            IF l_success THEN
               LET g_qryparam.where = l_where
            END IF

            #給予arg
            LET g_qryparam.arg1 = g_site #s


            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_rmaa_m.rmaa001 = g_qryparam.return1              

            DISPLAY g_rmaa_m.rmaa001 TO rmaa001              #

            NEXT FIELD rmaa001                          #返回原欄位

]]>
  </point>
  <point name="input.c.rmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmaa_m.rmaa002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #s


            CALL q_ooag001()                                #呼叫開窗

            LET g_rmaa_m.rmaa002 = g_qryparam.return1              

            DISPLAY g_rmaa_m.rmaa002 TO rmaa002              #

            CALL s_desc_get_person_desc(g_rmaa_m.rmaa002) RETURNING g_rmaa_m.rmaa002_desc
            DISPLAY BY NAME g_rmaa_m.rmaa002_desc
            
            NEXT FIELD rmaa002                          #返回原欄位

]]>
  </point>
  <point name="input.c.rmaa003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmaa_m.rmaa003             #給予default值

            #給予arg
            IF NOT cl_null(g_rmaa_m.rmaadocdt) THEN
               LET g_qryparam.arg1 = g_rmaa_m.rmaadocdt
            ELSE
               LET g_qryparam.arg1 = g_today
            END IF


            CALL q_ooeg001()                                #呼叫開窗

            LET g_rmaa_m.rmaa003 = g_qryparam.return1              

            DISPLAY g_rmaa_m.rmaa003 TO rmaa003              #

            CALL s_desc_get_department_desc(g_rmaa_m.rmaa003) RETURNING g_rmaa_m.rmaa003_desc
            DISPLAY BY NAME g_rmaa_m.rmaa003_desc
            
            NEXT FIELD rmaa003                          #返回原欄位

]]>
  </point>
  <point name="input.c.rmaa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmaa_m.rmaa005             #給予default值
            IF NOT cl_null(g_rmaa_m.rmaa001) THEN
               LET g_qryparam.where = " xmdk007 = '",g_rmaa_m.rmaa001,"' AND xmdk000 IN ('1','2','3') "
            ELSE
               LET g_qryparam.where = " xmdk000 IN ('1','2','3') "
            END IF
            #給予arg
            LET g_qryparam.arg1 = "S" #已過帳狀態的出貨單


            CALL q_xmdkdocno_3()                                #呼叫開窗

            LET g_rmaa_m.rmaa005 = g_qryparam.return1              

            DISPLAY g_rmaa_m.rmaa005 TO rmaa005              #
            
            #帶出訂單單號：預設出貨單單頭訂單號xmdk006
            SELECT xmdk006 INTO g_rmaa_m.rmaa006
              FROM xmdk_t
             WHERE xmdkdocno = g_rmaa_m.rmaa005
               AND xmdkent = g_enterprise
               AND xmdksite = g_site
            DISPLAY g_rmaa_m.rmaa006 TO rmaa006

            NEXT FIELD rmaa005                          #返回原欄位

]]>
  </point>
  <point name="input.c.rmaa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
#            INITIALIZE g_qryparam.* TO NULL
#            LET g_qryparam.state = 'i'
#            LET g_qryparam.reqry = FALSE
#
#            LET g_qryparam.default1 = g_rmaa_m.rmaa006             #給予default值
#
#            #給予arg
#            LET g_qryparam.arg1 = g_rmaa_m.rmaa005 #s
#
#
#            CALL q_xmdl003_2()                                #呼叫開窗
#
#            LET g_rmaa_m.rmaa006 = g_qryparam.return1              
#
#            DISPLAY g_rmaa_m.rmaa006 TO rmaa006              #
#
#            NEXT FIELD rmaa006                          #返回原欄位
#
]]>
  </point>
  <point name="input.c.rmaadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_rmaa_m.rmaadocno             #給予default值

            #給予arg
            LET l_ooef004 = ''
            SELECT ooef004 INTO l_ooef004 FROM ooef_t WHERE ooef001 = g_site AND ooefent  = g_enterprise
             
            LET g_qryparam.arg1 = l_ooef004        #參照表號
            LET g_qryparam.arg2 = 'armt100'           #程式代號

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_rmaa_m.rmaadocno = g_qryparam.return1              

            DISPLAY g_rmaa_m.rmaadocno TO rmaadocno              #
            
            CALL s_aooi200_get_slip_desc(g_rmaa_m.rmaadocno) RETURNING g_rmaa_m.rmaadocno_desc
            DISPLAY BY NAME g_rmaa_m.rmaadocno_desc
            
            NEXT FIELD rmaadocno                          #返回原欄位
         
]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success              LIKE type_t.num5
   DEFINE l_ooef004              LIKE ooef_t.ooef004    #單據別參照表號
   DEFINE l_num                  LIKE type_t.num10
   DEFINE l_rmabseq_backup       LIKE rmab_t.rmabseq    #紀錄新增退品明細時的項次
   DEFINE l_where                STRING                 #單據別過濾sql條件
   DEFINE l_open                 LIKE type_t.chr2       #記錄是否開啟退品點收
   DEFINE l_no                   LIKE type_t.num10      #查看是否有多个项序
   DEFINE l_para_data            LIKE type_t.chr80      #接參數用
   DEFINE l_err                  LIKE type_t.chr20
   DEFINE l_rmab012              LIKE rmab_t.rmab012]]>
  </point>
  <point name="input.detail_input.page2.count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET l_open = 'Y'
               CALL cl_set_comp_entry("rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007",TRUE)
               NEXT FIELD rmac001]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #自動產生單號
               CALL s_aooi200_gen_docno(g_site,g_rmaa_m.rmaadocno,g_rmaa_m.rmaadocdt,g_prog)
               RETURNING l_success,g_rmaa_m.rmaadocno
               IF l_success = 0 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_rmaa_m.rmaadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD rmaadocno
               END IF
               DISPLAY BY NAME g_rmaa_m.rmaadocno]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            
      LET g_rmaa_m.rmaasite = g_site
      LET g_rmaa_m.rmaadocdt = g_today
      LET g_rmaa_m.rmaa008 = g_today
      LET g_rmaa_m.rmaa002 = g_user
      LET g_rmaa_m.rmaastus = 'N'
      LET g_rmaa_m.rmaa003 = g_dept
      
      CALL s_desc_get_person_desc(g_rmaa_m.rmaa002) RETURNING g_rmaa_m.rmaa002_desc
      DISPLAY BY NAME g_rmaa_m.rmaa002_desc
      CALL s_desc_get_department_desc(g_rmaa_m.rmaa003) RETURNING g_rmaa_m.rmaa003_desc
      DISPLAY BY NAME g_rmaa_m.rmaa003_desc
      
      INITIALIZE g_rmaa_m_t.* TO NULL
      INITIALIZE g_rmaa_m_o.* TO NULL]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = '1'                        ]]>
  </point>
  <point name="menu.count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_open = 'Y'
               CALL cl_set_comp_entry("rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007",TRUE)
               NEXT FIELD rmac001]]>
  </point>
  <point name="menu.prog_rmaa002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
               
               CALL cl_user_contact("aooi130", "ooag_t", "ooag002", "ooag001",g_rmaa_m.rmaa002)

]]>
  </point>
  <point name="menu.prog_rmaa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
#               INITIALIZE la_param.* TO NULL
#               LET la_param.prog     = 'axmt540'
#               LET la_param.param[1] = g_rmaa_m.rmaa005
#
#               LET ls_js = util.JSON.stringify(la_param)
#               CALL cl_cmdrun_wait(ls_js)
               CALL armt100_qrystr(g_rmaa_m.rmaa005)

]]>
  </point>
  <point name="menu.prog_rmaa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #應用 a41 樣板自動產生(Version:2)
               #使用JSON格式組合參數與作業編號(串查)
#               INITIALIZE la_param.* TO NULL
#               LET la_param.prog     = 'axmt500'
#               LET la_param.param[1] = g_rmaa_m.rmaa006
#
#               LET ls_js = util.JSON.stringify(la_param)
#               CALL cl_cmdrun_wait(ls_js)
               CALL armt100_qrystr(g_rmaa_m.rmaa006)

]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_rmaa_m.rmaastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

   CASE g_rmaa_m.rmaastus
      WHEN 'N'   #未確認
         CALL cl_set_act_visible("count",FALSE)         

      WHEN 'S'   #已扣帳
         CALL cl_set_act_visible("count,modify,delete,modify_detail",FALSE)         

#      WHEN 'D'   #抽單
#         CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
#         CALL cl_set_act_visible("axmt540_produce_axmt580",FALSE)         
#
#      WHEN 'R'   #已拒絕     

      WHEN 'Y'   #已確認
         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
         CALL cl_set_act_visible("count",TRUE)

#      WHEN 'H'   #留置
#         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)

      WHEN 'X'   #作廢
         CALL cl_set_act_visible("count,modify,delete,modify_detail",FALSE)
         
#      WHEN 'W'   #送簽中
#         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
#         
#      WHEN 'A'   #已核准
#         CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)    
#
   END CASE
   ]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_aooi200_get_slip_desc(g_rmaa_m.rmaadocno) RETURNING g_rmaa_m.rmaadocno_desc
   DISPLAY BY NAME g_rmaa_m.rmaadocno_desc]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_err_collect_init()
   
   CASE lc_state
      WHEN 'Y'
         IF g_rmaa_m.rmaastus = 'N' THEN    #確認
            CALL s_armt100_conf_chk(g_rmaa_m.rmaadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               RETURN
            ELSE
               IF NOT cl_ask_confirm('aim-00108') THEN   #是否執行確認？
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_begin()
                  
                  CALL s_aooi200_get_slip(g_rmaa_m.rmaadocno) RETURNING l_success,l_slip
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  END IF
                  
                  CALL s_armt100_conf_upd(g_rmaa_m.rmaadocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  ELSE
                     #銷退單單別參數設置"自動過帳"
                     IF cl_get_doc_para(g_enterprise,g_site,l_slip,'D-BAS-0083') = 'Y' THEN                  
                        LET lc_state = 'S'
                     END IF
                     CALL s_transaction_end('Y','0')
                  END IF

               END IF
            END IF
         END IF
         
         IF g_rmaa_m.rmaastus = 'S' THEN   #取消過帳
            CALL s_armt100_unpost_chk(g_rmaa_m.rmaadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL cl_err_collect_show()
               RETURN
            ELSE
               IF NOT cl_ask_confirm('sub-00361') THEN  #是否執行取消過帳？
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_begin()
                  CALL s_armt100_unpost_upd(g_rmaa_m.rmaadocno) RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     CALL cl_err_collect_show()
                     RETURN
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF
            END IF
         END IF
         
      WHEN 'X'   #作廢
         CALL s_armt100_invalid_chk(g_rmaa_m.rmaadocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00109') THEN  #是否執行作廢？
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_begin()
               CALL s_armt100_invalid_upd(g_rmaa_m.rmaadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF   
      
      WHEN 'S'  #過帳
         CALL s_armt100_post_chk(g_rmaa_m.rmaadocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            RETURN
         ELSE
            IF NOT cl_ask_confirm('sub-00360') THEN  #是否執行過帳？
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_begin()
               CALL s_armt100_post_upd(g_rmaa_m.rmaadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF   
      
      WHEN 'N'  #取消確認
         CALL s_armt100_unconf_chk(g_rmaa_m.rmaadocno) RETURNING l_success
         IF NOT l_success THEN
            CALL cl_err_collect_show()
            RETURN
         ELSE
            IF NOT cl_ask_confirm('aim-00110') THEN   #是否執行取消確認？
               CALL cl_err_collect_show()
               RETURN
            ELSE
               CALL s_transaction_begin()
               CALL s_armt100_unconf_upd(g_rmaa_m.rmaadocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_err_collect_show()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
         END IF
              
   END CASE
   
   CALL cl_err_collect_show()]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #confirmed   確認
      #unconfirmed 取消確認
      #posted      過帳
      #unposted    取消過帳
      #invalid     作廢
      #unhold      取消留置
      #hold        留置      
      
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("confirmed,unconfirmed,posted,unposted,invalid,unhold,hold",FALSE)

      CASE g_rmaa_m.rmaastus
         WHEN "N"   #未確認
            CALL cl_set_act_visible("invalid,confirmed",TRUE)

         WHEN "X"   #作廢
            RETURN

         WHEN "Y"   #已確認
            CALL cl_set_act_visible("unconfirmed,posted",TRUE)

         WHEN "S"   #已過帳
           CALL cl_set_act_visible("unposted",TRUE)
#           
#         WHEN "Z"  #扣帳還原
#            RETURN
      END CASE   ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success       LIKE type_t.num5
   DEFINE l_slip          LIKE ooba_t.ooba001]]>
  </point>
  <point name="statechange.unposted" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET lc_state = "Y"]]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL armt100_b_fill2('2')]]>
  </point>
  <section id="armt100.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION armt100_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="armt100.b_fill" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION armt100_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_rmab_d.clear()    #g_rmab_d 單頭及單身 
   CALL g_rmab2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF armt100_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE rmabseq,rmab001,rmab002,rmab003,rmab004,rmab005,rmab006,rmab007, 
             rmab008,rmab009,rmab010,rmab011,rmab012,rmab013,rmab014,rmab015,rmab016,rmab017,rmabsite , 
             t1.imaal003 FROM rmab_t",   
                     " INNER JOIN rmaa_t ON rmaadocno = rmabdocno ",
 
                     #"",
                     " LEFT JOIN rmac_t ON rmabent = rmacent AND rmabdocno = rmacdocno AND rmabseq = rmacseq ",
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=rmab009 AND t1.imaal002='"||g_dlang||"' ",
 
                     " WHERE rmabent=? AND rmabdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY rmab_t.rmabseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE armt100_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR armt100_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_rmaa_m.rmaadocno
                                               
      FOREACH b_fill_cs INTO g_rmab_d[l_ac].rmabseq,g_rmab_d[l_ac].rmab001,g_rmab_d[l_ac].rmab002,g_rmab_d[l_ac].rmab003, 
          g_rmab_d[l_ac].rmab004,g_rmab_d[l_ac].rmab005,g_rmab_d[l_ac].rmab006,g_rmab_d[l_ac].rmab007, 
          g_rmab_d[l_ac].rmab008,g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010,g_rmab_d[l_ac].rmab011, 
          g_rmab_d[l_ac].rmab012,g_rmab_d[l_ac].rmab013,g_rmab_d[l_ac].rmab014,g_rmab_d[l_ac].rmab015, 
          g_rmab_d[l_ac].rmab016,g_rmab_d[l_ac].rmab017,g_rmab_d[l_ac].rmabsite,g_rmab_d[l_ac].rmab009_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_rmab_d.deleteElement(g_rmab_d.getLength())
   CALL g_rmab2_d.deleteElement(g_rmab2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE armt100_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_rmab_d.getLength()
      LET g_rmab_d_mask_o[l_ac].* =  g_rmab_d[l_ac].*
      CALL armt100_rmab_t_mask()
      LET g_rmab_d_mask_n[l_ac].* =  g_rmab_d[l_ac].*
   END FOR
   
   LET g_rmab2_d_mask_o.* =  g_rmab2_d.*
   FOR l_ac = 1 TO g_rmab2_d.getLength()
      LET g_rmab2_d_mask_o[l_ac].* =  g_rmab2_d[l_ac].*
      CALL armt100_rmac_t_mask()
      LET g_rmab2_d_mask_n[l_ac].* =  g_rmab2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="armt100.b_fill2" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION armt100_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF armt100_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_rmab_d.getLength() > 0 THEN
               CALL g_rmab2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007, 
             rmacsite ,t3.inayl003 ,t4.inab003 ,t5.ooag011 FROM rmac_t",    
                     "",
                                    " LEFT JOIN inayl_t t3 ON t3.inaylent='"||g_enterprise||"' AND t3.inayl001=rmac002 AND t3.inayl002='"||g_dlang||"' ",
               " LEFT JOIN inab_t t4 ON t4.inabent='"||g_enterprise||"' AND t4.inabsite=rmacsite AND t4.inab001=rmac002 AND t4.inab002=rmac003  ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=rmac007  ",
 
                     " WHERE rmacent=? AND rmacdocno=? AND rmacseq=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  rmac_t.rmacseq1" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE armt100_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR armt100_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,g_rmaa_m.rmaadocno,g_rmab_d[g_detail_idx].rmabseq
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_rmab2_d[l_ac].rmacseq1,g_rmab2_d[l_ac].rmac001,g_rmab2_d[l_ac].rmac002, 
             g_rmab2_d[l_ac].rmac003,g_rmab2_d[l_ac].rmac004,g_rmab2_d[l_ac].rmac005,g_rmab2_d[l_ac].rmac006, 
             g_rmab2_d[l_ac].rmac007,g_rmab2_d[l_ac].rmacsite,g_rmab2_d[l_ac].rmac002_desc,g_rmab2_d[l_ac].rmac003_desc, 
             g_rmab2_d[l_ac].rmac007_desc 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_rmab2_d.deleteElement(g_rmab2_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_rmab2_d_mask_o.* =  g_rmab2_d.*
   FOR l_ac = 1 TO g_rmab2_d.getLength()
      LET g_rmab2_d_mask_o[l_ac].* =  g_rmab2_d[l_ac].*
      CALL armt100_rmac_t_mask()
      LET g_rmab2_d_mask_n[l_ac].* =  g_rmab2_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL armt100_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="armt100.browser_fill" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION armt100_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE rmaadocno ",
                      " FROM rmaa_t ",
                      " ",
                      " LEFT JOIN rmab_t ON rmabent = rmaaent AND rmaadocno = rmabdocno ", "  ",
                      #add-point:browser_fill段sql(rmab_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
                      " LEFT JOIN rmac_t ON rmacent = rmaaent AND rmabdocno = rmacdocno AND rmabseq = rmacseq", "  ",
                      #add-point:browser_fill段sql(rmac_t1)
                      {<point name="browser_fill.cnt.join.rmac_t1"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE rmaaent = '" ||g_enterprise|| "' AND rmabent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("rmaa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE rmaadocno ",
                      " FROM rmaa_t ", 
                      "  ",
                      "  ",
                      " WHERE rmaaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("rmaa_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_rmaa_m.* TO NULL
      CALL g_rmab_d.clear()        
      CALL g_rmab2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.rmaadocno,t0.rmaadocdt,t0.rmaa002,t0.rmaa003,t0.rmaa001,t0.rmaa004,t0.rmaa005,t0.rmaa006,t0.rmaasite Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.rmaastus,t0.rmaadocno,t0.rmaadocdt,t0.rmaa002,t0.rmaa003,t0.rmaa001, 
       t0.rmaa004,t0.rmaa005,t0.rmaa006,t0.rmaasite,t1.ooag011 ,t2.ooefl003 ,t3.pmaal003 ",
               " FROM rmaa_t t0",
               "  ",
               "  LEFT JOIN rmab_t ON rmabent = rmaaent AND rmaadocno = rmabdocno ", "  ", 
               #add-point:browser_fill段sql(rmab_t1)
               {<point name="browser_fill.join.rmab_t1"/>}
               #end add-point
 
               "  LEFT JOIN rmac_t ON rmacent = rmaaent AND rmabdocno = rmacdocno AND rmabseq = rmacseq", "  ", 
               #add-point:browser_fill段sql(rmac_t1)
               {<point name="browser_fill.join.rmac_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.rmaa002  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.rmaa003 AND t2.ooefl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t3 ON t3.pmaalent='"||g_enterprise||"' AND t3.pmaal001=t0.rmaa001 AND t3.pmaal002='"||g_lang||"' ",
 
               " WHERE t0.rmaaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("rmaa_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY rmaadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"rmaa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_rmaadocno,g_browser[g_cnt].b_rmaadocdt, 
       g_browser[g_cnt].b_rmaa002,g_browser[g_cnt].b_rmaa003,g_browser[g_cnt].b_rmaa001,g_browser[g_cnt].b_rmaa004, 
       g_browser[g_cnt].b_rmaa005,g_browser[g_cnt].b_rmaa006,g_browser[g_cnt].b_rmaasite,g_browser[g_cnt].b_rmaa002_desc, 
       g_browser[g_cnt].b_rmaa003_desc,g_browser[g_cnt].b_rmaa001_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL armt100_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "S"
            LET g_browser[g_cnt].b_statepic = "stus/16/posted.png"
         WHEN "Z"
            LET g_browser[g_cnt].b_statepic = "stus/16/unposted.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_rmaadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="armt100.construct" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION armt100_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_rmaa_m.* TO NULL
   CALL g_rmab_d.clear()        
   CALL g_rmab2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON rmaadocno,rmaa001,rmaasite,rmaadocdt,rmaa008,rmaa002,rmaa003,rmaastus, 
          rmaa004,rmaa005,rmaa006,rmaa007,rmaaownid,rmaaowndp,rmaacrtid,rmaacrtdp,rmaacrtdt,rmaamodid, 
          rmaamoddt,rmaacnfid,rmaacnfdt,rmaapstid,rmaapstdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<rmaacrtdt>>----
         AFTER FIELD rmaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<rmaamoddt>>----
         AFTER FIELD rmaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rmaacnfdt>>----
         AFTER FIELD rmaacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<rmaapstdt>>----
         AFTER FIELD rmaapstdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.rmaadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaadocno
            #add-point:ON ACTION controlp INFIELD rmaadocno
            {<point name="construct.c.rmaadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaadocno
            #add-point:BEFORE FIELD rmaadocno
            {<point name="construct.b.rmaadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaadocno
            
            #add-point:AFTER FIELD rmaadocno
            {<point name="construct.a.rmaadocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa001
            #add-point:ON ACTION controlp INFIELD rmaa001
            {<point name="construct.c.rmaa001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa001
            #add-point:BEFORE FIELD rmaa001
            {<point name="construct.b.rmaa001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa001
            
            #add-point:AFTER FIELD rmaa001
            {<point name="construct.a.rmaa001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaasite
            #add-point:BEFORE FIELD rmaasite
            {<point name="construct.b.rmaasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaasite
            
            #add-point:AFTER FIELD rmaasite
            {<point name="construct.a.rmaasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaasite
            #add-point:ON ACTION controlp INFIELD rmaasite
            {<point name="construct.c.rmaasite" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaadocdt
            #add-point:BEFORE FIELD rmaadocdt
            {<point name="construct.b.rmaadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaadocdt
            
            #add-point:AFTER FIELD rmaadocdt
            {<point name="construct.a.rmaadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaadocdt
            #add-point:ON ACTION controlp INFIELD rmaadocdt
            {<point name="construct.c.rmaadocdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa008
            #add-point:BEFORE FIELD rmaa008
            {<point name="construct.b.rmaa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa008
            
            #add-point:AFTER FIELD rmaa008
            {<point name="construct.a.rmaa008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa008
            #add-point:ON ACTION controlp INFIELD rmaa008
            {<point name="construct.c.rmaa008" />}
            #END add-point
 
         #Ctrlp:construct.c.rmaa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa002
            #add-point:ON ACTION controlp INFIELD rmaa002
            {<point name="construct.c.rmaa002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa002
            #add-point:BEFORE FIELD rmaa002
            {<point name="construct.b.rmaa002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa002
            
            #add-point:AFTER FIELD rmaa002
            {<point name="construct.a.rmaa002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa003
            #add-point:ON ACTION controlp INFIELD rmaa003
            {<point name="construct.c.rmaa003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa003
            #add-point:BEFORE FIELD rmaa003
            {<point name="construct.b.rmaa003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa003
            
            #add-point:AFTER FIELD rmaa003
            {<point name="construct.a.rmaa003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaastus
            #add-point:BEFORE FIELD rmaastus
            {<point name="construct.b.rmaastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaastus
            
            #add-point:AFTER FIELD rmaastus
            {<point name="construct.a.rmaastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaastus
            #add-point:ON ACTION controlp INFIELD rmaastus
            {<point name="construct.c.rmaastus" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa004
            #add-point:BEFORE FIELD rmaa004
            {<point name="construct.b.rmaa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa004
            
            #add-point:AFTER FIELD rmaa004
            {<point name="construct.a.rmaa004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa004
            #add-point:ON ACTION controlp INFIELD rmaa004
            {<point name="construct.c.rmaa004" />}
            #END add-point
 
         #Ctrlp:construct.c.rmaa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa005
            #add-point:ON ACTION controlp INFIELD rmaa005
            {<point name="construct.c.rmaa005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa005
            #add-point:BEFORE FIELD rmaa005
            {<point name="construct.b.rmaa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa005
            
            #add-point:AFTER FIELD rmaa005
            {<point name="construct.a.rmaa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa006
            #add-point:ON ACTION controlp INFIELD rmaa006
            {<point name="construct.c.rmaa006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa006
            #add-point:BEFORE FIELD rmaa006
            {<point name="construct.b.rmaa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa006
            
            #add-point:AFTER FIELD rmaa006
            {<point name="construct.a.rmaa006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa007
            #add-point:BEFORE FIELD rmaa007
            {<point name="construct.b.rmaa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa007
            
            #add-point:AFTER FIELD rmaa007
            {<point name="construct.a.rmaa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa007
            #add-point:ON ACTION controlp INFIELD rmaa007
            {<point name="construct.c.rmaa007" />}
            #END add-point
 
         #Ctrlp:construct.c.rmaaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaaownid
            #add-point:ON ACTION controlp INFIELD rmaaownid
            {<point name="construct.c.rmaaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaaownid
            #add-point:BEFORE FIELD rmaaownid
            {<point name="construct.b.rmaaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaaownid
            
            #add-point:AFTER FIELD rmaaownid
            {<point name="construct.a.rmaaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaaowndp
            #add-point:ON ACTION controlp INFIELD rmaaowndp
            {<point name="construct.c.rmaaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaaowndp
            #add-point:BEFORE FIELD rmaaowndp
            {<point name="construct.b.rmaaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaaowndp
            
            #add-point:AFTER FIELD rmaaowndp
            {<point name="construct.a.rmaaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaacrtid
            #add-point:ON ACTION controlp INFIELD rmaacrtid
            {<point name="construct.c.rmaacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaacrtid
            #add-point:BEFORE FIELD rmaacrtid
            {<point name="construct.b.rmaacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaacrtid
            
            #add-point:AFTER FIELD rmaacrtid
            {<point name="construct.a.rmaacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.rmaacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaacrtdp
            #add-point:ON ACTION controlp INFIELD rmaacrtdp
            {<point name="construct.c.rmaacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaacrtdp
            #add-point:BEFORE FIELD rmaacrtdp
            {<point name="construct.b.rmaacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaacrtdp
            
            #add-point:AFTER FIELD rmaacrtdp
            {<point name="construct.a.rmaacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaacrtdt
            #add-point:BEFORE FIELD rmaacrtdt
            {<point name="construct.b.rmaacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rmaamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaamodid
            #add-point:ON ACTION controlp INFIELD rmaamodid
            {<point name="construct.c.rmaamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaamodid
            #add-point:BEFORE FIELD rmaamodid
            {<point name="construct.b.rmaamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaamodid
            
            #add-point:AFTER FIELD rmaamodid
            {<point name="construct.a.rmaamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaamoddt
            #add-point:BEFORE FIELD rmaamoddt
            {<point name="construct.b.rmaamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.rmaacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaacnfid
            #add-point:ON ACTION controlp INFIELD rmaacnfid
            {<point name="construct.c.rmaacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaacnfid
            #add-point:BEFORE FIELD rmaacnfid
            {<point name="construct.b.rmaacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaacnfid
            
            #add-point:AFTER FIELD rmaacnfid
            {<point name="construct.a.rmaacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaacnfdt
            #add-point:BEFORE FIELD rmaacnfdt
            {<point name="construct.b.rmaacnfdt" />}
            #END add-point
 
         #Ctrlp:construct.c.rmaapstid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaapstid
            #add-point:ON ACTION controlp INFIELD rmaapstid
            {<point name="construct.c.rmaapstid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaapstid
            #add-point:BEFORE FIELD rmaapstid
            {<point name="construct.b.rmaapstid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaapstid
            
            #add-point:AFTER FIELD rmaapstid
            {<point name="construct.a.rmaapstid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaapstdt
            #add-point:BEFORE FIELD rmaapstdt
            {<point name="construct.b.rmaapstdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON rmabseq,rmab001,rmab002,rmab003,rmab004,rmab005,rmab006,rmab007,rmab008, 
          rmab009,rmab010,rmab011,rmab012,rmab013,rmab014,rmab015,rmab016,rmab017,rmabsite
           FROM s_detail1[1].rmabseq,s_detail1[1].rmab001,s_detail1[1].rmab002,s_detail1[1].rmab003, 
               s_detail1[1].rmab004,s_detail1[1].rmab005,s_detail1[1].rmab006,s_detail1[1].rmab007,s_detail1[1].rmab008, 
               s_detail1[1].rmab009,s_detail1[1].rmab010,s_detail1[1].rmab011,s_detail1[1].rmab012,s_detail1[1].rmab013, 
               s_detail1[1].rmab014,s_detail1[1].rmab015,s_detail1[1].rmab016,s_detail1[1].rmab017,s_detail1[1].rmabsite 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmabseq
            #add-point:BEFORE FIELD rmabseq
            {<point name="construct.b.page1.rmabseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmabseq
            
            #add-point:AFTER FIELD rmabseq
            {<point name="construct.a.page1.rmabseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmabseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmabseq
            #add-point:ON ACTION controlp INFIELD rmabseq
            {<point name="construct.c.page1.rmabseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab001
            #add-point:BEFORE FIELD rmab001
            {<point name="construct.b.page1.rmab001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab001
            
            #add-point:AFTER FIELD rmab001
            {<point name="construct.a.page1.rmab001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab001
            #add-point:ON ACTION controlp INFIELD rmab001
            {<point name="construct.c.page1.rmab001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab002
            #add-point:BEFORE FIELD rmab002
            {<point name="construct.b.page1.rmab002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab002
            
            #add-point:AFTER FIELD rmab002
            {<point name="construct.a.page1.rmab002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab002
            #add-point:ON ACTION controlp INFIELD rmab002
            {<point name="construct.c.page1.rmab002" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rmab003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab003
            #add-point:ON ACTION controlp INFIELD rmab003
            {<point name="construct.c.page1.rmab003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab003
            #add-point:BEFORE FIELD rmab003
            {<point name="construct.b.page1.rmab003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab003
            
            #add-point:AFTER FIELD rmab003
            {<point name="construct.a.page1.rmab003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab004
            #add-point:BEFORE FIELD rmab004
            {<point name="construct.b.page1.rmab004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab004
            
            #add-point:AFTER FIELD rmab004
            {<point name="construct.a.page1.rmab004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab004
            #add-point:ON ACTION controlp INFIELD rmab004
            {<point name="construct.c.page1.rmab004" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rmab005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab005
            #add-point:ON ACTION controlp INFIELD rmab005
            {<point name="construct.c.page1.rmab005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab005
            #add-point:BEFORE FIELD rmab005
            {<point name="construct.b.page1.rmab005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab005
            
            #add-point:AFTER FIELD rmab005
            {<point name="construct.a.page1.rmab005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab006
            #add-point:BEFORE FIELD rmab006
            {<point name="construct.b.page1.rmab006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab006
            
            #add-point:AFTER FIELD rmab006
            {<point name="construct.a.page1.rmab006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab006
            #add-point:ON ACTION controlp INFIELD rmab006
            {<point name="construct.c.page1.rmab006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab007
            #add-point:BEFORE FIELD rmab007
            {<point name="construct.b.page1.rmab007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab007
            
            #add-point:AFTER FIELD rmab007
            {<point name="construct.a.page1.rmab007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab007
            #add-point:ON ACTION controlp INFIELD rmab007
            {<point name="construct.c.page1.rmab007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab008
            #add-point:BEFORE FIELD rmab008
            {<point name="construct.b.page1.rmab008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab008
            
            #add-point:AFTER FIELD rmab008
            {<point name="construct.a.page1.rmab008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab008
            #add-point:ON ACTION controlp INFIELD rmab008
            {<point name="construct.c.page1.rmab008" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.rmab009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab009
            #add-point:ON ACTION controlp INFIELD rmab009
            {<point name="construct.c.page1.rmab009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab009
            #add-point:BEFORE FIELD rmab009
            {<point name="construct.b.page1.rmab009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab009
            
            #add-point:AFTER FIELD rmab009
            {<point name="construct.a.page1.rmab009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab010
            #add-point:ON ACTION controlp INFIELD rmab010
            {<point name="construct.c.page1.rmab010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab010
            #add-point:BEFORE FIELD rmab010
            {<point name="construct.b.page1.rmab010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab010
            
            #add-point:AFTER FIELD rmab010
            {<point name="construct.a.page1.rmab010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab011
            #add-point:ON ACTION controlp INFIELD rmab011
            {<point name="construct.c.page1.rmab011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab011
            #add-point:BEFORE FIELD rmab011
            {<point name="construct.b.page1.rmab011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab011
            
            #add-point:AFTER FIELD rmab011
            {<point name="construct.a.page1.rmab011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab012
            #add-point:BEFORE FIELD rmab012
            {<point name="construct.b.page1.rmab012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab012
            
            #add-point:AFTER FIELD rmab012
            {<point name="construct.a.page1.rmab012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab012
            #add-point:ON ACTION controlp INFIELD rmab012
            {<point name="construct.c.page1.rmab012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab013
            #add-point:BEFORE FIELD rmab013
            {<point name="construct.b.page1.rmab013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab013
            
            #add-point:AFTER FIELD rmab013
            {<point name="construct.a.page1.rmab013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab013
            #add-point:ON ACTION controlp INFIELD rmab013
            {<point name="construct.c.page1.rmab013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab014
            #add-point:BEFORE FIELD rmab014
            {<point name="construct.b.page1.rmab014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab014
            
            #add-point:AFTER FIELD rmab014
            {<point name="construct.a.page1.rmab014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab014
            #add-point:ON ACTION controlp INFIELD rmab014
            {<point name="construct.c.page1.rmab014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab015
            #add-point:BEFORE FIELD rmab015
            {<point name="construct.b.page1.rmab015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab015
            
            #add-point:AFTER FIELD rmab015
            {<point name="construct.a.page1.rmab015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab015
            #add-point:ON ACTION controlp INFIELD rmab015
            {<point name="construct.c.page1.rmab015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab016
            #add-point:BEFORE FIELD rmab016
            {<point name="construct.b.page1.rmab016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab016
            
            #add-point:AFTER FIELD rmab016
            {<point name="construct.a.page1.rmab016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab016
            #add-point:ON ACTION controlp INFIELD rmab016
            {<point name="construct.c.page1.rmab016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab017
            #add-point:BEFORE FIELD rmab017
            {<point name="construct.b.page1.rmab017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab017
            
            #add-point:AFTER FIELD rmab017
            {<point name="construct.a.page1.rmab017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmab017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab017
            #add-point:ON ACTION controlp INFIELD rmab017
            {<point name="construct.c.page1.rmab017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmabsite
            #add-point:BEFORE FIELD rmabsite
            {<point name="construct.b.page1.rmabsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmabsite
            
            #add-point:AFTER FIELD rmabsite
            {<point name="construct.a.page1.rmabsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.rmabsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmabsite
            #add-point:ON ACTION controlp INFIELD rmabsite
            {<point name="construct.c.page1.rmabsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON rmacseq1,l_rmab009,l_rmab010,l_rmab011,rmac001,rmac002,rmac003,rmac004, 
          rmac005,rmac006,rmac007,rmacsite
           FROM s_detail2[1].rmacseq1,s_detail2[1].l_rmab009,s_detail2[1].l_rmab010,s_detail2[1].l_rmab011, 
               s_detail2[1].rmac001,s_detail2[1].rmac002,s_detail2[1].rmac003,s_detail2[1].rmac004,s_detail2[1].rmac005, 
               s_detail2[1].rmac006,s_detail2[1].rmac007,s_detail2[1].rmacsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmacseq1
            #add-point:BEFORE FIELD rmacseq1
            {<point name="construct.b.page2.rmacseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmacseq1
            
            #add-point:AFTER FIELD rmacseq1
            {<point name="construct.a.page2.rmacseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rmacseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmacseq1
            #add-point:ON ACTION controlp INFIELD rmacseq1
            {<point name="construct.c.page2.rmacseq1" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.l_rmab009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rmab009
            #add-point:ON ACTION controlp INFIELD l_rmab009
            {<point name="construct.c.page2.l_rmab009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rmab009
            #add-point:BEFORE FIELD l_rmab009
            {<point name="construct.b.page2.l_rmab009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rmab009
            
            #add-point:AFTER FIELD l_rmab009
            {<point name="construct.a.page2.l_rmab009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.l_rmab010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rmab010
            #add-point:ON ACTION controlp INFIELD l_rmab010
            {<point name="construct.c.page2.l_rmab010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rmab010
            #add-point:BEFORE FIELD l_rmab010
            {<point name="construct.b.page2.l_rmab010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rmab010
            
            #add-point:AFTER FIELD l_rmab010
            {<point name="construct.a.page2.l_rmab010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.l_rmab011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD l_rmab011
            #add-point:ON ACTION controlp INFIELD l_rmab011
            {<point name="construct.c.page2.l_rmab011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD l_rmab011
            #add-point:BEFORE FIELD l_rmab011
            {<point name="construct.b.page2.l_rmab011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD l_rmab011
            
            #add-point:AFTER FIELD l_rmab011
            {<point name="construct.a.page2.l_rmab011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac001
            #add-point:BEFORE FIELD rmac001
            {<point name="construct.b.page2.rmac001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac001
            
            #add-point:AFTER FIELD rmac001
            {<point name="construct.a.page2.rmac001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rmac001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac001
            #add-point:ON ACTION controlp INFIELD rmac001
            {<point name="construct.c.page2.rmac001" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.rmac002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac002
            #add-point:ON ACTION controlp INFIELD rmac002
            {<point name="construct.c.page2.rmac002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac002
            #add-point:BEFORE FIELD rmac002
            {<point name="construct.b.page2.rmac002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac002
            
            #add-point:AFTER FIELD rmac002
            {<point name="construct.a.page2.rmac002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rmac003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac003
            #add-point:ON ACTION controlp INFIELD rmac003
            {<point name="construct.c.page2.rmac003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac003
            #add-point:BEFORE FIELD rmac003
            {<point name="construct.b.page2.rmac003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac003
            
            #add-point:AFTER FIELD rmac003
            {<point name="construct.a.page2.rmac003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rmac004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac004
            #add-point:ON ACTION controlp INFIELD rmac004
            {<point name="construct.c.page2.rmac004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac004
            #add-point:BEFORE FIELD rmac004
            {<point name="construct.b.page2.rmac004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac004
            
            #add-point:AFTER FIELD rmac004
            {<point name="construct.a.page2.rmac004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rmac005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac005
            #add-point:ON ACTION controlp INFIELD rmac005
            {<point name="construct.c.page2.rmac005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac005
            #add-point:BEFORE FIELD rmac005
            {<point name="construct.b.page2.rmac005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac005
            
            #add-point:AFTER FIELD rmac005
            {<point name="construct.a.page2.rmac005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac006
            #add-point:BEFORE FIELD rmac006
            {<point name="construct.b.page2.rmac006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac006
            
            #add-point:AFTER FIELD rmac006
            {<point name="construct.a.page2.rmac006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rmac006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac006
            #add-point:ON ACTION controlp INFIELD rmac006
            {<point name="construct.c.page2.rmac006" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.rmac007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac007
            #add-point:ON ACTION controlp INFIELD rmac007
            {<point name="construct.c.page2.rmac007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac007
            #add-point:BEFORE FIELD rmac007
            {<point name="construct.b.page2.rmac007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac007
            
            #add-point:AFTER FIELD rmac007
            {<point name="construct.a.page2.rmac007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmacsite
            #add-point:BEFORE FIELD rmacsite
            {<point name="construct.b.page2.rmacsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmacsite
            
            #add-point:AFTER FIELD rmacsite
            {<point name="construct.a.page2.rmacsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.rmacsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmacsite
            #add-point:ON ACTION controlp INFIELD rmacsite
            {<point name="construct.c.page2.rmacsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "rmaa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "rmab_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="armt100.default_search" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION armt100_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " rmaadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "rmaa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "rmab_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="armt100.delete" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION armt100_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_rmaa_m.rmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN armt100_cl USING g_enterprise,g_rmaa_m.rmaadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN armt100_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE armt100_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE armt100_master_referesh USING g_rmaa_m.rmaadocno INTO g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus, 
       g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
       g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaa002_desc,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp_desc,g_rmaa_m.rmaacrtid_desc, 
       g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaacnfid_desc,g_rmaa_m.rmaapstid_desc 

   
   #檢查是否允許此動作
   IF NOT armt100_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rmaa_m_mask_o.* =  g_rmaa_m.*
   CALL armt100_rmaa_t_mask()
   LET g_rmaa_m_mask_n.* =  g_rmaa_m.*
   
   CALL armt100_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL armt100_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
 
      DELETE FROM rmaa_t
       WHERE rmaaent = g_enterprise AND rmaadocno = g_rmaa_m.rmaadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_rmaa_m.rmaadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM rmab_t
       WHERE rmabent = g_enterprise AND rmabdocno = g_rmaa_m.rmaadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rmab_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM rmac_t
       WHERE rmacent = g_enterprise AND
             rmacdocno = g_rmaa_m.rmaadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rmac_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE armt100_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_rmab_d.clear() 
      CALL g_rmab2_d.clear()       
 
     
      CALL armt100_ui_browser_refresh()  
      #CALL armt100_ui_headershow()  
      #CALL armt100_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL armt100_browser_fill("")
         CALL armt100_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE armt100_cl
 
   #功能已完成,通報訊息中心
   CALL armt100_msgcentre_notify('')
    
END FUNCTION
]]>
  </section>
  <section id="armt100.delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION armt100_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM rmab_t
       WHERE rmabent = g_enterprise AND
         rmabdocno = ps_keys_bak[1] AND rmabseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rmab_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM rmac_t
       WHERE rmacent = g_enterprise AND
             rmacdocno = ps_keys_bak[1] AND rmacseq = ps_keys_bak[2] AND rmacseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rmac_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_rmab2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="armt100.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000007
#+ 
#+ Filename...: armt100
#+ Description: RMA維護作業
#+ Creator....: 05423(2015-05-06 17:19:41)
#+ Modifier...: 05423(2015-05-08 16:37:04) -SD/PR-
]]>
  </section>
  <section id="armt100.detail_reproduce" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION armt100_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE rmab_t.*
 
   DEFINE l_detail2    RECORD LIKE rmac_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE armt100_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE armt100_detail AS ",
                "SELECT * FROM rmab_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO armt100_detail SELECT * FROM rmab_t 
                                         WHERE rmabent = g_enterprise AND rmabdocno = g_rmaadocno_t
 
   
   #將key修正為調整後   
   UPDATE armt100_detail 
      #更新key欄位
      SET rmabdocno = g_rmaa_m.rmaadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO rmab_t SELECT * FROM armt100_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE armt100_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE armt100_detail AS ",
      "SELECT * FROM rmac_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO armt100_detail SELECT * FROM rmac_t
                                         WHERE rmacent = g_enterprise AND rmacdocno = g_rmaadocno_t
 
 
   #將key修正為調整後   
   UPDATE armt100_detail SET rmacdocno = g_rmaa_m.rmaadocno
 
  
   #將資料塞回原table   
   INSERT INTO rmac_t SELECT * FROM armt100_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE armt100_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="armt100.detail_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION armt100_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="armt100.fetch" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION armt100_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_rmaa_m.rmaadocno = g_browser[g_current_idx].b_rmaadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE armt100_master_referesh USING g_rmaa_m.rmaadocno INTO g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus, 
       g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
       g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaa002_desc,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp_desc,g_rmaa_m.rmaacrtid_desc, 
       g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaacnfid_desc,g_rmaa_m.rmaapstid_desc 

   
   #遮罩相關處理
   LET g_rmaa_m_mask_o.* =  g_rmaa_m.*
   CALL armt100_rmaa_t_mask()
   LET g_rmaa_m_mask_n.* =  g_rmaa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL armt100_set_act_visible()   
   CALL armt100_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_rmaa_m_t.* = g_rmaa_m.*
   LET g_rmaa_m_o.* = g_rmaa_m.*
   
   LET g_data_owner = g_rmaa_m.rmaaownid      
   LET g_data_dept  = g_rmaa_m.rmaaowndp
   
   #重新顯示   
   CALL armt100_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="armt100.fill_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION armt100_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="armt100.filter" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION armt100_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON rmaadocno,rmaadocdt,rmaa002,rmaa003,rmaa001,rmaa004,rmaa005,rmaa006,rmaasite 

                          FROM s_browse[1].b_rmaadocno,s_browse[1].b_rmaadocdt,s_browse[1].b_rmaa002, 
                              s_browse[1].b_rmaa003,s_browse[1].b_rmaa001,s_browse[1].b_rmaa004,s_browse[1].b_rmaa005, 
                              s_browse[1].b_rmaa006,s_browse[1].b_rmaasite
 
         BEFORE CONSTRUCT
               DISPLAY armt100_filter_parser('rmaadocno') TO s_browse[1].b_rmaadocno
            DISPLAY armt100_filter_parser('rmaadocdt') TO s_browse[1].b_rmaadocdt
            DISPLAY armt100_filter_parser('rmaa002') TO s_browse[1].b_rmaa002
            DISPLAY armt100_filter_parser('rmaa003') TO s_browse[1].b_rmaa003
            DISPLAY armt100_filter_parser('rmaa001') TO s_browse[1].b_rmaa001
            DISPLAY armt100_filter_parser('rmaa004') TO s_browse[1].b_rmaa004
            DISPLAY armt100_filter_parser('rmaa005') TO s_browse[1].b_rmaa005
            DISPLAY armt100_filter_parser('rmaa006') TO s_browse[1].b_rmaa006
            DISPLAY armt100_filter_parser('rmaasite') TO s_browse[1].b_rmaasite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL armt100_filter_show('rmaadocno')
   CALL armt100_filter_show('rmaadocdt')
   CALL armt100_filter_show('rmaa002')
   CALL armt100_filter_show('rmaa003')
   CALL armt100_filter_show('rmaa001')
   CALL armt100_filter_show('rmaa004')
   CALL armt100_filter_show('rmaa005')
   CALL armt100_filter_show('rmaa006')
   CALL armt100_filter_show('rmaasite')
 
END FUNCTION
]]>
  </section>
  <section id="armt100.filter_parser" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION armt100_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="armt100.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION armt100_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = armt100_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="armt100.global" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:36)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_rmaa_m        RECORD
       rmaadocno LIKE rmaa_t.rmaadocno, 
   rmaadocno_desc LIKE type_t.chr80, 
   rmaa001 LIKE rmaa_t.rmaa001, 
   rmaa001_desc LIKE type_t.chr80, 
   rmaasite LIKE rmaa_t.rmaasite, 
   rmaadocdt LIKE rmaa_t.rmaadocdt, 
   rmaa008 LIKE rmaa_t.rmaa008, 
   rmaa002 LIKE rmaa_t.rmaa002, 
   rmaa002_desc LIKE type_t.chr80, 
   rmaa003 LIKE rmaa_t.rmaa003, 
   rmaa003_desc LIKE type_t.chr80, 
   rmaastus LIKE rmaa_t.rmaastus, 
   rmaa004 LIKE rmaa_t.rmaa004, 
   rmaa005 LIKE rmaa_t.rmaa005, 
   rmaa006 LIKE rmaa_t.rmaa006, 
   rmaa007 LIKE rmaa_t.rmaa007, 
   rmaaownid LIKE rmaa_t.rmaaownid, 
   rmaaownid_desc LIKE type_t.chr80, 
   rmaaowndp LIKE rmaa_t.rmaaowndp, 
   rmaaowndp_desc LIKE type_t.chr80, 
   rmaacrtid LIKE rmaa_t.rmaacrtid, 
   rmaacrtid_desc LIKE type_t.chr80, 
   rmaacrtdp LIKE rmaa_t.rmaacrtdp, 
   rmaacrtdp_desc LIKE type_t.chr80, 
   rmaacrtdt LIKE rmaa_t.rmaacrtdt, 
   rmaamodid LIKE rmaa_t.rmaamodid, 
   rmaamodid_desc LIKE type_t.chr80, 
   rmaamoddt LIKE rmaa_t.rmaamoddt, 
   rmaacnfid LIKE rmaa_t.rmaacnfid, 
   rmaacnfid_desc LIKE type_t.chr80, 
   rmaacnfdt LIKE rmaa_t.rmaacnfdt, 
   rmaapstid LIKE rmaa_t.rmaapstid, 
   rmaapstid_desc LIKE type_t.chr80, 
   rmaapstdt LIKE rmaa_t.rmaapstdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_rmab_d        RECORD
       rmabseq LIKE rmab_t.rmabseq, 
   rmab001 LIKE rmab_t.rmab001, 
   rmab002 LIKE rmab_t.rmab002, 
   rmab003 LIKE rmab_t.rmab003, 
   rmab004 LIKE rmab_t.rmab004, 
   rmab005 LIKE rmab_t.rmab005, 
   rmab006 LIKE rmab_t.rmab006, 
   rmab007 LIKE rmab_t.rmab007, 
   rmab008 LIKE rmab_t.rmab008, 
   rmab009 LIKE rmab_t.rmab009, 
   rmab009_desc LIKE type_t.chr500, 
   rmab009_desc_1 LIKE type_t.chr500, 
   rmab010 LIKE rmab_t.rmab010, 
   rmab010_desc LIKE type_t.chr500, 
   rmab011 LIKE rmab_t.rmab011, 
   rmab011_desc LIKE type_t.chr500, 
   rmab012 LIKE rmab_t.rmab012, 
   rmab013 LIKE rmab_t.rmab013, 
   rmab014 LIKE rmab_t.rmab014, 
   rmab015 LIKE rmab_t.rmab015, 
   rmab016 LIKE rmab_t.rmab016, 
   rmab017 LIKE rmab_t.rmab017, 
   rmabsite LIKE rmab_t.rmabsite
       END RECORD
PRIVATE TYPE type_g_rmab2_d RECORD
       rmacseq1 LIKE rmac_t.rmacseq1, 
   l_rmab009 LIKE type_t.chr500, 
   l_rmab009_desc LIKE type_t.chr500, 
   l_rmab009_desc_1 LIKE type_t.chr500, 
   l_rmab010 LIKE type_t.chr30, 
   l_rmab010_desc LIKE type_t.chr500, 
   l_rmab011 LIKE type_t.chr10, 
   l_rmab011_desc LIKE type_t.chr500, 
   rmac001 LIKE rmac_t.rmac001, 
   rmac002 LIKE rmac_t.rmac002, 
   rmac002_desc LIKE type_t.chr500, 
   rmac003 LIKE rmac_t.rmac003, 
   rmac003_desc LIKE type_t.chr500, 
   rmac004 LIKE rmac_t.rmac004, 
   rmac005 LIKE rmac_t.rmac005, 
   rmac006 LIKE rmac_t.rmac006, 
   rmac007 LIKE rmac_t.rmac007, 
   rmac007_desc LIKE type_t.chr500, 
   rmacsite LIKE rmac_t.rmacsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_rmaadocno LIKE rmaa_t.rmaadocno,
      b_rmaadocdt LIKE rmaa_t.rmaadocdt,
      b_rmaa002 LIKE rmaa_t.rmaa002,
   b_rmaa002_desc LIKE type_t.chr80,
      b_rmaa003 LIKE rmaa_t.rmaa003,
   b_rmaa003_desc LIKE type_t.chr80,
      b_rmaa001 LIKE rmaa_t.rmaa001,
   b_rmaa001_desc LIKE type_t.chr80,
      b_rmaa004 LIKE rmaa_t.rmaa004,
      b_rmaa005 LIKE rmaa_t.rmaa005,
      b_rmaa006 LIKE rmaa_t.rmaa006,
      b_rmaasite LIKE rmaa_t.rmaasite
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_rmaa_m          type_g_rmaa_m
DEFINE g_rmaa_m_t        type_g_rmaa_m
DEFINE g_rmaa_m_o        type_g_rmaa_m
DEFINE g_rmaa_m_mask_o   type_g_rmaa_m #轉換遮罩前資料
DEFINE g_rmaa_m_mask_n   type_g_rmaa_m #轉換遮罩後資料
 
   DEFINE g_rmaadocno_t LIKE rmaa_t.rmaadocno
 
 
DEFINE g_rmab_d          DYNAMIC ARRAY OF type_g_rmab_d
DEFINE g_rmab_d_t        type_g_rmab_d
DEFINE g_rmab_d_o        type_g_rmab_d
DEFINE g_rmab_d_mask_o   DYNAMIC ARRAY OF type_g_rmab_d #轉換遮罩前資料
DEFINE g_rmab_d_mask_n   DYNAMIC ARRAY OF type_g_rmab_d #轉換遮罩後資料
DEFINE g_rmab2_d          DYNAMIC ARRAY OF type_g_rmab2_d
DEFINE g_rmab2_d_t        type_g_rmab2_d
DEFINE g_rmab2_d_o        type_g_rmab2_d
DEFINE g_rmab2_d_mask_o   DYNAMIC ARRAY OF type_g_rmab2_d #轉換遮罩前資料
DEFINE g_rmab2_d_mask_n   DYNAMIC ARRAY OF type_g_rmab2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="armt100.idx_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION armt100_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_rmab_d.getLength() THEN
         LET g_detail_idx = g_rmab_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_rmab_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_rmab_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_rmab2_d.getLength() THEN
         LET g_detail_idx2 = g_rmab2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_rmab2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_rmab2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="armt100.init" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION armt100_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('rmaastus','13','N,Y,S,Z,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL armt100_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="armt100.input" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION armt100_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rmaa_m.rmaadocno,g_rmaa_m.rmaadocno_desc,g_rmaa_m.rmaa001,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa002_desc, 
       g_rmaa_m.rmaa003,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006, 
       g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp,g_rmaa_m.rmaaowndp_desc, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtid_desc,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaacrtdt, 
       g_rmaa_m.rmaamodid,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaamoddt,g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfid_desc, 
       g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstid_desc,g_rmaa_m.rmaapstdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rmabseq,rmab001,rmab002,rmab003,rmab004,rmab005,rmab006,rmab007,rmab008, 
       rmab009,rmab010,rmab011,rmab012,rmab013,rmab014,rmab015,rmab016,rmab017,rmabsite FROM rmab_t  
       WHERE rmabent=? AND rmabdocno=? AND rmabseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE armt100_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007,rmacsite  
       FROM rmac_t WHERE rmacent=? AND rmacdocno=? AND rmacseq=? AND rmacseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE armt100_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL armt100_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL armt100_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001,g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008, 
       g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa007 

   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="armt100.input.body" ver="5" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_rmab_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rmab_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL armt100_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_rmab_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            CALL armt100_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN armt100_cl USING g_enterprise,g_rmaa_m.rmaadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN armt100_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE armt100_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rmab_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rmab_d[l_ac].rmabseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_rmab_d_t.* = g_rmab_d[l_ac].*  #BACKUP
               LET g_rmab_d_o.* = g_rmab_d[l_ac].*  #BACKUP
               CALL armt100_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL armt100_set_no_entry_b(l_cmd)
               IF NOT armt100_lock_b("rmab_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH armt100_bcl INTO g_rmab_d[l_ac].rmabseq,g_rmab_d[l_ac].rmab001,g_rmab_d[l_ac].rmab002, 
                      g_rmab_d[l_ac].rmab003,g_rmab_d[l_ac].rmab004,g_rmab_d[l_ac].rmab005,g_rmab_d[l_ac].rmab006, 
                      g_rmab_d[l_ac].rmab007,g_rmab_d[l_ac].rmab008,g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010, 
                      g_rmab_d[l_ac].rmab011,g_rmab_d[l_ac].rmab012,g_rmab_d[l_ac].rmab013,g_rmab_d[l_ac].rmab014, 
                      g_rmab_d[l_ac].rmab015,g_rmab_d[l_ac].rmab016,g_rmab_d[l_ac].rmab017,g_rmab_d[l_ac].rmabsite 

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_rmab_d_t.rmabseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rmab_d_mask_o[l_ac].* =  g_rmab_d[l_ac].*
                  CALL armt100_rmab_t_mask()
                  LET g_rmab_d_mask_n[l_ac].* =  g_rmab_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL armt100_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rmab_d[l_ac].* TO NULL 
            INITIALIZE g_rmab_d_t.* TO NULL 
            INITIALIZE g_rmab_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_rmab_d[l_ac].rmab012 = "0"
      LET g_rmab_d[l_ac].rmab013 = "0"
      LET g_rmab_d[l_ac].rmab014 = "0"
      LET g_rmab_d[l_ac].rmab015 = "0"
      LET g_rmab_d[l_ac].rmab016 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_rmab_d_t.* = g_rmab_d[l_ac].*     #新輸入資料
            LET g_rmab_d_o.* = g_rmab_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL armt100_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL armt100_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rmab_d[li_reproduce_target].* = g_rmab_d[li_reproduce].*
 
               LET g_rmab_d[li_reproduce_target].rmabseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rmab_t 
             WHERE rmabent = g_enterprise AND rmabdocno = g_rmaa_m.rmaadocno
 
               AND rmabseq = g_rmab_d[l_ac].rmabseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rmaa_m.rmaadocno
               LET gs_keys[2] = g_rmab_d[g_detail_idx].rmabseq
               CALL armt100_insert_b('rmab_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_rmab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rmab_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL armt100_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_rmaa_m.rmaadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_rmab_d_t.rmabseq
 
            
               #刪除同層單身
               IF NOT armt100_delete_b('rmab_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE armt100_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT armt100_key_delete_b(gs_keys,'rmab_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE armt100_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE armt100_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_rmab_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rmab_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmabseq
            #add-point:BEFORE FIELD rmabseq
            {<point name="input.b.page1.rmabseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmabseq
            
            #add-point:AFTER FIELD rmabseq
            {<point name="input.a.page1.rmabseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmabseq
            #add-point:ON CHANGE rmabseq
            {<point name="input.g.page1.rmabseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab001
            #add-point:BEFORE FIELD rmab001
            {<point name="input.b.page1.rmab001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab001
            
            #add-point:AFTER FIELD rmab001
            {<point name="input.a.page1.rmab001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmab001
            #add-point:ON CHANGE rmab001
            {<point name="input.g.page1.rmab001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab002
            #add-point:BEFORE FIELD rmab002
            {<point name="input.b.page1.rmab002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab002
            
            #add-point:AFTER FIELD rmab002
            {<point name="input.a.page1.rmab002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmab002
            #add-point:ON CHANGE rmab002
            {<point name="input.g.page1.rmab002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab003
            
            #add-point:AFTER FIELD rmab003
            {<point name="input.a.page1.rmab003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab003
            #add-point:BEFORE FIELD rmab003
            {<point name="input.b.page1.rmab003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmab003
            #add-point:ON CHANGE rmab003
            {<point name="input.g.page1.rmab003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab004
            #add-point:BEFORE FIELD rmab004
            {<point name="input.b.page1.rmab004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab004
            
            #add-point:AFTER FIELD rmab004
            {<point name="input.a.page1.rmab004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmab004
            #add-point:ON CHANGE rmab004
            {<point name="input.g.page1.rmab004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab012
            #add-point:BEFORE FIELD rmab012
            {<point name="input.b.page1.rmab012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab012
            
            #add-point:AFTER FIELD rmab012
            {<point name="input.a.page1.rmab012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmab012
            #add-point:ON CHANGE rmab012
            {<point name="input.g.page1.rmab012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmab017
            #add-point:BEFORE FIELD rmab017
            {<point name="input.b.page1.rmab017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmab017
            
            #add-point:AFTER FIELD rmab017
            {<point name="input.a.page1.rmab017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmab017
            #add-point:ON CHANGE rmab017
            {<point name="input.g.page1.rmab017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmabsite
            #add-point:BEFORE FIELD rmabsite
            {<point name="input.b.page1.rmabsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmabsite
            
            #add-point:AFTER FIELD rmabsite
            {<point name="input.a.page1.rmabsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmabsite
            #add-point:ON CHANGE rmabsite
            {<point name="input.g.page1.rmabsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.rmabseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmabseq
            #add-point:ON ACTION controlp INFIELD rmabseq
            {<point name="input.c.page1.rmabseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rmab001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab001
            #add-point:ON ACTION controlp INFIELD rmab001
            {<point name="input.c.page1.rmab001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rmab002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab002
            #add-point:ON ACTION controlp INFIELD rmab002
            {<point name="input.c.page1.rmab002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rmab003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab003
            #add-point:ON ACTION controlp INFIELD rmab003
            {<point name="input.c.page1.rmab003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rmab004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab004
            #add-point:ON ACTION controlp INFIELD rmab004
            {<point name="input.c.page1.rmab004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rmab012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab012
            #add-point:ON ACTION controlp INFIELD rmab012
            {<point name="input.c.page1.rmab012" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rmab017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmab017
            #add-point:ON ACTION controlp INFIELD rmab017
            {<point name="input.c.page1.rmab017" />}
            #END add-point
 
         #Ctrlp:input.c.page1.rmabsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmabsite
            #add-point:ON ACTION controlp INFIELD rmabsite
            {<point name="input.c.page1.rmabsite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_rmab_d[l_ac].* = g_rmab_d_t.*
               CLOSE armt100_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_rmab_d[l_ac].rmabseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rmab_d[l_ac].* = g_rmab_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL armt100_rmab_t_mask_restore('restore_mask_o')
      
               UPDATE rmab_t SET (rmabdocno,rmabseq,rmab001,rmab002,rmab003,rmab004,rmab005,rmab006, 
                   rmab007,rmab008,rmab009,rmab010,rmab011,rmab012,rmab013,rmab014,rmab015,rmab016,rmab017, 
                   rmabsite) = (g_rmaa_m.rmaadocno,g_rmab_d[l_ac].rmabseq,g_rmab_d[l_ac].rmab001,g_rmab_d[l_ac].rmab002, 
                   g_rmab_d[l_ac].rmab003,g_rmab_d[l_ac].rmab004,g_rmab_d[l_ac].rmab005,g_rmab_d[l_ac].rmab006, 
                   g_rmab_d[l_ac].rmab007,g_rmab_d[l_ac].rmab008,g_rmab_d[l_ac].rmab009,g_rmab_d[l_ac].rmab010, 
                   g_rmab_d[l_ac].rmab011,g_rmab_d[l_ac].rmab012,g_rmab_d[l_ac].rmab013,g_rmab_d[l_ac].rmab014, 
                   g_rmab_d[l_ac].rmab015,g_rmab_d[l_ac].rmab016,g_rmab_d[l_ac].rmab017,g_rmab_d[l_ac].rmabsite) 

                WHERE rmabent = g_enterprise AND rmabdocno = g_rmaa_m.rmaadocno 
 
                  AND rmabseq = g_rmab_d_t.rmabseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rmab_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rmab_d[l_ac].* = g_rmab_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rmab_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_rmab_d[l_ac].* = g_rmab_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rmaa_m.rmaadocno
               LET gs_keys_bak[1] = g_rmaadocno_t
               LET gs_keys[2] = g_rmab_d[g_detail_idx].rmabseq
               LET gs_keys_bak[2] = g_rmab_d_t.rmabseq
               CALL armt100_update_b('rmab_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL armt100_rmab_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_rmab_d[g_detail_idx].rmabseq = g_rmab_d_t.rmabseq 
 
                  ) THEN
                  LET gs_keys[01] = g_rmaa_m.rmaadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_rmab_d_t.rmabseq
 
                  CALL armt100_key_update_b(gs_keys,'rmab_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rmaa_m),util.JSON.stringify(g_rmab_d_t)
               LET g_log2 = util.JSON.stringify(g_rmaa_m),util.JSON.stringify(g_rmab_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL armt100_unlock_b("rmab_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_rmab_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rmab_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_rmab2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION count
            LET g_action_choice="count"
            IF cl_auth_chk_act("count") THEN
               
               #add-point:ON ACTION count
               {<point name="input.detail_input.page2.count" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_rmab_d[g_detail_idx].rmabseq) THEN
               NEXT FIELD rmabseq
            END IF
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_rmab2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_rmab2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_rmab2_d[l_ac].* TO NULL 
            INITIALIZE g_rmab2_d_t.* TO NULL 
            INITIALIZE g_rmab2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_rmab2_d[l_ac].rmac001 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_rmab2_d_t.* = g_rmab2_d[l_ac].*     #新輸入資料
            LET g_rmab2_d_o.* = g_rmab2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL armt100_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL armt100_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_rmab2_d[li_reproduce_target].* = g_rmab2_d[li_reproduce].*
 
               LET g_rmab2_d[li_reproduce_target].rmacseq1 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 2
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN armt100_cl USING g_enterprise,g_rmaa_m.rmaadocno
            OPEN armt100_bcl USING g_enterprise,g_rmaa_m.rmaadocno,g_rmab_d[g_detail_idx].rmabseq
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN armt100_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE armt100_cl
               CLOSE armt100_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_rmab2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_rmab2_d[l_ac].rmacseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_rmab2_d_t.* = g_rmab2_d[l_ac].*  #BACKUP
               LET g_rmab2_d_o.* = g_rmab2_d[l_ac].*  #BACKUP
               CALL armt100_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL armt100_set_no_entry_b(l_cmd)
               IF NOT armt100_lock_b("rmac_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH armt100_bcl2 INTO g_rmab2_d[l_ac].rmacseq1,g_rmab2_d[l_ac].rmac001,g_rmab2_d[l_ac].rmac002, 
                      g_rmab2_d[l_ac].rmac003,g_rmab2_d[l_ac].rmac004,g_rmab2_d[l_ac].rmac005,g_rmab2_d[l_ac].rmac006, 
                      g_rmab2_d[l_ac].rmac007,g_rmab2_d[l_ac].rmacsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_rmab2_d_mask_o[l_ac].* =  g_rmab2_d[l_ac].*
                  CALL armt100_rmac_t_mask()
                  LET g_rmab2_d_mask_n[l_ac].* =  g_rmab2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL armt100_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rmaa_m.rmaadocno
               LET gs_keys[2] = g_rmab_d[g_detail_idx].rmabseq
               LET gs_keys[3] = g_rmab2_d_t.rmacseq1
 
               #刪除同層單身
               IF NOT armt100_delete_b('rmac_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE armt100_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE armt100_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_rmab_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_rmab2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM rmac_t 
             WHERE rmacent = g_enterprise AND rmacdocno = g_rmaa_m.rmaadocno AND rmacseq = g_rmab_d[g_detail_idx].rmabseq  
                 AND rmacseq1 = g_rmab2_d[g_detail_idx2].rmacseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rmaa_m.rmaadocno
               LET gs_keys[2] = g_rmab_d[g_detail_idx].rmabseq
               LET gs_keys[3] = g_rmab2_d[g_detail_idx2].rmacseq1
               CALL armt100_insert_b('rmac_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_rmab_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rmac_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL armt100_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_rmab2_d[l_ac].* = g_rmab2_d_t.*
               CLOSE armt100_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_rmab2_d[l_ac].* = g_rmab2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL armt100_rmac_t_mask_restore('restore_mask_o')
               
               UPDATE rmac_t SET (rmacdocno,rmacseq,rmacseq1,rmac001,rmac002,rmac003,rmac004,rmac005, 
                   rmac006,rmac007,rmacsite) = (g_rmaa_m.rmaadocno,g_rmab_d[g_detail_idx].rmabseq,g_rmab2_d[l_ac].rmacseq1, 
                   g_rmab2_d[l_ac].rmac001,g_rmab2_d[l_ac].rmac002,g_rmab2_d[l_ac].rmac003,g_rmab2_d[l_ac].rmac004, 
                   g_rmab2_d[l_ac].rmac005,g_rmab2_d[l_ac].rmac006,g_rmab2_d[l_ac].rmac007,g_rmab2_d[l_ac].rmacsite)  
                   #自訂欄位頁簽
                WHERE rmacent = g_enterprise AND rmacdocno = g_rmaadocno_t AND rmacseq = g_rmab_d[g_detail_idx].rmabseq  
                    AND rmacseq1 = g_rmab2_d_t.rmacseq1
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rmac_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rmab2_d[l_ac].* = g_rmab2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "rmac_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_rmab2_d[l_ac].* = g_rmab2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_rmaa_m.rmaadocno
               LET gs_keys_bak[1] = g_rmaadocno_t
               LET gs_keys[2] = g_rmab_d[g_detail_idx].rmabseq
               LET gs_keys_bak[2] = g_rmab_d[g_detail_idx].rmabseq
               LET gs_keys[3] = g_rmab2_d[g_detail_idx2].rmacseq1
               LET gs_keys_bak[3] = g_rmab2_d_t.rmacseq1
               CALL armt100_update_b('rmac_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL armt100_rmac_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_rmaa_m),util.JSON.stringify(g_rmab2_d_t)
               LET g_log2 = util.JSON.stringify(g_rmaa_m),util.JSON.stringify(g_rmab2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmacseq1
            #add-point:BEFORE FIELD rmacseq1
            {<point name="input.b.page2.rmacseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmacseq1
            
            #add-point:AFTER FIELD rmacseq1
            {<point name="input.a.page2.rmacseq1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmacseq1
            #add-point:ON CHANGE rmacseq1
            {<point name="input.g.page2.rmacseq1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac001
            #add-point:BEFORE FIELD rmac001
            {<point name="input.b.page2.rmac001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac001
            
            #add-point:AFTER FIELD rmac001
            {<point name="input.a.page2.rmac001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmac001
            #add-point:ON CHANGE rmac001
            {<point name="input.g.page2.rmac001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac002
            
            #add-point:AFTER FIELD rmac002
            {<point name="input.a.page2.rmac002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac002
            #add-point:BEFORE FIELD rmac002
            {<point name="input.b.page2.rmac002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmac002
            #add-point:ON CHANGE rmac002
            {<point name="input.g.page2.rmac002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac003
            
            #add-point:AFTER FIELD rmac003
            {<point name="input.a.page2.rmac003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac003
            #add-point:BEFORE FIELD rmac003
            {<point name="input.b.page2.rmac003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmac003
            #add-point:ON CHANGE rmac003
            {<point name="input.g.page2.rmac003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac004
            
            #add-point:AFTER FIELD rmac004
            {<point name="input.a.page2.rmac004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac004
            #add-point:BEFORE FIELD rmac004
            {<point name="input.b.page2.rmac004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmac004
            #add-point:ON CHANGE rmac004
            {<point name="input.g.page2.rmac004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac005
            #add-point:BEFORE FIELD rmac005
            {<point name="input.b.page2.rmac005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac005
            
            #add-point:AFTER FIELD rmac005
            {<point name="input.a.page2.rmac005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmac005
            #add-point:ON CHANGE rmac005
            {<point name="input.g.page2.rmac005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac006
            #add-point:BEFORE FIELD rmac006
            {<point name="input.b.page2.rmac006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac006
            
            #add-point:AFTER FIELD rmac006
            {<point name="input.a.page2.rmac006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmac006
            #add-point:ON CHANGE rmac006
            {<point name="input.g.page2.rmac006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmac007
            
            #add-point:AFTER FIELD rmac007
            {<point name="input.a.page2.rmac007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmac007
            #add-point:BEFORE FIELD rmac007
            {<point name="input.b.page2.rmac007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmac007
            #add-point:ON CHANGE rmac007
            {<point name="input.g.page2.rmac007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmacsite
            #add-point:BEFORE FIELD rmacsite
            {<point name="input.b.page2.rmacsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmacsite
            
            #add-point:AFTER FIELD rmacsite
            {<point name="input.a.page2.rmacsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmacsite
            #add-point:ON CHANGE rmacsite
            {<point name="input.g.page2.rmacsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.rmacseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmacseq1
            #add-point:ON ACTION controlp INFIELD rmacseq1
            {<point name="input.c.page2.rmacseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmac001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac001
            #add-point:ON ACTION controlp INFIELD rmac001
            {<point name="input.c.page2.rmac001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmac002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac002
            #add-point:ON ACTION controlp INFIELD rmac002
            {<point name="input.c.page2.rmac002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmac003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac003
            #add-point:ON ACTION controlp INFIELD rmac003
            {<point name="input.c.page2.rmac003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmac004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac004
            #add-point:ON ACTION controlp INFIELD rmac004
            {<point name="input.c.page2.rmac004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmac005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac005
            #add-point:ON ACTION controlp INFIELD rmac005
            {<point name="input.c.page2.rmac005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmac006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac006
            #add-point:ON ACTION controlp INFIELD rmac006
            {<point name="input.c.page2.rmac006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmac007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmac007
            #add-point:ON ACTION controlp INFIELD rmac007
            {<point name="input.c.page2.rmac007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.rmacsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmacsite
            #add-point:ON ACTION controlp INFIELD rmacsite
            {<point name="input.c.page2.rmacsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_rmab2_d[l_ac].* = g_rmab2_d_t.*
               END IF
               CLOSE armt100_bcl2
               CLOSE armt100_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL armt100_unlock_b("rmac_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2_after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_rmab2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_rmab2_d.getLength()+1
 
      END INPUT
 
 
 
]]>
  </section>
  <section id="armt100.input.head" ver="4" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001,g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008, 
          g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa007  

         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN armt100_cl USING g_enterprise,g_rmaa_m.rmaadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN armt100_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE armt100_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL armt100_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL armt100_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaadocno
            
            #add-point:AFTER FIELD rmaadocno
            {<point name="input.a.rmaadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaadocno
            #add-point:BEFORE FIELD rmaadocno
            {<point name="input.b.rmaadocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaadocno
            #add-point:ON CHANGE rmaadocno
            {<point name="input.g.rmaadocno" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa001
            
            #add-point:AFTER FIELD rmaa001
            {<point name="input.a.rmaa001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa001
            #add-point:BEFORE FIELD rmaa001
            {<point name="input.b.rmaa001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaa001
            #add-point:ON CHANGE rmaa001
            {<point name="input.g.rmaa001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaasite
            #add-point:BEFORE FIELD rmaasite
            {<point name="input.b.rmaasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaasite
            
            #add-point:AFTER FIELD rmaasite
            {<point name="input.a.rmaasite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaasite
            #add-point:ON CHANGE rmaasite
            {<point name="input.g.rmaasite" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaadocdt
            #add-point:BEFORE FIELD rmaadocdt
            {<point name="input.b.rmaadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaadocdt
            
            #add-point:AFTER FIELD rmaadocdt
            {<point name="input.a.rmaadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaadocdt
            #add-point:ON CHANGE rmaadocdt
            {<point name="input.g.rmaadocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa008
            #add-point:BEFORE FIELD rmaa008
            {<point name="input.b.rmaa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa008
            
            #add-point:AFTER FIELD rmaa008
            {<point name="input.a.rmaa008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaa008
            #add-point:ON CHANGE rmaa008
            {<point name="input.g.rmaa008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa002
            
            #add-point:AFTER FIELD rmaa002
            {<point name="input.a.rmaa002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa002
            #add-point:BEFORE FIELD rmaa002
            {<point name="input.b.rmaa002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaa002
            #add-point:ON CHANGE rmaa002
            {<point name="input.g.rmaa002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa003
            
            #add-point:AFTER FIELD rmaa003
            {<point name="input.a.rmaa003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa003
            #add-point:BEFORE FIELD rmaa003
            {<point name="input.b.rmaa003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaa003
            #add-point:ON CHANGE rmaa003
            {<point name="input.g.rmaa003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaastus
            #add-point:BEFORE FIELD rmaastus
            {<point name="input.b.rmaastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaastus
            
            #add-point:AFTER FIELD rmaastus
            {<point name="input.a.rmaastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaastus
            #add-point:ON CHANGE rmaastus
            {<point name="input.g.rmaastus" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa004
            #add-point:BEFORE FIELD rmaa004
            {<point name="input.b.rmaa004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa004
            
            #add-point:AFTER FIELD rmaa004
            {<point name="input.a.rmaa004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaa004
            #add-point:ON CHANGE rmaa004
            {<point name="input.g.rmaa004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa005
            
            #add-point:AFTER FIELD rmaa005
            {<point name="input.a.rmaa005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa005
            #add-point:BEFORE FIELD rmaa005
            {<point name="input.b.rmaa005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaa005
            #add-point:ON CHANGE rmaa005
            {<point name="input.g.rmaa005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD rmaa007
            #add-point:BEFORE FIELD rmaa007
            {<point name="input.b.rmaa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD rmaa007
            
            #add-point:AFTER FIELD rmaa007
            {<point name="input.a.rmaa007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE rmaa007
            #add-point:ON CHANGE rmaa007
            {<point name="input.g.rmaa007" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.rmaadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaadocno
            #add-point:ON ACTION controlp INFIELD rmaadocno
            {<point name="input.c.rmaadocno" />}
            #END add-point
 
         #Ctrlp:input.c.rmaa001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa001
            #add-point:ON ACTION controlp INFIELD rmaa001
            {<point name="input.c.rmaa001" />}
            #END add-point
 
         #Ctrlp:input.c.rmaasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaasite
            #add-point:ON ACTION controlp INFIELD rmaasite
            {<point name="input.c.rmaasite" />}
            #END add-point
 
         #Ctrlp:input.c.rmaadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaadocdt
            #add-point:ON ACTION controlp INFIELD rmaadocdt
            {<point name="input.c.rmaadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.rmaa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa008
            #add-point:ON ACTION controlp INFIELD rmaa008
            {<point name="input.c.rmaa008" />}
            #END add-point
 
         #Ctrlp:input.c.rmaa002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa002
            #add-point:ON ACTION controlp INFIELD rmaa002
            {<point name="input.c.rmaa002" />}
            #END add-point
 
         #Ctrlp:input.c.rmaa003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa003
            #add-point:ON ACTION controlp INFIELD rmaa003
            {<point name="input.c.rmaa003" />}
            #END add-point
 
         #Ctrlp:input.c.rmaastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaastus
            #add-point:ON ACTION controlp INFIELD rmaastus
            {<point name="input.c.rmaastus" />}
            #END add-point
 
         #Ctrlp:input.c.rmaa004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa004
            #add-point:ON ACTION controlp INFIELD rmaa004
            {<point name="input.c.rmaa004" />}
            #END add-point
 
         #Ctrlp:input.c.rmaa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa005
            #add-point:ON ACTION controlp INFIELD rmaa005
            {<point name="input.c.rmaa005" />}
            #END add-point
 
         #Ctrlp:input.c.rmaa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD rmaa007
            #add-point:ON ACTION controlp INFIELD rmaa007
            {<point name="input.c.rmaa007" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_rmaa_m.rmaadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO rmaa_t (rmaaent,rmaadocno,rmaa001,rmaasite,rmaadocdt,rmaa008,rmaa002,rmaa003, 
                   rmaastus,rmaa004,rmaa005,rmaa006,rmaa007,rmaaownid,rmaaowndp,rmaacrtid,rmaacrtdp, 
                   rmaacrtdt,rmaamodid,rmaamoddt,rmaacnfid,rmaacnfdt,rmaapstid,rmaapstdt)
               VALUES (g_enterprise,g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001,g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt, 
                   g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004, 
                   g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
                   g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
                   g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_rmaa_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL armt100_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL armt100_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL armt100_rmaa_t_mask_restore('restore_mask_o')
               
               UPDATE rmaa_t SET (rmaadocno,rmaa001,rmaasite,rmaadocdt,rmaa008,rmaa002,rmaa003,rmaastus, 
                   rmaa004,rmaa005,rmaa006,rmaa007,rmaaownid,rmaaowndp,rmaacrtid,rmaacrtdp,rmaacrtdt, 
                   rmaamodid,rmaamoddt,rmaacnfid,rmaacnfdt,rmaapstid,rmaapstdt) = (g_rmaa_m.rmaadocno, 
                   g_rmaa_m.rmaa001,g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002, 
                   g_rmaa_m.rmaa003,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006, 
                   g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp,g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp, 
                   g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt,g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt, 
                   g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt)
                WHERE rmaaent = g_enterprise AND rmaadocno = g_rmaadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "rmaa_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL armt100_rmaa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_rmaa_m_t)
               LET g_log2 = util.JSON.stringify(g_rmaa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="armt100.input.other" ver="3" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx2)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD rmaadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD rmabseq
               WHEN "s_detail2"
                  NEXT FIELD rmacseq1
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="armt100.insert" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION armt100_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_rmab_d.clear()   
   CALL g_rmab2_d.clear()  
 
 
   INITIALIZE g_rmaa_m.* LIKE rmaa_t.*             #DEFAULT 設定
   
   LET g_rmaadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rmaa_m.rmaaownid = g_user
      LET g_rmaa_m.rmaaowndp = g_dept
      LET g_rmaa_m.rmaacrtid = g_user
      LET g_rmaa_m.rmaacrtdp = g_dept 
      LET g_rmaa_m.rmaacrtdt = cl_get_current()
      LET g_rmaa_m.rmaamodid = g_user
      LET g_rmaa_m.rmaamoddt = cl_get_current()
      LET g_rmaa_m.rmaastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_rmaa_m_t.* = g_rmaa_m.*
      LET g_rmaa_m_o.* = g_rmaa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rmaa_m.rmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL armt100_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_rmaa_m.* TO NULL
         INITIALIZE g_rmab_d TO NULL
         INITIALIZE g_rmab2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL armt100_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_rmab_d.clear()
      #CALL g_rmab2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL armt100_set_act_visible()   
   CALL armt100_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rmaaent = '" ||g_enterprise|| "' AND",
                      " rmaadocno = '", g_rmaa_m.rmaadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL armt100_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE armt100_cl
   
   CALL armt100_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE armt100_master_referesh USING g_rmaa_m.rmaadocno INTO g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus, 
       g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
       g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaa002_desc,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp_desc,g_rmaa_m.rmaacrtid_desc, 
       g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaacnfid_desc,g_rmaa_m.rmaapstid_desc 

   
   #遮罩相關處理
   LET g_rmaa_m_mask_o.* =  g_rmaa_m.*
   CALL armt100_rmaa_t_mask()
   LET g_rmaa_m_mask_n.* =  g_rmaa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rmaa_m.rmaadocno,g_rmaa_m.rmaadocno_desc,g_rmaa_m.rmaa001,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa002_desc, 
       g_rmaa_m.rmaa003,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006, 
       g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp,g_rmaa_m.rmaaowndp_desc, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtid_desc,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaacrtdt, 
       g_rmaa_m.rmaamodid,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaamoddt,g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfid_desc, 
       g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstid_desc,g_rmaa_m.rmaapstdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL armt100_msgcentre_notify('')
   
END FUNCTION
]]>
  </section>
  <section id="armt100.insert_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION armt100_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO rmab_t
                  (rmabent,
                   rmabdocno,
                   rmabseq
                   ,rmab001,rmab002,rmab003,rmab004,rmab005,rmab006,rmab007,rmab008,rmab009,rmab010,rmab011,rmab012,rmab013,rmab014,rmab015,rmab016,rmab017,rmabsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_rmab_d[g_detail_idx].rmab001,g_rmab_d[g_detail_idx].rmab002,g_rmab_d[g_detail_idx].rmab003, 
                       g_rmab_d[g_detail_idx].rmab004,g_rmab_d[g_detail_idx].rmab005,g_rmab_d[g_detail_idx].rmab006, 
                       g_rmab_d[g_detail_idx].rmab007,g_rmab_d[g_detail_idx].rmab008,g_rmab_d[g_detail_idx].rmab009, 
                       g_rmab_d[g_detail_idx].rmab010,g_rmab_d[g_detail_idx].rmab011,g_rmab_d[g_detail_idx].rmab012, 
                       g_rmab_d[g_detail_idx].rmab013,g_rmab_d[g_detail_idx].rmab014,g_rmab_d[g_detail_idx].rmab015, 
                       g_rmab_d[g_detail_idx].rmab016,g_rmab_d[g_detail_idx].rmab017,g_rmab_d[g_detail_idx].rmabsite) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rmab_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_rmab_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO rmac_t
                  (rmacent,
                   rmacdocno,rmacseq,
                   rmacseq1
                   ,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007,rmacsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_rmab2_d[g_detail_idx2].rmac001,g_rmab2_d[g_detail_idx2].rmac002,g_rmab2_d[g_detail_idx2].rmac003, 
                       g_rmab2_d[g_detail_idx2].rmac004,g_rmab2_d[g_detail_idx2].rmac005,g_rmab2_d[g_detail_idx2].rmac006, 
                       g_rmab2_d[g_detail_idx2].rmac007,g_rmab2_d[g_detail_idx2].rmacsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "rmac_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_rmab2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="armt100.key_delete_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION armt100_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'rmab_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete2" mark="Y"/>}
      #end add-point
      
      DELETE FROM rmac_t 
            WHERE rmacent = g_enterprise AND
                  rmacdocno = ps_keys_bak[1] AND rmacseq = ps_keys_bak[2]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rmac_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete2"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="armt100.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION armt100_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'rmab_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update2" mark="Y"/>}
      #end add-point
      
      UPDATE rmac_t 
         SET (rmacdocno,rmacseq) 
              = 
             (g_rmaa_m.rmaadocno,g_rmab_d[g_detail_idx].rmabseq) 
         WHERE rmacent = g_enterprise AND
               rmacdocno = ps_keys_bak[1] AND rmacseq = ps_keys_bak[2]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rmac_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update2"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="armt100.lock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION armt100_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL armt100_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "rmab_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN armt100_bcl USING g_enterprise,
                                       g_rmaa_m.rmaadocno,g_rmab_d[g_detail_idx].rmabseq     
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "armt100_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "rmac_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN armt100_bcl2 USING g_enterprise,
                                             g_rmaa_m.rmaadocno,g_rmab_d[g_detail_idx].rmabseq,
                                             g_rmab2_d[g_detail_idx2].rmacseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "armt100_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="armt100.main" ver="3" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("arm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT rmaadocno,'',rmaa001,'',rmaasite,rmaadocdt,rmaa008,rmaa002,'',rmaa003, 
       '',rmaastus,rmaa004,rmaa005,rmaa006,rmaa007,rmaaownid,'',rmaaowndp,'',rmaacrtid,'',rmaacrtdp, 
       '',rmaacrtdt,rmaamodid,'',rmaamoddt,rmaacnfid,'',rmaacnfdt,rmaapstid,'',rmaapstdt", 
                      " FROM rmaa_t",
                      " WHERE rmaaent= ? AND rmaadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE armt100_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.rmaadocno,t0.rmaa001,t0.rmaasite,t0.rmaadocdt,t0.rmaa008,t0.rmaa002, 
       t0.rmaa003,t0.rmaastus,t0.rmaa004,t0.rmaa005,t0.rmaa006,t0.rmaa007,t0.rmaaownid,t0.rmaaowndp, 
       t0.rmaacrtid,t0.rmaacrtdp,t0.rmaacrtdt,t0.rmaamodid,t0.rmaamoddt,t0.rmaacnfid,t0.rmaacnfdt,t0.rmaapstid, 
       t0.rmaapstdt,t1.pmaal004 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 ,t7.ooefl003 , 
       t8.ooag011 ,t9.ooag011 ,t10.ooag011",
               " FROM rmaa_t t0",
                              " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=t0.rmaa001 AND t1.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.rmaa002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.rmaa003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.rmaaownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.rmaaowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.rmaacrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=t0.rmaacrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.rmaamodid  ",
               " LEFT JOIN ooag_t t9 ON t9.ooagent='"||g_enterprise||"' AND t9.ooag001=t0.rmaacnfid  ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.rmaapstid  ",
 
               " WHERE t0.rmaaent = '" ||g_enterprise|| "' AND t0.rmaadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE armt100_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_armt100 WITH FORM cl_ap_formpath("arm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL armt100_init()   
 
      #進入選單 Menu (="N")
      CALL armt100_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_armt100
      
   END IF 
   
   CLOSE armt100_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="armt100.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/arm/armt100_mask.4gl"
]]>
  </section>
  <section id="armt100.modify" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION armt100_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
   DEFINE l_wc2_table2   STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_rmaa_m_t.* = g_rmaa_m.*
   LET g_rmaa_m_o.* = g_rmaa_m.*
   
   IF g_rmaa_m.rmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
   CALL s_transaction_begin()
   
   OPEN armt100_cl USING g_enterprise,g_rmaa_m.rmaadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN armt100_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE armt100_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE armt100_master_referesh USING g_rmaa_m.rmaadocno INTO g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus, 
       g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
       g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaa002_desc,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp_desc,g_rmaa_m.rmaacrtid_desc, 
       g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaacnfid_desc,g_rmaa_m.rmaapstid_desc 

   
   #檢查是否允許此動作
   IF NOT armt100_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_rmaa_m_mask_o.* =  g_rmaa_m.*
   CALL armt100_rmaa_t_mask()
   LET g_rmaa_m_mask_n.* =  g_rmaa_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
   
   CALL armt100_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
    
   WHILE TRUE
      LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_rmaa_m.rmaamodid = g_user 
LET g_rmaa_m.rmaamoddt = cl_get_current()
LET g_rmaa_m.rmaamodid_desc = cl_get_username(g_rmaa_m.rmaamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL armt100_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE rmaa_t SET (rmaamodid,rmaamoddt) = (g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt)
          WHERE rmaaent = g_enterprise AND rmaadocno = g_rmaadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_rmaa_m.* = g_rmaa_m_t.*
         CALL armt100_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_rmaa_m.rmaadocno != g_rmaadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE rmab_t SET rmabdocno = g_rmaa_m.rmaadocno
 
          WHERE rmabent = g_enterprise AND rmabdocno = g_rmaadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rmab_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rmab_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE rmac_t
            SET rmacdocno = g_rmaa_m.rmaadocno
 
          WHERE rmacent = g_enterprise AND
                rmacdocno = g_rmaadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rmac_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "rmac_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL armt100_set_act_visible()   
   CALL armt100_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " rmaaent = '" ||g_enterprise|| "' AND",
                      " rmaadocno = '", g_rmaa_m.rmaadocno, "' "
 
   #填到對應位置
   CALL armt100_browser_fill("")
 
   CLOSE armt100_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL armt100_msgcentre_notify('')
 
END FUNCTION   
]]>
  </section>
  <section id="armt100.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:2)
PRIVATE FUNCTION armt100_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr5
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   IF g_action_choice = "statechange" THEN
      LET g_msgparam.state = g_action_choice,":",lc_state
   ELSE
      LET g_msgparam.state = g_action_choice
   END IF
 
   #PK資料填寫
   CALL armt100_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_rmaa_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="armt100.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="armt100.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="armt100.query" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION armt100_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_rmab_d.clear()
   CALL g_rmab2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL armt100_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL armt100_browser_fill("")
      CALL armt100_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL armt100_filter_show('rmaadocno')
   CALL armt100_filter_show('rmaadocdt')
   CALL armt100_filter_show('rmaa002')
   CALL armt100_filter_show('rmaa003')
   CALL armt100_filter_show('rmaa001')
   CALL armt100_filter_show('rmaa004')
   CALL armt100_filter_show('rmaa005')
   CALL armt100_filter_show('rmaa006')
   CALL armt100_filter_show('rmaasite')
   CALL armt100_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL armt100_fetch("F") 
      #顯示單身筆數
      CALL armt100_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="armt100.reproduce" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION armt100_reproduce()
   DEFINE l_newno     LIKE rmaa_t.rmaadocno 
   DEFINE l_oldno     LIKE rmaa_t.rmaadocno 
 
   DEFINE l_master    RECORD LIKE rmaa_t.*
   DEFINE l_detail    RECORD LIKE rmab_t.*
 
   DEFINE l_detail2    RECORD LIKE rmac_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_rmaa_m.rmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
    
   LET g_rmaa_m.rmaadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_rmaa_m.rmaaownid = g_user
      LET g_rmaa_m.rmaaowndp = g_dept
      LET g_rmaa_m.rmaacrtid = g_user
      LET g_rmaa_m.rmaacrtdp = g_dept 
      LET g_rmaa_m.rmaacrtdt = cl_get_current()
      LET g_rmaa_m.rmaamodid = g_user
      LET g_rmaa_m.rmaamoddt = cl_get_current()
      LET g_rmaa_m.rmaastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rmaa_m.rmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_rmaa_m.rmaadocno_desc = ''
   DISPLAY BY NAME g_rmaa_m.rmaadocno_desc
 
   
   CALL armt100_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_rmaa_m.* TO NULL
      INITIALIZE g_rmab_d TO NULL
      INITIALIZE g_rmab2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL armt100_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL armt100_set_act_visible()   
   CALL armt100_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_rmaadocno_t = g_rmaa_m.rmaadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " rmaaent = '" ||g_enterprise|| "' AND",
                      " rmaadocno = '", g_rmaa_m.rmaadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL armt100_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL armt100_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL armt100_msgcentre_notify('')
 
END FUNCTION
]]>
  </section>
  <section id="armt100.set_act_no_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION armt100_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="armt100.set_act_no_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION armt100_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="armt100.set_act_visible" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION armt100_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="armt100.set_act_visible_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION armt100_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="armt100.set_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION armt100_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("rmaadocno,rmaadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("rmaadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="armt100.set_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION armt100_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="armt100.set_no_entry" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION armt100_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("rmaadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("rmaadocno,rmaadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="armt100.set_no_entry_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION armt100_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="armt100.set_pk_array" ver="1" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION armt100_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_rmaa_m.rmaadocno
   LET g_pk_array[1].column = 'rmaadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="armt100.show" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION armt100_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL armt100_b_fill() #單身填充
      CALL armt100_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL armt100_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_rmaa_m_mask_o.* =  g_rmaa_m.*
   CALL armt100_rmaa_t_mask()
   LET g_rmaa_m_mask_n.* =  g_rmaa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_rmaa_m.rmaadocno,g_rmaa_m.rmaadocno_desc,g_rmaa_m.rmaa001,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa002_desc, 
       g_rmaa_m.rmaa003,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006, 
       g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp,g_rmaa_m.rmaaowndp_desc, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtid_desc,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaacrtdt, 
       g_rmaa_m.rmaamodid,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaamoddt,g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfid_desc, 
       g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstid_desc,g_rmaa_m.rmaapstdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_rmaa_m.rmaastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_rmab_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_rmab2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL armt100_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="armt100.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="armt100.state_change" ver="6" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:11)
#+ 確認碼變更 
PRIVATE FUNCTION armt100_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_rmaa_m.rmaadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN armt100_cl USING g_enterprise,g_rmaa_m.rmaadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN armt100_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE armt100_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE armt100_master_referesh USING g_rmaa_m.rmaadocno INTO g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus, 
       g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
       g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaa002_desc,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp_desc,g_rmaa_m.rmaacrtid_desc, 
       g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaacnfid_desc,g_rmaa_m.rmaapstid_desc 

 
   #檢查是否允許此動作
   IF NOT armt100_action_chk() THEN
      CLOSE armt100_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_rmaa_m.rmaadocno,g_rmaa_m.rmaadocno_desc,g_rmaa_m.rmaa001,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa002_desc, 
       g_rmaa_m.rmaa003,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006, 
       g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp,g_rmaa_m.rmaaowndp_desc, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtid_desc,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaacrtdt, 
       g_rmaa_m.rmaamodid,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaamoddt,g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfid_desc, 
       g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstid_desc,g_rmaa_m.rmaapstdt
 
   CASE g_rmaa_m.rmaastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "S"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
      WHEN "Z"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_rmaa_m.rmaastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "S"
               HIDE OPTION "posted"
            WHEN "Z"
               HIDE OPTION "unposted"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION posted
         IF cl_auth_chk_act("posted") THEN
            LET lc_state = "S"
            #add-point:action控制
            {<point name="statechange.posted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION unposted
         IF cl_auth_chk_act("unposted") THEN
            LET lc_state = "Z"
            #add-point:action控制
            {<point name="statechange.unposted"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "S"
      AND lc_state <> "Z"
      AND lc_state <> "X"
      ) OR 
      g_rmaa_m.rmaastus = lc_state OR cl_null(lc_state) THEN
      CLOSE armt100_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_rmaa_m.rmaamodid = g_user
   LET g_rmaa_m.rmaamoddt = cl_get_current()
   LET g_rmaa_m.rmaastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE rmaa_t 
      SET (rmaastus,rmaamodid,rmaamoddt) 
        = (g_rmaa_m.rmaastus,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt)     
    WHERE rmaaent = g_enterprise AND rmaadocno = g_rmaa_m.rmaadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "S"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/posted.png")
         WHEN "Z"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unposted.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE armt100_master_referesh USING g_rmaa_m.rmaadocno INTO g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001, 
          g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus, 
          g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
          g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
          g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt,g_rmaa_m.rmaa001_desc, 
          g_rmaa_m.rmaa002_desc,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp_desc, 
          g_rmaa_m.rmaacrtid_desc,g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaacnfid_desc, 
          g_rmaa_m.rmaapstid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_rmaa_m.rmaadocno,g_rmaa_m.rmaadocno_desc,g_rmaa_m.rmaa001,g_rmaa_m.rmaa001_desc, 
          g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa002_desc, 
          g_rmaa_m.rmaa003,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaastus,g_rmaa_m.rmaa004,g_rmaa_m.rmaa005, 
          g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp, 
          g_rmaa_m.rmaaowndp_desc,g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtid_desc,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdp_desc, 
          g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaamoddt,g_rmaa_m.rmaacnfid, 
          g_rmaa_m.rmaacnfid_desc,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstid_desc,g_rmaa_m.rmaapstdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE armt100_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL armt100_msgcentre_notify(lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="armt100.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION armt100_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="armt100.ui_browser_refresh" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION armt100_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_rmaadocno = g_rmaa_m.rmaadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="armt100.ui_detailshow" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION armt100_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="armt100.ui_dialog" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION armt100_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL armt100_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_rmaa_m.* TO NULL
         CALL g_rmab_d.clear()
         CALL g_rmab2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL armt100_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL armt100_fetch('') # reload data
               LET l_ac = 1
               CALL armt100_ui_detailshow() #Setting the current row 
         
               CALL armt100_idx_chk()
               #NEXT FIELD rmabseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_rmab_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL armt100_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               CALL armt100_b_fill2('2')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL armt100_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #第二階單身段落
         DISPLAY ARRAY g_rmab2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL armt100_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL armt100_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL armt100_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL armt100_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL armt100_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL armt100_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL armt100_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL armt100_set_act_visible()   
            CALL armt100_set_act_no_visible()
            IF NOT (g_rmaa_m.rmaadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " rmaaent = '" ||g_enterprise|| "' AND",
                                  " rmaadocno = '", g_rmaa_m.rmaadocno, "' "
 
               #填到對應位置
               CALL armt100_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rmaa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rmab_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL armt100_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "rmaa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "rmab_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL armt100_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL armt100_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL armt100_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL armt100_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL armt100_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL armt100_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL armt100_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL armt100_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL armt100_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL armt100_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL armt100_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL armt100_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL armt100_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_rmab_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_rmab2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD rmabseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL armt100_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL armt100_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL armt100_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL armt100_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/arm/armt100_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL armt100_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION count
            LET g_action_choice="count"
            IF cl_auth_chk_act("count") THEN
               
               #add-point:ON ACTION count
               {<point name="menu.count" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL armt100_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_rmaa002
            LET g_action_choice="prog_rmaa002"
            IF cl_auth_chk_act("prog_rmaa002") THEN
               
               #add-point:ON ACTION prog_rmaa002
               {<point name="menu.prog_rmaa002" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_rmaa005
            LET g_action_choice="prog_rmaa005"
            IF cl_auth_chk_act("prog_rmaa005") THEN
               
               #add-point:ON ACTION prog_rmaa005
               {<point name="menu.prog_rmaa005" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION prog_rmaa006
            LET g_action_choice="prog_rmaa006"
            IF cl_auth_chk_act("prog_rmaa006") THEN
               
               #add-point:ON ACTION prog_rmaa006
               {<point name="menu.prog_rmaa006" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL armt100_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL armt100_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL armt100_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_rmaa_m.rmaadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="armt100.ui_headershow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION armt100_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_rmaa_m.rmaadocno = g_browser[g_current_idx].b_rmaadocno   
 
   EXECUTE armt100_master_referesh USING g_rmaa_m.rmaadocno INTO g_rmaa_m.rmaadocno,g_rmaa_m.rmaa001, 
       g_rmaa_m.rmaasite,g_rmaa_m.rmaadocdt,g_rmaa_m.rmaa008,g_rmaa_m.rmaa002,g_rmaa_m.rmaa003,g_rmaa_m.rmaastus, 
       g_rmaa_m.rmaa004,g_rmaa_m.rmaa005,g_rmaa_m.rmaa006,g_rmaa_m.rmaa007,g_rmaa_m.rmaaownid,g_rmaa_m.rmaaowndp, 
       g_rmaa_m.rmaacrtid,g_rmaa_m.rmaacrtdp,g_rmaa_m.rmaacrtdt,g_rmaa_m.rmaamodid,g_rmaa_m.rmaamoddt, 
       g_rmaa_m.rmaacnfid,g_rmaa_m.rmaacnfdt,g_rmaa_m.rmaapstid,g_rmaa_m.rmaapstdt,g_rmaa_m.rmaa001_desc, 
       g_rmaa_m.rmaa002_desc,g_rmaa_m.rmaa003_desc,g_rmaa_m.rmaaownid_desc,g_rmaa_m.rmaaowndp_desc,g_rmaa_m.rmaacrtid_desc, 
       g_rmaa_m.rmaacrtdp_desc,g_rmaa_m.rmaamodid_desc,g_rmaa_m.rmaacnfid_desc,g_rmaa_m.rmaapstid_desc 

   CALL armt100_rmaa_t_mask()
   CALL armt100_show()
      
END FUNCTION
]]>
  </section>
  <section id="armt100.unlock_b" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION armt100_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE armt100_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE armt100_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="armt100.update_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION armt100_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rmab_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL armt100_rmab_t_mask_restore('restore_mask_o')
               
      UPDATE rmab_t 
         SET (rmabdocno,
              rmabseq
              ,rmab001,rmab002,rmab003,rmab004,rmab005,rmab006,rmab007,rmab008,rmab009,rmab010,rmab011,rmab012,rmab013,rmab014,rmab015,rmab016,rmab017,rmabsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_rmab_d[g_detail_idx].rmab001,g_rmab_d[g_detail_idx].rmab002,g_rmab_d[g_detail_idx].rmab003, 
                  g_rmab_d[g_detail_idx].rmab004,g_rmab_d[g_detail_idx].rmab005,g_rmab_d[g_detail_idx].rmab006, 
                  g_rmab_d[g_detail_idx].rmab007,g_rmab_d[g_detail_idx].rmab008,g_rmab_d[g_detail_idx].rmab009, 
                  g_rmab_d[g_detail_idx].rmab010,g_rmab_d[g_detail_idx].rmab011,g_rmab_d[g_detail_idx].rmab012, 
                  g_rmab_d[g_detail_idx].rmab013,g_rmab_d[g_detail_idx].rmab014,g_rmab_d[g_detail_idx].rmab015, 
                  g_rmab_d[g_detail_idx].rmab016,g_rmab_d[g_detail_idx].rmab017,g_rmab_d[g_detail_idx].rmabsite)  

         WHERE rmabent = g_enterprise AND rmabdocno = ps_keys_bak[1] AND rmabseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rmab_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rmab_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL armt100_rmab_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "rmac_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL armt100_rmac_t_mask_restore('restore_mask_o')
               
      UPDATE rmac_t 
         SET (rmacdocno,rmacseq,
              rmacseq1
              ,rmac001,rmac002,rmac003,rmac004,rmac005,rmac006,rmac007,rmacsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_rmab2_d[g_detail_idx2].rmac001,g_rmab2_d[g_detail_idx2].rmac002,g_rmab2_d[g_detail_idx2].rmac003, 
                  g_rmab2_d[g_detail_idx2].rmac004,g_rmab2_d[g_detail_idx2].rmac005,g_rmab2_d[g_detail_idx2].rmac006, 
                  g_rmab2_d[g_detail_idx2].rmac007,g_rmab2_d[g_detail_idx2].rmacsite) 
         WHERE rmacent = g_enterprise AND rmacdocno = ps_keys_bak[1] AND rmacseq = ps_keys_bak[2] AND rmacseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rmac_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "rmac_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL armt100_rmac_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
