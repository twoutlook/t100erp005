<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="armr001_x01" std_prog="armr001_x01" erpver="1.0" module="ARM" ver="1" env="s" zone="t10prd" booking="N" type="X" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="X" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="ins_data.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE l_success              LIKE type_t.num5]]>
  </point>
  <point name="ins_data.foreach" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       IF NOT cl_null(sr.rmab010) AND NOT cl_null(sr.rmab009) THEN
          CALL s_feature_description(sr.rmab009,sr.rmab010) 
               RETURNING l_success,sr.l_rmab010_desc 
       END IF
       IF sr.l_rmaa001_desc = '.' THEN
          LET sr.l_rmaa001_desc = NULL
       END IF
       IF sr.l_rmaa002_desc = '.' THEN
          LET sr.l_rmaa002_desc = NULL
       END IF
       IF sr.l_rmaa003_desc = '.' THEN
          LET sr.l_rmaa003_desc = NULL
       END IF]]>
  </point>
  <point name="sel_prep.g_from" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_from = " FROM rmaa_t LEFT OUTER JOIN rmab_t ON rmabdocno = rmaadocno AND rmabent = rmaaent AND rmabsite = rmaasite ",
                "             LEFT OUTER JOIN pmaal_t ON rmaa001 = pmaal001 AND rmaaent = pmaalent AND pmaal002 = '",g_dlang,"' ",
                "             LEFT OUTER JOIN ooag_t ON rmaa002 = ooag001 AND rmaaent = ooagent ",
                "             LEFT OUTER JOIN ooefl_t ON rmaa003 = ooefl001 AND rmaaent = ooeflent AND ooefl002 = '",g_dlang,"' ",
                "             LEFT OUTER JOIN imaal_t ON imaal001 = rmab009 AND imaalent = rmabent AND imaal002 = '",g_dlang,"' "]]>
  </point>
  <point name="sel_prep.g_select" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_select = " SELECT rmaadocno,rmaadocdt,rmaa001,trim(rmaa001)||'.'||trim(pmaal003),rmaa002,trim(rmaa002)||'.'||trim(ooag011),",
                  " rmaa003,trim(rmaa003)||'.'||trim(ooefl003),rmaa007,rmabseq, ",
                  " rmab003,rmab004,rmab005,rmab006,rmab009,imaal003,imaal004,rmab010,NULL,rmab011,rmab012,rmab013,rmab014, ",
                  " rmab015,rmab016,rmab017 "]]>
  </point>
  <section id="armr001_x01.create_tmptable" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION armr001_x01_create_tmptable()
 
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.before
   {<point name="create_tmp.before"/>}
   #end add-point:create_tmp.before
 
   #主報表TEMP TABLE的欄位SQL   
   LET g_sql = "rmaadocno.rmaa_t.rmaadocno,rmaadocdt.rmaa_t.rmaadocdt,l_rmaa001_desc.pmaal_t.pmaal004,l_rmaa002_desc.ooag_t.ooag011,l_rmaa003_desc.ooefl_t.ooefl003,rmaa007.rmaa_t.rmaa007,rmabseq.rmab_t.rmabseq,rmab003.rmab_t.rmab003,rmab004.rmab_t.rmab004,rmab005.rmab_t.rmab005,rmab006.rmab_t.rmab006,rmab009.rmab_t.rmab009,l_imaal003.imaal_t.imaal003,l_imaal004.imaal_t.imaal004,l_rmab010_desc.oocql_t.oocql004,rmab011.rmab_t.rmab011,rmab012.rmab_t.rmab012,rmab013.rmab_t.rmab013,rmab014.rmab_t.rmab014,rmab015.rmab_t.rmab015,rmab016.rmab_t.rmab016,rmab017.rmab_t.rmab017" 
   
   #建立TEMP TABLE,主報表序號1 
   IF NOT cl_xg_create_tmptable(g_sql,1) THEN
      LET g_rep_success = 'N'            
   END IF
   #可切換資料庫，避免大量資料佔資源及空間
   #add-point:create_tmp.after
   {<point name="create_tmp.after"/>}
   #end add-point:create_tmp.after
END FUNCTION
]]>
  </section>
  <section id="armr001_x01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000004
#+ 
#+ Filename...: armr001_x01
#+ Description: RMA單狀況表
#+ Creator....: 05423(2015-06-05 17:03:32)
#+ Modifier...: 05423(2015-06-05 17:21:49) -SD/PR-
]]>
  </section>
  <section id="armr001_x01.global" ver="1" status="" src="s" readonly="">
    <![CDATA[#報表 x01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
 
DEFINE g_str           STRING,                      #列印條件回傳值              
       g_sql           STRING  
 
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="armr001_x01.ins_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION armr001_x01_ins_data()
DEFINE sr RECORD 
   rmaadocno LIKE rmaa_t.rmaadocno, 
   rmaadocdt LIKE rmaa_t.rmaadocdt, 
   rmaa001 LIKE rmaa_t.rmaa001, 
   l_rmaa001_desc LIKE pmaal_t.pmaal004, 
   rmaa002 LIKE rmaa_t.rmaa002, 
   l_rmaa002_desc LIKE ooag_t.ooag011, 
   rmaa003 LIKE rmaa_t.rmaa003, 
   l_rmaa003_desc LIKE ooefl_t.ooefl003, 
   rmaa007 LIKE rmaa_t.rmaa007, 
   rmabseq LIKE rmab_t.rmabseq, 
   rmab003 LIKE rmab_t.rmab003, 
   rmab004 LIKE rmab_t.rmab004, 
   rmab005 LIKE rmab_t.rmab005, 
   rmab006 LIKE rmab_t.rmab006, 
   rmab009 LIKE rmab_t.rmab009, 
   l_imaal003 LIKE imaal_t.imaal003, 
   l_imaal004 LIKE imaal_t.imaal004, 
   rmab010 LIKE rmab_t.rmab010, 
   l_rmab010_desc LIKE oocql_t.oocql004, 
   rmab011 LIKE rmab_t.rmab011, 
   rmab012 LIKE rmab_t.rmab012, 
   rmab013 LIKE rmab_t.rmab013, 
   rmab014 LIKE rmab_t.rmab014, 
   rmab015 LIKE rmab_t.rmab015, 
   rmab016 LIKE rmab_t.rmab016, 
   rmab017 LIKE rmab_t.rmab017
 END RECORD
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    LET g_rep_success = 'Y'
 
    FOREACH armr001_x01_curs INTO sr.*                               
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before.save
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #EXECUTE
       EXECUTE insert_prep USING sr.rmaadocno,sr.rmaadocdt,sr.l_rmaa001_desc,sr.l_rmaa002_desc,sr.l_rmaa003_desc,sr.rmaa007,sr.rmabseq,sr.rmab003,sr.rmab004,sr.rmab005,sr.rmab006,sr.rmab009,sr.l_imaal003,sr.l_imaal004,sr.l_rmab010_desc,sr.rmab011,sr.rmab012,sr.rmab013,sr.rmab014,sr.rmab015,sr.rmab016,sr.rmab017
 
       IF SQLCA.sqlcode THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = "armr001_x01_execute"
          LET g_errparam.code   = SQLCA.sqlcode
          LET g_errparam.popup  = FALSE
          CALL cl_err()       
          LET g_rep_success = 'N'
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段after_save
       {<point name="ins_data.after.save"/>}
       #end add-point
       
    END FOREACH
    
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
 
END FUNCTION
]]>
  </section>
  <section id="armr001_x01.ins_prep" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION armr001_x01_ins_prep()
DEFINE i              INTEGER
DEFINE l_prep_str     STRING
#add-point:ins_prep.define
{<point name="ins_prep.define"/>}
#end add-point:ins_prep.define
 
   FOR i = 1 TO g_rep_tmpname.getLength()
      CALL cl_xg_del_data(g_rep_tmpname[i])
      #LET g_sql = g_rep_ins_prep[i]              #透過此lib取得prepare字串 lib精簡
      CASE i
         WHEN 1
         #INSERT INTO PREP
         LET g_sql = " INSERT INTO ",g_rep_db CLIPPED,g_rep_tmpname[1] CLIPPED," VALUES(?,?,?,?,?,?, 
             ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
         PREPARE insert_prep FROM g_sql
         IF STATUS THEN
            LET l_prep_str ="insert_prep",i
            INITIALIZE g_errparam TO NULL
            LET g_errparam.extend = l_prep_str
            LET g_errparam.code   = status
            LET g_errparam.popup  = TRUE
            CALL cl_err()
            CALL cl_xg_drop_tmptable()
            LET g_rep_success = 'N'           
         END IF 
         #add-point:insert_prep段
         {<point name="insert_prep"/>}
         #end add-point                  
 
 
      END CASE
   END FOR
END FUNCTION
]]>
  </section>
  <section id="armr001_x01.main" ver="1" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION armr001_x01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define
{<point name="component.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'
   
   #報表元件代號      
   LET g_rep_code = "armr001_x01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #create 暫存檔
   CALL armr001_x01_create_tmptable()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #報表select欄位準備
   CALL armr001_x01_sel_prep()
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #報表insert的prepare
   CALL armr001_x01_ins_prep()  
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF
   #將資料存入tmptable
   CALL armr001_x01_ins_data() 
 
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
   #將tmptable資料印出
   CALL armr001_x01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="armr001_x01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="armr001_x01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION armr001_x01_rep_data()
#add-point:rep_data.define
{<point name="rep_data.define"/>}
#end add-point:rep_data.define
 
    #add-point:rep_data.before
    {<point name="rep_data.before"/>}
    #end add-point:rep_data.before
    
    CALL cl_xg_view()
    #add-point:rep_data.after
    {<point name="rep_data.after"/>}
    #end add-point:rep_data.after
END FUNCTION
]]>
  </section>
  <section id="armr001_x01.sel_prep" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION armr001_x01_sel_prep()
DEFINE g_select      STRING
DEFINE g_from        STRING
DEFINE g_where       STRING
#add-point:sel_prep段define
{<point name="sel_prep.define"/>}
#end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT rmaadocno,rmaadocdt,rmaa001,NULL,rmaa002,NULL,rmaa003,NULL,rmaa007,rmabseq, 
       rmab003,rmab004,rmab005,rmab006,rmab009,NULL,NULL,rmab010,NULL,rmab011,rmab012,rmab013,rmab014, 
       rmab015,rmab016,rmab017"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM rmaa_t,rmab_t"
 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("rmaa_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE armr001_x01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()
      LET g_rep_success = 'N' 
   END IF
   DECLARE armr001_x01_curs CURSOR FOR armr001_x01_prepare
 
END FUNCTION
]]>
  </section>
</add_points>
