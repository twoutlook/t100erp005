#該程式未解開Section, 採用最新樣板產出!
{<section id="armr100_g01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:1(2015-07-21 14:06:34), PR版次:0001(2015-08-17 16:16:51)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000043
#+ Filename...: armr100_g01
#+ Description: RMA單列印
#+ Creator....: 05423(2015-07-20 14:07:06)
#+ Modifier...: 05423 -SD/PR- 05423
 
{</section>}
 
{<section id="armr100_g01.global" readonly="Y" >}
#報表 g01 樣板自動產生(Version:11)
#add-point:填寫註解說明

#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   rmaa001 LIKE rmaa_t.rmaa001, 
   rmaa002 LIKE rmaa_t.rmaa002, 
   rmaa003 LIKE rmaa_t.rmaa003, 
   rmaa004 LIKE rmaa_t.rmaa004, 
   rmaa005 LIKE rmaa_t.rmaa005, 
   rmaa006 LIKE rmaa_t.rmaa006, 
   rmaa007 LIKE rmaa_t.rmaa007, 
   rmaa008 LIKE rmaa_t.rmaa008, 
   rmaadocdt LIKE rmaa_t.rmaadocdt, 
   rmaadocno LIKE rmaa_t.rmaadocno, 
   rmaaent LIKE rmaa_t.rmaaent, 
   rmaasite LIKE rmaa_t.rmaasite, 
   rmaastus LIKE rmaa_t.rmaastus, 
   rmab001 LIKE rmab_t.rmab001, 
   rmab002 LIKE rmab_t.rmab002, 
   rmab003 LIKE rmab_t.rmab003, 
   rmab004 LIKE rmab_t.rmab004, 
   l_rmab003 LIKE type_t.chr50, 
   l_rmab003_show LIKE type_t.chr3, 
   rmab005 LIKE rmab_t.rmab005, 
   rmab006 LIKE rmab_t.rmab006, 
   rmab007 LIKE rmab_t.rmab007, 
   l_rmab005 LIKE type_t.chr50, 
   l_rmab005_show LIKE type_t.chr3, 
   rmab008 LIKE rmab_t.rmab008, 
   rmab009 LIKE rmab_t.rmab009, 
   rmab010 LIKE rmab_t.rmab010, 
   l_rmab010_desc LIKE type_t.chr50, 
   rmab011 LIKE rmab_t.rmab011, 
   rmab012 LIKE rmab_t.rmab012, 
   rmab013 LIKE rmab_t.rmab013, 
   rmab014 LIKE rmab_t.rmab014, 
   rmab015 LIKE rmab_t.rmab015, 
   rmab016 LIKE rmab_t.rmab016, 
   rmab017 LIKE rmab_t.rmab017, 
   rmabseq LIKE rmab_t.rmabseq, 
   rmabsite LIKE rmab_t.rmabsite, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   x_oocal_t_oocal003 LIKE oocal_t.oocal003, 
   l_rmaa002_ooag011 LIKE type_t.chr300, 
   l_rmaa003_ooefl003 LIKE type_t.chr1000, 
   l_rmaa001_pmaal003 LIKE type_t.chr300
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING,                  #where condition 
       pr LIKE type_t.chr1          #列印點收資訊
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 TYPE sr3_r RECORD
   rmacdocno      LIKE rmac_t.rmacdocno,
   rmacseq1       LIKE rmac_t.rmacseq1, 
   rmac002        LIKE rmac_t.rmac002, 
   l_rmac002_desc LIKE inayl_t.inayl003, 
   rmac003        LIKE rmac_t.rmac003, 
   l_rmac003_desc LIKE inab_t.inab003, 
   rmac004        LIKE rmac_t.rmac004, 
   rmac005        LIKE rmac_t.rmac005, 
   l_rmac005_show LIKE type_t.chr3,
   rmac001        LIKE rmac_t.rmac001, 
   rmac007        LIKE rmac_t.rmac007, 
   l_rmac007_desc LIKE ooag_t.ooag011,
   rmacent LIKE rmac_t.rmacent, 
   rmacsite LIKE rmac_t.rmacsite
END RECORD
DEFINE l_show     LIKE type_t.chr1
#end add-point
 
{</section>}
 
{<section id="armr100_g01.main" readonly="Y" >}
PUBLIC FUNCTION armr100_g01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where condition 
DEFINE  p_arg2 LIKE type_t.chr1         #tm.pr  列印點收資訊
#add-point:init段define (客製用) name="component_name.define_customerization"

#end add-point
#add-point:init段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component_name.define"

#end add-point
 
   LET tm.wc = p_arg1
   LET tm.pr = p_arg2
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "armr100_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL armr100_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL armr100_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL armr100_g01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="armr100_g01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION armr100_g01_sel_prep()
   #add-point:sel_prep段define (客製用) name="sel_prep.define_customerization"
   
   #end add-point
   #add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
   
   #end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
   
   #add-point:sel_prep g_select name="sel_prep.g_select"
   LET g_select = " SELECT rmaa001,rmaa002,rmaa003,rmaa004,rmaa005,rmaa006,rmaa007,rmaa008,rmaadocdt, 
       rmaadocno,rmaaent,rmaasite,rmaastus,rmab001,rmab002,rmab003,rmab004,(trim(rmab003)||'/'||trim(rmab004)), 
       'Y',rmab005,rmab006,rmab007,(trim(rmaa006)||'/'||trim(rmab006)||'/'||trim(rmab007)),'Y',rmab008,rmab009,rmab010,NULL,rmab011,rmab012,rmab013,rmab014, 
       rmab015,rmab016,rmab017,rmabseq,rmabsite,pmaal_t.pmaal003,ooag_t.ooag011,ooefl_t.ooefl003,x.imaal_t_imaal003, 
       x.imaal_t_imaal004,x.oocal_t_oocal003,trim(rmaa002)||'.'||trim(ooag_t.ooag011),trim(rmaa003)||'.'||trim(ooefl_t.ooefl003), 
       trim(rmaa001)||'.'||trim(pmaal_t.pmaal003)"
 
#   #end add-point
#   LET g_select = " SELECT rmaa001,rmaa002,rmaa003,rmaa004,rmaa005,rmaa006,rmaa007,rmaa008,rmaadocdt, 
#       rmaadocno,rmaaent,rmaasite,rmaastus,rmab001,rmab002,rmab003,rmab004,(trim(rmab003)||'/'||trim(rmab004)), 
#       NULL,rmab005,rmab006,rmab007,NULL,NULL,rmab008,rmab009,rmab010,NULL,rmab011,rmab012,rmab013,rmab014, 
#       rmab015,rmab016,rmab017,rmabseq,rmabsite,( SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = rmaa_t.rmaa001 AND pmaal_t.pmaalent = rmaa_t.rmaaent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,"),( SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = rmaa_t.rmaa002 AND ooag_t.ooagent = rmaa_t.rmaaent), 
#       ( SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = rmaa_t.rmaa003 AND ooefl_t.ooeflent = rmaa_t.rmaaent AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,"),x.imaal_t_imaal003,x.imaal_t_imaal004,x.oocal_t_oocal003,trim(rmaa002)||'.'||trim((SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = rmaa_t.rmaa002 AND ooag_t.ooagent = rmaa_t.rmaaent)), 
#       trim(rmaa003)||'.'||trim((SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = rmaa_t.rmaa003 AND ooefl_t.ooeflent = rmaa_t.rmaaent AND ooefl_t.ooefl002 = '" , 
#       g_dlang,"'" ,")),trim(rmaa001)||'.'||trim((SELECT pmaal003 FROM pmaal_t WHERE pmaal_t.pmaal001 = rmaa_t.rmaa001 AND pmaal_t.pmaalent = rmaa_t.rmaaent AND pmaal_t.pmaal002 = '" , 
#       g_dlang,"'" ,"))"
# 
#   #add-point:sel_prep g_from name="sel_prep.g_from"
   
   #end add-point
    LET g_from = " FROM rmaa_t LEFT OUTER JOIN ( SELECT rmab_t.*,( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaal001 = rmab_t.rmab009 AND imaal_t.imaalent = rmab_t.rmabent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal003,( SELECT imaal004 FROM imaal_t WHERE imaal_t.imaal001 = rmab_t.rmab009 AND imaal_t.imaalent = rmab_t.rmabent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal004,( SELECT oocal003 FROM oocal_t WHERE oocal_t.oocal001 = rmab_t.rmab011 AND oocal_t.oocalent = rmab_t.rmabent AND oocal_t.oocal002 = '" , 
        g_dlang,"'" ,") oocal_t_oocal003 FROM rmab_t ) x  ON rmaa_t.rmaaent = x.rmabent AND rmaa_t.rmaadocno  
        = x.rmabdocno"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
    LET g_order = " ORDER BY rmaadocno,rmabseq"
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("rmaa_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE armr100_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE armr100_g01_curs CURSOR FOR armr100_g01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="armr100_g01.ins_data" readonly="Y" >}
PRIVATE FUNCTION armr100_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   rmaa001 LIKE rmaa_t.rmaa001, 
   rmaa002 LIKE rmaa_t.rmaa002, 
   rmaa003 LIKE rmaa_t.rmaa003, 
   rmaa004 LIKE rmaa_t.rmaa004, 
   rmaa005 LIKE rmaa_t.rmaa005, 
   rmaa006 LIKE rmaa_t.rmaa006, 
   rmaa007 LIKE rmaa_t.rmaa007, 
   rmaa008 LIKE rmaa_t.rmaa008, 
   rmaadocdt LIKE rmaa_t.rmaadocdt, 
   rmaadocno LIKE rmaa_t.rmaadocno, 
   rmaaent LIKE rmaa_t.rmaaent, 
   rmaasite LIKE rmaa_t.rmaasite, 
   rmaastus LIKE rmaa_t.rmaastus, 
   rmab001 LIKE rmab_t.rmab001, 
   rmab002 LIKE rmab_t.rmab002, 
   rmab003 LIKE rmab_t.rmab003, 
   rmab004 LIKE rmab_t.rmab004, 
   l_rmab003 LIKE type_t.chr50, 
   l_rmab003_show LIKE type_t.chr3, 
   rmab005 LIKE rmab_t.rmab005, 
   rmab006 LIKE rmab_t.rmab006, 
   rmab007 LIKE rmab_t.rmab007, 
   l_rmab005 LIKE type_t.chr50, 
   l_rmab005_show LIKE type_t.chr3, 
   rmab008 LIKE rmab_t.rmab008, 
   rmab009 LIKE rmab_t.rmab009, 
   rmab010 LIKE rmab_t.rmab010, 
   l_rmab010_desc LIKE type_t.chr50, 
   rmab011 LIKE rmab_t.rmab011, 
   rmab012 LIKE rmab_t.rmab012, 
   rmab013 LIKE rmab_t.rmab013, 
   rmab014 LIKE rmab_t.rmab014, 
   rmab015 LIKE rmab_t.rmab015, 
   rmab016 LIKE rmab_t.rmab016, 
   rmab017 LIKE rmab_t.rmab017, 
   rmabseq LIKE rmab_t.rmabseq, 
   rmabsite LIKE rmab_t.rmabsite, 
   pmaal_t_pmaal003 LIKE pmaal_t.pmaal003, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   x_oocal_t_oocal003 LIKE oocal_t.oocal003, 
   l_rmaa002_ooag011 LIKE type_t.chr300, 
   l_rmaa003_ooefl003 LIKE type_t.chr1000, 
   l_rmaa001_pmaal003 LIKE type_t.chr300
 END RECORD
   DEFINE l_cnt           LIKE type_t.num10
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point   
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
   DEFINE l_success              LIKE type_t.num5
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
 
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH armr100_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       #是否显示订单单号
       IF cl_null(sr_s.rmaa006) THEN
          LET sr_s.l_rmab005_show = 'N'
          LET sr_s.l_rmab005 = NULL
       ELSE 
          LET sr_s.l_rmab005 = sr_s.rmaa006
       END IF
       #是否显示出货单号
       IF cl_null(sr_s.rmaa005) THEN
          LET sr_s.l_rmab003_show = 'N'
       END IF
       IF cl_null(sr_s.rmab003) THEN
          LET sr_s.l_rmab003 = NULL
       END IF
       #客户编号为空不显示说明
       IF cl_null(sr_s.rmaa001) THEN
          LET sr_s.l_rmaa001_pmaal003 = NULL
       END IF
       #业务人员为空不显示说明
       IF cl_null(sr_s.rmaa002) THEN
          LET sr_s.l_rmaa002_ooag011 = NULL
       END IF
       #业务部门为空不显示说明
       IF cl_null(sr_s.rmaa003) THEN
          LET sr_s.l_rmaa003_ooefl003 = NULL
       END IF
       #获取产品特征说明
       IF NOT cl_null(sr_s.rmab010) THEN
          CALL s_feature_description(sr_s.rmab009,sr_s.rmab010) 
            RETURNING l_success,sr_s.l_rmab010_desc
       END IF
       #end add-point
 
       #add-point:ins_data段before_arr name="ins_data.before.save"
       
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].rmaa001 = sr_s.rmaa001
       LET sr[l_cnt].rmaa002 = sr_s.rmaa002
       LET sr[l_cnt].rmaa003 = sr_s.rmaa003
       LET sr[l_cnt].rmaa004 = sr_s.rmaa004
       LET sr[l_cnt].rmaa005 = sr_s.rmaa005
       LET sr[l_cnt].rmaa006 = sr_s.rmaa006
       LET sr[l_cnt].rmaa007 = sr_s.rmaa007
       LET sr[l_cnt].rmaa008 = sr_s.rmaa008
       LET sr[l_cnt].rmaadocdt = sr_s.rmaadocdt
       LET sr[l_cnt].rmaadocno = sr_s.rmaadocno
       LET sr[l_cnt].rmaaent = sr_s.rmaaent
       LET sr[l_cnt].rmaasite = sr_s.rmaasite
       LET sr[l_cnt].rmaastus = sr_s.rmaastus
       LET sr[l_cnt].rmab001 = sr_s.rmab001
       LET sr[l_cnt].rmab002 = sr_s.rmab002
       LET sr[l_cnt].rmab003 = sr_s.rmab003
       LET sr[l_cnt].rmab004 = sr_s.rmab004
       LET sr[l_cnt].l_rmab003 = sr_s.l_rmab003
       LET sr[l_cnt].l_rmab003_show = sr_s.l_rmab003_show
       LET sr[l_cnt].rmab005 = sr_s.rmab005
       LET sr[l_cnt].rmab006 = sr_s.rmab006
       LET sr[l_cnt].rmab007 = sr_s.rmab007
       LET sr[l_cnt].l_rmab005 = sr_s.l_rmab005
       LET sr[l_cnt].l_rmab005_show = sr_s.l_rmab005_show
       LET sr[l_cnt].rmab008 = sr_s.rmab008
       LET sr[l_cnt].rmab009 = sr_s.rmab009
       LET sr[l_cnt].rmab010 = sr_s.rmab010
       LET sr[l_cnt].l_rmab010_desc = sr_s.l_rmab010_desc
       LET sr[l_cnt].rmab011 = sr_s.rmab011
       LET sr[l_cnt].rmab012 = sr_s.rmab012
       LET sr[l_cnt].rmab013 = sr_s.rmab013
       LET sr[l_cnt].rmab014 = sr_s.rmab014
       LET sr[l_cnt].rmab015 = sr_s.rmab015
       LET sr[l_cnt].rmab016 = sr_s.rmab016
       LET sr[l_cnt].rmab017 = sr_s.rmab017
       LET sr[l_cnt].rmabseq = sr_s.rmabseq
       LET sr[l_cnt].rmabsite = sr_s.rmabsite
       LET sr[l_cnt].pmaal_t_pmaal003 = sr_s.pmaal_t_pmaal003
       LET sr[l_cnt].ooag_t_ooag011 = sr_s.ooag_t_ooag011
       LET sr[l_cnt].ooefl_t_ooefl003 = sr_s.ooefl_t_ooefl003
       LET sr[l_cnt].x_imaal_t_imaal003 = sr_s.x_imaal_t_imaal003
       LET sr[l_cnt].x_imaal_t_imaal004 = sr_s.x_imaal_t_imaal004
       LET sr[l_cnt].x_oocal_t_oocal003 = sr_s.x_oocal_t_oocal003
       LET sr[l_cnt].l_rmaa002_ooag011 = sr_s.l_rmaa002_ooag011
       LET sr[l_cnt].l_rmaa003_ooefl003 = sr_s.l_rmaa003_ooefl003
       LET sr[l_cnt].l_rmaa001_pmaal003 = sr_s.l_rmaa001_pmaal003
 
 
       #add-point:ins_data段after_arr name="ins_data.after.save"
       
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
END FUNCTION
 
{</section>}
 
{<section id="armr100_g01.rep_data" readonly="Y" >}
PRIVATE FUNCTION armr100_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE   
       #add-point:rep_data段印前 name="rep_data.before"
       
       #end add-point     
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT armr100_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT armr100_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT armr100_g01_rep
       END IF
       #add-point:rep_data段印完 name="rep_data.after"
       
       #end add-point       
       IF g_rep_flag = TRUE THEN
          LET g_rep_flag = FALSE
          EXIT WHILE
       END IF
    END WHILE
    #add-point:rep_data段離開while印完前 name="rep_data.end.before"
    
    #end add-point
    CALL cl_gr_close_report()
    #add-point:rep_data段離開while印完後 name="rep_data.end.after"
    
    #end add-point    
END FUNCTION
 
{</section>}
 
{<section id="armr100_g01.rep" readonly="Y" >}
PRIVATE REPORT armr100_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num10
DEFINE l_sub_sql       STRING
#add-point:rep段define  (客製用) name="rep.define_customerization"

#end add-point
#add-point:rep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep.define"
DEFINE sr3 sr3_r
DEFINE l_subrep05_show  LIKE type_t.chr1
#end add-point
 
    #add-point:rep段ORDER_before name="rep.order.before"
    
    #end add-point
    ORDER EXTERNAL BY sr1.rmaadocno,sr1.rmabseq
    #add-point:rep段ORDER_after name="rep.order.after"
    
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
          PRINTX g_rep_wcchp
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.rmaadocno
            #報表 d05 樣板自動產生(Version:6)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內) name="rep.header"
            
            #end add-point:rep.header 
            LET g_rep_docno = sr1.rmaadocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before name="rep.apr.signstr.before"
                          
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'rmaaent=' ,sr1.rmaaent,'{+}rmaadocno=' ,sr1.rmaadocno         
            CALL cl_gr_init_apr(sr1.rmaadocno)
            #add-point:rep.apr.signstr name="rep.apr.signstr"
                          
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.rmaadocno.before name="rep.b_group.rmaadocno.before"
           
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub01.before name="rep.sub01.before"
           
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql name="rep.sub01.sql"
           
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.rmaaent CLIPPED ,"'", " AND  ooff002 = '", sr1.rmaadocno CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql name="rep.sub01.afsql"
           
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE armr100_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE armr100_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT armr100_g01_subrep01
           DECLARE armr100_g01_repcur01 CURSOR FROM g_sql
           FOREACH armr100_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "armr100_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach name="rep.sub01.foreach"
              
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT armr100_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT armr100_g01_subrep01
           #add-point:rep.sub01.after name="rep.sub01.after"
           
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.rmaadocno.after name="rep.b_group.rmaadocno.after"
           
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.rmabseq
 
           #add-point:rep.b_group.rmabseq.before name="rep.b_group.rmabseq.before"
           
           #end add-point:
 
 
           #add-point:rep.b_group.rmabseq.after name="rep.b_group.rmabseq.after"
           
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before name="rep.everyrow.before"
          
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub02.before name="rep.sub02.before"
           
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql name="rep.sub02.sql"
           
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.rmaaent CLIPPED ,"'", " AND  ooff002 = '", sr1.rmaadocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.rmabseq CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql name="rep.sub02.afsql"
           
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE armr100_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE armr100_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT armr100_g01_subrep02
           DECLARE armr100_g01_repcur02 CURSOR FROM g_sql
           FOREACH armr100_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "armr100_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach name="rep.sub02.foreach"
              
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT armr100_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT armr100_g01_subrep02
           #add-point:rep.sub02.after name="rep.sub02.after"
           
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow name="rep.everyrow.beforerow"
          
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow name="rep.everyrow.afterrow"
          LET g_sql = " SELECT DISTINCT rmacdocno,rmacseq1,rmac002,trim(rmac002)||'.'||trim(inayl003),rmac003,trim(rmac003)||'.'||trim(inab003),rmac004,",
                      " rmac005,'Y',rmac001,rmac007,trim(rmac007)||'.'||trim(ooag011),rmacent,rmacsite ",
                      " FROM rmac_t ",
                      " LEFT OUTER JOIN inayl_t ON inayl001 = rmac002 AND inaylent = rmacent AND inayl002 = '",g_dlang,"' ",
                      " LEFT OUTER JOIN inab_t ON inab001 = rmac002 AND inab002 = rmac003 AND inabent = rmacent ",
                      " LEFT OUTER JOIN ooag_t ON ooag001 = rmac007 AND ooagent = rmacent ",
                      " WHERE rmacent = ",g_enterprise," AND rmacsite = '",g_site,"' AND rmacdocno = '",sr1.rmaadocno,"' AND rmacseq = '",sr1.rmabseq,"' ",
                      " ORDER BY rmacseq1 "
          LET l_cnt = 0
          LET l_sub_sql = ""
          LET l_subrep05_show ="N"
          LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
          PREPARE armr100_g01_repcur05_cnt_pre FROM l_sub_sql
          EXECUTE armr100_g01_repcur05_cnt_pre INTO l_cnt
          IF l_cnt > 0 AND tm.pr = 'Y' THEN 
             LET l_subrep05_show ="Y"
          END IF
          PRINTX l_subrep05_show
          LET l_cnt = 0
          SELECT COUNT(*) INTO l_cnt
            FROM rmac_t
           WHERE rmacent = g_enterprise
             AND rmacsite = g_site
             AND rmacdocno = sr1.rmaadocno
             AND rmacseq = sr1.rmabseq
             AND rmac005 IS NOT NULL AND rmac005 <> ' '
          IF l_cnt > 0 THEN
             LET l_show = 'Y'          
          ELSE
             LET l_show = 'N'
          END IF
#          LET l_cnt = 0
#          SELECT COUNT(*) INTO l_cnt
#            FROM rmac_t
#           WHERE rmacdocno = sr1.rmaadocno
#             AND rmacseq = sr1.rmabseq
#             AND rmacsite = g_site
#             AND rmacent = g_enterprise
#             AND rmac005 IS NOT NULL
#          IF l_cnt > 0 THEN
#             LET l_show = "Y"
#          END IF
          START REPORT armr100_g01_subrep05
          DECLARE armr100_g01_repcur05 CURSOR FROM g_sql
          FOREACH armr100_g01_repcur05 INTO sr3.*
             IF STATUS THEN 
                INITIALIZE g_errparam TO NULL
                LET g_errparam.extend = "armr100_g01_repcur05:"
                LET g_errparam.code   = SQLCA.sqlcode
                LET g_errparam.popup  = FALSE
                CALL cl_err()                  
                EXIT FOREACH 
             END IF
             IF cl_null(sr3.rmac002) THEN
                LET sr3.l_rmac002_desc = NULL
             END IF
             IF cl_null(sr3.rmac003) THEN
                LET sr3.l_rmac003_desc = NULL
             END IF
             IF cl_null(sr3.rmac005) THEN
                LET sr3.l_rmac005_show = 'N'
             END IF
             IF cl_null(sr3.rmac007) THEN
                LET sr3.l_rmac007_desc = NULL
             END IF
             OUTPUT TO REPORT armr100_g01_subrep05(sr3.*)
          END FOREACH
          FINISH REPORT armr100_g01_subrep05
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub03.before name="rep.sub03.before"
           
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql name="rep.sub03.sql"
           
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.rmaaent CLIPPED ,"'", " AND  ooff002 = '", sr1.rmaadocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.rmabseq CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql name="rep.sub03.afsql"
           
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE armr100_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE armr100_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT armr100_g01_subrep03
           DECLARE armr100_g01_repcur03 CURSOR FROM g_sql
           FOREACH armr100_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "armr100_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach name="rep.sub03.foreach"
              
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT armr100_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT armr100_g01_subrep03
           #add-point:rep.sub03.after name="rep.sub03.after"
           
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after name="rep.everyrow.after"
          
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.rmaadocno
 
           #add-point:rep.a_group.rmaadocno.before name="rep.a_group.rmaadocno.before"
           
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub04.before name="rep.sub04.before"
           
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql name="rep.sub04.sql"
           
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.rmaaent CLIPPED ,"'", " AND  ooff002 = '", sr1.rmaadocno CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql name="rep.sub04.afsql"
           
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE armr100_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE armr100_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT armr100_g01_subrep04
           DECLARE armr100_g01_repcur04 CURSOR FROM g_sql
           FOREACH armr100_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "armr100_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach name="rep.sub04.foreach"
              
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT armr100_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT armr100_g01_subrep04
           #add-point:rep.sub04.after name="rep.sub04.after"
           
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.rmaadocno.after name="rep.a_group.rmaadocno.after"
           
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.rmabseq
 
           #add-point:rep.a_group.rmabseq.before name="rep.a_group.rmabseq.before"
           
           #end add-point:
 
 
           #add-point:rep.a_group.rmabseq.after name="rep.a_group.rmabseq.after"
           
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before name="rep.lastrow.before"  
                    
            #end add-point :rep.lastrow.before
 
            #add-point:rep.lastrow.after name="rep.lastrow.after"
            
            #end add-point :rep.lastrow.after
END REPORT
 
{</section>}
 
{<section id="armr100_g01.subrep_str" readonly="Y" >}
#讀取子報表樣板
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT armr100_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub01.define_customerization" 

#end add-point
#add-point:sub01.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub01.define" 

#end add-point:sub01.define
 
    #add-point:sub01.order.before name="sub01.order.before" 
    
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before name="sub01.everyrow.before" 
                          
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after name="sub01.everyrow.after" 
            
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT armr100_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub02.define_customerization" 

#end add-point
#add-point:sub02.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub02.define" 

#end add-point:sub02.define
 
    #add-point:sub02.order.before name="sub02.order.before" 
    
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before name="sub02.everyrow.before" 
                          
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after name="sub02.everyrow.after" 
            
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT armr100_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub03.define_customerization" 

#end add-point
#add-point:sub03.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub03.define" 

#end add-point:sub03.define
 
    #add-point:sub03.order.before name="sub03.order.before" 
    
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before name="sub03.everyrow.before" 
                          
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after name="sub03.everyrow.after" 
            
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT armr100_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub04.define_customerization" 

#end add-point
#add-point:sub04.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub04.define" 

#end add-point:sub04.define
 
    #add-point:sub04.order.before name="sub04.order.before" 
    
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before name="sub04.everyrow.before" 
                          
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after name="sub04.everyrow.after" 
            
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
 
{</section>}
 
{<section id="armr100_g01.other_function" readonly="Y" >}

 
{</section>}
 
{<section id="armr100_g01.other_report" readonly="Y" >}

PRIVATE REPORT armr100_g01_subrep05(sr3)
   DEFINE sr3 sr3_r
   
   ORDER EXTERNAL BY sr3.rmacdocno,sr3.rmacseq1
   FORMAT  
      BEFORE GROUP OF sr3.rmacdocno
         PRINTX l_show
         
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr3.*
END REPORT

 
{</section>}
 
