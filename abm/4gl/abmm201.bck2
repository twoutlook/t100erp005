#該程式未解開Section, 採用最新樣板產出!
{<section id="abmm201.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0012(2016-06-27 14:18:04), PR版次:0012(2016-09-05 20:15:35)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000592
#+ Filename...: abmm201
#+ Description: 集團產品結構取替代維護作業
#+ Creator....: 02587(2013-10-11 17:54:58)
#+ Modifier...: 02295 -SD/PR- 08734
 
{</section>}
 
{<section id="abmm201.global" >}
#應用 i00 樣板自動產生(Version:9)
#add-point:填寫註解說明
#  Modify.....: 00768(2014-09-23 16:24:26) -SD/PR- for add产品特征+说明
# 140928 修改调用接口，供abmm200调用:增加引号
#151224-00025#1 15/12/25 By tsungyung 手動輸入特徵碼沒有同步新增inam_t[料件產品特徵明細檔](整批修改)
#160318-00005#5 16/03/21 By Jessy     修正azzi920重複定義之錯誤訊息
#160622-00015#1 2016/06/24 By xianghui 单身增加保税否栏位
#160627-00002#3 2016/06/24 By xianghui 单身删除保税否栏位
#160705-00042#8 2016/07/12 By sakura   程式中寫死g_prog部分改寫MATCHES方式
#160905-00007#1 2016-09-05 By08734     ent调整
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:free_style模組變數(Module Variable)
{<Module define>}

#單頭 type 宣告
 type type_g_bmba_m        RECORD
       l_bmea007 LIKE type_t.chr80,
   l_date  LIKE type_t.chr20,
   bmba001 LIKE bmba_t.bmba001,
   imaal003 LIKE imaal_t.imaal003,
   imaal004 LIKE imaal_t.imaal004,
   bmba002 LIKE bmba_t.bmba002,
   bmaa004 LIKE bmaa_t.bmaa004,
   bmba003 LIKE bmba_t.bmba003,
   l_imaal003 LIKE type_t.chr80,
   l_imaal004 LIKE type_t.chr80,
   bmba004 LIKE bmba_t.bmba004,
   bmba004_desc LIKE type_t.chr80,
   bmba007 LIKE bmba_t.bmba007,
   bmba007_desc LIKE type_t.chr80,
   bmba008 LIKE bmba_t.bmba008,
   bmba011 LIKE bmba_t.bmba011,
   bmba012 LIKE bmba_t.bmba012,
   bmba010 LIKE bmba_t.bmba010,
   bmba005 DATETIME YEAR TO SECOND
       END RECORD

#單身 type 宣告
 TYPE type_g_bmea_d        RECORD
       bmea007 LIKE bmea_t.bmea007,
   bmea008 LIKE bmea_t.bmea008,
   bmea008_desc LIKE type_t.chr80,
   bmea008_desc_desc LIKE type_t.chr80,
   bmea019 LIKE bmea_t.bmea019,
   bmea019_desc LIKE type_t.chr80,
   bmea009 LIKE bmea_t.bmea009,
   bmea010 LIKE bmea_t.bmea010,
   bmea011 LIKE bmea_t.bmea011,
   bmea012 LIKE bmea_t.bmea012,
   bmea013 LIKE bmea_t.bmea013,
   #bmea020 LIKE bmea_t.bmea020,       #160622-00015#1  #160627-00002#3 mark
   bmea014 LIKE bmea_t.bmea014,
   bmea015 LIKE bmea_t.bmea015,
   bmea016 LIKE bmea_t.bmea016,
   bmea017 LIKE bmea_t.bmea017,
   bmea018 LIKE bmea_t.bmea018
       END RECORD


#模組變數(Module Variables)
DEFINE g_bmba_m          type_g_bmba_m
DEFINE g_bmba_m_t        type_g_bmba_m

DEFINE g_bmba001_t     LIKE bmba_t.bmba001
DEFINE g_bmba002_t     LIKE bmba_t.bmba002

DEFINE g_bmba003_t     LIKE bmba_t.bmba003

DEFINE g_bmba004_t     LIKE bmba_t.bmba004

DEFINE g_bmba005_t     DATETIME YEAR TO SECOND

DEFINE g_bmba007_t     LIKE bmba_t.bmba007

DEFINE g_bmba008_t     LIKE bmba_t.bmba008



#DEFINE g_bmba003_t        LIKE bmba_t.bmba003
#DEFINE g_bmba001_t        LIKE bmba_t.bmba001
#此程式無root欄位:DEFINE g__t      LIKE bmba_t.

DEFINE g_bmea_d          DYNAMIC ARRAY OF type_g_bmea_d
DEFINE g_bmea_d_t        type_g_bmea_d
DEFINE g_bmea_d_o        type_g_bmea_d    #160622-00015#1  

DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_bmba001 LIKE bmba_t.bmba001,
   b_bmba001_desc LIKE type_t.chr80,
   b_bmba001_desc_desc LIKE type_t.chr80,
      b_bmba002 LIKE bmba_t.bmba002,
      b_bmba003 LIKE bmba_t.bmba003,
   b_bmba003_desc LIKE type_t.chr80,
      b_bmba004 LIKE bmba_t.bmba004,
      b_bmba005 DATETIME YEAR TO SECOND,
      b_bmba007 LIKE bmba_t.bmba007,
      b_bmba008 LIKE bmba_t.bmba008,
      b_bmbasite LIKE bmba_t.bmbasite
       END RECORD

#無單頭append欄位定義
#無單身append欄位定義

DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果

DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog

DEFINE g_pagestart           LIKE type_t.num5
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身

DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)

DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_searchtype          LIKE type_t.chr200

DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_root_search         BOOLEAN
DEFINE g_browser_root        DYNAMIC ARRAY OF INTEGER      #root資料所在

DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show          LIKE type_t.num5

DEFINE g_wc_table1           STRING                        #第1個單身table所使用的g_wc

 TYPE type_g_bmea2_d        RECORD
   bmeb009 LIKE bmeb_t.bmeb009,
   bmeb009_desc LIKE type_t.chr80
       END RECORD
DEFINE g_bmea2_d   DYNAMIC ARRAY OF type_g_bmea2_d
DEFINE g_bmea2_d_t type_g_bmea2_d

DEFINE g_wc_table2           STRING                        #第2個單身table所使用的g_wc
DEFINE g_rec_b1              LIKE type_t.num5           
DEFINE g_wc3                 STRING
DEFINE g_flag1               LIKE type_t.chr1  
{</Module define>}          {#ADP版次:1#}
#end add-point
 
#add-point:自定義模組變數(Module Variable)
 
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
{</section>}
 
{<section id="abmm201.main" >}
#+ 作業開始
MAIN
   #add-point:main段define
   
   #end add-point    
   #add-point:main段define(客製用)
   
   #end add-point
 
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
   #IF g_prog = 'abmm201' THEN        #160705-00042#8 160712 by sakura mark
   IF g_prog MATCHES 'abmm201' THEN   #160705-00042#8 160712 by sakura add
      LET g_site = 'ALL'
   END IF
   #end add-point
 
   #add-point:SQL_define
   LET g_forupd_sql = "SELECT bmba001,'','',bmba002,'',bmba003,'','',bmba004,'',bmba007,'',bmba008,bmba011,bmba012,bmba010,bmba005 FROM bmba_t WHERE bmbaent= ? AND bmbasite= ? AND bmba001=? AND bmba002=? AND bmba003=? AND bmba004=? AND bmba005=? AND bmba007=? AND bmba008=? FOR UPDATE"          {#ADP版次:1#}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE abmm201_cl CURSOR FROM g_forupd_sql 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
 
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmm201 WITH FORM cl_ap_formpath("abm",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL abmm201_init()
 
      #進入選單 Menu (='N')
      CALL abmm201_ui_dialog()
   
      #畫面關閉
      CLOSE WINDOW w_abmm201
   END IF
 
   #add-point:作業離開前
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
 
END MAIN
 
{</section>}
 
{<section id="abmm201.other_function" readonly="Y" >}
#add-point:自定義元件(Function)

PRIVATE FUNCTION abmm201_init()
   #add-point:init段define
   DEFINE  l_ac1  LIKE type_t.num5
   #end add-point

   LET g_bfill = "Y"
   LET g_searchtype = "3"
   LET g_error_show = 1


   CALL cl_set_combo_scc('bmea016','1105')
   CALL cl_set_combo_scc('bmea018','1104')
 
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   LET g_bmba_m.l_bmea007 = '1'
   LET g_bmba_m.l_date = cl_get_current()
   #end add-point

   CALL abmm201_default_search()

END FUNCTION

PRIVATE FUNCTION abmm201_ui_dialog()
   #add-point:ui_dialog段define
   DEFINE  l_ac1  LIKE type_t.num5
   #end add-point

   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件

   CALL cl_set_act_visible("accept,cancel", FALSE)

   #temp CALL gfrm_curr.setElementImage("logo","logo/applogo.png")
   #temp CALL gfrm_curr.setElementHidden("mainlayout",1)
   #temp CALL gfrm_curr.setElementHidden("worksheet",0)
   #temp LET g_main_hidden = 1

   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point

   WHILE TRUE

      CALL abmm201_browser_fill() #不可mark for 此作业被调用时需默认打开对应资料

      #temp CALL cl_notice()

      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

         INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype
            BEFORE INPUT
         END INPUT

         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)

            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE

               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF
               IF g_browser[g_current_idx].b_expcode = 1 THEN
                  LET g_bmba_m_t.l_bmea007 = g_bmba_m.l_bmea007
                  LET g_bmba_m_t.l_date = g_bmba_m.l_date                  
                  INITIALIZE g_bmba_m.* TO NULL
                  DISPLAY BY NAME g_bmba_m.*
                  CALL g_bmea_d.clear()    #g_bmea_d 單頭及單身
                  CALL g_bmea2_d.clear() 
                  LET g_bmba_m.l_bmea007 = g_bmba_m_t.l_bmea007
                  LET g_bmba_m.l_date = g_bmba_m_t.l_date 
                  DISPLAY g_current_idx TO h_count              
               ELSE 
                  CALL abmm201_fetch('') # reload data
                  #LET g_detail_idx = 1
                  CALL abmm201_ui_detailshow() #Setting the current row
               
                  CALL abmm201_idx_chk()
                  #NEXT FIELD bmea007
               END IF 

               ON EXPAND (g_row_index)
                  #樹展開
                  CALL abmm201_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1

               ON COLLAPSE (g_row_index)
                  #樹關閉

         END DISPLAY

         DISPLAY ARRAY g_bmea_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1

            BEFORE ROW
               CALL abmm201_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_flag1 = 'Y'
               CALL abmm201_b_fill_1(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
               LET g_flag1 = 'N'
               
            BEFORE DISPLAY
               LET g_current_page = 1
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               CALL abmm201_idx_chk()
               LET g_current_page = 1



         END DISPLAY
         
         DISPLAY ARRAY g_bmea2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b1)  
         
            BEFORE ROW
               CALL abmm201_idx_chk()
			   LET l_ac1 = DIALOG.getCurrentRow("s_detail2")

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac1 = DIALOG.getCurrentRow("s_detail4")
               CALL abmm201_idx_chk()
               LET g_current_page = 2
      
         END DISPLAY

         BEFORE DIALOG
            #若執行集團級程式，則不開放切換營運中心的功能
            #IF g_prog = 'abmm201' THEN        #160705-00042#8 160712 by sakura mark
            IF g_prog MATCHES 'abmm201' THEN   #160705-00042#8 160712 by sakura add
               CALL cl_set_act_visible("logistics", FALSE)
            ELSE
               CALL cl_set_act_visible("logistics", TRUE)
            END IF
            #DISPLAY BY NAME g_bmba_m.l_bmea007,g_bmba_m.l_date
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE

            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF

            #有資料才進行fetch
            IF g_current_idx <> 0  THEN
               IF NOT cl_null(g_browser[g_current_idx].b_bmba003) THEN
                  CALL abmm201_fetch('') # reload data
               END IF 
            ELSE              
               CALL cl_set_act_visible("statechange,insert,delete,modify,reproduce", FALSE)   
            END IF
            
            #LET g_detail_idx = 1
            CALL abmm201_ui_detailshow() #Setting the current row

            #筆數顯示
            LET g_current_page = 1
            CALL abmm201_idx_chk()

            #NEXT FIELD bmea007

         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point

         #Browser用Action

         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            INITIALIZE g_wc_table1 TO NULL

            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT abmm201_browser_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser.getLength() = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -100
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF
            LET g_action_choice = "searchdata"
         #  EXIT DIALOG

         #進階搜尋
         ON ACTION advancesearch

         #ON ACTION statechange
         #   CALL abmm201_statechange()
         #   LET g_action_choice = "statechange"
         #   #EXIT DIALOG

         #簽核
         ON ACTION signature
            MENU "" ATTRIBUTES( STYLE="popup", IMAGE="tb/authorize/terminate.png" )
               ON ACTION ef_sign
               ON ACTION stop_authflow
               ON ACTION add_auth
               ON ACTION revoke_auth
               ON ACTION approve
               ON ACTION unapprove
               ON ACTION auth_opinion
               ON ACTION auth_status
               ON ACTION auth_attach
               ON ACTION authflow_designer
            END MENU

         #ACTION表單列
         ON ACTION first
            CALL abmm201_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm201_idx_chk()

         ON ACTION previous
            CALL abmm201_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm201_idx_chk()

         ON ACTION jump
            CALL abmm201_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm201_idx_chk()

         ON ACTION next
            CALL abmm201_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm201_idx_chk()

         ON ACTION last
            CALL abmm201_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm201_idx_chk()

         ON ACTION close
            LET INT_FLAG=FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF

         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_bmba001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF

         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden
            END IF



         ON ACTION delete

            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abmm201_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF


         ON ACTION reproduce

            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL abmm201_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
            END IF


         ON ACTION insert

            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmm201_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
                EXIT DIALOG
            END IF


         ON ACTION query

            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abmm201_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF


         ON ACTION output

            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
            END IF
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
              
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_bmea_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_bmea2_d)
                  LET g_export_id[2]   = "s_detail2"
              
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF

         ON ACTION modify

            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               CALL abmm201_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
            END IF
            
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               CALL abmm201_modify()
            END IF
            
         #主選單用ACTION
         &include "main_menu.4gl"

         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG

      END DIALOG

      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE

   CALL cl_set_act_visible("accept,cancel", TRUE)

END FUNCTION

PRIVATE FUNCTION abmm201_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point

   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00005"
      LET g_errparam.extend = "searchcol"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF

   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF

   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY bmba001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF

   CALL abmm201_browser_fill()
   CALL ui.Interface.refresh()
   RETURN TRUE

END FUNCTION

PRIVATE FUNCTION abmm201_browser_fill()
   {<Local define>}
   DEFINE l_cnt      LIKE type_t.num10
   DEFINE l_cnt2     LIKE type_t.num10
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   DEFINE l_wc3             STRING
   DEFINE l_bmba003_t       LIKE bmba_t.bmba003
   #end add-point

   CALL g_browser.clear()
   CLEAR FORM
   CALL g_bmea_d.clear()     
   CALL g_bmea2_d.clear()

#   DROP TABLE abmm201_tmp
#
#   #Create temp table
#   CREATE TEMP TABLE abmm201_tmp
#   (
#         bmba001 VARCHAR(500),
#   bmba001_desc VARCHAR(500),
#   bmba001_desc_desc VARCHAR(500),
#   bmba002 VARCHAR(500),
#   bmba003 VARCHAR(500),
#   bmba003_desc VARCHAR(500),
#   bmba004 VARCHAR(500),
#   bmba005 DATETIME YEAR TO SECOND,
#   bmba007 VARCHAR(500),
#   bmba008 VARCHAR(500),
#   bmbasite VARCHAR(500),
#      #僅含browser的欄位
#      exp_code  VARCHAR(5)
#   );
#
#   LET g_root_search = FALSE
#   IF g_wc3 <> " 1=1" AND NOT cl_null(g_wc3) THEN 
#      LET g_sql = "SELECT bmba001,'','',bmba002,bmba003,'',bmba004,bmba005,bmba007,bmba008,bmbasite ",
#                  " FROM bmba_t  ",
#                  " LEFT JOIN bmaa_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmba001 = bmaa001 AND bmba002 = bmaa002 ",                  
#                  " INNER JOIN bmea_t ",
#                  " ON bmea001 = bmba001 ",
#                  " AND bmea002 = bmba002 ",
#                  " INNER JOIN bmeb_t  ON bmeb001 = bmba001  AND bmeb002 = bmba002 ",
#                  " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site ||"' AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) AND "|| g_wc|| " AND "|| g_wc2|| " AND "|| g_wc3,
#                  "   AND rownum <= ",g_max_rec
#   ELSE
#      IF cl_null(g_wc2) OR g_wc2.trim() = "1=1" THEN
#         LET g_sql = "SELECT bmba001,'','',bmba002,bmba003,'',bmba004,bmba005,bmba007,bmba008,bmbasite ",
#                     " FROM bmba_t  ",
#                     " LEFT JOIN bmaa_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmba001 = bmaa001 AND bmba002 = bmaa002 ",                  
#                     " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site ||"' AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) AND "||g_wc,
#                     "   AND rownum < ",g_max_rec
#      ELSE
#         LET g_sql = "SELECT bmba001,'','',bmba002,bmba003,'',bmba004,bmba005,bmba007,bmba008,bmbasite ",
#                     " FROM bmba_t  ",
#                     " LEFT JOIN bmaa_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmba001 = bmaa001 AND bmba002 = bmaa002 ",                  
#                     " INNER JOIN bmea_t ",
#                     " ON bmea001 = bmba001 ",
#                     " AND bmea002 = bmba002 ",
#   
#   
#                     " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site ||"' AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) AND "|| g_wc|| " AND "|| g_wc2,
#                     "   AND rownum < ",g_max_rec
#      END IF
#   END IF   
# 
#   PREPARE master_ext FROM g_sql
#   DECLARE master_extcur CURSOR FOR master_ext

#   #搜尋建構樹所需的節點
#   CASE g_searchtype
#      WHEN "1" #上推
#         CALL abmm201_match_node(g_wc,g_searchtype)
#      WHEN "2" #下展
#         #CALL abmm201_find_speed_tbl(g_wc,g_searchtype)
#         CALL abmm201_match_node(g_wc,g_searchtype)
#      WHEN "3" #全部
#         CALL abmm201_match_node(g_wc,g_searchtype)
#   END CASE

#   CALL abmm201_browser_create(g_searchtype)

#   FREE master_ext

   LET g_root_search = FALSE
   IF g_wc3 <> " 1=1" AND NOT cl_null(g_wc3) THEN 
      LET g_sql = "SELECT DISTINCT bmba001,'','',bmba002,'','','','','','',bmbasite ",
                  " FROM bmba_t  ",
                  " LEFT OUTER JOIN imaal_t ON bmbaent = imaalent AND bmba001 = imaal001 AND imaal002 = '",g_dlang,"'",
                  " LEFT JOIN bmaa_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmba001 = bmaa001 AND bmba002 = bmaa002 ",                  
                  " INNER JOIN bmea_t ",
                  " ON bmeaent = bmbaent AND bmeasite = bmbasite AND bmea001 = bmba001 ",
                  " AND bmea002 = bmba002 AND bmea003 = bmba003 AND bmea004 = bmba004 AND bmea005 = bmba007 AND bmea006 = bmba008",
                  " INNER JOIN bmeb_t  ON bmebent = bmeaent AND bmebsite = bmeasite AND bmeb001 = bmea001  AND bmeb002 = bmea002 ",
                  " AND bmeb003 = bmea003 AND bmeb004 = bmea004 AND bmeb005 = bmea007 AND bmeb006 = bmea006 ",
                  " AND bmeb007 = bmea007 AND bmeb008 = bmea008 AND bmeb010 = bmea019 ",
                  " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site ||"' AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) AND bmea007='",g_bmba_m.l_bmea007,"' AND "|| g_wc|| " AND "|| g_wc2|| " AND "|| g_wc3
   ELSE
      IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
         LET g_sql = "SELECT DISTINCT bmba001,'','',bmba002,'','','','','','',bmbasite ",
                     " FROM bmba_t  ",
                     " LEFT OUTER JOIN imaal_t ON bmbaent = imaalent AND bmba001 = imaal001 AND imaal002 = '",g_dlang,"'",
                     " LEFT JOIN bmaa_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmba001 = bmaa001 AND bmba002 = bmaa002 ",                  
                     " INNER JOIN bmea_t ",
                     " ON bmeaent = bmbaent AND bmeasite = bmbasite AND bmea001 = bmba001 ",
                     " AND bmea002 = bmba002 AND bmea003 = bmba003 AND bmea004 = bmba004 AND bmea005 = bmba007 AND bmea006 = bmba008",
                     " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site ||"' AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) AND bmea007='",g_bmba_m.l_bmea007,"' AND "|| g_wc|| " AND "|| g_wc2
      ELSE
         LET g_sql = "SELECT DISTINCT bmba001,'','',bmba002,'','','','','','',bmbasite ",
                     " FROM bmba_t  ",
                     " LEFT OUTER JOIN imaal_t ON bmbaent = imaalent AND bmba001 = imaal001 AND imaal002 = '",g_dlang,"'",
                     " LEFT JOIN bmaa_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmba001 = bmaa001 AND bmba002 = bmaa002 ", 
                     " LEFT JOIN bmea_t ",
                     " ON bmeaent = bmbaent AND bmeasite = bmbasite AND bmea001 = bmba001 ",
                     " AND bmea002 = bmba002 AND bmea003 = bmba003 AND bmea004 = bmba004 AND bmea005 = bmba007 AND bmea006 = bmba008 AND bmea007='",g_bmba_m.l_bmea007,"' ",                     
                     " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site ||"' AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) AND "||g_wc
      END IF
   END IF   
 
   PREPARE master_ext FROM g_sql
   DECLARE master_extcur CURSOR FOR master_ext
   LET g_cnt = 1
   FOREACH master_extcur INTO g_browser[g_cnt].b_bmba001,g_browser[g_cnt].b_bmba001_desc,g_browser[g_cnt].b_bmba001_desc_desc,g_browser[g_cnt].b_bmba002,g_browser[g_cnt].b_bmba003,g_browser[g_cnt].b_bmba003_desc,g_browser[g_cnt].b_bmba004,g_browser[g_cnt].b_bmba005,g_browser[g_cnt].b_bmba007,g_browser[g_cnt].b_bmba008,g_browser[g_cnt].b_bmbasite,g_browser[g_cnt].b_expcode
      LET l_bmba003_t = g_browser[g_cnt].b_bmba003
      LET g_browser[g_cnt].b_bmba003 = g_browser[g_cnt].b_bmba001
      LET g_browser[g_cnt].b_show = g_browser[g_cnt].b_bmba001
      LET g_browser[g_cnt].b_pid = 0
      LET g_browser[g_cnt].b_id = "0.",g_cnt USING "<<<"
      LET g_browser[g_cnt].b_exp = FALSE
      LET g_browser[g_cnt].b_expcode = 1
      LET g_browser[g_cnt].b_hasC = abmm201_chk_hasC(g_cnt)
      LET g_browser[g_cnt].b_bmba003 = l_bmba003_t

      LET g_cnt = g_cnt + 1

      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
   LET g_error_show = 0
   CALL g_browser.deleteElement(g_cnt) 
#   #組合描述欄位&刪除多於資料
#   FOR l_ac = 1 TO g_browser.getLength()
#       SELECT imaal003,imaal004 INTO g_browser[l_ac].b_bmba001_desc,g_browser[l_ac].b_bmba001_desc_desc FROM imaal_t 
#        WHERE imaal001 = g_browser[l_ac].b_bmba001
#          AND imaal002 = g_dlang
#       LET g_browser[l_ac].b_show = g_browser[l_ac].b_bmba001
#   END FOR
   LET g_browser_cnt = g_cnt - 1
END FUNCTION

PRIVATE FUNCTION abmm201_match_node(p_wc,p_type)
   {<Local define>}
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
   DEFINE ls_code      LIKE type_t.chr50
   DEFINE ls_code2     LIKE type_t.chr50
   DEFINE l_bstmp      RECORD    #body欄位
             bmba001 VARCHAR(500),
   bmba001_desc VARCHAR(500),
   bmba001_desc_desc VARCHAR(500),
   bmba002 VARCHAR(500),
   bmba003 VARCHAR(500),
   bmba003_desc VARCHAR(500),
   bmba004 VARCHAR(500),
   bmba005 DATETIME YEAR TO SECOND,
   bmba007 VARCHAR(500),
   bmba008 VARCHAR(500),
   bmbasite VARCHAR(500)
          #僅含單身table的欄位
   END RECORD
   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
             bmba001 VARCHAR(500),
   bmba001_desc VARCHAR(500),
   bmba001_desc_desc VARCHAR(500),
   bmba002 VARCHAR(500),
   bmba003 VARCHAR(500),
   bmba003_desc VARCHAR(500),
   bmba004 VARCHAR(500),
   bmba005 DATETIME YEAR TO SECOND,
   bmba007 VARCHAR(500),
   bmba008 VARCHAR(500),
   bmbasite VARCHAR(500)
          #僅含單身table的欄位
   END RECORD
   {</Local define>}
   #add-point:match_node段define
   {<point name="match_node.define"/>}
   #end add-point
   DEFINE l_cnt  LIKE type_t.num5

   #先找出符合條件的節點並給予展開值
   CASE p_type
      WHEN 1
         LET ls_code = "0"
      WHEN 2
         LET ls_code = "2"
      WHEN 3
         LET ls_code = "2"
   END CASE

   IF cl_null('bmba001') THEN
      LET ls_code = '0'
   END IF

   CALL s_transaction_begin()

   LET g_sql = " INSERT INTO abmm201_tmp (bmba001,bmba001_desc,bmba001_desc_desc,bmba002,bmba003,bmba003_desc,bmba004,bmba005,bmba007,bmba008,bmbasite,exp_code) VALUES (?,?,?,?,?,?,?,?,?,?,?,?)"
   PREPARE master_tmp FROM g_sql

   IF g_root_search THEN
      #DECLARE master_tmp_cur CURSOR FOR master_tmp
      #OPEN master_tmp_cur
      FOREACH master_extcur INTO l_bstmp.*
         EXECUTE master_tmp USING l_bstmp.*,ls_code
         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
      END FOREACH
      #FLUSH master_tmp_cur
      CALL s_transaction_end('Y','0')
      RETURN
   END IF
   LET l_cnt = 1
   FOREACH master_extcur INTO l_bstmp.*
      SELECT imaal003,imaal004 INTO l_bstmp.bmba001_desc,l_bstmp.bmba001_desc_desc FROM imaal_t 
       WHERE imaal001 = l_bstmp.bmba001
         AND imaal002 = g_dlang
         AND imaalent = g_enterprise  #160905-00007#1 add
      SELECT imaal003,imaal004 INTO l_bstmp.bmba003_desc,l_bstmp.bmba001_desc_desc FROM imaal_t 
       WHERE imaal001 = l_bstmp.bmba003
         AND imaal002 = g_dlang
         AND imaalent = g_enterprise  #160905-00007#1 add
      EXECUTE master_tmp USING l_bstmp.*,ls_code
      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*

      #找出符合條件的節點的所有祖先並給予展開值
      CASE p_type
         WHEN 1
            LET ls_code2 = "1"
         WHEN 2
            LET ls_code2 = "-1"
         WHEN 3
            LET ls_code2 = "1"
      END CASE

      #若pid欄位存在才進行後續處理
      #擷取該節點的父節點到temp table中
      LET g_sql = " SELECT bmba001,'','',bmba002,bmba003,'',bmba004,bmba005,bmba007,bmba008,bmbasite ",
                  " FROM bmba_t  ",                  
                  " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND bmba003 = ? " ||" AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"'"
                  #此程式無root欄位:," AND  = ? "
                 ," AND  bmba002 = ? "
                  
      PREPARE master_getparent_up FROM g_sql

      #擷取該節點的所有父節點
      WHILE TRUE
         IF cl_null(l_child_list[1].bmba003) THEN
            IF l_child_list.getLength() = 1 THEN
               EXIT WHILE
            ELSE
               CALL l_child_list.deleteElement(1)
               CONTINUE WHILE
            END IF
         END IF

         IF abmm201_tmp_tbl_chk(l_child_list[1].bmba001,l_child_list[1].bmba002,ls_code2) THEN
            INITIALIZE l_bstmp.* TO NULL
            LET l_bstmp.bmba003=l_child_list[1].bmba001
            LET l_bstmp.bmba002=l_child_list[1].bmba002
            LET l_bstmp.bmba001=' '
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            FREE master_getparent_up
            CALL l_child_list.deleteElement(1)
            EXIT WHILE
         END IF
         
         EXECUTE master_getparent_up USING l_child_list[1].bmba001,l_child_list[1].bmba002
                                           #此程式無root欄位:,l_child_list[1].
                                           INTO l_bstmp.*
                                           
         IF SQLCA.sqlcode AND SQLCA.sqlcode != 100  THEN
            FREE master_getparent_up
            CALL l_child_list.deleteElement(1)
            EXIT WHILE
         END IF
         
         IF SQLCA.sqlcode = 100 AND abmm201_tmp_tbl_chk(l_child_list[1].bmba001,l_child_list[1].bmba002,ls_code2) THEN
            INITIALIZE l_bstmp.* TO NULL
            LET l_bstmp.bmba003=l_child_list[1].bmba001
            LET l_bstmp.bmba002=l_child_list[1].bmba002
            LET l_bstmp.bmba001=' '
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            FREE master_getparent_up
            CALL l_child_list.deleteElement(1)
            EXIT WHILE
         END IF
         
         FREE master_getparent_up

      #確定該節點是否存在於temp table中

         IF STATUS = 0  AND NOT cl_null(l_bstmp.bmba003) AND abmm201_tmp_tbl_chk(l_bstmp.bmba003,l_bstmp.bmba002,ls_code2
                     #此程式無root欄位:,l_bstmp.
                     ) THEN
            EXECUTE master_tmp USING l_bstmp.*,ls_code2
            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
         END IF
            
         CALL l_child_list.deleteElement(1)

      END WHILE
      LET l_cnt = l_cnt + 1
      IF l_cnt > g_max_rec AND g_error_show = 1 THEN
         EXIT FOREACH      
      END IF
   END FOREACH

   FREE master_tmp

   CALL s_transaction_end('Y','0')

END FUNCTION

PRIVATE FUNCTION abmm201_tmp_tbl_chk(ps_id,ps_id1,pi_code)
   {<Local define>}
   DEFINE ps_id       STRING
   DEFINE ps_id1      STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_id1      LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10
   {</Local define>}
   #add-point:tmp_tbl_chk段define
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point

   LET ls_id = ps_id
   LET ls_id1= ps_id1
   #此程式無root欄位:LET ls_type = ps_type

   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF
   
   IF ls_id1 IS NULL THEN
      RETURN TRUE
   END IF

   LET g_sql = " SELECT COUNT(*) FROM abmm201_tmp ",
               " WHERE bmba003 = ? AND bmba002 = ? "
               #此程式無root欄位: ," AND  = ? "

   PREPARE abmm201_get_cnt FROM g_sql
   EXECUTE abmm201_get_cnt USING ls_id,ls_id1  #此程式無root欄位:,ls_type
                                     INTO li_cnt
   FREE abmm201_get_cnt

   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE

      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM abmm201_tmp  ",
                  " WHERE bmba003 = ? AND bmba002 = ? "
                  #此程式無root欄位: ," AND  = ? "

      PREPARE abmm201_chk_exp FROM g_sql

      EXECUTE abmm201_chk_exp USING ls_id,ls_id1 #此程式無root欄位:,ls_type
                                        INTO li_code
      FREE abmm201_chk_exp

      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE abmm201_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE bmba003 = ? AND bmba002 = ? "
                     #此程式無root欄位: ," AND  = ? "
         PREPARE abmm201_upd_exp FROM g_sql
         EXECUTE abmm201_upd_exp USING ls_id,ls_id1 #此程式無root欄位:,ls_type
         FREE abmm201_upd_exp

      END IF

      RETURN FALSE
   END IF

END FUNCTION

PRIVATE FUNCTION abmm201_browser_expand(p_id)
   {<Local define>}
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         LIKE type_t.chr500
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   DEFINE l_bmba003     LIKE bmba_t.bmba003
   DEFINE l_bmba009     LIKE bmba_t.bmba009
   {</Local define>}
   #add-point:browser_expand段define
   {<point name="browser_expand.define"/>}
   #end add-point

   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF

   LET l_return = FALSE
   
   IF cl_null(g_browser[p_id].b_bmba003) THEN
      LET l_bmba003 = g_browser[p_id].b_bmba001
   ELSE
      LET l_bmba003 = g_browser[p_id].b_bmba003   
   END IF 

   LET l_keyvalue = l_bmba003
   #此程式無root欄位:LET l_typevalue = g_browser[p_id].b_

   CASE g_browser[p_id].b_expcode
      WHEN -1
         CALL g_browser.deleteElement(p_id)
      WHEN 0
         RETURN
      WHEN 1
         LET ls_source = "bmba_t"
         LET ls_exp_code = "''"
      WHEN 2
         LET ls_source = "bmba_t"
         LET ls_exp_code = "'2'"
      OTHERWISE
         LET ls_source = "bmba_t"
         LET ls_exp_code = "''"
   END CASE

   LET l_sql = " SELECT UNIQUE '','','','FALSE','','',",ls_exp_code,",bmba001,'','',bmba002,bmba003,'',bmba004,bmba005,bmba007,bmba008,bmbasite,bmba009",
               " FROM   ",ls_source,
               " WHERE  bmba001 = '", l_keyvalue,
               "' AND   bmba002 = '", g_browser[p_id].b_bmba002,
               "' AND   bmba003 <> bmba001",
               #此程式無root欄位:" AND   = '", l_typevalue,"'",
               " AND    bmbasite = '",g_site,"'",
               " AND    bmbaent = ",g_enterprise 
   IF NOT cl_null(g_bmba_m.l_date) THEN
      LET l_sql = l_sql," AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='",g_bmba_m.l_date,"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL)  "," ORDER BY bmba009"
   ELSE
      LET l_sql = l_sql," ORDER BY bmba009"
   END IF 

   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand

   LET l_id = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_browser[l_id].*,l_bmba009
      #pid=父節點id
      LET g_browser[l_id].b_pid  = g_browser[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_id   = g_browser[p_id].b_id||"."||l_cnt
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_bmba003 = g_browser[l_id].b_bmba003 CLIPPED
      CALL abmm201_desc_show(l_id)
      LET g_browser[l_id].b_hasC = abmm201_chk_hasC(l_id)
      LET l_id = l_id + 1
      CALL g_browser.insertElement(l_id)
      LET l_cnt = l_cnt + 1

      LET l_return = TRUE
   END FOREACH

   #刪除空資料
   CALL g_browser.deleteElement(l_id)
   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()

   FREE tree_expand

END FUNCTION

PRIVATE FUNCTION abmm201_browser_create(p_type)
   {<Local define>}
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   DEFINE l_cnt    LIKE type_t.num5
   {</Local define>}
   #add-point:browser_create
   {<point name="browser_create.define"/>}
   #end add-point

   #先找出所有的帳別資料
   LET g_sql = " SELECT UNIQUE bmba003,bmba002 FROM abmm201_tmp WHERE (bmba001 = ' ' ",
               " OR bmba003 IN(SELECT UNIQUE bmba001 FROM abmm201_tmp)) ORDER BY bmba003"
   PREPARE master_type FROM g_sql
   DECLARE master_typecur CURSOR FOR master_type
 
   INITIALIZE g_browser_root TO NULL
 
   LET l_ac = 1
   LET l_cnt = 1
   FOREACH master_typecur INTO g_browser[l_ac].b_bmba003,g_browser[l_ac].b_bmba002
   #確定root節點所在
      #LET g_browser_root[g_browser_root.getLength()+1] = l_ac
      LET g_browser[l_ac].b_bmba001  = ' '
      LET g_browser[l_ac].b_pid = '0' CLIPPED
      LET g_browser[l_ac].b_id = l_ac USING "<<<"
      LET g_browser[l_ac].b_exp = FALSE
      LET g_browser[l_ac].b_hasC = abmm201_chk_hasC(l_ac)
      IF NOT g_browser[l_ac].b_hasC THEN
         CONTINUE FOREACH
      END IF
      LET l_pid = g_browser[l_ac].b_id CLIPPED
      LET l_ac = l_ac + 1
      

      #抓出LV2的所有資料
      LET g_sql = " SELECT UNIQUE bmba001,'','',bmba002,bmba003,'',bmba004,bmba005,bmba007,bmba008,bmbasite,exp_code FROM abmm201_tmp a ",
                  " WHERE ",
                  "a.bmba001 = ?  AND a.bmba002 = ?",
                  " AND ",
                  " (( SELECT COUNT(*) FROM abmm201_tmp b WHERE a.bmba001 = b.bmba003 ",
                  #此程式無root欄位:" AND a. = b.",
                  ") = 0 OR ",
                  " a.bmba003 = a.bmba001 )",
                  " ORDER BY a.bmba003"
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2

      #以下為一般資料root(LV-2)
      OPEN master_getLV2cur USING g_browser[l_ac-1].b_bmba003,g_browser[l_ac-1].b_bmba002

      LET g_cnt = l_ac

      FOREACH master_getLV2cur INTO g_browser[g_cnt].b_bmba001,g_browser[g_cnt].b_bmba001_desc,g_browser[g_cnt].b_bmba001_desc_desc,g_browser[g_cnt].b_bmba002,g_browser[g_cnt].b_bmba003,g_browser[g_cnt].b_bmba003_desc,g_browser[g_cnt].b_bmba004,g_browser[g_cnt].b_bmba005,g_browser[g_cnt].b_bmba007,g_browser[g_cnt].b_bmba008,g_browser[g_cnt].b_bmbasite,g_browser[g_cnt].b_expcode
         #去除多餘空白
         #LET g_browser[g_cnt].b_bmba003 = g_browser[g_cnt].b_bmba003 CLIPPED
         LET g_browser[g_cnt].b_pid = l_pid
         LET g_browser[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
         LET g_browser[g_cnt].b_exp = FALSE
         
         LET g_browser[g_cnt].b_hasC = abmm201_chk_hasC(g_cnt)

         LET g_cnt = g_cnt + 1

         IF g_cnt > g_max_rec AND g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 9035
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
      END FOREACH
      LET l_ac = g_browser.getLength()
      LET l_cnt = l_cnt + 1
      IF l_cnt > g_max_rec AND g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9035
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH      
      END IF
   END FOREACH

   LET g_error_show = 0

   #組合描述欄位&刪除多於資料
   FOR l_ac = 1 TO g_browser.getLength()
      IF cl_null(g_browser[l_ac].b_bmba003) THEN
         CALL g_browser.deleteElement(l_ac)
         LET l_ac = l_ac - 1
      ELSE
         CALL abmm201_desc_show(l_ac)
      END IF
   END FOR
   CALL g_browser.deleteElement(l_ac)

   LET g_browser_cnt = g_browser.getLength() - g_browser_root.getLength()

#   FREE master_getLV2

END FUNCTION

PRIVATE FUNCTION abmm201_desc_show(pi_ac)
   {<Local define>}
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   {</Local define>}
   #add-point:desc_show段define
   {<point name="desc_show.define"/>}
   #end add-point

   LET li_tmp = l_ac
   LET l_ac = pi_ac


   #add-point:browser_create段desc處理

      #SELECT imaal003,imaal004 INTO g_browser[l_ac].b_bmba001_desc,g_browser[l_ac].b_bmba001_desc_desc FROM imaal_t 
      # WHERE imaal001 = g_browser[l_ac].b_bmba001
      #   AND imaal002 = g_dlang
      SELECT imaal003,imaal004 INTO g_browser[l_ac].b_bmba001_desc,g_browser[l_ac].b_bmba001_desc_desc FROM imaal_t 
       WHERE imaal001 = g_browser[l_ac].b_bmba003
         AND imaal002 = g_dlang
         AND imaalent = g_enterprise  #160905-00007#1 add
      LET g_browser[l_ac].b_show =
           g_browser[l_ac].b_bmba003
            
  #   IF cl_null(g_browser[l_ac].b_bmba001) THEN
  #      LET g_browser[l_ac].b_bmba001 = g_browser[l_ac].b_bmba003
  #      LET g_browser[l_ac].b_bmba001_desc = g_browser[l_ac].b_bmba003_desc
  #      LET g_browser[l_ac].b_bmba003 = ' '
  #      LET g_browser[l_ac].b_bmba003_desc = ''
  #   END IF 
       
   #end add-point

   LET l_ac = li_tmp

END FUNCTION

PRIVATE FUNCTION abmm201_find_node(pi_ac)
   {<Local define>}
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   DEFINE ls_pid  STRING
   {</Local define>}
   #add-point:find_node段define
   {<point name="find_node.define"/>}
   #end add-point

   LET ls_pid = g_browser[pi_ac].b_pid

   LET g_sql = " SELECT UNIQUE '','','','FALSE','','',exp_code,bmba001,'','',bmba002,bmba003,'',bmba004,bmba005,bmba007,bmba008,bmbasite ",
               " FROM abmm201_tmp ",
               " WHERE bmba001 = ? AND bmba001 <> bmba003",
               " ORDER BY bmba003"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode

   LET li_idx = pi_ac
   WHILE li_idx <= g_browser.getLength()
      IF g_browser[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_browser[li_idx].b_bmba003
         FOREACH master_getNodecur INTO g_browser[g_browser.getLength()+1].*
            CALL abmm201_desc_show(g_browser.getLength())
            LET g_browser[g_browser.getLength()].b_pid = ls_pid
            LET g_browser[g_browser.getLength()].b_id = g_browser.getLength()
            LET g_browser[g_browser.getLength()].b_hasC = abmm201_chk_hasC(g_browser.getLength())
         END FOREACH
         CALL g_browser.deleteElement(li_idx)
         CALL g_browser.deleteElement(g_browser.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF

   END WHILE

   FREE master_getNode

   RETURN g_browser.getLength()

END FUNCTION

PRIVATE FUNCTION abmm201_chk_hasC(pi_id)
   {<Local define>}
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   {</Local define>}
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define"/>}
   #end add-point
   LET li_cnt = 0
   SELECT COUNT(*) INTO li_cnt FROM bmba_t 
    WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_browser[pi_id].b_bmba003 AND bmba002 =g_browser[pi_id].b_bmba002 
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
   RETURN      
               
   LET g_sql = "SELECT COUNT(bmba001) FROM abmm201_tmp ",
               " WHERE ",
                "bmba001 = ? AND bmba002 = ? AND ",
                "exp_code <> '-1' AND bmba003 <> bmba001 "
                #此程式無root欄位: ," AND ",
                #此程式無root欄位:" = ?"

   PREPARE abmm201_temp_chk FROM g_sql

   LET g_sql = "SELECT COUNT(*) FROM bmba_t ",
               " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND ",
               "bmba003 <> bmba001 AND ",
               "bmba001 = ? AND bmba002 = ? "
               #此程式無root欄位: ," AND ",
               #此程式無root欄位:" = ?"

   PREPARE abmm201_master_chk FROM g_sql

   CASE g_browser[pi_id].b_expcode
      WHEN -1
         RETURN FALSE
      WHEN 0
         RETURN FALSE
      WHEN 1
         EXECUTE abmm201_temp_chk
           USING g_browser[pi_id].b_bmba003,g_browser[pi_id].b_bmba002
                 #此程式無root欄位:,g_browser[pi_id].b_
            INTO li_cnt
         FREE abmm201_temp_chk
      WHEN 2
         EXECUTE abmm201_master_chk
           USING g_browser[pi_id].b_bmba003,g_browser[pi_id].b_bmba002
                 #此程式無root欄位:,g_browser[pi_id].b_
            INTO li_cnt
         FREE abmm201_master_chk
      OTHERWISE
         EXECUTE abmm201_master_chk
           USING g_browser[pi_id].b_bmba003,g_browser[pi_id].b_bmba002
                 #此程式無root欄位:,g_browser[pi_id].b_
            INTO li_cnt
         FREE abmm201_master_chk
   END CASE

   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF

END FUNCTION

PRIVATE FUNCTION abmm201_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point

   LET g_bmba_m.bmba001 = g_browser[g_current_idx].b_bmba001
   LET g_bmba_m.bmba002 = g_browser[g_current_idx].b_bmba002

   LET g_bmba_m.bmba003 = g_browser[g_current_idx].b_bmba003

   LET g_bmba_m.bmba004 = g_browser[g_current_idx].b_bmba004

   LET g_bmba_m.bmba005 = g_browser[g_current_idx].b_bmba005

   LET g_bmba_m.bmba007 = g_browser[g_current_idx].b_bmba007

   LET g_bmba_m.bmba008 = g_browser[g_current_idx].b_bmba008


    SELECT UNIQUE bmba001,bmba002,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005
 INTO g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005
 FROM bmba_t
 WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_m.bmba001 AND bmba002 = g_bmba_m.bmba002 AND bmba003 = g_bmba_m.bmba003 AND bmba004 = g_bmba_m.bmba004 AND bmba005 = g_bmba_m.bmba005 AND bmba007 = g_bmba_m.bmba007 AND bmba008 = g_bmba_m.bmba008
   CALL abmm201_show()

END FUNCTION

PRIVATE FUNCTION abmm201_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point

   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point

   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)

   END IF

   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION abmm201_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point

   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmba001 = g_bmba_m.bmba001
         AND g_browser[l_i].b_bmba002 = g_bmba_m.bmba002

         AND g_browser[l_i].b_bmba003 = g_bmba_m.bmba003

         AND g_browser[l_i].b_bmba004 = g_bmba_m.bmba004

         AND g_browser[l_i].b_bmba005 = g_bmba_m.bmba005

         AND g_browser[l_i].b_bmba007 = g_bmba_m.bmba007

         AND g_browser[l_i].b_bmba008 = g_bmba_m.bmba008


         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR

   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF

   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示

END FUNCTION

PRIVATE FUNCTION abmm201_construct()
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING
   {</Local define>}
   #add-point:cs段define
   DEFINE l_wc1       STRING
   #end add-point

   #清除畫面
   CLEAR FORM
   INITIALIZE g_bmba_m.* TO NULL
   CALL g_bmea_d.clear()


   LET g_current_idx = 1
   LET g_action_choice = ""

   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL

   INITIALIZE g_wc_table1 TO NULL


   LET g_qryparam.state = 'c'

   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      INPUT g_bmba_m.l_bmea007,g_bmba_m.l_date FROM l_bmea007,l_date
   
         BEFORE INPUT 
            LET g_bmba_m.l_bmea007 = '1'
            LET g_bmba_m.l_date = cl_get_current()
   
         AFTER INPUT
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               RETURN
            END IF
            LET g_bmba_m_t.l_bmea007 = g_bmba_m.l_bmea007
            LET g_bmba_m.l_date = DATE(g_bmba_m.l_date) USING 'YYYY-MM-DD'
            IF cl_null(g_bmba_m.l_date) THEN
               LET g_bmba_m.l_date = cl_get_current()
            END IF
            LET g_bmba_m_t.l_date = g_bmba_m.l_date 
   
       END INPUT
      #單頭
      CONSTRUCT BY NAME g_wc ON bmba001,bmba002,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005

         BEFORE CONSTRUCT
     #saki  CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point

         #單頭公用欄位開窗


         #單頭一般欄位開窗
         #---------------------------<  Master  >---------------------------
         #----<<l_bmea007>>----
         #----<<l_date>>----
         #----<<bmba001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba001
            #add-point:BEFORE FIELD bmba001
            {<point name="construct.b.bmba001" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba001

            #add-point:AFTER FIELD bmba001
            {<point name="construct.a.bmba001" />}
            #END add-point


         #Ctrlp:construct.c.bmba001
         ON ACTION controlp INFIELD bmba001
            #add-point:ON ACTION controlp INFIELD bmba001
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba001  #顯示到畫面上

            NEXT FIELD bmba001                    #返回原欄位
            
            {<point name="construct.c.bmba001" />}
            #END add-point

         #----<<imaal003>>----
         #----<<imaal004>>----
         #----<<bmba002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba002
            #add-point:BEFORE FIELD bmba002
            {<point name="construct.b.bmba002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba002

            #add-point:AFTER FIELD bmba002
            {<point name="construct.a.bmba002" />}
            #END add-point


         #Ctrlp:construct.c.bmba002
#         ON ACTION controlp INFIELD bmba002
            #add-point:ON ACTION controlp INFIELD bmba002
            {<point name="construct.c.bmba002" />}
            #END add-point

         #----<<bmaa004>>----
         #----<<bmba003>>----
         #Ctrlp:construct.c.bmba003
         ON ACTION controlp INFIELD bmba003
            #add-point:ON ACTION controlp INFIELD bmba003
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba003  #顯示到畫面上

            NEXT FIELD bmba003                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD bmba003
            #add-point:BEFORE FIELD bmba003
            {<point name="construct.b.bmba003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba003

            #add-point:AFTER FIELD bmba003
            {<point name="construct.a.bmba003" />}
            #END add-point


         #----<<l_imaal003>>----
         #----<<l_imaal004>>----
         #----<<bmba004>>----
         #Ctrlp:construct.c.bmba004
         ON ACTION controlp INFIELD bmba004
            #add-point:ON ACTION controlp INFIELD bmba004
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "215"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba004  #顯示到畫面上

            NEXT FIELD bmba004                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD bmba004
            #add-point:BEFORE FIELD bmba004
            {<point name="construct.b.bmba004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba004

            #add-point:AFTER FIELD bmba004
            {<point name="construct.a.bmba004" />}
            #END add-point


         #----<<bmba007>>----
         #Ctrlp:construct.c.bmba007
         ON ACTION controlp INFIELD bmba007
            #add-point:ON ACTION controlp INFIELD bmba007
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba007  #顯示到畫面上

            NEXT FIELD bmba007                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD bmba007
            #add-point:BEFORE FIELD bmba007
            {<point name="construct.b.bmba007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba007

            #add-point:AFTER FIELD bmba007
            {<point name="construct.a.bmba007" />}
            #END add-point


         #----<<bmba008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba008
            #add-point:BEFORE FIELD bmba008
            {<point name="construct.b.bmba008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba008

            #add-point:AFTER FIELD bmba008
            {<point name="construct.a.bmba008" />}
            #END add-point


         #Ctrlp:construct.c.bmba008
#         ON ACTION controlp INFIELD bmba008
            #add-point:ON ACTION controlp INFIELD bmba008
            {<point name="construct.c.bmba008" />}
            #END add-point

         #----<<bmba011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba011
            #add-point:BEFORE FIELD bmba011
            {<point name="construct.b.bmba011" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba011

            #add-point:AFTER FIELD bmba011
            {<point name="construct.a.bmba011" />}
            #END add-point


         #Ctrlp:construct.c.bmba011
#         ON ACTION controlp INFIELD bmba011
            #add-point:ON ACTION controlp INFIELD bmba011
            {<point name="construct.c.bmba011" />}
            #END add-point

         #----<<bmba012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba012
            #add-point:BEFORE FIELD bmba012
            {<point name="construct.b.bmba012" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba012

            #add-point:AFTER FIELD bmba012
            {<point name="construct.a.bmba012" />}
            #END add-point


         #Ctrlp:construct.c.bmba012
#         ON ACTION controlp INFIELD bmba012
            #add-point:ON ACTION controlp INFIELD bmba012
            {<point name="construct.c.bmba012" />}
            #END add-point

         #----<<bmba010>>----
         #Ctrlp:construct.c.bmba010
         ON ACTION controlp INFIELD bmba010
            #add-point:ON ACTION controlp INFIELD bmba010
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba010  #顯示到畫面上

            NEXT FIELD bmba010                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD bmba010
            #add-point:BEFORE FIELD bmba010
            {<point name="construct.b.bmba010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba010

            #add-point:AFTER FIELD bmba010
            {<point name="construct.a.bmba010" />}
            #END add-point


         #----<<bmba005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba005
            #add-point:BEFORE FIELD bmba005
            {<point name="construct.b.bmba005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba005

            #add-point:AFTER FIELD bmba005
            {<point name="construct.a.bmba005" />}
            #END add-point


         #Ctrlp:construct.c.bmba005
#         ON ACTION controlp INFIELD bmba005
            #add-point:ON ACTION controlp INFIELD bmba005
            {<point name="construct.c.bmba005" />}
            #END add-point



      END CONSTRUCT
      
      CONSTRUCT BY NAME l_wc1 ON bmaa004
 
         BEFORE CONSTRUCT
    #saki   CALL cl_qbe_init()        
         #一般欄位開窗相關處理    

         ON ACTION controlp INFIELD bmaa004
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaa004  #顯示到畫面上                     
            NEXT FIELD bmaa004                    #返回原欄位
       END CONSTRUCT      

      #單身根據table分拆construct
      #160627-00002#3---mark---s
      #CONSTRUCT g_wc_table1 ON bmea007,bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea020,bmea014,bmea015,bmea016,bmea017,bmea018            #160622-00015#1 add bmea020
      #     FROM s_detail1[1].bmea007,s_detail1[1].bmea008,s_detail1[1].bmea019,s_detail1[1].bmea009,s_detail1[1].bmea010,s_detail1[1].bmea011,s_detail1[1].bmea012,s_detail1[1].bmea013,s_detail1[1].bmea020,s_detail1[1].bmea014,s_detail1[1].bmea015,s_detail1[1].bmea016,s_detail1[1].bmea017,s_detail1[1].bmea018   #160622-00015#1 add bmea020
      CONSTRUCT g_wc_table1 ON bmea007,bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018            
           FROM s_detail1[1].bmea007,s_detail1[1].bmea008,s_detail1[1].bmea019,s_detail1[1].bmea009,s_detail1[1].bmea010,s_detail1[1].bmea011,s_detail1[1].bmea012,s_detail1[1].bmea013,s_detail1[1].bmea014,s_detail1[1].bmea015,s_detail1[1].bmea016,s_detail1[1].bmea017,s_detail1[1].bmea018         
      #160627-00002#3---mark---s

         BEFORE CONSTRUCT
     #saki  CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point

       #單身公用欄位開窗相關處理


       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<bmea007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea007
            #add-point:BEFORE FIELD bmea007
            {<point name="construct.b.page1.bmea007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea007

            #add-point:AFTER FIELD bmea007
            {<point name="construct.a.page1.bmea007" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea007
#         ON ACTION controlp INFIELD bmea007
            #add-point:ON ACTION controlp INFIELD bmea007
            {<point name="construct.c.page1.bmea007" />}
            #END add-point

         #----<<bmea008>>----
         #Ctrlp:construct.c.page1.bmea008
         ON ACTION controlp INFIELD bmea008
            #add-point:ON ACTION controlp INFIELD bmea008
            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmea008  #顯示到畫面上

            NEXT FIELD bmea008                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD bmea008
            #add-point:BEFORE FIELD bmea008
            {<point name="construct.b.page1.bmea008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea008

            #add-point:AFTER FIELD bmea008
            {<point name="construct.a.page1.bmea008" />}
            #END add-point

         ON ACTION controlp INFIELD bmea019
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmea019()                       #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmea019  #顯示到畫面上
            NEXT FIELD bmea019                     #返回原欄位

         #----<<bmea009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea009
            #add-point:BEFORE FIELD bmea009
            {<point name="construct.b.page1.bmea009" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea009

            #add-point:AFTER FIELD bmea009
            {<point name="construct.a.page1.bmea009" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea009
#         ON ACTION controlp INFIELD bmea009
            #add-point:ON ACTION controlp INFIELD bmea009
            {<point name="construct.c.page1.bmea009" />}
            #END add-point

         #----<<bmea010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea010
            #add-point:BEFORE FIELD bmea010
            {<point name="construct.b.page1.bmea010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea010

            #add-point:AFTER FIELD bmea010
            {<point name="construct.a.page1.bmea010" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea010
#         ON ACTION controlp INFIELD bmea010
            #add-point:ON ACTION controlp INFIELD bmea010
            {<point name="construct.c.page1.bmea010" />}
            #END add-point

         #----<<bmea011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea011
            #add-point:BEFORE FIELD bmea011
            {<point name="construct.b.page1.bmea011" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea011

            #add-point:AFTER FIELD bmea011
            {<point name="construct.a.page1.bmea011" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea011
#         ON ACTION controlp INFIELD bmea011
            #add-point:ON ACTION controlp INFIELD bmea011
            {<point name="construct.c.page1.bmea011" />}
            #END add-point

         #----<<bmea012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea012
            #add-point:BEFORE FIELD bmea012
            {<point name="construct.b.page1.bmea012" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea012

            #add-point:AFTER FIELD bmea012
            {<point name="construct.a.page1.bmea012" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea012
#         ON ACTION controlp INFIELD bmea012
            #add-point:ON ACTION controlp INFIELD bmea012
            {<point name="construct.c.page1.bmea012" />}
            #END add-point

         #----<<bmea013>>----
         #Ctrlp:construct.c.page1.bmea013
         ON ACTION controlp INFIELD bmea013
            #add-point:ON ACTION controlp INFIELD bmea013
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmea013  #顯示到畫面上

            NEXT FIELD bmea013                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD bmea013
            #add-point:BEFORE FIELD bmea013
            {<point name="construct.b.page1.bmea013" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea013

            #add-point:AFTER FIELD bmea013
            {<point name="construct.a.page1.bmea013" />}
            #END add-point


         #----<<bmea014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea014
            #add-point:BEFORE FIELD bmea014
            {<point name="construct.b.page1.bmea014" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea014

            #add-point:AFTER FIELD bmea014
            {<point name="construct.a.page1.bmea014" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea014
#         ON ACTION controlp INFIELD bmea014
            #add-point:ON ACTION controlp INFIELD bmea014
            {<point name="construct.c.page1.bmea014" />}
            #END add-point

         #----<<bmea015>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea015
            #add-point:BEFORE FIELD bmea015
            {<point name="construct.b.page1.bmea015" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea015

            #add-point:AFTER FIELD bmea015
            {<point name="construct.a.page1.bmea015" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea015
#         ON ACTION controlp INFIELD bmea015
            #add-point:ON ACTION controlp INFIELD bmea015
            {<point name="construct.c.page1.bmea015" />}
            #END add-point

         #----<<bmea016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea016
            #add-point:BEFORE FIELD bmea016
            {<point name="construct.b.page1.bmea016" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea016

            #add-point:AFTER FIELD bmea016
            {<point name="construct.a.page1.bmea016" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea016
#         ON ACTION controlp INFIELD bmea016
            #add-point:ON ACTION controlp INFIELD bmea016
            {<point name="construct.c.page1.bmea016" />}
            #END add-point

         #----<<bmea017>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea017
            #add-point:BEFORE FIELD bmea017
            {<point name="construct.b.page1.bmea017" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea017

            #add-point:AFTER FIELD bmea017
            {<point name="construct.a.page1.bmea017" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea017
#         ON ACTION controlp INFIELD bmea017
            #add-point:ON ACTION controlp INFIELD bmea017
            {<point name="construct.c.page1.bmea017" />}
            #END add-point

         #----<<bmea018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea018
            #add-point:BEFORE FIELD bmea018
            {<point name="construct.b.page1.bmea018" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea018

            #add-point:AFTER FIELD bmea018
            {<point name="construct.a.page1.bmea018" />}
            #END add-point


         #Ctrlp:construct.c.page1.bmea018
#         ON ACTION controlp INFIELD bmea018
            #add-point:ON ACTION controlp INFIELD bmea018
            {<point name="construct.c.page1.bmea018" />}
            #END add-point



      END CONSTRUCT



      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)

      CONSTRUCT g_wc_table2 ON bmeb009
           FROM s_detail2[1].bmeb009
                      
         BEFORE CONSTRUCT
     #saki  CALL cl_qbe_display_condition(lc_qbe_sn)


 
         ON ACTION controlp INFIELD bmeb009
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = "c"
            LET g_qryparam.reqry = FALSE
            #給予arg
            LET g_qryparam.arg1 = "('2','3')" #
            CALL q_pmaa001_1()                         #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmeb009#顯示到畫面上

            NEXT FIELD bmeb009   
       
      END CONSTRUCT
      #end add-point

      BEFORE DIALOG
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point

      ON ACTION qbe_select     #條件查詢
  #saki  CALL cl_qbe_list() RETURNING lc_qbe_sn
  #saki  CALL cl_qbe_display_condition(lc_qbe_sn)

      ON ACTION qbe_save       #條件儲存
   #saki CALL cl_qbe_save()

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG

   #組合g_wc2
   LET g_wc2 = g_wc_table1


   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   IF NOT cl_null(l_wc1) THEN 
      LET g_wc = g_wc ," AND ",l_wc1
   END IF
   LET g_wc3 = g_wc_table2
   IF g_wc_table2 <> " 1=1" THEN
      LET g_wc3 = g_wc3 ," AND ", g_wc_table2
   END IF
   #end add-point

   IF INT_FLAG THEN
      RETURN
   END IF

END FUNCTION

PRIVATE FUNCTION abmm201_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point

   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""

   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()
   CALL g_bmea_d.clear()
   CALL g_bmea2_d.clear()

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count

   CALL abmm201_construct()

   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_bmba_m.* TO NULL
      LET g_wc = " 1=1"
      LET g_wc2 = " 1=1"
      RETURN
   END IF

   LET g_error_show = 1
   CALL abmm201_browser_fill()

   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = -100
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
  
   ELSE
      #CALL abmm201_fetch('F')
   END IF

END FUNCTION

PRIVATE FUNCTION abmm201_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   {</Local define>}
   #add-point:fetch段define
   DEFINE l_bmaastus  LIKE bmaa_t.bmaastus
   DEFINE l_sql       STRING
   #end add-point

   #此程式無root欄位:LET ls_chk = g_browser[g_current_idx].b_id
   #此程式無root欄位:IF ls_chk.getIndexOf('.',1) = 0 THEN
   #此程式無root欄位:   INITIALIZE g_bmba_m.* TO NULL
   #此程式無root欄位:   DISPLAY BY NAME g_bmba_m.*
   #此程式無root欄位:   CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   #此程式無root欄位:   DISPLAY '' TO FORMONLY.b_index
   #此程式無root欄位:   RETURN
   #此程式無root欄位:END IF

   IF g_browser_cnt = 0 THEN
      RETURN
   END IF

   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt
      WHEN 'P'
         IF g_current_idx > 1 THEN
            LET g_current_idx = g_current_idx - 1
         END IF
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF
      WHEN '/'
         IF (NOT g_no_ask) THEN
            CALL cl_set_act_visible("accept,cancel", TRUE)
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0

            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT

            CALL cl_set_act_visible("accept,cancel", FALSE)
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE
            END IF
         END IF

         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF

         LET g_no_ask = FALSE
   END CASE

   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt

   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx
   END IF

   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_current_idx TO FORMONLY.h_count
   CALL cl_navigator_setting(g_current_idx, g_detail_cnt)

   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF

   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF

   LET g_bmba_m.bmba001 = g_browser[g_current_idx].b_bmba001
   LET g_bmba_m.bmba002 = g_browser[g_current_idx].b_bmba002

   LET g_bmba_m.bmba003 = g_browser[g_current_idx].b_bmba003

   LET g_bmba_m.bmba004 = g_browser[g_current_idx].b_bmba004

   LET g_bmba_m.bmba005 = g_browser[g_current_idx].b_bmba005

   LET g_bmba_m.bmba007 = g_browser[g_current_idx].b_bmba007

   LET g_bmba_m.bmba008 = g_browser[g_current_idx].b_bmba008

   IF g_browser[g_current_idx].b_expcode <> 1 THEN 
      LET l_sql = " SELECT UNIQUE bmba001,bmba002,bmba003,bmba004,bmba005,bmba007,bmba008",
                  " FROM   bmba_t",
                  " LEFT JOIN bmaa_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmba001 = bmaa001 AND bmba002 = bmaa002 ",
                  " WHERE  bmba001 = '", g_browser[g_current_idx].b_show,"'",
                  " AND   bmba003 <> bmba001",
                  " AND    bmbasite = '",g_site,"'",
                  " AND    bmbaent = ",g_enterprise 
      IF NOT cl_null(g_bmba_m.l_date) THEN
         LET l_sql = l_sql," AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='",g_bmba_m.l_date,"' AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) AND ", g_wc CLIPPED," ORDER BY bmba003"
      ELSE
         LET l_sql = l_sql," AND ", g_wc CLIPPED," ORDER BY bmba003"
      END IF 
   
      PREPARE abmm201_fetch_pre FROM l_sql
      DECLARE abmm201_fetch_cur CURSOR FOR abmm201_fetch_pre
      FOREACH abmm201_fetch_cur INTO g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba005,g_bmba_m.bmba007,g_bmba_m.bmba008
         EXIT FOREACH
      END FOREACH
   END IF    

   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE bmba001,bmba002,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005
 INTO g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005
 FROM bmba_t
 WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_m.bmba001 AND bmba002 = g_bmba_m.bmba002 AND bmba003 = g_bmba_m.bmba003 AND bmba004 = g_bmba_m.bmba004 AND bmba005 = g_bmba_m.bmba005 AND bmba007 = g_bmba_m.bmba007 AND bmba008 = g_bmba_m.bmba008
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "bmba_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_bmba_m.* TO NULL
      RETURN
   END IF

   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
   CALL cl_set_act_visible("statechange,insert,delete,reproduce", FALSE)
   
   SELECT bmaastus INTO l_bmaastus FROM bmaa_t 
    WHERE bmaaent = g_enterprise
      AND bmaasite = g_site
      AND bmaa001 = g_bmba_m.bmba001
      AND bmaa002 = g_bmba_m.bmba002
    
   IF g_site != 'ALL' THEN
      CALL cl_set_act_visible("modify",FALSE)
   ELSE
      IF l_bmaastus = 'Y' AND abmm201_act_oocq007() THEN 
         CALL cl_set_act_visible("modify",FALSE)
      ELSE   
         CALL cl_set_act_visible("modify",TRUE)
      END IF
   END IF


   #LET g_data_owner =
   #LET g_data_group =

   #重新顯示
   CALL abmm201_show()

END FUNCTION

PRIVATE FUNCTION abmm201_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point

   CLEAR FORM                                #清畫面欄位內容
   CALL g_bmea_d.clear()          #清除陣列


   INITIALIZE g_bmba_m.* LIKE bmba_t.*             #DEFAULT 設定

   LET g_bmba001_t = NULL
   LET g_bmba002_t = NULL

   LET g_bmba003_t = NULL

   LET g_bmba004_t = NULL

   LET g_bmba005_t = NULL

   LET g_bmba007_t = NULL

   LET g_bmba008_t = NULL


   LET g_bmba001_t = NULL

   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)


      #append欄位給值


      #一般欄位給值


      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point

      CALL abmm201_input("a")

      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point

      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmba_m.* = g_bmba_m_t.*
         CALL abmm201_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT WHILE
      END IF

      CALL g_bmea_d.clear()


      LET g_rec_b = 0
      EXIT WHILE

   END WHILE

END FUNCTION

PRIVATE FUNCTION abmm201_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point

   IF g_bmba_m.bmba001 IS NULL
   OR g_bmba_m.bmba002 IS NULL

   OR g_bmba_m.bmba003 IS NULL

   OR g_bmba_m.bmba004 IS NULL

   OR g_bmba_m.bmba005 IS NULL

   OR g_bmba_m.bmba007 IS NULL

   OR g_bmba_m.bmba008 IS NULL


   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF

    SELECT UNIQUE bmba001,bmba002,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005
 INTO g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005
 FROM bmba_t
 WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_m.bmba001 AND bmba002 = g_bmba_m.bmba002 AND bmba003 = g_bmba_m.bmba003 AND bmba004 = g_bmba_m.bmba004 AND bmba005 = g_bmba_m.bmba005 AND bmba007 = g_bmba_m.bmba007 AND bmba008 = g_bmba_m.bmba008

   ERROR ""

   LET g_bmba001_t = g_bmba_m.bmba001
   LET g_bmba002_t = g_bmba_m.bmba002

   LET g_bmba003_t = g_bmba_m.bmba003

   LET g_bmba004_t = g_bmba_m.bmba004

   LET g_bmba005_t = g_bmba_m.bmba005

   LET g_bmba007_t = g_bmba_m.bmba007

   LET g_bmba008_t = g_bmba_m.bmba008


   CALL s_transaction_begin()

   OPEN abmm201_cl USING g_enterprise, g_site,g_bmba_m.bmba001
                                                       ,g_bmba_m.bmba002

                                                       ,g_bmba_m.bmba003

                                                       ,g_bmba_m.bmba004

                                                       ,g_bmba_m.bmba005

                                                       ,g_bmba_m.bmba007

                                                       ,g_bmba_m.bmba008


   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN abmm201_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abmm201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #鎖住將被更改或取消的資料
   FETCH abmm201_cl INTO g_bmba_m.bmba001,g_bmba_m.imaal003,g_bmba_m.imaal004,g_bmba_m.bmba002,g_bmba_m.bmaa004,g_bmba_m.bmba003,g_bmba_m.l_imaal003,g_bmba_m.l_imaal004,g_bmba_m.bmba004,g_bmba_m.bmba004_desc,g_bmba_m.bmba007,g_bmba_m.bmba007_desc,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005

   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bmba_m.bmba001
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abmm201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF



   CALL abmm201_show()
   WHILE TRUE
      LET g_bmba001_t = g_bmba_m.bmba001
      LET g_bmba002_t = g_bmba_m.bmba002

      LET g_bmba003_t = g_bmba_m.bmba003

      LET g_bmba004_t = g_bmba_m.bmba004

      LET g_bmba005_t = g_bmba_m.bmba005

      LET g_bmba007_t = g_bmba_m.bmba007

      LET g_bmba008_t = g_bmba_m.bmba008



      #寫入修改者/修改日期資訊(單頭)


      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point

      CALL abmm201_input("u")     #欄位更改

      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point

      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmba_m.* = g_bmba_m_t.*
         CALL abmm201_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT WHILE
      END IF

      #若單頭key欄位有變更
      IF g_bmba_m.bmba001 != g_bmba001_t
      OR g_bmba_m.bmba002 != g_bmba002_t

      OR g_bmba_m.bmba003 != g_bmba003_t

      OR g_bmba_m.bmba004 != g_bmba004_t

      OR g_bmba_m.bmba005 != g_bmba005_t

      OR g_bmba_m.bmba007 != g_bmba007_t

      OR g_bmba_m.bmba008 != g_bmba008_t


      THEN
         CALL s_transaction_begin()

         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point

         #更新單身key值
         UPDATE bmea_t SET bmea001 = g_bmba_m.bmba001
                                      ,bmea002 = g_bmba_m.bmba002

                                      ,bmea003 = g_bmba_m.bmba003

                                      ,bmea004 = g_bmba_m.bmba004

                                      ,bmea005 = g_bmba_m.bmba007

                                      ,bmea006 = g_bmba_m.bmba008

                                      ,bmeasite = g_site


          WHERE bmeaent = g_enterprise AND bmea001 = g_bmba001_t
            AND bmea002 = g_bmba002_t

            AND bmea003 = g_bmba003_t

            AND bmea004 = g_bmba004_t

            AND bmea005 = g_bmba005_t

            AND bmea006 = g_bmba007_t

            AND bmeasite = g_bmba008_t



         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point

         IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = ""
             LET g_errparam.popup = TRUE
             CALL cl_err()

             CALL s_transaction_end('N','0')
             CONTINUE WHILE
         END IF

         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point



         #UPDATE 多語言table key值


         CALL s_transaction_end('Y','0')
      END IF

      EXIT WHILE
   END WHILE

   #修改歷程記錄
   IF NOT cl_log_modified_record(g_bmba_m.bmba001,g_site) THEN
      CALL s_transaction_end('N','0')
   END IF

   CLOSE abmm201_cl
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-U
   CALL cl_flow_notify(g_bmba_m.bmba001,'U')

END FUNCTION

PRIVATE FUNCTION abmm201_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   DEFINE l_ac1            LIKE type_t.num5
   DEFINE l_ac1_t          LIKE type_t.num5
   DEFINE l_sql            STRING
   DEFINE l_pmaa001        LIKE pmaa_t.pmaa001
   DEFINE l_pmaastus       LIKE pmaa_t.pmaastus
   DEFINE l_imaa006        LIKE imaa_t.imaa006
   DEFINE l_success        LIKE type_t.num5
   DEFINE l_rate           LIKE type_t.num26_10
   DEFINE l_flag1          LIKE type_t.chr1
   DEFINE l_imaastus       LIKE imaa_t.imaastus
   DEFINE l_imaa005        LIKE imaa_t.imaa005
   #end add-point

   CALL cl_set_head_visible("","YES")

   LET l_insert = FALSE
   LET g_action_choice = ""

   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point
   #LET g_forupd_sql = "SELECT bmea007,bmea008,'','',bmea019,'',bmea009,bmea010,bmea011,bmea012,bmea013,bmea020,bmea014,bmea015,bmea016,bmea017,bmea018 FROM bmea_t WHERE bmeaent=? AND bmeasite=? AND bmea001=? AND bmea002=? AND bmea003=? AND bmea004=? AND bmea005=? AND bmea006=? AND bmea007=? AND bmea008=? AND bmea019=? FOR UPDATE"   #160622-00015#1 add bmea020  #160627-00002#3 mark
   LET g_forupd_sql = "SELECT bmea007,bmea008,'','',bmea019,'',bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018 FROM bmea_t WHERE bmeaent=? AND bmeasite=? AND bmea001=? AND bmea002=? AND bmea003=? AND bmea004=? AND bmea005=? AND bmea006=? AND bmea007=? AND bmea008=? AND bmea019=? FOR UPDATE"   #160627-00002#3 add 
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm201_bcl CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT bmeb009,'' FROM bmeb_t WHERE bmebent=? AND bmebsite=? AND bmeb001=? AND bmeb002=? AND bmeb003=? AND bmeb004=? AND bmeb005=? AND bmeb006=? AND bmeb007=? AND bmeb008=? AND bmeb010=? AND bmeb009 = ? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm201_bcl2 CURSOR FROM g_forupd_sql
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'

   #控制key欄位可否輸入
   CALL abmm201_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL abmm201_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point

   DISPLAY BY NAME g_bmba_m.l_bmea007,g_bmba_m.l_date,g_bmba_m.bmba001,g_bmba_m.imaal003,g_bmba_m.imaal004,g_bmba_m.bmba002,g_bmba_m.bmaa004,g_bmba_m.bmba003,g_bmba_m.l_imaal003,g_bmba_m.l_imaal004,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005
   
WHILE TRUE
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭段
      INPUT BY NAME g_bmba_m.bmba001,g_bmba_m.imaal003,g_bmba_m.imaal004,g_bmba_m.bmba002,g_bmba_m.bmaa004,g_bmba_m.bmba003,g_bmba_m.l_imaal003,g_bmba_m.l_imaal004,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005
         ATTRIBUTE(WITHOUT DEFAULTS)

         #自訂ACTION


         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF

            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point

         #----<<bmba001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba001
            #add-point:BEFORE FIELD bmba001
            {<point name="input.b.bmba001" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba001

            #add-point:AFTER FIELD bmba001
            IF g_bmba_m.bmba001 <> g_bmba_m.bmba003 THEN
               IF NOT ap_chk_isExist(g_bmba_m.bmba001,"SELECT COUNT(*) FROM bmba_t WHERE bmbaent='"||g_enterprise||"' AND bmba003 = ? ",'tree-002',1)  THEN #160905-00007#1 add
                  NEXT FIELD bmba001
               END IF
            END IF

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba001
            #add-point:ON CHANGE bmba001
            {<point name="input.g.bmba001" />}
            #END add-point

         #----<<imaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD imaal003

            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point

         #----<<imaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD imaal004

            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point

         #----<<bmba002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba002
            #add-point:BEFORE FIELD bmba002
            {<point name="input.b.bmba002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba002

            #add-point:AFTER FIELD bmba002
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t  OR g_bmba_m.bmba002 != g_bmba002_t  OR g_bmba_m.bmba003 != g_bmba003_t  OR g_bmba_m.bmba004 != g_bmba004_t  OR g_bmba_m.bmba005 != g_bmba005_t  OR g_bmba_m.bmba007 != g_bmba007_t  OR g_bmba_m.bmba008 != g_bmba008_t ))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_m.bmba004 ||"' AND "|| " to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba_m.bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_m.bmba008 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba002
            #add-point:ON CHANGE bmba002
            {<point name="input.g.bmba002" />}
            #END add-point

         #----<<bmaa004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmaa004
            #add-point:BEFORE FIELD bmaa004
            {<point name="input.b.bmaa004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmaa004

            #add-point:AFTER FIELD bmaa004
            {<point name="input.a.bmaa004" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmaa004
            #add-point:ON CHANGE bmaa004
            {<point name="input.g.bmaa004" />}
            #END add-point

         #----<<bmba003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba003
            #add-point:BEFORE FIELD bmba003
            {<point name="input.b.bmba003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba003

            #add-point:AFTER FIELD bmba003
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t  OR g_bmba_m.bmba002 != g_bmba002_t  OR g_bmba_m.bmba003 != g_bmba003_t  OR g_bmba_m.bmba004 != g_bmba004_t  OR g_bmba_m.bmba005 != g_bmba005_t  OR g_bmba_m.bmba007 != g_bmba007_t  OR g_bmba_m.bmba008 != g_bmba008_t ))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_m.bmba004 ||"' AND "|| " to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba_m.bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_m.bmba008 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba003
            #add-point:ON CHANGE bmba003
            {<point name="input.g.bmba003" />}
            #END add-point

         #----<<l_imaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD l_imaal003
            #add-point:BEFORE FIELD l_imaal003
            {<point name="input.b.l_imaal003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD l_imaal003

            #add-point:AFTER FIELD l_imaal003
            {<point name="input.a.l_imaal003" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE l_imaal003
            #add-point:ON CHANGE l_imaal003
            {<point name="input.g.l_imaal003" />}
            #END add-point

         #----<<l_imaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD l_imaal004
            #add-point:BEFORE FIELD l_imaal004
            {<point name="input.b.l_imaal004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD l_imaal004

            #add-point:AFTER FIELD l_imaal004
            {<point name="input.a.l_imaal004" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE l_imaal004
            #add-point:ON CHANGE l_imaal004
            {<point name="input.g.l_imaal004" />}
            #END add-point

         #----<<bmba004>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmba004

            #add-point:AFTER FIELD bmba004
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t  OR g_bmba_m.bmba002 != g_bmba002_t  OR g_bmba_m.bmba003 != g_bmba003_t  OR g_bmba_m.bmba004 != g_bmba004_t  OR g_bmba_m.bmba005 != g_bmba005_t  OR g_bmba_m.bmba007 != g_bmba007_t  OR g_bmba_m.bmba008 != g_bmba008_t ))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_m.bmba004 ||"' AND "|| " to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba_m.bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_m.bmba008 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_m.bmba004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_m.bmba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_m.bmba004_desc
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD bmba004
            #add-point:BEFORE FIELD bmba004
            {<point name="input.b.bmba004" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE bmba004
            #add-point:ON CHANGE bmba004
            {<point name="input.g.bmba004" />}
            #END add-point

         #----<<bmba007>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmba007

            #add-point:AFTER FIELD bmba007
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t  OR g_bmba_m.bmba002 != g_bmba002_t  OR g_bmba_m.bmba003 != g_bmba003_t  OR g_bmba_m.bmba004 != g_bmba004_t  OR g_bmba_m.bmba005 != g_bmba005_t  OR g_bmba_m.bmba007 != g_bmba007_t  OR g_bmba_m.bmba008 != g_bmba008_t ))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_m.bmba004 ||"' AND "|| " to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba_m.bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_m.bmba008 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_m.bmba007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_m.bmba007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_m.bmba007_desc
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD bmba007
            #add-point:BEFORE FIELD bmba007
            {<point name="input.b.bmba007" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE bmba007
            #add-point:ON CHANGE bmba007
            {<point name="input.g.bmba007" />}
            #END add-point

         #----<<bmba008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba008
            #add-point:BEFORE FIELD bmba008
            {<point name="input.b.bmba008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba008

            #add-point:AFTER FIELD bmba008
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t  OR g_bmba_m.bmba002 != g_bmba002_t  OR g_bmba_m.bmba003 != g_bmba003_t  OR g_bmba_m.bmba004 != g_bmba004_t  OR g_bmba_m.bmba005 != g_bmba005_t  OR g_bmba_m.bmba007 != g_bmba007_t  OR g_bmba_m.bmba008 != g_bmba008_t ))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_m.bmba004 ||"' AND "|| " to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba_m.bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_m.bmba008 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba008
            #add-point:ON CHANGE bmba008
            {<point name="input.g.bmba008" />}
            #END add-point

         #----<<bmba011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba011
            #add-point:BEFORE FIELD bmba011
            {<point name="input.b.bmba011" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba011

            #add-point:AFTER FIELD bmba011
            {<point name="input.a.bmba011" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba011
            #add-point:ON CHANGE bmba011
            {<point name="input.g.bmba011" />}
            #END add-point

         #----<<bmba012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba012
            #add-point:BEFORE FIELD bmba012
            {<point name="input.b.bmba012" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba012

            #add-point:AFTER FIELD bmba012
            {<point name="input.a.bmba012" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba012
            #add-point:ON CHANGE bmba012
            {<point name="input.g.bmba012" />}
            #END add-point

         #----<<bmba010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba010
            #add-point:BEFORE FIELD bmba010
            {<point name="input.b.bmba010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba010

            #add-point:AFTER FIELD bmba010
            {<point name="input.a.bmba010" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba010
            #add-point:ON CHANGE bmba010
            {<point name="input.g.bmba010" />}
            #END add-point

         #----<<bmba005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmba005
            #add-point:BEFORE FIELD bmba005
            {<point name="input.b.bmba005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmba005

            #add-point:AFTER FIELD bmba005
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t  OR g_bmba_m.bmba002 != g_bmba002_t  OR g_bmba_m.bmba003 != g_bmba003_t  OR g_bmba_m.bmba004 != g_bmba004_t  OR g_bmba_m.bmba005 != g_bmba005_t  OR g_bmba_m.bmba007 != g_bmba007_t  OR g_bmba_m.bmba008 != g_bmba008_t ))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND bmbasite = '" ||g_site|| "' AND "||"bmba001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmba002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmba003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_m.bmba004 ||"' AND "|| " to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba_m.bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_m.bmba008 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmba005
            #add-point:ON CHANGE bmba005
            {<point name="input.g.bmba005" />}
            #END add-point

 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<l_bmea007>>----
         #Ctrlp:input.c.l_bmea007
#         ON ACTION controlp INFIELD l_bmea007
            #add-point:ON ACTION controlp INFIELD l_bmea007
            {<point name="input.c.l_bmea007" />}
            #END add-point

         #----<<l_date>>----
         #Ctrlp:input.c.l_date
#         ON ACTION controlp INFIELD l_date
            #add-point:ON ACTION controlp INFIELD l_date
            {<point name="input.c.l_date" />}
            #END add-point

         #----<<bmba001>>----
         #Ctrlp:input.c.bmba001
#         ON ACTION controlp INFIELD bmba001
            #add-point:ON ACTION controlp INFIELD bmba001
            {<point name="input.c.bmba001" />}
            #END add-point

         #----<<imaal003>>----
         #Ctrlp:input.c.imaal003
#         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point

         #----<<imaal004>>----
         #Ctrlp:input.c.imaal004
#         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point

         #----<<bmba002>>----
         #Ctrlp:input.c.bmba002
#         ON ACTION controlp INFIELD bmba002
            #add-point:ON ACTION controlp INFIELD bmba002
            {<point name="input.c.bmba002" />}
            #END add-point

         #----<<bmaa004>>----
         #Ctrlp:input.c.bmaa004
#         ON ACTION controlp INFIELD bmaa004
            #add-point:ON ACTION controlp INFIELD bmaa004
            {<point name="input.c.bmaa004" />}
            #END add-point

         #----<<bmba003>>----
         #Ctrlp:input.c.bmba003
         ON ACTION controlp INFIELD bmba003
            #add-point:ON ACTION controlp INFIELD bmba003
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_m.bmba003             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_bmba_m.bmba003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_m.bmba003 TO bmba003              #顯示到畫面上

            NEXT FIELD bmba003                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<l_imaal003>>----
         #Ctrlp:input.c.l_imaal003
#         ON ACTION controlp INFIELD l_imaal003
            #add-point:ON ACTION controlp INFIELD l_imaal003
            {<point name="input.c.l_imaal003" />}
            #END add-point

         #----<<l_imaal004>>----
         #Ctrlp:input.c.l_imaal004
#         ON ACTION controlp INFIELD l_imaal004
            #add-point:ON ACTION controlp INFIELD l_imaal004
            {<point name="input.c.l_imaal004" />}
            #END add-point

         #----<<bmba004>>----
         #Ctrlp:input.c.bmba004
         ON ACTION controlp INFIELD bmba004
            #add-point:ON ACTION controlp INFIELD bmba004
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_m.bmba004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "215" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmba_m.bmba004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_m.bmba004 TO bmba004              #顯示到畫面上

            NEXT FIELD bmba004                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<bmba007>>----
         #Ctrlp:input.c.bmba007
         ON ACTION controlp INFIELD bmba007
            #add-point:ON ACTION controlp INFIELD bmba007
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_m.bmba007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "221" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmba_m.bmba007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_m.bmba007 TO bmba007              #顯示到畫面上

            NEXT FIELD bmba007                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<bmba008>>----
         #Ctrlp:input.c.bmba008
#         ON ACTION controlp INFIELD bmba008
            #add-point:ON ACTION controlp INFIELD bmba008
            {<point name="input.c.bmba008" />}
            #END add-point

         #----<<bmba011>>----
         #Ctrlp:input.c.bmba011
#         ON ACTION controlp INFIELD bmba011
            #add-point:ON ACTION controlp INFIELD bmba011
            {<point name="input.c.bmba011" />}
            #END add-point

         #----<<bmba012>>----
         #Ctrlp:input.c.bmba012
#         ON ACTION controlp INFIELD bmba012
            #add-point:ON ACTION controlp INFIELD bmba012
            {<point name="input.c.bmba012" />}
            #END add-point

         #----<<bmba010>>----
         #Ctrlp:input.c.bmba010
         ON ACTION controlp INFIELD bmba010
            #add-point:ON ACTION controlp INFIELD bmba010
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_m.bmba010             #給予default值

            #給予arg

            CALL q_ooca001()                                #呼叫開窗

            LET g_bmba_m.bmba010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_m.bmba010 TO bmba010              #顯示到畫面上

            NEXT FIELD bmba010                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<bmba005>>----
         #Ctrlp:input.c.bmba005
#         ON ACTION controlp INFIELD bmba005
            #add-point:ON ACTION controlp INFIELD bmba005
            {<point name="input.c.bmba005" />}
            #END add-point

 #欄位開窗

         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF

            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_bmba_m.bmba001
                            ,g_bmba_m.bmba002

                            ,g_bmba_m.bmba003

                            ,g_bmba_m.bmba004

                            ,g_bmba_m.bmba005

                            ,g_bmba_m.bmba007

                            ,g_bmba_m.bmba008



            IF p_cmd <> 'u' THEN
               LET l_count = 1

               SELECT COUNT(*) INTO l_count FROM bmba_t
                WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_m.bmba001
                  AND bmba002 = g_bmba_m.bmba002

                  AND bmba003 = g_bmba_m.bmba003

                  AND bmba004 = g_bmba_m.bmba004

                  AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba_m.bmba005

                  AND bmba007 = g_bmba_m.bmba007

                  AND bmba008 = g_bmba_m.bmba008


               IF l_count = 0 THEN

                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point

                  INSERT INTO bmba_t (bmbaent, bmbasite,bmba001,bmba002,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005)
                  VALUES (g_enterprise, g_site,g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005) # DISK WRITE

                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "g_bmba_m"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CONTINUE DIALOG
                  END IF



                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')

                  LET p_cmd = 'u'
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = '!'
                  LET g_errparam.extend =  g_bmba_m.bmba001
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  NEXT FIELD bmba001
               END IF
            ELSE

               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point

               UPDATE bmba_t SET (bmba001,bmba002,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005) = (g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005)
                WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba001_t
                  AND bmba002 = g_bmba002_t

                  AND bmba003 = g_bmba003_t

                  AND bmba004 = g_bmba004_t

                  AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_t

                  AND bmba007 = g_bmba007_t

                  AND bmba008 = g_bmba008_t



               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "g_bmba_m"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                  CALL s_transaction_end('N','0')
               ELSE


                  #add-point:單頭修改後
                  {<point name="input.head.a_update"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF


            END IF
           #controlp
      END INPUT

      #Page1 預設值產生於此處
      INPUT ARRAY g_bmea_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         #自訂ACTION


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_bmea_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL abmm201_b_fill()
            LET g_rec_b = g_bmea_d.getLength()

         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx
               
            CALL s_transaction_begin()
            OPEN abmm201_cl USING g_enterprise, g_site,g_bmba_m.bmba001
                                                                ,g_bmba_m.bmba002

                                                                ,g_bmba_m.bmba003

                                                                ,g_bmba_m.bmba004

                                                                ,g_bmba_m.bmba005

                                                                ,g_bmba_m.bmba007

                                                                ,g_bmba_m.bmba008


            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN abmm201_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE abmm201_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            LET g_rec_b = g_bmea_d.getLength()

            IF g_rec_b >= l_ac
              
               AND NOT cl_null(g_bmea_d[l_ac].bmea008)


            THEN
               LET l_cmd='u'
               LET g_bmea_d_t.* = g_bmea_d[l_ac].*  #BACKUP
               LET g_bmea_d_o.* = g_bmea_d[l_ac].*  #160622-00015#1   
               CALL abmm201_set_entry_b(l_cmd)
               CALL abmm201_set_no_entry_b(l_cmd)
               IF NOT abmm201_lock_b("bmea_t","1") THEN
                  LET l_lock_sw='Y'
               ELSE
                  #FETCH abmm201_bcl INTO g_bmea_d[l_ac].bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea008_desc,g_bmea_d[l_ac].bmea008_desc_desc,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea019_desc,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea020,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018   #160622-00015#1 add bmea020  #160627-00002#3 mark
                  FETCH abmm201_bcl INTO g_bmea_d[l_ac].bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea008_desc,g_bmea_d[l_ac].bmea008_desc_desc,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea019_desc,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018   #160627-00002#3 add 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_bmea_d_t.bmea007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF 
                  SELECT bmea018 INTO g_bmea_d[l_ac].bmea018 FROM bmea_t
                   WHERE bmeaent = g_enterprise
                     AND bmeasite = g_site
                     AND bmea001 = g_bmba_m.bmba001
                     AND bmea002 = g_bmba_m.bmba002
                     AND bmea003 = g_bmba_m.bmba003
                     AND bmea004 = g_bmba_m.bmba004
                     AND bmea005 = g_bmba_m.bmba007
                     AND bmea006 = g_bmba_m.bmba008
                     AND bmea007 = g_bmea_d[l_ac].bmea007
                     AND bmea008 = g_bmea_d[l_ac].bmea008 
                     AND bmea019 = g_bmea_d[l_ac].bmea019                 
                  LET g_bfill = "N"
                  CALL abmm201_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
               INITIALIZE g_bmea_d[l_ac].* TO NULL
               INITIALIZE g_bmea_d_t.* TO NULL
               IF g_site = 'ALL' THEN
                  LET g_bmea_d[l_ac].bmea018 = '1'
               ELSE 
                  LET g_bmea_d[l_ac].bmea018 = '3'
               END IF 
               LET g_bmea_d[l_ac].bmea011 = "1"
               LET g_bmea_d[l_ac].bmea012 = "1"
               LET g_bmea_d[l_ac].bmea014 = "N"
               LET g_bmea_d[l_ac].bmea015 = "99"
               LET g_bmea_d[l_ac].bmea016 = "1"
               LET g_bmea_d[l_ac].bmea017 = "100"
               LET g_bmea_d[l_ac].bmea009 = cl_get_current()              
            END IF

            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            LET g_flag1 = 'Y'
            CALL abmm201_b_fill_1(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
            LET g_flag1 = 'N' 
            NEXT FIELD bmea008
            #end add-point

            #其他table資料備份(確定是否更改用)


            #其他table進行lock


         BEFORE INSERT

            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmea_d[l_ac].* TO NULL
                  LET g_bmea_d[l_ac].bmea011 = "1"
      LET g_bmea_d[l_ac].bmea012 = "1"
      LET g_bmea_d[l_ac].bmea014 = "N"      
      #LET g_bmea_d[l_ac].bmea020 = "N"    #160622-00015#1  #160627-00002#3 mark
      LET g_bmea_d[l_ac].bmea015 = "99"
      LET g_bmea_d[l_ac].bmea016 = "1"
      LET g_bmea_d[l_ac].bmea017 = "100"
      LET g_bmea_d[l_ac].bmea018 = "1"
      LET g_bmea_d[l_ac].bmea009 = cl_get_current()


            LET g_bmea_d_t.* = g_bmea_d[l_ac].*     #新輸入資料
            LET g_bmea_d_o.* = g_bmea_d[l_ac].*  #160622-00015#1
            CALL cl_show_fld_cont()
            CALL abmm201_set_entry_b(l_cmd)
            CALL abmm201_set_no_entry_b(l_cmd)
            #公用欄位給值(單身)

            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            IF NOT cl_null(g_bmea_d[l_ac].bmea008)THEN
               LET l_rate = ''
               LET l_imaa006 = ''  
               SELECT imaa006 INTO l_imaa006
                 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmea_d[l_ac].bmea008
               IF NOT cl_null(g_bmea_d[l_ac].bmea013) AND NOT cl_null(l_imaa006) THEN
                  CALL s_aimi190_get_convert(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea013,l_imaa006) RETURNING l_success,l_rate
                  IF l_success = FALSE THEN
                     NEXT FIELD bmea013
                  END IF 
               END IF
               IF cl_null(l_imaa006) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00021'
                  LET g_errparam.extend = l_imaa006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                                                                                                                
                  NEXT FIELD bmea013
               END IF                     
            END IF 

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM bmea_t
             WHERE bmeaent = g_enterprise AND bmea001 = g_bmba_m.bmba001
               AND bmea002 = g_bmba_m.bmba002

               AND bmea003 = g_bmba_m.bmba003

               AND bmea004 = g_bmba_m.bmba004

               AND bmea005 = g_bmba_m.bmba007

               AND bmea006 = g_bmba_m.bmba008

              # AND bmeasite = g_site
               AND bmea007 = g_bmba_m.l_bmea007 
               AND bmea008 = g_bmea_d[l_ac].bmea008 
               AND bmea019 = g_bmea_d[l_ac].bmea019



            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point

                              INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_bmba_m.bmba001
               LET gs_keys[2] = g_bmba_m.bmba002
               LET gs_keys[3] = g_bmba_m.bmba003
               LET gs_keys[4] = g_bmba_m.bmba004
               LET gs_keys[5] = g_bmba_m.bmba007
               LET gs_keys[6] = g_bmba_m.bmba008              
               LET gs_keys[7] = g_bmba_m.l_bmea007 
               LET gs_keys[8] = g_bmea_d[l_ac].bmea008
               LET gs_keys[9] = g_bmea_d[l_ac].bmea019
               CALL abmm201_insert_b('bmea_t',gs_keys,"'1'")

               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_bmea_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bmea_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmm201_b_fill()
               #資料多語言用-增/改

               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_bmea_d[l_ac].bmea007)
               AND NOT cl_null(g_bmea_d_t.bmea008)


               THEN

               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point

               DELETE FROM bmea_t
                WHERE bmeaent = g_enterprise AND bmea001 = g_bmba_m.bmba001 AND
                                          bmea002 = g_bmba_m.bmba002 AND

                                          bmea003 = g_bmba_m.bmba003 AND

                                          bmea004 = g_bmba_m.bmba004 AND

                                          bmea005 = g_bmba_m.bmba007 AND

                                          bmea006 = g_bmba_m.bmba008 AND

                                          bmeasite = g_site AND


                      bmea007 = g_bmba_m.l_bmea007
                  AND bmea008 = g_bmea_d_t.bmea008
                  AND bmea019 = g_bmea_d_t.bmea019



               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bmea_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1

                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
               DELETE FROM bmeb_t
                WHERE bmebent = g_enterprise AND bmeb001 = g_bmba_m.bmba001 AND
                      bmeb002 = g_bmba_m.bmba002 AND
               
                      bmeb003 = g_bmba_m.bmba003 AND
               
                      bmeb004 = g_bmba_m.bmba004 AND
               
                      bmeb005 = g_bmba_m.bmba007 AND
               
                      bmeb006 = g_bmba_m.bmba008 AND
               
                      bmebsite = g_site AND
                      bmeb007 = g_bmba_m.l_bmea007
                  AND bmeb008 = g_bmea_d_t.bmea008
                  AND bmeb010 = g_bmea_d_t.bmea019               
               #IF g_prog = 'abmm201' THEN        #160705-00042#8 160712 by sakura mark
               IF g_prog MATCHES 'abmm201' THEN   #160705-00042#8 160712 by sakura add
                  DELETE FROM bmea_t
                   WHERE bmeaent = g_enterprise 
                    AND bmea001 = g_bmba_m.bmba001
                    AND bmea002 = g_bmba_m.bmba002 
                    AND bmea003 = g_bmba_m.bmba003 
                    AND bmea004 = g_bmba_m.bmba004 
                    AND bmea005 = g_bmba_m.bmba007 
                    AND bmea006 = g_bmba_m.bmba008 
                    AND bmeasite <> g_site                 
                    AND bmea007 = g_bmba_m.l_bmea007
                    AND bmea008 = g_bmea_d_t.bmea008
                    AND bmea019 = g_bmea_d_t.bmea019
                    
                  DELETE FROM bmeb_t
                   WHERE bmebent = g_enterprise 
                     AND bmeb001 = g_bmba_m.bmba001 
                     AND bmeb002 = g_bmba_m.bmba002  
                     AND bmeb003 = g_bmba_m.bmba003                  
                     AND bmeb004 = g_bmba_m.bmba004                   
                     AND bmeb005 = g_bmba_m.bmba007                  
                     AND bmeb006 = g_bmba_m.bmba008                   
                     AND bmebsite <> g_site 
                     AND bmeb007 = g_bmba_m.l_bmea007
                     AND bmeb008 = g_bmea_d_t.bmea008
                     AND bmeb010 = g_bmea_d_t.bmea019
               END IF
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmeb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b1 = g_rec_b1-1 
               END IF                   
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE abmm201_bcl
               LET l_count = g_bmea_d.getLength()
            END IF

                           INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_bmba_m.bmba001
               LET gs_keys[2] = g_bmba_m.bmba002
               LET gs_keys[3] = g_bmba_m.bmba003
               LET gs_keys[4] = g_bmba_m.bmba004
               LET gs_keys[5] = g_bmba_m.bmba007
               LET gs_keys[6] = g_bmba_m.bmba008
               LET gs_keys[7] = g_bmba_m.l_bmea007 
               LET gs_keys[8] = g_bmea_d[l_ac].bmea008
               LET gs_keys[9] = g_bmea_d[l_ac].bmea019


         AFTER DELETE
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
            #CALL abmm201_delete_b('bmea_t',gs_keys,"'1'")

         #---------------------<  Detail: page1  >---------------------
         #----<<bmea007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea007
            #add-point:BEFORE FIELD bmea007
            {<point name="input.b.page1.bmea007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea007

            #add-point:AFTER FIELD bmea007
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) AND NOT cl_null(g_bmea_d[l_ac].bmea007) AND NOT cl_null(g_bmea_d[l_ac].bmea008) AND g_bmea_d[l_ac].bmea019 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t OR g_bmba_m.bmba002 != g_bmba002_t OR g_bmba_m.bmba003 != g_bmba003_t OR g_bmba_m.bmba004 != g_bmba004_t OR g_bmba_m.bmba005 != g_bmba005_t OR g_bmba_m.bmba007 != g_bmba007_t OR g_bmba_m.bmba008 != g_bmba008_t OR g_bmea_d[l_ac].bmea007 != g_bmea_d_t.bmea007 OR g_bmea_d[l_ac].bmea008 != g_bmea_d_t.bmea008 OR g_bmea_d[l_ac].bmea019 != g_bmea_d_t.bmea019))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND "||"bmea001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmea002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmea003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmea004 = '"||g_bmba_m.bmba004 ||"' AND "|| "bmea005 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmea006 = '"||g_bmba_m.bmba008 ||"' AND "|| "bmea007 = '"||g_bmba_m.l_bmea007 ||"' AND "|| "bmea008 = '"||g_bmea_d[l_ac].bmea008 ||"' AND "|| "bmea019 = '"||g_bmea_d[l_ac].bmea019 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmea007
            #add-point:ON CHANGE bmea007
            {<point name="input.g.page1.bmea007" />}
            #END add-point

         #----<<bmea008>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmea008

            #add-point:AFTER FIELD bmea008
            #此段落由子樣板a05產生
            CALL abmm201_bmea008_desc()
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) AND NOT cl_null(g_bmea_d[l_ac].bmea007) AND NOT cl_null(g_bmea_d[l_ac].bmea008) AND g_bmea_d[l_ac].bmea019 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t OR g_bmba_m.bmba002 != g_bmba002_t OR g_bmba_m.bmba003 != g_bmba003_t OR g_bmba_m.bmba004 != g_bmba004_t OR g_bmba_m.bmba005 != g_bmba005_t OR g_bmba_m.bmba007 != g_bmba007_t OR g_bmba_m.bmba008 != g_bmba008_t OR g_bmea_d[l_ac].bmea007 != g_bmba_m.l_bmea007 OR g_bmea_d[l_ac].bmea008 != g_bmea_d_t.bmea008 OR g_bmea_d[l_ac].bmea019 != g_bmea_d_t.bmea019))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND "||"bmea001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmea002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmea003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmea004 = '"||g_bmba_m.bmba004 ||"' AND "|| "bmea005 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmea006 = '"||g_bmba_m.bmba008 ||"' AND "|| "bmea007 = '"||g_bmba_m.l_bmea007 ||"' AND "|| "bmea008 = '"||g_bmea_d[l_ac].bmea008 ||"' AND "|| "bmea019 = '"||g_bmea_d[l_ac].bmea019 ||"'",'std-00004',1) THEN
                     LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                     CALL abmm201_bmea008_desc()                     
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmea_d[l_ac].bmea008) THEN 
               IF NOT ap_chk_isExist(g_bmea_d[l_ac].bmea008,"SELECT COUNT(*) FROM imaa_t WHERE imaaent = '" ||g_enterprise||"' AND imaa001 = ? ","aim-00001",1 ) THEN  #160905-00007#1 add
                  LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                  CALL abmm201_bmea008_desc() 
                  NEXT FIELD bmea008
               END IF
               SELECT imaastus INTO l_imaastus FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmea_d[l_ac].bmea008
               IF l_imaastus = 'N' THEN
                  INITIALIZE g_errparam TO NULL
                  #LET g_errparam.code = 'aim-00121' #160318-00005#5 mark
                  LET g_errparam.code = 'sub-01302'  #160318-00005#5 add
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea008
                  #160318-00005#5 --s add
                  LET g_errparam.replace[1] = 'aimm200'
                  LET g_errparam.replace[2] = cl_get_progname('aimm200',g_lang,"2")
                  LET g_errparam.exeprog = 'aimm200'
                  #160318-00005#5 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
               
                  LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                  CALL abmm201_bmea008_desc() 
                  NEXT FIELD bmea008
               END IF
               IF l_imaastus = 'X' THEN
                  INITIALIZE g_errparam TO NULL
                  #LET g_errparam.code = 'aim-00002' #160318-00005#5 mark
                  LET g_errparam.code = 'sub-01302'  #160318-00005#5 add
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea008
                  #160318-00005#5 --s add
                  LET g_errparam.replace[1] = 'aimm200'
                  LET g_errparam.replace[2] = cl_get_progname('aimm200',g_lang,"2")
                  LET g_errparam.exeprog = 'aimm200'
                  #160318-00005#5 --e add
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
               
                  LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                  CALL abmm201_bmea008_desc() 
                  NEXT FIELD bmea008
               END IF
               CALL abmm201_bmea008_chk()
               IF NOT cl_null(g_errno) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                  CALL abmm201_bmea008_desc() 
                  NEXT FIELD bmea008
               END IF
               CALL abmm201_set_entry_b(p_cmd)
               CALL abmm201_set_no_entry_b(p_cmd)
               
               LET l_imaa005 = ''  #特征类别
               SELECT imaa005 INTO l_imaa005
                 FROM imaa_t
                WHERE imaaent  = g_enterprise
                  AND imaa001  = g_bmea_d[l_ac].bmea008
               IF cl_null(l_imaa005) THEN
                  #不做产品特征管理
                  LET g_bmea_d[l_ac].bmea019 = ' '
                  DISPLAY BY NAME g_bmea_d[l_ac].bmea019
               ELSE
                  IF NOT cl_null(g_bmea_d[l_ac].bmea019) THEN
                     #检查产品特征            
                     IF NOT s_feature_check(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019) THEN
                        LET g_bmea_d[l_ac].bmea019 = g_bmea_d_t.bmea019
                        
                        CALL s_feature_description(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
                           RETURNING l_success,g_bmea_d[l_ac].bmea019_desc
                        IF l_success THEN
                           DISPLAY BY NAME g_bmea_d[l_ac].bmea019_desc
                        END IF
                        
                        NEXT FIELD bmea019
                     END IF
                     #显示产品特征说明               
                     CALL s_feature_description(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
                        RETURNING l_success,g_bmea_d[l_ac].bmea019_desc
                     IF l_success THEN
                        DISPLAY BY NAME g_bmea_d[l_ac].bmea019_desc
                     END IF
                  END IF
               END IF
               #160627-00002#3---mark---s
               ##160622-00015#1---add---s
               #IF g_bmea_d[l_ac].bmea008 != g_bmea_d_o.bmea008 OR cl_null(g_bmea_d_o.bmea008) THEN 
               #   SELECT imaf034 INTO g_bmea_d[l_ac].bmea020
               #     FROM imaf_t 
               #    WHERE imafent = g_enterprise
               #      AND imafsite = g_site
               #      AND imaf001 = g_bmea_d[l_ac].bmea008                      
               #END IF
               ##160622-00015#1---add---e 
               #160627-00002#3---mark---e               
            END IF
            CALL abmm201_set_entry_b(p_cmd)
            CALL abmm201_set_no_entry_b(p_cmd)
            #LET g_bmea_d_o.bmea008 = g_bmea_d[l_ac].bmea008   #160622-00015#1  #160627-00002#3 mark
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD bmea008
            #add-point:BEFORE FIELD bmea008
            {<point name="input.b.page1.bmea008" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE bmea008
            #add-point:ON CHANGE bmea008
            {<point name="input.g.page1.bmea008" />}
            #END add-point

         AFTER FIELD bmea019
            IF  NOT cl_null(g_bmba_m.bmba001) AND NOT cl_null(g_bmba_m.bmba002) AND NOT cl_null(g_bmba_m.bmba003) AND NOT cl_null(g_bmba_m.bmba004) AND NOT cl_null(g_bmba_m.bmba005) AND NOT cl_null(g_bmba_m.bmba007) AND NOT cl_null(g_bmba_m.bmba008) AND NOT cl_null(g_bmea_d[l_ac].bmea007) AND NOT cl_null(g_bmea_d[l_ac].bmea008) AND g_bmea_d[l_ac].bmea019 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmba_m.bmba001 != g_bmba001_t OR g_bmba_m.bmba002 != g_bmba002_t OR g_bmba_m.bmba003 != g_bmba003_t OR g_bmba_m.bmba004 != g_bmba004_t OR g_bmba_m.bmba005 != g_bmba005_t OR g_bmba_m.bmba007 != g_bmba007_t OR g_bmba_m.bmba008 != g_bmba008_t OR g_bmea_d[l_ac].bmea007 != g_bmba_m.l_bmea007 OR g_bmea_d[l_ac].bmea008 != g_bmea_d_t.bmea008 OR g_bmea_d[l_ac].bmea019 != g_bmea_d_t.bmea019))) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND "||"bmea001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmea002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmea003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmea004 = '"||g_bmba_m.bmba004 ||"' AND "|| "bmea005 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmea006 = '"||g_bmba_m.bmba008 ||"' AND "|| "bmea007 = '"||g_bmba_m.l_bmea007 ||"' AND "|| "bmea008 = '"||g_bmea_d[l_ac].bmea008 ||"' AND "|| "bmea019 = '"||g_bmea_d[l_ac].bmea019 ||"'",'std-00004',1) THEN
                     LET g_bmea_d[l_ac].bmea019 = g_bmea_d_t.bmea019

                     CALL s_feature_description(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
                        RETURNING l_success,g_bmea_d[l_ac].bmea019_desc
                     IF l_success THEN
                        DISPLAY BY NAME g_bmea_d[l_ac].bmea019_desc
                     END IF
                  
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmea_d[l_ac].bmea019) AND NOT cl_null(g_bmea_d[l_ac].bmea008) THEN
               #检查产品特征            
               IF NOT s_feature_check(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019) THEN
                  LET g_bmea_d[l_ac].bmea019 = g_bmea_d_t.bmea019
                  
                  CALL s_feature_description(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
                     RETURNING l_success,g_bmea_d[l_ac].bmea019_desc
                  IF l_success THEN
                     DISPLAY BY NAME g_bmea_d[l_ac].bmea019_desc
                  END IF
                  
                  NEXT FIELD bmea019
               END IF
               #151224-00025#1 tsungyung --- add start ---
               IF NOT s_feature_direct_input(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d_t.bmea019,'',g_site) THEN
                  NEXT FIELD CURRENT
               END IF       
               #151224-00025#1 tsungyung --- add end   ---               
               #显示产品特征说明               
               CALL s_feature_description(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
                  RETURNING l_success,g_bmea_d[l_ac].bmea019_desc
               IF l_success THEN
                  DISPLAY BY NAME g_bmea_d[l_ac].bmea019_desc
               END IF
            END IF
         
         #----<<bmea009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea009
            #add-point:BEFORE FIELD bmea009
            {<point name="input.b.page1.bmea009" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea009
            IF NOT cl_null(g_bmea_d[l_ac].bmea009) AND NOT cl_null(g_bmea_d[l_ac].bmea010) THEN 
               IF g_bmea_d[l_ac].bmea009 > g_bmea_d[l_ac].bmea010 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00122'
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea009
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].bmea009 = g_bmea_d_t.bmea009
                  NEXT FIELD bmea009
                END IF
             END IF                
         


         #此段落由子樣板a04產生
         ON CHANGE bmea009
            #add-point:ON CHANGE bmea009
            {<point name="input.g.page1.bmea009" />}
            #END add-point

         #----<<bmea010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea010
            #add-point:BEFORE FIELD bmea010
            {<point name="input.b.page1.bmea010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea010
            IF NOT cl_null(g_bmea_d[l_ac].bmea009) AND NOT cl_null(g_bmea_d[l_ac].bmea010) THEN 
               IF g_bmea_d[l_ac].bmea009 > g_bmea_d[l_ac].bmea010 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00122'
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea010
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].bmea010 = g_bmea_d_t.bmea010
                  NEXT FIELD bmea010
                END IF
             END IF 


         #此段落由子樣板a04產生
         ON CHANGE bmea010
            #add-point:ON CHANGE bmea010
            {<point name="input.g.page1.bmea010" />}
            #END add-point

         #----<<bmea011>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmea011
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmea_d[l_ac].bmea011,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmea011
            END IF


            #add-point:AFTER FIELD bmea011
            IF NOT cl_null(g_bmea_d[l_ac].bmea011) THEN
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD bmea011
            #add-point:BEFORE FIELD bmea011
            {<point name="input.b.page1.bmea011" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE bmea011
            #add-point:ON CHANGE bmea011
            {<point name="input.g.page1.bmea011" />}
            #END add-point

         #----<<bmea012>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmea012
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmea_d[l_ac].bmea012,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmea012
            END IF


            #add-point:AFTER FIELD bmea012
            IF NOT cl_null(g_bmea_d[l_ac].bmea012) THEN
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD bmea012
            #add-point:BEFORE FIELD bmea012
            {<point name="input.b.page1.bmea012" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE bmea012
            #add-point:ON CHANGE bmea012
            {<point name="input.g.page1.bmea012" />}
            #END add-point

         #----<<bmea013>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea013
            #add-point:BEFORE FIELD bmea013
            {<point name="input.b.page1.bmea013" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea013
            IF NOT cl_null(g_bmea_d[l_ac].bmea013) THEN
               IF NOT ap_chk_isExist(g_bmea_d[l_ac].bmea013,"SELECT COUNT(*) FROM ooca_t WHERE oocaent = '" ||g_enterprise||"' AND ooca001 = ? ","aim-00004",1 ) THEN                                  
                  LET g_bmea_d[l_ac].bmea013 = g_bmea_d_t.bmea013                                                                                                                    
                  NEXT FIELD bmea013                                                                                                                                                 
               END IF   
               #IF NOT ap_chk_isExist(g_bmea_d[l_ac].bmea013,"SELECT COUNT(*) FROM ooca_t WHERE oocaent = '" ||g_enterprise||"' AND ooca001 = ? AND oocastus = 'Y' ","aim-00005",1 ) THEN         #160318-00005#5 mark
               IF NOT ap_chk_isExist(g_bmea_d[l_ac].bmea013,"SELECT COUNT(*) FROM ooca_t WHERE oocaent = '" ||g_enterprise||"' AND ooca001 = ? AND oocastus = 'Y' ","sub-01302",'aooi250' ) THEN  #160318-00005#5 add
                  LET g_bmea_d[l_ac].bmea013 = g_bmea_d_t.bmea013                                                                                                                    
                  NEXT FIELD bmea013                                                                                                                                                 
               END IF
               LET l_rate = ''
               LET l_imaa006 = ''  
               IF NOT cl_null(g_bmea_d[l_ac].bmea008) THEN
                  SELECT imaa006 INTO l_imaa006
                    FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_bmea_d[l_ac].bmea008
                  IF NOT cl_null(g_bmea_d[l_ac].bmea013) AND NOT cl_null(l_imaa006) THEN
                     CALL s_aimi190_get_convert(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea013,l_imaa006) RETURNING l_success,l_rate
                     IF l_success = FALSE THEN
                        LET g_bmea_d[l_ac].bmea013 = g_bmea_d_t.bmea013                                                                                                                    
                        NEXT FIELD bmea013 
                     END IF 
                  END IF
                  IF cl_null(l_imaa006) THEN 
                     INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00021'
                  LET g_errparam.extend = l_imaa006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                     LET g_bmea_d[l_ac].bmea013 = g_bmea_d_t.bmea013                                                                                                                    
                     NEXT FIELD bmea013 
                  END IF                     
               END IF              
            END IF   

         #此段落由子樣板a04產生
         ON CHANGE bmea013
            #add-point:ON CHANGE bmea013
            {<point name="input.g.page1.bmea013" />}
            #END add-point
                   
         
         #----<<bmea014>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea014
            #add-point:BEFORE FIELD bmea014
            {<point name="input.b.page1.bmea014" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea014

            #add-point:AFTER FIELD bmea014
            {<point name="input.a.page1.bmea014" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmea014
            #add-point:ON CHANGE bmea014
            {<point name="input.g.page1.bmea014" />}
            #END add-point

         #----<<bmea015>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmea015
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmea_d[l_ac].bmea015,"0.000","1","99.000","1","azz-00087",1) THEN
               NEXT FIELD bmea015
            END IF


            #add-point:AFTER FIELD bmea015
            IF NOT cl_null(g_bmea_d[l_ac].bmea015) THEN
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD bmea015
            #add-point:BEFORE FIELD bmea015
            {<point name="input.b.page1.bmea015" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE bmea015
            #add-point:ON CHANGE bmea015
            {<point name="input.g.page1.bmea015" />}
            #END add-point

         #----<<bmea016>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea016
            #add-point:BEFORE FIELD bmea016
            {<point name="input.b.page1.bmea016" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea016
            IF g_bmea_d[l_ac].bmea016 = '2' THEN 
               LET g_bmea_d[l_ac].bmea017 = 100
            END IF 
            CALL abmm201_set_entry_b(p_cmd)
            CALL abmm201_set_no_entry_b(p_cmd)

         #此段落由子樣板a04產生
         ON CHANGE bmea016
            #add-point:ON CHANGE bmea016
            {<point name="input.g.page1.bmea016" />}
            #END add-point

         #----<<bmea017>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmea017
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmea_d[l_ac].bmea017,"0.000","1","100.000","1","azz-00087",1) THEN
               NEXT FIELD bmea017
            END IF


            #add-point:AFTER FIELD bmea017
            IF NOT cl_null(g_bmea_d[l_ac].bmea017) THEN
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD bmea017

         #此段落由子樣板a04產生
         ON CHANGE bmea017
            #add-point:ON CHANGE bmea017
            {<point name="input.g.page1.bmea017" />}
            #END add-point

         #----<<bmea018>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmea018
            #add-point:BEFORE FIELD bmea018
            {<point name="input.b.page1.bmea018" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD bmea018

            #add-point:AFTER FIELD bmea018
            {<point name="input.a.page1.bmea018" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE bmea018
            #add-point:ON CHANGE bmea018
            {<point name="input.g.page1.bmea018" />}
            #END add-point


         #---------------------<  Detail: page1  >---------------------
         #----<<bmea007>>----
         #Ctrlp:input.c.page1.bmea007
#         ON ACTION controlp INFIELD bmea007
            #add-point:ON ACTION controlp INFIELD bmea007
            {<point name="input.c.page1.bmea007" />}
            #END add-point

         #----<<bmea008>>----
         #Ctrlp:input.c.page1.bmea008
         ON ACTION controlp INFIELD bmea008
            #add-point:ON ACTION controlp INFIELD bmea008
#此段落由子樣板a07產生
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bmea_d[l_ac].bmea008             #給予default值
            #給予arg
            CALL q_imaa001_2()                                #呼叫開窗
            LET g_bmea_d[l_ac].bmea008 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bmea_d[l_ac].bmea008 TO bmea008              #顯示到畫面上
            NEXT FIELD bmea008                          #返回原欄位

          {#ADP版次:1#}
            #END add-point
         ON ACTION controlp INFIELD bmea019
            CALL s_feature_single(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_site,'')
               RETURNING l_success,g_bmea_d[l_ac].bmea019
            IF NOT l_success THEN
               LET g_bmea_d[l_ac].bmea019 = ' '
            END IF
            DISPLAY g_bmea_d[l_ac].bmea019 TO bmea019              #顯示到畫面上
            NEXT FIELD bmea019                          #返回原欄位
            


         #----<<bmea009>>----
         #Ctrlp:input.c.page1.bmea009
#         ON ACTION controlp INFIELD bmea009
            #add-point:ON ACTION controlp INFIELD bmea009
            {<point name="input.c.page1.bmea009" />}
            #END add-point

         #----<<bmea010>>----
         #Ctrlp:input.c.page1.bmea010
#         ON ACTION controlp INFIELD bmea010
            #add-point:ON ACTION controlp INFIELD bmea010
            {<point name="input.c.page1.bmea010" />}
            #END add-point

         #----<<bmea011>>----
         #Ctrlp:input.c.page1.bmea011
#         ON ACTION controlp INFIELD bmea011
            #add-point:ON ACTION controlp INFIELD bmea011
            {<point name="input.c.page1.bmea011" />}
            #END add-point

         #----<<bmea012>>----
         #Ctrlp:input.c.page1.bmea012
#         ON ACTION controlp INFIELD bmea012
            #add-point:ON ACTION controlp INFIELD bmea012
            {<point name="input.c.page1.bmea012" />}
            #END add-point

         #----<<bmea013>>----
         #Ctrlp:input.c.page1.bmea013
         ON ACTION controlp INFIELD bmea013
            #add-point:ON ACTION controlp INFIELD bmea013
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmea_d[l_ac].bmea013             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_bmea_d[l_ac].bmea013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmea_d[l_ac].bmea013 TO bmea013              #顯示到畫面上

            NEXT FIELD bmea013                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<bmea014>>----
         #Ctrlp:input.c.page1.bmea014
#         ON ACTION controlp INFIELD bmea014
            #add-point:ON ACTION controlp INFIELD bmea014
            {<point name="input.c.page1.bmea014" />}
            #END add-point

         #----<<bmea015>>----
         #Ctrlp:input.c.page1.bmea015
#         ON ACTION controlp INFIELD bmea015
            #add-point:ON ACTION controlp INFIELD bmea015
            {<point name="input.c.page1.bmea015" />}
            #END add-point

         #----<<bmea016>>----
         #Ctrlp:input.c.page1.bmea016
#         ON ACTION controlp INFIELD bmea016
            #add-point:ON ACTION controlp INFIELD bmea016
            {<point name="input.c.page1.bmea016" />}
            #END add-point

         #----<<bmea017>>----
         #Ctrlp:input.c.page1.bmea017
#         ON ACTION controlp INFIELD bmea017
            #add-point:ON ACTION controlp INFIELD bmea017
            {<point name="input.c.page1.bmea017" />}
            #END add-point

         #----<<bmea018>>----
         #Ctrlp:input.c.page1.bmea018
#         ON ACTION controlp INFIELD bmea018
            #add-point:ON ACTION controlp INFIELD bmea018
            {<point name="input.c.page1.bmea018" />}
            #END add-point



         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_bmea_d[l_ac].* = g_bmea_d_t.*
               CLOSE abmm201_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF
            IF NOT cl_null(g_bmea_d[l_ac].bmea008)THEN
               LET l_rate = ''
               LET l_imaa006 = ''  
               SELECT imaa006 INTO l_imaa006
                 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmea_d[l_ac].bmea008
               IF NOT cl_null(g_bmea_d[l_ac].bmea013) AND NOT cl_null(l_imaa006) THEN
                  CALL s_aimi190_get_convert(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea013,l_imaa006) RETURNING l_success,l_rate
                  IF l_success = FALSE THEN
                     LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                     CALL abmm201_bmea008_desc() 
                     NEXT FIELD bmea008
                  END IF 
               END IF
               IF cl_null(l_imaa006) THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00021'
                  LET g_errparam.extend = l_imaa006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                     LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                     CALL abmm201_bmea008_desc()                                                                                                                 
                  NEXT FIELD bmea008
               END IF                     
            END IF                           
         

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_bmea_d[l_ac].bmea007
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bmea_d[l_ac].* = g_bmea_d_t.*
            ELSE

               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point

               #寫入修改者/修改日期資訊(單身)

               IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
               #IF g_prog = 'abmm201' THEN        #160705-00042#8 160712 by sakura mark
               IF g_prog MATCHES 'abmm201' THEN   #160705-00042#8 160712 by sakura add
                  #UPDATE bmea_t SET (bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,bmea007,bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea020,bmea014,bmea015,bmea016,bmea017,bmea018) = (g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmea_d[l_ac].bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea020,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)   #160622-00015#1 add bmea020  #160627-00002#3 mark
                  UPDATE bmea_t SET (bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,bmea007,bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018) = (g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmea_d[l_ac].bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)   #160627-00002#3
                   WHERE bmeaent = g_enterprise AND bmea001 = g_bmba_m.bmba001
                     AND bmea002 = g_bmba_m.bmba002
                     AND bmea003 = g_bmba_m.bmba003
                     AND bmea004 = g_bmba_m.bmba004
                     AND bmea005 = g_bmba_m.bmba007
                     AND bmea006 = g_bmba_m.bmba008
                     AND bmeasite <> g_site
                     AND bmea007 = g_bmba_m.l_bmea007 #項次
                     AND bmea008 = g_bmea_d_t.bmea008
                     AND bmea019 = g_bmea_d_t.bmea019
               END IF

               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmea_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].* = g_bmea_d_t.*
               ELSE
                                 INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_bmba_m.bmba001
               LET gs_keys_bak[1] = g_bmba001_t
               LET gs_keys[2] = g_bmba_m.bmba002
               LET gs_keys_bak[2] = g_bmba002_t
               LET gs_keys[3] = g_bmba_m.bmba003
               LET gs_keys_bak[3] = g_bmba003_t
               LET gs_keys[4] = g_bmba_m.bmba004
               LET gs_keys_bak[4] = g_bmba004_t
               LET gs_keys[5] = g_bmba_m.bmba007
               LET gs_keys_bak[5] = g_bmba007_t
               LET gs_keys[6] = g_bmba_m.bmba008
               LET gs_keys_bak[6] = g_bmba008_t
               LET gs_keys[7] = g_bmba_m.l_bmea007 
               LET gs_keys_bak[7] = g_bmea_d_t.bmea007
               LET gs_keys[8] = g_bmea_d[l_ac].bmea008
               LET gs_keys_bak[8] = g_bmea_d_t.bmea008
               LET gs_keys[9] = g_bmea_d[l_ac].bmea019
               LET gs_keys_bak[9] = g_bmea_d_t.bmea019
               CALL abmm201_update_b('bmea_t',gs_keys,gs_keys_bak,"'1'")
                  #資料多語言用-增/改

               END IF

               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               UPDATE bmeb_t SET bmeb008 = g_bmea_d[l_ac].bmea008,
                                 bmeb010 = g_bmea_d[l_ac].bmea019
                WHERE bmebent = g_enterprise AND bmeb001 = g_bmba_m.bmba001
                  AND bmeb002 = g_bmba_m.bmba002
                  AND bmeb003 = g_bmba_m.bmba003
                  AND bmeb004 = g_bmba_m.bmba004
                  AND bmeb005 = g_bmba_m.bmba007
                  AND bmeb006 = g_bmba_m.bmba008
                  #AND bmebsite = g_site
                  AND bmeb007 = g_bmba_m.l_bmea007
                  AND bmeb008 = g_bmea_d_t.bmea008
                  AND bmeb010 = g_bmea_d_t.bmea019
                IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmeb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
               END IF                  
               #end add-point

            END IF

         AFTER ROW
            CALL abmm201_unlock_b("bmea_t","1")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock


         AFTER INPUT
            #add-point:input段after input
            {<point name="input.body.after_input"/>}
            IF cl_null(g_bmea_d[l_ac].bmea008) THEN
               NEXT FIELD bmea008
            END IF
            #end add-point

      END INPUT



       INPUT ARRAY g_bmea2_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b1,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         
         BEFORE INPUT
            IF g_bmea_d[l_ac].bmea014 != 'Y' THEN
               LET l_flag1 ='Y'
               EXIT DIALOG
            END IF
            
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmea2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
            LET g_flag1 = 'Y'
            CALL abmm201_b_fill_1(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
            LET g_flag1 = 'N'
            LET g_rec_b1= g_bmea2_d.getLength()
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac1 = ARR_CURR()
            LET g_detail_idx = l_ac1
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac1 TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmm201_cl USING g_enterprise, g_site,g_bmba_m.bmba001
                                                                ,g_bmba_m.bmba002

                                                                ,g_bmba_m.bmba003

                                                                ,g_bmba_m.bmba004

                                                                ,g_bmba_m.bmba005

                                                                ,g_bmba_m.bmba007

                                                                ,g_bmba_m.bmba008


            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN abmm201_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE abmm201_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b1= g_bmea2_d.getLength()
            
            IF g_rec_b1>= l_ac1 
               AND NOT cl_null(g_bmea2_d[l_ac1].bmeb009) 

            THEN
               LET l_cmd='u'
               LET g_bmea2_d_t.* = g_bmea2_d[l_ac1].*  #BACKUP
               CALL abmm201_set_entry_b(l_cmd)
               CALL abmm201_set_no_entry_b(l_cmd)
               OPEN abmm201_bcl2 USING g_enterprise,g_site,g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,
                                       g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.l_bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea2_d[l_ac1].bmeb009
            
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "abmm201_bcl2"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmm201_bcl2 INTO g_bmea2_d[l_ac1].bmeb009,g_bmea2_d[l_ac1].bmeb009_desc
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_bmea2_d_t.bmeb009
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
                  CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_bmea2_d[l_ac1].bmeb009_desc = '', g_rtn_fields[1] , ''
                  DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc                  				  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF 
           
         BEFORE INSERT

            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmea2_d[l_ac1].* TO NULL
            LET g_bmea2_d_t.* = g_bmea2_d[l_ac1].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmm201_set_entry_b(l_cmd)
            CALL abmm201_set_no_entry_b(l_cmd)
   

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM bmeb_t
             WHERE bmebent = g_enterprise AND bmeb001 = g_bmba_m.bmba001
               AND bmeb002 = g_bmba_m.bmba002

               AND bmeb003 = g_bmba_m.bmba003

               AND bmeb004 = g_bmba_m.bmba004

               AND bmeb005 = g_bmba_m.bmba007

               AND bmeb006 = g_bmba_m.bmba008

               #AND bmebsite = g_site
               AND bmeb007 = g_bmba_m.l_bmea007
               AND bmeb008 = g_bmea_d[l_ac].bmea008 
               AND bmeb010 = g_bmea_d[l_ac].bmea019
               AND bmeb009 = g_bmea2_d[l_ac1].bmeb009 
               
            IF l_count = 0 THEN
               IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
               INSERT INTO bmeb_t
                  (bmebent,bmebsite,
                   bmeb001,bmeb002,bmeb003,bmeb004,bmeb005,bmeb006,
                   bmeb007,bmeb008,bmeb010
                   ,bmeb009)
            VALUES(g_enterprise, g_site,
                   g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,
                   g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmea_d[l_ac].bmea007,
                   g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea2_d[l_ac1].bmeb009)
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmeb_t"
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
               END IF
               CALL abmm201_allsite('2',l_ac1)
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_bmea2_d[l_ac1].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmeb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b1 = g_rec_b1 + 1
            END IF           
            
      BEFORE DELETE  
         IF NOT cl_null(g_bmea2_d[l_ac1].bmeb009) THEN

            IF NOT cl_ask_del_detail() THEN
               CANCEL DELETE
            END IF
            IF l_lock_sw = "Y" THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               CANCEL DELETE
            END IF

            DELETE FROM bmeb_t
             WHERE bmebent = g_enterprise AND bmeb001 = g_bmba_m.bmba001 AND
                   bmeb002 = g_bmba_m.bmba002 AND

                   bmeb003 = g_bmba_m.bmba003 AND

                   bmeb004 = g_bmba_m.bmba004 AND

                   bmeb005 = g_bmba_m.bmba007 AND

                   bmeb006 = g_bmba_m.bmba008 AND

                   #bmebsite = g_site AND
                   bmeb007 = g_bmba_m.l_bmea007
               AND bmeb008 = g_bmea_d_t.bmea008
               AND bmeb010 = g_bmea_d_t.bmea019
               AND bmeb009 = g_bmea2_d_t.bmeb009
               
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmeb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL DELETE   
            ELSE
               LET g_rec_b1 = g_rec_b1-1
               CALL s_transaction_end('Y','0')
            END IF 
            CLOSE abmm201_bcl2
            LET l_count = g_bmea2_d.getLength()
         END IF 
            
              
      AFTER DELETE
         
      AFTER FIELD bmeb009
        IF NOT cl_null(g_bmea2_d[l_ac1].bmeb009) THEN
           INITIALIZE g_ref_fields TO NULL
           LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
           CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
           LET g_bmea2_d[l_ac1].bmeb009_desc = '', g_rtn_fields[1] , ''
           DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc
           
           IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmea2_d[l_ac1].bmeb009 != g_bmea2_d_t.bmeb009))) THEN 
              IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmeb_t WHERE "||"bmebent = '" ||g_enterprise|| "' AND "||"bmeb001 = '"||g_bmba_m.bmba001 ||"' AND "|| "bmeb002 = '"||g_bmba_m.bmba002 ||"' AND "|| "bmeb003 = '"||g_bmba_m.bmba003 ||"' AND "|| "bmeb004 = '"||g_bmba_m.bmba004 ||"' AND "|| "bmeb005 = '"||g_bmba_m.bmba007 ||"' AND "|| "bmeb006 = '"||g_bmba_m.bmba008 ||"' AND "|| "bmeb007 = '"||g_bmba_m.l_bmea007 ||"' AND "|| "bmeb008 = '"||g_bmea_d[l_ac].bmea008 ||"' AND "|| "bmeb010 = '"||g_bmea_d[l_ac].bmea019 ||"' AND "|| "bmeb009 = '"||g_bmea2_d[l_ac1].bmeb009 ||"'",'std-00004',0) THEN
                 LET  g_bmea2_d[l_ac1].bmeb009 = g_bmea2_d_t.bmeb009
                 INITIALIZE g_ref_fields TO NULL
                 LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
                 CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
                 LET g_bmea2_d[l_ac1].bmeb009_desc = '', g_rtn_fields[1] , ''
                 DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc                 
                 NEXT FIELD bmeb009
              END IF
           END IF
           
           LET l_pmaa001 = ""
           LET l_pmaastus = ""
           SELECT pmaa001,pmaastus INTO l_pmaa001,l_pmaastus FROM pmaa_t 
            WHERE pmaaent = g_enterprise
              AND pmaa001 = g_bmea2_d[l_ac1].bmeb009
              AND pmaa002 IN ('2','3')
           IF cl_null(l_pmaa001) THEN 
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = 'abm-00034'
              LET g_errparam.extend = l_pmaa001
              LET g_errparam.popup = TRUE
              CALL cl_err()

              LET  g_bmea2_d[l_ac1].bmeb009 = g_bmea2_d_t.bmeb009
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
              CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_bmea2_d[l_ac1].bmeb009_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc  
              NEXT FIELD bmeb009
           END IF
           IF l_pmaastus != 'Y' THEN
              INITIALIZE g_errparam TO NULL
              #LET g_errparam.code = 'abm-00035' #160318-00005#5 mark
              LET g_errparam.code = 'sub-01302'  #160318-00005#5 add
              LET g_errparam.extend = l_pmaa001
              #160318-00005#5 --s add
              LET g_errparam.replace[1] = 'apmm100'
              LET g_errparam.replace[2] = cl_get_progname('apmm100',g_lang,"2")
              LET g_errparam.exeprog = 'apmm100'
              #160318-00005#5 --e add
              LET g_errparam.popup = TRUE
              CALL cl_err()

              LET  g_bmea2_d[l_ac1].bmeb009 = g_bmea2_d_t.bmeb009
              INITIALIZE g_ref_fields TO NULL
              LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
              CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
              LET g_bmea2_d[l_ac1].bmeb009_desc = '', g_rtn_fields[1] , ''
              DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc  
              NEXT FIELD bmeb009
           END IF
        END IF   
     
      ON ACTION controlp INFIELD bmeb009
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = "i"
         LET g_qryparam.reqry = FALSE
         LET g_qryparam.default1 = g_bmea2_d[l_ac1].bmeb009
         #給予arg
         LET g_qryparam.arg1 = "('2','3')" #
         CALL q_pmaa001_1()                         #呼叫開窗
         LET g_bmea2_d[l_ac1].bmeb009 = g_qryparam.return1  
         DISPLAY g_bmea2_d[l_ac1].bmeb009 TO bmeb009#顯示到畫面上

         NEXT FIELD bmeb009         
      
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
               CLOSE abmm201_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_bmea_d[l_ac].bmea008
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
            ELSE 
              UPDATE bmeb_t SET bmeb009 = g_bmea2_d[l_ac1].bmeb009
                WHERE bmebent = g_enterprise AND bmeb001 = g_bmba_m.bmba001
                  AND bmeb002 = g_bmba_m.bmba002

                  AND bmeb003 = g_bmba_m.bmba003

                  AND bmeb004 = g_bmba_m.bmba004

                  AND bmeb005 = g_bmba_m.bmba007

                  AND bmeb006 = g_bmba_m.bmba008

                  #AND bmebsite = g_site
                  AND bmeb007 = g_bmba_m.l_bmea007
                  AND bmeb008 = g_bmea_d[l_ac].bmea008
                  AND bmeb010 = g_bmea_d[l_ac].bmea019
                  AND bmeb009 = g_bmea2_d_t.bmeb009
                IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmeb_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
               END IF 
            END IF
               
         AFTER ROW
            LET l_ac1 = ARR_CURR()
            LET l_ac1_t = l_ac1
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
               END IF
               CLOSE abmm201_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            CLOSE abmm201_bcl2
            CALL s_transaction_end('Y','0')
            
              
         AFTER INPUT 
              
      END INPUT            
            
      BEFORE DIALOG 
         IF l_flag1 = 'Y' THEN 
            LET l_flag1 = 'N'
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            NEXT FIELD bmea008
         END IF       
         IF p_cmd = 'a' THEN
            NEXT FIELD bmba001
         END IF
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

      ON ACTION controlr
         CALL cl_show_req_fields()

      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close       #在dialog 右上角 (X)
         LET g_action_choice="exit"  
         EXIT DIALOG

      ON ACTION exit        #toolbar 離開
         LET g_action_choice=""
         LET INT_FLAG = TRUE         
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG

   IF l_flag1 = 'Y' THEN
      CONTINUE WHILE
   END IF 

   EXIT WHILE
END WHILE 

END FUNCTION

PRIVATE FUNCTION abmm201_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   DEFINE l_sql     STRING
   DEFINE l_ac1     LIKE type_t.num5
   DEFINE l_ac1_t   LIKE type_t.num5
   {</Local define>}
   #add-point:show段define
   {<point name="show.define"/>}
   DEFINE l_success  LIKE type_t.num5
   #end add-point

   SELECT bmaa004 INTO g_bmba_m.bmaa004 FROM bmaa_t
    WHERE bmaaent = g_enterprise
      AND bmaasite = g_site
      AND bmaa001 = g_bmba_m.bmba001
      AND bmaa002 = g_bmba_m.bmba002 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_m.bmba001
   CALL ap_ref_array2(g_ref_fields," SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent = '"||g_enterprise||"' AND imaal001 = ? AND imaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_bmba_m.imaal003 = g_rtn_fields[1] 
   LET g_bmba_m.imaal004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_bmba_m.imaal003,g_bmba_m.imaal004

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_m.bmba003
   CALL ap_ref_array2(g_ref_fields," SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent = '"||g_enterprise||"' AND imaal001 = ? AND imaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_bmba_m.l_imaal003 = g_rtn_fields[1] 
   LET g_bmba_m.l_imaal004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_bmba_m.l_imaal003,g_bmba_m.l_imaal004

   LET g_bmba_m_t.* = g_bmba_m.*      #保存單頭舊值

   DISPLAY BY NAME g_bmba_m.l_bmea007,g_bmba_m.l_date,g_bmba_m.bmba001,g_bmba_m.imaal003,g_bmba_m.imaal004,g_bmba_m.bmba002,g_bmba_m.bmaa004,g_bmba_m.bmba003,g_bmba_m.l_imaal003,g_bmba_m.l_imaal004,g_bmba_m.bmba004,g_bmba_m.bmba004_desc,g_bmba_m.bmba007,g_bmba_m.bmba007_desc,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005

   IF g_bfill = "Y" THEN
      CALL abmm201_b_fill()                 #單身
   END IF

   #帶出公用欄位reference值


   LET l_ac_t = l_ac

   #讀入ref值(單頭)
   #add-point:show段reference
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_m.bmba004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_m.bmba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_m.bmba004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_m.bmba007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_m.bmba007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_m.bmba007_desc
          {#ADP版次:1#}
   #end add-point

   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmea_d.getLength()

      #add-point:show段單身reference
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmea_d[l_ac].bmea008
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmea_d[l_ac].bmea008_desc = '', g_rtn_fields[1] , ''
            LET g_bmea_d[l_ac].bmea008_desc_desc = '', g_rtn_fields[2] , ''
            DISPLAY BY NAME g_bmea_d[l_ac].bmea008_desc
            

            #显示产品特征说明               
            CALL s_feature_description(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019)
               RETURNING l_success,g_bmea_d[l_ac].bmea019_desc
            IF l_success THEN
               DISPLAY BY NAME g_bmea_d[l_ac].bmea019_desc
            END IF
            
          {#ADP版次:1#}
      #end add-point
   END FOR




   LET l_ac = l_ac_t
  
   LET l_ac1_t = l_ac1
   FOR l_ac1 = 1 TO g_bmea_d.getLength()
       INITIALIZE g_ref_fields TO NULL
       LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
       CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
       LET g_bmea2_d[l_ac1].bmeb009_desc = '', g_rtn_fields[1] , ''
       DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc  
   END FOR
   LET l_ac1 = l_ac1_t
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()

   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION abmm201_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE bmba_t.bmba001
   DEFINE l_oldno     LIKE bmba_t.bmba001
   DEFINE l_newno02     LIKE bmba_t.bmba002
   DEFINE l_oldno02     LIKE bmba_t.bmba002

   DEFINE l_newno03     LIKE bmba_t.bmba003
   DEFINE l_oldno03     LIKE bmba_t.bmba003

   DEFINE l_newno04     LIKE bmba_t.bmba004
   DEFINE l_oldno04     LIKE bmba_t.bmba004

   DEFINE l_newno05     DATETIME YEAR TO SECOND
   DEFINE l_oldno05     DATETIME YEAR TO SECOND

   DEFINE l_newno06     LIKE bmba_t.bmba007
   DEFINE l_oldno06     LIKE bmba_t.bmba007

   DEFINE l_newno07     LIKE bmba_t.bmba008
   DEFINE l_oldno07     LIKE bmba_t.bmba008


   DEFINE l_master    RECORD LIKE bmba_t.*
   DEFINE l_detail    RECORD LIKE bmea_t.*
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point

   IF g_bmba_m.bmba001 IS NULL
   OR g_bmba_m.bmba002 IS NULL

   OR g_bmba_m.bmba003 IS NULL

   OR g_bmba_m.bmba004 IS NULL

   OR g_bmba_m.bmba005 IS NULL

   OR g_bmba_m.bmba007 IS NULL

   OR g_bmba_m.bmba008 IS NULL


   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   CALL abmm201_set_entry('a')
   CALL abmm201_set_no_entry('a')

   CALL cl_set_head_visible("","YES")

      LET g_bmba_m.bmba004_desc = ''
   DISPLAY BY NAME g_bmba_m.bmba004_desc
   LET g_bmba_m.bmba007_desc = ''
   DISPLAY BY NAME g_bmba_m.bmba007_desc


   INPUT l_newno   # FROM
         ,l_newno02

         ,l_newno03

         ,l_newno04

         ,l_newno05

         ,l_newno06

         ,l_newno07


    FROM bmba001
         ,bmba002

         ,bmba003

         ,bmba004

         ,bmba005

         ,bmba007

         ,bmba008


         ATTRIBUTE(FIELD ORDER FORM)

      #add-point:複製段落開窗/欄位控管/自定義action
      {<point name="reproduce.action" />}
      #end add-point

      BEFORE INPUT
         #add-point:複製段落Before input
         {<point name="reproduce.before_input" />}
         #end add-point

      AFTER FIELD bmba001
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD bmba001
         {<point name="reproduce.a.bmba001" />}
         #end add-point

      AFTER FIELD bmba002
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD bmba002
         {<point name="reproduce.a.bmba002" />}
         #end add-point

      AFTER FIELD bmba003
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD bmba003
         {<point name="reproduce.a.bmba003" />}
         #end add-point

      AFTER FIELD bmba004
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD bmba004
         {<point name="reproduce.a.bmba004" />}
         #end add-point

      AFTER FIELD bmba005
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD bmba005
         {<point name="reproduce.a.bmba005" />}
         #end add-point

      AFTER FIELD bmba007
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD bmba007
         {<point name="reproduce.a.bmba007" />}
         #end add-point

      AFTER FIELD bmba008
         IF l_newno IS NULL THEN
            NEXT FIELD CURRENT
         END IF
         #add-point:AFTER FIELD bmba008
         {<point name="reproduce.a.bmba008" />}
         #end add-point



      AFTER INPUT
         #若取消則直接結束
         IF INT_FLAG = 1 THEN
            LET INT_FLAG = 0
            RETURN
         END IF

         #確定該key值是否有重複定義
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM bmba_t
          WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = l_newno
            AND bmba002 = l_newno02

            AND bmba003 = l_newno03

            AND bmba004 = l_newno04

            AND bmba005 = l_newno05

            AND bmba007 = l_newno06

            AND bmba008 = l_newno07


         IF l_cnt > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00006"
            LET g_errparam.extend = "Reproduce"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            #NEXT FIELD bmba001
         END IF

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
   END INPUT

   IF INT_FLAG OR l_newno IS NULL THEN
      LET INT_FLAG = 0
      RETURN
   END IF

   CALL s_transaction_begin()

   SELECT * INTO l_master.* FROM bmba_t
    WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_m.bmba001
      AND bmba002 = g_bmba_m.bmba002

      AND bmba003 = g_bmba_m.bmba003

      AND bmba004 = g_bmba_m.bmba004

      AND bmba005 = g_bmba_m.bmba005

      AND bmba007 = g_bmba_m.bmba007

      AND bmba008 = g_bmba_m.bmba008


   LET l_master.bmba001 = l_newno
   LET l_master.bmba002 = l_newno02

   LET l_master.bmba003 = l_newno03

   LET l_master.bmba004 = l_newno04

   LET l_master.bmba005 = l_newno05

   LET l_master.bmba007 = l_newno06

   LET l_master.bmba008 = l_newno07



   #公用欄位給予預設值(單頭)


   #公用欄位給予預設值(單身)


   #add-point:單頭複製前
   {<point name="reproduce.head.b_insert" mark="Y"/>}
   #end add-point

   INSERT INTO bmba_t VALUES (l_master.*) #複製單頭

   #add-point:單頭複製中
   {<point name="reproduce.head.m_insert"/>}
   #end add-point

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "bmba_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #add-point:單頭複製後
   {<point name="reproduce.head.a_insert"/>}
   #end add-point

   LET g_sql = "SELECT * FROM bmea_t WHERE bmeaent = '" ||g_enterprise|| "' AND ",
               " bmea001 = '",g_bmba_m.bmba001,"'"
               ," AND bmea002 = '",g_bmba_m.bmba002,"'"

               ," AND bmea003 = '",g_bmba_m.bmba003,"'"

               ," AND bmea004 = '",g_bmba_m.bmba004,"'"

               ," AND bmea005 = '",g_bmba_m.bmba005,"'"

               ," AND bmea006 = '",g_bmba_m.bmba007,"'"

               ," AND bmeasite = '",g_bmba_m.bmba008,"'"


   DECLARE abmm201_reproduce CURSOR FROM g_sql

   FOREACH abmm201_reproduce INTO l_detail.*
      LET l_detail.bmea001 = l_newno
      LET l_detail.bmea002 = l_newno02

      LET l_detail.bmea003 = l_newno03

      LET l_detail.bmea004 = l_newno04

      LET l_detail.bmea005 = l_newno05

      LET l_detail.bmea006 = l_newno06

      LET l_detail.bmeasite = l_newno07



      #add-point:單身複製前
      {<point name="reproduce.body.b_insert" mark="Y"/>}
      #end add-point

      INSERT INTO bmea_t VALUES (l_detail.*) #複製單身

      #add-point:單身複製中
      {<point name="reproduce.body.m_insert"/>}
      #end add-point

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'Insert error!'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #add-point:單身複製後
      {<point name="reproduce.body.a_insert"/>}
      #end add-point

   END FOREACH

   CALL s_transaction_end('Y','0')
   ERROR 'ROW(',l_newno,') O.K'
   CLOSE abmm201_reproduce

   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point

END FUNCTION

PRIVATE FUNCTION abmm201_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point

   IF g_bmba_m.bmba001 IS NULL
   OR g_bmba_m.bmba002 IS NULL

   OR g_bmba_m.bmba003 IS NULL

   OR g_bmba_m.bmba004 IS NULL

   OR g_bmba_m.bmba005 IS NULL

   OR g_bmba_m.bmba007 IS NULL

   OR g_bmba_m.bmba008 IS NULL


   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

    SELECT UNIQUE bmba001,bmba002,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005
 INTO g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005
 FROM bmba_t
 WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_m.bmba001 AND bmba002 = g_bmba_m.bmba002 AND bmba003 = g_bmba_m.bmba003 AND bmba004 = g_bmba_m.bmba004 AND bmba005 = g_bmba_m.bmba005 AND bmba007 = g_bmba_m.bmba007 AND bmba008 = g_bmba_m.bmba008
   CALL s_transaction_begin()



   OPEN abmm201_cl USING g_enterprise, g_site,g_bmba_m.bmba001
                                                       ,g_bmba_m.bmba002

                                                       ,g_bmba_m.bmba003

                                                       ,g_bmba_m.bmba004

                                                       ,g_bmba_m.bmba005

                                                       ,g_bmba_m.bmba007

                                                       ,g_bmba_m.bmba008


   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN abmm201_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abmm201_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   FETCH abmm201_cl INTO g_bmba_m.bmba001,g_bmba_m.imaal003,g_bmba_m.imaal004,g_bmba_m.bmba002,g_bmba_m.bmaa004,g_bmba_m.bmba003,g_bmba_m.l_imaal003,g_bmba_m.l_imaal004,g_bmba_m.bmba004,g_bmba_m.bmba004_desc,g_bmba_m.bmba007,g_bmba_m.bmba007_desc,g_bmba_m.bmba008,g_bmba_m.bmba011,g_bmba_m.bmba012,g_bmba_m.bmba010,g_bmba_m.bmba005              # 鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bmba_m.bmba001
      LET g_errparam.popup = FALSE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL abmm201_show()

   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      INITIALIZE g_doc.* TO NULL
      LET g_doc.column1 = "bmba001"
      LET g_doc.value1 = g_bmba_m.bmba001
      CALL cl_doc_remove()

      #資料備份
      LET g_bmba001_t = g_bmba_m.bmba001
      LET g_bmba002_t = g_bmba_m.bmba002

      LET g_bmba003_t = g_bmba_m.bmba003

      LET g_bmba004_t = g_bmba_m.bmba004

      LET g_bmba005_t = g_bmba_m.bmba005

      LET g_bmba007_t = g_bmba_m.bmba007

      LET g_bmba008_t = g_bmba_m.bmba008



      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point

      DELETE FROM bmba_t
       WHERE bmbaent = g_enterprise AND bmbasite = g_site AND bmba001 = g_bmba_m.bmba001
         AND bmba002 = g_bmba_m.bmba002

         AND bmba003 = g_bmba_m.bmba003

         AND bmba004 = g_bmba_m.bmba004

         AND bmba005 = g_bmba_m.bmba005

         AND bmba007 = g_bmba_m.bmba007

         AND bmba008 = g_bmba_m.bmba008



      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bmba_m.bmba001
      LET g_errparam.popup = FALSE
      CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point




      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point

      DELETE FROM bmea_t
       WHERE bmeaent = g_enterprise AND bmea001 = g_bmba_m.bmba001
         AND bmea002 = g_bmba_m.bmba002

         AND bmea003 = g_bmba_m.bmba003

         AND bmea004 = g_bmba_m.bmba004

         AND bmea005 = g_bmba_m.bmba007

         AND bmea006 = g_bmba_m.bmba008

         AND bmeasite = g_site



      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "bmea_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point



      CLEAR FORM
      CALL g_bmea_d.clear()


      CALL abmm201_ui_browser_refresh()
      CALL abmm201_ui_headershow()
      CALL abmm201_ui_detailshow()

      IF g_browser_cnt > 0 THEN
         CALL abmm201_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL abmm201_browser_fill()
      END IF

   END IF

   CLOSE abmm201_cl
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-D
   CALL cl_flow_notify(g_bmba_m.bmba001,'D')

END FUNCTION

PRIVATE FUNCTION abmm201_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point

   CALL g_bmea_d.clear()    #g_bmea_d 單頭及單身
   CALL g_bmea2_d.clear() 
    

   #add-point:b_fill段define
   {<point name="b_fill.sql_before"/>}
   #end add-point

   #LET g_sql = "SELECT  UNIQUE bmea007,bmea008,'','',bmea019,'',bmea009,bmea010,bmea011,bmea012,bmea013,bmea020,bmea014,bmea015,bmea016,bmea017,bmea018 FROM bmea_t",   #160622-00015#1 add bmea020  #160627-00002#3 mark
   LET g_sql = "SELECT  UNIQUE bmea007,bmea008,'','',bmea019,'',bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018 FROM bmea_t",   #160627-00002#3
               " WHERE bmeaent= ",g_enterprise,
               "   AND bmeasite='",g_site,"' ",
               "   AND bmea001='",g_bmba_m.bmba001,"' ",
               "   AND bmea002='",g_bmba_m.bmba002,"' ",
               "   AND bmea003='",g_bmba_m.bmba003,"' ",
               "   AND bmea004='",g_bmba_m.bmba004,"' ",
               "   AND bmea005='",g_bmba_m.bmba007,"' ",
               "   AND bmea006='",g_bmba_m.bmba008,"' "
   IF g_bmba_m.l_bmea007 IS NOT NULL THEN
      LET g_sql = g_sql CLIPPED," AND bmea007='",g_bmba_m.l_bmea007,"' "
   END IF
   IF NOT cl_null(g_wc_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ", g_wc_table1 CLIPPED
   END IF
   LET g_sql = g_sql, " ORDER BY bmea007"
   PREPARE abmm201_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR abmm201_pb
   LET g_cnt = l_ac
   LET l_ac = 1
   #FOREACH b_fill_cs INTO g_bmea_d[l_ac].bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea008_desc,g_bmea_d[l_ac].bmea008_desc_desc,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea019_desc,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea020,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018   #160622-00015#1 add bmea020  #160627-00002#3 mark
   FOREACH b_fill_cs INTO g_bmea_d[l_ac].bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea008_desc,g_bmea_d[l_ac].bmea008_desc_desc,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea019_desc,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018   #160627-00002#3 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      LET g_flag1 = 'Y'
      CALL abmm201_b_fill_1(g_bmea_d[1].bmea008,g_bmea_d[1].bmea019)
      LET g_flag1 = 'N'      
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH



   CALL g_bmea_d.deleteElement(g_bmea_d.getLength())


   LET l_ac = g_cnt
   LET g_cnt = 0

   FREE abmm201_pb



END FUNCTION

PRIVATE FUNCTION abmm201_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point
      DELETE FROM bmea_t
       WHERE bmeaent = g_enterprise AND
         bmea001 = ps_keys_bak[1] AND bmea002 = ps_keys_bak[2] AND bmea003 = ps_keys_bak[3] AND bmea004 = ps_keys_bak[4] AND bmea005 = ps_keys_bak[5] AND bmea006 = ps_keys_bak[6] AND bmeasite = ps_keys_bak[7] AND bmea007 = ps_keys_bak[8] AND bmea008 = ps_keys_bak[9] AND bmea019 = ps_keys_bak[10]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      RETURN
   END IF



END FUNCTION

PRIVATE FUNCTION abmm201_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      IF cl_null(ps_keys[9]) THEN LET ps_keys[9] = ' ' END IF
      #end add-point
      INSERT INTO bmea_t
                  (bmeaent,bmeasite,
                   bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,
                   bmea007,bmea008,bmea019
                   ,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018)   #160627-00002#3
                   #,bmea009,bmea010,bmea011,bmea012,bmea013,bmea020,bmea014,bmea015,bmea016,bmea017,bmea018)   #160622-00015#1 add bmea020  #160627-00002#3  mark
            VALUES(g_enterprise,g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9]
                   ,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)   #160627-00002#3
                   #,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea020,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)   #160622-00015#1 add bmea020 #160627-00002#3  mark
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "bmea_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point
      #IF g_prog = 'abmm201' THEN        #160705-00042#8 160712 by sakura mark
      IF g_prog MATCHES 'abmm201' THEN   #160705-00042#8 160712 by sakura add
         CALL abmm201_allsite('1',0)
      END IF
   END IF



END FUNCTION

PRIVATE FUNCTION abmm201_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point

   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR

   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF

   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      IF cl_null(ps_keys[9]) THEN LET ps_keys[9] = ' ' END IF
      #end add-point
      UPDATE bmea_t
         SET (bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,
              bmea007,bmea008,bmea019
              ,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8],ps_keys[9]
              ,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)
         WHERE bmeaent=g_enterprise AND bmea001 = ps_keys_bak[1] AND bmea002 = ps_keys_bak[2] AND bmea003 = ps_keys_bak[3] AND bmea004 = ps_keys_bak[4] AND bmea005 = ps_keys_bak[5] AND bmea006 = ps_keys_bak[6] AND bmeasite = ps_keys_bak[7] AND bmea007 = ps_keys_bak[8] AND bmea008 = ps_keys_bak[9] AND bmea019 = ps_keys_bak[10]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      ELSE

      END IF
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point
      RETURN
   END IF



END FUNCTION

PRIVATE FUNCTION abmm201_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point

   #先刷新資料
   #CALL abmm201_b_fill()

   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bmea_t"

   IF ls_group.getIndexOf(ps_table,1) THEN

      OPEN abmm201_bcl USING g_enterprise,g_site,
                                       g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.l_bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "abmm201_bcl"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF

   END IF



   RETURN TRUE

END FUNCTION

PRIVATE FUNCTION abmm201_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point

   LET ls_group = "'1',"

   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmm201_bcl
   END IF



END FUNCTION

PRIVATE FUNCTION abmm201_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point

   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmba001,bmba002,bmba003,bmba004,bmba005,bmba007,bmba008",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point
   END IF

   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION abmm201_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point

   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("bmba001,bmba002,bmba003,bmba004,bmba005,bmba007,bmba008",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point
   END IF

   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION abmm201_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1

   CALL cl_set_comp_entry("bmea017",TRUE)
   CALL cl_set_comp_entry("bmea019",TRUE)

END FUNCTION

PRIVATE FUNCTION abmm201_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   DEFINE l_imaa005   LIKE imaa_t.imaa005
   
   IF g_bmea_d[l_ac].bmea016 = '2' THEN 
      CALL cl_set_comp_entry("bmea017",FALSE)
   END IF   
   IF NOT cl_null(g_bmea_d[l_ac].bmea008) THEN
      SELECT imaa005 INTO l_imaa005  #特征类别
        FROM imaa_t
       WHERE imaaent  = g_enterprise
         AND imaa001  = g_bmea_d[l_ac].bmea008
      IF cl_null(l_imaa005) THEN
         CALL cl_set_comp_entry("bmea019",FALSE)  #产品特征
      END IF
   END IF

END FUNCTION

PRIVATE FUNCTION abmm201_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   DEFINE l_wc   STRING
   #end add-point

   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point
   #说明：作业传参，被调用时，接收的参数g_argv[1]为azzi910中设置的参数，g_argv[2]开始为调用作业的传入参数
   LET g_pagestart = 1
      
   IF NOT cl_null(g_argv[02]) THEN
      LET l_wc = l_wc, " bmba001 = '", g_argv[02], "' AND "
   END IF
   
   #IF NOT cl_null(g_argv[03]) THEN
   IF g_argv[03] IS NOT NULL THEN
      LET l_wc = l_wc, " bmba002 = '", g_argv[03], "' AND "
   END IF

   IF NOT cl_null(g_argv[04]) THEN
      LET l_wc = l_wc, " bmba003 = '", g_argv[04], "' AND "
   END IF

   #IF NOT cl_null(g_argv[05]) THEN
   IF g_argv[05] IS NOT NULL THEN
      LET l_wc = l_wc, " bmba004 = '", g_argv[05], "' AND "
   END IF

   IF NOT cl_null(g_argv[06]) THEN
      LET l_wc = l_wc, " to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '", g_argv[06], "' AND "
   END IF

   #IF NOT cl_null(g_argv[07]) THEN
   IF g_argv[07] IS NOT NULL THEN
      LET l_wc = l_wc, " bmba007 = '", g_argv[07], "' AND "
   END IF

   #IF NOT cl_null(g_argv[08]) THEN
   IF g_argv[08] IS NOT NULL THEN
      LET l_wc = l_wc, " bmba008 = '", g_argv[08], "' AND "
   END IF


   
   IF NOT cl_null(l_wc) THEN
      LET g_wc = l_wc.subString(1,l_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2 "
      END IF   
   END IF   
   IF NOT cl_null(g_argv[1]) THEN
      LET g_wc = g_wc,"  AND bmbasite = '",g_argv[1],"' "
   END IF
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION abmm201_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point

   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmea_d.getLength() THEN
         LET g_detail_idx = g_bmea_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmea_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmea_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_bmea2_d.getLength() THEN
         LET g_detail_idx = g_bmea2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmea2_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmea2_d.getLength() TO FORMONLY.cnt
   END IF

END FUNCTION
#+ 連動單身填充
PRIVATE FUNCTION abmm201_b_fill_1(p_bmea008,p_bmea019)
   DEFINE p_bmea008  LIKE bmea_t.bmea008
   DEFINE p_bmea019  LIKE bmea_t.bmea019
   DEFINE l_ac1      LIKE type_t.num5

   CALL g_bmea2_d.clear() 
   IF cl_null(p_bmea008) THEN
      RETURN
   END IF
   IF cl_null(p_bmea019) THEN
      LET p_bmea019 = ' '
   END IF
   IF g_flag1 = 'Y' THEN  
      LET g_sql = "SELECT  UNIQUE bmeb009,'' FROM bmeb_t",
                  "",
                  " WHERE bmebent=? AND bmebsite=? AND bmeb001=? AND bmeb002=? AND bmeb003=? AND bmeb004=? AND bmeb005=? AND bmeb006=? AND bmeb007=? AND bmeb008 =? AND bmeb010 = ? "
   
      IF NOT cl_null(g_wc_table2) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc_table2 CLIPPED
      END IF
   
      LET g_sql = g_sql, " ORDER BY bmeb009"
   
      PREPARE abmm201_pb1 FROM g_sql
      DECLARE b_fill_cs1 CURSOR FOR abmm201_pb1
   
      LET l_ac1 = 1

      FOREACH b_fill_cs1 USING g_enterprise,g_site,g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.l_bmea007,p_bmea008,p_bmea019 INTO g_bmea2_d[l_ac1].bmeb009,g_bmea2_d[l_ac1].bmeb009_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         INITIALIZE g_ref_fields TO NULL
         LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
         CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
         LET g_bmea2_d[l_ac1].bmeb009_desc = '', g_rtn_fields[1] , ''
         DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc         
    
         LET l_ac1 = l_ac1 + 1
         IF l_ac1 > g_max_rec THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         
      END FOREACH
      CALL g_bmea2_d.deleteElement(g_bmea2_d.getLength())
    
      FREE abmm201_pb1
   END IF 
                              
END FUNCTION
#+ bmea008 欄位帶值
PRIVATE FUNCTION abmm201_bmea008_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmea_d[l_ac].bmea008
   CALL ap_ref_array2(g_ref_fields," SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent = '"||g_enterprise||"' AND imaal001 = ? AND imaal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_bmea_d[l_ac].bmea008_desc = g_rtn_fields[1] 
   LET g_bmea_d[l_ac].bmea008_desc_desc = g_rtn_fields[2] 
   DISPLAY BY NAME g_bmea_d[l_ac].bmea008_desc,g_bmea_d[l_ac].bmea008_desc
   IF NOT cl_null(g_bmea_d[l_ac].bmea008) AND ( g_bmea_d_t.bmea008 IS NULL OR g_bmea_d[l_ac].bmea008 != g_bmea_d_t.bmea008) THEN
      SELECT imae081 INTO g_bmea_d[l_ac].bmea013 FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite = g_site
         AND imae001 = g_bmea_d[l_ac].bmea008 
      DISPLAY BY NAME g_bmea_d[l_ac].bmea013     
   END IF         
END FUNCTION
#+ bema008字段欄位檢查
PRIVATE FUNCTION abmm201_bmea008_chk()
   DEFINE l_imaa010     LIKE imaa_t.imaa010
   DEFINE l_oocq004     LIKE oocq_t.oocq004
   DEFINE l_n           LIKE type_t.num5
   DEFINE l_imaa005     LIKE imaa_t.imaa005
   
   LET g_errno = ""
   
   LET l_imaa005 = ''  #特征类别
   SELECT imaa005 INTO l_imaa005
     FROM imaa_t
    WHERE imaaent  = g_enterprise
      AND imaa001  = g_bmea_d[l_ac].bmea008
   IF cl_null(l_imaa005) THEN
      IF g_bmea_d[l_ac].bmea008 = g_bmba_m.bmba001 THEN 
         #替代料号不能与主件料号相同
         LET g_errno = 'abm-00050'
         RETURN
      END IF
      IF g_bmea_d[l_ac].bmea008 = g_bmba_m.bmba003 THEN 
         #替代料号不能与组件料号相同
         LET g_errno = 'abm-00051'
         RETURN
      END IF 
   END IF

   SELECT imaa010 INTO l_imaa010 FROM imaa_t  #生命週期狀態
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmea_d[l_ac].bmea008
   IF NOT cl_null(l_imaa010) THEN 
      SELECT oocq004 INTO l_oocq004
        FROM oocq_t
       WHERE oocq001 = '210'
         AND oocq002 = l_imaa010
         AND oocqent = g_enterprise
         AND oocqstus = 'Y'
   END IF
   IF l_oocq004 = 'N' THEN
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM imaa_t
       WHERE imaa001 = g_bmea_d[l_ac].bmea008
         AND imaaent = g_enterprise
         AND imaastus = 'Y'
         AND imaa038 = 'Y'
      IF l_n > 0 THEN
         #输入的数据对应的生命周期数据为不使用工程料号！
         LET g_errno = 'abm-00010'
         RETURN
      END IF
   END IF        
      
END FUNCTION

PRIVATE FUNCTION abmm201_act_oocq007()
DEFINE l_oocq007  LIKE oocq_t.oocq007
DEFINE r_success  LIKE type_t.num5

   SELECT oocq007 INTO l_oocq007
     FROM oocq_t,imaa_t
    WHERE oocqent = imaaent
      AND oocq002 = imaa010
      AND oocq001 = '210'
      AND oocqent = g_enterprise
      AND imaa001 = g_bmba_m.bmba001
   IF l_oocq007 = 'Y' THEN 
      LET r_success = TRUE
   ELSE
      LET r_success = FALSE
   END IF
   RETURN r_success   
END FUNCTION

################################################################################
# Descriptions...: 集團級資料增刪改，據點級資料也一併做相應處理
# Memo...........:
# Usage..........: CALL abmm201_allsite(p_type)
# Input parameter: 传入参数变量1   传入参数变量说明1
#                : 传入参数变量2   传入参数变量说明2
# Return code....: 回传参数变量1   回传参数变量说明1
#                : 回传参数变量2   回传参数变量说明2
# Date & Author..: 2014/07/18 By 02295
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm201_allsite(p_type,p_ac)
DEFINE p_type    LIKE type_t.chr1
DEFINE p_ac      LIKE type_t.num5
DEFINE l_sql     STRING
DEFINE l_site    LIKE bmea_t.bmeasite
      
   LET l_sql = "SELECT DISTINCT bmbasite FROM bmba_t ",
               " WHERE bmbaent = '",g_enterprise,"'",
               "   AND bmbasite <> '",g_site,"'",
               "   AND bmba001 = '",g_bmba_m.bmba001,"'",
               "   AND bmba002 = '",g_bmba_m.bmba002,"'",
               "   AND bmba003 = '",g_bmba_m.bmba003,"'",
               "   AND bmba004 = '",g_bmba_m.bmba004,"'",
               "   AND bmba007 = '",g_bmba_m.bmba007,"'",
               "   AND bmba008 = '",g_bmba_m.bmba008,"'",
               "   AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '" ||  g_bmba_m.l_date ||"' ",
               "   AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmba_m.l_date  ,"' OR bmba006 IS NULL) "
   PREPARE all_site_p FROM l_sql
   DECLARE all_site_c CURSOR FOR all_site_p      
   FOREACH all_site_c INTO l_site
      IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF   
      IF p_type = '1' THEN   
         INSERT INTO bmea_t
               (bmeaent,bmeasite,
                bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,
                bmea007,bmea008,bmea019
                ,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018)   #160627-00002#3
                #,bmea009,bmea010,bmea011,bmea012,bmea013,bmea020,bmea014,bmea015,bmea016,bmea017,bmea018)   #160622-00015#1 add bmea020 #160627-00002#3 mark
         VALUES(g_enterprise,l_site,
                g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,
                g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.l_bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,
                g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,
                g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,
                g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)    #160622-00015#1 add bmea020   #160627-00002#3 del bmea020
      ELSE
         INSERT INTO bmeb_t
                  (bmebent,bmebsite,
                   bmeb001,bmeb002,bmeb003,bmeb004,bmeb005,bmeb006,
                   bmeb007,bmeb008,bmeb010
                   ,bmeb009)
            VALUES(g_enterprise,l_site,
                   g_bmba_m.bmba001,g_bmba_m.bmba002,g_bmba_m.bmba003,g_bmba_m.bmba004,
                   g_bmba_m.bmba007,g_bmba_m.bmba008,g_bmba_m.l_bmea007,
                   g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea2_d[p_ac].bmeb009)
      END IF
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "bmea_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()
         EXIT FOREACH
      END IF                   
   END FOREACH   
END FUNCTION

#end add-point
 
{</section>}
 
