#該程式未解開Section, 採用最新樣板產出!
{<section id="abmm206.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0013(2016-06-27 10:19:01), PR版次:0013(2016-07-14 18:23:19)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000250
#+ Filename...: abmm206
#+ Description: 集團研發全主件替代維護作業
#+ Creator....: 02482(2014-01-16 16:05:16)
#+ Modifier...: 02295 -SD/PR- 02295
 
{</section>}
 
{<section id="abmm206.global" >}
#應用 i07 樣板自動產生(Version:46)
#add-point:填寫註解說明
#160115-00006#1  2016/03/08 By xianghui 集团资料维护后各个据点都要同步，不需要筛选产品策略中维护的资料，只要筛选此组件存在BOM元件里面
#160324-00007#1  2016/04/01 By xianghui 同步据点资料时参考研发中心的值需为1.参考研发中的才可同步
#160318-00025#39 2016/04/22 By pengxin  將重複內容的錯誤訊息置換為公用錯誤訊息(r.v)
#160620-00008#2  2016/06/20 By xianghui 单身增加保税否栏位
#160622-00013#1  2016/06/22 By xianghui 单身代码重新产生(重新下载上传)
#160627-00002#2  2016/06/27 By xianghui 去掉单身增加保税否栏位
#160705-00024#1  2016/07/07 By xianghui 据点级作业不可新增
#160705-00042#11 2016/07/14 By sakura   程式中寫死g_prog部分改寫MATCHES方式
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"

#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_bmea_m        RECORD
       bmea003 LIKE bmea_t.bmea003, 
   imaal003 LIKE type_t.chr500, 
   imaal004 LIKE type_t.chr500, 
   imae081 LIKE type_t.chr10, 
   bmea001 LIKE bmea_t.bmea001, 
   bmea002 LIKE bmea_t.bmea002, 
   bmea004 LIKE bmea_t.bmea004, 
   bmea005 LIKE bmea_t.bmea005, 
   bmea006 LIKE bmea_t.bmea006, 
   bmea007 LIKE bmea_t.bmea007
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bmea_d        RECORD
       bmea008 LIKE bmea_t.bmea008, 
   bmea008_desc LIKE type_t.chr500, 
   bmea008_desc1 LIKE type_t.chr500, 
   bmea019 LIKE bmea_t.bmea019, 
   bmea019_desc LIKE type_t.chr500, 
   bmea009 LIKE bmea_t.bmea009, 
   bmea010 LIKE bmea_t.bmea010, 
   bmea011 LIKE bmea_t.bmea011, 
   bmea012 LIKE bmea_t.bmea012, 
   bmea013 LIKE bmea_t.bmea013, 
   bmea014 LIKE bmea_t.bmea014, 
   bmea015 LIKE bmea_t.bmea015, 
   bmea016 LIKE bmea_t.bmea016, 
   bmea017 LIKE bmea_t.bmea017, 
   bmea018 LIKE bmea_t.bmea018
       END RECORD
 
 
#add-point:自定義模組變數(Module Variable)(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
 TYPE type_g_bmea2_d        RECORD
             bmeb009         LIKE bmeb_t.bmeb009,
             bmeb009_desc    LIKE type_t.chr80
                                   END RECORD
DEFINE g_bmea2_d             DYNAMIC ARRAY OF type_g_bmea2_d
DEFINE g_bmea2_d_t           type_g_bmea2_d

DEFINE g_wc_table2           STRING                        #第2個單身table所使用的g_wc
DEFINE g_rec_b1              LIKE type_t.num5           
DEFINE g_wc3                 STRING
DEFINE l_ac1                 LIKE type_t.num5
#end add-point
 
 
#模組變數(Module Variables)
DEFINE g_bmea_m          type_g_bmea_m
DEFINE g_bmea_m_t        type_g_bmea_m
DEFINE g_bmea_m_o        type_g_bmea_m
DEFINE g_bmea_m_mask_o   type_g_bmea_m #轉換遮罩前資料
DEFINE g_bmea_m_mask_n   type_g_bmea_m #轉換遮罩後資料
 
   DEFINE g_bmea003_t LIKE bmea_t.bmea003
DEFINE g_bmea001_t LIKE bmea_t.bmea001
DEFINE g_bmea002_t LIKE bmea_t.bmea002
DEFINE g_bmea004_t LIKE bmea_t.bmea004
DEFINE g_bmea005_t LIKE bmea_t.bmea005
DEFINE g_bmea006_t LIKE bmea_t.bmea006
DEFINE g_bmea007_t LIKE bmea_t.bmea007
 
 
DEFINE g_bmea_d          DYNAMIC ARRAY OF type_g_bmea_d
DEFINE g_bmea_d_t        type_g_bmea_d
DEFINE g_bmea_d_o        type_g_bmea_d
DEFINE g_bmea_d_mask_o   DYNAMIC ARRAY OF type_g_bmea_d #轉換遮罩前資料
DEFINE g_bmea_d_mask_n   DYNAMIC ARRAY OF type_g_bmea_d #轉換遮罩後資料
 
 
DEFINE g_browser      DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位  
       b_statepic     LIKE type_t.chr50,
          b_bmea003 LIKE bmea_t.bmea003,
   b_bmea003_desc LIKE type_t.chr80,
   b_bmea003_desc1 LIKE imaal_t.imaal004,
   b_bmea003_desc2 LIKE imae_t.imae081,
      b_bmea001 LIKE bmea_t.bmea001,
      b_bmea002 LIKE bmea_t.bmea002,
      b_bmea004 LIKE bmea_t.bmea004,
      b_bmea005 LIKE bmea_t.bmea005,
      b_bmea006 LIKE bmea_t.bmea006,
      b_bmea007 LIKE bmea_t.bmea007
       #,rank           LIKE type_t.num10
      END RECORD 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
 
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
 
DEFINE g_detail_cnt          LIKE type_t.num10             #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10             #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10             #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10             #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10             #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10             #Browser目前所在筆數(暫存用)
DEFINE g_current_page        LIKE type_t.num10             #目前所在頁數
DEFINE g_order               STRING                        #查詢排序欄位
DEFINE g_state               STRING                        
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page                    
DEFINE g_current_row         LIKE type_t.num10             #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入(僅用於三階)
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"

#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"

#end add-point
 
{</section>}
 
{<section id="abmm206.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化 name="main.init"
   IF NOT cl_null(g_argv[1]) THEN
      LET g_site = g_argv[1]
   END IF
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   
   #end add-point
   LET g_forupd_sql = " SELECT bmea003,'','','',bmea001,bmea002,bmea004,bmea005,bmea006,bmea007", 
                      " FROM bmea_t",
                      " WHERE bmeaent= ? AND bmeasite= ? AND bmea001=? AND bmea002=? AND bmea003=? AND  
                          bmea004=? AND bmea005=? AND bmea006=? AND bmea007=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmm206_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.bmea003,t0.bmea001,t0.bmea002,t0.bmea004,t0.bmea005,t0.bmea006,t0.bmea007", 
 
               " FROM bmea_t t0",
               
               " WHERE t0.bmeaent = " ||g_enterprise|| " AND t0.bmeasite = ? AND t0.bmea001 = ? AND t0.bmea002 = ? AND t0.bmea003 = ? AND t0.bmea004 = ? AND t0.bmea005 = ? AND t0.bmea006 = ? AND t0.bmea007 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   
   #end add-point
   PREPARE abmm206_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmm206 WITH FORM cl_ap_formpath("abm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abmm206_init()   
 
      #進入選單 Menu (="N")
      CALL abmm206_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abmm206
      
   END IF 
   
   CLOSE abmm206_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
 
{</section>}
 
{<section id="abmm206.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abmm206_init()
   #add-point:init段define name="init.define_customerization"
   
   #end add-point   
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="init.pre_function"
   
   #end add-point
   
   LET g_bfill = "Y"
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
      CALL cl_set_combo_scc('bmea007','1103') 
   CALL cl_set_combo_scc('bmea016','1105') 
   CALL cl_set_combo_scc('bmea018','1104') 
 
   LET g_error_show = 1
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #add-point:畫面資料初始化 name="init.init"
   
   #end add-point
   
   CALL abmm206_default_search()
    
END FUNCTION
 
{</section>}
 
{<section id="abmm206.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION abmm206_ui_dialog()
   #add-point:ui_dialog段define name="ui_dialog.define_customerization"
   
   #end add-point
   DEFINE la_param  RECORD
          prog                  STRING,
          actionid              STRING,
          background            LIKE type_t.chr1,
          param                 DYNAMIC ARRAY OF STRING
                                END RECORD
   DEFINE ls_js                 STRING
   DEFINE li_idx                LIKE type_t.num10
   DEFINE ls_wc                 STRING
   DEFINE lb_first              BOOLEAN
   DEFINE l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   
   #end add-point
   
   LET lb_first = TRUE
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0 
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   
   #end add-point
   
   WHILE TRUE
      
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_bmea_m.* TO NULL
         CALL g_bmea_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL abmm206_init()
      END IF
 
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
         
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
               
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               LET g_curr_diag = ui.DIALOG.getCurrent()
               CALL abmm206_idx_chk()
               CALL abmm206_fetch('') # reload data
               LET g_detail_idx = 1
               CALL abmm206_ui_detailshow() #Setting the current row 
         
            ON ACTION qbefield_user   #欄位隱藏設定 
               LET g_action_choice="qbefield_user"
               CALL cl_ui_qbefield_user()
         
         END DISPLAY
        
         DISPLAY ARRAY g_bmea_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
         
            BEFORE ROW
               #顯示單身筆數
               CALL abmm206_idx_chk()
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               CALL abmm206_ui_detailshow()
               
               #add-point:page1自定義行為 name="ui_dialog.body.before_row"
               DISPLAY g_bmea_d.getLength() TO FORMONLY.cnt
               CALL abmm206_b_fill_1()
               #end add-point
            
            BEFORE DISPLAY 
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
    
               #控制stus哪個按鈕可以按
               
               
            
 
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
 
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         DISPLAY ARRAY g_bmea2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b1)  
         
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac1 = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL abmm206_ui_detailshow()
               DISPLAY g_bmea2_d.getLength() TO FORMONLY.cnt

            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac1 = DIALOG.getCurrentRow("s_detail2")
        
         END DISPLAY
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps 
         
         BEFORE DIALOG
            #先填充browser資料
            CALL abmm206_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL g_curr_diag.setSelectionMode("s_detail1",1)         
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LET g_current_idx = g_browser.getLength()
            END IF 
            
            IF g_current_idx = 0 AND g_browser.getLength() > 0 THEN
               LET g_current_idx = 1 
            END IF
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmm206_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abmm206_ui_detailshow() #Setting the current row 
            
            #add-point:ui_dialog段before dialog2 name="ui_dialog.before_dialog2"
            #若執行集團級程式，則不開放切換營運中心的功能
            #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
            IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
               CALL cl_set_act_visible("logistics", FALSE)
            ELSE
               CALL cl_set_act_visible("logistics", TRUE)
            END IF
            #end add-point
 
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               
               #end add-point
               CALL abmm206_filter()
               EXIT DIALOG
 
 
 
    
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL abmm206_fetch('F')
            LET g_current_row = g_current_idx         
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm206_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL abmm206_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm206_idx_chk()
            LET g_action_choice = ""
          
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL abmm206_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm206_idx_chk()
            LET g_action_choice = ""
        
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL abmm206_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm206_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL abmm206_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm206_idx_chk()
            LET g_action_choice = ""
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_bmea_d)
                  LET g_export_id[1]   = "s_detail1"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  LET g_export_node[2] = base.typeInfo.create(g_bmea2_d)
                  LET g_export_id[2]   = "s_detail2"
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
          
         ON ACTION close
            LET INT_FLAG=FALSE        
            LET g_action_choice = "exit"
            EXIT DIALOG     
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
                CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD bmea008
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
            
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL abmm206_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL abmm206_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = "-100" 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CLEAR FORM
               ELSE
                  CALL abmm206_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
               
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abmm206_modify()
               #add-point:ON ACTION modify name="menu.modify"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abmm206_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abmm206_delete()
               #add-point:ON ACTION delete name="menu.delete"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmm206_insert()
               #add-point:ON ACTION insert name="menu.insert"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL abmm206_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abmm206_query()
               #add-point:ON ACTION query name="menu.query"
               
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
 
 
 
 
            END IF
 
 
 
 
         
         
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL abmm206_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abmm206_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abmm206_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            
            #END add-point
            CALL cl_user_overview_follow('')
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
         CONTINUE DIALOG
            
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
   
   CALL cl_set_act_visible("accept,cancel", TRUE)
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.browser_search" >}
#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION abmm206_browser_search(p_type)
   #add-point:browser_search段define name="browser_search.define_customerization"
   
   #end add-point   
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_search.define"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abmm206_browser_fill(ps_page_action)
   #add-point:browser_fill段define name="browser_fill.define_customerization"
   
   #end add-point   
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="browser_fill.before_browser_fill"
   IF g_wc = " 1=1" THEN
      LET g_wc = " bmea001 = 'ALL' AND bmea002 = ' ' AND bmea004 = ' ' AND bmea005 = ' ' AND bmea006 = ' ' AND bmea007 = '2' AND ",g_wc
   END IF
   IF g_wc2 = " 1=1" THEN
      LET g_wc2 = " bmea001 = 'ALL' AND bmea002 = ' ' AND bmea004 = ' ' AND bmea005 = ' ' AND bmea006 = ' ' AND bmea007 = '2' AND ",g_wc2
   END IF
   #end add-point    
 
   LET l_searchcol = "bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,bmea007"
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      LET l_wc = " 1=1"
   END IF
   IF cl_null(l_wc2) THEN  #p_wc 查詢條件
      LET l_wc2 = " 1=1"
   END IF
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT bmea001 ",
                      ", bmea002 ",
                      ", bmea003 ",
                      ", bmea004 ",
                      ", bmea005 ",
                      ", bmea006 ",
                      ", bmea007 ",
 
                      " FROM bmea_t ",
                      " ",
                      " ", 
 
 
 
                      " WHERE bmeaent = " ||g_enterprise|| " AND bmeasite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("bmea_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT bmea001 ",
                      ", bmea002 ",
                      ", bmea003 ",
                      ", bmea004 ",
                      ", bmea005 ",
                      ", bmea006 ",
                      ", bmea007 ",
 
                      " FROM bmea_t ",
                      " ",
                      " ", 
 
 
                      " WHERE bmeaent = " ||g_enterprise|| " AND bmeasite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("bmea_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
   
   #若超過最大顯示筆數
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt 
         LET g_errparam.code   = 9035
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   LET g_error_show = 0
 
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_bmea_m.* TO NULL
      CALL g_bmea_d.clear()        
 
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.bmea003,t0.bmea001,t0.bmea002,t0.bmea004,t0.bmea005,t0.bmea006,t0.bmea007 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql  = "SELECT DISTINCT t0.bmea003,t0.bmea001,t0.bmea002,t0.bmea004,t0.bmea005,t0.bmea006,t0.bmea007, 
       t1.imaal003",
                " FROM bmea_t t0",
                #" ",
                " ",
 
 
 
                               " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=t0.bmea003 AND t1.imaal002='"||g_dlang||"' ",
 
                " WHERE t0.bmeaent = " ||g_enterprise|| " AND t0.bmeasite = '" ||g_site|| "' AND ", l_wc," AND ",l_wc2, cl_sql_add_filter("bmea_t")
 
   #add-point:browser_fill,sql_rank前 name="browser_fill.before_sql_rank"
   
   #end add-point
    
   #定義browser_fill sql
   LET g_sql= g_sql, " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前 name="browser_fill.before_pre"
   
   #end add-point
   
   #LET g_sql = cl_sql_add_tabid(g_sql,"bmea_t")             #WC重組
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_bmea003,g_browser[g_cnt].b_bmea001,g_browser[g_cnt].b_bmea002, 
          g_browser[g_cnt].b_bmea004,g_browser[g_cnt].b_bmea005,g_browser[g_cnt].b_bmea006,g_browser[g_cnt].b_bmea007, 
          g_browser[g_cnt].b_bmea003_desc 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
         
         
         #add-point:browser_fill段reference name="browser_fill.reference"
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_bmea003
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_lang||"'", "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_bmea003_desc = g_rtn_fields[1]
      LET g_browser[g_cnt].b_bmea003_desc1 = g_rtn_fields[2]
      DISPLAY BY NAME g_browser[g_cnt].b_bmea003_desc
      DISPLAY BY NAME g_browser[g_cnt].b_bmea003_desc1
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_bmea003
      CALL ap_ref_array2(g_ref_fields,"SELECT imae081 FROM imae_t WHERE imaeent='"||g_enterprise||"' AND imaesite='"||g_site||"' AND imae001=? ", "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_bmea003_desc2 = g_rtn_fields[1] 
      DISPLAY BY NAME g_browser[g_cnt].b_bmea003_desc2
         #end add-point  
      
         #遮罩相關處理
         CALL abmm206_browser_mask()
         
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
      END FOREACH
      FREE browse_pre
   END IF
 
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_bmea001) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   IF g_browser.getLength() = 0 AND l_wc THEN
      INITIALIZE g_bmea_m.* TO NULL
      CALL g_bmea_d.clear()
 
      #add-point:browser_fill段after_clear name="browser_fill.after_clear"
      
      #end add-point 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   LET g_browser_cnt = g_browser.getLength()
   CALL abmm206_fetch('')
   
   #筆數顯示
   LET g_browser_idx = g_current_idx 
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   #add-point:browser_fill段結束前 name="browser_fill.after"
   
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION abmm206_ui_headershow()
   #add-point:ui_headershow段define name="ui_headershow.define_customerization"
   
   #end add-point    
   #add-point:ui_headershow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   
   #end add-point
   
   LET g_bmea_m.bmea001 = g_browser[g_current_idx].b_bmea001   
   LET g_bmea_m.bmea002 = g_browser[g_current_idx].b_bmea002   
   LET g_bmea_m.bmea003 = g_browser[g_current_idx].b_bmea003   
   LET g_bmea_m.bmea004 = g_browser[g_current_idx].b_bmea004   
   LET g_bmea_m.bmea005 = g_browser[g_current_idx].b_bmea005   
   LET g_bmea_m.bmea006 = g_browser[g_current_idx].b_bmea006   
   LET g_bmea_m.bmea007 = g_browser[g_current_idx].b_bmea007   
 
   EXECUTE abmm206_master_referesh USING g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004, 
       g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007 INTO g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002, 
       g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   CALL abmm206_show()
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION abmm206_ui_detailshow()
   #add-point:ui_detailshow段define name="ui_detailshow.define_customerization"
   
   #end add-point
   #add-point:ui_detailshow段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="ui_detailshow.before"
   
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
      #add-point:ui_detailshow段more name="ui_detailshow.more"
      
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx) 
   END IF
   DISPLAY g_bmea_d.getLength() TO FORMONLY.cnt
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abmm206_ui_browser_refresh()
   #add-point:ui_browser_refresh段define name="ui_browser_refresh.define_customerization"
   
   #end add-point   
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmea001 = g_bmea_m.bmea001 
         AND g_browser[l_i].b_bmea002 = g_bmea_m.bmea002 
         AND g_browser[l_i].b_bmea003 = g_bmea_m.bmea003 
         AND g_browser[l_i].b_bmea004 = g_bmea_m.bmea004 
         AND g_browser[l_i].b_bmea005 = g_bmea_m.bmea005 
         AND g_browser[l_i].b_bmea006 = g_bmea_m.bmea006 
         AND g_browser[l_i].b_bmea007 = g_bmea_m.bmea007 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION abmm206_construct()
   #add-point:cs段define name="cs.define_customerization"
   
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   CALL g_bmea2_d.clear() 
   #end add-point 
   
   #add-point:Function前置處理  name="cs.pre_function"
   
   #end add-point
   
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_bmea_m.* TO NULL
   CALL g_bmea_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外 name="cs.head.before"
   
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bmea003,bmea001,bmea002,bmea004,bmea005,bmea006,bmea007
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.head.before_construct"
            
            #end add-point 
            
                 #Ctrlp:construct.c.bmea003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea003
            #add-point:ON ACTION controlp INFIELD bmea003 name="construct.c.bmea003"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaf001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmea003  #顯示到畫面上

            NEXT FIELD bmea003                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea003
            #add-point:BEFORE FIELD bmea003 name="construct.b.bmea003"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea003
            
            #add-point:AFTER FIELD bmea003 name="construct.a.bmea003"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea001
            #add-point:BEFORE FIELD bmea001 name="construct.b.bmea001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea001
            
            #add-point:AFTER FIELD bmea001 name="construct.a.bmea001"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bmea001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea001
            #add-point:ON ACTION controlp INFIELD bmea001 name="construct.c.bmea001"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea002
            #add-point:BEFORE FIELD bmea002 name="construct.b.bmea002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea002
            
            #add-point:AFTER FIELD bmea002 name="construct.a.bmea002"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bmea002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea002
            #add-point:ON ACTION controlp INFIELD bmea002 name="construct.c.bmea002"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea004
            #add-point:BEFORE FIELD bmea004 name="construct.b.bmea004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea004
            
            #add-point:AFTER FIELD bmea004 name="construct.a.bmea004"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bmea004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea004
            #add-point:ON ACTION controlp INFIELD bmea004 name="construct.c.bmea004"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea005
            #add-point:BEFORE FIELD bmea005 name="construct.b.bmea005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea005
            
            #add-point:AFTER FIELD bmea005 name="construct.a.bmea005"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bmea005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea005
            #add-point:ON ACTION controlp INFIELD bmea005 name="construct.c.bmea005"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea006
            #add-point:BEFORE FIELD bmea006 name="construct.b.bmea006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea006
            
            #add-point:AFTER FIELD bmea006 name="construct.a.bmea006"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bmea006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea006
            #add-point:ON ACTION controlp INFIELD bmea006 name="construct.c.bmea006"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea007
            #add-point:BEFORE FIELD bmea007 name="construct.b.bmea007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea007
            
            #add-point:AFTER FIELD bmea007 name="construct.a.bmea007"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.bmea007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea007
            #add-point:ON ACTION controlp INFIELD bmea007 name="construct.c.bmea007"
            
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015, 
          bmea016,bmea017,bmea018
           FROM s_detail1[1].bmea008,s_detail1[1].bmea019,s_detail1[1].bmea009,s_detail1[1].bmea010, 
               s_detail1[1].bmea011,s_detail1[1].bmea012,s_detail1[1].bmea013,s_detail1[1].bmea014,s_detail1[1].bmea015, 
               s_detail1[1].bmea016,s_detail1[1].bmea017,s_detail1[1].bmea018
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct name="cs.body.before_construct"
            
            #end add-point 
            
         #單身公用欄位開窗相關處理
         
           
         #單身一般欄位開窗相關處理
                  #Ctrlp:construct.c.page1.bmea008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea008
            #add-point:ON ACTION controlp INFIELD bmea008 name="construct.c.page1.bmea008"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaf001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmea008  #顯示到畫面上

            NEXT FIELD bmea008                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea008
            #add-point:BEFORE FIELD bmea008 name="construct.b.page1.bmea008"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea008
            
            #add-point:AFTER FIELD bmea008 name="construct.a.page1.bmea008"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea019
            #add-point:BEFORE FIELD bmea019 name="construct.b.page1.bmea019"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea019
            
            #add-point:AFTER FIELD bmea019 name="construct.a.page1.bmea019"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea019
            #add-point:ON ACTION controlp INFIELD bmea019 name="construct.c.page1.bmea019"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea009
            #add-point:BEFORE FIELD bmea009 name="construct.b.page1.bmea009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea009
            
            #add-point:AFTER FIELD bmea009 name="construct.a.page1.bmea009"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea009
            #add-point:ON ACTION controlp INFIELD bmea009 name="construct.c.page1.bmea009"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea010
            #add-point:BEFORE FIELD bmea010 name="construct.b.page1.bmea010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea010
            
            #add-point:AFTER FIELD bmea010 name="construct.a.page1.bmea010"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea010
            #add-point:ON ACTION controlp INFIELD bmea010 name="construct.c.page1.bmea010"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea011
            #add-point:BEFORE FIELD bmea011 name="construct.b.page1.bmea011"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea011
            
            #add-point:AFTER FIELD bmea011 name="construct.a.page1.bmea011"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea011
            #add-point:ON ACTION controlp INFIELD bmea011 name="construct.c.page1.bmea011"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea012
            #add-point:BEFORE FIELD bmea012 name="construct.b.page1.bmea012"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea012
            
            #add-point:AFTER FIELD bmea012 name="construct.a.page1.bmea012"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea012
            #add-point:ON ACTION controlp INFIELD bmea012 name="construct.c.page1.bmea012"
            
            #END add-point
 
 
         #Ctrlp:construct.c.page1.bmea013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea013
            #add-point:ON ACTION controlp INFIELD bmea013 name="construct.c.page1.bmea013"
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmea013  #顯示到畫面上

            NEXT FIELD bmea013                     #返回原欄位


            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea013
            #add-point:BEFORE FIELD bmea013 name="construct.b.page1.bmea013"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea013
            
            #add-point:AFTER FIELD bmea013 name="construct.a.page1.bmea013"
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea014
            #add-point:BEFORE FIELD bmea014 name="construct.b.page1.bmea014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea014
            
            #add-point:AFTER FIELD bmea014 name="construct.a.page1.bmea014"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea014
            #add-point:ON ACTION controlp INFIELD bmea014 name="construct.c.page1.bmea014"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea015
            #add-point:BEFORE FIELD bmea015 name="construct.b.page1.bmea015"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea015
            
            #add-point:AFTER FIELD bmea015 name="construct.a.page1.bmea015"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea015
            #add-point:ON ACTION controlp INFIELD bmea015 name="construct.c.page1.bmea015"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea016
            #add-point:BEFORE FIELD bmea016 name="construct.b.page1.bmea016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea016
            
            #add-point:AFTER FIELD bmea016 name="construct.a.page1.bmea016"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea016
            #add-point:ON ACTION controlp INFIELD bmea016 name="construct.c.page1.bmea016"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea017
            #add-point:BEFORE FIELD bmea017 name="construct.b.page1.bmea017"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea017
            
            #add-point:AFTER FIELD bmea017 name="construct.a.page1.bmea017"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea017
            #add-point:ON ACTION controlp INFIELD bmea017 name="construct.c.page1.bmea017"
            
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea018
            #add-point:BEFORE FIELD bmea018 name="construct.b.page1.bmea018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea018
            
            #add-point:AFTER FIELD bmea018 name="construct.a.page1.bmea018"
            
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.bmea018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea018
            #add-point:ON ACTION controlp INFIELD bmea018 name="construct.c.page1.bmea018"
            
            #END add-point
 
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct name="cs.more_construct"
      
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog name="cs.before_dialog"
         
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct name="cs.after_construct"
   LET g_wc = " bmea001 = 'ALL' AND bmea002 = ' ' AND bmea004 = ' ' AND bmea005 = ' ' AND bmea006 = ' ' AND bmea007 = '2' AND ",g_wc
   LET g_wc2_table1 = " bmea001 = 'ALL' AND bmea002 = ' ' AND bmea004 = ' ' AND bmea005 = ' ' AND bmea006 = ' ' AND bmea007 = '2' AND ",g_wc2_table1
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION abmm206_filter()
   #add-point:filter段define name="filter.define_customerization"
   
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON bmea003,bmea001,bmea002,bmea004,bmea005,bmea006,bmea007
                          FROM s_browse[1].b_bmea003,s_browse[1].b_bmea001,s_browse[1].b_bmea002,s_browse[1].b_bmea004, 
                              s_browse[1].b_bmea005,s_browse[1].b_bmea006,s_browse[1].b_bmea007
 
         BEFORE CONSTRUCT
               DISPLAY abmm206_filter_parser('bmea003') TO s_browse[1].b_bmea003
            DISPLAY abmm206_filter_parser('bmea001') TO s_browse[1].b_bmea001
            DISPLAY abmm206_filter_parser('bmea002') TO s_browse[1].b_bmea002
            DISPLAY abmm206_filter_parser('bmea004') TO s_browse[1].b_bmea004
            DISPLAY abmm206_filter_parser('bmea005') TO s_browse[1].b_bmea005
            DISPLAY abmm206_filter_parser('bmea006') TO s_browse[1].b_bmea006
            DISPLAY abmm206_filter_parser('bmea007') TO s_browse[1].b_bmea007
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL abmm206_filter_show('bmea003')
   CALL abmm206_filter_show('bmea001')
   CALL abmm206_filter_show('bmea002')
   CALL abmm206_filter_show('bmea004')
   CALL abmm206_filter_show('bmea005')
   CALL abmm206_filter_show('bmea006')
   CALL abmm206_filter_show('bmea007')
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION abmm206_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION abmm206_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = abmm206_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abmm206_query()
   #add-point:query段define name="query.define_customerization"
   
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="query.befroe_query"
   
   #end add-point 
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
   
   LET ls_wc = g_wc
 
   LET INT_FLAG = 0    
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bmea_d.clear()
 
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL abmm206_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL abmm206_browser_fill(g_wc)
      CALL abmm206_fetch("")
      RETURN
   END IF
   
   LET l_ac = 1
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   
   LET g_error_show = 1
   CALL abmm206_browser_fill("F")
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||")")
   
   #備份搜尋條件
   LET ls_wc = g_wc
   
   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL abmm206_fetch("F") 
   END IF
   
   CALL abmm206_idx_chk()
   
   LET g_wc_filter = ""
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abmm206_fetch(p_flag)
   #add-point:fetch段define name="fetch.define_customerization"
   
   #end add-point   
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fetch.before_fetch"
   
   #end add-point    
 
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L' 
         LET g_current_idx = g_header_cnt
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart + g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting(g_current_idx,g_detail_cnt)
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bmea_m.bmea001 = g_browser[g_current_idx].b_bmea001
   LET g_bmea_m.bmea002 = g_browser[g_current_idx].b_bmea002
   LET g_bmea_m.bmea003 = g_browser[g_current_idx].b_bmea003
   LET g_bmea_m.bmea004 = g_browser[g_current_idx].b_bmea004
   LET g_bmea_m.bmea005 = g_browser[g_current_idx].b_bmea005
   LET g_bmea_m.bmea006 = g_browser[g_current_idx].b_bmea006
   LET g_bmea_m.bmea007 = g_browser[g_current_idx].b_bmea007
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE abmm206_master_referesh USING g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004, 
       g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007 INTO g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002, 
       g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "bmea_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      INITIALIZE g_bmea_m.* TO NULL
      RETURN
   END IF
 
   #遮罩相關處理
   LET g_bmea_m_mask_o.* =  g_bmea_m.*
   CALL abmm206_bmea_t_mask()
   LET g_bmea_m_mask_n.* =  g_bmea_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL abmm206_set_act_visible()
   CALL abmm206_set_act_no_visible()
 
   #add-point:fetch結束前 name="fetch.after"
   
   #end add-point
 
   #保存單頭舊值
   LET g_bmea_m_t.* = g_bmea_m.*
   LET g_bmea_m_o.* = g_bmea_m.*
   
   #重新顯示   
   CALL abmm206_show()
 
   
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.insert" >}
#+ 資料新增
PRIVATE FUNCTION abmm206_insert()
   #add-point:insert段define name="insert.define_customerization"
   
   #end add-point   
   #add-point:insert段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   CALL g_bmea2_d.clear() 
   #end add-point
   
   #add-point:Function前置處理  name="insert.before"
   
   #end add-point    
   
   #清除相關資料
   CLEAR FORM                    
   CALL g_bmea_d.clear()
 
 
   INITIALIZE g_bmea_m.* LIKE bmea_t.*             #DEFAULT 設定
   LET g_bmea001_t = NULL
   LET g_bmea002_t = NULL
   LET g_bmea003_t = NULL
   LET g_bmea004_t = NULL
   LET g_bmea005_t = NULL
   LET g_bmea006_t = NULL
   LET g_bmea007_t = NULL
 
   LET g_master_insert = FALSE
   CALL s_transaction_begin()
   WHILE TRUE
     
      #單頭預設值
      
     
      #add-point:單頭預設值 name="insert.default"
      LET g_bmea_m.bmea001 = 'ALL'
      LET g_bmea_m.bmea002 = ' '
      LET g_bmea_m.bmea004 = ' '
      LET g_bmea_m.bmea005 = ' '
      LET g_bmea_m.bmea006 = ' '
      LET g_bmea_m.bmea007 = '2'
      #end add-point 
 
      CALL abmm206_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      
      #end add-point
      
      IF INT_FLAG AND NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_bmea_m.* TO NULL
         INITIALIZE g_bmea_d TO NULL
 
         CALL abmm206_show()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_bmea_m.* = g_bmea_m_t.*
         CALL abmm206_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN
      END IF
    
      #CALL g_bmea_d.clear()
 
      
      #add-point:單頭輸入後2 name="insert.after_insert2"
      
      #end add-point
 
      LET g_rec_b = 0
      EXIT WHILE
      
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL abmm206_set_act_visible()
   CALL abmm206_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_bmea001_t = g_bmea_m.bmea001
   LET g_bmea002_t = g_bmea_m.bmea002
   LET g_bmea003_t = g_bmea_m.bmea003
   LET g_bmea004_t = g_bmea_m.bmea004
   LET g_bmea005_t = g_bmea_m.bmea005
   LET g_bmea006_t = g_bmea_m.bmea006
   LET g_bmea007_t = g_bmea_m.bmea007
 
   
   #組合新增資料的條件
   LET g_add_browse = " bmeaent = " ||g_enterprise|| " AND bmeasite = '" ||g_site|| "' AND",
                      " bmea001 = '", g_bmea_m.bmea001, "' "
                      ," AND bmea002 = '", g_bmea_m.bmea002, "' "
                      ," AND bmea003 = '", g_bmea_m.bmea003, "' "
                      ," AND bmea004 = '", g_bmea_m.bmea004, "' "
                      ," AND bmea005 = '", g_bmea_m.bmea005, "' "
                      ," AND bmea006 = '", g_bmea_m.bmea006, "' "
                      ," AND bmea007 = '", g_bmea_m.bmea007, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abmm206_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CALL abmm206_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE abmm206_master_referesh USING g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004, 
       g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007 INTO g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002, 
       g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   
   #遮罩相關處理
   LET g_bmea_m_mask_o.* =  g_bmea_m.*
   CALL abmm206_bmea_t_mask()
   LET g_bmea_m_mask_n.* =  g_bmea_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_bmea_m.bmea003,g_bmea_m.imaal003,g_bmea_m.imaal004,g_bmea_m.imae081,g_bmea_m.bmea001, 
       g_bmea_m.bmea002,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   
   #功能已完成,通報訊息中心
   CALL abmm206_msgcentre_notify('insert')
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.modify" >}
#+ 資料修改
PRIVATE FUNCTION abmm206_modify()
   #add-point:modify段define name="modify.define_customerization"
   
   #end add-point    
   #add-point:modify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="modify.pre_function"
   
   #end add-point
   
   IF g_bmea_m.bmea001 IS NULL
   OR g_bmea_m.bmea002 IS NULL
   OR g_bmea_m.bmea003 IS NULL
   OR g_bmea_m.bmea004 IS NULL
   OR g_bmea_m.bmea005 IS NULL
   OR g_bmea_m.bmea006 IS NULL
   OR g_bmea_m.bmea007 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL  
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
   LET g_bmea001_t = g_bmea_m.bmea001
   LET g_bmea002_t = g_bmea_m.bmea002
   LET g_bmea003_t = g_bmea_m.bmea003
   LET g_bmea004_t = g_bmea_m.bmea004
   LET g_bmea005_t = g_bmea_m.bmea005
   LET g_bmea006_t = g_bmea_m.bmea006
   LET g_bmea007_t = g_bmea_m.bmea007
 
   CALL s_transaction_begin()
   
   OPEN abmm206_cl USING g_enterprise, g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmm206_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE abmm206_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmm206_master_referesh USING g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004, 
       g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007 INTO g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002, 
       g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   
   #遮罩相關處理
   LET g_bmea_m_mask_o.* =  g_bmea_m.*
   CALL abmm206_bmea_t_mask()
   LET g_bmea_m_mask_n.* =  g_bmea_m.*
   
   CALL s_transaction_end('Y','0')
 
   CALL abmm206_show()
   WHILE TRUE
      LET g_bmea001_t = g_bmea_m.bmea001
      LET g_bmea002_t = g_bmea_m.bmea002
      LET g_bmea003_t = g_bmea_m.bmea003
      LET g_bmea004_t = g_bmea_m.bmea004
      LET g_bmea005_t = g_bmea_m.bmea005
      LET g_bmea006_t = g_bmea_m.bmea006
      LET g_bmea007_t = g_bmea_m.bmea007
 
 
      #add-point:modify段修改前 name="modify.before_input"
      
      #end add-point
      
      CALL abmm206_input("u")     #欄位更改
      
      #add-point:modify段修改後 name="modify.after_input"
      
      #end add-point
      
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         LET g_bmea_m.* = g_bmea_m_t.*
         CALL abmm206_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更(更新單身table的key欄位值)
      IF g_bmea_m.bmea001 != g_bmea001_t 
      OR g_bmea_m.bmea002 != g_bmea002_t 
      OR g_bmea_m.bmea003 != g_bmea003_t 
      OR g_bmea_m.bmea004 != g_bmea004_t 
      OR g_bmea_m.bmea005 != g_bmea005_t 
      OR g_bmea_m.bmea006 != g_bmea006_t 
      OR g_bmea_m.bmea007 != g_bmea007_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單頭(偽)修改前 name="modify.b_key_update"
         
         #end add-point
         
         #add-point:單頭(偽)修改中 name="modify.m_key_update"
         
         #end add-point
         
 
         
         #add-point:單頭(偽)修改後 name="modify.a_key_update"
         
         #end add-point
         
      END IF
      
      EXIT WHILE
      
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL abmm206_set_act_visible()
   CALL abmm206_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " bmeaent = " ||g_enterprise|| " AND bmeasite = '" ||g_site|| "' AND",
                      " bmea001 = '", g_bmea_m.bmea001, "' "
                      ," AND bmea002 = '", g_bmea_m.bmea002, "' "
                      ," AND bmea003 = '", g_bmea_m.bmea003, "' "
                      ," AND bmea004 = '", g_bmea_m.bmea004, "' "
                      ," AND bmea005 = '", g_bmea_m.bmea005, "' "
                      ," AND bmea006 = '", g_bmea_m.bmea006, "' "
                      ," AND bmea007 = '", g_bmea_m.bmea007, "' "
 
   #填到對應位置
   CALL abmm206_browser_fill("")
 
   CALL abmm206_idx_chk()
 
   CLOSE abmm206_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL abmm206_msgcentre_notify('modify')
   
END FUNCTION   
 
{</section>}
 
{<section id="abmm206.input" >}
#+ 資料輸入
PRIVATE FUNCTION abmm206_input(p_cmd)
   #add-point:input段define name="input.define_customerization"
   
   #end add-point   
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num10               #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num10               #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10               #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   DEFINE l_imaa006              LIKE imaa_t.imaa006
   DEFINE l_success              LIKE type_t.num5
   DEFINE l_rate                 LIKE type_t.num26_10
   DEFINE l_ac1_t                LIKE type_t.num5
   #end add-point
   
   #add-point:Function前置處理  name="input.pre_function"
   
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmea_m.bmea003,g_bmea_m.imaal003,g_bmea_m.imaal004,g_bmea_m.imae081,g_bmea_m.bmea001, 
       g_bmea_m.bmea002,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   
   #end add-point 
   LET g_forupd_sql = "SELECT bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015, 
       bmea016,bmea017,bmea018 FROM bmea_t WHERE bmeaent=? AND bmeasite=? AND bmea001=? AND bmea002=?  
       AND bmea003=? AND bmea004=? AND bmea005=? AND bmea006=? AND bmea007=? AND bmea008=? AND bmea019=?  
       FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmm206_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abmm206_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   LET g_forupd_sql = "SELECT bmeb009,'' FROM bmeb_t WHERE bmebent=? AND bmebsite=? AND bmeb001=? AND bmeb002=? AND bmeb003=? AND bmeb004=? AND bmeb005=? AND bmeb006=? AND bmeb007=? AND bmeb008=? AND bmeb010=? AND bmeb009 = ? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm206_bcl2 CURSOR FROM g_forupd_sql
   
   #end add-point
   CALL abmm206_set_no_entry(p_cmd)
   #add-point:set_no_entry後 name="input.after_set_no_entry"
   LET g_errshow = 1 
   #end add-point
 
   DISPLAY BY NAME g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea004,g_bmea_m.bmea005, 
       g_bmea_m.bmea006,g_bmea_m.bmea007
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:進入修改段前 name="input.before_input"
   
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
{</section>}
 
{<section id="abmm206.input.head" >}
   
      #單頭段
      INPUT BY NAME g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea004,g_bmea_m.bmea005, 
          g_bmea_m.bmea006,g_bmea_m.bmea007 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前 name="input.head.b_input"
            
            #end add-point
          
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea003
            
            #add-point:AFTER FIELD bmea003 name="input.a.bmea003"
            #此段落由子樣板a05產生
            CALL abmm206_desc()
            IF NOT cl_null(g_bmea_m.bmea003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND  g_bmea_m.bmea003 != g_bmea003_t ) THEN 
                  IF NOT ap_chk_notDup(g_bmea_m.bmea003,"SELECT COUNT(*) FROM bmea_t WHERE bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND bmea001 = 'ALL' AND bmea002 = ' ' AND bmea003 = '"||g_bmea_m.bmea003 ||"' AND bmea004 = ' ' AND bmea005 = ' ' AND bmea006 = ' ' AND bmea007 = '2'",'std-00004',0) THEN 
                     LET g_bmea_m.bmea003 = g_bmea003_t
                     CALL abmm206_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmea_m.bmea003) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmea_m.bmea003
               #呼叫檢查存在的library
               IF NOT cl_chk_exist("v_imaf001_1") THEN
                  LET g_bmea_m.bmea003 = g_bmea003_t
                  CALL abmm206_desc()
                  NEXT FIELD CURRENT
               END IF
               #160115-00006#1---add---begin
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM bmba_t
                WHERE bmbaent = g_enterprise
                  AND bmbasite = 'ALL'
                  AND bmba003 = g_bmea_m.bmea003
               IF l_cnt = 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00265'
                  LET g_errparam.extend = g_bmea_m.bmea003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  
                  LET g_bmea_m.bmea003 = g_bmea003_t
                  CALL abmm206_desc()
                  NEXT FIELD CURRENT
               END IF
               LET l_cnt = 0
               SELECT COUNT(*) INTO l_cnt
                 FROM bmaa_t,bmba_t 
                WHERE bmaaent = g_enterprise
                  AND bmaaent = bmbaent 
                  AND bmaa001 = bmba001
                  AND bmaa002 = bmba002
                  AND bmba003 = g_bmea_m.bmea003
                  AND bmaastus = 'Y'
               IF l_cnt = 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00266'
                  LET g_errparam.extend = g_bmea_m.bmea003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  
                  LET g_bmea_m.bmea003 = g_bmea003_t
                  CALL abmm206_desc()
                  NEXT FIELD CURRENT
               END IF                  
               #160115-00006#1---add---end
            END IF 
            
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea003
            #add-point:BEFORE FIELD bmea003 name="input.b.bmea003"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea003
            #add-point:ON CHANGE bmea003 name="input.g.bmea003"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea001
            #add-point:BEFORE FIELD bmea001 name="input.b.bmea001"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea001
            
            #add-point:AFTER FIELD bmea001 name="input.a.bmea001"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmea_m.bmea001) AND NOT cl_null(g_bmea_m.bmea002) AND NOT cl_null(g_bmea_m.bmea003) AND NOT cl_null(g_bmea_m.bmea004) AND NOT cl_null(g_bmea_m.bmea005) AND NOT cl_null(g_bmea_m.bmea006) AND NOT cl_null(g_bmea_m.bmea007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bmea_m.bmea001 != g_bmea001_t  OR g_bmea_m.bmea002 != g_bmea002_t  OR g_bmea_m.bmea003 != g_bmea003_t  OR g_bmea_m.bmea004 != g_bmea004_t  OR g_bmea_m.bmea005 != g_bmea005_t  OR g_bmea_m.bmea006 != g_bmea006_t  OR g_bmea_m.bmea007 != g_bmea007_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND "||"bmea001 = '"||g_bmea_m.bmea001 ||"' AND "|| "bmea002 = '"||g_bmea_m.bmea002 ||"' AND "|| "bmea003 = '"||g_bmea_m.bmea003 ||"' AND "|| "bmea004 = '"||g_bmea_m.bmea004 ||"' AND "|| "bmea005 = '"||g_bmea_m.bmea005 ||"' AND "|| "bmea006 = '"||g_bmea_m.bmea006 ||"' AND "|| "bmea007 = '"||g_bmea_m.bmea007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea001
            #add-point:ON CHANGE bmea001 name="input.g.bmea001"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea002
            #add-point:BEFORE FIELD bmea002 name="input.b.bmea002"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea002
            
            #add-point:AFTER FIELD bmea002 name="input.a.bmea002"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmea_m.bmea001) AND NOT cl_null(g_bmea_m.bmea002) AND NOT cl_null(g_bmea_m.bmea003) AND NOT cl_null(g_bmea_m.bmea004) AND NOT cl_null(g_bmea_m.bmea005) AND NOT cl_null(g_bmea_m.bmea006) AND NOT cl_null(g_bmea_m.bmea007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bmea_m.bmea001 != g_bmea001_t  OR g_bmea_m.bmea002 != g_bmea002_t  OR g_bmea_m.bmea003 != g_bmea003_t  OR g_bmea_m.bmea004 != g_bmea004_t  OR g_bmea_m.bmea005 != g_bmea005_t  OR g_bmea_m.bmea006 != g_bmea006_t  OR g_bmea_m.bmea007 != g_bmea007_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND "||"bmea001 = '"||g_bmea_m.bmea001 ||"' AND "|| "bmea002 = '"||g_bmea_m.bmea002 ||"' AND "|| "bmea003 = '"||g_bmea_m.bmea003 ||"' AND "|| "bmea004 = '"||g_bmea_m.bmea004 ||"' AND "|| "bmea005 = '"||g_bmea_m.bmea005 ||"' AND "|| "bmea006 = '"||g_bmea_m.bmea006 ||"' AND "|| "bmea007 = '"||g_bmea_m.bmea007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea002
            #add-point:ON CHANGE bmea002 name="input.g.bmea002"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea004
            #add-point:BEFORE FIELD bmea004 name="input.b.bmea004"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea004
            
            #add-point:AFTER FIELD bmea004 name="input.a.bmea004"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmea_m.bmea001) AND NOT cl_null(g_bmea_m.bmea002) AND NOT cl_null(g_bmea_m.bmea003) AND NOT cl_null(g_bmea_m.bmea004) AND NOT cl_null(g_bmea_m.bmea005) AND NOT cl_null(g_bmea_m.bmea006) AND NOT cl_null(g_bmea_m.bmea007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bmea_m.bmea001 != g_bmea001_t  OR g_bmea_m.bmea002 != g_bmea002_t  OR g_bmea_m.bmea003 != g_bmea003_t  OR g_bmea_m.bmea004 != g_bmea004_t  OR g_bmea_m.bmea005 != g_bmea005_t  OR g_bmea_m.bmea006 != g_bmea006_t  OR g_bmea_m.bmea007 != g_bmea007_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND "||"bmea001 = '"||g_bmea_m.bmea001 ||"' AND "|| "bmea002 = '"||g_bmea_m.bmea002 ||"' AND "|| "bmea003 = '"||g_bmea_m.bmea003 ||"' AND "|| "bmea004 = '"||g_bmea_m.bmea004 ||"' AND "|| "bmea005 = '"||g_bmea_m.bmea005 ||"' AND "|| "bmea006 = '"||g_bmea_m.bmea006 ||"' AND "|| "bmea007 = '"||g_bmea_m.bmea007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea004
            #add-point:ON CHANGE bmea004 name="input.g.bmea004"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea005
            #add-point:BEFORE FIELD bmea005 name="input.b.bmea005"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea005
            
            #add-point:AFTER FIELD bmea005 name="input.a.bmea005"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmea_m.bmea001) AND NOT cl_null(g_bmea_m.bmea002) AND NOT cl_null(g_bmea_m.bmea003) AND NOT cl_null(g_bmea_m.bmea004) AND NOT cl_null(g_bmea_m.bmea005) AND NOT cl_null(g_bmea_m.bmea006) AND NOT cl_null(g_bmea_m.bmea007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bmea_m.bmea001 != g_bmea001_t  OR g_bmea_m.bmea002 != g_bmea002_t  OR g_bmea_m.bmea003 != g_bmea003_t  OR g_bmea_m.bmea004 != g_bmea004_t  OR g_bmea_m.bmea005 != g_bmea005_t  OR g_bmea_m.bmea006 != g_bmea006_t  OR g_bmea_m.bmea007 != g_bmea007_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND "||"bmea001 = '"||g_bmea_m.bmea001 ||"' AND "|| "bmea002 = '"||g_bmea_m.bmea002 ||"' AND "|| "bmea003 = '"||g_bmea_m.bmea003 ||"' AND "|| "bmea004 = '"||g_bmea_m.bmea004 ||"' AND "|| "bmea005 = '"||g_bmea_m.bmea005 ||"' AND "|| "bmea006 = '"||g_bmea_m.bmea006 ||"' AND "|| "bmea007 = '"||g_bmea_m.bmea007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea005
            #add-point:ON CHANGE bmea005 name="input.g.bmea005"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea006
            #add-point:BEFORE FIELD bmea006 name="input.b.bmea006"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea006
            
            #add-point:AFTER FIELD bmea006 name="input.a.bmea006"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmea_m.bmea001) AND NOT cl_null(g_bmea_m.bmea002) AND NOT cl_null(g_bmea_m.bmea003) AND NOT cl_null(g_bmea_m.bmea004) AND NOT cl_null(g_bmea_m.bmea005) AND NOT cl_null(g_bmea_m.bmea006) AND NOT cl_null(g_bmea_m.bmea007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bmea_m.bmea001 != g_bmea001_t  OR g_bmea_m.bmea002 != g_bmea002_t  OR g_bmea_m.bmea003 != g_bmea003_t  OR g_bmea_m.bmea004 != g_bmea004_t  OR g_bmea_m.bmea005 != g_bmea005_t  OR g_bmea_m.bmea006 != g_bmea006_t  OR g_bmea_m.bmea007 != g_bmea007_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND "||"bmea001 = '"||g_bmea_m.bmea001 ||"' AND "|| "bmea002 = '"||g_bmea_m.bmea002 ||"' AND "|| "bmea003 = '"||g_bmea_m.bmea003 ||"' AND "|| "bmea004 = '"||g_bmea_m.bmea004 ||"' AND "|| "bmea005 = '"||g_bmea_m.bmea005 ||"' AND "|| "bmea006 = '"||g_bmea_m.bmea006 ||"' AND "|| "bmea007 = '"||g_bmea_m.bmea007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea006
            #add-point:ON CHANGE bmea006 name="input.g.bmea006"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea007
            #add-point:BEFORE FIELD bmea007 name="input.b.bmea007"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea007
            
            #add-point:AFTER FIELD bmea007 name="input.a.bmea007"
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmea_m.bmea001) AND NOT cl_null(g_bmea_m.bmea002) AND NOT cl_null(g_bmea_m.bmea003) AND NOT cl_null(g_bmea_m.bmea004) AND NOT cl_null(g_bmea_m.bmea005) AND NOT cl_null(g_bmea_m.bmea006) AND NOT cl_null(g_bmea_m.bmea007) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bmea_m.bmea001 != g_bmea001_t  OR g_bmea_m.bmea002 != g_bmea002_t  OR g_bmea_m.bmea003 != g_bmea003_t  OR g_bmea_m.bmea004 != g_bmea004_t  OR g_bmea_m.bmea005 != g_bmea005_t  OR g_bmea_m.bmea006 != g_bmea006_t  OR g_bmea_m.bmea007 != g_bmea007_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND "||"bmea001 = '"||g_bmea_m.bmea001 ||"' AND "|| "bmea002 = '"||g_bmea_m.bmea002 ||"' AND "|| "bmea003 = '"||g_bmea_m.bmea003 ||"' AND "|| "bmea004 = '"||g_bmea_m.bmea004 ||"' AND "|| "bmea005 = '"||g_bmea_m.bmea005 ||"' AND "|| "bmea006 = '"||g_bmea_m.bmea006 ||"' AND "|| "bmea007 = '"||g_bmea_m.bmea007 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF



            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea007
            #add-point:ON CHANGE bmea007 name="input.g.bmea007"
            
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.bmea003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea003
            #add-point:ON ACTION controlp INFIELD bmea003 name="input.c.bmea003"
#此段落由子樣板a07產生            
            #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		   	LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmea_m.bmea003             #給予default值
            LET g_qryparam.where = "EXISTS (SELECT 1 FROM bmaa_t WHERE bmaaent = bmbaent AND bmaa001 = bmba001 AND bmaa002 = bmba002 AND bmaastus = 'Y')"
            #給予arg

            #CALL q_imaf001_6()                                #呼叫開窗  #160115-00006#1---mark
            CALL q_bmba003()    #160115-00006#1---add
            LET g_bmea_m.bmea003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmea_m.bmea003 TO bmea003              #顯示到畫面上
            CALL abmm206_desc()
            NEXT FIELD bmea003                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.bmea001
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea001
            #add-point:ON ACTION controlp INFIELD bmea001 name="input.c.bmea001"
            
            #END add-point
 
 
         #Ctrlp:input.c.bmea002
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea002
            #add-point:ON ACTION controlp INFIELD bmea002 name="input.c.bmea002"
            
            #END add-point
 
 
         #Ctrlp:input.c.bmea004
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea004
            #add-point:ON ACTION controlp INFIELD bmea004 name="input.c.bmea004"
            
            #END add-point
 
 
         #Ctrlp:input.c.bmea005
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea005
            #add-point:ON ACTION controlp INFIELD bmea005 name="input.c.bmea005"
            
            #END add-point
 
 
         #Ctrlp:input.c.bmea006
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea006
            #add-point:ON ACTION controlp INFIELD bmea006 name="input.c.bmea006"
            
            #END add-point
 
 
         #Ctrlp:input.c.bmea007
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea007
            #add-point:ON ACTION controlp INFIELD bmea007 name="input.c.bmea007"
            
            #END add-point
 
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            
            #錯誤訊息統整顯示
            #CALL cl_err_collect_show()
            #CALL cl_showmsg()
            DISPLAY BY NAME g_bmea_m.bmea001             
                            ,g_bmea_m.bmea002   
                            ,g_bmea_m.bmea003   
                            ,g_bmea_m.bmea004   
                            ,g_bmea_m.bmea005   
                            ,g_bmea_m.bmea006   
                            ,g_bmea_m.bmea007   
 
 
            #add-point:單頭修改前 name="input.head.b_after_input"
            
            #end add-point
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前 name="input.head.b_update"
               
               #end add-point
            
               #將遮罩欄位還原
               CALL abmm206_bmea_t_mask_restore('restore_mask_o')
            
               UPDATE bmea_t SET (bmea003,bmea001,bmea002,bmea004,bmea005,bmea006,bmea007) = (g_bmea_m.bmea003, 
                   g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006, 
                   g_bmea_m.bmea007)
                WHERE bmeaent = g_enterprise AND bmeasite = g_site AND bmea001 = g_bmea001_t
                  AND bmea002 = g_bmea002_t
                  AND bmea003 = g_bmea003_t
                  AND bmea004 = g_bmea004_t
                  AND bmea005 = g_bmea005_t
                  AND bmea006 = g_bmea006_t
                  AND bmea007 = g_bmea007_t
 
               #add-point:單頭修改中 name="input.head.m_update"
               
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmea_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmea_t:",SQLERRMESSAGE 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmea_m.bmea001
               LET gs_keys_bak[1] = g_bmea001_t
               LET gs_keys[2] = g_bmea_m.bmea002
               LET gs_keys_bak[2] = g_bmea002_t
               LET gs_keys[3] = g_bmea_m.bmea003
               LET gs_keys_bak[3] = g_bmea003_t
               LET gs_keys[4] = g_bmea_m.bmea004
               LET gs_keys_bak[4] = g_bmea004_t
               LET gs_keys[5] = g_bmea_m.bmea005
               LET gs_keys_bak[5] = g_bmea005_t
               LET gs_keys[6] = g_bmea_m.bmea006
               LET gs_keys_bak[6] = g_bmea006_t
               LET gs_keys[7] = g_bmea_m.bmea007
               LET gs_keys_bak[7] = g_bmea007_t
               LET gs_keys[8] = g_bmea_d[g_detail_idx].bmea008
               LET gs_keys_bak[8] = g_bmea_d_t.bmea008
               LET gs_keys[9] = g_bmea_d[g_detail_idx].bmea019
               LET gs_keys_bak[9] = g_bmea_d_t.bmea019
               CALL abmm206_update_b('bmea_t',gs_keys,gs_keys_bak,"'1'")
                     
 
                     #add-point:單頭修改後 name="input.head.a_update"
                     
                     #end add-point
    
                     #頭先不紀錄
                     #LET g_log1 = util.JSON.stringify(g_bmea_m_t)
                     #LET g_log2 = util.JSON.stringify(g_bmea_m)
                     #IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                     #   CALL s_transaction_end('N','0')
                     #ELSE
                        CALL s_transaction_end('Y','0')
                     #END IF
               END CASE
            
               #將遮罩欄位進行遮蔽
               CALL abmm206_bmea_t_mask_restore('restore_mask_n')
            
            ELSE    
               #add-point:單頭新增 name="input.head.a_insert"
               
               #end add-point
               
               #多語言處理
               
                         
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abmm206_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            END IF
 
           LET g_bmea001_t = g_bmea_m.bmea001
           LET g_bmea002_t = g_bmea_m.bmea002
           LET g_bmea003_t = g_bmea_m.bmea003
           LET g_bmea004_t = g_bmea_m.bmea004
           LET g_bmea005_t = g_bmea_m.bmea005
           LET g_bmea006_t = g_bmea_m.bmea006
           LET g_bmea007_t = g_bmea_m.bmea007
 
           
           IF g_bmea_d.getLength() = 0 THEN
              NEXT FIELD bmea008
           END IF
 
      END INPUT
 
{</section>}
 
{<section id="abmm206.input.body" >}
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmea_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmea_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmm206_b_fill(g_wc2) #test 
            #如果一直都在單頭則控制筆數位置
            IF g_loc = 'm' THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm' 
            #add-point:資料輸入前 name="input.body.before_input"
 
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row name="input.body.before_row2"
            
            #end add-point  
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm206_idx_chk()
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN abmm206_cl USING g_enterprise, g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007                          
               IF STATUS THEN
                  CLOSE abmm206_cl
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN abmm206_cl:" 
                  LET g_errparam.code   = STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            IF g_rec_b >= l_ac 
               AND g_bmea_d[l_ac].bmea008 IS NOT NULL
               AND g_bmea_d[l_ac].bmea019 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bmea_d_t.* = g_bmea_d[l_ac].*  #BACKUP
               LET g_bmea_d_o.* = g_bmea_d[l_ac].*  #BACKUP
               CALL abmm206_set_entry_b(l_cmd)
               #add-point:set_entry_b後 name="input.body.before_row.set_entry_b"
               
               #end add-point
               CALL abmm206_set_no_entry_b(l_cmd)
               OPEN abmm206_bcl USING g_enterprise, g_site,g_bmea_m.bmea001,
                                                g_bmea_m.bmea002,
                                                g_bmea_m.bmea003,
                                                g_bmea_m.bmea004,
                                                g_bmea_m.bmea005,
                                                g_bmea_m.bmea006,
                                                g_bmea_m.bmea007,
 
                                                g_bmea_d_t.bmea008
                                                ,g_bmea_d_t.bmea019
 
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "OPEN abmm206_bcl:" 
                  LET g_errparam.code   =  STATUS 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmm206_bcl INTO g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009, 
                      g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013, 
                      g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017, 
                      g_bmea_d[l_ac].bmea018
                  IF SQLCA.sqlcode THEN
                      INITIALIZE g_errparam TO NULL 
                      LET g_errparam.extend = g_bmea_d_t.bmea008,":",SQLERRMESSAGE 
                      LET g_errparam.code   = SQLCA.sqlcode 
                      LET g_errparam.popup  = TRUE 
                      CALL cl_err()
                      LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmea_d_mask_o[l_ac].* =  g_bmea_d[l_ac].*
                  CALL abmm206_bmea_t_mask()
                  LET g_bmea_d_mask_n[l_ac].* =  g_bmea_d[l_ac].*
                  
                  CALL abmm206_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            CALL abmm206_b_fill_1()
            #end add-point  
            
 
        
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            INITIALIZE g_bmea_d_t.* TO NULL
            INITIALIZE g_bmea_d_o.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmea_d[l_ac].* TO NULL
            #公用欄位預設值
              
            #一般欄位預設值
                  LET g_bmea_d[l_ac].bmea011 = "1"
      LET g_bmea_d[l_ac].bmea012 = "1"
      LET g_bmea_d[l_ac].bmea014 = "N"
      LET g_bmea_d[l_ac].bmea015 = "99"
      LET g_bmea_d[l_ac].bmea016 = "1"
      LET g_bmea_d[l_ac].bmea017 = "100"
      LET g_bmea_d[l_ac].bmea018 = "1"
 
            
            #add-point:modify段before備份 name="input.body.before_insert.before_bak"

      LET g_bmea_d[l_ac].bmea019 = ' '
            #end add-point
            LET g_bmea_d_t.* = g_bmea_d[l_ac].*     #新輸入資料
            LET g_bmea_d_o.* = g_bmea_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmm206_set_entry_b(l_cmd)
            #add-point:set_entry_b後 name="input.body.before_insert.set_entry_b"
            
            #end add-point
            CALL abmm206_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmea_d[li_reproduce_target].* = g_bmea_d[li_reproduce].*
 
               LET g_bmea_d[g_bmea_d.getLength()].bmea008 = NULL
               LET g_bmea_d[g_bmea_d.getLength()].bmea019 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
            IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
               LET g_bmea_d[l_ac].bmea018 = '1'
            ELSE
               LET g_bmea_d[l_ac].bmea018 = '3'
            END IF
            LET g_bmea_d[l_ac].bmea009 = g_today
            CALL g_bmea2_d.clear()
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM bmea_t 
             WHERE bmeaent = g_enterprise AND bmeasite = g_site AND bmea001 = g_bmea_m.bmea001
               AND bmea002 = g_bmea_m.bmea002
               AND bmea003 = g_bmea_m.bmea003
               AND bmea004 = g_bmea_m.bmea004
               AND bmea005 = g_bmea_m.bmea005
               AND bmea006 = g_bmea_m.bmea006
               AND bmea007 = g_bmea_m.bmea007
 
               AND bmea008 = g_bmea_d[l_ac].bmea008
               AND bmea019 = g_bmea_d[l_ac].bmea019
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前 name="input.body.b_insert"
               IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
               #end add-point
               INSERT INTO bmea_t
                           (bmeaent, bmeasite,
                            bmea003,bmea001,bmea002,bmea004,bmea005,bmea006,bmea007,
                            bmea008,bmea019
                            ,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018) 
                     VALUES(g_enterprise, g_site,
                            g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007,
                            g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019
                            ,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012, 
                                g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015, 
                                g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018) 
 
               #add-point:單身新增中 name="input.body.m_insert"
               
               #end add-point
               LET p_cmd = 'u'
               LET g_master_insert = TRUE
            ELSE    
               INITIALIZE g_bmea_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmea_t:",SQLERRMESSAGE 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert"
               #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
               IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
                  IF NOT abmm206_ins_bmea() THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  END IF
               END IF
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後 name="input.body.after_insert"
            
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete"
               
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   =  -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               IF abmm206_before_delete() THEN 
                  
 
 
                  #取得該筆資料key值
                  INITIALIZE gs_keys TO NULL
                  LET gs_keys[01] = g_bmea_m.bmea001
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_m.bmea002
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_m.bmea003
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_m.bmea004
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_m.bmea005
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_m.bmea006
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_m.bmea007
 
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_d_t.bmea008
                  LET gs_keys[gs_keys.getLength()+1] = g_bmea_d_t.bmea019
 
 
                  #刪除下層單身
                  IF NOT abmm206_key_delete_b(gs_keys,'bmea_t') THEN
                     CALL s_transaction_end('N','0')
                     CLOSE abmm206_bcl
                     CANCEL DELETE
                  END IF
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE abmm206_bcl
               LET l_count = g_bmea_d.getLength()
            END IF 
            
            #add-point:單身刪除後 name="input.body.a_delete"
            
            #end add-point
              
         AFTER DELETE 
            IF l_cmd <> 'd' THEN
               #add-point:單身AFTER DELETE  name="input.body.after_delete"
               
               #end add-point
            END IF
            #如果是最後一筆
            IF l_ac = (g_bmea_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
            
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea008
            
            #add-point:AFTER FIELD bmea008 name="input.a.page1.bmea008"
            CALL abmm206_bmea_desc()
            #此段落由子樣板a05產生
            IF g_bmea_m.bmea003 IS NOT NULL AND g_bmea_d[l_ac].bmea008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmea_m.bmea003 != g_bmea003_t OR g_bmea_d[l_ac].bmea008 != g_bmea_d_t.bmea008)) THEN 
                  IF NOT ap_chk_notDup(g_bmea_d[l_ac].bmea008,"SELECT COUNT(*) FROM bmea_t WHERE bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND bmea001 = 'ALL' AND bmea002 = ' ' AND bmea003 = '"||g_bmea_m.bmea003 ||"' AND bmea004 = ' ' AND bmea005 = ' ' AND bmea006 = ' ' AND bmea007 = '2' AND bmea008 = '"||g_bmea_d[l_ac].bmea008 ||"'",'std-00004',0) THEN 
                     LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                     CALL abmm206_bmea_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmea_d[l_ac].bmea008) THEN 
               IF g_bmea_d[l_ac].bmea008 = g_bmea_m.bmea003 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00051'
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                  CALL abmm206_bmea_desc()
                  NEXT FIELD CURRENT
               END IF
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmea_d[l_ac].bmea008

                  
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_imaf001_1") THEN
                  LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                  CALL abmm206_bmea_desc()
                  NEXT FIELD CURRENT
               END IF
               IF l_cmd = 'a' THEN
                  SELECT imae081 INTO  g_bmea_d[l_ac].bmea013
                    FROM imae_t
                   WHERE imaeent = g_enterprise
                     AND imaesite = g_site
                     AND imae001 = g_bmea_d[l_ac].bmea008
               END IF
               IF NOT cl_null(g_bmea_d[l_ac].bmea013) THEN
                  LET l_rate = ''
                  LET l_imaa006 = ''
                  SELECT imaa006 INTO l_imaa006
                    FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_bmea_d[l_ac].bmea008
                  IF NOT cl_null(l_imaa006) THEN
                     CALL s_aimi190_get_convert(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea013,l_imaa006) RETURNING l_success,l_rate
                     IF NOT l_success THEN
                        LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                        NEXT FIELD bmea008
                     END IF
                  END IF
                  IF cl_null(l_imaa006) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00021'
                     LET g_errparam.extend = l_imaa006
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008
                     NEXT FIELD bmea008
                  END IF
               END IF
               #160627-00002#2---mark--s
               ##160620-00008#2---add---s
               #IF g_bmea_d[l_ac].bmea008 != g_bmea_d_o.bmea008 OR cl_null(g_bmea_d_o.bmea008) THEN
               #   IF cl_null(g_bmea_d[l_ac].bmea020) THEN 
               #      SELECT imaf034 INTO g_bmea_d[l_ac].bmea020
               #        FROM imaf_t 
               #       WHERE imafent = g_enterprise
               #         AND imafsite = g_site
               #         AND imaf001 = g_bmea_d[l_ac].bmea008 
               #   END IF                     
               #END IF
               ##160620-00008#2---add---e
               #160627-00002#2---mark--e
            END IF 
            #LET g_bmea_d_o.bmea008 = g_bmea_d[l_ac].bmea008   #160620-00008#2  #160627-00002#2 mark


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea008
            #add-point:BEFORE FIELD bmea008 name="input.b.page1.bmea008"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea008
            #add-point:ON CHANGE bmea008 name="input.g.page1.bmea008"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea019
            
            #add-point:AFTER FIELD bmea019 name="input.a.page1.bmea019"
            #此段落由子樣板a05產生
            #確認資料無重複
            IF  g_bmea_m.bmea001 IS NOT NULL AND g_bmea_m.bmea002 IS NOT NULL AND g_bmea_m.bmea003 IS NOT NULL AND g_bmea_m.bmea004 IS NOT NULL AND g_bmea_m.bmea005 IS NOT NULL AND g_bmea_m.bmea006 IS NOT NULL AND g_bmea_m.bmea007 IS NOT NULL AND g_bmea_d[g_detail_idx].bmea008 IS NOT NULL AND g_bmea_d[g_detail_idx].bmea019 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmea_m.bmea001 != g_bmea001_t OR g_bmea_m.bmea002 != g_bmea002_t OR g_bmea_m.bmea003 != g_bmea003_t OR g_bmea_m.bmea004 != g_bmea004_t OR g_bmea_m.bmea005 != g_bmea005_t OR g_bmea_m.bmea006 != g_bmea006_t OR g_bmea_m.bmea007 != g_bmea007_t OR g_bmea_d[g_detail_idx].bmea008 != g_bmea_d_t.bmea008 OR g_bmea_d[g_detail_idx].bmea019 != g_bmea_d_t.bmea019)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmea_t WHERE "||"bmeaent = '" ||g_enterprise|| "' AND bmeasite = '" ||g_site|| "' AND "||"bmea001 = '"||g_bmea_m.bmea001 ||"' AND "|| "bmea002 = '"||g_bmea_m.bmea002 ||"' AND "|| "bmea003 = '"||g_bmea_m.bmea003 ||"' AND "|| "bmea004 = '"||g_bmea_m.bmea004 ||"' AND "|| "bmea005 = '"||g_bmea_m.bmea005 ||"' AND "|| "bmea006 = '"||g_bmea_m.bmea006 ||"' AND "|| "bmea007 = '"||g_bmea_m.bmea007 ||"' AND "|| "bmea008 = '"||g_bmea_d[g_detail_idx].bmea008 ||"' AND "|| "bmea019 = '"||g_bmea_d[g_detail_idx].bmea019 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea019
            #add-point:BEFORE FIELD bmea019 name="input.b.page1.bmea019"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea019
            #add-point:ON CHANGE bmea019 name="input.g.page1.bmea019"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea009
            #add-point:BEFORE FIELD bmea009 name="input.b.page1.bmea009"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea009
            
            #add-point:AFTER FIELD bmea009 name="input.a.page1.bmea009"
            IF NOT cl_null(g_bmea_d[l_ac].bmea009) AND NOT cl_null(g_bmea_d[l_ac].bmea010) THEN
               IF g_bmea_d[l_ac].bmea009 > g_bmea_d[l_ac].bmea010 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ais-00047'
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea009
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].bmea009  = g_bmea_d_t.bmea009
                  NEXT FIELD bmea009
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea009
            #add-point:ON CHANGE bmea009 name="input.g.page1.bmea009"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea010
            #add-point:BEFORE FIELD bmea010 name="input.b.page1.bmea010"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea010
            
            #add-point:AFTER FIELD bmea010 name="input.a.page1.bmea010"
            IF NOT cl_null(g_bmea_d[l_ac].bmea009) AND NOT cl_null(g_bmea_d[l_ac].bmea010) THEN
               IF g_bmea_d[l_ac].bmea009 > g_bmea_d[l_ac].bmea010 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ais-00047'
                  LET g_errparam.extend = g_bmea_d[l_ac].bmea010
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].bmea010  = g_bmea_d_t.bmea010
                  NEXT FIELD bmea010
               END IF
            END IF
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea010
            #add-point:ON CHANGE bmea010 name="input.g.page1.bmea010"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea011
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmea_d[l_ac].bmea011,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD bmea011
            END IF 
 
 
 
            #add-point:AFTER FIELD bmea011 name="input.a.page1.bmea011"
            IF NOT cl_null(g_bmea_d[l_ac].bmea011) THEN 
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea011
            #add-point:BEFORE FIELD bmea011 name="input.b.page1.bmea011"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea011
            #add-point:ON CHANGE bmea011 name="input.g.page1.bmea011"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea012
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmea_d[l_ac].bmea012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD bmea012
            END IF 
 
 
 
            #add-point:AFTER FIELD bmea012 name="input.a.page1.bmea012"
            IF NOT cl_null(g_bmea_d[l_ac].bmea012) THEN 
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea012
            #add-point:BEFORE FIELD bmea012 name="input.b.page1.bmea012"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea012
            #add-point:ON CHANGE bmea012 name="input.g.page1.bmea012"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea013
            
            #add-point:AFTER FIELD bmea013 name="input.a.page1.bmea013"
            IF NOT cl_null(g_bmea_d[l_ac].bmea013) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmea_d[l_ac].bmea013
               #160318-00025#39  2016/04/22  by pengxin  add(S)
               LET g_errshow = TRUE #是否開窗 
               LET g_chkparam.err_str[1] = "aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
               #160318-00025#39  2016/04/22  by pengxin  add(E)
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooca001") THEN
                  LET g_bmea_d[l_ac].bmea013 = g_bmea_d_t.bmea013
                  NEXT FIELD CURRENT
               END IF
               LET l_rate = ''
               LET l_imaa006 = ''
               SELECT imaa006 INTO l_imaa006
                 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmea_d[l_ac].bmea008
               IF NOT cl_null(g_bmea_d[l_ac].bmea013) AND NOT cl_null(l_imaa006) THEN
                  CALL s_aimi190_get_convert(g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea013,l_imaa006) RETURNING l_success,l_rate
                  IF NOT l_success THEN
                     LET g_bmea_d[l_ac].bmea013 = g_bmea_d_t.bmea013
                     NEXT FIELD bmea013
                  END IF
               END IF
               IF cl_null(l_imaa006) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00021'
                  LET g_errparam.extend = l_imaa006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmea_d[l_ac].bmea013 = g_bmea_d_t.bmea013
                  NEXT FIELD bmea013
               END IF
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea013
            #add-point:BEFORE FIELD bmea013 name="input.b.page1.bmea013"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea013
            #add-point:ON CHANGE bmea013 name="input.g.page1.bmea013"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea014
            #add-point:BEFORE FIELD bmea014 name="input.b.page1.bmea014"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea014
            
            #add-point:AFTER FIELD bmea014 name="input.a.page1.bmea014"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea014
            #add-point:ON CHANGE bmea014 name="input.g.page1.bmea014"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea015
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmea_d[l_ac].bmea015,"0.000","1","99.000","1","azz-00087",1) THEN 
 
               NEXT FIELD bmea015
            END IF 
 
 
 
            #add-point:AFTER FIELD bmea015 name="input.a.page1.bmea015"
            IF NOT cl_null(g_bmea_d[l_ac].bmea015) THEN 
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea015
            #add-point:BEFORE FIELD bmea015 name="input.b.page1.bmea015"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea015
            #add-point:ON CHANGE bmea015 name="input.g.page1.bmea015"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea016
            #add-point:BEFORE FIELD bmea016 name="input.b.page1.bmea016"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea016
            
            #add-point:AFTER FIELD bmea016 name="input.a.page1.bmea016"
            CALL abmm206_set_entry_b(l_cmd)
            CALL abmm206_set_no_entry_b(l_cmd)
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea016
            #add-point:ON CHANGE bmea016 name="input.g.page1.bmea016"
            
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea017
            #應用 a15 樣板自動產生(Version:3)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmea_d[l_ac].bmea017,"0.000","1","100.000","1","azz-00087",1) THEN 
 
               NEXT FIELD bmea017
            END IF 
 
 
 
            #add-point:AFTER FIELD bmea017 name="input.a.page1.bmea017"
            IF NOT cl_null(g_bmea_d[l_ac].bmea017) THEN 
            END IF 

            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea017
            #add-point:BEFORE FIELD bmea017 name="input.b.page1.bmea017"
            
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea017
            #add-point:ON CHANGE bmea017 name="input.g.page1.bmea017"
            
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD bmea018
            #add-point:BEFORE FIELD bmea018 name="input.b.page1.bmea018"
            
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD bmea018
            
            #add-point:AFTER FIELD bmea018 name="input.a.page1.bmea018"
            
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE bmea018
            #add-point:ON CHANGE bmea018 name="input.g.page1.bmea018"
            
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.bmea008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea008
            #add-point:ON ACTION controlp INFIELD bmea008 name="input.c.page1.bmea008"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmea_d[l_ac].bmea008             #給予default值

            #給予arg

            CALL q_imaf001_6()                                #呼叫開窗

            LET g_bmea_d[l_ac].bmea008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmea_d[l_ac].bmea008 TO bmea008              #顯示到畫面上
            CALL abmm206_bmea_desc()
            NEXT FIELD bmea008                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea019
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea019
            #add-point:ON ACTION controlp INFIELD bmea019 name="input.c.page1.bmea019"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea009
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea009
            #add-point:ON ACTION controlp INFIELD bmea009 name="input.c.page1.bmea009"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea010
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea010
            #add-point:ON ACTION controlp INFIELD bmea010 name="input.c.page1.bmea010"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea011
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea011
            #add-point:ON ACTION controlp INFIELD bmea011 name="input.c.page1.bmea011"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea012
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea012
            #add-point:ON ACTION controlp INFIELD bmea012 name="input.c.page1.bmea012"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea013
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea013
            #add-point:ON ACTION controlp INFIELD bmea013 name="input.c.page1.bmea013"
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmea_d[l_ac].bmea013             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_bmea_d[l_ac].bmea013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmea_d[l_ac].bmea013 TO bmea013              #顯示到畫面上

            NEXT FIELD bmea013                          #返回原欄位


            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea014
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea014
            #add-point:ON ACTION controlp INFIELD bmea014 name="input.c.page1.bmea014"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea015
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea015
            #add-point:ON ACTION controlp INFIELD bmea015 name="input.c.page1.bmea015"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea016
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea016
            #add-point:ON ACTION controlp INFIELD bmea016 name="input.c.page1.bmea016"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea017
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea017
            #add-point:ON ACTION controlp INFIELD bmea017 name="input.c.page1.bmea017"
            
            #END add-point
 
 
         #Ctrlp:input.c.page1.bmea018
#         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD bmea018
            #add-point:ON ACTION controlp INFIELD bmea018 name="input.c.page1.bmea018"
            
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_bmea_d[l_ac].* = g_bmea_d_t.*
               CLOSE abmm206_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_bmea_d[l_ac].bmea008 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmea_d[l_ac].* = g_bmea_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               
            
               #add-point:單身修改前 name="input.body.b_update"
               IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
               #end add-point
         
               #將遮罩欄位還原
               CALL abmm206_bmea_t_mask_restore('restore_mask_o')
         
               UPDATE bmea_t SET (bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,bmea007,bmea008,bmea019, 
                   bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018) = (g_bmea_m.bmea001, 
                   g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006, 
                   g_bmea_m.bmea007,g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009, 
                   g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013, 
                   g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017, 
                   g_bmea_d[l_ac].bmea018)
                WHERE bmeaent = g_enterprise AND bmeasite = g_site AND bmea001 = g_bmea_m.bmea001 
                 AND bmea002 = g_bmea_m.bmea002 
                 AND bmea003 = g_bmea_m.bmea003 
                 AND bmea004 = g_bmea_m.bmea004 
                 AND bmea005 = g_bmea_m.bmea005 
                 AND bmea006 = g_bmea_m.bmea006 
                 AND bmea007 = g_bmea_m.bmea007 
 
                 AND bmea008 = g_bmea_d_t.bmea008 #項次   
                 AND bmea019 = g_bmea_d_t.bmea019  
 
                 
               #add-point:單身修改中 name="input.body.m_update"
               
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL s_transaction_end('N','0')
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmea_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   INITIALIZE g_errparam TO NULL 
                  #   LET g_errparam.extend = "bmea_t" 
                  #   LET g_errparam.code   = SQLCA.sqlcode 
                  #   LET g_errparam.popup  = TRUE 
                  #   CALL cl_err()
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmea_m.bmea001
               LET gs_keys_bak[1] = g_bmea001_t
               LET gs_keys[2] = g_bmea_m.bmea002
               LET gs_keys_bak[2] = g_bmea002_t
               LET gs_keys[3] = g_bmea_m.bmea003
               LET gs_keys_bak[3] = g_bmea003_t
               LET gs_keys[4] = g_bmea_m.bmea004
               LET gs_keys_bak[4] = g_bmea004_t
               LET gs_keys[5] = g_bmea_m.bmea005
               LET gs_keys_bak[5] = g_bmea005_t
               LET gs_keys[6] = g_bmea_m.bmea006
               LET gs_keys_bak[6] = g_bmea006_t
               LET gs_keys[7] = g_bmea_m.bmea007
               LET gs_keys_bak[7] = g_bmea007_t
               LET gs_keys[8] = g_bmea_d[g_detail_idx].bmea008
               LET gs_keys_bak[8] = g_bmea_d_t.bmea008
               LET gs_keys[9] = g_bmea_d[g_detail_idx].bmea019
               LET gs_keys_bak[9] = g_bmea_d_t.bmea019
               CALL abmm206_update_b('bmea_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
                     #修改歷程記錄(單身修改)
                     LET g_log1 = util.JSON.stringify(g_bmea_m),util.JSON.stringify(g_bmea_d_t)
                     LET g_log2 = util.JSON.stringify(g_bmea_m),util.JSON.stringify(g_bmea_d[l_ac])
                     IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                        CALL s_transaction_end('N','0')
                     END IF
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL abmm206_bmea_t_mask_restore('restore_mask_n')
               
               #若Key欄位有變動
               LET ls_keys[01] = g_bmea_m.bmea001
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_m.bmea002
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_m.bmea003
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_m.bmea004
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_m.bmea005
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_m.bmea006
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_m.bmea007
 
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_d_t.bmea008
               LET ls_keys[ls_keys.getLength()+1] = g_bmea_d_t.bmea019
 
               CALL abmm206_key_update_b(ls_keys)
               
               #add-point:單身修改後 name="input.body.a_update"
               #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
               IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
                  IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
                  UPDATE bmea_t SET (bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018) = 
                                    (g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010, 
                                     g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014, 
                                     g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)  
                   WHERE bmeaent = g_enterprise 
                     AND bmea001 = 'ALL'
                     AND bmea002 = ' '
                     AND bmea003 = g_bmea_m.bmea003
                     AND bmea004 = ' '
                     AND bmea005 = ' '
                     AND bmea006 = ' '
                     AND bmeasite <> 'ALL'
                     AND bmea007 = '2'
                     AND bmea008 = g_bmea_d_t.bmea008
                     AND bmea018 = '1'    #160324-00007#1
                     AND bmea019 = g_bmea_d_t.bmea019
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "upd bmea_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF
               IF g_bmea_d[l_ac].bmea014 = 'N' THEN
                  DELETE FROM bmeb_t
                   WHERE bmebent = g_enterprise 
                     AND bmeb001 = 'ALL'
                     AND bmeb002 = ' '
                     AND bmeb003 = g_bmea_m.bmea003
                     AND bmeb004 = ' '
                     AND bmeb005 = ' '
                     AND bmeb006 = ' '
                     AND bmebsite = g_site
                     AND bmeb007 = '2'
                     AND bmeb008 = g_bmea_d[l_ac].bmea008                     
                     AND bmeb010 = g_bmea_d[l_ac].bmea019 
                     
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmeb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  ELSE
                     #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
                     IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
                        DELETE FROM bmeb_t
                         WHERE bmebent = g_enterprise 
                           AND bmeb001 = 'ALL'
                           AND bmeb002 = ' '
                           AND bmeb003 = g_bmea_m.bmea003
                           AND bmeb004 = ' '
                           AND bmeb005 = ' '
                           AND bmeb006 = ' '
                           AND bmebsite <> 'ALL'
                           AND bmeb007 = '2'
                           AND bmeb008 = g_bmea_d[l_ac].bmea008
                           AND bmeb010 = g_bmea_d[l_ac].bmea019
                           #160324-00007#1--add---begin
                           AND EXISTS (SELECT 1 FROM bmea_t 
                                        WHERE bmebent = bmeaent
                                          AND bmebsite = bmeasite
                                          AND bmeb001 = bmea001
                                          AND bmeb002 = bmea002
                                          AND bmeb003 = bmea003
                                          AND bmeb004 = bmea004
                                          AND bmeb005 = bmea005
                                          AND bmeb006 = bmea006
                                          AND bmeb007 = bmea007
                                          AND bmeb008 = bmea008
                                          AND bmeb010 = bmea019
                                          AND bmea018 = '1')
                           #160324-00007#1--add---begin
                        IF SQLCA.sqlcode THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.extend = "bmeb_t"
                           LET g_errparam.popup = TRUE
                           CALL cl_err()

                           CALL s_transaction_end('N','0')
                        END IF
                     END IF
                  END IF
               END IF
               IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
               IF g_bmea_d_t.bmea008 <> g_bmea_d[l_ac].bmea008 OR g_bmea_d_t.bmea019 <> g_bmea_d[l_ac].bmea019 THEN
                  UPDATE bmeb_t SET bmeb008 = g_bmea_d[l_ac].bmea008,
                                    bmeb010 = g_bmea_d[l_ac].bmea019
                   WHERE bmebent = g_enterprise
                     AND bmeb001 = 'ALL'
                     AND bmeb002 = ' '
                     AND bmeb003 = g_bmea_m.bmea003
                     AND bmeb004 = ' '
                     AND bmeb005 = ' '
                     AND bmeb006 = ' '
                     AND bmebsite = g_site
                     AND bmeb007 = '2'
                     AND bmeb008 = g_bmea_d_t.bmea008
                     AND bmeb010 = g_bmea_d_t.bmea019
                  #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
                  IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
                     UPDATE bmeb_t SET bmeb008 = g_bmea_d[l_ac].bmea008,
                                       bmeb010 = g_bmea_d[l_ac].bmea019
                      WHERE bmebent = g_enterprise
                        AND bmeb001 = 'ALL'
                        AND bmeb002 = ' '
                        AND bmeb003 = g_bmea_m.bmea003
                        AND bmeb004 = ' '
                        AND bmeb005 = ' '
                        AND bmeb006 = ' '
                        AND bmebsite <> 'ALL'
                        AND bmeb007 = '2'
                        AND bmeb008 = g_bmea_d_t.bmea008
                        AND bmeb010 = g_bmea_d_t.bmea019
                        #160324-00007#1--add---begin
                        AND EXISTS (SELECT 1 FROM bmea_t 
                                     WHERE bmebent = bmeaent
                                       AND bmebsite = bmeasite
                                       AND bmeb001 = bmea001
                                       AND bmeb002 = bmea002
                                       AND bmeb003 = bmea003
                                       AND bmeb004 = bmea004
                                       AND bmeb005 = bmea005
                                       AND bmeb006 = bmea006
                                       AND bmeb007 = bmea007
                                       AND bmeb008 = bmea008
                                       AND bmeb010 = bmea019
                                       AND bmea018 = '1')
                        #160324-00007#1--add---begin
                  END IF
               END IF
               #end add-point
            END IF
 
         AFTER ROW
            #add-point:input段after row name="input.body.after_row"
            
            #end add-point  
            LET l_ac = ARR_CURR()
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               CLOSE abmm206_bcl
               CALL s_transaction_end('N','0')
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmea_d[l_ac].* = g_bmea_d_t.*
               END IF
               EXIT DIALOG 
            END IF
 
            CLOSE abmm206_bcl
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF g_bmea_d.getLength() = 0 THEN
               NEXT FIELD bmea008
            END IF
            #add-point:input段after input  name="input.body.after_input"
 
            #end add-point    
            
         ON ACTION controlo   
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_bmea_d[li_reproduce_target].* = g_bmea_d[li_reproduce].*
 
               LET g_bmea_d[li_reproduce_target].bmea008 = NULL
               LET g_bmea_d[li_reproduce_target].bmea019 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_bmea_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_bmea_d.getLength()+1
            END IF
            
      END INPUT
 
 
      
 
      
 
      
 
    
      #add-point:input段more_input name="input.more_inputarray"
      INPUT ARRAY g_bmea2_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b1,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         
         BEFORE INPUT
            IF g_bmea_d[l_ac].bmea014 != 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00091'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD bmea014
            END IF
            
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmea2_d.getLength()+1) 
              LET g_insert = 'N' 
            END IF 
#            CALL abmm206_b_fill_1()
#            LET g_rec_b1= g_bmea2_d.getLength()
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac1 = ARR_CURR()
            LET g_detail_idx = l_ac1
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac1 TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmm206_cl USING g_enterprise, g_site,'ALL',' ',g_bmea_m.bmea003,' ',' ',' ','2'
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN abmm206_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE abmm206_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b1= g_bmea2_d.getLength()
            
            IF g_rec_b1>= l_ac1 AND NOT cl_null(g_bmea2_d[l_ac1].bmeb009) THEN
               LET l_cmd='u'
               LET g_bmea2_d_t.* = g_bmea2_d[l_ac1].*  #BACKUP
               CALL abmm206_set_entry_b(l_cmd)
               CALL abmm206_set_no_entry_b(l_cmd)
               OPEN abmm206_bcl2 USING g_enterprise,g_site,'ALL',' ',g_bmea_m.bmea003,' ',' ',' ','2',g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea2_d[l_ac1].bmeb009
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "abmm206_bcl2"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmm206_bcl2 INTO g_bmea2_d[l_ac1].bmeb009,g_bmea2_d[l_ac1].bmeb009_desc
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_bmea2_d_t.bmeb009
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
                  CALL abmm206_bmeb_desc()               				  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF 
            IF g_bmea_d[l_ac].bmea014 != 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00091'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               NEXT FIELD bmea014
            END IF
            
         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmea2_d[l_ac1].* TO NULL
            LET g_bmea2_d_t.* = g_bmea2_d[l_ac1].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmm206_set_entry_b(l_cmd)
            CALL abmm206_set_no_entry_b(l_cmd)

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM bmeb_t
             WHERE bmebent = g_enterprise 
               AND bmeb001 = 'ALL'
               AND bmeb002 = ' '
               AND bmeb003 = g_bmea_m.bmea003
               AND bmeb004 = ' '
               AND bmeb005 = ' '
               AND bmeb006 = ' '
               AND bmebsite = g_site
               AND bmeb007 = '2'
               AND bmeb008 = g_bmea_d[l_ac].bmea008 
               AND bmeb010 = g_bmea_d[l_ac].bmea019
               AND bmeb009 = g_bmea2_d[l_ac1].bmeb009 
               
            IF l_count = 0 THEN
               IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
               INSERT INTO bmeb_t
                  (bmebent,bmebsite,
                   bmeb001,bmeb002,bmeb003,bmeb004,bmeb005,bmeb006,
                   bmeb007,bmeb008,bmeb010,bmeb009)
            VALUES(g_enterprise, g_site,
                   'ALL',' ',g_bmea_m.bmea003,' ',' ',' ','2',
                   g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea2_d[l_ac1].bmeb009)
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmeb_t"
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

               END IF
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_bmea2_d[l_ac1].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bmeb_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
               IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
                  IF NOT abmm206_ins_bmeb() THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  END IF
               END IF
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b1 = g_rec_b1 + 1
            END IF           
            
            
      BEFORE DELETE  
         IF NOT cl_null(g_bmea2_d[l_ac1].bmeb009) THEN
            IF NOT cl_ask_del_detail() THEN
               CANCEL DELETE
            END IF
            IF l_lock_sw = "Y" THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  -263
               LET g_errparam.extend = ""
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CANCEL DELETE
            END IF

            DELETE FROM bmeb_t
             WHERE bmebent = g_enterprise 
               AND bmeb001 = 'ALL'
               AND bmeb002 = ' '
               AND bmeb003 = g_bmea_m.bmea003
               AND bmeb004 = ' '
               AND bmeb005 = ' '
               AND bmeb006 = ' '
               AND bmebsite = g_site
               AND bmeb007 = '2'
               AND bmeb008 = g_bmea_d[l_ac].bmea008 
               AND bmeb010 = g_bmea_d[l_ac].bmea019
               AND bmeb009 = g_bmea2_d_t.bmeb009
               
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bmeb_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL DELETE   
            ELSE
               #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
               IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
                  DELETE FROM bmeb_t
                   WHERE bmebent = g_enterprise 
                     AND bmeb001 = 'ALL'
                     AND bmeb002 = ' '
                     AND bmeb003 = g_bmea_m.bmea003
                     AND bmeb004 = ' '
                     AND bmeb005 = ' '
                     AND bmeb006 = ' '
                     AND bmebsite <> 'ALL'
                     AND bmeb007 = '2'
                     AND bmeb008 = g_bmea_d[l_ac].bmea008 
                     AND bmeb010 = g_bmea_d[l_ac].bmea019
                     AND bmeb009 = g_bmea2_d_t.bmeb009
                     #160324-00007#1--add---begin
                     AND EXISTS (SELECT 1 FROM bmea_t 
                                  WHERE bmebent = bmeaent
                                    AND bmebsite = bmeasite
                                    AND bmeb001 = bmea001
                                    AND bmeb002 = bmea002
                                    AND bmeb003 = bmea003
                                    AND bmeb004 = bmea004
                                    AND bmeb005 = bmea005
                                    AND bmeb006 = bmea006
                                    AND bmeb007 = bmea007
                                    AND bmeb008 = bmea008
                                    AND bmeb010 = bmea019
                                    AND bmea018 = '1')
                     #160324-00007#1--add---begin                     
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bmeb_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                     CALL s_transaction_end('N','0')
                     CANCEL DELETE   
                  END IF
               END IF
               LET g_rec_b1 = g_rec_b1-1
               CALL s_transaction_end('Y','0')
            END IF 
            CLOSE abmm206_bcl2
            LET l_count = g_bmea2_d.getLength()
         END IF 
            
              
      AFTER DELETE
         
      AFTER FIELD bmeb009
        CALL abmm206_bmeb_desc()
        IF NOT cl_null(g_bmea2_d[l_ac1].bmeb009) THEN
           IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmea2_d[l_ac1].bmeb009 != g_bmea2_d_t.bmeb009))) THEN 
              IF NOT ap_chk_notDup(g_bmea2_d[l_ac1].bmeb009,"SELECT COUNT(*) FROM bmeb_t WHERE bmebent = '" ||g_enterprise|| "' AND bmeb001 = 'ALL' AND "|| "bmeb002 = ' ' AND bmeb003 = '"||g_bmea_m.bmea003 ||"' AND bmeb004 = ' ' AND bmeb005 = ' ' AND bmeb006 = ' ' AND bmeb007 = '2' AND bmeb008 = '"||g_bmea_d[l_ac].bmea008 ||"' AND bmeb010 = '"||g_bmea_d[l_ac].bmea019 ||"' AND bmeb009 = '"||g_bmea2_d[l_ac1].bmeb009 ||"'",'std-00004',0) THEN
                 LET g_bmea2_d[l_ac1].bmeb009 = g_bmea2_d_t.bmeb009
                 CALL abmm206_bmeb_desc()               
                 NEXT FIELD bmeb009
              END IF
           END IF
           #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
           INITIALIZE g_chkparam.* TO NULL
           
           #設定g_chkparam.*的參數
           LET g_chkparam.arg1 = g_bmea2_d[l_ac1].bmeb009
           LET g_chkparam.arg2 = g_site
           #160318-00025#39  2016/04/22  by pengxin  add(S)
           LET g_errshow = TRUE #是否開窗 
           LET g_chkparam.err_str[1] = "apm-00201:sub-01302|axmm200|",cl_get_progname("axmm200",g_lang,"2"),"|:EXEPROGaxmm200"
           #160318-00025#39  2016/04/22  by pengxin  add(E)
           #呼叫檢查存在並帶值的library
           IF NOT cl_chk_exist("v_pmaa001_3") THEN
              LET g_bmea2_d[l_ac1].bmeb009 = g_bmea2_d_t.bmeb009
              CALL abmm206_bmeb_desc()               
              NEXT FIELD bmeb009
           END IF
        END IF   
     
      ON ACTION controlp INFIELD bmeb009
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = "i"
         LET g_qryparam.reqry = FALSE
         LET g_qryparam.default1 = g_bmea2_d[l_ac1].bmeb009
         #給予arg
         LET g_qryparam.arg1 = "('2','3')" #
         CALL q_pmaa001_1()                         #呼叫開窗
         LET g_bmea2_d[l_ac1].bmeb009 = g_qryparam.return1  
         DISPLAY g_bmea2_d[l_ac1].bmeb009 TO bmeb009#顯示到畫面上
         CALL abmm206_bmeb_desc()
         NEXT FIELD bmeb009         
      
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
               CLOSE abmm206_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_bmea_d[l_ac].bmea008
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
            ELSE 
              UPDATE bmeb_t SET bmeb009 = g_bmea2_d[l_ac1].bmeb009
               WHERE bmebent = g_enterprise 
                 AND bmeb001 = 'ALL'
                 AND bmeb002 = ' '
                 AND bmeb003 = g_bmea_m.bmea003
                 AND bmeb004 = ' '
                 AND bmeb005 = ' '
                 AND bmeb006 = ' '
                 AND bmebsite = g_site
                 AND bmeb007 = '2'
                 AND bmeb008 = g_bmea_d[l_ac].bmea008 
                 AND bmeb010 = g_bmea_d[l_ac].bmea019 
                 AND bmeb009 = g_bmea2_d_t.bmeb009
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bmeb_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
                  CALL s_transaction_end('N','0')
               ELSE
                  #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
                  IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
                     UPDATE bmeb_t SET bmeb009 = g_bmea2_d[l_ac1].bmeb009
                      WHERE bmebent = g_enterprise 
                        AND bmeb001 = 'ALL'
                        AND bmeb002 = ' '
                        AND bmeb003 = g_bmea_m.bmea003
                        AND bmeb004 = ' '
                        AND bmeb005 = ' '
                        AND bmeb006 = ' '
                        AND bmebsite <> 'ALL'
                        AND bmeb007 = '2'
                        AND bmeb008 = g_bmea_d[l_ac].bmea008
                        AND bmeb010 = g_bmea_d[l_ac].bmea019 
                        AND bmeb009 = g_bmea2_d_t.bmeb009
                        #160324-00007#1--add---begin
                        AND EXISTS (SELECT 1 FROM bmea_t 
                                     WHERE bmebent = bmeaent
                                       AND bmebsite = bmeasite
                                       AND bmeb001 = bmea001
                                       AND bmeb002 = bmea002
                                       AND bmeb003 = bmea003
                                       AND bmeb004 = bmea004
                                       AND bmeb005 = bmea005
                                       AND bmeb006 = bmea006
                                       AND bmeb007 = bmea007
                                       AND bmeb008 = bmea008
                                       AND bmeb010 = bmea019
                                       AND bmea018 = '1')
                        #160324-00007#1--add---begin                         
                      IF SQLCA.sqlcode THEN
                         INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "bmeb_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                         LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
                         CALL s_transaction_end('N','0')
                      END IF
                  END IF
                 CALL s_transaction_end('Y','0')
               END IF 
            END IF
               
         AFTER ROW
            LET l_ac1 = ARR_CURR()
            LET l_ac1_t = l_ac1
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmea2_d[l_ac1].* = g_bmea2_d_t.*
               END IF
               CLOSE abmm206_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            CLOSE abmm206_bcl2
            CALL s_transaction_end('Y','0')
            
              
         AFTER INPUT 
              
      END INPUT    
      #end add-point    
      
      BEFORE DIALOG
         #CALL cl_err_collect_init()    
         #add-point:input段before_dialog name="input.before_dialog"
         IF p_cmd = 'a' THEN
            NEXT FIELD bmea003
         END IF
         #end add-point 
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD bmea001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bmea008
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #將畫面指標同步到當下指定的位置上
   CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
 
 
   
   #add-point:input段after_input name="input.after_input"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abmm206_show()
   #add-point:show段define name="show.define_customerization"
   
   #end add-point
   #add-point:show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="show.before"
   
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL abmm206_b_fill(g_wc2) #第一階單身填充
      CALL abmm206_b_fill2('0')  #第二階單身填充
   END IF
   
   
 
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL abmm206_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   CALL abmm206_desc()
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   DISPLAY BY NAME g_bmea_m.bmea003,g_bmea_m.imaal003,g_bmea_m.imaal004,g_bmea_m.imae081,g_bmea_m.bmea001, 
       g_bmea_m.bmea002,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
 
   CALL abmm206_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後 name="show.after"
 
   #end add-point   
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.ref_show" >}
#+ 帶出reference資料
PRIVATE FUNCTION abmm206_ref_show()
   #add-point:ref_show段define name="ref_show.define_customerization"
   
   #end add-point 
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ref_show.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="ref_show.pre_function"
   
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference name="ref_show.head.reference"
 
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmea_d.getLength()
      #add-point:ref_show段d_reference name="ref_show.body.reference"
      CALL abmm206_bmea_desc()
   END FOR
   
   FOR l_ac1 = 1 TO g_bmea2_d.getLength()
      CALL abmm206_bmeb_desc()
      #end add-point
   END FOR
   
 
   
   #add-point:ref_show段自訂 name="ref_show.other_reference"
   
   #end add-point
   
   LET l_ac = l_ac_t
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION abmm206_reproduce()
   #add-point:reproduce段define name="reproduce.define_customerization"
   
   #end add-point
   DEFINE l_newno     LIKE bmea_t.bmea001 
   DEFINE l_oldno     LIKE bmea_t.bmea001 
   DEFINE l_newno02     LIKE bmea_t.bmea002 
   DEFINE l_oldno02     LIKE bmea_t.bmea002 
   DEFINE l_newno03     LIKE bmea_t.bmea003 
   DEFINE l_oldno03     LIKE bmea_t.bmea003 
   DEFINE l_newno04     LIKE bmea_t.bmea004 
   DEFINE l_oldno04     LIKE bmea_t.bmea004 
   DEFINE l_newno05     LIKE bmea_t.bmea005 
   DEFINE l_oldno05     LIKE bmea_t.bmea005 
   DEFINE l_newno06     LIKE bmea_t.bmea006 
   DEFINE l_oldno06     LIKE bmea_t.bmea006 
   DEFINE l_newno07     LIKE bmea_t.bmea007 
   DEFINE l_oldno07     LIKE bmea_t.bmea007 
 
   DEFINE l_master    RECORD LIKE bmea_t.*
   DEFINE l_detail    RECORD LIKE bmea_t.*
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF g_bmea_m.bmea001 IS NULL
      OR g_bmea_m.bmea002 IS NULL
      OR g_bmea_m.bmea003 IS NULL
      OR g_bmea_m.bmea004 IS NULL
      OR g_bmea_m.bmea005 IS NULL
      OR g_bmea_m.bmea006 IS NULL
      OR g_bmea_m.bmea007 IS NULL
 
      THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   LET g_bmea001_t = g_bmea_m.bmea001
   LET g_bmea002_t = g_bmea_m.bmea002
   LET g_bmea003_t = g_bmea_m.bmea003
   LET g_bmea004_t = g_bmea_m.bmea004
   LET g_bmea005_t = g_bmea_m.bmea005
   LET g_bmea006_t = g_bmea_m.bmea006
   LET g_bmea007_t = g_bmea_m.bmea007
 
   
   LET g_bmea_m.bmea001 = ""
   LET g_bmea_m.bmea002 = ""
   LET g_bmea_m.bmea003 = ""
   LET g_bmea_m.bmea004 = ""
   LET g_bmea_m.bmea005 = ""
   LET g_bmea_m.bmea006 = ""
   LET g_bmea_m.bmea007 = ""
 
   LET g_master_insert = FALSE
   CALL abmm206_set_entry('a')
   CALL abmm206_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   LET g_bmea_m.bmea001 = 'ALL'
   LET g_bmea_m.bmea002 = ' '
   LET g_bmea_m.bmea004 = ' '
   LET g_bmea_m.bmea005 = ' '
   LET g_bmea_m.bmea006 = ' '
   LET g_bmea_m.bmea007 = '2' 
   #end add-point
   
   #清空key欄位的desc
   
   
   CALL abmm206_input("r")
    
   IF INT_FLAG AND NOT g_master_insert THEN
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      INITIALIZE g_bmea_m.* TO NULL
      INITIALIZE g_bmea_d TO NULL
 
      CALL abmm206_show()
      LET INT_FLAG = 0
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN 
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL abmm206_set_act_visible()
   CALL abmm206_set_act_no_visible()
 
   #將新增的資料併入搜尋條件中
   LET g_state = "insert"
   
   LET g_bmea001_t = g_bmea_m.bmea001
   LET g_bmea002_t = g_bmea_m.bmea002
   LET g_bmea003_t = g_bmea_m.bmea003
   LET g_bmea004_t = g_bmea_m.bmea004
   LET g_bmea005_t = g_bmea_m.bmea005
   LET g_bmea006_t = g_bmea_m.bmea006
   LET g_bmea007_t = g_bmea_m.bmea007
 
   
   #組合新增資料的條件
   LET g_add_browse = " bmeaent = " ||g_enterprise|| " AND bmeasite = '" ||g_site|| "' AND",
                      " bmea001 = '", g_bmea_m.bmea001, "' "
                      ," AND bmea002 = '", g_bmea_m.bmea002, "' "
                      ," AND bmea003 = '", g_bmea_m.bmea003, "' "
                      ," AND bmea004 = '", g_bmea_m.bmea004, "' "
                      ," AND bmea005 = '", g_bmea_m.bmea005, "' "
                      ," AND bmea006 = '", g_bmea_m.bmea006, "' "
                      ," AND bmea007 = '", g_bmea_m.bmea007, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abmm206_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   LET g_curr_diag = ui.DIALOG.getCurrent()
   CALL abmm206_idx_chk()
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   
   #end add-point
   
   #功能已完成,通報訊息中心
   CALL abmm206_msgcentre_notify('reproduce')
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION abmm206_detail_reproduce()
   #add-point:delete段define name="detail_reproduce.define_customerization"
   
   #end add-point 
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bmea_t.*
 
 
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abmm206_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM bmea_t
    WHERE bmeaent = g_enterprise AND bmeasite = g_site AND bmea001 = g_bmea001_t
    AND bmea002 = g_bmea002_t
    AND bmea003 = g_bmea003_t
    AND bmea004 = g_bmea004_t
    AND bmea005 = g_bmea005_t
    AND bmea006 = g_bmea006_t
    AND bmea007 = g_bmea007_t
 
       INTO TEMP abmm206_detail
   
   #將key修正為調整後   
   UPDATE abmm206_detail 
      #更新key欄位
      SET bmea001 = g_bmea_m.bmea001
          , bmea002 = g_bmea_m.bmea002
          , bmea003 = g_bmea_m.bmea003
          , bmea004 = g_bmea_m.bmea004
          , bmea005 = g_bmea_m.bmea005
          , bmea006 = g_bmea_m.bmea006
          , bmea007 = g_bmea_m.bmea007
 
      #更新共用欄位
      
                                       
   #將資料塞回原table   
   INSERT INTO bmea_t SELECT * FROM abmm206_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   INSERT INTO bmeb_t(bmebent,bmebsite,bmeb001,bmeb002,bmeb003,bmeb004,bmeb005,bmeb006,bmeb007,bmeb008,bmeb010,bmeb009)
   SELECT g_enterprise,g_site,'ALL',' ',g_bmea_m.bmea003,' ',' ',' ','2',bmeb008,bmeb010,bmeb009
    FROM bmeb_t
   WHERE bmebent = g_enterprise
     AND bmebsite = g_site
     AND bmeb001 = 'ALL'
     AND bmeb002 = ' '
     AND bmeb003 = g_bmea003_t
     AND bmeb004 = ' '
     AND bmeb005 = ' '
     AND bmeb006 = ' '
     AND bmeb007 = '2'
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
      RETURN
   END IF  
   #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
      INSERT INTO bmea_t(bmeaent,bmeasite,bmea003,bmea001,bmea002,bmea004,bmea005,bmea006,bmea007,bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018)
      SELECT g_enterprise,ooef001,g_bmea_m.bmea003,'ALL',' ',' ',' ',' ','2',bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018
        FROM bmea_t,ooef_t
       WHERE bmeaent = g_enterprise
         AND bmeasite = 'ALL'
         AND bmea001 = 'ALL'
         AND bmea002 = ' '
         AND bmea003 = g_bmea003_t
         AND bmea004 = ' '
         AND bmea005 = ' '
         AND bmea006 = ' '
         AND bmea007 = '2'
         AND ooefent = g_enterprise
         AND ooef001 <> 'ALL'
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF
      INSERT INTO bmeb_t(bmebent,bmebsite,bmeb001,bmeb002,bmeb003,bmeb004,bmeb005,bmeb006,bmeb007,bmeb008,bmeb010,bmeb009)
      SELECT g_enterprise,ooef001,'ALL',' ',g_bmea_m.bmea003,' ',' ',' ','2',bmeb008,bmeb010,bmeb009
       FROM bmeb_t,ooef_t
      WHERE bmebent = g_enterprise
        AND bmebsite = 'ALL'
        AND bmeb001 = 'ALL'
        AND bmeb002 = ' '
        AND bmeb003 = g_bmea003_t
        AND bmeb004 = ' '
        AND bmeb005 = ' '
        AND bmeb006 = ' '
        AND bmeb007 = '2'
        AND ooefent = g_enterprise
        AND ooef001 <> 'ALL'
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF  
   END IF
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmm206_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bmea001_t = g_bmea_m.bmea001
   LET g_bmea002_t = g_bmea_m.bmea002
   LET g_bmea003_t = g_bmea_m.bmea003
   LET g_bmea004_t = g_bmea_m.bmea004
   LET g_bmea005_t = g_bmea_m.bmea005
   LET g_bmea006_t = g_bmea_m.bmea006
   LET g_bmea007_t = g_bmea_m.bmea007
 
   
   DROP TABLE abmm206_detail
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.delete" >}
#+ 資料刪除
PRIVATE FUNCTION abmm206_delete()
   #add-point:delete段define name="delete.define_customerization"
   
   #end add-point
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   
   #end add-point
   
   IF g_bmea_m.bmea001 IS NULL
   OR g_bmea_m.bmea002 IS NULL
   OR g_bmea_m.bmea003 IS NULL
   OR g_bmea_m.bmea004 IS NULL
   OR g_bmea_m.bmea005 IS NULL
   OR g_bmea_m.bmea006 IS NULL
   OR g_bmea_m.bmea007 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   
 
   OPEN abmm206_cl USING g_enterprise, g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmm206_cl:" 
      LET g_errparam.code   =  STATUS 
      LET g_errparam.popup  = TRUE 
      CLOSE abmm206_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmm206_master_referesh USING g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004, 
       g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007 INTO g_bmea_m.bmea003,g_bmea_m.bmea001,g_bmea_m.bmea002, 
       g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
   
   #遮罩相關處理
   LET g_bmea_m_mask_o.* =  g_bmea_m.*
   CALL abmm206_bmea_t_mask()
   LET g_bmea_m_mask_n.* =  g_bmea_m.*
   
   CALL abmm206_show()
 
   #單頭多語言資料備份
   
   
   IF cl_ask_del_master() THEN              #確認一下
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL abmm206_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
 
      #add-point:單身刪除前 name="delete.body.b_delete"
      
      #end add-point
      
      DELETE FROM bmea_t WHERE bmeaent = g_enterprise AND bmeasite = g_site AND bmea001 = g_bmea_m.bmea001 
 
                                                               AND bmea002 = g_bmea_m.bmea002
                                                               AND bmea003 = g_bmea_m.bmea003
                                                               AND bmea004 = g_bmea_m.bmea004
                                                               AND bmea005 = g_bmea_m.bmea005
                                                               AND bmea006 = g_bmea_m.bmea006
                                                               AND bmea007 = g_bmea_m.bmea007
 
                                                               
      #add-point:單身刪除中 name="delete.body.m_delete"
      
      #end add-point
      
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmea_t:",SQLERRMESSAGE 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
 
      
  
      #add-point:單身刪除後  name="delete.body.a_delete"
      DELETE FROM bmea_t
       WHERE bmeaent = g_enterprise
         AND bmea001 = 'ALL'
         AND bmea002 = ' '
         AND bmea003 = g_bmea_m.bmea003
         AND bmea004 = ' '
         AND bmea005 = ' '
         AND bmea006 = ' '
         AND bmeasite = g_site
         AND bmea007 = '2'
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "del bmea_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      END IF
      #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
         DELETE FROM bmea_t
          WHERE bmeaent = g_enterprise
            AND bmea001 = 'ALL'
            AND bmea002 = ' '
            AND bmea003 = g_bmea_m.bmea003
            AND bmea004 = ' '
            AND bmea005 = ' '
            AND bmea006 = ' '
            AND bmeasite <> 'ALL'
            AND bmea007 = '2'
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "del bmea_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

            CALL s_transaction_end('N','0')
         END IF
      END IF      
      DELETE FROM bmeb_t
       WHERE bmebent = g_enterprise
         AND bmeb001 = 'ALL'
         AND bmeb002 = ' '
         AND bmeb003 = g_bmea_m.bmea003
         AND bmeb004 = ' '
         AND bmeb005 = ' '
         AND bmeb006 = ' '
         AND bmebsite = g_site
         AND bmeb007 = '2'
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "bmeb_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      END IF
      #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
      IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
         DELETE FROM bmeb_t
          WHERE bmebent = g_enterprise
            AND bmeb001 = 'ALL'
            AND bmeb002 = ' '
            AND bmeb003 = g_bmea_m.bmea003
            AND bmeb004 = ' '
            AND bmeb005 = ' '
            AND bmeb006 = ' '
            AND bmebsite <> 'ALL'
            AND bmeb007 = '2'
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "bmeb_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

            CALL s_transaction_end('N','0')
         END IF   
      END IF
      #end add-point
      
 
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      CALL g_bmea2_d.clear()
      #end add-point
      
      #頭先不紀錄
      #IF NOT cl_log_modified_record('','') THEN 
      #   CLOSE abmm206_cl
      #   CALL s_transaction_end('N','0')
      #   RETURN 
      #END IF
      
      CLEAR FORM
      CALL g_bmea_d.clear() 
 
     
      CALL abmm206_ui_browser_refresh()  
      #CALL abmm206_ui_headershow()  
      #CALL abmm206_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL abmm206_fetch('P')
      ELSE
         #LET g_wc = " 1=1"
         #LET g_wc2 = " 1=1"
         #CALL abmm206_browser_fill("F")
         CLEAR FORM
      END IF
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')   
   END IF
 
   CLOSE abmm206_cl
 
   #功能已完成,通報訊息中心
   CALL abmm206_msgcentre_notify('delete')
    
END FUNCTION
 
{</section>}
 
{<section id="abmm206.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION abmm206_b_fill(p_wc2)
   #add-point:b_fill段define name="b_fill.define_customerization"
   
   #end add-point
   DEFINE p_wc2      STRING
   #add-point:b_fill段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   
   #end add-point
   
   #先清空單身變數內容
   CALL g_bmea_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   CALL g_bmea2_d.clear()
   #end add-point
   
   LET g_sql = "SELECT  DISTINCT bmea008,bmea019,bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015, 
       bmea016,bmea017,bmea018,t1.imaal003 ,t2.imecl005 FROM bmea_t",   
               "",
               
                              " LEFT JOIN imaal_t t1 ON t1.imaalent="||g_enterprise||" AND t1.imaal001=bmea008 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imecl_t t2 ON t2.imeclent="||g_enterprise||" AND t2.imecl003=bmea019 AND t2.imecl004='"||g_dlang||"' ",
 
               " WHERE bmeaent= ? AND bmeasite= ? AND bmea001=? AND bmea002=? AND bmea003=? AND bmea004=? AND bmea005=? AND bmea006=? AND bmea007=?"  
 
   IF NOT cl_null(g_wc2_table1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_table1 CLIPPED, cl_sql_add_filter("bmea_t")
   END IF
   
   #add-point:b_fill段sql_after name="b_fill.sql_after"
   
   #end add-point
   
   #子單身的WC
   
   
   #判斷是否填充
   IF abmm206_fill_chk(1) THEN
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
         #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
         
         #end add-point
      THEN
         LET g_sql = g_sql, " ORDER BY bmea_t.bmea008,bmea_t.bmea019"
         #add-point:b_fill段fill_before name="b_fill.fill_before"
         
         #end add-point
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abmm206_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR abmm206_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_bmea_m.bmea001,g_bmea_m.bmea002,g_bmea_m.bmea003,g_bmea_m.bmea004,g_bmea_m.bmea005,g_bmea_m.bmea006,g_bmea_m.bmea007
                                               
      FOREACH b_fill_cs INTO g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009,g_bmea_d[l_ac].bmea010, 
          g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,g_bmea_d[l_ac].bmea014, 
          g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018, 
          g_bmea_d[l_ac].bmea008_desc,g_bmea_d[l_ac].bmea019_desc
                             
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
                           
         #add-point:b_fill段資料填充 name="b_fill.fill"
         CALL abmm206_bmea_desc()
         #end add-point
      
         #帶出公用欄位reference值
         
         
 
        
         #add-point:單身資料抓取 name="bfill.foreach"
         
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF 
            EXIT FOREACH
         END IF
      
         LET l_ac = l_ac + 1
         
      END FOREACH
 
            CALL g_bmea_d.deleteElement(g_bmea_d.getLength())
 
      
   END IF
   
   #add-point:b_fill段more name="b_fill.more"
 
   #end add-point
   
   LET g_rec_b=l_ac-1
   DISPLAY g_rec_b TO FORMONLY.cnt  
   LET l_ac = g_cnt
   LET g_cnt = 0 
 
   #遮罩相關處理
   FOR l_ac = 1 TO g_bmea_d.getLength()
      LET g_bmea_d_mask_o[l_ac].* =  g_bmea_d[l_ac].*
      CALL abmm206_bmea_t_mask()
      LET g_bmea_d_mask_n[l_ac].* =  g_bmea_d[l_ac].*
   END FOR
   
 
 
   FREE abmm206_pb   
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION abmm206_idx_chk()
   #add-point:idx_chk段define name="idx_chk.define_customerization"
   
   #end add-point
   #add-point:idx_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   
   #end add-point
   
   #判定目前選擇的頁面
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      #確保當下指標的位置未超過上限
      IF g_detail_idx > g_bmea_d.getLength() THEN
         LET g_detail_idx = g_bmea_d.getLength()
      END IF
      #確保資料位置不小於1
      IF g_detail_idx = 0 AND g_bmea_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      #將筆數資料顯示到畫面上
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmea_d.getLength() TO FORMONLY.cnt
      #將位置顯示到正確筆數上
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF
    
   #同第一個page的做法進行其他頁面的處理
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION abmm206_b_fill2(pi_idx)
   #add-point:b_fill2段define name="b_fill2.define_customerization"
   
   #end add-point
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   #add-point:b_fill2段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_bmea_d.getLength() <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   CALL abmm206_b_fill_1()
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.before_delete" >}
#+ 單身db資料刪除
PRIVATE FUNCTION abmm206_before_delete()
   #add-point:before_delete段define name="before_delete.define_customerization"
   
   #end add-point 
   #add-point:before_delete段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="before_delete.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="delete.body.b_single_delete"
   
   #end add-point
   
   DELETE FROM bmea_t
    WHERE bmeaent = g_enterprise AND bmeasite = g_site AND bmea001 = g_bmea_m.bmea001 AND
                              bmea002 = g_bmea_m.bmea002 AND
                              bmea003 = g_bmea_m.bmea003 AND
                              bmea004 = g_bmea_m.bmea004 AND
                              bmea005 = g_bmea_m.bmea005 AND
                              bmea006 = g_bmea_m.bmea006 AND
                              bmea007 = g_bmea_m.bmea007 AND
 
          bmea008 = g_bmea_d_t.bmea008
      AND bmea019 = g_bmea_d_t.bmea019
 
      
   #add-point:單筆刪除中 name="delete.body.m_single_delete"
   
   #end add-point
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "bmea_t:",SQLERRMESSAGE 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後 name="delete.body.a_single_delete"
   #IF g_prog = 'abmm206' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'abmm206' THEN   #160705-00042#11 160714 by sakura add
      DELETE FROM bmea_t
       WHERE bmeaent = g_enterprise 
         AND bmea001 = 'ALL'
         AND bmea002 = ' '
         AND bmea003 = g_bmea_m.bmea003
         AND bmea004 = ' '
         AND bmea005 = ' '
         AND bmea006 = ' '
         AND bmeasite <> 'ALL'
         AND bmea007 = '2'
         AND bmea008 = g_bmea_d_t.bmea008
         AND bmea019 = g_bmea_d_t.bmea019
         AND bmea018 = '1'         #160324-00007#1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "del bmea_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE 
      END IF
   END IF
   DELETE FROM bmeb_t
    WHERE bmebent = g_enterprise
      AND bmeb001 = 'ALL'
      AND bmeb002 = ' '
      AND bmeb003 = g_bmea_m.bmea003
      AND bmeb004 = ' '
      AND bmeb005 = ' '
      AND bmeb006 = ' '
      AND bmebsite = g_site
      AND bmeb007 = '2'
      AND bmeb008 = g_bmea_d_t.bmea008
      AND bmeb010 = g_bmea_d_t.bmea019
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "bmeb_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
   END IF
   #IF g_prog = 'abmm206' AND g_bmea_d[l_ac].bmea018 = '1'THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'abmm206' AND g_bmea_d[l_ac].bmea018 = '1'THEN   #160705-00042#11 160714 by sakura add
      DELETE FROM bmeb_t
       WHERE bmebent = g_enterprise
         AND bmeb001 = 'ALL'
         AND bmeb002 = ' '
         AND bmeb003 = g_bmea_m.bmea003
         AND bmeb004 = ' '
         AND bmeb005 = ' '
         AND bmeb006 = ' '
         AND bmebsite <> 'ALL'
         AND bmeb007 = '2'
         AND bmeb008 = g_bmea_d_t.bmea008
         AND bmeb010 = g_bmea_d_t.bmea019
         #160324-00007#1---add---begin
         AND EXISTS (SELECT 1 FROM bmea_t 
                      WHERE bmebent = bmeaent
                        AND bmebsite = bmeasite
                        AND bmeb001 = bmea001
                        AND bmeb002 = bmea002
                        AND bmeb003 = bmea003
                        AND bmeb004 = bmea004
                        AND bmeb005 = bmea005
                        AND bmeb006 = bmea006
                        AND bmeb007 = bmea007
                        AND bmeb008 = bmea008
                        AND bmeb010 = bmea019
                        AND bmea018 = '1') 
      #160324-00007#1---add---end                        
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "bmeb_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N','0')
      END IF   
   END IF
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
 
{</section>}
 
{<section id="abmm206.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION abmm206_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define name="delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION abmm206_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define name="insert_b.define_customerization"
   
   #end add-point
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   
   #end add-point
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION abmm206_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define name="update_b.define_customerization"
   
   #end add-point 
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
 
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正其他單身key欄位
PRIVATE FUNCTION abmm206_key_update_b(ps_keys_bak)
   #add-point:update_b段define name="key_update_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:update_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   
   #end add-point
   
   #判斷key是否有改變, 若無改變則返回
   IF g_bmea_d[l_ac].bmea008 = g_bmea_d_t.bmea008 
      AND g_bmea_d[l_ac].bmea019 = g_bmea_d_t.bmea019 
 
      THEN
      RETURN
   END IF
    
 
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION abmm206_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   
   #end add-point
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION abmm206_lock_b(ps_table,ps_page)
   #add-point:lock_b段define name="lock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   
   #end add-point
   
   #先刷新資料
   #CALL abmm206_b_fill()
   
 
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abmm206_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define name="unlock_b.define_customerization"
   
   #end add-point
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   
   #end add-point
   
 
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION abmm206_set_entry(p_cmd)
   #add-point:set_entry段define name="set_entry.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,bmea007",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION abmm206_set_no_entry(p_cmd)
   #add-point:set_no_entry段define name="set_no_entry.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("bmea001,bmea002,bmea003,bmea004,bmea005,bmea006,bmea007",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   
   #end add-point 
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION abmm206_set_entry_b(p_cmd)
   #add-point:set_entry_b段define name="set_entry_b.define_customerization"
   
   #end add-point 
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   
   #end add-point     
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   CALL cl_set_comp_entry("bmea017",TRUE)
   #end add-point  
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION abmm206_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define name="set_no_entry_b.define_customerization"
   
   #end add-point
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   
   #end add-point    
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b段"
   IF g_bmea_d[l_ac].bmea016 = '2' THEN
      LET g_bmea_d[l_ac].bmea017 = 100
      DISPLAY BY NAME g_bmea_d[l_ac].bmea017
      CALL cl_set_comp_entry("bmea017",FALSE)
   END IF
   #end add-point 
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION abmm206_set_act_visible()
   #add-point:set_act_visible段define name="set_act_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   
   #end add-point
   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", TRUE)
   CALL cl_set_act_visible("insert", TRUE)   #160705-00024#1
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION abmm206_set_act_no_visible()
   #add-point:set_act_no_visible段define name="set_act_no_visible.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   
   #end add-point
   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   #IF g_prog = 'abmm216' THEN        #160705-00042#11 160714 by sakura mark
   IF g_prog MATCHES 'abmm216' THEN   #160705-00042#11 160714 by sakura add
      CALL cl_set_act_visible("modify,modify_detail,delete,reproduce", FALSE)
      CALL cl_set_act_visible("insert",FALSE)   #160705-00024#1
   END IF   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION abmm206_set_act_visible_b()
   #add-point:set_act_visible_b段define name="set_act_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="abmm206.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION abmm206_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define name="set_act_no_visible_b.define_customerization"
   
   #end add-point
   #add-point:set_act_no_visible_b段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   
   #end add-point
   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
 
   #end add-point
END FUNCTION
 
{</section>}
 
{<section id="abmm206.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION abmm206_default_search()
   #add-point:default_search段define name="default_search.define_customerization"
   
   #end add-point    
   DEFINE li_idx  LIKE type_t.num10
   DEFINE li_cnt  LIKE type_t.num10
   DEFINE ls_wc   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   
   #end add-point 
   
   #add-point:Function前置處理  name="default_search.pre_function"
   
   #end add-point
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #add-point:default_search段開始前 name="default_search.before"
   
   #end add-point  
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bmea001 = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bmea002 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " bmea003 = '", g_argv[03], "' AND "
   END IF
   IF NOT cl_null(g_argv[04]) THEN
      LET ls_wc = ls_wc, " bmea004 = '", g_argv[04], "' AND "
   END IF
   IF NOT cl_null(g_argv[05]) THEN
      LET ls_wc = ls_wc, " bmea005 = '", g_argv[05], "' AND "
   END IF
   IF NOT cl_null(g_argv[06]) THEN
      LET ls_wc = ls_wc, " bmea006 = '", g_argv[06], "' AND "
   END IF
   IF NOT cl_null(g_argv[07]) THEN
      LET ls_wc = ls_wc, " bmea007 = '", g_argv[07], "' AND "
   END IF
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   LET ls_wc = ""
   #非固定传参
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bmea003 = '", g_argv[02], "' AND "
   END IF
   
   #固定传参
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " bmeasite = '", g_argv[1], "' AND "
   ELSE
      LET ls_wc = ls_wc, " bmeasite = '", g_site, "' AND "
   END IF
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   LET g_wc = g_wc CLIPPED," AND bmea001 = 'ALL' AND bmea002 = ' ' AND bmea004 = ' ' AND bmea005 = ' ' AND bmea006 = ' ' AND bmea007 = '2' "

   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION abmm206_fill_chk(ps_idx)
   #add-point:fill_chk段define name="fill_chk.define_customerization"
   
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="fill_chk.pre_function"
   
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
   
   #add-point:fill_chk段other name="fill_chk.other"
   
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
 
{</section>}
 
{<section id="abmm206.modify_detail_chk" >}
#+ 單身輸入判定
PRIVATE FUNCTION abmm206_modify_detail_chk(ps_record)
   #add-point:modify_detail_chk段define name="modify_detail_chk.define_customerization"
   
   #end add-point
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify_detail_chk.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="modify_detail_chk.before"
   
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "bmea008"
 
      #add-point:modify_detail_chk段自訂page控制 name="modify_detail_chk.page_control"
      
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前 name="modify_detail_chk.after"
   
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
 
{</section>}
 
{<section id="abmm206.mask_functions" >}
&include "erp/abm/abmm206_mask.4gl"
 
{</section>}
 
{<section id="abmm206.state_change" >}
    
 
{</section>}
 
{<section id="abmm206.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION abmm206_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmea_m.bmea001
   LET g_pk_array[1].column = 'bmea001'
   LET g_pk_array[2].values = g_bmea_m.bmea002
   LET g_pk_array[2].column = 'bmea002'
   LET g_pk_array[3].values = g_bmea_m.bmea003
   LET g_pk_array[3].column = 'bmea003'
   LET g_pk_array[4].values = g_bmea_m.bmea004
   LET g_pk_array[4].column = 'bmea004'
   LET g_pk_array[5].values = g_bmea_m.bmea005
   LET g_pk_array[5].column = 'bmea005'
   LET g_pk_array[6].values = g_bmea_m.bmea006
   LET g_pk_array[6].column = 'bmea006'
   LET g_pk_array[7].values = g_bmea_m.bmea007
   LET g_pk_array[7].column = 'bmea007'
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   
   #end add-point  
   
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="abmm206.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION abmm206_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL abmm206_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_bmea_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
 
{</section>}
 
{<section id="abmm206.other_function" readonly="Y" >}
################################################################################
# Descriptions...: 單身替代料號帶值
# Memo...........:
# Usage..........: CALL abmm206_bmea_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/01/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm206_bmea_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmea_d[l_ac].bmea008
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmea_d[l_ac].bmea008_desc = g_rtn_fields[1]
   LET g_bmea_d[l_ac].bmea008_desc1 = g_rtn_fields[2]   
   DISPLAY BY NAME g_bmea_d[l_ac].bmea008_desc
   DISPLAY BY NAME g_bmea_d[l_ac].bmea008_desc1
END FUNCTION
################################################################################
# Descriptions...: 單頭元件料號帶值
# Memo...........:
# Usage..........: CALL abmm206_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/01/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm206_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmea_m.bmea003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_lang||"'", "") RETURNING g_rtn_fields
   LET g_bmea_m.imaal003 = g_rtn_fields[1]
   LET g_bmea_m.imaal004 = g_rtn_fields[2]
   DISPLAY BY NAME g_bmea_m.imaal003
   DISPLAY BY NAME g_bmea_m.imaal004
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmea_m.bmea003
   CALL ap_ref_array2(g_ref_fields,"SELECT imae081 FROM imae_t WHERE imaeent='"||g_enterprise||"' AND imaesite='"||g_site||"' AND imae001=? ", "") RETURNING g_rtn_fields
   LET g_bmea_m.imae081 = g_rtn_fields[1]
   DISPLAY BY NAME g_bmea_m.imae081
END FUNCTION
################################################################################
# Descriptions...: 单身2显示
# Memo...........:
# Usage..........: CALL abmm206_b_fill_1()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/01/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm206_b_fill_1()
   CALL g_bmea2_d.clear() 
   IF cl_null(g_detail_idx) OR g_detail_idx = 0 THEN
      LET g_detail_idx =1
   END IF
   IF cl_null(g_bmea_d[g_detail_idx].bmea008) THEN
      RETURN
   END IF 
   IF cl_null(g_bmea_d[g_detail_idx].bmea019) THEN
      LET g_bmea_d[g_detail_idx].bmea019 = ' '
   END IF 
   LET g_sql = "SELECT  UNIQUE bmeb009,'' FROM bmeb_t",
               " WHERE bmebent=? AND bmebsite=? AND bmeb001=? AND bmeb002=? AND bmeb003=? AND bmeb004=? AND bmeb005=? AND bmeb006=? AND bmeb007=? AND bmeb008 =? AND bmeb010 =?"
  
   IF NOT cl_null(g_wc_table2) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table2 CLIPPED
   END IF
  
   LET g_sql = g_sql, " ORDER BY bmeb009"
  
   PREPARE abmm206_pb1 FROM g_sql
   DECLARE b_fill_cs1 CURSOR FOR abmm206_pb1
  
   LET l_ac1 = 1
 
   FOREACH b_fill_cs1 USING g_enterprise,g_site,'ALL',' ',g_bmea_m.bmea003,' ',' ',' ','2',g_bmea_d[g_detail_idx].bmea008,g_bmea_d[g_detail_idx].bmea019 
                       INTO g_bmea2_d[l_ac1].bmeb009,g_bmea2_d[l_ac1].bmeb009_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      CALL abmm206_bmeb_desc()
      
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
   END FOREACH
   CALL g_bmea2_d.deleteElement(g_bmea2_d.getLength())
   
   FREE abmm206_pb1
END FUNCTION
################################################################################
# Descriptions...: 客戶編號帶值
# Memo...........:
# Usage..........: CALL abmm206_bmeb_desc()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/01/17 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm206_bmeb_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmea2_d[l_ac1].bmeb009
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmea2_d[l_ac1].bmeb009_desc = g_rtn_fields[1] 
   DISPLAY BY NAME g_bmea2_d[l_ac1].bmeb009_desc         
   
END FUNCTION
################################################################################
# Descriptions...: 新增bmea_t到其他营运据点
# Memo...........:
# Usage..........: CALL abmm206_ins_bmea()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/01/20 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm206_ins_bmea()
DEFINE l_sql          STRING   
DEFINE l_imaa009      LIKE imaa_t.imaa009 
DEFINE l_imaa003      LIKE imaa_t.imaa003
DEFINE r_success      LIKE type_t.num5
DEFINE l_cnt          LIKE type_t.num5
DEFINE l_site         LIKE ooef_t.ooef001

   LET l_imaa009 = ""
   SELECT imaa009 INTO l_imaa009 
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmea_m.bmea003
   #160115-00006#1---mod---b   
   #LET l_sql = " SELECT UNIQUE ooef001 FROM ooef_t",
   #            "  WHERE ooefent = '",g_enterprise,"'",
   #            "    AND (ooef001 IN (SELECT UNIQUE imda001 from imda_t ",
   #            "                      WHERE imdaent = '",g_enterprise,"'",
   #            "                        AND imdastus= 'Y' ",    #有效的
   #            "                        AND imda005 = 'Y' ",    #BOM引入
   #            "                        AND imda003 = '1' ",    #自动引入
   #            "                        AND imda002 = '",l_imaa009,"') ",#产品分类
   #            "         OR ",
   #            "         ooef001 IN (SELECT UNIQUE imdb001 from imdb_t ",
   #            "                      WHERE imdbent = ",g_enterprise,
   #            "                        AND imdbstus= 'Y' ", #有效的
   #            "                        AND imdb005 = 'Y' ", #BOM引入
   #            "                        AND imdb003 = '1' ",    #自动引入
   #            "                        AND imdb002 = '",g_bmea_m.bmea003,"') ",#料件编号
   #            "         )",
   #            "    AND ooef001 <> 'ALL' "
   LET l_sql = "SELECT DISTINCT bmbasite FROM bmba_t ",
               " WHERE bmbaent = '",g_enterprise,"'",
               "   AND bmbasite <> '",g_site,"'",
               "   AND bmba003 = '",g_bmea_m.bmea003,"'",
               "   AND bmba019 = '1' "   #160324-00007#1
   #160115-00006#1---mod---e                 
   PREPARE s_abmm206_sel_ooef001_p FROM l_sql
   DECLARE s_abmm206_sel_ooef001_c CURSOR FOR  s_abmm206_sel_ooef001_p
   FOREACH s_abmm206_sel_ooef001_c INTO l_site
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH  s_abmm206_sel_ooef001_c:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
         RETURN FALSE
      END IF
      #检查主件料件是否存在
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= l_site
         AND imaf001 = g_bmea_m.bmea003
      IF l_cnt = 0 THEN
         SELECT imaa003 INTO l_imaa003 FROM imaa_t
          WHERE imaaent = g_enterprise
            AND imaa001 = g_bmea_m.bmea003
         IF cl_null(l_imaa003) THEN
            #缺少主分群碼資料,請檢查aimm200中的“主分群碼”欄位
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'aim-00135'
            LET g_errparam.extend = g_bmea_m.bmea003
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
         CALL s_aimm200_ins_imaf(g_bmea_m.bmea003,l_imaa003,l_site) RETURNING r_success,g_errno
         IF NOT r_success THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_bmea_m.bmea003
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
      END IF
      #检查替代料件是否存在
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= l_site
         AND imaf001 = g_bmea_d[l_ac].bmea008
      IF l_cnt = 0 THEN
         SELECT imaa003 INTO l_imaa003 FROM imaa_t
          WHERE imaaent = g_enterprise
            AND imaa001 = g_bmea_d[l_ac].bmea008
         IF cl_null(l_imaa003) THEN
            #缺少主分群碼資料,請檢查aimm200中的“主分群碼”欄位
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'aim-00135'
            LET g_errparam.extend = g_bmea_d[l_ac].bmea008
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
         CALL s_aimm200_ins_imaf(g_bmea_d[l_ac].bmea008,l_imaa003,l_site) RETURNING r_success,g_errno
         IF NOT r_success THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_bmea_d[l_ac].bmea008
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
      END IF
      IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
      IF NOT cl_null(g_bmea_d[l_ac].bmea010) THEN
         INSERT INTO bmea_t(bmeaent,bmeasite,bmea003,bmea001,bmea002,bmea004,bmea005,bmea006,bmea007,bmea008,bmea019,
                            #bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018,bmea020)     #160620-00008#2 add bmea020 #160627-00002#2mark
                            bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018)     #160627-00002#2add
                     VALUES(g_enterprise,l_site,g_bmea_m.bmea003,'ALL',' ',' ',' ',' ','2',g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009,
                            g_bmea_d[l_ac].bmea010,g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,
                            #g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018,g_bmea_d[l_ac].bmea020)   #160620-00008#2 add bmea020  #160627-00002#2mark
                            g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)   #160627-00002#2 add
      ELSE
         INSERT INTO bmea_t(bmeaent,bmeasite,bmea003,bmea001,bmea002,bmea004,bmea005,bmea006,bmea007,bmea008,bmea019,
                            #bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018,bmea020)      #160620-00008#2 add bmea020  #160627-00002#2mark
                            bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017,bmea018)      #160627-00002#2 add
                     VALUES(g_enterprise,l_site,g_bmea_m.bmea003,'ALL',' ',' ',' ',' ','2',g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea_d[l_ac].bmea009,
                            '',g_bmea_d[l_ac].bmea011,g_bmea_d[l_ac].bmea012,g_bmea_d[l_ac].bmea013,
                            #g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018,g_bmea_d[l_ac].bmea020)  #160620-00008#2 add bmea020  #160627-00002#2 mark
                            g_bmea_d[l_ac].bmea014,g_bmea_d[l_ac].bmea015,g_bmea_d[l_ac].bmea016,g_bmea_d[l_ac].bmea017,g_bmea_d[l_ac].bmea018)  #160627-00002#2 add
      END IF
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'Insert error!'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END FOREACH
   RETURN TRUE
END FUNCTION
################################################################################
# Descriptions...: 新增bmeb_t到其他营运据点
# Memo...........:
# Usage..........: CALL abmm206_ins_bmeb()
# Input parameter: 無
# Return code....: 無
# Date & Author..: 2014/01/20 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm206_ins_bmeb()
DEFINE l_sql          STRING 
DEFINE l_imaa009      LIKE imaa_t.imaa009 
DEFINE l_imaa003      LIKE imaa_t.imaa003
DEFINE r_success      LIKE type_t.num5
DEFINE l_cnt          LIKE type_t.num5
DEFINE l_site         LIKE ooef_t.ooef001

   LET l_imaa009 = ""
   SELECT imaa009 INTO l_imaa009 
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmea_m.bmea003
   #160115-00006#1---mod---b
   #LET l_sql = " SELECT UNIQUE ooef001 FROM ooef_t",
   #            "  WHERE ooefent = '",g_enterprise,"'",
   #            "    AND (ooef001 IN (SELECT UNIQUE imda001 from imda_t ",
   #            "                      WHERE imdaent = '",g_enterprise,"'",
   #            "                        AND imdastus= 'Y' ",    #有效的
   #            "                        AND imda005 = 'Y' ",    #BOM引入
   #            "                        AND imda003 = '1' ",    #自动引入
   #            "                        AND imda002 = '",l_imaa009,"') ",#产品分类
   #            "         OR ",
   #            "         ooef001 IN (SELECT UNIQUE imdb001 from imdb_t ",
   #            "                      WHERE imdbent = ",g_enterprise,
   #            "                        AND imdbstus= 'Y' ", #有效的
   #            "                        AND imdb005 = 'Y' ", #BOM引入
   #            "                        AND imdb003 = '1' ",    #自动引入
   #            "                        AND imdb002 = '",g_bmea_m.bmea003,"') ",#料件编号
   #            "         )",
   #            "    AND ooef001 <> 'ALL' "
   LET l_sql = "SELECT DISTINCT bmbasite FROM bmba_t ",
               " WHERE bmbaent = '",g_enterprise,"'",
               "   AND bmbasite <> '",g_site,"'",
               "   AND bmba003 = '",g_bmea_m.bmea003,"'",
               "   AND bmba019 = '1' "   #160324-00007#1
   #160115-00006#1---mod---e               
   PREPARE s_abmm206_sel_ooef001_p1 FROM l_sql
   DECLARE s_abmm206_sel_ooef001_c1 CURSOR FOR s_abmm206_sel_ooef001_p1
   FOREACH s_abmm206_sel_ooef001_c1 INTO l_site
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH  s_abmm206_sel_ooef001_c:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
         RETURN FALSE
      END IF
      #检查主件料件是否存在
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= l_site
         AND imaf001 = g_bmea_m.bmea003
      IF l_cnt = 0 THEN
         SELECT imaa003 INTO l_imaa003 FROM imaa_t
          WHERE imaaent = g_enterprise
            AND imaa001 = g_bmea_m.bmea003
         IF cl_null(l_imaa003) THEN
            #缺少主分群碼資料,請檢查aimm200中的“主分群碼”欄位
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'aim-00135'
            LET g_errparam.extend = g_bmea_m.bmea003
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
         CALL s_aimm200_ins_imaf(g_bmea_m.bmea003,l_imaa003,l_site) RETURNING r_success,g_errno
         IF NOT r_success THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_bmea_m.bmea003
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
      END IF
      #检查替代料件是否存在
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt FROM imaf_t
       WHERE imafent = g_enterprise
         AND imafsite= l_site
         AND imaf001 = g_bmea_d[l_ac].bmea008
      IF l_cnt = 0 THEN
         SELECT imaa003 INTO l_imaa003 FROM imaa_t
          WHERE imaaent = g_enterprise
            AND imaa001 = g_bmea_d[l_ac].bmea008
         IF cl_null(l_imaa003) THEN
            #缺少主分群碼資料,請檢查aimm200中的“主分群碼”欄位
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'aim-00135'
            LET g_errparam.extend = g_bmea_d[l_ac].bmea008
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
         CALL s_aimm200_ins_imaf(g_bmea_d[l_ac].bmea008,l_imaa003,l_site) RETURNING r_success,g_errno
         IF NOT r_success THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = g_errno
            LET g_errparam.extend = g_bmea_d[l_ac].bmea008
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
      END IF
      IF cl_null(g_bmea_d[l_ac].bmea019) THEN LET g_bmea_d[l_ac].bmea019 = ' ' END IF
      INSERT INTO bmeb_t (bmebent,bmebsite,bmeb001,bmeb002,bmeb003,bmeb004,bmeb005,bmeb006,bmeb007,bmeb008,bmeb010,bmeb009)
                   VALUES(g_enterprise,l_site,'ALL',' ',g_bmea_m.bmea003,' ',' ',' ','2',g_bmea_d[l_ac].bmea008,g_bmea_d[l_ac].bmea019,g_bmea2_d[l_ac1].bmeb009)
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'Insert error!'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END FOREACH
   RETURN TRUE
END FUNCTION

 
{</section>}
 
