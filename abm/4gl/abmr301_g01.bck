#該程式未解開Section, 採用最新樣板產出!
{<section id="abmr301_g01.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:3(2016-05-31 15:08:47), PR版次:0003(2016-05-31 15:54:25)
#+ Customerized Version.: SD版次:(), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000098
#+ Filename...: abmr301_g01
#+ Description: 工程變更單
#+ Creator....: 05384(2014-07-02 14:25:52)
#+ Modifier...: 07024 -SD/PR- 07024
 
{</section>}
 
{<section id="abmr301_g01.global" readonly="Y" >}
#報表 g01 樣板自動產生(Version:11)
#add-point:填寫註解說明
#160519-00007#1   2016/05/31  By dorislai  多增加插件位子欄位
#end add-point
#add-point:填寫註解說明

#end add-point
 
IMPORT os
#add-point:增加匯入項目 name="global.import"

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   bmfb012 LIKE bmfb_t.bmfb012, 
   bmfa006 LIKE bmfa_t.bmfa006, 
   bmfb014 LIKE bmfb_t.bmfb014, 
   bmfb011 LIKE bmfb_t.bmfb011, 
   bmfb015 LIKE bmfb_t.bmfb015, 
   bmfa005 LIKE bmfa_t.bmfa005, 
   bmfb002 LIKE bmfb_t.bmfb002, 
   bmfb005 LIKE bmfb_t.bmfb005, 
   bmfb008 LIKE bmfb_t.bmfb008, 
   bmfastus LIKE bmfa_t.bmfastus, 
   bmfb009 LIKE bmfb_t.bmfb009, 
   bmfb016 LIKE bmfb_t.bmfb016, 
   bmfa008 LIKE bmfa_t.bmfa008, 
   bmfadocdt LIKE bmfa_t.bmfadocdt, 
   bmfb018 LIKE bmfb_t.bmfb018, 
   bmfb020 LIKE bmfb_t.bmfb020, 
   bmfadocno LIKE bmfa_t.bmfadocno, 
   bmfb006 LIKE bmfb_t.bmfb006, 
   bmfb007 LIKE bmfb_t.bmfb007, 
   bmfb017 LIKE bmfb_t.bmfb017, 
   bmfb019 LIKE bmfb_t.bmfb019, 
   bmfa007 LIKE bmfa_t.bmfa007, 
   bmfb003 LIKE bmfb_t.bmfb003, 
   bmfb010 LIKE bmfb_t.bmfb010, 
   bmfb013 LIKE bmfb_t.bmfb013, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_t1_imaal003 LIKE imaal_t.imaal003, 
   x_oocql_t_oocql004 LIKE oocql_t.oocql004, 
   x_t2_oocql004 LIKE oocql_t.oocql004, 
   x_bmze_t_bmze002 LIKE bmze_t.bmze002, 
   l_bmfa007_ooefl003 LIKE type_t.chr1000, 
   l_bmfa006_ooag011 LIKE type_t.chr300, 
   x_t1_imaal004 LIKE imaal_t.imaal004, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   bmfaent LIKE bmfa_t.bmfaent, 
   l_bmfb003_desc LIKE gzcbl_t.gzcbl004, 
   l_bmfb008_desc LIKE oocql_t.oocql004, 
   l_bmfb009_desc LIKE oocql_t.oocql004, 
   l_bmfb007_desc LIKE gzcbl_t.gzcbl004, 
   l_bmfb011_bmfb012 LIKE type_t.chr80, 
   bmfbdocno LIKE bmfb_t.bmfbdocno, 
   bmfbent LIKE bmfb_t.bmfbent, 
   bmfbsite LIKE bmfb_t.bmfbsite, 
   l_bmfb011 LIKE type_t.chr30, 
   l_bmfb012 LIKE type_t.chr30, 
   l_int LIKE type_t.chr20, 
   l_float LIKE type_t.chr6, 
   l_count LIKE type_t.num5, 
   l_bmfb011_bmfb012_show LIKE type_t.chr1, 
   l_bmfb006_show LIKE type_t.chr1, 
   bmfasite LIKE bmfa_t.bmfasite, 
   l_bmfh004 LIKE type_t.chr500
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING                   #where condition
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)(客製用) name="global.variable_customerization"

#end add-point
#add-point:自定義環境變數(Global Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
DEFINE l_count   LIKE type_t.num5
TYPE sr3_r RECORD
   bmfpdocno LIKE bmfp_t.bmfpdocno,
   bmfp002   LIKE bmfp_t.bmfp002,
   bmfp003   LIKE bmfp_t.bmfp003,
   bmfp004   LIKE bmfp_t.bmfp004,
   bmfp005   LIKE bmfp_t.bmfp005,
   bmfp006   LIKE bmfp_t.bmfp006,
   bmfp007   LIKE bmfp_t.bmfp007,
   l_imaal003 LIKE imaal_t.imaal003,
   l_imaal004 LIKE imaal_t.imaal004,
   l_bmfp004_desc LIKE oocql_t.oocql004,
   l_bmfp005_desc LIKE oocql_t.oocql004
END RECORD
TYPE sr4_r RECORD
   bmfidocno LIKE bmfi_t.bmfidocno,
   bmfi003   LIKE bmfi_t.bmfi003,
   l_bmfj005_bmfj006 LIKE type_t.chr1000,
   l_bmfi003_desc LIKE oocql_t.oocql004,
   l_count   INTEGER
END RECORD
TYPE sr5_r RECORD
   bmfkdocno LIKE bmfk_t.bmfkdocno,
   bmfk003   LIKE bmfk_t.bmfk003,
   bmfk004   LIKE bmfk_t.bmfk004,
   l_bmfl004 LIKE type_t.chr1000,
   l_bmfl005 LIKE type_t.chr1000,
   l_bmfk003_desc LIKE oocql_t.oocql004,
   l_bmfk004_desc LIKE oocql_t.oocql004,
   l_count   INTEGER
END RECORD
TYPE sr6_r RECORD
   bmfmdocno LIKE bmfm_t.bmfmdocno,
   bmfm003   LIKE bmfm_t.bmfm003,
   bmfm004   LIKE bmfm_t.bmfm004,
   l_bmfm003_desc LIKE oocql_t.oocql004
END RECORD
TYPE sr7_r RECORD
   bmfgdocno LIKE bmfg_t.bmfgdocno,
   bmfg003   LIKE bmfg_t.bmfg003,
   bmfg004   LIKE bmfg_t.bmfg004,
   bmfg005   LIKE bmfg_t.bmfg005,
   bmfg006   LIKE bmfg_t.bmfg006
END RECORD
TYPE sr8_r RECORD
   bmfcdocno LIKE bmfc_t.bmfcdocno,
   bmfc003   LIKE bmfc_t.bmfc003,
   bmfc004   LIKE bmfc_t.bmfc004,
   bmfc005   LIKE bmfc_t.bmfc005,
   bmfc006   LIKE bmfc_t.bmfc006,
   bmfc007   LIKE bmfc_t.bmfc007,
   bmfc008   LIKE bmfc_t.bmfc008,
   bmfc009   LIKE bmfc_t.bmfc009,
   bmfc010   LIKE bmfc_t.bmfc010,
   bmfc011   LIKE bmfc_t.bmfc011,
   bmfc013   LIKE bmfc_t.bmfc013,
   bmfc014   LIKE bmfc_t.bmfc014,
   l_bmfc004_desc LIKE gzcbl_t.gzcbl004,
   l_bmfc013_desc LIKE gzcbl_t.gzcbl004,
   l_bmfc008 LIKE type_t.chr30,
   l_bmfc009 LIKE type_t.chr30,
   l_bmfc008_bmfc009 LIKE type_t.chr100,
   l_bmfo003 LIKE type_t.chr1000,
   l_count   INTEGER
END RECORD
TYPE sr9_r RECORD
   bmfj005   LIKE bmfj_t.bmfj005,
   bmfj006   LIKE bmfj_t.bmfj006
END RECORD
TYPE sr0_r RECORD
   bmfl004   LIKE bmfl_t.bmfl004,
   bmfl005   LIKE bmfl_t.bmfl005
END RECORD
#end add-point
 
{</section>}
 
{<section id="abmr301_g01.main" readonly="Y" >}
PUBLIC FUNCTION abmr301_g01(p_arg1)
DEFINE  p_arg1 STRING                  #tm.wc  where condition
#add-point:init段define (客製用) name="component_name.define_customerization"

#end add-point
#add-point:init段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="component_name.define"

#end add-point
 
   LET tm.wc = p_arg1
 
   #add-point:報表元件參數準備 name="component.arg.prep"
   
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "abmr301_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL abmr301_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL abmr301_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL abmr301_g01_rep_data()
 
END FUNCTION
 
{</section>}
 
{<section id="abmr301_g01.sel_prep" readonly="Y" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION abmr301_g01_sel_prep()
   #add-point:sel_prep段define (客製用) name="sel_prep.define_customerization"
   
   #end add-point
   #add-point:sel_prep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sel_prep.define"
   
   #end add-point
 
   #add-point:sel_prep before name="sel_prep.before"
   
   #end add-point
   
   #add-point:sel_prep g_select name="sel_prep.g_select"
   
   #end add-point
   LET g_select = " SELECT bmfb012,bmfa006,bmfb014,bmfb011,bmfb015,bmfa005,bmfb002,bmfb005,bmfb008,bmfastus, 
       bmfb009,bmfb016,bmfa008,bmfadocdt,bmfb018,bmfb020,bmfadocno,bmfb006,bmfb007,bmfb017,bmfb019,bmfa007, 
       bmfb003,bmfb010,bmfb013,( SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = bmfa_t.bmfa006 AND ooag_t.ooagent = bmfa_t.bmfaent), 
       ( SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = bmfa_t.bmfa007 AND ooefl_t.ooeflent = bmfa_t.bmfaent AND ooefl_t.ooefl002 = '" , 
       g_dlang,"'" ,"),x.imaal_t_imaal003,x.t1_imaal003,x.oocql_t_oocql004,x.t2_oocql004,x.bmze_t_bmze002, 
       trim(bmfa007)||'.'||trim((SELECT ooefl003 FROM ooefl_t WHERE ooefl_t.ooefl001 = bmfa_t.bmfa007 AND ooefl_t.ooeflent = bmfa_t.bmfaent AND ooefl_t.ooefl002 = '" , 
       g_dlang,"'" ,")),trim(bmfa006)||'.'||trim((SELECT ooag011 FROM ooag_t WHERE ooag_t.ooag001 = bmfa_t.bmfa006 AND ooag_t.ooagent = bmfa_t.bmfaent)), 
       x.t1_imaal004,x.imaal_t_imaal004,bmfaent,'','','','','',bmfbdocno,bmfbent,bmfbsite,'','','','', 
       '','','',bmfasite,''"
 
   #add-point:sel_prep g_from name="sel_prep.g_from"
   
   #end add-point
    LET g_from = " FROM bmfa_t LEFT OUTER JOIN ( SELECT bmfb_t.*,( SELECT imaal003 FROM imaal_t WHERE imaal_t.imaalent = bmfb_t.bmfbent AND imaal_t.imaal001 = bmfb_t.bmfb006 AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal003,( SELECT imaal003 FROM imaal_t t1 WHERE t1.imaalent = bmfb_t.bmfbent AND t1.imaal001 = bmfb_t.bmfb005 AND t1.imaal002 = '" , 
        g_dlang,"'" ,") t1_imaal003,( SELECT oocql004 FROM oocql_t WHERE oocql_t.oocql001 = '221' AND oocql_t.oocql002 = bmfb_t.bmfb009 AND oocql_t.oocqlent = bmfb_t.bmfbent AND oocql_t.oocql003 = '" , 
        g_dlang,"'" ,") oocql_t_oocql004,( SELECT oocql004 FROM oocql_t t2 WHERE t2.oocql001 = '215' AND t2.oocql002 = bmfb_t.bmfb008 AND t2.oocqlent = bmfb_t.bmfbent AND t2.oocql003 = '" , 
        g_dlang,"'" ,") t2_oocql004,( SELECT bmze002 FROM bmze_t WHERE bmze_t.bmze001 = bmfb_t.bmfb015 AND bmze_t.bmzeent = bmfb_t.bmfbent) bmze_t_bmze002, 
        ( SELECT imaal004 FROM imaal_t t1 WHERE t1.imaalent = bmfb_t.bmfbent AND t1.imaal001 = bmfb_t.bmfb005 AND t1.imaal002 = '" , 
        g_dlang,"'" ,") t1_imaal004,( SELECT imaal004 FROM imaal_t WHERE imaal_t.imaalent = bmfb_t.bmfbent AND imaal_t.imaal001 = bmfb_t.bmfb006 AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,") imaal_t_imaal004 FROM bmfb_t ) x  ON bmfa_t.bmfaent = x.bmfbent AND bmfa_t.bmfasite  
        = x.bmfbsite AND bmfa_t.bmfadocno = x.bmfbdocno"
 
   #add-point:sel_prep g_where name="sel_prep.g_where"
   
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order name="sel_prep.g_order"
   
   #end add-point
    LET g_order = " ORDER BY bmfadocno,bmfb002"
 
   #add-point:sel_prep.sql.before name="sel_prep.sql.before"
   
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("bmfa_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after name="sel_prep.sql.after"
   
   #end add-point
   PREPARE abmr301_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE abmr301_g01_curs CURSOR FOR abmr301_g01_prepare
 
END FUNCTION
 
{</section>}
 
{<section id="abmr301_g01.ins_data" readonly="Y" >}
PRIVATE FUNCTION abmr301_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   bmfb012 LIKE bmfb_t.bmfb012, 
   bmfa006 LIKE bmfa_t.bmfa006, 
   bmfb014 LIKE bmfb_t.bmfb014, 
   bmfb011 LIKE bmfb_t.bmfb011, 
   bmfb015 LIKE bmfb_t.bmfb015, 
   bmfa005 LIKE bmfa_t.bmfa005, 
   bmfb002 LIKE bmfb_t.bmfb002, 
   bmfb005 LIKE bmfb_t.bmfb005, 
   bmfb008 LIKE bmfb_t.bmfb008, 
   bmfastus LIKE bmfa_t.bmfastus, 
   bmfb009 LIKE bmfb_t.bmfb009, 
   bmfb016 LIKE bmfb_t.bmfb016, 
   bmfa008 LIKE bmfa_t.bmfa008, 
   bmfadocdt LIKE bmfa_t.bmfadocdt, 
   bmfb018 LIKE bmfb_t.bmfb018, 
   bmfb020 LIKE bmfb_t.bmfb020, 
   bmfadocno LIKE bmfa_t.bmfadocno, 
   bmfb006 LIKE bmfb_t.bmfb006, 
   bmfb007 LIKE bmfb_t.bmfb007, 
   bmfb017 LIKE bmfb_t.bmfb017, 
   bmfb019 LIKE bmfb_t.bmfb019, 
   bmfa007 LIKE bmfa_t.bmfa007, 
   bmfb003 LIKE bmfb_t.bmfb003, 
   bmfb010 LIKE bmfb_t.bmfb010, 
   bmfb013 LIKE bmfb_t.bmfb013, 
   ooag_t_ooag011 LIKE ooag_t.ooag011, 
   ooefl_t_ooefl003 LIKE ooefl_t.ooefl003, 
   x_imaal_t_imaal003 LIKE imaal_t.imaal003, 
   x_t1_imaal003 LIKE imaal_t.imaal003, 
   x_oocql_t_oocql004 LIKE oocql_t.oocql004, 
   x_t2_oocql004 LIKE oocql_t.oocql004, 
   x_bmze_t_bmze002 LIKE bmze_t.bmze002, 
   l_bmfa007_ooefl003 LIKE type_t.chr1000, 
   l_bmfa006_ooag011 LIKE type_t.chr300, 
   x_t1_imaal004 LIKE imaal_t.imaal004, 
   x_imaal_t_imaal004 LIKE imaal_t.imaal004, 
   bmfaent LIKE bmfa_t.bmfaent, 
   l_bmfb003_desc LIKE gzcbl_t.gzcbl004, 
   l_bmfb008_desc LIKE oocql_t.oocql004, 
   l_bmfb009_desc LIKE oocql_t.oocql004, 
   l_bmfb007_desc LIKE gzcbl_t.gzcbl004, 
   l_bmfb011_bmfb012 LIKE type_t.chr80, 
   bmfbdocno LIKE bmfb_t.bmfbdocno, 
   bmfbent LIKE bmfb_t.bmfbent, 
   bmfbsite LIKE bmfb_t.bmfbsite, 
   l_bmfb011 LIKE type_t.chr30, 
   l_bmfb012 LIKE type_t.chr30, 
   l_int LIKE type_t.chr20, 
   l_float LIKE type_t.chr6, 
   l_count LIKE type_t.num5, 
   l_bmfb011_bmfb012_show LIKE type_t.chr1, 
   l_bmfb006_show LIKE type_t.chr1, 
   bmfasite LIKE bmfa_t.bmfasite, 
   l_bmfh004 LIKE type_t.chr500
 END RECORD
   DEFINE l_cnt           LIKE type_t.num10
#add-point:ins_data段define (客製用) name="ins_data.define_customerization"

#end add-point   
#add-point:ins_data段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ins_data.define"
DEFINE l_bmfb011   STRING
DEFINE l_bmfb012   STRING
#end add-point
 
    #add-point:ins_data段before name="ins_data.before"
    
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH abmr301_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach name="ins_data.foreach"
       CALL abmr301_g01_desc('1',1109,sr_s.bmfb003) RETURNING sr_s.l_bmfb003_desc
       CALL abmr301_g01_desc('2',215,sr_s.bmfb008) RETURNING sr_s.l_bmfb008_desc
       CALL abmr301_g01_desc('2',221,sr_s.bmfb009) RETURNING sr_s.l_bmfb009_desc
       CALL abmr301_g01_desc('1',1111,sr_s.bmfb007) RETURNING sr_s.l_bmfb007_desc
       #去除bmfb011與bmfb012的小數0
       CALL abmr301_g01_delfloat(sr_s.bmfb011) RETURNING l_bmfb011
       CALL abmr301_g01_delfloat(sr_s.bmfb012) RETURNING l_bmfb012
       IF cl_null(l_bmfb011) OR cl_null(l_bmfb012) THEN
          LET sr_s.l_bmfb011_bmfb012 = l_bmfb011 , "/" , l_bmfb012
       ELSE
          LET sr_s.l_bmfb011_bmfb012 = l_bmfb011 || "/" || l_bmfb012
       END IF
       LET sr_s.l_bmfb011_bmfb012_show = 'Y'
       IF cl_null(l_bmfb011) AND cl_null(l_bmfb012) THEN
          LET sr_s.l_bmfb011_bmfb012_show = 'N'
       END IF
       LET sr_s.l_bmfb006_show = 'Y'
       IF cl_null(sr_s.bmfb006) THEN
          LET sr_s.l_bmfb006_show = 'N'
       END IF
       #當前面編號為空時，清空編號.說明的字串(避免編號為空會只顯示一個 .)
       CALL abmr301_g01_initialize(sr_s.bmfa006,sr_s.l_bmfa006_ooag011) RETURNING sr_s.l_bmfa006_ooag011
       CALL abmr301_g01_initialize(sr_s.bmfa007,sr_s.l_bmfa007_ooefl003) RETURNING sr_s.l_bmfa007_ooefl003
       #160519-00007#1-add-(S)
       CALL abmr301_g01_get_bmfh004(sr_s.bmfadocno,sr_s.bmfb002) RETURNING sr_s.l_bmfh004 
       #160519-00007#1-add-(E) 
       #end add-point
 
       #add-point:ins_data段before_arr name="ins_data.before.save"
       
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].bmfb012 = sr_s.bmfb012
       LET sr[l_cnt].bmfa006 = sr_s.bmfa006
       LET sr[l_cnt].bmfb014 = sr_s.bmfb014
       LET sr[l_cnt].bmfb011 = sr_s.bmfb011
       LET sr[l_cnt].bmfb015 = sr_s.bmfb015
       LET sr[l_cnt].bmfa005 = sr_s.bmfa005
       LET sr[l_cnt].bmfb002 = sr_s.bmfb002
       LET sr[l_cnt].bmfb005 = sr_s.bmfb005
       LET sr[l_cnt].bmfb008 = sr_s.bmfb008
       LET sr[l_cnt].bmfastus = sr_s.bmfastus
       LET sr[l_cnt].bmfb009 = sr_s.bmfb009
       LET sr[l_cnt].bmfb016 = sr_s.bmfb016
       LET sr[l_cnt].bmfa008 = sr_s.bmfa008
       LET sr[l_cnt].bmfadocdt = sr_s.bmfadocdt
       LET sr[l_cnt].bmfb018 = sr_s.bmfb018
       LET sr[l_cnt].bmfb020 = sr_s.bmfb020
       LET sr[l_cnt].bmfadocno = sr_s.bmfadocno
       LET sr[l_cnt].bmfb006 = sr_s.bmfb006
       LET sr[l_cnt].bmfb007 = sr_s.bmfb007
       LET sr[l_cnt].bmfb017 = sr_s.bmfb017
       LET sr[l_cnt].bmfb019 = sr_s.bmfb019
       LET sr[l_cnt].bmfa007 = sr_s.bmfa007
       LET sr[l_cnt].bmfb003 = sr_s.bmfb003
       LET sr[l_cnt].bmfb010 = sr_s.bmfb010
       LET sr[l_cnt].bmfb013 = sr_s.bmfb013
       LET sr[l_cnt].ooag_t_ooag011 = sr_s.ooag_t_ooag011
       LET sr[l_cnt].ooefl_t_ooefl003 = sr_s.ooefl_t_ooefl003
       LET sr[l_cnt].x_imaal_t_imaal003 = sr_s.x_imaal_t_imaal003
       LET sr[l_cnt].x_t1_imaal003 = sr_s.x_t1_imaal003
       LET sr[l_cnt].x_oocql_t_oocql004 = sr_s.x_oocql_t_oocql004
       LET sr[l_cnt].x_t2_oocql004 = sr_s.x_t2_oocql004
       LET sr[l_cnt].x_bmze_t_bmze002 = sr_s.x_bmze_t_bmze002
       LET sr[l_cnt].l_bmfa007_ooefl003 = sr_s.l_bmfa007_ooefl003
       LET sr[l_cnt].l_bmfa006_ooag011 = sr_s.l_bmfa006_ooag011
       LET sr[l_cnt].x_t1_imaal004 = sr_s.x_t1_imaal004
       LET sr[l_cnt].x_imaal_t_imaal004 = sr_s.x_imaal_t_imaal004
       LET sr[l_cnt].bmfaent = sr_s.bmfaent
       LET sr[l_cnt].l_bmfb003_desc = sr_s.l_bmfb003_desc
       LET sr[l_cnt].l_bmfb008_desc = sr_s.l_bmfb008_desc
       LET sr[l_cnt].l_bmfb009_desc = sr_s.l_bmfb009_desc
       LET sr[l_cnt].l_bmfb007_desc = sr_s.l_bmfb007_desc
       LET sr[l_cnt].l_bmfb011_bmfb012 = sr_s.l_bmfb011_bmfb012
       LET sr[l_cnt].bmfbdocno = sr_s.bmfbdocno
       LET sr[l_cnt].bmfbent = sr_s.bmfbent
       LET sr[l_cnt].bmfbsite = sr_s.bmfbsite
       LET sr[l_cnt].l_bmfb011 = sr_s.l_bmfb011
       LET sr[l_cnt].l_bmfb012 = sr_s.l_bmfb012
       LET sr[l_cnt].l_int = sr_s.l_int
       LET sr[l_cnt].l_float = sr_s.l_float
       LET sr[l_cnt].l_count = sr_s.l_count
       LET sr[l_cnt].l_bmfb011_bmfb012_show = sr_s.l_bmfb011_bmfb012_show
       LET sr[l_cnt].l_bmfb006_show = sr_s.l_bmfb006_show
       LET sr[l_cnt].bmfasite = sr_s.bmfasite
       LET sr[l_cnt].l_bmfh004 = sr_s.l_bmfh004
 
 
       #add-point:ins_data段after_arr name="ins_data.after.save"
       
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after name="ins_data.after"
    
    #end add-point
END FUNCTION
 
{</section>}
 
{<section id="abmr301_g01.rep_data" readonly="Y" >}
PRIVATE FUNCTION abmr301_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE   
       #add-point:rep_data段印前 name="rep_data.before"
       
       #end add-point     
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT abmr301_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT abmr301_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT abmr301_g01_rep
       END IF
       #add-point:rep_data段印完 name="rep_data.after"
       
       #end add-point       
       IF g_rep_flag = TRUE THEN
          LET g_rep_flag = FALSE
          EXIT WHILE
       END IF
    END WHILE
    #add-point:rep_data段離開while印完前 name="rep_data.end.before"
    
    #end add-point
    CALL cl_gr_close_report()
    #add-point:rep_data段離開while印完後 name="rep_data.end.after"
    
    #end add-point    
END FUNCTION
 
{</section>}
 
{<section id="abmr301_g01.rep" readonly="Y" >}
PRIVATE REPORT abmr301_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num10
DEFINE l_sub_sql       STRING
#add-point:rep段define  (客製用) name="rep.define_customerization"

#end add-point
#add-point:rep段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="rep.define"
DEFINE sr3       sr3_r
DEFINE sr4       sr4_r
DEFINE sr5       sr5_r
DEFINE sr6       sr6_r
DEFINE sr7       sr7_r
DEFINE sr8       sr8_r
DEFINE sr9       sr9_r
DEFINE sr0       sr0_r
DEFINE l_bmfo003         LIKE bmfo_t.bmfo003
DEFINE l_bmfo003_desc    LIKE pmaal_t.pmaal004
DEFINE l_ac              INTEGER
DEFINE l_max             INTEGER
DEFINE l_count           INTEGER
#end add-point
 
    #add-point:rep段ORDER_before name="rep.order.before"
    
    #end add-point
    ORDER EXTERNAL BY sr1.bmfadocno,sr1.bmfb002
    #add-point:rep段ORDER_after name="rep.order.after"
    
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
          PRINTX g_rep_wcchp
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.bmfadocno
            #報表 d05 樣板自動產生(Version:6)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內) name="rep.header"
            
            #end add-point:rep.header 
            LET g_rep_docno = sr1.bmfadocno
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before name="rep.apr.signstr.before"
                          
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'bmfaent=' ,sr1.bmfaent,'{+}bmfasite=' ,sr1.bmfasite,'{+}bmfadocno=' ,sr1.bmfadocno         
            CALL cl_gr_init_apr(sr1.bmfadocno)
            #add-point:rep.apr.signstr name="rep.apr.signstr"
                          
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.bmfadocno.before name="rep.b_group.bmfadocno.before"
           
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub01.before name="rep.sub01.before"
           
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql name="rep.sub01.sql"
           
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.bmfaent CLIPPED ,"'", " AND  ooff002 = '", sr1.bmfadocno CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql name="rep.sub01.afsql"
           
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE abmr301_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE abmr301_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT abmr301_g01_subrep01
           DECLARE abmr301_g01_repcur01 CURSOR FROM g_sql
           FOREACH abmr301_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "abmr301_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach name="rep.sub01.foreach"
              
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT abmr301_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT abmr301_g01_subrep01
           #add-point:rep.sub01.after name="rep.sub01.after"
           
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.bmfadocno.after name="rep.b_group.bmfadocno.after"
           START REPORT abmr301_g01_subrep05
              LET g_sql = "SELECT bmfpdocno,bmfp002,bmfp003,bmfp004,",
                          "       bmfp005,bmfp006,bmfp007",
                          "  FROM bmfp_t ",
                          " WHERE bmfpdocno = '",sr1.bmfadocno CLIPPED,"'",
                          "   AND bmfpent   = '",sr1.bmfaent   CLIPPED,"'",
                          "   ORDER BY bmfp002,bmfp003 "
              DECLARE abmr301_g01_repcur05 CURSOR FROM g_sql
              FOREACH abmr301_g01_repcur05 INTO sr3.*
                 #異常項目(系統分類碼轉換)
                 SELECT imaal003,imaal004 INTO sr3.l_imaal003,sr3.l_imaal004
                   FROM imaal_t
                  WHERE imaalent = sr1.bmfaent
                    AND imaal001 = sr3.bmfp002
                    AND imaal002 = g_dlang
                  CALL abmr301_g01_desc('2',210,sr3.bmfp004) RETURNING sr3.l_bmfp004_desc
                  CALL abmr301_g01_desc('2',210,sr3.bmfp005) RETURNING sr3.l_bmfp005_desc
               OUTPUT TO REPORT abmr301_g01_subrep05(sr3.*)
              END FOREACH
           FINISH REPORT abmr301_g01_subrep05
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        BEFORE GROUP OF sr1.bmfb002
 
           #add-point:rep.b_group.bmfb002.before name="rep.b_group.bmfb002.before"
           
           #end add-point:
 
 
           #add-point:rep.b_group.bmfb002.after name="rep.b_group.bmfb002.after"
           
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before name="rep.everyrow.before"
          
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub02.before name="rep.sub02.before"
           
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql name="rep.sub02.sql"
           
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.bmfaent CLIPPED ,"'", " AND  ooff002 = '", sr1.bmfadocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.bmfb002 CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql name="rep.sub02.afsql"
           
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE abmr301_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE abmr301_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT abmr301_g01_subrep02
           DECLARE abmr301_g01_repcur02 CURSOR FROM g_sql
           FOREACH abmr301_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "abmr301_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach name="rep.sub02.foreach"
              
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT abmr301_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT abmr301_g01_subrep02
           #add-point:rep.sub02.after name="rep.sub02.after"
           
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow name="rep.everyrow.beforerow"
          
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow name="rep.everyrow.afterrow"
#-------------------------------------------------
           START REPORT abmr301_g01_subrep09
              LET g_sql = "SELECT bmfgdocno,bmfg003,bmfg004,bmfg005,bmfg006",
                          "  FROM bmfg_t ",
                          " WHERE bmfgdocno = '",sr1.bmfbdocno CLIPPED,"'",
                          "   AND bmfgent   = '",sr1.bmfbent   CLIPPED,"'",
                          "   AND bmfgsite   = '",sr1.bmfbsite   CLIPPED,"'",
                          "   AND bmfg002   = '",sr1.bmfb002   CLIPPED,"'",
                          "   ORDER BY bmfg002 "
              DECLARE abmr301_g01_repcur09 CURSOR FROM g_sql
              FOREACH abmr301_g01_repcur09 INTO sr7.*
                 OUTPUT TO REPORT abmr301_g01_subrep09(sr7.*)
              END FOREACH
           FINISH REPORT abmr301_g01_subrep09
#-------------------------------------------------
           START REPORT abmr301_g01_subrep10
              LET g_sql = "SELECT bmfcdocno,bmfc003,bmfc004,bmfc005,bmfc006,bmfc007,", 
                          "       bmfc008,bmfc009,bmfc010,bmfc011,bmfc013,bmfc014",
                          "  FROM bmfc_t ",                                    
                          " WHERE bmfcdocno = '",sr1.bmfbdocno CLIPPED,"'",    
                          "   AND bmfcent   = '",sr1.bmfbent   CLIPPED,"'",    
                          "   AND bmfcsite   = '",sr1.bmfbsite   CLIPPED,"'",  
                          "   AND bmfc002   = '",sr1.bmfb002   CLIPPED,"'",    
                          "   ORDER BY bmfc002 "
              DECLARE abmr301_g01_repcur10 CURSOR FROM g_sql                   
              FOREACH abmr301_g01_repcur10 INTO sr8.*
                 LET sr8.l_count = 0
                 CALL abmr301_g01_desc('1',1110,sr8.bmfc004) RETURNING sr8.l_bmfc004_desc
                 CALL abmr301_g01_desc('1',1105,sr8.bmfc013) RETURNING sr8.l_bmfc013_desc
                 CALL abmr301_g01_delfloat(sr8.bmfc008) RETURNING sr8.l_bmfc008
                 CALL abmr301_g01_delfloat(sr8.bmfc009) RETURNING sr8.l_bmfc009
                 IF cl_null(sr8.l_bmfc008) OR cl_null(sr8.l_bmfc009) THEN
                    LET sr8.l_bmfc008_bmfc009 = sr8.l_bmfc008 , "/" , sr8.l_bmfc009
                 ELSE                   
                    LET sr8.l_bmfc008_bmfc009 = sr8.l_bmfc008 || "/" || sr8.l_bmfc009
                 END IF
                 IF cl_null(sr8.l_bmfc008) AND cl_null(sr8.l_bmfc009) THEN
                    INITIALIZE sr8.l_bmfc008_bmfc009 TO NULL
                 END IF
                 IF sr8.bmfc011 = "Y" THEN
                    LET g_sql = "SELECT bmfo003 ",
                                "  FROM bmfo_t ",                                    
                                " WHERE bmfodocno = '",sr1.bmfbdocno CLIPPED,"'",    
                                "   AND bmfoent   = '",sr1.bmfbent   CLIPPED,"'",    
                                "   AND bmfosite   = '",sr1.bmfbsite   CLIPPED,"'",  
                                "   AND bmfo002   = '",sr1.bmfb002   CLIPPED,"'",    
                                "   ORDER BY bmfo002 "
                    DECLARE abmr301_g01_repcur10_01 CURSOR FROM g_sql                   
                    FOREACH abmr301_g01_repcur10_01 INTO l_bmfo003
                       SELECT pmaal004 INTO l_bmfo003_desc
                         FROM pmaal_t
                        WHERE pmaal001 = l_bmfo003
                          AND pmaal002 = g_dlang
                          AND pmaalent = sr1.bmfbent
                       LET sr8.l_count = sr8.l_count + 1
                       IF sr8.l_count = 1 THEN
                          LET sr8.l_bmfo003 = l_bmfo003_desc
                       ELSE
                          LET sr8.l_bmfo003 = sr8.l_bmfo003 , ',\n' , l_bmfo003_desc
                       END IF
                    END FOREACH
                 END IF
                 OUTPUT TO REPORT abmr301_g01_subrep10(sr8.*)                  
              END FOREACH                                                      
           FINISH REPORT abmr301_g01_subrep10
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub03.before name="rep.sub03.before"
           
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql name="rep.sub03.sql"
           
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooffent = '", 
                sr1.bmfaent CLIPPED ,"'", " AND  ooff002 = '", sr1.bmfadocno CLIPPED ,"'", " AND  ooff003 = '", 
                sr1.bmfb002 CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql name="rep.sub03.afsql"
           
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE abmr301_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE abmr301_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT abmr301_g01_subrep03
           DECLARE abmr301_g01_repcur03 CURSOR FROM g_sql
           FOREACH abmr301_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "abmr301_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach name="rep.sub03.foreach"
              
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT abmr301_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT abmr301_g01_subrep03
           #add-point:rep.sub03.after name="rep.sub03.after"
 
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after name="rep.everyrow.after"
 
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.bmfadocno
 
           #add-point:rep.a_group.bmfadocno.before name="rep.a_group.bmfadocno.before"
           START REPORT abmr301_g01_subrep06
              IF sr1.bmfb017 = 'Y' THEN
                 LET g_sql = "SELECT bmfidocno,bmfi003",
                             "  FROM bmfi_t ",
                             " WHERE bmfient = '",sr1.bmfbent CLIPPED,"'",
                             "   AND bmfisite   = '",sr1.bmfbsite   CLIPPED,"'",
                             "   AND bmfidocno   = '",sr1.bmfbdocno   CLIPPED,"'",
                             "   AND bmfi002   = '",sr1.bmfb002   CLIPPED,"'",
                             "   ORDER BY bmfi002 "
                 DECLARE abmr301_g01_repcur06 CURSOR FROM g_sql
                 FOREACH abmr301_g01_repcur06 INTO sr4.*
                    INITIALIZE sr4.l_bmfj005_bmfj006 TO NULL
                    LET sr4.l_count = 0
                    CALL abmr301_g01_desc('2',273,sr4.bmfi003) RETURNING sr4.l_bmfi003_desc
                    LET g_sql = "SELECT bmfj005,bmfj006",
                                "  FROM bmfj_t ",
                                " WHERE bmfjent = '",sr1.bmfbent CLIPPED,"'",
                                "   AND bmfjsite   = '",sr1.bmfbsite   CLIPPED,"'",
                                "   AND bmfjdocno   = '",sr1.bmfbdocno   CLIPPED,"'",
                                "   AND bmfj002   = '",sr1.bmfb002   CLIPPED,"'",
                                "   AND bmfj003   = '",sr4.bmfi003   CLIPPED,"'",
                                "   ORDER BY bmfj004 "
                    DECLARE abmr301_g01_repcur06_01 CURSOR FROM g_sql
                    FOREACH abmr301_g01_repcur06_01 INTO sr9.*
                       LET sr4.l_count = sr4.l_count + 1
                       IF sr4.l_count = 1 THEN
                          IF cl_null (sr9.bmfj006) OR sr9.bmfj005 = sr9.bmfj006 THEN
                             LET sr4.l_bmfj005_bmfj006 = sr9.bmfj005
                          ELSE
                             LET sr4.l_bmfj005_bmfj006 = sr9.bmfj005 || "-" || sr9.bmfj006
                          END IF
                       ELSE
                          IF cl_null (sr9.bmfj006) OR sr9.bmfj005 = sr9.bmfj006 THEN
                             LET sr4.l_bmfj005_bmfj006 = sr4.l_bmfj005_bmfj006 || "," || sr9.bmfj005
                          ELSE
                             LET sr4.l_bmfj005_bmfj006 = sr4.l_bmfj005_bmfj006 || "," || sr9.bmfj005 || "-" || sr9.bmfj006
                          END IF
                       END IF
                    END FOREACH
                    OUTPUT TO REPORT abmr301_g01_subrep06(sr4.*)
                 END FOREACH                
              END IF
           FINISH REPORT abmr301_g01_subrep06
#-------------------------------------------------
           START REPORT abmr301_g01_subrep07
              IF sr1.bmfb017 = 'Y' THEN
                 LET g_sql = "SELECT bmfkdocno,bmfk003,bmfk004",
                             "  FROM bmfk_t ",
                             " WHERE bmfkent = '",sr1.bmfbent CLIPPED,"'",
                             "   AND bmfksite   = '",sr1.bmfbsite   CLIPPED,"'",
                             "   AND bmfkdocno   = '",sr1.bmfbdocno   CLIPPED,"'",
                             "   AND bmfk002   = '",sr1.bmfb002   CLIPPED,"'",
                             "   ORDER BY bmfk002 "
                 DECLARE abmr301_g01_repcur07 CURSOR FROM g_sql
                 FOREACH abmr301_g01_repcur07 INTO sr5.*
                    INITIALIZE sr5.l_bmfl004 TO NULL
                    INITIALIZE sr5.l_bmfl005 TO NULL
                    CALL abmr301_g01_desc('2',273,sr5.bmfk003) RETURNING sr5.l_bmfk003_desc
                    CALL abmr301_g01_desc('1',1106,sr5.bmfk004) RETURNING sr5.l_bmfk004_desc
                    LET sr5.l_count = 0
                    LET g_sql = "SELECT bmfl004,bmfl005",
                                "  FROM bmfl_t ",
                                " WHERE bmflent = '",sr1.bmfbent CLIPPED,"'",
                                "   AND bmflsite   = '",sr1.bmfbsite   CLIPPED,"'",
                                "   AND bmfldocno   = '",sr1.bmfbdocno   CLIPPED,"'",
                                "   AND bmfl002   = '",sr1.bmfb002   CLIPPED,"'",
                                "   AND bmfl003   = '",sr5.bmfk003   CLIPPED,"'"
                    DECLARE abmr301_g01_repcur07_01 CURSOR FROM g_sql
                    FOREACH abmr301_g01_repcur07_01 INTO sr0.*
                       LET sr5.l_count = sr5.l_count + 1
                       IF sr5.l_count = 1 THEN
                          LET sr5.l_bmfl004 = sr0.bmfl004
                          LET sr5.l_bmfl005 = sr0.bmfl005
                       ELSE
                          LET sr5.l_bmfl004 = sr5.l_bmfl004 , '\n' ,sr0.bmfl004
                          LET sr5.l_bmfl005 = sr5.l_bmfl005 , '\n' ,sr0.bmfl005
                       END IF
                    END FOREACH
                    OUTPUT TO REPORT abmr301_g01_subrep07(sr5.*)
                 END FOREACH                
              END IF
           FINISH REPORT abmr301_g01_subrep07
#------------------------------------------------
           START REPORT abmr301_g01_subrep08
              LET g_sql = "SELECT bmfmdocno,bmfm003,bmfm004",
                          "  FROM bmfm_t ",
                          " WHERE bmfmdocno = '",sr1.bmfbdocno CLIPPED,"'",
                          "   AND bmfment   = '",sr1.bmfbent   CLIPPED,"'",
                          "   AND bmfmsite   = '",sr1.bmfbsite   CLIPPED,"'",
                          #"   AND bmfm002   = '",sr1.bmfb002   CLIPPED,"'",
                          "   ORDER BY bmfm002 "
              DECLARE abmr301_g01_repcur08 CURSOR FROM g_sql
              FOREACH abmr301_g01_repcur08 INTO sr6.*
                 CALL abmr301_g01_desc('2',273,sr6.bmfm003) RETURNING sr6.l_bmfm003_desc
                 OUTPUT TO REPORT abmr301_g01_subrep08(sr6.*)
              END FOREACH
           FINISH REPORT abmr301_g01_subrep08
##-------------------------------------------------
#           START REPORT abmr301_g01_subrep09
#              LET g_sql = "SELECT bmfgdocno,bmfg003,bmfg004,bmfg005,bmfg006",
#                          "  FROM bmfg_t ",
#                          " WHERE bmfgdocno = '",sr1.bmfbdocno CLIPPED,"'",
#                          "   AND bmfgent   = '",sr1.bmfbent   CLIPPED,"'",
#                          "   AND bmfgsite   = '",sr1.bmfbsite   CLIPPED,"'",
#                          "   AND bmfg002   = '",sr1.bmfb002   CLIPPED,"'",
#                          "   ORDER BY bmfg002 "
#              DECLARE abmr301_g01_repcur09 CURSOR FROM g_sql
#              FOREACH abmr301_g01_repcur09 INTO sr7.*
#                 OUTPUT TO REPORT abmr301_g01_subrep09(sr7.*)
#              END FOREACH
#           FINISH REPORT abmr301_g01_subrep09
##-------------------------------------------------
#           START REPORT abmr301_g01_subrep10
#              LET g_sql = "SELECT bmfcdocno,bmfc003,bmfc004,bmfc005,bmfc006,bmfc007,", 
#                          "       bmfc008,bmfc009,bmfc010,bmfc011,bmfc013,bmfc014",
#                          "  FROM bmfc_t ",                                    
#                          " WHERE bmfcdocno = '",sr1.bmfbdocno CLIPPED,"'",    
#                          "   AND bmfcent   = '",sr1.bmfbent   CLIPPED,"'",    
#                          "   AND bmfcsite   = '",sr1.bmfbsite   CLIPPED,"'",  
#                          "   AND bmfc002   = '",sr1.bmfb002   CLIPPED,"'",    
#                          "   ORDER BY bmfc002 "
#              DECLARE abmr301_g01_repcur10 CURSOR FROM g_sql                   
#              FOREACH abmr301_g01_repcur10 INTO sr8.*
#                 LET sr8.l_count = 0
#                 CALL abmr301_g01_desc('1',1110,sr8.bmfc004) RETURNING sr8.l_bmfc004_desc
#                 CALL abmr301_g01_desc('1',1105,sr8.bmfc013) RETURNING sr8.l_bmfc013_desc
#                 CALL abmr301_g01_delfloat(sr8.bmfc008) RETURNING sr8.l_bmfc008
#                 CALL abmr301_g01_delfloat(sr8.bmfc009) RETURNING sr8.l_bmfc009
#                 IF cl_null(sr8.l_bmfc008) OR cl_null(sr8.l_bmfc009) THEN
#                    LET sr8.l_bmfc008_bmfc009 = sr8.l_bmfc008 , "/" , sr8.l_bmfc009
#                 ELSE                   
#                    LET sr8.l_bmfc008_bmfc009 = sr8.l_bmfc008 || "/" || sr8.l_bmfc009
#                 END IF
#                 IF cl_null(sr8.l_bmfc008) AND cl_null(sr8.l_bmfc009) THEN
#                    INITIALIZE sr8.l_bmfc008_bmfc009 TO NULL
#                 END IF
#                 IF sr8.bmfc011 = "Y" THEN
#                    LET g_sql = "SELECT bmfo003 ",
#                                "  FROM bmfo_t ",                                    
#                                " WHERE bmfodocno = '",sr1.bmfbdocno CLIPPED,"'",    
#                                "   AND bmfoent   = '",sr1.bmfbent   CLIPPED,"'",    
#                                "   AND bmfosite   = '",sr1.bmfbsite   CLIPPED,"'",  
#                                "   AND bmfo002   = '",sr1.bmfb002   CLIPPED,"'",    
#                                "   ORDER BY bmfo002 "
#                    DECLARE abmr301_g01_repcur10_01 CURSOR FROM g_sql                   
#                    FOREACH abmr301_g01_repcur10_01 INTO l_bmfo003
#                       SELECT pmaal004 INTO l_bmfo003_desc
#                         FROM pmaal_t
#                        WHERE pmaal001 = l_bmfo003
#                          AND pmaal002 = g_dlang
#                          AND pmaalent = sr1.bmfbent
#                       LET sr8.l_count = sr8.l_count + 1
#                       IF sr8.l_count = 1 THEN
#                          LET sr8.l_bmfo003 = l_bmfo003_desc
#                       ELSE
#                          LET sr8.l_bmfo003 = sr8.l_bmfo003 , ',\n' , l_bmfo003_desc
#                       END IF
#                    END FOREACH
#                 END IF
#                 OUTPUT TO REPORT abmr301_g01_subrep10(sr8.*)                  
#              END FOREACH                                                      
#           FINISH REPORT abmr301_g01_subrep10
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:3)
           #add-point:rep.sub04.before name="rep.sub04.before"
           
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql name="rep.sub04.sql"
           
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.bmfaent CLIPPED ,"'", " AND  ooff002 = '", sr1.bmfadocno CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql name="rep.sub04.afsql"
           
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE abmr301_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE abmr301_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT abmr301_g01_subrep04
           DECLARE abmr301_g01_repcur04 CURSOR FROM g_sql
           FOREACH abmr301_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "abmr301_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach name="rep.sub04.foreach"
              
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT abmr301_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT abmr301_g01_subrep04
           #add-point:rep.sub04.after name="rep.sub04.after"
 
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.bmfadocno.after name="rep.a_group.bmfadocno.after"
           
           #end add-point:
 
 
        #報表 d01 樣板自動產生(Version:2)
        AFTER GROUP OF sr1.bmfb002
 
           #add-point:rep.a_group.bmfb002.before name="rep.a_group.bmfb002.before"
 
           #end add-point:
 
 
           #add-point:rep.a_group.bmfb002.after name="rep.a_group.bmfb002.after"
 
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before name="rep.lastrow.before"  
                    
            #end add-point :rep.lastrow.before
 
            #add-point:rep.lastrow.after name="rep.lastrow.after"
            
            #end add-point :rep.lastrow.after
END REPORT
 
{</section>}
 
{<section id="abmr301_g01.subrep_str" readonly="Y" >}
#讀取子報表樣板
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT abmr301_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub01.define_customerization" 

#end add-point
#add-point:sub01.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub01.define" 

#end add-point:sub01.define
 
    #add-point:sub01.order.before name="sub01.order.before" 
    
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before name="sub01.everyrow.before" 
                          
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after name="sub01.everyrow.after" 
            
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT abmr301_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub02.define_customerization" 

#end add-point
#add-point:sub02.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub02.define" 

#end add-point:sub02.define
 
    #add-point:sub02.order.before name="sub02.order.before" 
    
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before name="sub02.everyrow.before" 
                          
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after name="sub02.everyrow.after" 
            
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT abmr301_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub03.define_customerization" 

#end add-point
#add-point:sub03.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub03.define" 

#end add-point:sub03.define
 
    #add-point:sub03.order.before name="sub03.order.before" 
    
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before name="sub03.everyrow.before" 
                          
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after name="sub03.everyrow.after" 
            
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:3)
PRIVATE REPORT abmr301_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:query段define(客製用) name="sub04.define_customerization" 

#end add-point
#add-point:sub04.define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="sub04.define" 

#end add-point:sub04.define
 
    #add-point:sub04.order.before name="sub04.order.before" 
    
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before name="sub04.everyrow.before" 
                          
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after name="sub04.everyrow.after" 
            
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
 
{</section>}
 
{<section id="abmr301_g01.other_function" readonly="Y" >}

PRIVATE FUNCTION abmr301_g01_desc(p_class,p_num,p_target)
   DEFINE p_class  LIKE type_t.chr1
   DEFINE p_num    LIKE type_t.num5
   DEFINE p_target LIKE type_t.chr10
   DEFINE r_desc   LIKE type_t.chr500
   
   CASE p_class
      WHEN '1'
         SELECT gzcbl004 INTO r_desc
           FROM gzcbl_t
          WHERE gzcbl001 = p_num
            AND gzcbl002 = p_target
            AND gzcbl003 = g_dlang
         
      WHEN '2'
         SELECT oocql004 INTO r_desc
           FROM oocql_t
          WHERE oocql001 = p_num
            AND oocql002 = p_target
            AND oocql003 = g_dlang
            AND oocqlent = g_enterprise
   END CASE
   
   RETURN r_desc
END FUNCTION

################################################################################
# Descriptions...: 去除小數點後多餘的0
# Memo...........:
# Usage..........: CALL abmr301_g01_delfloat(传入参数)
#                  RETURNING 回传参数
# Input parameter: INT
# Return code....: INT
# Date & Author..: 2014/07/04 by 05384
# Modify.........:
################################################################################
PRIVATE FUNCTION abmr301_g01_delfloat(p_num)
DEFINE p_num       LIKE bmfb_t.bmfb011
DEFINE p_str       STRING
DEFINE l_float     STRING
DEFINE l_int       STRING
DEFINE l_count     INTEGER
DEFINE l_length    INTEGER
DEFINE l_float_length    INTEGER
DEFINE l_i         INTEGER
#組合bmfb011/bmfb012
   LET p_str = p_num
   LET l_count = p_str.getIndexOf(".",1)
   LET l_length = p_str.getLength()
   LET l_int = p_str.subString(1,l_count-1)
   LET l_float = p_str.subString(l_count+1,l_length)
   LET l_float_length = l_float.getLength()
   FOR l_i = 1 TO l_float_length
      IF l_float.subString(l_float_length+1-l_i,l_float_length+1-l_i) <> '0' THEN
         EXIT FOR
      END IF
   END FOR
   IF l_i < l_float_length+1 THEN
      LET l_float = l_float.subString(1,l_float_length+1-l_i)
      LET p_str = l_int || "." || l_float
   ELSE
      LET p_str = l_int
   END IF
   RETURN p_str
END FUNCTION

PRIVATE FUNCTION abmr301_g01_initialize(p_arg,p_exp)
DEFINE p_arg   STRING
DEFINE p_exp   STRING
DEFINE r_exp   STRING
   IF cl_null(p_arg) THEN
      INITIALIZE r_exp TO NULL
   ELSE
      LET r_exp = p_exp
   END IF
RETURN r_exp
END FUNCTION

################################################################################
# Descriptions...: 取得插件位置
# Memo...........:
# Usage..........: CALL abmr301_g01_get_bmfh004(p_bmfadocno,p_bmfb002)
#                  RETURNING r_bmfh004
# Input parameter: p_bmfadocno    ECN單號
#                : p_bmfb002      ECN項次
# Return code....: r_bmfh004      插件位置
# Date & Author..: 2016/05/31 By dorislai (#160519-00007#1)
# Modify.........:
################################################################################
PRIVATE FUNCTION abmr301_g01_get_bmfh004(p_bmfadocno,p_bmfb002)
   DEFINE p_bmfadocno  LIKE  bmfa_t.bmfadocno
   DEFINE p_bmfb002    LIKE  bmfb_t.bmfb002
   DEFINE r_bmfh004    LIKE  type_t.chr500
   DEFINE l_bmfh004    LIKE  bmfh_t.bmfh004
   DEFINE l_sql        STRING
   
   LET l_sql = " SELECT bmfh004 FROM bmfh_t ",
               "   WHERE bmfhent = '"||g_enterprise||"'",
               "     AND bmfhdocno = '"||p_bmfadocno||"'",
               "     AND bmfh002 = '"||p_bmfb002||"'"
   IF g_argv[1] = '1' THEN
      LET l_sql = l_sql CLIPPED," AND bmfhsite = 'ALL'"
   ELSE
      LET l_sql = l_sql CLIPPED," AND bmfhsite = '"||g_site||"'"
   END IF
   PREPARE abmr300_g01_pre1 FROM l_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE abmr300_g01_curs1 CURSOR FOR abmr300_g01_pre1
   
   LET l_bmfh004 = ''
   LET r_bmfh004 = ''
   FOREACH abmr300_g01_curs1 INTO l_bmfh004
      IF STATUS THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.code   = STATUS
         LET g_errparam.popup  = TRUE
         CALL cl_err()       
         LET g_rep_success = 'N'    
         EXIT FOREACH
      END IF
      IF cl_null(r_bmfh004) THEN
         LET r_bmfh004 = l_bmfh004 CLIPPED
      ELSE
         LET r_bmfh004 = r_bmfh004 CLIPPED||','||l_bmfh004 CLIPPED
      END IF
   END FOREACH
   
   RETURN r_bmfh004
END FUNCTION

 
{</section>}
 
{<section id="abmr301_g01.other_report" readonly="Y" >}

PRIVATE REPORT abmr301_g01_subrep05(sr3)
   DEFINE sr3 sr3_r
   ORDER EXTERNAL BY sr3.bmfpdocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr3.*
END REPORT

PRIVATE REPORT abmr301_g01_subrep06(sr4)
   DEFINE sr4 sr4_r
   ORDER EXTERNAL BY sr4.bmfidocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr4.*
END REPORT

PRIVATE REPORT abmr301_g01_subrep07(sr5)
   DEFINE sr5 sr5_r
   ORDER EXTERNAL BY sr5.bmfkdocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr5.*
END REPORT

PRIVATE REPORT abmr301_g01_subrep08(sr6)
   DEFINE sr6 sr6_r
   ORDER EXTERNAL BY sr6.bmfmdocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr6.*
END REPORT

PRIVATE REPORT abmr301_g01_subrep09(sr7)
   DEFINE sr7 sr7_r
   ORDER EXTERNAL BY sr7.bmfgdocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr7.*
END REPORT

PRIVATE REPORT abmr301_g01_subrep10(sr8)
   DEFINE sr8 sr8_r
   ORDER EXTERNAL BY sr8.bmfcdocno
   FORMAT        
      ON EVERY ROW
         PRINTX g_grNumFmt.*
         PRINTX sr8.*
END REPORT

 
{</section>}
 
