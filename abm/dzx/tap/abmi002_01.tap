<add_points prog="abmi002_01" std_prog="abmi002_01" erpver="1.0" module="ABM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="function.abmi002_01_bmze003_ref1" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="1" mark_hard="N">
<![CDATA[#+根據輸入的值，組出計算公式
PRIVATE FUNCTION abmi002_01_bmze003_ref1(p_bmze001,p_bmze003)
DEFINE  p_bmze001       LIKE bmze_t.bmze001
DEFINE  p_bmze003       STRING
DEFINE  l_bmze003_str1  LIKE bmze_t.bmze003
DEFINE  bst             base.StringTokenizer
DEFINE  l_index         LIKE type_t.num5
DEFINE  l_index2        LIKE type_t.num5
DEFINE  l_bmze003_desc  STRING
DEFINE  l_bmzf008       LIKE type_t.chr80
DEFINE  l_bmzf002       LIKE bmzf_t.bmzf002

      LET l_index = 1
      LET l_bmze003_desc = ''
      LET l_index2 = p_bmze003.getIndexOf('$',1)
      LET bst= base.StringTokenizer.create(p_bmze003,'$')
      IF l_index2 = 1 THEN
         WHILE bst.hasMoreTokens()
            IF l_index = 2 THEN
               LET l_bmze003_str1 = bst.nextToken()
               LET l_bmze003_desc = l_bmze003_desc,l_bmze003_str1
               LET l_index = 1
            ELSE 
               LET l_bmzf002 = bst.nextToken()
               SELECT bmzf008 INTO l_bmzf008 FROM abmi002_01_tmp WHERE bmzf002 = l_bmzf002
               IF l_bmzf008 < 0 THEN
                  LET l_bmze003_desc = l_bmze003_desc,'(',l_bmzf008,')'
               ELSE
                  LET l_bmze003_desc = l_bmze003_desc,l_bmzf008
               END IF
               LET l_index = l_index + 1
            END IF
         END WHILE     
      ELSE
         WHILE bst.hasMoreTokens()
            IF l_index = 2 THEN
               LET l_bmzf002 = bst.nextToken()
               SELECT bmzf008 INTO l_bmzf008 FROM abmi002_01_tmp WHERE bmzf002 = l_bmzf002
               IF l_bmzf008 < 0 THEN
                  LET l_bmze003_desc = l_bmze003_desc,'(',l_bmzf008,')'
               ELSE
                  LET l_bmze003_desc = l_bmze003_desc,l_bmzf008
               END IF
               LET l_index = 1
            ELSE 
               LET l_bmze003_str1 = bst.nextToken()
               LET l_bmze003_desc = l_bmze003_desc,l_bmze003_str1
               LET l_index = l_index + 1
            END IF
         END WHILE
      END IF
      RETURN l_bmze003_desc
      
END FUNCTION]]>
</point>
  <point name="function.abmi002_01_bmze003_ref" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="2" mark_hard="N">
<![CDATA[#+根據參數項次，組出相應的公式說明
PRIVATE FUNCTION abmi002_01_bmze003_ref(p_bmze001,p_bmze003)
DEFINE  p_bmze001       LIKE bmze_t.bmze001
DEFINE  p_bmze003       STRING
DEFINE  l_bmze003_str1  LIKE bmze_t.bmze003
DEFINE  bst             base.StringTokenizer
DEFINE  l_index         LIKE type_t.num5
DEFINE  l_index2        LIKE type_t.num5
DEFINE  l_bmze003_desc  STRING
DEFINE  l_bmzf003       LIKE bmzf_t.bmzf003
DEFINE  l_bmzf002       LIKE bmzf_t.bmzf002

      LET l_index = 1
      LET l_bmze003_desc = ''
      LET l_index2 = p_bmze003.getIndexOf('$',1)
      LET bst= base.StringTokenizer.create(p_bmze003,'$')
      IF l_index2 = 1 THEN
         WHILE bst.hasMoreTokens()
            IF l_index = 2 THEN
               LET l_bmze003_str1 = bst.nextToken()
               LET l_bmze003_desc = l_bmze003_desc,l_bmze003_str1
               LET l_index = 1
            ELSE 
               LET l_bmzf002 = bst.nextToken()
               SELECT bmzf003 INTO l_bmzf003 FROM bmzf_t WHERE bmzfent = g_enterprise AND bmzf001 = p_bmze001 AND bmzf002 = l_bmzf002
               LET l_bmze003_desc = l_bmze003_desc,l_bmzf003
               LET l_index = l_index + 1
            END IF
         END WHILE     
      ELSE
         WHILE bst.hasMoreTokens()
            IF l_index = 2 THEN
               LET l_bmzf002 = bst.nextToken()
               SELECT bmzf003 INTO l_bmzf003 FROM bmzf_t WHERE bmzfent = g_enterprise AND bmzf001 = p_bmze001 AND bmzf002 = l_bmzf002
               LET l_bmze003_desc = l_bmze003_desc,l_bmzf003
               LET l_index = 1
            ELSE 
               LET l_bmze003_str1 = bst.nextToken()
               LET l_bmze003_desc = l_bmze003_desc,l_bmze003_str1
               LET l_index = l_index + 1
            END IF
         END WHILE
      END IF
      RETURN l_bmze003_desc
END FUNCTION]]>
</point>
  <point name="function.abmi002_01_b_fill" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="3" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION abmi002_01_b_fill(p_bmze001)
   DEFINE l_sql       STRING
   DEFINE p_bmze001   LIKE bmze_t.bmze001
   DEFINE l_ac1       LIKE type_t.num5
   
   LET l_sql = "SELECT bmzf001,bmzf002,bmzf003,'' FROM bmzf_t WHERE bmzfent = '",g_enterprise,"' AND bmzf001 = '",p_bmze001,"' "
   PREPARE abmi002_01_pb FROM l_sql
   DECLARE b_fill_curs CURSOR FOR abmi002_01_pb

   CALL g_bmzf_d.clear()
   LET l_ac1 = 1
   FOREACH b_fill_curs INTO g_bmzf_d[l_ac1].*
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      SELECT bmzf008 INTO g_bmzf_d[l_ac1].bmzf008 FROM abmi002_01_tmp WHERE bmzf002 = g_bmzf_d[l_ac1].bmzf002
      
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec THEN
         #CALL cl_err( "", 9035, 0 )
         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_bmzf_d.deleteElement(g_bmzf_d.getLength())
   LET g_rec_b = l_ac1 - 1
   DISPLAY g_rec_b TO FORMONLY.cnt
   CLOSE b_fill_curs
   FREE abmi002_01_pb
END FUNCTION]]>
</point>
  <point name="function.abmi002_01_bmzf008_chk" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="4" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION abmi002_01_bmzf008_chk(p_bmzf008)
DEFINE   p_bmzf008       STRING
DEFINE   l_index         LIKE type_t.num5
DEFINE   l_index2        LIKE type_t.num5
DEFINE   li_i            LIKE type_t.num10
DEFINE   l_value         LIKE type_t.chr5
DEFINE   l_len           LIKE type_t.num10
DEFINE   l_n             LIKE type_t.num5
DEFINE   r_success       LIKE type_t.num5

      LET r_success = TRUE
      
      IF cl_null(p_bmzf008) THEN
         CALL cl_err(p_bmzf008,'abm-00005',0)
         LET r_success = FALSE
         RETURN r_success
      END IF
      #判斷是否有負號'-'，如果有，判斷是否在第一位，若不在第一位，則報錯，若在第一位，則從第二位開始判斷是否存在非數字
      #如果沒有'-'，則從第一位開始判斷是否存在非數字
      LET l_n = 0
      
      LET l_index = p_bmzf008.getIndexOf("-",1)
      IF l_index = 0 THEN         
         LET l_index2 = 1
      ELSE
         IF l_index = 1 THEN
            LET l_index2 = 2
         ELSE
            CALL cl_err(p_bmzf008,'agl-00036',0)
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
      
      LET l_len = p_bmzf008.getLength()
      FOR li_i = l_index2 TO l_len
          LET l_value = p_bmzf008.subString(li_i,li_i)
          IF l_value MATCHES '[.0123456789]' THEN
             IF l_value = '.' THEN
                IF l_n > 0 THEN   #不止一個小數點
                   CALL cl_err(p_bmzf008,'agl-00036',0)
                   LET r_success = FALSE
                   RETURN r_success
                END IF
                LET l_n = l_n + 1
             END IF
          ELSE
             CALL cl_err(p_bmzf008,'agl-00036',0)
             LET r_success = FALSE
             RETURN r_success
          END IF
      END FOR

      RETURN r_success
   
END FUNCTION]]>
</point>
  <point name="function.abmi002_01_show" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="5" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION abmi002_01_show(p_bmze001)
DEFINE p_bmze001       LIKE bmze_t.bmze001
DEFINE l_bmze003       LIKE bmze_t.bmze003
DEFINE l_bmze003_desc  STRING
DEFINE l_bmze003_desc1 STRING

       SELECT bmze003 INTO l_bmze003 FROM bmze_t WHERE bmzeent = g_enterprise AND bmze001 = p_bmze001
       CALL abmi002_01_bmze003_ref(p_bmze001,l_bmze003) RETURNING l_bmze003_desc
       DISPLAY l_bmze003_desc TO bmze003_desc
       CALL abmi002_01_b_fill(p_bmze001)
       
       
END FUNCTION]]>
</point>
  <point name="function.abmi002_01_set_format" cite_std="N" status="" ver="1" src="s" new="Y" cite_ver="" order="6" mark_hard="N">
<![CDATA[#+
PRIVATE FUNCTION abmi002_01_set_format(p_bmzf008)
DEFINE   p_bmzf008       STRING
DEFINE   ls_value        STRING
DEFINE   li_digcut       LIKE type_t.num10
DEFINE   ls_head_str     STRING
DEFINE   ls_tail_str     STRING
DEFINE   li_i            LIKE type_t.num10 
DEFINE   li_tmp          LIKE type_t.num10 
DEFINE   li_tail_value   LIKE type_t.num10

   LET li_digcut = p_bmzf008.getIndexOf(".",1)
   IF li_digcut = 0 THEN
      LET ls_value = p_bmzf008
      RETURN ls_value
   END IF

   LET ls_head_str = p_bmzf008.subString(1,li_digcut - 1)
   LET ls_tail_str = p_bmzf008.subString(li_digcut + 1,p_bmzf008.getLength())
   
   IF ls_tail_str > 0 THEN
      FOR li_i = ls_tail_str.getLength() TO 1
          LET li_tail_value = ls_tail_str.subString(ls_tail_str.getLength()-1,ls_tail_str.getLength())
          IF li_tail_value = 0 THEN
             LET ls_tail_str = ls_tail_str.subString(1,ls_tail_str.getLength()-1)
          ELSE
             EXIT FOR 
          END IF
      END FOR
      LET ls_value = ls_head_str || "." || ls_tail_str
   ELSE
      LET ls_value = ls_head_str 
   END IF

   RETURN ls_value
   
END FUNCTION]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bmzf001" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmzf_d[l_ac].bmzf001) AND NOT cl_null(g_bmzf_d[l_ac].bmzf002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmzf_d[l_ac].bmzf001 != g_bmzf_d_t.bmzf001 OR g_bmzf_d[l_ac].bmzf002 != g_bmzf_d_t.bmzf002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmzf_t WHERE "||"bmzfent = '" ||g_enterprise|| "' AND "||"bmzf001 = '"||g_bmzf_d[l_ac].bmzf001 ||"' AND "|| "bmzf002 = '"||g_bmzf_d[l_ac].bmzf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.bmzf002" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_bmzf_d[l_ac].bmzf002) THEN 
            END IF 

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmzf_d[l_ac].bmzf001) AND NOT cl_null(g_bmzf_d[l_ac].bmzf002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmzf_d[l_ac].bmzf001 != g_bmzf_d_t.bmzf001 OR g_bmzf_d[l_ac].bmzf002 != g_bmzf_d_t.bmzf002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmzf_t WHERE "||"bmzfent = '" ||g_enterprise|| "' AND "||"bmzf001 = '"||g_bmzf_d[l_ac].bmzf001 ||"' AND "|| "bmzf002 = '"||g_bmzf_d[l_ac].bmzf002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.bmzf008" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[            #IF NOT cl_null(g_bmzf_d[l_ac].bmzf008) THEN
            #   CALL abmi002_01_set_format(g_bmzf_d[l_ac].bmzf008) RETURNING g_bmzf_d[l_ac].bmzf008
            #   DISPLAY BY NAME g_bmzf_d[l_ac].bmzf008               
            #END IF 
            IF NOT abmi002_01_bmzf008_chk(g_bmzf_d[l_ac].bmzf008) THEN
               LET g_bmzf_d[l_ac].bmzf008 = g_bmzf_d_t.bmzf008
               NEXT FIELD CURRENT
            END IF
]]>
</point>
  <point name="input.before_close" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   LET INT_FLAG = FALSE]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[         
         BEFORE ROW
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            
            CALL s_transaction_begin()
            OPEN abmi002_01_bcl USING g_enterprise,p_bmze001
            IF SQLCA.sqlcode THEN
               CALL cl_err("abmi002_01_bcl",SQLCA.sqlcode,1)
            ELSE
               FETCH abmi002_01_bcl INTO g_bmzf_d[l_ac].*
               IF SQLCA.sqlcode THEN
                  CALL cl_err(p_bmze001,SQLCA.sqlcode,1)
               END IF
               
               CALL abmi002_01_show(p_bmze001)
               LET g_bmzf_d_t.* = g_bmzf_d[l_ac].*
               
               DISPLAY BY NAME g_bmzf_d[l_ac].bmzf001,g_bmzf_d[l_ac].bmzf002,g_bmzf_d[l_ac].bmzf003,g_bmzf_d[l_ac].bmzf008
            END IF
            
          ON ROW CHANGE
             CALL s_transaction_begin()
             UPDATE abmi002_01_tmp SET bmzf008 = g_bmzf_d[l_ac].bmzf008
               WHERE bmzf002 = g_bmzf_d[l_ac].bmzf002
             IF SQLCA.SQLcode  THEN
                CALL cl_err("abmi002_01_tmp",SQLCA.sqlcode,1)
                CALL s_transaction_end('N','0')
             ELSE
                CALL s_transaction_end('Y','0')
             END IF
             #SELECT bmze003 INTO l_bmze003 FROM bmze_t WHERE bmzeent = g_enterprise AND bmze001 = p_bmze001
             #CALL abmi002_01_bmze003_ref1(p_bmze001,l_bmze003) RETURNING l_bmze003_desc1
             #DISPLAY l_bmze003_desc1 TO bmze003_desc1
             
          ON ACTION compute
             
             IF NOT abmi002_01_bmzf008_chk(g_bmzf_d[l_ac].bmzf008) THEN
                LET g_bmzf_d[l_ac].bmzf008 = g_bmzf_d_t.bmzf008
                NEXT FIELD CURRENT
             END IF
             
             CALL s_transaction_begin()
             UPDATE abmi002_01_tmp SET bmzf008 = g_bmzf_d[l_ac].bmzf008
               WHERE bmzf002 = g_bmzf_d[l_ac].bmzf002
             IF SQLCA.SQLcode  THEN
                CALL cl_err("abmi002_01_tmp",SQLCA.sqlcode,1)
                CALL s_transaction_end('N','0')
             ELSE
                CALL s_transaction_end('Y','0')
             END IF
             
             #單身值欄位必須全部輸入數值
             LET l_n = 0
             SELECT COUNT(*) INTO l_n FROM abmi002_01_tmp WHERE bmzf008 IS NULL
             IF l_n > 0 THEN
                CALL cl_err('','abm-00005',0)
                NEXT FIELD CURRENT
             END IF
             
             SELECT bmze003 INTO l_bmze003 FROM bmze_t WHERE bmzeent = g_enterprise AND bmze001 = p_bmze001
             CALL abmi002_01_bmze003_ref1(p_bmze001,l_bmze003) RETURNING l_bmze003_desc1
             DISPLAY l_bmze003_desc1 TO bmze003_desc1
             
             LET l_sql = "SELECT ROUND(",l_bmze003_desc1,",6) FROM dual"
             PREPARE bmze003_pre FROM l_sql
             EXECUTE bmze003_pre INTO l_result
             IF SQLCA.sqlcode THEN
                CALL cl_err(l_bmze003_desc1,'abm-00004',0)
                LET l_result = ''
             END IF
             DISPLAY l_result TO result  
]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DEFINE p_bmze001       LIKE bmze_t.bmze001
   DEFINE l_forupd_sql    STRING
   DEFINE l_sql           STRING
   DEFINE l_bmze003_desc1 LIKE type_t.chr80
   DEFINE l_bmze003       LIKE bmze_t.bmze003
   DEFINE l_result        LIKE type_t.chr80
   DEFINE l_n             LIKE type_t.num5]]>
</point>
  <point name="input.get_var" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   p_bmze001]]>
</point>
  <point name="input.post_input" cite_std="N" status="" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[   DROP TABLE abmi002_01_tmp
]]>
</point>
  <point name="input.pre_input" cite_std="N" status="u" ver="1" src="s" new="N" cite_ver="" order="" mark_hard="N">
<![CDATA[  
   WHENEVER ERROR CONTINUE
   
   CREATE TEMP TABLE abmi002_01_tmp
   (
   bmzf002    DECIMAL(10,0),
   bmzf003    VARCHAR(80),
   bmzf008    VARCHAR(80)
   );
   
   LET l_sql = " INSERT INTO abmi002_01_tmp (SELECT bmzf002,bmzf003,'' FROM bmzf_t WHERE bmzfent = '",g_enterprise,"' AND bmzf001 = '",p_bmze001,"' )"
   PREPARE abmi002_01_tmp FROM l_sql
   EXECUTE abmi002_01_tmp
   
   CALL abmi002_01_show(p_bmze001)
   
   LET l_ac = 1
   LET l_allow_insert = FALSE
   LET l_allow_delete = FALSE
   
   LET l_forupd_sql = "SELECT bmzf001,bmzf002,bmzf003,'' FROM bmzf_t WHERE bmzfent = ? AND bmzf001 = ? FOR UPDATE"
   LET l_forupd_sql = cl_sql_forupd(l_forupd_sql)
   DECLARE abmi002_01_bcl CURSOR FROM l_forupd_sql
   ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.action" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmzf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmzf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmzf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmzf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmzf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bmzf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmzf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmzf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmzf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmzf001" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmzf002" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmzf003" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmzf008" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="" new="Y" cite_ver="">
<![CDATA[]]>
</point>
  <section id="abmi002_01.description" ver="4" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000124
#+ 
#+ Filename...: abmi002_01
#+ Description: ...
#+ Creator....: 02294(2013/08/20)
#+ Modifier...: 02294(2013/08/27)
#+ Buildtype..: 應用 c02b 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="abmi002_01.global" ver="2" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_bmzf_d        RECORD
       bmzf001 LIKE bmzf_t.bmzf001, 
   bmzf002 LIKE bmzf_t.bmzf002, 
   bmzf003 LIKE bmzf_t.bmzf003, 
   bmzf008 LIKE type_t.chr80
       END RECORD
 
 
DEFINE g_bmzf_d          DYNAMIC ARRAY OF type_g_bmzf_d
DEFINE g_bmzf_d_t        type_g_bmzf_d
 
 
DEFINE g_bmzf001_t   LIKE bmzf_t.bmzf001    #Key值備份
DEFINE g_bmzf002_t      LIKE bmzf_t.bmzf002    #Key值備份
 
 
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rec_b               LIKE type_t.num5  
DEFINE g_detail_idx          LIKE type_t.num5  
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
    
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point	
]]>
</section>
  <section id="abmi002_01.input" ver="1" status="" src="s">
<![CDATA[#+ 資料輸入
PUBLIC FUNCTION abmi002_01(--)
   #add-point:input段變數傳入
   {<point name="input.get_var"/>}
   #end add-point
   )
   DEFINE l_ac_t          LIKE type_t.num5        #未取消的ARRAY CNT 
   DEFINE l_allow_insert  LIKE type_t.num5        #可新增否 
   DEFINE l_allow_delete  LIKE type_t.num5        #可刪除否  
   DEFINE l_count         LIKE type_t.num5
   DEFINE l_insert        LIKE type_t.num5
   DEFINE l_cmd           LIKE type_t.chr5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point
 
   #畫面開啟 (identifier)
   OPEN WINDOW w_abmi002_01 WITH FORM cl_ap_formpath("abm","abmi002_01")
 
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   LET g_qryparam.state = "i"
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   
   #輸入前處理
   #add-point:單身前置處理
   {<point name="input.pre_input"/>}
   #end add-point
  
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT ARRAY g_bmzf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
         
         #自訂ACTION
         #add-point:單身前置處理
         {<point name="input.action"/>}
         #end add-point
         
         #自訂ACTION(detail_input)
         
         
         BEFORE INPUT
            #add-point:單身輸入前處理
            {<point name="input.before_input"/>}
            #end add-point
          
         #---------------------<  Detail: page1  >---------------------
         #----<<bmzf001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmzf001
            #add-point:BEFORE FIELD bmzf001
            {<point name="input.b.page1.bmzf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmzf001
            
            #add-point:AFTER FIELD bmzf001
            {<point name="input.a.page1.bmzf001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmzf001
            #add-point:ON CHANGE bmzf001
            {<point name="input.g.page1.bmzf001" />}
            #END add-point
 
         #----<<bmzf002>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmzf002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmzf_d[l_ac].bmzf002,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmzf002
            END IF
 
 
            #add-point:AFTER FIELD bmzf002
            {<point name="input.a.page1.bmzf002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmzf002
            #add-point:BEFORE FIELD bmzf002
            {<point name="input.b.page1.bmzf002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmzf002
            #add-point:ON CHANGE bmzf002
            {<point name="input.g.page1.bmzf002" />}
            #END add-point
 
         #----<<bmzf003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmzf003
            #add-point:BEFORE FIELD bmzf003
            {<point name="input.b.page1.bmzf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmzf003
            
            #add-point:AFTER FIELD bmzf003
            {<point name="input.a.page1.bmzf003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmzf003
            #add-point:ON CHANGE bmzf003
            {<point name="input.g.page1.bmzf003" />}
            #END add-point
 
         #----<<bmzf008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmzf008
            #add-point:BEFORE FIELD bmzf008
            {<point name="input.b.page1.bmzf008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmzf008
            
            #add-point:AFTER FIELD bmzf008
            {<point name="input.a.page1.bmzf008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmzf008
            #add-point:ON CHANGE bmzf008
            {<point name="input.g.page1.bmzf008" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<bmzf001>>----
         #Ctrlp:input.c.page1.bmzf001
         ON ACTION controlp INFIELD bmzf001
            #add-point:ON ACTION controlp INFIELD bmzf001
            {<point name="input.c.page1.bmzf001" />}
            #END add-point
 
         #----<<bmzf002>>----
         #Ctrlp:input.c.page1.bmzf002
         ON ACTION controlp INFIELD bmzf002
            #add-point:ON ACTION controlp INFIELD bmzf002
            {<point name="input.c.page1.bmzf002" />}
            #END add-point
 
         #----<<bmzf003>>----
         #Ctrlp:input.c.page1.bmzf003
         ON ACTION controlp INFIELD bmzf003
            #add-point:ON ACTION controlp INFIELD bmzf003
            {<point name="input.c.page1.bmzf003" />}
            #END add-point
 
         #----<<bmzf008>>----
         #Ctrlp:input.c.page1.bmzf008
         ON ACTION controlp INFIELD bmzf008
            #add-point:ON ACTION controlp INFIELD bmzf008
            {<point name="input.c.page1.bmzf008" />}
            #END add-point
 
 
 
         AFTER INPUT
            #add-point:單身輸入後處理
            {<point name="input.after_input"/>}
            #end add-point
            
      END INPUT
      
 
      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      #公用action
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:畫面關閉前
   {<point name="input.before_close"/>}
   #end add-point
   
   #畫面關閉
   CLOSE WINDOW w_abmi002_01 
   
   #add-point:input段after input 
   {<point name="input.post_input"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="abmi002_01.other_dialog" ver="1" status="" src="s">
<![CDATA[{<point name="other.dialog"/>}
]]>
</section>
  <section id="abmi002_01.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
</add_points>