<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="abmt300_03" std_prog="abmt300_03" erpver="1.0" module="ABM" ver="2" env="s" zone="t10dev" booking="N" type="S" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="construct.c.bmfa003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_bmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfa003  #顯示到畫面上

            NEXT FIELD bmfa003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfb008" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb008  #顯示到畫面上

            NEXT FIELD bmfb008                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfb009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb009  #顯示到畫面上

            NEXT FIELD bmfb009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmfo003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "('2','3')" #交易對象類型
            CALL q_pmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfo003  #顯示到畫面上

            NEXT FIELD bmfo003                     #返回原欄位

]]>
  </point>
  <point name="input.a.bmfb005" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.bmfb006" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.bmfb008" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.bmfb009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.bmfbdocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmfb_m.bmfbdocno) AND NOT cl_null(g_bmfb_m.bmfb002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmfb_m.bmfbdocno != g_bmfbdocno_t  OR g_bmfb_m.bmfb002 != g_bmfb002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmfb_t WHERE "||"bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND "||"bmfbdocno = '"||g_bmfb_m.bmfbdocno ||"' AND "|| "bmfb002 = '"||g_bmfb_m.bmfb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.c.bmfb008" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfb_m.bmfb008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmfb_m.bmfb008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfb_m.bmfb008 TO bmfb008              #顯示到畫面上

            NEXT FIELD bmfb008                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmfb009" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfb_m.bmfb009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmfb_m.bmfb009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfb_m.bmfb009 TO bmfb009              #顯示到畫面上

            NEXT FIELD bmfb009                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmfo003" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfo_d[l_ac].bmfo003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "('2','3')" #交易對象類型

            CALL q_pmaa001_1()                                #呼叫開窗

            LET g_bmfo_d[l_ac].bmfo003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfo_d[l_ac].bmfo003 TO bmfo003              #顯示到畫面上

            NEXT FIELD bmfo003                          #返回原欄位

]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfo_d[l_ac].bmfo003
            CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmfo_d[l_ac].bmfo003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfo_d[l_ac].bmfo003_desc
]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="function.abmt300_03_bmfb_show" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#單頭資料顯示
PRIVATE FUNCTION abmt300_03_bmfb_show()
   LET g_bmfb_m.bmfbdocno = g_bmfbdocno
   LET g_bmfb_m.bmfa003 = g_bmfa003
   LET g_bmfb_m.bmfb005 = g_bmfb005
   LET g_bmfb_m.bmfb006 = g_bmfb006
   LET g_bmfb_m.bmfb002 = g_bmfb002
   LET g_bmfb_m.bmfb003 = g_bmfb003
   LET g_bmfb_m.bmfb008 = g_bmfb008
   LET g_bmfb_m.bmfb009 = g_bmfb009
   LET g_bmfb_m.bmfb010 = g_bmfb010
   DISPLAY BY NAME g_bmfb_m.bmfbdocno,g_bmfb_m.bmfa003,g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,
                   g_bmfb_m.bmfb002,g_bmfb_m.bmfb003,g_bmfb_m.bmfb008,g_bmfb_m.bmfb009,g_bmfb_m.bmfb010
                   
   IF NOT cl_null(g_bmfb_m.bmfa003) THEN
      SELECT imaal003,imaal004
        INTO g_bmfb_m.bmfa003_desc,g_bmfb_m.bmfa003_desc1
        FROM imaal_t
       WHERE imaalent = g_enterprise
         AND imaal001 = g_bmfb_m.bmfa003
         AND imaal002 = g_dlang
      DISPLAY BY NAME g_bmfb_m.bmfa003_desc,g_bmfb_m.bmfa003_desc1
   END IF
   IF NOT cl_null(g_bmfb_m.bmfb005) THEN
      SELECT imaal003,imaal004
        INTO g_bmfb_m.bmfb005_desc,g_bmfb_m.bmfb005_desc1
        FROM imaal_t
       WHERE imaalent = g_enterprise
         AND imaal001 = g_bmfb_m.bmfb005
         AND imaal002 = g_dlang
      DISPLAY BY NAME g_bmfb_m.bmfb005_desc,g_bmfb_m.bmfb005_desc1   
   END IF
   IF NOT cl_null(g_bmfb_m.bmfb006) THEN
      SELECT imaal003,imaal004
        INTO g_bmfb_m.bmfb006_desc,g_bmfb_m.bmfb006_desc1
        FROM imaal_t
       WHERE imaalent = g_enterprise
         AND imaal001 = g_bmfb_m.bmfb006
         AND imaal002 = g_dlang
      DISPLAY BY NAME g_bmfb_m.bmfb006_desc,g_bmfb_m.bmfb006_desc1   
   END IF
   IF NOT cl_null(g_bmfb_m.bmfb008) THEN
      SELECT oocql004
        INTO g_bmfb_m.bmfb008_desc
        FROM oocql_t
       WHERE oocqlent = g_enterprise
         AND oocql001 = '215'
         AND oocql002 = g_bmfb_m.bmfb008
         AND oocql003 = g_dlang
      DISPLAY BY NAME g_bmfb_m.bmfb008_desc  
   END IF
   IF NOT cl_null(g_bmfb_m.bmfb009) THEN
      SELECT oocql004
        INTO g_bmfb_m.bmfb009_desc
        FROM oocql_t
       WHERE oocqlent = g_enterprise
         AND oocql001 = '221'
         AND oocql002 = g_bmfb_m.bmfb009
         AND oocql003 = g_dlang
      DISPLAY BY NAME g_bmfb_m.bmfb009_desc  
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt300_03_bmfo_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#客戶名稱
PRIVATE FUNCTION abmt300_03_bmfo_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfo_d[l_ac].bmfo003
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfo_d[l_ac].bmfo003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmfo_d[l_ac].bmfo003_desc
END FUNCTION]]>
  </point>
  <point name="function.abmt300_03_bmfo003_chk" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[#客戶編號檢查
PRIVATE FUNCTION abmt300_03_bmfo003_chk()
DEFINE l_n       LIKE type_t.num5

   LET g_errno = ""
   LET l_n = 0
   SELECT COUNT(*) INTO l_n FROM pmaa_t
    WHERE pmaaent = g_enterprise
      AND pmaa001 = g_bmfo_d[l_ac].bmfo003
      AND pmaa002 IN ('2','3')
   IF l_n = 0 THEN
      LET g_errno="abm-00034"
   ELSE
      LET l_n = 0
      SELECT COUNT(*) INTO l_n FROM pmaa_t
       WHERE pmaaent = g_enterprise
         AND pmaa001 = g_bmfo_d[l_ac].bmfo003
         AND pmaa002 IN ('2','3')
         AND (pmaastus='Y' OR pmaastus = 'N')
      IF l_n = 0 THEN
         LET g_errno = "abm-00035"
      ELSE
         LET l_n = 0
         SELECT COUNT(*) INTO l_n FROM pmaa_t
          WHERE pmaaent = g_enterprise
            AND pmaa001 = g_bmfo_d[l_ac].bmfo003
            AND pmaa002 IN ('2','3')
            AND (pmaastus='Y' OR pmaastus = 'X')
         IF l_n = 0 THEN
            LET g_errno = "abm-00079"
         END IF
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL abmt300_03_bmfo_desc()]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_sql = "SELECT  UNIQUE bmfo003,'' FROM bmfo_t", 
                  " WHERE bmfoent = ? AND bmfosite = ? AND bmfodocno = ? AND bmfo002 = ?"
      
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmfo_t.bmfo003"]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.c.bmfb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_bmfb004()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb004  #顯示到畫面上

            NEXT FIELD bmfb004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfb005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb005  #顯示到畫面上

            NEXT FIELD bmfb005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb006  #顯示到畫面上

            NEXT FIELD bmfb006                     #返回原欄位

]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_type               LIKE type_t.chr1
DEFINE g_bmfbdocno          LIKE bmfb_t.bmfbdocno
DEFINE g_bmfa003            LIKE bmfa_t.bmfa003
DEFINE g_bmfb002            LIKE bmfb_t.bmfb002
DEFINE g_bmfb003            LIKE bmfb_t.bmfb003
DEFINE g_bmfb005            LIKE bmfb_t.bmfb005
DEFINE g_bmfb006            LIKE bmfb_t.bmfb006
DEFINE g_bmfb008            LIKE bmfb_t.bmfb008
DEFINE g_bmfb009            LIKE bmfb_t.bmfb009
DEFINE g_bmfb010            LIKE bmfb_t.bmfb010 
DEFINE g_type1              LIKE type_t.chr1
DEFINE g_type2              LIKE type_t.chr1]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_type = '2' THEN
      CALL cl_set_comp_visible("bmfa003",FALSE)
      CALL cl_set_comp_visible("bmfa003_desc",FALSE)
      CALL cl_set_comp_visible("bmfa003_desc1",FALSE)
      CALL cl_set_comp_visible("lbl_bmfa003",FALSE)
      CALL cl_set_comp_visible("lbl_bmfa003_desc",FALSE)
      CALL cl_set_comp_visible("lbl_bmfa003_desc1",FALSE)
   ELSE
      CALL cl_set_comp_visible("bmfa003",TRUE)
      CALL cl_set_comp_visible("bmfa003_desc",TRUE)
      CALL cl_set_comp_visible("bmfa003_desc1",TRUE)
      CALL cl_set_comp_visible("lbl_bmfa003",TRUE)
      CALL cl_set_comp_visible("lbl_bmfa003_desc",TRUE)
      CALL cl_set_comp_visible("lbl_bmfa003_desc1",TRUE)
   END IF
   CALL abmt300_03_bmfb_show()]]>
  </point>
  <point name="input.a.bmfb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmfb_m.bmfb001) AND NOT cl_null(g_bmfb_m.bmfb002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmfb_m.bmfb001 != g_bmfb001_t  OR g_bmfb_m.bmfb002 != g_bmfb002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmfb_t WHERE "||"bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND "||"bmfb001 = '"||g_bmfb_m.bmfb001 ||"' AND "|| "bmfb002 = '"||g_bmfb_m.bmfb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.bmfb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmfb_m.bmfbdocno) AND NOT cl_null(g_bmfb_m.bmfb002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmfb_m.bmfbdocno != g_bmfbdocno_t  OR g_bmfb_m.bmfb002 != g_bmfb002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmfb_t WHERE "||"bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND "||"bmfbdocno = '"||g_bmfb_m.bmfbdocno ||"' AND "|| "bmfb002 = '"||g_bmfb_m.bmfb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.bmfbsite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmfb_m.bmfbsite) AND NOT cl_null(g_bmfb_m.bmfb001) AND NOT cl_null(g_bmfb_m.bmfb002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmfb_m.bmfbsite != g_bmfbsite_t  OR g_bmfb_m.bmfb001 != g_bmfb001_t  OR g_bmfb_m.bmfb002 != g_bmfb002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmfb_t WHERE "||"bmfbent = '" ||g_enterprise|| "' AND "||"bmfbsite = '"||g_bmfb_m.bmfbsite ||"' AND "|| "bmfb001 = '"||g_bmfb_m.bmfb001 ||"' AND "|| "bmfb002 = '"||g_bmfb_m.bmfb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.page1.bmfo003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            DISPLAY "" TO g_bmfo_d[l_ac].bmfo003
            IF NOT cl_null(g_bmfb_m.bmfbdocno) AND NOT cl_null(g_bmfb_m.bmfb002) AND NOT cl_null(g_bmfo_d[l_ac].bmfo003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmfb_m.bmfbdocno != g_bmfbdocno_t OR g_bmfb_m.bmfb002 != g_bmfb002_t OR g_bmfo_d[l_ac].bmfo003 != g_bmfo_d_t.bmfo003))) THEN 
                  IF NOT ap_chk_notDup(g_bmfo_d[l_ac].bmfo003,"SELECT COUNT(*) FROM bmfo_t WHERE "||"bmfoent = '" ||g_enterprise|| "' AND bmfosite = '" ||g_site|| "' AND "||"bmfodocno = '"||g_bmfb_m.bmfbdocno ||"' AND "|| "bmfo002 = '"||g_bmfb_m.bmfb002 ||"' AND "|| "bmfo003 = '"||g_bmfo_d[l_ac].bmfo003 ||"'",'std-00004',0) THEN 
                     LET g_bmfo_d[l_ac].bmfo003 = g_bmfo_d_t.bmfo003
                     CALL abmt300_03_bmfo_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmfo_d[l_ac].bmfo003) THEN
               CALL abmt300_03_bmfo003_chk()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_bmfo_d[l_ac].bmfo003,g_errno,1)
                  LET g_bmfo_d[l_ac].bmfo003 = g_bmfo_d_t.bmfo003
                  CALL abmt300_03_bmfo_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL abmt300_03_bmfo_desc()
]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CALL abmt300_03_bmfb_show()
         NEXT FIELD bmfo003   ]]>
  </point>
  <point name="input.c.bmfa003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfb_m.bmfa003             #給予default值
            LET g_qryparam.default2 = "" #g_bmfb_m.bmaa002 #配方版本

            #給予arg

            CALL q_bmaa001()                                #呼叫開窗

            LET g_bmfb_m.bmfa003 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_bmfb_m.bmaa002 = g_qryparam.return2 #配方版本

            DISPLAY g_bmfb_m.bmfa003 TO bmfa003              #顯示到畫面上
            #DISPLAY g_bmfb_m.bmaa002 TO bmaa002 #配方版本

            NEXT FIELD bmfa003                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmfb004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfb_m.bmfb004             #給予default值

            #給予arg

            CALL q_bmfb004()                                #呼叫開窗

            LET g_bmfb_m.bmfb004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfb_m.bmfb004 TO bmfb004              #顯示到畫面上

            NEXT FIELD bmfb004                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmfb005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfb_m.bmfb005             #給予default值

            #給予arg

            CALL q_imaa001_2()                                #呼叫開窗

            LET g_bmfb_m.bmfb005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfb_m.bmfb005 TO bmfb005              #顯示到畫面上

            NEXT FIELD bmfb005                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmfb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfb_m.bmfb006             #給予default值

            #給予arg

            CALL q_imaa001_2()                                #呼叫開窗

            LET g_bmfb_m.bmfb006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfb_m.bmfb006 TO bmfb006              #顯示到畫面上

            NEXT FIELD bmfb006                          #返回原欄位

]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_act_visible("delete", TRUE)]]>
  </point>
  <point name="main.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE p_type               LIKE type_t.chr1
   DEFINE p_bmfbdocno          LIKE bmfb_t.bmfbdocno
   DEFINE p_bmfa003            LIKE bmfa_t.bmfa003
   DEFINE p_bmfb002            LIKE bmfb_t.bmfb002
   DEFINE p_bmfb003            LIKE bmfb_t.bmfb003
   DEFINE p_bmfb005            LIKE bmfb_t.bmfb005
   DEFINE p_bmfb006            LIKE bmfb_t.bmfb006
   DEFINE p_bmfb008            LIKE bmfb_t.bmfb008
   DEFINE p_bmfb009            LIKE bmfb_t.bmfb009
   DEFINE p_bmfb010            LIKE bmfb_t.bmfb010
   DEFINE p_type1              LIKE type_t.chr1
   DEFINE p_type2              LIKE type_t.chr1 ]]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_action_choice='']]>
  </point>
  <point name="main.get_var" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   p_type,p_bmfbdocno,p_bmfa003,p_bmfb002,p_bmfb003,p_bmfb005,p_bmfb006,p_bmfb008,p_bmfb009,p_bmfb010,p_type1,p_type2]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_type = p_type
   LET g_bmfbdocno = p_bmfbdocno
   LET g_bmfa003 = p_bmfa003
   LET g_bmfb005 = p_bmfb005
   LET g_bmfb006 = p_bmfb006
   LET g_bmfb002 = p_bmfb002
   LET g_bmfb003 = p_bmfb003
   LET g_bmfb008 = p_bmfb008
   LET g_bmfb009 = p_bmfb009
   LET g_bmfb010 = p_bmfb010
   LET g_bmfb_m.bmfbdocno = g_bmfbdocno
   LET g_bmfb_m.bmfa003 = g_bmfa003
   LET g_bmfb_m.bmfb005 = g_bmfb005
   LET g_bmfb_m.bmfb006 = g_bmfb006
   LET g_bmfb_m.bmfb002 = g_bmfb002
   LET g_bmfb_m.bmfb003 = g_bmfb003
   LET g_bmfb_m.bmfb008 = g_bmfb008
   LET g_bmfb_m.bmfb009 = g_bmfb009
   LET g_bmfb_m.bmfb010 = g_bmfb010
   LET g_type1 = p_type1
   LET g_type2 = p_type2]]>
  </point>
  <point name="modify.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL abmt300_03_bmfb_show()]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("bmfbdocno,bmfb002",FALSE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmt300_03_bmfb_show()
            CALL abmt300_03_b_fill()
            IF g_type1 = 'N' THEN
               CALL cl_set_act_visible("insert,modify,delete",FALSE)
            ELSE
               CALL cl_set_act_visible("insert,modify,delete",TRUE)
            END IF
            IF g_type2 = 'Y' THEN
               CALL abmt300_03_insert()
            END IF
            CALL abmt300_03_b_fill()]]>
  </point>
  <point name="ui_dialog.page1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[]]>
  </point>
  <section id="abmt300_03.b_fill" ver="5" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION abmt300_03_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_bmfo_d.clear()    #g_bmfo_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF abmt300_03_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE bmfo003 ,t1.pmaal004 FROM bmfo_t",   
                  " INNER JOIN bmfb_t ON bmfbdocno = bmfodocno ",
                  " AND bmfb002 = bmfo002 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN pmaal_t t1 ON t1.pmaalent='"||g_enterprise||"' AND t1.pmaal001=bmfo003 AND t1.pmaal002='"||g_dlang||"' ",
 
                  " WHERE"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmfo_t.bmfo003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmt300_03_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR abmt300_03_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002
                                               
      FOREACH b_fill_cs INTO g_bmfo_d[l_ac].bmfo003,g_bmfo_d[l_ac].bmfo003_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_bmfo_d.deleteElement(g_bmfo_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abmt300_03_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION abmt300_03_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL abmt300_03_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.browser_fill" ver="5" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abmt300_03_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmfb_m.* TO NULL
   CALL g_bmfo_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "bmfbdocno,bmfb002"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE bmfbdocno,bmfb002 ",
                      " FROM bmfb_t ",
                      " ",
                      " LEFT JOIN bmfo_t ON bmfoent = bmfbent AND bmfosite = bmfbsite AND bmfbdocno = bmfodocno AND bmfb002 = bmfo002 ",
 
 
                      " ", 
                      " ", 
                      " WHERE bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND bmfoent = '" ||g_enterprise|| "' AND bmfosite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("bmfb_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE bmfbdocno,bmfb002 ",
                      " FROM bmfb_t ", 
                      "  ",
                      "  ",
                      " WHERE bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("bmfb_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照bmfbdocno,bmfb002 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT '',bmfbdocno,bmfb002 ",
               " FROM bmfb_t ",
               "  ",
               "  LEFT JOIN bmfo_t ON bmfoent = bmfbent AND bmfosite = bmfbsite AND bmfbdocno = bmfodocno AND bmfb002 = bmfo002 ",
 
 
               "  ",
               "  ",
               
               " WHERE bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("bmfb_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_bmfbdocno,g_browser[g_cnt].b_bmfb002 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.browser_search" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION abmt300_03_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY bmfbdocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL abmt300_03_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.construct" ver="5" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION abmt300_03_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmfb_m.* TO NULL
   CALL g_bmfo_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bmfbdocno,bmfb005,bmfb006,bmfb002,bmfb003,bmfa003,bmfb008,bmfb009,bmfb010 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         
            
         #一般欄位開窗相關處理    
                  #此段落由子樣板a01產生
         BEFORE FIELD bmfbdocno
            #add-point:BEFORE FIELD bmfbdocno
            {<point name="construct.b.bmfbdocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfbdocno
            
            #add-point:AFTER FIELD bmfbdocno
            {<point name="construct.a.bmfbdocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfbdocno
         ON ACTION controlp INFIELD bmfbdocno
            #add-point:ON ACTION controlp INFIELD bmfbdocno
            {<point name="construct.c.bmfbdocno" />}
            #END add-point
 
         #Ctrlp:construct.c.bmfb005
         ON ACTION controlp INFIELD bmfb005
            #add-point:ON ACTION controlp INFIELD bmfb005
            {<point name="construct.c.bmfb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb005
            #add-point:BEFORE FIELD bmfb005
            {<point name="construct.b.bmfb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb005
            
            #add-point:AFTER FIELD bmfb005
            {<point name="construct.a.bmfb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfb006
         ON ACTION controlp INFIELD bmfb006
            #add-point:ON ACTION controlp INFIELD bmfb006
            {<point name="construct.c.bmfb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb006
            #add-point:BEFORE FIELD bmfb006
            {<point name="construct.b.bmfb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb006
            
            #add-point:AFTER FIELD bmfb006
            {<point name="construct.a.bmfb006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb002
            #add-point:BEFORE FIELD bmfb002
            {<point name="construct.b.bmfb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb002
            
            #add-point:AFTER FIELD bmfb002
            {<point name="construct.a.bmfb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfb002
         ON ACTION controlp INFIELD bmfb002
            #add-point:ON ACTION controlp INFIELD bmfb002
            {<point name="construct.c.bmfb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb003
            #add-point:BEFORE FIELD bmfb003
            {<point name="construct.b.bmfb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb003
            
            #add-point:AFTER FIELD bmfb003
            {<point name="construct.a.bmfb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfb003
         ON ACTION controlp INFIELD bmfb003
            #add-point:ON ACTION controlp INFIELD bmfb003
            {<point name="construct.c.bmfb003" />}
            #END add-point
 
         #Ctrlp:construct.c.bmfa003
         ON ACTION controlp INFIELD bmfa003
            #add-point:ON ACTION controlp INFIELD bmfa003
            {<point name="construct.c.bmfa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfa003
            #add-point:BEFORE FIELD bmfa003
            {<point name="construct.b.bmfa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfa003
            
            #add-point:AFTER FIELD bmfa003
            {<point name="construct.a.bmfa003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb008
            #add-point:BEFORE FIELD bmfb008
            {<point name="construct.b.bmfb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb008
            
            #add-point:AFTER FIELD bmfb008
            {<point name="construct.a.bmfb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfb008
         ON ACTION controlp INFIELD bmfb008
            #add-point:ON ACTION controlp INFIELD bmfb008
            {<point name="construct.c.bmfb008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb009
            #add-point:BEFORE FIELD bmfb009
            {<point name="construct.b.bmfb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb009
            
            #add-point:AFTER FIELD bmfb009
            {<point name="construct.a.bmfb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfb009
         ON ACTION controlp INFIELD bmfb009
            #add-point:ON ACTION controlp INFIELD bmfb009
            {<point name="construct.c.bmfb009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb010
            #add-point:BEFORE FIELD bmfb010
            {<point name="construct.b.bmfb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb010
            
            #add-point:AFTER FIELD bmfb010
            {<point name="construct.a.bmfb010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfb010
         ON ACTION controlp INFIELD bmfb010
            #add-point:ON ACTION controlp INFIELD bmfb010
            {<point name="construct.c.bmfb010" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON bmfo003
           FROM s_detail1[1].bmfo003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.bmfo003
         ON ACTION controlp INFIELD bmfo003
            #add-point:ON ACTION controlp INFIELD bmfo003
            {<point name="construct.c.page1.bmfo003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfo003
            #add-point:BEFORE FIELD bmfo003
            {<point name="construct.b.page1.bmfo003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfo003
            
            #add-point:AFTER FIELD bmfo003
            {<point name="construct.a.page1.bmfo003" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.default_search" ver="4" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION abmt300_03_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bmfbdocno = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bmfb002 = '", g_argv[02], "' AND "
   END IF
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.delete" ver="7" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION abmt300_03_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_bmfb_m.bmfbdocno IS NULL
   OR g_bmfb_m.bmfb002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL abmt300_03_show()
   
   CALL s_transaction_begin()
 
   OPEN abmt300_03_cl USING g_enterprise, g_site,g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002
   IF STATUS THEN
      CALL cl_err("OPEN abmt300_03_cl:", STATUS, 1)
      CLOSE abmt300_03_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt300_03_master_referesh USING g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002 INTO g_bmfb_m.bmfbdocno, 
       g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,g_bmfb_m.bmfb002,g_bmfb_m.bmfb003,g_bmfb_m.bmfb008,g_bmfb_m.bmfb009, 
       g_bmfb_m.bmfb010,g_bmfb_m.bmfb008_desc,g_bmfb_m.bmfb009_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmfb_m.bmfbdocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL abmt300_03_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_bmfbdocno_t = g_bmfb_m.bmfbdocno
      LET g_bmfb002_t = g_bmfb_m.bmfb002
 
 
      DELETE FROM bmfb_t
       WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND bmfbdocno = g_bmfb_m.bmfbdocno
         AND bmfb002 = g_bmfb_m.bmfb002
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_bmfb_m.bmfbdocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM bmfo_t
       WHERE bmfoent = g_enterprise AND bmfosite = g_site AND bmfodocno = g_bmfb_m.bmfbdocno
         AND bmfo002 = g_bmfb_m.bmfb002
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmfo_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_bmfo_d.clear() 
 
     
      #CALL abmt300_03_ui_browser_refresh()  
      CALL abmt300_03_ui_headershow()  
      CALL abmt300_03_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL abmt300_03_browser_fill("")
         CALL abmt300_03_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL abmt300_03_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE abmt300_03_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_bmfb_m.bmfbdocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.delete_b" ver="2" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION abmt300_03_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM bmfo_t
       WHERE bmfoent = g_enterprise AND bmfosite = g_site AND
         bmfodocno = ps_keys_bak[1] AND bmfo002 = ps_keys_bak[2] AND bmfo003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.description" ver="10" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000117
#+ 
#+ Filename...: abmt300_03
#+ Description: ...
#+ Creator....: 02482(2013/08/27)
#+ Modifier...: 02482(2013/09/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="abmt300_03.detail_reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION abmt300_03_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bmfo_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abmt300_03_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE abmt300_03_detail AS ",
                "SELECT * FROM bmfo_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt300_03_detail SELECT * FROM bmfo_t 
                                         WHERE bmfoent = g_enterprise AND bmfosite = g_site AND bmfodocno = g_bmfbdocno_t
                                         AND bmfo002 = g_bmfb002_t
 
   
   #將key修正為調整後   
   UPDATE abmt300_03_detail 
      #更新key欄位
      SET bmfodocno = g_bmfb_m.bmfbdocno
          , bmfo002 = g_bmfb_m.bmfb002
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO bmfo_t SELECT * FROM abmt300_03_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt300_03_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bmfbdocno_t = g_bmfb_m.bmfbdocno
   LET g_bmfb002_t = g_bmfb_m.bmfb002
 
   
   DROP TABLE abmt300_03_detail
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.detail_show" ver="3" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION abmt300_03_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abmt300_03_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   CALL abmt300_03_browser_fill(p_flag)
   
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_pagestart = g_current_idx
   DISPLAY g_pagestart TO FORMONLY.b_index   #當下筆數
   DISPLAY g_pagestart TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_pagestart, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bmfb_m.bmfbdocno = g_browser[g_current_idx].b_bmfbdocno
   LET g_bmfb_m.bmfb002 = g_browser[g_current_idx].b_bmfb002
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE abmt300_03_master_referesh USING g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002 INTO g_bmfb_m.bmfbdocno, 
       g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,g_bmfb_m.bmfb002,g_bmfb_m.bmfb003,g_bmfb_m.bmfb008,g_bmfb_m.bmfb009, 
       g_bmfb_m.bmfb010,g_bmfb_m.bmfb008_desc,g_bmfb_m.bmfb009_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("bmfb_t",SQLCA.sqlcode,1)
      INITIALIZE g_bmfb_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL abmt300_03_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.fill_chk" ver="4" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION abmt300_03_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.filter" ver="1" status="" src="s">
    <![CDATA[PRIVATE FUNCTION abmt300_03_filter()
 
 
 
 
 
 
 
 
      
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
 
 
   
 
 
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION abmt300_03_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
 
 
 
 
]]>
  </section>
  <section id="abmt300_03.global" ver="3" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_bmfb_m        RECORD
       bmfbdocno LIKE bmfb_t.bmfbdocno, 
   bmfb005 LIKE bmfb_t.bmfb005, 
   bmfb006 LIKE bmfb_t.bmfb006, 
   bmfb002 LIKE bmfb_t.bmfb002, 
   bmfb005_desc LIKE type_t.chr500, 
   bmfb006_desc LIKE type_t.chr500, 
   bmfb003 LIKE bmfb_t.bmfb003, 
   bmfb005_desc1 LIKE type_t.chr500, 
   bmfb006_desc1 LIKE type_t.chr500, 
   bmfa003 LIKE bmfa_t.bmfa003, 
   bmfb008 LIKE bmfb_t.bmfb008, 
   bmfb008_desc LIKE type_t.chr80, 
   bmfa003_desc LIKE type_t.chr500, 
   bmfb009 LIKE bmfb_t.bmfb009, 
   bmfb009_desc LIKE type_t.chr80, 
   bmfa003_desc1 LIKE type_t.chr500, 
   bmfb010 LIKE bmfb_t.bmfb010
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bmfo_d        RECORD
       bmfo003 LIKE bmfo_t.bmfo003, 
   bmfo003_desc LIKE type_t.chr500
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_bmfb_m          type_g_bmfb_m
DEFINE g_bmfb_m_t        type_g_bmfb_m
 
   DEFINE g_bmfbdocno_t LIKE bmfb_t.bmfbdocno
DEFINE g_bmfb002_t LIKE bmfb_t.bmfb002
 
 
DEFINE g_bmfo_d          DYNAMIC ARRAY OF type_g_bmfo_d
DEFINE g_bmfo_d_t        type_g_bmfo_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmfbdocno LIKE bmfb_t.bmfbdocno,
      b_bmfb002 LIKE bmfb_t.bmfb002
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmfbdocno LIKE bmfb_t.bmfbdocno,
      b_bmfb002 LIKE bmfb_t.bmfb002
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="abmt300_03.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION abmt300_03_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmfo_d.getLength() THEN
         LET g_detail_idx = g_bmfo_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmfo_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmfo_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.init" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abmt300_03_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
   
      CALL cl_set_combo_scc('bmfb003','1109') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL abmt300_03_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION abmt300_03_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT bmfo003 FROM bmfo_t WHERE bmfoent=? AND bmfosite=? AND bmfodocno=? AND  
       bmfo002=? AND bmfo003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt300_03_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abmt300_03_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL abmt300_03_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_bmfb_m.bmfa003,g_bmfb_m.bmfb010
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="abmt300_03.input.body" ver="5" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmfo_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmfo_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt300_03_b_fill()
            LET g_rec_b = g_bmfo_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt300_03_cl USING g_enterprise, g_site,g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002
            IF STATUS THEN
               CALL cl_err("OPEN abmt300_03_cl:", STATUS, 1)
               CLOSE abmt300_03_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmfo_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmfo_d[l_ac].bmfo003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bmfo_d_t.* = g_bmfo_d[l_ac].*  #BACKUP
               CALL abmt300_03_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL abmt300_03_set_no_entry_b(l_cmd)
               IF NOT abmt300_03_lock_b("bmfo_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt300_03_bcl INTO g_bmfo_d[l_ac].bmfo003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_bmfo_d_t.bmfo003,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmt300_03_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmfo_d[l_ac].* TO NULL 
            
            LET g_bmfo_d_t.* = g_bmfo_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt300_03_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt300_03_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmfo_d[li_reproduce_target].* = g_bmfo_d[li_reproduce].*
 
               LET g_bmfo_d[li_reproduce_target].bmfo003 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmfo_t 
             WHERE bmfoent = g_enterprise AND bmfosite = g_site AND bmfodocno = g_bmfb_m.bmfbdocno
               AND bmfo002 = g_bmfb_m.bmfb002
 
               AND bmfo003 = g_bmfo_d[l_ac].bmfo003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmfb_m.bmfbdocno
               LET gs_keys[2] = g_bmfb_m.bmfb002
               LET gs_keys[3] = g_bmfo_d[g_detail_idx].bmfo003
               CALL abmt300_03_insert_b('bmfo_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmfo_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmfo_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt300_03_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmfo_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmfo_d.deleteElement(l_ac)
               NEXT FIELD bmfo003
            END IF
         
            IF g_bmfo_d[l_ac].bmfo003 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM bmfo_t
                WHERE bmfoent = g_enterprise AND bmfosite = g_site AND bmfodocno = g_bmfb_m.bmfbdocno AND
                                          bmfo002 = g_bmfb_m.bmfb002 AND
 
                      bmfo003 = g_bmfo_d_t.bmfo003
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmfo_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmt300_03_bcl
               LET l_count = g_bmfo_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmfb_m.bmfbdocno
               LET gs_keys[2] = g_bmfb_m.bmfb002
               LET gs_keys[3] = g_bmfo_d[g_detail_idx].bmfo003
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL abmt300_03_delete_b('bmfo_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD bmfo003
            
            #add-point:AFTER FIELD bmfo003
            {<point name="input.a.page1.bmfo003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfo003
            #add-point:BEFORE FIELD bmfo003
            {<point name="input.b.page1.bmfo003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmfo003
            #add-point:ON CHANGE bmfo003
            {<point name="input.g.page1.bmfo003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.bmfo003
         ON ACTION controlp INFIELD bmfo003
            #add-point:ON ACTION controlp INFIELD bmfo003
            {<point name="input.c.page1.bmfo003" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmfo_d[l_ac].* = g_bmfo_d_t.*
               CLOSE abmt300_03_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_bmfo_d[l_ac].bmfo003,-263,1)
               LET g_bmfo_d[l_ac].* = g_bmfo_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE bmfo_t SET (bmfodocno,bmfo002,bmfo003) = (g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002, 
                   g_bmfo_d[l_ac].bmfo003)
                WHERE bmfoent = g_enterprise AND bmfosite = g_site AND bmfodocno = g_bmfb_m.bmfbdocno 
                  AND bmfo002 = g_bmfb_m.bmfb002 
 
                  AND bmfo003 = g_bmfo_d_t.bmfo003 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmfo_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmfo_d[l_ac].* = g_bmfo_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmfo_t",SQLCA.sqlcode,1)
                     LET g_bmfo_d[l_ac].* = g_bmfo_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmfb_m.bmfbdocno
               LET gs_keys_bak[1] = g_bmfbdocno_t
               LET gs_keys[2] = g_bmfb_m.bmfb002
               LET gs_keys_bak[2] = g_bmfb002_t
               LET gs_keys[3] = g_bmfo_d[g_detail_idx].bmfo003
               LET gs_keys_bak[3] = g_bmfo_d_t.bmfo003
               CALL abmt300_03_update_b('bmfo_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_bmfb_m),util.JSON.stringify(g_bmfo_d_t)
               LET g_log2 = util.JSON.stringify(g_bmfb_m),util.JSON.stringify(g_bmfo_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL abmt300_03_unlock_b("bmfo_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_bmfo_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmfo_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="abmt300_03.input.head" ver="5" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_bmfb_m.bmfa003,g_bmfb_m.bmfb010 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD bmfa003
            #add-point:BEFORE FIELD bmfa003
            {<point name="input.b.bmfa003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfa003
            
            #add-point:AFTER FIELD bmfa003
            {<point name="input.a.bmfa003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmfa003
            #add-point:ON CHANGE bmfa003
            {<point name="input.g.bmfa003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmfb010
            #add-point:BEFORE FIELD bmfb010
            {<point name="input.b.bmfb010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmfb010
            
            #add-point:AFTER FIELD bmfb010
            {<point name="input.a.bmfb010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmfb010
            #add-point:ON CHANGE bmfb010
            {<point name="input.g.bmfb010" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.bmfa003
         ON ACTION controlp INFIELD bmfa003
            #add-point:ON ACTION controlp INFIELD bmfa003
            {<point name="input.c.bmfa003" />}
            #END add-point
 
         #Ctrlp:input.c.bmfb010
         ON ACTION controlp INFIELD bmfb010
            #add-point:ON ACTION controlp INFIELD bmfb010
            {<point name="input.c.bmfb010" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO bmfb_t (bmfbent, bmfbsite,bmfbdocno,bmfb005,bmfb006,bmfb002,bmfb003,bmfb008, 
                   bmfb009,bmfb010)
               VALUES (g_enterprise, g_site,g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,g_bmfb_m.bmfb002, 
                   g_bmfb_m.bmfb003,g_bmfb_m.bmfb008,g_bmfb_m.bmfb009,g_bmfb_m.bmfb010) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_bmfb_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abmt300_03_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE bmfb_t SET (bmfbdocno,bmfb005,bmfb006,bmfb002,bmfb003,bmfb008,bmfb009,bmfb010) = (g_bmfb_m.bmfbdocno, 
                   g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,g_bmfb_m.bmfb002,g_bmfb_m.bmfb003,g_bmfb_m.bmfb008, 
                   g_bmfb_m.bmfb009,g_bmfb_m.bmfb010)
                WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND bmfbdocno = g_bmfbdocno_t
                  AND bmfb002 = g_bmfb002_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmfb_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               LET g_log1 = util.JSON.stringify(g_bmfb_m_t)
               LET g_log2 = util.JSON.stringify(g_bmfb_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_bmfbdocno_t = g_bmfb_m.bmfbdocno
            LET g_bmfb002_t = g_bmfb_m.bmfb002
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="abmt300_03.input.other" ver="3" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD bmfbdocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bmfo003
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.insert" ver="4" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION abmt300_03_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_bmfo_d.clear()   
 
 
   INITIALIZE g_bmfb_m.* LIKE bmfb_t.*             #DEFAULT 設定
   
   LET g_bmfbdocno_t = NULL
   LET g_bmfb002_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL abmt300_03_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmfb_m.* = g_bmfb_m_t.*
         CALL abmt300_03_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_bmfo_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_bmfbdocno_t = g_bmfb_m.bmfbdocno
   LET g_bmfb002_t = g_bmfb_m.bmfb002
 
   
   LET g_wc = g_wc,  
              " OR ( bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND",
              " bmfbdocno = '", g_bmfb_m.bmfbdocno CLIPPED, "' "
              ," AND bmfb002 = '", g_bmfb_m.bmfb002 CLIPPED, "' "
 
              , ") "
   
   CLOSE abmt300_03_cl
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.insert_b" ver="2" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION abmt300_03_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO bmfo_t
                  (bmfoent, bmfosite,
                   bmfodocno,bmfo002,
                   bmfo003
                   ) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmfo_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.lock_b" ver="3" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION abmt300_03_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL abmt300_03_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bmfo_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN abmt300_03_bcl USING g_enterprise, g_site,
                                       g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002,g_bmfo_d[g_detail_idx].bmfo003  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("abmt300_03_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.main" ver="3" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a27產生
#+ 資料輸入
PUBLIC FUNCTION abmt300_03(--)
   #add-point:main段變數傳入
   {<point name="main.get_var"/>}
   #end add-point
   )
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" mark="Y"/>}
   #end add-point
   LET g_forupd_sql = "SELECT bmfbdocno,bmfb005,bmfb006,bmfb002,'','',bmfb003,'','','',bmfb008,'','', 
       bmfb009,'','',bmfb010 FROM bmfb_t WHERE bmfbent= ? AND bmfbsite= ? AND bmfbdocno=? AND bmfb002=?  
       FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)   #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt300_03_cl CURSOR FROM g_forupd_sql     # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE bmfbdocno,bmfb005,bmfb006,bmfb002,bmfb003,bmfb008,bmfb009,bmfb010",
               " FROM bmfb_t",
               " WHERE bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND bmfbdocno = ? AND bmfb002 = ?"
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE abmt300_03_master_referesh FROM g_sql
   
 
 
   
   #畫面開啟 (identifier)
   OPEN WINDOW w_abmt300_03 WITH FORM cl_ap_formpath("abm","abmt300_03")
   
   #瀏覽頁簽資料初始化
   CALL cl_ui_init()
   
   #程式初始化
   CALL abmt300_03_init()   
 
   #進入選單 Menu (="N")
   CALL abmt300_03_ui_dialog() 
 
   #畫面關閉
   CLOSE WINDOW w_abmt300_03
 
   CLOSE abmt300_03_cl
   
   
 
   #add-point:離開前
   {<point name="main.exit" />}
   #end add-point
 
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt300_03.modify" ver="7" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION abmt300_03_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_bmfb_m.bmfbdocno IS NULL
   OR g_bmfb_m.bmfb002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_bmfbdocno_t = g_bmfb_m.bmfbdocno
   LET g_bmfb002_t = g_bmfb_m.bmfb002
 
   CALL s_transaction_begin()
   
   OPEN abmt300_03_cl USING g_enterprise, g_site,g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002
   IF STATUS THEN
      CALL cl_err("OPEN abmt300_03_cl:", STATUS, 1)
      CLOSE abmt300_03_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt300_03_master_referesh USING g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002 INTO g_bmfb_m.bmfbdocno, 
       g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,g_bmfb_m.bmfb002,g_bmfb_m.bmfb003,g_bmfb_m.bmfb008,g_bmfb_m.bmfb009, 
       g_bmfb_m.bmfb010,g_bmfb_m.bmfb008_desc,g_bmfb_m.bmfb009_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmfb_m.bmfbdocno,SQLCA.sqlcode,0)
      CLOSE abmt300_03_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL abmt300_03_show()
   WHILE TRUE
      LET g_bmfbdocno_t = g_bmfb_m.bmfbdocno
      LET g_bmfb002_t = g_bmfb_m.bmfb002
 
      
      #寫入修改者/修改日期資訊(單頭)
      
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL abmt300_03_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmfb_m.* = g_bmfb_m_t.*
         CALL abmt300_03_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
 
                  
      #若單頭key欄位有變更
      IF g_bmfb_m.bmfbdocno != g_bmfbdocno_t 
      OR g_bmfb_m.bmfb002 != g_bmfb002_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE bmfo_t SET bmfodocno = g_bmfb_m.bmfbdocno
                                       ,bmfo002 = g_bmfb_m.bmfb002
 
          WHERE bmfoent = g_enterprise AND bmfosite = g_site AND bmfodocno = g_bmfbdocno_t
            AND bmfo002 = g_bmfb002_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmfo_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmfo_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_bmfb_m.bmfbdocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE abmt300_03_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_bmfb_m.bmfbdocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="abmt300_03.other_dialog" ver="2" status="" src="s">
    <![CDATA[   {<point name="other.dialog"/>}
]]>
  </section>
  <section id="abmt300_03.other_function" ver="2" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="abmt300_03.query" ver="3" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abmt300_03_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bmfo_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL abmt300_03_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL abmt300_03_browser_fill("")
      CALL abmt300_03_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
   CALL abmt300_03_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL abmt300_03_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.reproduce" ver="5" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION abmt300_03_reproduce()
   DEFINE l_newno     LIKE bmfb_t.bmfbdocno 
   DEFINE l_oldno     LIKE bmfb_t.bmfbdocno 
   DEFINE l_newno02     LIKE bmfb_t.bmfb002 
   DEFINE l_oldno02     LIKE bmfb_t.bmfb002 
 
   DEFINE l_master    RECORD LIKE bmfb_t.*
   DEFINE l_detail    RECORD LIKE bmfo_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   
   IF g_bmfb_m.bmfbdocno IS NULL
   OR g_bmfb_m.bmfb002 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_bmfbdocno_t = g_bmfb_m.bmfbdocno
   LET g_bmfb002_t = g_bmfb_m.bmfb002
 
    
   LET g_bmfb_m.bmfbdocno = ""
   LET g_bmfb_m.bmfb002 = ""
 
    
   CALL abmt300_03_set_entry('a')
   CALL abmt300_03_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL abmt300_03_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " bmfbdocno = '", g_bmfb_m.bmfbdocno CLIPPED, "' "
              ," AND bmfb002 = '", g_bmfb_m.bmfb002 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.set_entry" ver="2" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION abmt300_03_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmfbdocno,bmfb002",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.set_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION abmt300_03_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.set_no_entry" ver="3" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION abmt300_03_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("bmfbdocno,bmfb002",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.set_no_entry_b" ver="2" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION abmt300_03_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION abmt300_03_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmfb_m.bmfbdocno
   LET g_pk_array[1].column = 'bmfbdocno'
   LET g_pk_array[2].values = g_bmfb_m.bmfb002
   LET g_pk_array[2].column = 'bmfb002'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt300_03.show" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abmt300_03_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_bmfb_m_t.* = g_bmfb_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL abmt300_03_b_fill() #單身填充
      CALL abmt300_03_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL abmt300_03_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,g_bmfb_m.bmfb002,g_bmfb_m.bmfb005_desc, 
       g_bmfb_m.bmfb006_desc,g_bmfb_m.bmfb003,g_bmfb_m.bmfb005_desc1,g_bmfb_m.bmfb006_desc1,g_bmfb_m.bmfa003, 
       g_bmfb_m.bmfb008,g_bmfb_m.bmfb008_desc,g_bmfb_m.bmfa003_desc,g_bmfb_m.bmfb009,g_bmfb_m.bmfb009_desc, 
       g_bmfb_m.bmfa003_desc1,g_bmfb_m.bmfb010
   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmfo_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL abmt300_03_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="abmt300_03.state_change" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="abmt300_03.ui_browser_refresh" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abmt300_03_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmfbdocno = g_bmfb_m.bmfbdocno 
         AND g_browser[l_i].b_bmfb002 = g_bmfb_m.bmfb002 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION abmt300_03_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.ui_dialog" ver="6" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION abmt300_03_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL abmt300_03_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL abmt300_03_browser_fill("")
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_bmfbdocno = g_bmfbdocno_t
               AND g_browser[li_idx].b_bmfb002 = g_bmfb002_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
 
 
               
      
         
        
         DISPLAY ARRAY g_bmfo_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL abmt300_03_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL abmt300_03_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmt300_03_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abmt300_03_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL abmt300_03_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL abmt300_03_browser_fill("F")   #browser_fill()會將notice區塊清空
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL abmt300_03_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL abmt300_03_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
          
         
         
         ON ACTION first
            CALL abmt300_03_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt300_03_idx_chk()
            
         ON ACTION previous
            CALL abmt300_03_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt300_03_idx_chk()
            
         ON ACTION jump
            CALL abmt300_03_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt300_03_idx_chk()
            
         ON ACTION next
            CALL abmt300_03_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt300_03_idx_chk()
            
         ON ACTION last
            CALL abmt300_03_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt300_03_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abmt300_03_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abmt300_03_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmt300_03_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL abmt300_03_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abmt300_03_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abmt300_03_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.ui_headershow" ver="4" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION abmt300_03_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_bmfb_m.bmfbdocno = g_browser[g_current_idx].b_bmfbdocno   
   LET g_bmfb_m.bmfb002 = g_browser[g_current_idx].b_bmfb002   
 
   EXECUTE abmt300_03_master_referesh USING g_bmfb_m.bmfbdocno,g_bmfb_m.bmfb002 INTO g_bmfb_m.bmfbdocno, 
       g_bmfb_m.bmfb005,g_bmfb_m.bmfb006,g_bmfb_m.bmfb002,g_bmfb_m.bmfb003,g_bmfb_m.bmfb008,g_bmfb_m.bmfb009, 
       g_bmfb_m.bmfb010,g_bmfb_m.bmfb008_desc,g_bmfb_m.bmfb009_desc
   CALL abmt300_03_show()
   
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.unlock_b" ver="2" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abmt300_03_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt300_03_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="abmt300_03.update_b" ver="2" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION abmt300_03_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmfo_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE bmfo_t 
         SET (bmfodocno,bmfo002,
              bmfo003
              ) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ) 
         WHERE bmfoent = g_enterprise AND bmfosite = g_site AND bmfodocno = ps_keys_bak[1] AND bmfo002 = ps_keys_bak[2] AND bmfo003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmfo_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmfo_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
