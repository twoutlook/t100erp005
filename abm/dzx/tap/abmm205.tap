<add_points prog="abmm205" std_prog="abmm205" erpver="1.0" module="ABM" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="construct.c.bmga001" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmga001  #顯示到畫面上
            DISPLAY g_qryparam.return2 TO bmga002 #目前版本 

            NEXT FIELD bmga001                     #返回原欄位

]]>
</point>
  <point name="construct.c.bmgacnfid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgacnfid  #顯示到畫面上

            NEXT FIELD bmgacnfid                     #返回原欄位

]]>
</point>
  <point name="construct.c.bmgacrtdp" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgacrtdp  #顯示到畫面上

            NEXT FIELD bmgacrtdp                     #返回原欄位

]]>
</point>
  <point name="construct.c.bmgacrtid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgacrtid  #顯示到畫面上

            NEXT FIELD bmgacrtid                     #返回原欄位

]]>
</point>
  <point name="construct.c.bmgamodid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgamodid  #顯示到畫面上

            NEXT FIELD bmgamodid                     #返回原欄位

]]>
</point>
  <point name="construct.c.bmgaowndp" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgaowndp  #顯示到畫面上

            NEXT FIELD bmgaowndp                     #返回原欄位

]]>
</point>
  <point name="construct.c.bmgaownid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgaownid  #顯示到畫面上

            NEXT FIELD bmgaownid                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.bmgb004" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_bmga_m.bmga001
            LET g_qryparam.arg2 = g_bmga_m.bmga002
            CALL q_bmba001()                           #呼叫開窗
            LET g_bmgb_d[l_ac].bmgb004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_bmgb_d[l_ac].bmgb005 = g_qryparam.return2 #元件料號
            LET g_bmgb_d[l_ac].bmgb006 = g_qryparam.return3 #部位編號
            LET g_bmgb_d[l_ac].bmgb007 = g_qryparam.return4 #作業編號
            LET g_bmgb_d[l_ac].bmgb008 = g_qryparam.return5 #製程段號
            CALL abmm205_bmgb_desc()
            DISPLAY BY NAME g_bmgb_d[l_ac].*             
            NEXT FIELD bmgb004                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.bmgb005" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_bmba003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgb005  #顯示到畫面上

            NEXT FIELD bmgb005                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.bmgb006" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgb006  #顯示到畫面上

            NEXT FIELD bmgb006                     #返回原欄位

]]>
</point>
  <point name="construct.c.page1.bmgb007" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgb007  #顯示到畫面上

            NEXT FIELD bmgb007                     #返回原欄位

]]>
</point>
  <point name="input.a.bmga001" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            LET r_errno = ''
            CALL abmm205_bmga_desc()
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t  OR g_bmga_m.bmga002 != g_bmga002_t  OR g_bmga_m.bmga003 != g_bmga003_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmga_t WHERE "||"bmgaent = '" ||g_enterprise|| "' AND "||"bmgasite = '"||g_site || "' AND "||"bmga001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmga002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmga003 = '"||g_bmga_m.bmga003 ||"'",'std-00004',1) THEN 
                     LET g_bmga_m.bmga001 = g_bmga001_t
                     CALL abmm205_bmga_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmga_m.bmga001) THEN
               CALL abmm205_bmga_chk() RETURNING r_errno     
               IF NOT cl_null(r_errno) THEN 
                  CALL cl_err(g_bmga_m.bmga001,r_errno,1)
                  LET g_bmga_m.bmga001 = g_bmga001_t
                  CALL abmm205_bmga_desc()
                  NEXT FIELD bmga001
               END IF 
            END IF 
            IF cl_null(g_bmga_m.bmga002) THEN 
               LET g_bmga_m.bmga002 = ' '
            END IF            ]]>
</point>
  <point name="input.a.bmga002" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF cl_null(g_bmga_m.bmga002) THEN 
               LET g_bmga_m.bmga002 = ' '
            END IF   
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t  OR g_bmga_m.bmga002 != g_bmga002_t  OR g_bmga_m.bmga003 != g_bmga003_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmga_t WHERE "||"bmgaent = '" ||g_enterprise|| "' AND "||"bmgasite = '"||g_site || "' AND "||"bmga001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmga002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmga003 = '"||g_bmga_m.bmga003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
           CALL abmm205_bmga_chk() RETURNING r_errno     
           IF NOT cl_null(r_errno) THEN 
              CALL cl_err(g_bmga_m.bmga002,r_errno,1)
              LET g_bmga_m.bmga002 = g_bmga002_t
              NEXT FIELD bmga002
           END IF

]]>
</point>
  <point name="input.a.bmga003" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t  OR g_bmga_m.bmga002 != g_bmga002_t  OR g_bmga_m.bmga003 != g_bmga003_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmga_t WHERE "||"bmgaent = '" ||g_enterprise|| "' AND "||"bmgasite = '"||g_site || "' AND "||"bmga001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmga002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmga003 = '"||g_bmga_m.bmga003 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
</point>
  <point name="input.a.bmgacnfid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgacnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgacnfid_desc
]]>
</point>
  <point name="input.a.bmgacrtdp" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgacrtdp_desc
]]>
</point>
  <point name="input.a.bmgacrtid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgacrtid_desc
]]>
</point>
  <point name="input.a.bmgamodid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgamodid_desc
]]>
</point>
  <point name="input.a.bmgaowndp" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgaowndp_desc
]]>
</point>
  <point name="input.a.bmgaownid" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgaownid_desc
]]>
</point>
  <point name="input.a.page1.bmgb004" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL abmm205_bmgb_desc()
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb_d[l_ac].bmgb004) AND NOT cl_null(g_bmgb_d[l_ac].bmgb005) AND g_bmgb_d[l_ac].bmgb006 IS NOT NULL AND g_bmgb_d[l_ac].bmgb007 IS NOT NULL AND g_bmgb_d[l_ac].bmgb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb_d[l_ac].bmgb004 != g_bmgb_d_t.bmgb004 OR g_bmgb_d[l_ac].bmgb005 != g_bmgb_d_t.bmgb005 OR g_bmgb_d[l_ac].bmgb006 != g_bmgb_d_t.bmgb006 OR g_bmgb_d[l_ac].bmgb007 != g_bmgb_d_t.bmgb007 OR g_bmgb_d[l_ac].bmgb008 != g_bmgb_d_t.bmgb008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb_d[l_ac].bmgb004 ||"' AND "|| "bmgb005 = '"||g_bmgb_d[l_ac].bmgb005 ||"' AND "|| "bmgb006 = '"||g_bmgb_d[l_ac].bmgb006 ||"' AND "|| "bmgb007 = '"||g_bmgb_d[l_ac].bmgb007 ||"' AND "|| "bmgb008 = '"||g_bmgb_d[l_ac].bmgb008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb_d[l_ac].bmgb004 = g_bmgb_d_t.bmgb004
                     CALL abmm205_bmgb_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmgb_d[l_ac].bmgb004) THEN
               IF cl_null(g_bmgb_d[l_ac].bmgb006) THEN
                  LET g_bmgb_d[l_ac].bmgb006 = ' '
               END IF
               IF cl_null(g_bmgb_d[l_ac].bmgb007) THEN
                  LET g_bmgb_d[l_ac].bmgb007 = ' '
               END IF
               IF cl_null(g_bmgb_d[l_ac].bmgb008) THEN
                  LET g_bmgb_d[l_ac].bmgb008 = ' '
               END IF            
               CALL abmm205_bmgb_chk() RETURNING r_errno
               IF NOT cl_null(r_errno) THEN 
                  CALL cl_err(g_bmgb_d[l_ac].bmgb004,r_errno,1)
                  LET g_bmgb_d[l_ac].bmgb004 = g_bmgb_d_t.bmgb004
                  CALL abmm205_bmgb_desc()
                  NEXT FIELD CURRENT
               END IF   
            END IF               
            ]]>
</point>
  <point name="input.a.page1.bmgb005" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL abmm205_bmgb_desc()
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb_d[l_ac].bmgb004) AND NOT cl_null(g_bmgb_d[l_ac].bmgb005) AND g_bmgb_d[l_ac].bmgb006 IS NOT NULL AND g_bmgb_d[l_ac].bmgb007 IS NOT NULL AND NOT g_bmgb_d[l_ac].bmgb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb_d[l_ac].bmgb004 != g_bmgb_d_t.bmgb004 OR g_bmgb_d[l_ac].bmgb005 != g_bmgb_d_t.bmgb005 OR g_bmgb_d[l_ac].bmgb006 != g_bmgb_d_t.bmgb006 OR g_bmgb_d[l_ac].bmgb007 != g_bmgb_d_t.bmgb007 OR g_bmgb_d[l_ac].bmgb008 != g_bmgb_d_t.bmgb008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb_d[l_ac].bmgb004 ||"' AND "|| "bmgb005 = '"||g_bmgb_d[l_ac].bmgb005 ||"' AND "|| "bmgb006 = '"||g_bmgb_d[l_ac].bmgb006 ||"' AND "|| "bmgb007 = '"||g_bmgb_d[l_ac].bmgb007 ||"' AND "|| "bmgb008 = '"||g_bmgb_d[l_ac].bmgb008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb_d[l_ac].bmgb005 = g_bmgb_d_t.bmgb005
                     CALL abmm205_bmgb_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmgb_d[l_ac].bmgb005) THEN
               IF cl_null(g_bmgb_d[l_ac].bmgb006) THEN
                  LET g_bmgb_d[l_ac].bmgb006 = ' '
               END IF
               IF cl_null(g_bmgb_d[l_ac].bmgb007) THEN
                  LET g_bmgb_d[l_ac].bmgb007 = ' '
               END IF
               IF cl_null(g_bmgb_d[l_ac].bmgb008) THEN
                  LET g_bmgb_d[l_ac].bmgb008 = ' '
               END IF            
               CALL abmm205_bmgb_chk() RETURNING r_errno
               IF NOT cl_null(r_errno) THEN 
                  CALL cl_err(g_bmgb_d[l_ac].bmgb005,r_errno,1)
                  LET g_bmgb_d[l_ac].bmgb005 = g_bmgb_d_t.bmgb005
                  CALL abmm205_bmgb_desc()
                  NEXT FIELD CURRENT
               END IF 
            END IF]]>
</point>
  <point name="input.a.page1.bmgb006" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL abmm205_bmgb_desc()
            IF cl_null(g_bmgb_d[l_ac].bmgb006) THEN
               LET g_bmgb_d[l_ac].bmgb006 = ' '
            END IF             
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb_d[l_ac].bmgb004) AND NOT cl_null(g_bmgb_d[l_ac].bmgb005) AND g_bmgb_d[l_ac].bmgb006 IS NOT NULL AND g_bmgb_d[l_ac].bmgb007 IS NOT NULL AND g_bmgb_d[l_ac].bmgb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb_d[l_ac].bmgb004 != g_bmgb_d_t.bmgb004 OR g_bmgb_d[l_ac].bmgb005 != g_bmgb_d_t.bmgb005 OR g_bmgb_d[l_ac].bmgb006 != g_bmgb_d_t.bmgb006 OR g_bmgb_d[l_ac].bmgb007 != g_bmgb_d_t.bmgb007 OR g_bmgb_d[l_ac].bmgb008 != g_bmgb_d_t.bmgb008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb_d[l_ac].bmgb004 ||"' AND "|| "bmgb005 = '"||g_bmgb_d[l_ac].bmgb005 ||"' AND "|| "bmgb006 = '"||g_bmgb_d[l_ac].bmgb006 ||"' AND "|| "bmgb007 = '"||g_bmgb_d[l_ac].bmgb007 ||"' AND "|| "bmgb008 = '"||g_bmgb_d[l_ac].bmgb008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb_d[l_ac].bmgb006 = g_bmgb_d_t.bmgb006
                     CALL abmm205_bmgb_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF g_bmgb_d[l_ac].bmgb006 IS NOT NULL THEN
               CALL abmm205_bmgb_chk() RETURNING r_errno
               IF NOT cl_null(r_errno) THEN 
                  CALL cl_err(g_bmgb_d[l_ac].bmgb006,r_errno,1)
                  LET g_bmgb_d[l_ac].bmgb006 = g_bmgb_d_t.bmgb006
                  CALL abmm205_bmgb_desc()
                  NEXT FIELD CURRENT
               END IF            
               CALL abmm205_acc_chk('215',g_bmgb_d[l_ac].bmgb006) RETURNING r_errno
               IF NOT cl_null(r_errno) THEN
                  CALL cl_err_msg(g_bmgb_d[l_ac].bmgb006,r_errno,'215',1)
                  LET g_bmgb_d[l_ac].bmgb006 = g_bmgb_d_t.bmgb006
                  CALL abmm205_bmgb_desc()
                  NEXT FIELD CURRENT
               END IF 
            END IF  ]]>
</point>
  <point name="input.a.page1.bmgb007" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            CALL abmm205_bmgb_desc()
            IF cl_null(g_bmgb_d[l_ac].bmgb007) THEN
               LET g_bmgb_d[l_ac].bmgb007 = ' '
            END IF
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb_d[l_ac].bmgb004) AND NOT cl_null(g_bmgb_d[l_ac].bmgb005) AND g_bmgb_d[l_ac].bmgb006 IS NOT NULL AND g_bmgb_d[l_ac].bmgb007 IS NOT NULL AND g_bmgb_d[l_ac].bmgb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb_d[l_ac].bmgb004 != g_bmgb_d_t.bmgb004 OR g_bmgb_d[l_ac].bmgb005 != g_bmgb_d_t.bmgb005 OR g_bmgb_d[l_ac].bmgb006 != g_bmgb_d_t.bmgb006 OR g_bmgb_d[l_ac].bmgb007 != g_bmgb_d_t.bmgb007 OR g_bmgb_d[l_ac].bmgb008 != g_bmgb_d_t.bmgb008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb_d[l_ac].bmgb004 ||"' AND "|| "bmgb005 = '"||g_bmgb_d[l_ac].bmgb005 ||"' AND "|| "bmgb006 = '"||g_bmgb_d[l_ac].bmgb006 ||"' AND "|| "bmgb007 = '"||g_bmgb_d[l_ac].bmgb007 ||"' AND "|| "bmgb008 = '"||g_bmgb_d[l_ac].bmgb008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb_d[l_ac].bmgb007 = g_bmgb_d_t.bmgb007
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF g_bmgb_d[l_ac].bmgb007 IS NOT NULL THEN
               CALL abmm205_bmgb_chk() RETURNING r_errno
               IF NOT cl_null(r_errno) THEN 
                  CALL cl_err(g_bmgb_d[l_ac].bmgb007,r_errno,1)
                  LET g_bmgb_d[l_ac].bmgb007 = g_bmgb_d_t.bmgb007
                  CALL abmm205_bmgb_desc()
                  NEXT FIELD CURRENT
               END IF            
               CALL abmm205_acc_chk('221',g_bmgb_d[l_ac].bmgb007) RETURNING r_errno
               IF NOT cl_null(r_errno) THEN
                  CALL cl_err_msg(g_bmgb_d[l_ac].bmgb007,r_errno,'221',1)
                  LET g_bmgb_d[l_ac].bmgb007 = g_bmgb_d_t.bmgb007
                  CALL abmm205_bmgb_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF     ]]>
</point>
  <point name="input.a.page1.bmgb008" cite_std="N" status="u" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF cl_null(g_bmgb_d[l_ac].bmgb008) THEN
               LET g_bmgb_d[l_ac].bmgb008 = ' '
            END IF             
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb_d[l_ac].bmgb004) AND NOT cl_null(g_bmgb_d[l_ac].bmgb005) AND g_bmgb_d[l_ac].bmgb006 IS NOT NULL AND g_bmgb_d[l_ac].bmgb007 IS NOT NULL AND g_bmgb_d[l_ac].bmgb008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb_d[l_ac].bmgb004 != g_bmgb_d_t.bmgb004 OR g_bmgb_d[l_ac].bmgb005 != g_bmgb_d_t.bmgb005 OR g_bmgb_d[l_ac].bmgb006 != g_bmgb_d_t.bmgb006 OR g_bmgb_d[l_ac].bmgb007 != g_bmgb_d_t.bmgb007 OR g_bmgb_d[l_ac].bmgb008 != g_bmgb_d_t.bmgb008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb_d[l_ac].bmgb004 ||"' AND "|| "bmgb005 = '"||g_bmgb_d[l_ac].bmgb005 ||"' AND "|| "bmgb006 = '"||g_bmgb_d[l_ac].bmgb006 ||"' AND "|| "bmgb007 = '"||g_bmgb_d[l_ac].bmgb007 ||"' AND "|| "bmgb008 = '"||g_bmgb_d[l_ac].bmgb008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb_d[l_ac].bmgb008 = g_bmgb_d_t.bmgb008
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF g_bmgb_d[l_ac].bmgb008 IS NOT NULL THEN
               CALL abmm205_bmgb_chk() RETURNING r_errno
               IF NOT cl_null(r_errno) THEN 
                  CALL cl_err(g_bmgb_d[l_ac].bmgb008,r_errno,1)
                  LET g_bmgb_d[l_ac].bmgb008 = g_bmgb_d_t.bmgb008
                  NEXT FIELD CURRENT
               END IF  
            END IF]]>
</point>
  <point name="input.c.bmga001" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmga_m.bmga001             #給予default值
            #LET g_qryparam.default2 = " " #g_bmga_m.imaa002 #目前版本
            LET g_qryparam.default2 = g_bmga_m.bmga002 #目前版本
            #給予arg

            CALL q_bmaa001_1()                                #呼叫開窗

            LET g_bmga_m.bmga001 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_bmga_m.bmga002 = g_qryparam.return2 #目前版本
            
            DISPLAY g_bmga_m.bmga001 TO bmga001              #顯示到畫面上
            DISPLAY g_bmga_m.bmga002 TO bmga002 #目前版本

            NEXT FIELD bmga001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.bmgb004" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb_d[l_ac].bmgb004             #給予default值
            LET g_qryparam.default2 = g_bmgb_d[l_ac].bmgb005 #元件料號
            LET g_qryparam.default3 = g_bmgb_d[l_ac].bmgb006 #部位編號
            LET g_qryparam.default4 = g_bmgb_d[l_ac].bmgb007 #作業編號
            LET g_qryparam.default5 = g_bmgb_d[l_ac].bmgb008 #製程段號
            

            #給予arg
            LET g_qryparam.arg1 = g_bmga_m.bmga001
            LET g_qryparam.arg2 = g_bmga_m.bmga002
            LET g_qryparam.arg3 = g_bmga_m.bmga004
            CALL q_bmba001_2()                                #呼叫開窗

            LET g_bmgb_d[l_ac].bmgb004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_bmgb_d[l_ac].bmgb005 = g_qryparam.return2 #元件料號
            LET g_bmgb_d[l_ac].bmgb006 = g_qryparam.return3 #部位編號
            LET g_bmgb_d[l_ac].bmgb007 = g_qryparam.return4 #作業編號
            LET g_bmgb_d[l_ac].bmgb008 = g_qryparam.return5 #製程段號
            CALL abmm205_bmgb_desc()
            DISPLAY BY NAME g_bmgb_d[l_ac].*             
            NEXT FIELD bmgb004                          #返回原欄位]]>
</point>
  <point name="input.c.page1.bmgb005" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb_d[l_ac].bmgb004             #給予default值
            LET g_qryparam.default2 = g_bmgb_d[l_ac].bmgb005 #元件料號
            LET g_qryparam.default3 = g_bmgb_d[l_ac].bmgb006 #部位編號
            LET g_qryparam.default4 = g_bmgb_d[l_ac].bmgb007 #作業編號
            LET g_qryparam.default5 = g_bmgb_d[l_ac].bmgb008 #製程段號
            

            #給予arg
            LET g_qryparam.arg1 = g_bmga_m.bmga001
            LET g_qryparam.arg2 = g_bmga_m.bmga002
            LET g_qryparam.arg3 = g_bmga_m.bmga004
            CALL q_bmba001_2()                                #呼叫開窗

            LET g_bmgb_d[l_ac].bmgb004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_bmgb_d[l_ac].bmgb005 = g_qryparam.return2 #元件料號
            LET g_bmgb_d[l_ac].bmgb006 = g_qryparam.return3 #部位編號
            LET g_bmgb_d[l_ac].bmgb007 = g_qryparam.return4 #作業編號
            LET g_bmgb_d[l_ac].bmgb008 = g_qryparam.return5 #製程段號
            CALL abmm205_bmgb_desc()
            DISPLAY BY NAME g_bmgb_d[l_ac].*             
            NEXT FIELD bmgb004 ]]>
</point>
  <point name="input.c.page1.bmgb006" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb_d[l_ac].bmgb004             #給予default值
            LET g_qryparam.default2 = g_bmgb_d[l_ac].bmgb005 #元件料號
            LET g_qryparam.default3 = g_bmgb_d[l_ac].bmgb006 #部位編號
            LET g_qryparam.default4 = g_bmgb_d[l_ac].bmgb007 #作業編號
            LET g_qryparam.default5 = g_bmgb_d[l_ac].bmgb008 #製程段號
            

            #給予arg
            LET g_qryparam.arg1 = g_bmga_m.bmga001
            LET g_qryparam.arg2 = g_bmga_m.bmga002
            LET g_qryparam.arg3 = g_bmga_m.bmga004    
            CALL q_bmba001_2()  #呼叫開窗

            LET g_bmgb_d[l_ac].bmgb004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_bmgb_d[l_ac].bmgb005 = g_qryparam.return2 #元件料號
            LET g_bmgb_d[l_ac].bmgb006 = g_qryparam.return3 #部位編號
            LET g_bmgb_d[l_ac].bmgb007 = g_qryparam.return4 #作業編號
            LET g_bmgb_d[l_ac].bmgb008 = g_qryparam.return5 #製程段號
            CALL abmm205_bmgb_desc()
            DISPLAY BY NAME g_bmgb_d[l_ac].*             
            NEXT FIELD bmgb004 ]]>
</point>
  <point name="input.c.page1.bmgb007" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb_d[l_ac].bmgb004             #給予default值
            LET g_qryparam.default2 = g_bmgb_d[l_ac].bmgb005 #元件料號
            LET g_qryparam.default3 = g_bmgb_d[l_ac].bmgb006 #部位編號
            LET g_qryparam.default4 = g_bmgb_d[l_ac].bmgb007 #作業編號
            LET g_qryparam.default5 = g_bmgb_d[l_ac].bmgb008 #製程段號
            

            #給予arg
            LET g_qryparam.arg1 = g_bmga_m.bmga001
            LET g_qryparam.arg2 = g_bmga_m.bmga002
            LET g_qryparam.arg3 = g_bmga_m.bmga004
            CALL q_bmba001_2()                                #呼叫開窗

            LET g_bmgb_d[l_ac].bmgb004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            LET g_bmgb_d[l_ac].bmgb005 = g_qryparam.return2 #元件料號
            LET g_bmgb_d[l_ac].bmgb006 = g_qryparam.return3 #部位編號
            LET g_bmgb_d[l_ac].bmgb007 = g_qryparam.return4 #作業編號
            LET g_bmgb_d[l_ac].bmgb008 = g_qryparam.return5 #製程段號
            CALL abmm205_bmgb_desc()
            DISPLAY BY NAME g_bmgb_d[l_ac].*             
            NEXT FIELD bmgb004 ]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmgb_d[l_ac].bmgb004
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmgb_d[l_ac].bmgb004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmgb_d[l_ac].bmgb004_desc
            CALL abmm205_bmgb_desc()]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" order="0" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmga_m.bmgamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmga_m.bmgamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmga_m.bmgamodid_desc

            CALL abmm205_bmga_desc()]]>
</point>
  <point name="function.abmm205_b_fill_1" cite_std="N" status="" order="1" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[#替代料單身填充
PRIVATE FUNCTION abmm205_b_fill_1()
   CALL g_bmgb2_d.clear()   
   LET g_sql = "SELECT  UNIQUE bmgc004,'','',bmgc005,'','',bmgc006,'',bmgc007,'',bmgc008,bmgc009,bmgc010,bmgc011 FROM bmgc_t",   
               " INNER JOIN bmga_t ON bmga001 = bmgc001 ",
               " AND bmga002 = bmgc002 ",

               " AND bmga003 = bmgc003 ",
               "",
               
               " WHERE bmgcent=? AND bmgcsite=? AND bmgc001=? AND bmgc002=? AND bmgc003=?"
   
   IF NOT cl_null(g_wc_table2) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table2 CLIPPED
   END IF
   
   #子單身的WC
   
   
   LET g_sql = g_sql, " ORDER BY bmgc_t.bmgc004,bmgc_t.bmgc005,bmgc_t.bmgc006,bmgc_t.bmgc007,bmgc_t.bmgc008"

   
   PREPARE abmm205_pb1 FROM g_sql
   DECLARE b_fill_cs1 CURSOR FOR abmm205_pb1
   
   LET g_cnt = l_ac
   LET l_ac = 1
   
   OPEN b_fill_cs1 USING g_enterprise, g_site,g_bmga_m.bmga001
                                            ,g_bmga_m.bmga002

                                            ,g_bmga_m.bmga003
                                            
   FOREACH b_fill_cs1 INTO g_bmgb2_d[l_ac].bmgc004,g_bmgb2_d[l_ac].bmgc004_desc,g_bmgb2_d[l_ac].bmgc004_desc_desc,g_bmgb2_d[l_ac].bmgc005,g_bmgb2_d[l_ac].bmgc005_desc,g_bmgb2_d[l_ac].bmgc005_desc_desc,g_bmgb2_d[l_ac].bmgc006,g_bmgb2_d[l_ac].bmgc006_desc,g_bmgb2_d[l_ac].bmgc007,g_bmgb2_d[l_ac].bmgc007_desc,g_bmgb2_d[l_ac].bmgc008,g_bmgb2_d[l_ac].bmgc009,g_bmgb2_d[l_ac].bmgc010,g_bmgb2_d[l_ac].bmgc011
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
     
      #add-point:b_fill段資料填充
      CALL abmm205_bmgc_desc()
      #end add-point
   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec AND g_error_show = 1 THEN
         CALL cl_err( '', 9035, 1)
         EXIT FOREACH
      END IF         
   END FOREACH
   LET g_error_show = 0   

      
   CALL g_bmgb2_d.deleteElement(g_bmgb2_d.getLength())
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abmm205_pb1
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmga_desc" cite_std="N" status="" order="2" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 參考欄位帶值

################################################################################
PRIVATE FUNCTION abmm205_bmga_desc()
   SELECT imaal003,imaal004 INTO g_bmga_m.imaal003,g_bmga_m.imaal004 FROM imaal_t 
    WHERE imaalent = g_enterprise
      AND imaal001 = g_bmga_m.bmga001
      AND imaal002 = g_dlang
    SELECT bmgal005 INTO g_bmga_m.bmgal005 FROM bmgal_t
     WHERE bmgalent = g_enterprise
       AND bmgalsite = g_site
       AND bmgal001 = g_bmga_m.bmga001
       AND bmgal002 = g_bmga_m.bmga002
       AND bmgal003 = g_bmga_m.bmga003
       AND bmgal004 = g_dlang      
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmga_chk" cite_std="N" status="" order="3" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單頭相關欄位檢查
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm205_bmga_chk()
   DEFINE l_n        LIKE type_t.num5
   DEFINE l_bmaastus LIKE bmaa_t.bmaastus
   DEFINE l_errno    LIKE type_t.chr10
   
   IF cl_null(g_bmga_m.bmga001) OR g_bmga_m.bmga002 IS NULL THEN
      LET l_errno = ''
      RETURN l_errno
   END IF 
   LET l_errno = ''     
   IF NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL THEN
      LET l_bmaastus = ''
      SELECT bmaastus INTO l_bmaastus FROM bmaa_t
       WHERE bmaaent = g_enterprise
        AND bmaasite = g_site
        AND bmaa001 = g_bmga_m.bmga001
        AND bmaa002 = g_bmga_m.bmga002
       CASE
          WHEN SQLCA.sqlcode = 100   LET l_errno = 'abm-00085'
          WHEN l_bmaastus <> 'Y'     LET l_errno = 'aim-00127'
       END CASE 
    END IF
    RETURN l_errno    
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmgb_desc" cite_std="N" status="" order="4" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 单身多语言显示
# Memo...........:
# Usage..........: CALL abmm205_bmgb_desc()
# Date & Author..: 13/11/19 BY chengjing
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm205_bmgb_desc()
   LET g_bmgb_d[l_ac].bmgb004_desc = ''
   LET g_bmgb_d[l_ac].bmgb004_desc_desc = ''
   LET g_bmgb_d[l_ac].bmgb005_desc = ''
   LET g_bmgb_d[l_ac].bmgb005_desc_desc = ''
   LET g_bmgb_d[l_ac].bmgb006_desc  = ''
   LET g_bmgb_d[l_ac].bmgb007_desc = ''
   SELECT imaal003,imaal004 INTO g_bmgb_d[l_ac].bmgb004_desc,g_bmgb_d[l_ac].bmgb004_desc_desc FROM imaal_t 
    WHERE imaalent = g_enterprise
      AND imaal001 = g_bmgb_d[l_ac].bmgb004
      AND imaal002 = g_lang
   SELECT imaal003,imaal004 INTO g_bmgb_d[l_ac].bmgb005_desc,g_bmgb_d[l_ac].bmgb005_desc_desc FROM imaal_t 
    WHERE imaalent = g_enterprise
      AND imaal001 = g_bmgb_d[l_ac].bmgb005
      AND imaal002 = g_lang
   SELECT oocql004 INTO g_bmgb_d[l_ac].bmgb006_desc FROM oocql_t
    WHERE oocqlent = g_enterprise
      AND oocql001 = '215'
      AND oocql002 = g_bmgb_d[l_ac].bmgb006
      AND oocql003 = g_lang
   SELECT oocql004 INTO g_bmgb_d[l_ac].bmgb007_desc FROM oocql_t
    WHERE oocqlent = g_enterprise
      AND oocql001 = '221'
      AND oocql002 = g_bmgb_d[l_ac].bmgb007
      AND oocql003 = g_lang      
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmgc_desc" cite_std="N" status="" order="5" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 描述说明
# Memo...........:
# Usage..........: CALL abmm205_bmgc_desc()
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm205_bmgc_desc()
   LET g_bmgb2_d[l_ac].bmgc004_desc = ''
   LET g_bmgb2_d[l_ac].bmgc004_desc_desc = ''
   LET g_bmgb2_d[l_ac].bmgc005_desc = ''
   LET g_bmgb2_d[l_ac].bmgc005_desc_desc = ''
   LET g_bmgb2_d[l_ac].bmgc006_desc = ''
   LET g_bmgb2_d[l_ac].bmgc007_desc = ''
   SELECT imaal003,imaal004 INTO g_bmgb2_d[l_ac].bmgc004_desc,g_bmgb2_d[l_ac].bmgc004_desc_desc FROM imaal_t 
    WHERE imaalent = g_enterprise
      AND imaal001 = g_bmgb2_d[l_ac].bmgc004
      AND imaal002 = g_lang
   SELECT imaal003,imaal004 INTO g_bmgb2_d[l_ac].bmgc005_desc,g_bmgb2_d[l_ac].bmgc005_desc_desc FROM imaal_t 
    WHERE imaalent = g_enterprise
      AND imaal001 = g_bmgb2_d[l_ac].bmgc005
      AND imaal002 = g_lang       
   SELECT oocql004 INTO g_bmgb2_d[l_ac].bmgc006_desc FROM oocql_t
    WHERE oocqlent = g_enterprise
      AND oocql001 = '215'
      AND oocql002 = g_bmgb2_d[l_ac].bmgc006
      AND oocql003 = g_lang
   SELECT oocql004 INTO g_bmgb2_d[l_ac].bmgc007_desc FROM oocql_t
    WHERE oocqlent = g_enterprise
      AND oocql001 = '221'
      AND oocql002 = g_bmgb2_d[l_ac].bmgc007
      AND oocql003 = g_lang  
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmgb_chk" cite_std="N" status="" order="6" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單身欄位檢查
# Date & Author..: 2013/11/19 By chenjing
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm205_bmgb_chk()
   DEFINE l_sql      STRING
   DEFINE l_cnt      LIKE type_t.num5
   DEFINE l_errno    LIKE type_t.chr10
   
   IF cl_null(g_bmgb_d[l_ac].bmgb004) OR
      cl_null(g_bmgb_d[l_ac].bmgb005) OR
      g_bmgb_d[l_ac].bmgb006 IS NULL OR
      g_bmgb_d[l_ac].bmgb007 IS NULL OR
      g_bmgb_d[l_ac].bmgb008 IS NULL THEN
      RETURN l_errno
   END IF

   LET l_sql = " SELECT COUNT(*) FROM ",
              " (SELECT bmba001,bmba002,bmba003,bmba004,bmba005,bmba006,bmba007,bmba008,bmba019 ",
              "    FROM bmba_t ",
              "  WHERE bmbaent = '",g_enterprise ,"' AND bmbasite = '",g_site,"'",
              "  START WITH bmba001 = '", g_bmga_m.bmga001,"'",
              "     AND bmba002 = '" ,g_bmga_m.bmga002,"'",
              " CONNECT BY bmba001 = PRIOR bmba003",
              "     AND bmba002 = '", g_bmga_m.bmga002,"')",
              "  WHERE bmba001 = '",g_bmgb_d[l_ac].bmgb004,"'",
              " AND bmba002 = '",g_bmga_m.bmga002,"'",
              " AND bmba003 = '",g_bmgb_d[l_ac].bmgb005,"'",
              " AND bmba004 = '",g_bmgb_d[l_ac].bmgb006,"'",
              #" AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <= '",g_bmga_m.bmga004,"' OR to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') IS NULL)",
              #" AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') > '",g_bmga_m.bmga004,"' OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL)",
              " AND (bmba005 <= '",g_bmga_m.bmga004,"' OR bmba005 IS NULL)",
              " AND (bmba006 > '",g_bmga_m.bmga004,"' OR bmba006 IS NULL)",
              " AND bmba007 = '",g_bmgb_d[l_ac].bmgb007,"'",
              " AND bmba008 = '",g_bmgb_d[l_ac].bmgb008,"'",
              " AND bmba019 <> '2' "
    PREPARE abmm205_bmgb004_pre FROM l_sql
    EXECUTE abmm205_bmgb004_pre INTO l_cnt
    IF cl_null(l_cnt) OR l_cnt <= 0 THEN
       LET l_errno = 'abm-00087'
    END IF
 
   RETURN l_errno
END FUNCTION]]>
</point>
  <point name="function.abmm205_acc_chk" cite_std="N" status="" order="7" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: ACC碼檢查
# Modify.........:
################################################################################
PRIVATE FUNCTION abmm205_acc_chk(p_oocq001,p_oocq002)
DEFINE p_oocq001        LIKE oocq_t.oocq001
DEFINE p_oocq002        LIKE oocq_t.oocq002
DEFINE l_n              LIKE type_t.num5
DEFINE l_errno          LIKE type_t.chr10

   LET l_errno = ""
   IF NOT cl_null(p_oocq002) THEN
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM oocq_t
       WHERE oocqent = g_enterprise
         AND oocq001 = p_oocq001
         AND oocq002 = p_oocq002
      IF l_n = 0 THEN
         LET l_errno = "amm-00013"
      ELSE
         SELECT COUNT(*) INTO l_n
           FROM oocq_t
          WHERE oocqent = g_enterpris3e
            AND oocq001 = p_oocq001
            AND oocq002 = p_oocq002
            AND oocqstus = 'Y'
         IF l_n = 0 THEN
            LET l_errno = "amm-00014"
         END IF
      END IF
   END IF
   RETURN l_errno
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmgc011_chk" cite_std="N" status="" order="8" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 單位欄位檢查
################################################################################
PRIVATE FUNCTION abmm205_bmgc011_chk(p_bmgc011)
DEFINE p_bmgc011      LIKE bmgc_t.bmgc011
DEFINE r_success      LIKE type_t.num5

       LET r_success = TRUE

       IF NOT cl_null(p_bmgc011) THEN
          #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
          INITIALIZE g_chkparam.* TO NULL

          #設定g_chkparam.*的參數
          LET g_chkparam.arg1 = p_bmgc011

          #呼叫檢查存在並帶值的library
          IF cl_chk_exist("v_ooca001") THEN
             #檢查成功時後續處理

          ELSE
             #檢查失敗時後續處理
             LET r_success = FALSE
             RETURN r_success
          END IF
       END IF
       RETURN r_success
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmgc005_chk" cite_std="N" status="" order="9" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 取替代料號檢查
################################################################################
PRIVATE FUNCTION abmm205_bmgc005_chk()
   DEFINE l_imaa010     LIKE imaa_t.imaa010
   DEFINE l_oocq004     LIKE oocq_t.oocq004
   DEFINE l_n           LIKE type_t.num5
   DEFINE l_imaa001     LIKE imaa_t.imaa001
   DEFINE l_imaastus    LIKE imaa_t.imaastus
   LET g_errno = ""
   IF g_bmgb2_d[l_ac].bmgc005 = g_bmga_m.bmga001 OR g_bmgb2_d[l_ac].bmgc005 = g_bmgb_d[l_ac].bmgb004 THEN 
      LET g_errno = 'abm-00050'
      RETURN FALSE
   END IF
   IF g_bmgb2_d[l_ac].bmgc005 = g_bmgb_d[l_ac].bmgb005 THEN 
      LET g_errno = 'abm-00051'
      RETURN FALSE
   END IF  
   SELECT imaa010 INTO l_imaa010 FROM imaa_t 
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmgb2_d[l_ac].bmgc005
   IF NOT cl_null(l_imaa010) THEN 
      SELECT oocq004 INTO l_oocq004
        FROM oocq_t
       WHERE oocq001 = '210'
         AND oocq002 = l_imaa010
         AND oocqent = g_enterprise
         AND oocqstus = 'Y'
   END IF
   IF l_oocq004 = 'N' THEN
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM imaa_t
       WHERE imaa001 = g_bmgb2_d[l_ac].bmgc005
         AND imaaent = g_enterprise
         AND imaastus = 'Y'
         AND imaa038 = 'Y'
      IF l_n > 0 THEN
         LET g_errno = 'abm-00010'
         RETURN FALSE
      END IF
   END IF 
   IF NOT cl_null(g_bmgb2_d[l_ac].bmgc005) THEN 
      SELECT imaa001,imaastus INTO l_imaa001,l_imaastus FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = g_bmgb2_d[l_ac].bmgc005
       IF l_imaastus = 'N' THEN
          LET g_errno = 'aim-00121' 
          RETURN FALSE
       END IF
       IF l_imaastus = 'X' THEN              
          LET g_errno = 'aim-00002' 
          RETURN FALSE
       END IF
       IF cl_null(l_imaa001) THEN 
          LET g_errno = 'aim-00001' 
          RETURN FALSE
       END IF
   IF cl_null(g_bmgb2_d[l_ac].bmgc006) THEN
      LET g_bmgb2_d[l_ac].bmgc006 = ' '
   END IF
   IF cl_null(g_bmgb2_d[l_ac].bmgc007) THEN
      LET g_bmgb2_d[l_ac].bmgc007 = ' '
   END IF
   IF cl_null(g_bmgb2_d[l_ac].bmgc008) THEN
      LET g_bmgb2_d[l_ac].bmgc008 = ' '
   END IF   
    END IF
    RETURN TRUE    
END FUNCTION]]>
</point>
  <point name="function.abmm205_bmgc005_desc" cite_std="N" status="" order="10" ver="1" cite_ver="" new="Y" src="s" mark_hard="N">
<![CDATA[################################################################################
# Descriptions...: 单位带值
################################################################################
PRIVATE FUNCTION abmm205_bmgc005_desc()
#   LET g_bmgb2_d[l_ac].bmgc011  = ''
   IF NOT cl_null(g_bmgb2_d[l_ac].bmgc005) AND ( g_bmgb2_d_t.bmgc005 IS NULL OR g_bmgb2_d[l_ac].bmgc005 != g_bmgb2_d_t.bmgc005) THEN
      SELECT imae081 INTO g_bmgb2_d[l_ac].bmgc011 FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite = g_site
         AND imae001 = g_bmgb2_d[l_ac].bmgc005 
      DISPLAY BY NAME g_bmgb2_d[l_ac].bmgc011     
   END IF
END FUNCTION]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF g_wc3 <> "1=1" THEN
      LET l_sub_sql = " SELECT UNIQUE bmga001 ",
                                    ",bmga002 ",
         
                                    ",bmga003 ",
         
         
                        " FROM bmga_t ",
                              " ",
                              " LEFT JOIN bmgb_t ON bmgbent = bmgaent AND bmgbsite = bmgasite AND bmga001 = bmgb001 AND bmga002 = bmgb002 AND bmga003 = bmgb003 ",
                              " LEFT JOIN bmgc_t ON bmgcent = bmgaent AND bmgcsite = bmgasite AND bmga001 = bmgc001 AND bmga002 = bmgc002 AND bmga003 = bmgc003 ",
                              
                              " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                              " ",
                       " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND bmgbent = '" ||g_enterprise|| "' AND bmgbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, " AND ", l_wc3
   ELSE          
      IF g_wc2 <> " 1=1" THEN
         #單身有輸入搜尋條件                      
         LET l_sub_sql = " SELECT UNIQUE bmga001 ",
                                       ",bmga002 ",
   
                                       ",bmga003 ",
   
   
                           " FROM bmga_t ",
                                 " ",
                                 " LEFT JOIN bmgb_t ON bmgbent = bmgaent AND bmgbsite = bmgasite AND bmga001 = bmgb001 AND bmga002 = bmgb002 AND bmga003 = bmgb003 ",
   
   
                                 " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                                 " ",
                          " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND bmgbent = '" ||g_enterprise|| "' AND bmgbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2
    
      ELSE
         #單身未輸入搜尋條件
         LET l_sub_sql = " SELECT UNIQUE bmga001 ",
                                       ",bmga002 ",
   
                                       ",bmga003 ",
   
   
                           " FROM bmga_t ", 
                                 " ",
                                 " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                           "WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND ",l_wc CLIPPED
    
      END IF
   END IF    
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   ]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   CALL g_bmgb2_d.clear()
   LET l_wc3 = g_wc3.trim()]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF g_wc3 <> " 1=1" AND NOT cl_null(g_wc3) THEN 
      #依照bmga001,'',bmga002,bmga003,bmga004,bmga005 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT bmgastus,bmga001,'',bmga002,bmga003,bmga004,bmga005,DENSE_RANK() OVER(ORDER BY bmga001,bmga002,bmga003 ",g_order,") AS RANK ",
                        " FROM bmga_t ",
                              " ",
                              " LEFT JOIN bmgb_t ON bmgbent = bmgaent AND bmgbsite = bmgasite AND bmga001 = bmgb001 AND bmga002 = bmgb002 AND bmga003 = bmgb003 ",
                              " LEFT JOIN bmgc_t ON bmgcent = bmgaent AND bmgcsite = bmgasite AND bmga001 = bmgc001 AND bmga002 = bmgc002 AND bmga003 = bmgc003 ",

                              " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND ",g_wc," AND ",g_wc2," AND ",g_wc3
   ELSE
      #單身有輸入查詢條件且非null
      IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
         #依照bmga001,'',bmga002,bmga003,bmga004,bmga005 Browser欄位定義(取代原本bs_sql功能)
         LET l_sql_rank = "SELECT DISTINCT bmgastus,bmga001,'',bmga002,bmga003,bmga004,bmga005,DENSE_RANK() OVER(ORDER BY bmga001,bmga002,bmga003 ",g_order,") AS RANK ",
                           " FROM bmga_t ",
                                 " ",
                                 " LEFT JOIN bmgb_t ON bmgbent = bmgaent AND bmgbsite = bmgasite AND bmga001 = bmgb001 AND bmga002 = bmgb002 AND bmga003 = bmgb003 ",
   
   
                                 " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                                 " ",
                          " ",
                          " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND ",g_wc," AND ",g_wc2
      ELSE
         #單身無輸入資料
         LET l_sql_rank = "SELECT DISTINCT bmgastus,bmga001,'',bmga002,bmga003,bmga004,bmga005,DENSE_RANK() OVER(ORDER BY bmga001,bmga002,bmga003 ",g_order,") AS RANK ",
                          " FROM bmga_t ",
                               "  ",
                               "  LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                          " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND ", g_wc
      END IF
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT bmgastus,bmga001,'',bmga002,bmga003,bmga004,bmga005 FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   DEFINE l_wc3             STRING]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      CONSTRUCT g_wc_table2 ON bmgc004,bmgc005,bmgc006,bmgc007,bmgc008,bmgc009,bmgc010,bmgc011
           FROM s_detail2[1].bmgc004,s_detail2[1].bmgc005,s_detail2[1].bmgc006,s_detail2[1].bmgc007,s_detail2[1].bmgc008,s_detail2[1].bmgc009,s_detail2[1].bmgc010,s_detail2[1].bmgc011
                      
         BEFORE CONSTRUCT
#saki       CALL cl_qbe_display_condition(lc_qbe_sn)


         ON ACTION controlp INFIELD bmgc004
	        INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_bmga_m.bmga001
            LET g_qryparam.arg2 = g_bmga_m.bmga002
            CALL q_bmba001()                           #呼叫開窗
            LET g_bmgb2_d[l_ac].bmgc004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_qryparam.return1 TO bmgc004             
            NEXT FIELD bmgc004                     #返回原欄位
         
         ON ACTION controlp INFIELD bmgc005
	        INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgc005  #顯示到畫面上

            NEXT FIELD bmgc005                     #返回原欄位

         ON ACTION controlp INFIELD bmgc006
	        INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgc006  #顯示到畫面上

            NEXT FIELD bmgc006                     #返回原欄位
            
         ON ACTION controlp INFIELD bmgc007
	        INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgc007  #顯示到畫面上

            NEXT FIELD bmgc007                     #返回原欄位


         ON ACTION controlp INFIELD bmgc011
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                               #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmgc011            
            NEXT FIELD bmgc011
       
      END CONSTRUCT
      
]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   LET g_wc3 = g_wc_table2
   IF g_wc_table2 <> " 1=1" THEN
      LET g_wc3 = g_wc3 ," AND ", g_wc_table2
   END IF]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF NOT cl_null(g_argv[1]) THEN
      LET l_wc = l_wc, " bmgasite = '", g_argv[1], "' AND "
   END IF

   IF NOT cl_null(g_argv[02]) THEN
      LET l_wc = l_wc, " bmga001 = '", g_argv[02], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[03]) THEN
      LET l_wc = l_wc, " bmga002 = '", g_argv[03], "' AND "
   END IF

   IF NOT cl_null(g_argv[04]) THEN
      LET l_wc = l_wc, " bmga003 = '", g_argv[04], "' AND "
   END IF
   
   IF NOT cl_null(l_wc) THEN
      LET g_wc = l_wc.subString(1,l_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF]]>
</point>
  <point name="default_search.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   DEFINE l_wc   STRING]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      DELETE FROM bmgc_t
       WHERE bmgcent = g_enterprise AND bmgcsite = g_site AND bmgc001 = g_bmga_m.bmga001
         AND bmgc002 = g_bmga_m.bmga002

         AND bmgc003 = g_bmga_m.bmga003
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmgb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 ]]>
</point>
  <point name="global.variable" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[ TYPE type_g_bmgb2_d        RECORD
       bmgc004 LIKE bmgc_t.bmgc004, 
   bmgc004_desc LIKE type_t.chr80, 
   bmgc004_desc_desc LIKE type_t.chr80, 
   bmgc005 LIKE bmgc_t.bmgc005, 
   bmgc005_desc LIKE type_t.chr80, 
   bmgc005_desc_desc LIKE type_t.chr80, 
   bmgc006 LIKE bmgc_t.bmgc006, 
   bmgc006_desc LIKE type_t.chr80, 
   bmgc007 LIKE bmgc_t.bmgc007, 
   bmgc007_desc LIKE type_t.chr80, 
   bmgc008 LIKE bmgc_t.bmgc008, 
   bmgc009 LIKE bmgc_t.bmgc009,
   bmgc010 LIKE bmgc_t.bmgc010,
   bmgc011 LIKE bmgc_t.bmgc011
       END RECORD
DEFINE g_bmgb2_d          DYNAMIC ARRAY OF type_g_bmgb2_d
DEFINE g_bmgb2_d_t        type_g_bmgb2_d  
DEFINE g_wc_table2          STRING
DEFINE g_wc3                 STRING
]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_bmgb_d.getLength() THEN
         LET g_detail_idx = g_bmgb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmgb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmgb_d.getLength() TO FORMONLY.cnt
   END IF]]>
</point>
  <point name="init.init" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   ]]>
</point>
  <point name="input.a.bmga004" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_bmga_m.bmga004) AND NOT cl_null(g_bmga_m.bmga005) THEN
               IF g_bmga_m.bmga004 > g_bmga_m.bmga005 THEN
                  CALL cl_err(g_bmga_m.bmga005,'ais-00047',1)
                  LET g_bmga_m.bmga004 = g_bmga_m_t.bmga004
                  NEXT FIELD bmga004
               END IF
            END IF  
                        ]]>
</point>
  <point name="input.a.bmga005" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_bmga_m.bmga004) AND NOT cl_null(g_bmga_m.bmga005) THEN
               IF g_bmga_m.bmga004 > g_bmga_m.bmga005 THEN
                  CALL cl_err(g_bmga_m.bmga004,'ais-00048',1)
                  LET g_bmga_m.bmga005 = g_bmga_m_t.bmga005
                  NEXT FIELD bmga005
               END IF
            END IF ]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            IF cl_null(g_bmgb_d[g_detail_idx].bmgb006) THEN
               LET g_bmgb_d[g_detail_idx].bmgb006 = ' '
            END IF 
            IF cl_null(g_bmgb_d[g_detail_idx].bmgb007) THEN
               LET g_bmgb_d[g_detail_idx].bmgb007 = ' '
            END IF
            IF cl_null(g_bmgb_d[g_detail_idx].bmgb008) THEN
               LET g_bmgb_d[g_detail_idx].bmgb008 = ' '
            END IF]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[               IF cl_null(g_bmgb_d[l_ac].bmgb006) THEN 
                  LET g_bmgb_d[l_ac].bmgb006 = ' '
               END IF
               IF cl_null(g_bmgb_d[l_ac].bmgb007) THEN 
                  LET g_bmgb_d[l_ac].bmgb007 = ' '
               END IF
               IF cl_null(g_bmgb_d[l_ac].bmgb008) THEN 
                  LET g_bmgb_d[l_ac].bmgb008 = ' '
               END IF]]>
</point>
  <point name="input.body.before_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            LET g_bmga004 = g_bmga_m.bmga004+1]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[            LET g_bmgb_d[l_ac].bmgb004 = g_bmga_m.bmga001]]>
</point>
  <point name="input.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   DEFINE r_errno    LIKE type_t.chr10
   DEFINE l_m        LIKE type_t.num5
   DEFINE l_sql      STRING 
   DEFINE l_imaa006  LIKE imaa_t.imaa006
   DEFINE l_rate     LIKE type_t.num26_10
   DEFINE l_success  LIKE type_t.num5  ]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   LET g_forupd_sql = "SELECT bmgc004,'','',bmgc005,'','',bmgc006,'',bmgc007,'',bmgc008,bmgc009,bmgc010,bmgc011 FROM bmgc_t WHERE bmgcent=? AND bmgcsite=? AND bmgc001=? AND bmgc002=? AND bmgc003=? AND bmgc004=? AND bmgc005=? AND bmgc006=? AND bmgc007=? AND bmgc008=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm205_bcl1 CURSOR FROM g_forupd_sql
   ]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                  IF cl_null(g_bmga_m.bmga002) THEN
                      LET g_bmga_m.bmga002 = ' '
                  END IF 
                  CALL abmm205_bmga_chk() RETURNING r_errno     
                  IF NOT cl_null(r_errno) THEN 
                     CALL cl_err(g_bmga_m.bmga001,r_errno,1)
                     NEXT FIELD bmga002
                  END IF                  ]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[                  IF cl_null(g_bmga_m.bmga002) THEN
                      LET g_bmga_m.bmga002 = ' '
                  END IF 
                  CALL abmm205_bmga_chk() RETURNING r_errno     
                  IF NOT cl_null(r_errno) THEN 
                     CALL cl_err(g_bmga_m.bmga001,r_errno,1)
                     NEXT FIELD bmga002
                  END IF ]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[             ]]>
</point>
  <point name="input.master_input.update_item" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[               IF NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_site) THEN
                  CALL n_bmgal(g_site,g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_site
                  LET g_ref_fields[2] = g_bmga_m.bmga001
                  IF g_bmga_m.bmga002 IS NULL THEN
                     LET g_bmga_m.bmga002 = ' '
                  END IF   
                  LET g_ref_fields[3] = g_bmga_m.bmga002
                  LET g_ref_fields[4] = g_bmga_m.bmga003
                  
                  CALL ap_ref_array2(g_ref_fields," SELECT bmgal005 FROM bmgal_t WHERE bmgalent = '"||g_enterprise||"' AND bmgal001 = ? 
                                     AND bmgal002 = ? AND bmgal003 = ? AND bmgal004 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_bmga_m.bmgal005 = g_rtn_fields[1]
                  DISPLAY BY NAME g_bmga_m.bmgal005   
               END IF                  ]]>
</point>
  <point name="input.more_input" cite_std="N" status="u" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      INPUT ARRAY g_bmgb2_d FROM s_detail2.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmgb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 

            CALL abmm205_b_fill_1()
            LET g_rec_b = g_bmgb2_d.getLength()

        
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmm205_cl USING g_enterprise, g_site,g_bmga_m.bmga001
                                                                ,g_bmga_m.bmga002

                                                                ,g_bmga_m.bmga003


            IF STATUS THEN
               CALL cl_err("OPEN abmm205_cl:", STATUS, 1)
               CLOSE abmm205_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
                   
            
            LET g_rec_b = g_bmgb2_d.getLength()
            
            IF g_rec_b >= l_ac
               AND g_bmgb2_d[l_ac].bmgc004 IS NOT NULL
               AND g_bmgb2_d[l_ac].bmgc005 IS NOT NULL

               AND g_bmgb2_d[l_ac].bmgc006 IS NOT NULL

               AND g_bmgb2_d[l_ac].bmgc007 IS NOT NULL

               AND g_bmgb2_d[l_ac].bmgc008 IS NOT NULL


            THEN
               LET l_cmd='u'
               LET g_bmgb2_d_t.* = g_bmgb2_d[l_ac].*  #BACKUP
               CALL abmm205_set_entry_b(l_cmd)
               CALL abmm205_set_no_entry_b(l_cmd)
               OPEN abmm205_bcl1 USING g_enterprise, g_site,g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmgb2_d[l_ac].bmgc004,
                                       g_bmgb2_d[l_ac].bmgc005,g_bmgb2_d[l_ac].bmgc006,g_bmgb2_d[l_ac].bmgc007,g_bmgb2_d[l_ac].bmgc008
                                                                          
               IF SQLCA.sqlcode THEN
                  CALL cl_err("abmm205_bcl1",SQLCA.sqlcode,1)
                  LET l_lock_sw='Y'
               ELSE

                  FETCH abmm205_bcl1 INTO g_bmgb2_d[l_ac].bmgc004,g_bmgb2_d[l_ac].bmgc004_desc,g_bmgb2_d[l_ac].bmgc004_desc_desc,g_bmgb2_d

[l_ac].bmgc005,g_bmgb2_d[l_ac].bmgc005_desc,g_bmgb2_d[l_ac].bmgc005_desc_desc,g_bmgb2_d[l_ac].bmgc006,g_bmgb2_d[l_ac].bmgc006_desc,g_bmgb2_d

[l_ac].bmgc007,g_bmgb2_d[l_ac].bmgc007_desc,g_bmgb2_d[l_ac].bmgc008,g_bmgb2_d[l_ac].bmgc009,g_bmgb2_d[l_ac].bmgc010,g_bmgb2_d[l_ac].bmgc011
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_bmgb2_d_t.bmgc004,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmm205_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmgb2_d[l_ac].* TO NULL 
            LET g_bmgb2_d[l_ac].bmgc009 = 1
            LET g_bmgb2_d[l_ac].bmgc010 = 1
            LET g_bmgb2_d[l_ac].bmgc004 = g_bmga_m.bmga001
            LET g_bmgb2_d_t.* = g_bmgb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmm205_set_entry_b(l_cmd)
            CALL abmm205_set_no_entry_b(l_cmd)
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_rate = ''
            LET l_imaa006 = ''  
            IF NOT cl_null(g_bmgb2_d[l_ac].bmgc005) THEN
               SELECT imaa006 INTO l_imaa006
                 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmgb2_d[l_ac].bmgc005
               IF NOT cl_null(g_bmgb2_d[l_ac].bmgc011) AND NOT cl_null(l_imaa006) THEN
                  CALL s_aimi190_get_convert(g_bmgb2_d[l_ac].bmgc005,g_bmgb2_d[l_ac].bmgc011,l_imaa006) RETURNING l_success,l_rate
                  IF l_success = FALSE THEN                                                                                                                  
                     NEXT FIELD bmgc011
                  END IF 
               END IF
               IF cl_null(l_imaa006) THEN 
                  CALL cl_err(l_imaa006,'abm-00021',1)                                                                                                                  
                  NEXT FIELD bmgc011 
               END IF                     
            END IF 
            
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmgc_t 
             WHERE bmgcent = g_enterprise AND bmgcsite = g_site AND bmgc001 = g_bmga_m.bmga001
               AND bmgc002 = g_bmga_m.bmga002

               AND bmgc003 = g_bmga_m.bmga003


               AND bmgc004 = g_bmgb2_d[l_ac].bmgc004
               AND bmgc005 = g_bmgb2_d[l_ac].bmgc005

               AND bmgc006 = g_bmgb2_d[l_ac].bmgc006

               AND bmgc007 = g_bmgb2_d[l_ac].bmgc007

               AND bmgc008 = g_bmgb2_d[l_ac].bmgc008


                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               IF cl_null(g_bmgb2_d[l_ac].bmgc006) THEN 
                  LET g_bmgb2_d[l_ac].bmgc006 = ' '
               END IF
               IF cl_null(g_bmgb2_d[l_ac].bmgc007) THEN 
                  LET g_bmgb2_d[l_ac].bmgc007 = ' '
               END IF
               IF cl_null(g_bmgb2_d[l_ac].bmgc008) THEN 
                  LET g_bmgb2_d[l_ac].bmgc008 = ' '
               END IF               
               INSERT INTO bmgc_t (bmgcent,bmgcsite,bmgc001,bmgc002,bmgc003,bmgc004,bmgc005,bmgc006,bmgc007,bmgc008,bmgc009,bmgc010,bmgc011)
               VALUES(g_enterprise,g_site,g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmgb2_d[l_ac].bmgc004,g_bmgb2_d[l_ac].bmgc005,
                      g_bmgb2_d[l_ac].bmgc006,g_bmgb2_d[l_ac].bmgc007,g_bmgb2_d[l_ac].bmgc008,g_bmgb2_d[l_ac].bmgc009,g_bmgb2_d[l_ac].bmgc010,
                      g_bmgb2_d[l_ac].bmgc011)
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmgc_t",SQLCA.sqlcode,0)
               END IF
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmgb2_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmgc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmgb2_d.deleteElement(l_ac)
               NEXT FIELD bmgc004
            END IF
         
            IF g_bmgb2_d[l_ac].bmgc004 IS NOT NULL
               AND g_bmgb2_d_t.bmgc005 IS NOT NULL

               AND g_bmgb2_d_t.bmgc006 IS NOT NULL

               AND g_bmgb2_d_t.bmgc007 IS NOT NULL 

               AND g_bmgb2_d_t.bmgc008 IS NOT NULL


               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               
               DELETE FROM bmgc_t
                WHERE bmgcent = g_enterprise AND bmgcsite = g_site AND bmgc001 = g_bmga_m.bmga001 AND
                      bmgc002 = g_bmga_m.bmga002 AND
                      bmgc003 = g_bmga_m.bmga003 AND
                      bmgc004 = g_bmgb2_d_t.bmgc004
                  AND bmgc005 = g_bmgb2_d_t.bmgc005
                  AND bmgc006 = g_bmgb2_d_t.bmgc006
                  AND bmgc007 = g_bmgb2_d_t.bmgc007
                  AND bmgc008 = g_bmgb2_d_t.bmgc008                
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmgc_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmm205_bcl1
               LET l_count = g_bmgb2_d.getLength()
            END IF 
            

         AFTER DELETE 

         AFTER FIELD bmgc004
            CALL abmm205_bmgc_desc() 
            IF NOT cl_null(g_bmgb2_d[l_ac].bmgc004) THEN
               LET l_sql = "SELECT COUNT(*) FROM bmba_t", 
                          "  WHERE bmbaent = '",g_enterprise ,"' AND bmbasite = '",g_site,"'",
                         # "    AND bmba001 = '",g_bmgb2_d[l_ac].bmgc004,"'",
                         # "    AND bmba002 = '",g_bmga_m.bmga002,"'",
                          " AND (bmba005 <= '",g_bmga_m.bmga004,"' OR bmba005 IS NULL)",
                          " AND (bmba006 > '",g_bmga_m.bmga004,"' OR bmba006 IS NULL)",
                          "  START WITH bmba001 = '", g_bmga_m.bmga001,"'",
                          "    AND bmba002 = '" ,g_bmga_m.bmga002,"'",
                         " CONNECT BY bmba001 = PRIOR bmba003",
                         "     AND bmba002 = '", g_bmga_m.bmga002,"'",
                         "     AND (bmba005 <= '",g_bmga_m.bmga004,"' OR bmba005 IS NULL)",
                         "     AND (bmba006 > '",g_bmga_m.bmga004,"' OR bmba006 IS NULL)"
              
               PREPARE abmm205_bmgc004_pre FROM l_sql
               EXECUTE abmm205_bmgc004_pre INTO l_m
               IF cl_null(l_m) OR l_m <= 0 THEN
                  CALL cl_err(g_bmgb2_d[l_ac].bmgc004, 'abm-00086',1)
                  LET g_bmgb2_d[l_ac].bmgc004 = g_bmgb2_d_t.bmgc004
                  CALL abmm205_bmgc_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF          
 
         AFTER FIELD bmgc005
            CALL abmm205_bmgc_desc()
            CALL abmm205_bmgc005_desc()
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc004) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc005) AND g_bmgb2_d[l_ac].bmgc006 IS NOT NULL AND g_bmgb2_d[l_ac].bmgc007 IS NOT NULL AND g_bmgb2_d[l_ac].bmgc008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb2_d[l_ac].bmgc004 != g_bmgb2_d_t.bmgc004 OR g_bmgb2_d[l_ac].bmgc005 != g_bmgb2_d_t.bmgc005 OR g_bmgb2_d[l_ac].bmgc006 != g_bmgb2_d_t.bmgc006 OR g_bmgb2_d[l_ac].bmgc007 != g_bmgb2_d_t.bmgc007 OR g_bmgb2_d[l_ac].bmgc008 != g_bmgb2_d_t.bmgc008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb2_d[l_ac].bmgc004 ||"' AND "|| "bmgb005 = '"||g_bmgb2_d[l_ac].bmgc005 ||"' AND "|| "bmgb006 = '"||g_bmgb2_d[l_ac].bmgc006 ||"' AND "|| "bmgb007 = '"||g_bmgb2_d[l_ac].bmgc007 ||"' AND "|| "bmgb008 = '"||g_bmgb2_d[l_ac].bmgc008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb2_d[l_ac].bmgc005 = g_bmgb2_d_t.bmgc005
                     CALL abmm205_bmgc_desc()
                     CALL abmm205_bmgc005_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
         IF NOT cl_null(g_bmgb2_d[l_ac].bmgc005) THEN
            IF NOT abmm205_bmgc005_chk() THEN
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_bmgb2_d[l_ac].bmgc005,g_errno,1)
                  LET g_bmgb2_d[l_ac].bmgc005 = g_bmgb2_d_t.bmgc005
                  CALL abmm205_bmgc_desc()
                  CALL abmm205_bmgc005_desc()
                  NEXT FIELD CURRENT 
               END IF
            END IF             
         END IF            
         
         AFTER FIELD bmgc006
            CALL abmm205_bmgc_desc()
            IF cl_null(g_bmgb2_d[l_ac].bmgc006) THEN 
               LET g_bmgb2_d[l_ac].bmgc006 = ' '
            END IF            
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc004) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc005) AND g_bmgb2_d[l_ac].bmgc006 IS NOT NULL AND NOT cl_null(g_bmgb2_d[l_ac].bmgc007) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb2_d[l_ac].bmgc004 != g_bmgb2_d_t.bmgc004 OR g_bmgb2_d[l_ac].bmgc005 != g_bmgb2_d_t.bmgc005 OR g_bmgb2_d[l_ac].bmgc006 != g_bmgb2_d_t.bmgc006 OR g_bmgb2_d[l_ac].bmgc007 != g_bmgb2_d_t.bmgc007 OR g_bmgb2_d[l_ac].bmgc008 != g_bmgb2_d_t.bmgc008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb2_d[l_ac].bmgc004 ||"' AND "|| "bmgb005 = '"||g_bmgb2_d[l_ac].bmgc005 ||"' AND "|| "bmgb006 = '"||g_bmgb2_d[l_ac].bmgc006 ||"' AND "|| "bmgb007 = '"||g_bmgb2_d[l_ac].bmgc007 ||"' AND "|| "bmgb008 = '"||g_bmgb2_d[l_ac].bmgc008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb2_d[l_ac].bmgc006 = g_bmgb2_d_t.bmgc006
                     CALL abmm205_bmgc_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF            
            CALL abmm205_acc_chk('215',g_bmgb2_d[l_ac].bmgc006) RETURNING r_errno
            IF NOT cl_null(r_errno) THEN
               CALL cl_err_msg(g_bmgb2_d[l_ac].bmgc006,r_errno,'215',1)
               LET g_bmgb2_d[l_ac].bmgc006 = g_bmgb2_d_t.bmgc006
               CALL abmm205_bmgc_desc()
               NEXT FIELD CURRENT
            END IF        
         
         AFTER FIELD bmgc007
            CALL abmm205_bmgc_desc()
            IF cl_null(g_bmgb2_d[l_ac].bmgc007) THEN 
               LET g_bmgb2_d[l_ac].bmgc007 = ' '
            END IF
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc004) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc005) AND g_bmgb2_d[l_ac].bmgc006 IS NOT NULL AND g_bmgb2_d[l_ac].bmgc007 IS NOT NULL AND g_bmgb2_d[l_ac].bmgc008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb2_d[l_ac].bmgc004 != g_bmgb2_d_t.bmgc004 OR g_bmgb2_d[l_ac].bmgc005 != g_bmgb2_d_t.bmgc005 OR g_bmgb2_d[l_ac].bmgc006 != g_bmgb2_d_t.bmgc006 OR g_bmgb2_d[l_ac].bmgc007 != g_bmgb2_d_t.bmgc007 OR g_bmgb2_d[l_ac].bmgc008 != g_bmgb2_d_t.bmgc008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb2_d[l_ac].bmgc004 ||"' AND "|| "bmgb005 = '"||g_bmgb2_d[l_ac].bmgc005 ||"' AND "|| "bmgb006 = '"||g_bmgb2_d[l_ac].bmgc006 ||"' AND "|| "bmgb007 = '"||g_bmgb2_d[l_ac].bmgc007 ||"' AND "|| "bmgb008 = '"||g_bmgb2_d[l_ac].bmgc008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb2_d[l_ac].bmgc007 = g_bmgb2_d_t.bmgc007
                     CALL abmm205_bmgc_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF            
            CALL abmm205_acc_chk('221',g_bmgb2_d[l_ac].bmgc007) RETURNING r_errno
            IF NOT cl_null(r_errno) THEN
               CALL cl_err_msg(g_bmgb2_d[l_ac].bmgc007,r_errno,'221',1)
               LET g_bmgb2_d[l_ac].bmgc007 = g_bmgb2_d_t.bmgc007
               CALL abmm205_bmgc_desc()
               NEXT FIELD CURRENT
            END IF         

         AFTER FIELD bmgc008
            IF cl_null(g_bmgb2_d[l_ac].bmgc006) THEN 
               LET g_bmgb2_d[l_ac].bmgc006 = ' '
            END IF
            IF  NOT cl_null(g_bmga_m.bmga001) AND g_bmga_m.bmga002 IS NOT NULL AND NOT cl_null(g_bmga_m.bmga003) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc004) AND NOT cl_null(g_bmgb2_d[l_ac].bmgc005) AND g_bmgb2_d[l_ac].bmgc006 IS NOT NULL AND g_bmgb2_d[l_ac].bmgc007 IS NOT NULL AND g_bmgb2_d[l_ac].bmgc008 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmga_m.bmga001 != g_bmga001_t OR g_bmga_m.bmga002 != g_bmga002_t OR g_bmga_m.bmga003 != g_bmga003_t OR g_bmgb2_d[l_ac].bmgc004 != g_bmgb2_d_t.bmgc004 OR g_bmgb2_d[l_ac].bmgc005 != g_bmgb2_d_t.bmgc005 OR g_bmgb2_d[l_ac].bmgc006 != g_bmgb2_d_t.bmgc006 OR g_bmgb2_d[l_ac].bmgc007 != g_bmgb2_d_t.bmgc007 OR g_bmgb2_d[l_ac].bmgc008 != g_bmgb2_d_t.bmgc008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmgb_t WHERE "||"bmgbent = '" ||g_enterprise|| "' AND "||"bmgbsite = '"||g_site || "' AND "||"bmgb001 = '"||g_bmga_m.bmga001 ||"' AND "|| "bmgb002 = '"||g_bmga_m.bmga002 ||"' AND "|| "bmgb003 = '"||g_bmga_m.bmga003 ||"' AND "|| "bmgb004 = '"||g_bmgb2_d[l_ac].bmgc004 ||"' AND "|| "bmgb005 = '"||g_bmgb2_d[l_ac].bmgc005 ||"' AND "|| "bmgb006 = '"||g_bmgb2_d[l_ac].bmgc006 ||"' AND "|| "bmgb007 = '"||g_bmgb2_d[l_ac].bmgc007 ||"' AND "|| "bmgb008 = '"||g_bmgb2_d[l_ac].bmgc008 ||"'",'std-00004',0) THEN 
                     LET g_bmgb2_d[l_ac].bmgc008 = g_bmgb2_d_t.bmgc008
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

         AFTER FIELD bmgc009
            IF NOT cl_null(g_bmgb2_d[l_ac].bmgc009) THEN
               IF NOT cl_ap_chk_Range(g_bmgb2_d[l_ac].bmgc009,"0.000","1","","","azz-00079",1) THEN
                  NEXT FIELD bmgc009
               END IF
            END IF
            
         AFTER FIELD bmgc010
            IF NOT cl_null(g_bmgb2_d[l_ac].bmgc010) THEN
               IF NOT cl_ap_chk_Range(g_bmgb2_d[l_ac].bmgc010,"0.000","1","","","azz-00079",1) THEN
                  NEXT FIELD bmgc010
               END IF
            END IF
            
         AFTER FIELD bmgc011
            IF NOT cl_null(g_bmgb2_d[l_ac].bmgc011) THEN
               IF NOT abmm205_bmgc011_chk(g_bmgb2_d[l_ac].bmgc011) THEN
                  LET g_bmgb2_d[l_ac].bmgc011 = g_bmgb2_d_t.bmgc011
                  NEXT FIELD bmgc011
               END IF
               LET l_rate = ''
               LET l_imaa006 = ''  
               IF NOT cl_null(g_bmgb2_d[l_ac].bmgc005) THEN
                  SELECT imaa006 INTO l_imaa006
                    FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_bmgb2_d[l_ac].bmgc005
                  IF NOT cl_null(g_bmgb2_d[l_ac].bmgc011) AND NOT cl_null(l_imaa006) THEN
                     CALL s_aimi190_get_convert(g_bmgb2_d[l_ac].bmgc005,g_bmgb2_d[l_ac].bmgc011,l_imaa006) RETURNING l_success,l_rate
                     IF l_success = FALSE THEN
                        LET g_bmgb2_d[l_ac].bmgc011 = g_bmgb2_d_t.bmgc011                                                                                                                   
                        NEXT FIELD bmgc011
                     END IF 
                  END IF
                  IF cl_null(l_imaa006) THEN 
                     CALL cl_err(l_imaa006,'abm-00021',1)
                     LET g_bmgb2_d[l_ac].bmgc011 = g_bmgb2_d_t.bmgc011                                                                                                                   
                     NEXT FIELD bmgc011 
                  END IF                     
               END IF              
            END IF   
                   
         ON ACTION controlp INFIELD bmgc004            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb2_d[l_ac].bmgc004             #給予default值          

            #給予arg
            LET g_qryparam.arg1 = g_bmga_m.bmga001
            LET g_qryparam.arg2 = g_bmga_m.bmga002
            CALL q_bmba001()                                #呼叫開窗

            LET g_bmgb2_d[l_ac].bmgc004 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bmgb2_d[l_ac].bmgc004 TO bmgc004            
            NEXT FIELD bmgc004        
 
         ON ACTION controlp INFIELD bmgc005
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb2_d[l_ac].bmgc005             #給予default值

            #給予arg

            CALL q_imaa001_2()                                #呼叫開窗

            LET g_bmgb2_d[l_ac].bmgc005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmgb2_d[l_ac].bmgc005 TO bmgc005              #顯示到畫面上

            NEXT FIELD bmgc005                          #返回原欄位

         ON ACTION controlp INFIELD bmgc006            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb2_d[l_ac].bmgc006             #給予default值          

            #給予arg
            LET g_qryparam.arg1 = "215" #應用分類
            CALL q_oocq002()                               #呼叫開窗

            LET g_bmgb2_d[l_ac].bmgc006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bmgb2_d[l_ac].bmgc006 TO bmgc006            
            NEXT FIELD bmgc006  
 

         ON ACTION controlp INFIELD bmgc007            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb2_d[l_ac].bmgc007             #給予default值          

            #給予arg
            LET g_qryparam.arg1 = "221" #應用分類
            CALL q_oocq002()                               #呼叫開窗

            LET g_bmgb2_d[l_ac].bmgc007 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bmgb2_d[l_ac].bmgc007 TO bmgc007            
            NEXT FIELD bmgc007 

         ON ACTION controlp INFIELD bmgc011           
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmgb2_d[l_ac].bmgc011             #給予default值          

            #給予arg

            CALL q_ooca001_1()                               #呼叫開窗

            LET g_bmgb2_d[l_ac].bmgc011 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bmgb2_d[l_ac].bmgc011 TO bmgc011            
            NEXT FIELD bmgc011
            
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmgb2_d[l_ac].* = g_bmgb2_d_t.*
               CLOSE abmm205_bcl1
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            LET l_rate = ''
            LET l_imaa006 = ''  
            IF NOT cl_null(g_bmgb2_d[l_ac].bmgc005) THEN
               SELECT imaa006 INTO l_imaa006
                 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmgb2_d[l_ac].bmgc005
               IF NOT cl_null(g_bmgb2_d[l_ac].bmgc011) AND NOT cl_null(l_imaa006) THEN
                  CALL s_aimi190_get_convert(g_bmgb2_d[l_ac].bmgc005,g_bmgb2_d[l_ac].bmgc011,l_imaa006) RETURNING l_success,l_rate
                  IF l_success = FALSE THEN                                                                                                                  
                     NEXT FIELD bmgc011
                  END IF 
               END IF
               IF cl_null(l_imaa006) THEN 
                  CALL cl_err(l_imaa006,'abm-00021',1)                                                                                                                  
                  NEXT FIELD bmgc011 
               END IF                     
            END IF              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_bmgb2_d[l_ac].bmgc004,-263,1)
               LET g_bmgb2_d[l_ac].* = g_bmgb2_d_t.*
            ELSE
            
               IF cl_null(g_bmgb2_d[l_ac].bmgc006) THEN 
                  LET g_bmgb2_d[l_ac].bmgc006 = ' '
               END IF  
               IF cl_null(g_bmgb2_d[l_ac].bmgc007) THEN 
                  LET g_bmgb2_d[l_ac].bmgc007 = ' '
               END IF 
               IF cl_null(g_bmgb2_d[l_ac].bmgc008) THEN 
                  LET g_bmgb2_d[l_ac].bmgc008 = ' '
               END IF 
               
               UPDATE bmgc_t SET (bmgc001,bmgc002,bmgc003,bmgc004,bmgc005,bmgc006,bmgc007,bmgc008,bmgc009,bmgc010,bmgc011) = 

(g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmgb2_d[l_ac].bmgc004,g_bmgb2_d[l_ac].bmgc005,g_bmgb2_d[l_ac].bmgc006,g_bmgb2_d

[l_ac].bmgc007,g_bmgb2_d[l_ac].bmgc008,g_bmgb2_d[l_ac].bmgc009,g_bmgb2_d[l_ac].bmgc010,g_bmgb2_d[l_ac].bmgc011)
                WHERE bmgcent = g_enterprise AND bmgcsite = g_site AND bmgc001 = g_bmga_m.bmga001 
                  AND bmgc002 = g_bmga_m.bmga002 
                  AND bmgc003 = g_bmga_m.bmga003 
                  AND bmgc004 = g_bmgb2_d_t.bmgc004 #項次   
                  AND bmgc005 = g_bmgb2_d_t.bmgc005  
                  AND bmgc006 = g_bmgb2_d_t.bmgc006  
                  AND bmgc007 = g_bmgb2_d_t.bmgc007  
                  AND bmgc008 = g_bmgb2_d_t.bmgc008                    

               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmgb_t",SQLCA.sqlcode,1)   
                  LET g_bmgb2_d[l_ac].* = g_bmgb2_d_t.*
               END IF
            END IF
            
         AFTER ROW
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmgb2_d[l_ac].* = g_bmgb2_d_t.*
               END IF
               CLOSE abmm205_bcl1
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            CLOSE abmm205_bcl1
            CALL s_transaction_end('Y','0')
              
         AFTER INPUT
              
      END INPUT
]]>
</point>
  <point name="insert.default" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      LET g_bmga_m.bmga004 = cl_get_current()]]>
</point>
  <point name="insert.define" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[  CALL g_bmgb2_d.clear() ]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[      IF cl_null(ps_keys[6]) THEN
         LET ps_keys[6] = ' '
      END IF
      IF cl_null(ps_keys[7]) THEN
         LET ps_keys[7] = ' '
      END IF
      IF cl_null(ps_keys[8]) THEN
         LET ps_keys[8] = ' '
      END IF]]>
</point>
  <point name="main.init" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   IF NOT cl_null(g_argv[1]) THEN
      LET g_site = g_argv[1]
   END IF]]>
</point>
  <point name="show.after" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[   LET l_ac_t = l_ac
   CALL abmm205_b_fill_1()
   LET l_ac = l_ac_t]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" order="" ver="1" cite_ver="" new="N" src="s" mark_hard="N">
<![CDATA[         DISPLAY ARRAY g_bmgb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL abmm205_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac

               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               CALL abmm205_idx_chk()
               LET g_current_page = 2
               
         END DISPLAY]]>
</point>
  <point name="global.memo" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmga001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmga001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.imaal003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.imaal003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.imaal003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.imaal004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.imaal004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.imaal004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmga002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmga002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.bmga002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmga003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmga003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.bmga003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmga004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmga004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.bmga004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmga005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmga005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.bmga005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgal005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmgal005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.bmgal005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgaownid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmgaownid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgaowndp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmgaowndp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgacrtid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmgacrtid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgacrtdp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmgacrtdp" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgacrtdt" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgamodid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.bmgamodid" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.bmgamoddt" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmgb004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmgb004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmgb005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmgb005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmgb006" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmgb006" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmgb007" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmgb007" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmgb008" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmgb008" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bmgb008" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmgb009" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmgb009" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bmgb009" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fetch.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.bmga001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.bmga001" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.imaal003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.imaal003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.imaal003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.imaal004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.imaal004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.imaal004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.bmga002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.bmga002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.bmga003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.bmga003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.bmga004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.bmga004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.bmga005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.bmga005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.bmgal005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.bmgal005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.bmgal005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.imaal003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.imaal004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.bmga002" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.bmga003" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.bmga004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.bmga005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.bmgal005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmgb004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmgb004" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmgb005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmgb005" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmgb006" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmgb006" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmgb007" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmgb007" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmgb008" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmgb008" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmgb009" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bmgb009" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmgb009" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmgb008" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmgb009" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="">
<![CDATA[]]>
</point>
  <section id="abmm205.b_fill" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION abmm205_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_bmgb_d.clear()    #g_bmgb_d 單頭及單身 
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF abmm205_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE bmgb004,'','',bmgb005,'','',bmgb006,'',bmgb007,'',bmgb008,bmgb009 FROM bmgb_t", 
             
                  " INNER JOIN bmga_t ON bmga001 = bmgb001 ",
                  " AND bmga002 = bmgb002 ",
 
                  " AND bmga003 = bmgb003 ",
 
 
                  #"",
                  
                  "",
                  " WHERE bmgbent=? AND bmgbsite=? AND bmgb001=? AND bmgb002=? AND bmgb003=?"
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmgb_t.bmgb004,bmgb_t.bmgb005,bmgb_t.bmgb006,bmgb_t.bmgb007,bmgb_t.bmgb008"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      PREPARE abmm205_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR abmm205_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_bmga_m.bmga001
                                               ,g_bmga_m.bmga002
 
                                               ,g_bmga_m.bmga003
 
 
                                               
      FOREACH b_fill_cs INTO g_bmgb_d[l_ac].bmgb004,g_bmgb_d[l_ac].bmgb004_desc,g_bmgb_d[l_ac].bmgb004_desc_desc, 
          g_bmgb_d[l_ac].bmgb005,g_bmgb_d[l_ac].bmgb005_desc,g_bmgb_d[l_ac].bmgb005_desc_desc,g_bmgb_d[l_ac].bmgb006, 
          g_bmgb_d[l_ac].bmgb006_desc,g_bmgb_d[l_ac].bmgb007,g_bmgb_d[l_ac].bmgb007_desc,g_bmgb_d[l_ac].bmgb008, 
          g_bmgb_d[l_ac].bmgb009
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec AND g_error_show = 1 THEN
            CALL cl_err( '', 9035, 1)
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_bmgb_d.deleteElement(g_bmgb_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abmm205_pb
 
   
END FUNCTION
]]>
</section>
  <section id="abmm205.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION abmm205_b_fill2(pi_idx)
   {<Local define>}
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   {</Local define>}
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL abmm205_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="abmm205.browser_fill" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abmm205_browser_fill(ps_page_action)
   {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmga_m.* TO NULL
   CALL g_bmgb_d.clear()        
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "bmga001"
                        ,",bmga002"
 
                        ,",bmga003"
 
 
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE bmga001 ",
                                    ",bmga002 ",
 
                                    ",bmga003 ",
 
 
                        " FROM bmga_t ",
                              " ",
                              " LEFT JOIN bmgb_t ON bmgbent = bmgaent AND bmgbsite = bmgasite AND bmga001 = bmgb001 AND bmga002 = bmgb002 AND bmga003 = bmgb003 ",
 
 
                              " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ", 
                              " ", 
                       " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND bmgbent = '" ||g_enterprise|| "' AND bmgbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE bmga001 ",
                                    ",bmga002 ",
 
                                    ",bmga003 ",
 
 
                        " FROM bmga_t ", 
                              " ",
                              " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                        "WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND ",l_wc CLIPPED
 
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
   
   #LET g_page_action = ps_page_action          # Keep Action
   
   IF ps_page_action = "F" OR
      ps_page_action = "P" OR
      ps_page_action = "N" OR
      ps_page_action = "L" THEN
      LET g_page_action = ps_page_action
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
            LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
         
      WHEN '/'
         LET g_pagestart = g_jump
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = 1
         END IF
         
   END CASE
  
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
      #依照bmga001,'',bmga002,bmga003,bmga004,bmga005 Browser欄位定義(取代原本bs_sql功能)
      LET l_sql_rank = "SELECT DISTINCT bmgastus,bmga001,'',bmga002,bmga003,bmga004,bmga005,DENSE_RANK() OVER(ORDER BY bmga001, 
          bmga002,bmga003 ",g_order,") AS RANK ",
                        " FROM bmga_t ",
                              " ",
                              " LEFT JOIN bmgb_t ON bmgbent = bmgaent AND bmgbsite = bmgasite AND bmga001 = bmgb001 AND bmga002 = bmgb002 AND bmga003 = bmgb003 ",
 
 
                              " LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                              " ",
                       " ",
                       " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND ",g_wc," AND ",g_wc2
   ELSE
      #單身無輸入資料
      LET l_sql_rank = "SELECT DISTINCT bmgastus,bmga001,'',bmga002,bmga003,bmga004,bmga005,DENSE_RANK() OVER(ORDER BY bmga001, 
          bmga002,bmga003 ",g_order,") AS RANK ",
                       " FROM bmga_t ",
                            "  ",
                            "  LEFT JOIN bmgal_t ON bmga001 = bmgal001 AND bmga002 = bmgal002 AND bmga003 = bmgal003 AND bmgal004 = '",g_lang,"' ",
                       " WHERE bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND ", g_wc
   END IF
   
   #定義翻頁CURSOR
   LET g_sql= "SELECT bmgastus,bmga001,'',bmga002,bmga003,bmga004,bmga005 FROM (",l_sql_rank,") WHERE ", 

              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
               
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
               
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_bmga001,g_browser[g_cnt].b_bmga001_desc, 
       g_browser[g_cnt].b_bmga002,g_browser[g_cnt].b_bmga003,g_browser[g_cnt].b_bmga004,g_browser[g_cnt].b_bmga005 

      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_bmga001
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_bmga001_desc = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_bmga001_desc
 
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="abmm205.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION abmm205_browser_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY bmga001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL abmm205_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="abmm205.construct" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION abmm205_construct()
 
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmga_m.* TO NULL
   CALL g_bmgb_d.clear()        
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bmga001,imaal003,imaal004,bmga002,bmga003,bmga004,bmga005,bmgal005,bmgaownid, 
          bmgaowndp,bmgacrtid,bmgacrtdp,bmgacrtdt,bmgamodid,bmgamoddt
 
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<bmgaownid>>----
         #ON ACTION controlp INFIELD bmgaownid
         #   CALL q_common('bmga_t','bmgaownid',TRUE,FALSE,g_bmga_m.bmgaownid) RETURNING ls_return
         #   DISPLAY ls_return TO bmgaownid
         #   NEXT FIELD bmgaownid  
         #
         ##----<<bmgaowndp>>----
         #ON ACTION controlp INFIELD bmgaowndp
         #   CALL q_common('bmga_t','bmgaowndp',TRUE,FALSE,g_bmga_m.bmgaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO bmgaowndp
         #   NEXT FIELD bmgaowndp
         #
         ##----<<bmgacrtid>>----
         #ON ACTION controlp INFIELD bmgacrtid
         #   CALL q_common('bmga_t','bmgacrtid',TRUE,FALSE,g_bmga_m.bmgacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO bmgacrtid
         #   NEXT FIELD bmgacrtid
         #
         ##----<<bmgacrtdp>>----
         #ON ACTION controlp INFIELD bmgacrtdp
         #   CALL q_common('bmga_t','bmgacrtdp',TRUE,FALSE,g_bmga_m.bmgacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO bmgacrtdp
         #   NEXT FIELD bmgacrtdp
         #
         ##----<<bmgamodid>>----
         #ON ACTION controlp INFIELD bmgamodid
         #   CALL q_common('bmga_t','bmgamodid',TRUE,FALSE,g_bmga_m.bmgamodid) RETURNING ls_return
         #   DISPLAY ls_return TO bmgamodid
         #   NEXT FIELD bmgamodid
         #
         ##----<<bmgacnfid>>----
         ##ON ACTION controlp INFIELD bmgacnfid
         ##   CALL q_common('bmga_t','bmgacnfid',TRUE,FALSE,g_bmga_m.bmgacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO bmgacnfid
         ##   NEXT FIELD bmgacnfid
         #
         ##----<<bmgapstid>>----
         ##ON ACTION controlp INFIELD bmgapstid
         ##   CALL q_common('bmga_t','bmgapstid',TRUE,FALSE,g_bmga_m.bmgapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO bmgapstid
         ##   NEXT FIELD bmgapstid
         
         ##----<<bmgacrtdt>>----
         AFTER FIELD bmgacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmgamoddt>>----
         AFTER FIELD bmgamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmgacnfdt>>----
         #AFTER FIELD bmgacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmgapstdt>>----
         #AFTER FIELD bmgapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
            
         #一般欄位開窗相關處理    
         #---------------------------<  Master  >---------------------------
         #----<<bmga001>>----
         #Ctrlp:construct.c.bmga001
         ON ACTION controlp INFIELD bmga001
            #add-point:ON ACTION controlp INFIELD bmga001
            {<point name="construct.c.bmga001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmga001
            #add-point:BEFORE FIELD bmga001
            {<point name="construct.b.bmga001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga001
            
            #add-point:AFTER FIELD bmga001
            {<point name="construct.a.bmga001" />}
            #END add-point
            
 
         #----<<imaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="construct.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="construct.a.imaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="construct.c.imaal003" />}
            #END add-point
 
         #----<<imaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="construct.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="construct.a.imaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="construct.c.imaal004" />}
            #END add-point
 
         #----<<bmga002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga002
            #add-point:BEFORE FIELD bmga002
            {<point name="construct.b.bmga002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga002
            
            #add-point:AFTER FIELD bmga002
            {<point name="construct.a.bmga002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmga002
         ON ACTION controlp INFIELD bmga002
            #add-point:ON ACTION controlp INFIELD bmga002
            {<point name="construct.c.bmga002" />}
            #END add-point
 
         #----<<bmga003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga003
            #add-point:BEFORE FIELD bmga003
            {<point name="construct.b.bmga003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga003
            
            #add-point:AFTER FIELD bmga003
            {<point name="construct.a.bmga003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmga003
         ON ACTION controlp INFIELD bmga003
            #add-point:ON ACTION controlp INFIELD bmga003
            {<point name="construct.c.bmga003" />}
            #END add-point
 
         #----<<bmga004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga004
            #add-point:BEFORE FIELD bmga004
            {<point name="construct.b.bmga004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga004
            
            #add-point:AFTER FIELD bmga004
            {<point name="construct.a.bmga004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmga004
         ON ACTION controlp INFIELD bmga004
            #add-point:ON ACTION controlp INFIELD bmga004
            {<point name="construct.c.bmga004" />}
            #END add-point
 
         #----<<bmga005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga005
            #add-point:BEFORE FIELD bmga005
            {<point name="construct.b.bmga005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga005
            
            #add-point:AFTER FIELD bmga005
            {<point name="construct.a.bmga005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmga005
         ON ACTION controlp INFIELD bmga005
            #add-point:ON ACTION controlp INFIELD bmga005
            {<point name="construct.c.bmga005" />}
            #END add-point
 
         #----<<bmgal005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgal005
            #add-point:BEFORE FIELD bmgal005
            {<point name="construct.b.bmgal005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgal005
            
            #add-point:AFTER FIELD bmgal005
            {<point name="construct.a.bmgal005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmgal005
         ON ACTION controlp INFIELD bmgal005
            #add-point:ON ACTION controlp INFIELD bmgal005
            {<point name="construct.c.bmgal005" />}
            #END add-point
 
         #----<<bmgaownid>>----
         #Ctrlp:construct.c.bmgaownid
         ON ACTION controlp INFIELD bmgaownid
            #add-point:ON ACTION controlp INFIELD bmgaownid
            {<point name="construct.c.bmgaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgaownid
            #add-point:BEFORE FIELD bmgaownid
            {<point name="construct.b.bmgaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgaownid
            
            #add-point:AFTER FIELD bmgaownid
            {<point name="construct.a.bmgaownid" />}
            #END add-point
            
 
         #----<<bmgaowndp>>----
         #Ctrlp:construct.c.bmgaowndp
         ON ACTION controlp INFIELD bmgaowndp
            #add-point:ON ACTION controlp INFIELD bmgaowndp
            {<point name="construct.c.bmgaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgaowndp
            #add-point:BEFORE FIELD bmgaowndp
            {<point name="construct.b.bmgaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgaowndp
            
            #add-point:AFTER FIELD bmgaowndp
            {<point name="construct.a.bmgaowndp" />}
            #END add-point
            
 
         #----<<bmgacrtid>>----
         #Ctrlp:construct.c.bmgacrtid
         ON ACTION controlp INFIELD bmgacrtid
            #add-point:ON ACTION controlp INFIELD bmgacrtid
            {<point name="construct.c.bmgacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgacrtid
            #add-point:BEFORE FIELD bmgacrtid
            {<point name="construct.b.bmgacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgacrtid
            
            #add-point:AFTER FIELD bmgacrtid
            {<point name="construct.a.bmgacrtid" />}
            #END add-point
            
 
         #----<<bmgacrtdp>>----
         #Ctrlp:construct.c.bmgacrtdp
         ON ACTION controlp INFIELD bmgacrtdp
            #add-point:ON ACTION controlp INFIELD bmgacrtdp
            {<point name="construct.c.bmgacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgacrtdp
            #add-point:BEFORE FIELD bmgacrtdp
            {<point name="construct.b.bmgacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgacrtdp
            
            #add-point:AFTER FIELD bmgacrtdp
            {<point name="construct.a.bmgacrtdp" />}
            #END add-point
            
 
         #----<<bmgacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgacrtdt
            #add-point:BEFORE FIELD bmgacrtdt
            {<point name="construct.b.bmgacrtdt" />}
            #END add-point
 
         #----<<bmgamodid>>----
         #Ctrlp:construct.c.bmgamodid
         ON ACTION controlp INFIELD bmgamodid
            #add-point:ON ACTION controlp INFIELD bmgamodid
            {<point name="construct.c.bmgamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgamodid
            #add-point:BEFORE FIELD bmgamodid
            {<point name="construct.b.bmgamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgamodid
            
            #add-point:AFTER FIELD bmgamodid
            {<point name="construct.a.bmgamodid" />}
            #END add-point
            
 
         #----<<bmgamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgamoddt
            #add-point:BEFORE FIELD bmgamoddt
            {<point name="construct.b.bmgamoddt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON bmgb004,bmgb005,bmgb006,bmgb007,bmgb008,bmgb009
           FROM s_detail1[1].bmgb004,s_detail1[1].bmgb005,s_detail1[1].bmgb006,s_detail1[1].bmgb007, 
               s_detail1[1].bmgb008,s_detail1[1].bmgb009
                      
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<bmgb004>>----
         #Ctrlp:construct.c.page1.bmgb004
         ON ACTION controlp INFIELD bmgb004
            #add-point:ON ACTION controlp INFIELD bmgb004
            {<point name="construct.c.page1.bmgb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb004
            #add-point:BEFORE FIELD bmgb004
            {<point name="construct.b.page1.bmgb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb004
            
            #add-point:AFTER FIELD bmgb004
            {<point name="construct.a.page1.bmgb004" />}
            #END add-point
            
 
         #----<<bmgb005>>----
         #Ctrlp:construct.c.page1.bmgb005
         ON ACTION controlp INFIELD bmgb005
            #add-point:ON ACTION controlp INFIELD bmgb005
            {<point name="construct.c.page1.bmgb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb005
            #add-point:BEFORE FIELD bmgb005
            {<point name="construct.b.page1.bmgb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb005
            
            #add-point:AFTER FIELD bmgb005
            {<point name="construct.a.page1.bmgb005" />}
            #END add-point
            
 
         #----<<bmgb006>>----
         #Ctrlp:construct.c.page1.bmgb006
         ON ACTION controlp INFIELD bmgb006
            #add-point:ON ACTION controlp INFIELD bmgb006
            {<point name="construct.c.page1.bmgb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb006
            #add-point:BEFORE FIELD bmgb006
            {<point name="construct.b.page1.bmgb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb006
            
            #add-point:AFTER FIELD bmgb006
            {<point name="construct.a.page1.bmgb006" />}
            #END add-point
            
 
         #----<<bmgb007>>----
         #Ctrlp:construct.c.page1.bmgb007
         ON ACTION controlp INFIELD bmgb007
            #add-point:ON ACTION controlp INFIELD bmgb007
            {<point name="construct.c.page1.bmgb007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb007
            #add-point:BEFORE FIELD bmgb007
            {<point name="construct.b.page1.bmgb007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb007
            
            #add-point:AFTER FIELD bmgb007
            {<point name="construct.a.page1.bmgb007" />}
            #END add-point
            
 
         #----<<bmgb008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb008
            #add-point:BEFORE FIELD bmgb008
            {<point name="construct.b.page1.bmgb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb008
            
            #add-point:AFTER FIELD bmgb008
            {<point name="construct.a.page1.bmgb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmgb008
         ON ACTION controlp INFIELD bmgb008
            #add-point:ON ACTION controlp INFIELD bmgb008
            {<point name="construct.c.page1.bmgb008" />}
            #END add-point
 
         #----<<bmgb009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb009
            #add-point:BEFORE FIELD bmgb009
            {<point name="construct.b.page1.bmgb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb009
            
            #add-point:AFTER FIELD bmgb009
            {<point name="construct.a.page1.bmgb009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmgb009
         ON ACTION controlp INFIELD bmgb009
            #add-point:ON ACTION controlp INFIELD bmgb009
            {<point name="construct.c.page1.bmgb009" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      ON ACTION qbe_select     #條件查詢
#saki         CALL cl_qbe_list() RETURNING lc_qbe_sn
#saki         CALL cl_qbe_display_condition(lc_qbe_sn)
 
      ON ACTION qbe_save       #條件儲存
#saki         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="abmm205.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION abmm205_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " bmga001 = '", g_argv[1], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bmga002 = '", g_argv[02], "' AND "
   END IF
 
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " bmga003 = '", g_argv[03], "' AND "
   END IF
 
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="abmm205.delete" ver="1" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION abmm205_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_bmga_m.bmga001 IS NULL
   OR g_bmga_m.bmga002 IS NULL
 
   OR g_bmga_m.bmga003 IS NULL
 
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
    SELECT UNIQUE bmga001,bmga002,bmga003,bmga004,bmga005,bmgaownid,bmgaowndp,bmgacrtid,bmgacrtdp,bmgacrtdt, 
        bmgamodid,bmgamoddt
 INTO g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgaownid, 
     g_bmga_m.bmgaowndp,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtdp,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid, 
     g_bmga_m.bmgamoddt
 FROM bmga_t
 WHERE bmgaent = g_enterprise AND bmgasite = g_site AND bmga001 = g_bmga_m.bmga001 AND bmga002 = g_bmga_m.bmga002 AND bmga003 = g_bmga_m.bmga003
   
   LET g_master_multi_table_t.bmgal001 = g_bmga_m.bmga001
LET g_master_multi_table_t.bmgal002 = g_bmga_m.bmga002
LET g_master_multi_table_t.bmgal003 = g_bmga_m.bmga003
LET g_master_multi_table_t.bmgal005 = g_bmga_m.bmgal005
 
 
   CALL abmm205_show()
   
   CALL s_transaction_begin()
 
   OPEN abmm205_cl USING g_enterprise, g_site,g_bmga_m.bmga001
                                                       ,g_bmga_m.bmga002
 
                                                       ,g_bmga_m.bmga003
 
 
   IF STATUS THEN
      CALL cl_err("OPEN abmm205_cl:", STATUS, 1)
      CLOSE abmm205_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   FETCH abmm205_cl INTO g_bmga_m.bmga001,g_bmga_m.imaal003,g_bmga_m.imaal004,g_bmga_m.bmga002,g_bmga_m.bmga003, 
       g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgal005,g_bmga_m.bmgaownid,g_bmga_m.bmgaownid_desc, 
       g_bmga_m.bmgaowndp,g_bmga_m.bmgaowndp_desc,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtid_desc,g_bmga_m.bmgacrtdp, 
       g_bmga_m.bmgacrtdp_desc,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid,g_bmga_m.bmgamodid_desc,g_bmga_m.bmgamoddt  
                    #鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmga_m.bmga001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      INITIALIZE g_doc.* TO NULL         
      LET g_doc.column1 = "bmga001"       
      LET g_doc.value1 = g_bmga_m.bmga001     
      CALL cl_del_doc()   
  
      #資料備份
      LET g_bmga001_t = g_bmga_m.bmga001
      LET g_bmga002_t = g_bmga_m.bmga002
 
      LET g_bmga003_t = g_bmga_m.bmga003
 
 
 
      DELETE FROM bmga_t
       WHERE bmgaent = g_enterprise AND bmgasite = g_site AND bmga001 = g_bmga_m.bmga001
         AND bmga002 = g_bmga_m.bmga002
 
         AND bmga003 = g_bmga_m.bmga003
 
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_bmga_m.bmga001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM bmgb_t
       WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND bmgb001 = g_bmga_m.bmga001
         AND bmgb002 = g_bmga_m.bmga002
 
         AND bmgb003 = g_bmga_m.bmga003
 
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmgb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
 
                                                               
      CLEAR FORM
      CALL g_bmgb_d.clear() 
 
     
      CALL abmm205_ui_browser_refresh()  
      CALL abmm205_ui_headershow()  
      CALL abmm205_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL abmm205_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL abmm205_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.bmgal001
   LET l_field_keys[01] = 'bmgal001'
   LET l_var_keys_bak[02] = g_master_multi_table_t.bmgal002
   LET l_field_keys[02] = 'bmgal002'
   LET l_var_keys_bak[03] = g_master_multi_table_t.bmgal003
   LET l_field_keys[03] = 'bmgal003'
   LET l_var_keys_bak[04] = g_dlang
   LET l_field_keys[04] = 'bmgal004'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'bmgal_t')
 
      
      #單身多語言刪除
      
 
 
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE abmm205_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_bmga_m.bmga001,'D')
    
END FUNCTION
]]>
</section>
  <section id="abmm205.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION abmm205_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM bmgb_t
       WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND
         bmgb001 = ps_keys_bak[1] AND bmgb002 = ps_keys_bak[2] AND bmgb003 = ps_keys_bak[3] AND bmgb004 = ps_keys_bak[4] AND bmgb005 = ps_keys_bak[5] AND bmgb006 = ps_keys_bak[6] AND bmgb007 = ps_keys_bak[7] AND bmgb008 = ps_keys_bak[8]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="abmm205.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(版次:1) Build-000234
#+ 
#+ Filename...: abmm205
#+ Description: 群組替代料維護作業
#+ Creator....: 02587(2013/09/10)
#+ Modifier...: 02587(2013/09/16)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="abmm205.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION abmm205_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bmgb_t.*
 
 
   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abmm205_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE abmm205_detail AS ",
                "SELECT * FROM bmgb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmm205_detail SELECT * FROM bmgb_t 
                                         WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND bmgb001 = g_bmga001_t
                                         AND bmgb002 = g_bmga002_t
 
                                         AND bmgb003 = g_bmga003_t
 
 
   
   #將key修正為調整後   
   UPDATE abmm205_detail 
      #更新key欄位
      SET bmgb001 = g_bmga_m.bmga001
          , bmgb002 = g_bmga_m.bmga002
 
          , bmgb003 = g_bmga_m.bmga003
 
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO bmgb_t SELECT * FROM abmm205_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmm205_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bmga001_t = g_bmga_m.bmga001
   LET g_bmga002_t = g_bmga_m.bmga002
 
   LET g_bmga003_t = g_bmga_m.bmga003
 
 
   
   DROP TABLE abmm205_detail
   
END FUNCTION
]]>
</section>
  <section id="abmm205.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 單身reference detail_show
PRIVATE FUNCTION abmm205_detail_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   LET l_ac_t = l_ac
 
   LET l_ac = l_ac_t
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="abmm205.fetch" ver="1" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abmm205_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bmga_m.bmga001 = g_browser[g_current_idx].b_bmga001
   LET g_bmga_m.bmga002 = g_browser[g_current_idx].b_bmga002
 
   LET g_bmga_m.bmga003 = g_browser[g_current_idx].b_bmga003
 
 
   
   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE bmga001,bmga002,bmga003,bmga004,bmga005,bmgaownid,bmgaowndp,bmgacrtid,bmgacrtdp,bmgacrtdt, 
        bmgamodid,bmgamoddt
 INTO g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgaownid, 
     g_bmga_m.bmgaowndp,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtdp,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid, 
     g_bmga_m.bmgamoddt
 FROM bmga_t
 WHERE bmgaent = g_enterprise AND bmgasite = g_site AND bmga001 = g_bmga_m.bmga001 AND bmga002 = g_bmga_m.bmga002 AND bmga003 = g_bmga_m.bmga003
   IF SQLCA.sqlcode THEN
      CALL cl_err("bmga_t",SQLCA.sqlcode,1)
      INITIALIZE g_bmga_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL abmm205_show()
 
END FUNCTION
]]>
</section>
  <section id="abmm205.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION abmm205_fill_chk(ps_idx)
   {<Local define>}
   DEFINE ps_idx        LIKE type_t.chr10
   {</Local define>}
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      #add-point:fill_chk段define
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="abmm205.filter" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION abmm205_filter()
   {<Local define>}
   {</Local define>}
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON bmga001,bmga002,bmga003,bmga004,bmga005
                          FROM s_browse[1].b_bmga001,s_browse[1].b_bmga002,s_browse[1].b_bmga003,s_browse[1].b_bmga004, 
                              s_browse[1].b_bmga005
 
         BEFORE CONSTRUCT
#saki            CALL cl_qbe_init()
               DISPLAY abmm205_filter_parser('bmga001') TO s_browse[1].b_bmga001
            DISPLAY abmm205_filter_parser('bmga002') TO s_browse[1].b_bmga002
            DISPLAY abmm205_filter_parser('bmga003') TO s_browse[1].b_bmga003
            DISPLAY abmm205_filter_parser('bmga004') TO s_browse[1].b_bmga004
            DISPLAY abmm205_filter_parser('bmga005') TO s_browse[1].b_bmga005
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL abmm205_filter_show('bmga001')
   CALL abmm205_filter_show('bmga002')
   CALL abmm205_filter_show('bmga003')
   CALL abmm205_filter_show('bmga004')
   CALL abmm205_filter_show('bmga005')
 
END FUNCTION
]]>
</section>
  <section id="abmm205.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION abmm205_filter_parser(ps_field)
   {<Local define>}
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   {</Local define>}
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="abmm205.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION abmm205_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
     
   LET ls_name = "formonly.b_", ps_field
   
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
   
   #顯示資料組合
   LET ls_condition = abmm205_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
   
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
   
END FUNCTION
]]>
</section>
  <section id="abmm205.global" ver="1" status="" src="s">
<![CDATA[{<point name="global.memo" />}
    
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
{<Module define>}
 
#單頭 type 宣告
PRIVATE type type_g_bmga_m        RECORD
       bmga001 LIKE bmga_t.bmga001, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   bmga002 LIKE bmga_t.bmga002, 
   bmga003 LIKE bmga_t.bmga003, 
   bmga004 LIKE bmga_t.bmga004, 
   bmga005 LIKE bmga_t.bmga005, 
   bmgal005 LIKE bmgal_t.bmgal005, 
   bmgaownid LIKE bmga_t.bmgaownid, 
   bmgaownid_desc LIKE type_t.chr80, 
   bmgaowndp LIKE bmga_t.bmgaowndp, 
   bmgaowndp_desc LIKE type_t.chr80, 
   bmgacrtid LIKE bmga_t.bmgacrtid, 
   bmgacrtid_desc LIKE type_t.chr80, 
   bmgacrtdp LIKE bmga_t.bmgacrtdp, 
   bmgacrtdp_desc LIKE type_t.chr80, 
   bmgacrtdt DATETIME YEAR TO SECOND, 
   bmgamodid LIKE bmga_t.bmgamodid, 
   bmgamodid_desc LIKE type_t.chr80, 
   bmgamoddt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bmgb_d        RECORD
       bmgb004 LIKE bmgb_t.bmgb004, 
   bmgb004_desc LIKE type_t.chr500, 
   bmgb004_desc_desc LIKE type_t.chr500, 
   bmgb005 LIKE bmgb_t.bmgb005, 
   bmgb005_desc LIKE type_t.chr500, 
   bmgb005_desc_desc LIKE type_t.chr500, 
   bmgb006 LIKE bmgb_t.bmgb006, 
   bmgb006_desc LIKE type_t.chr500, 
   bmgb007 LIKE bmgb_t.bmgb007, 
   bmgb007_desc LIKE type_t.chr500, 
   bmgb008 LIKE bmgb_t.bmgb008, 
   bmgb009 LIKE bmgb_t.bmgb009
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_bmga_m          type_g_bmga_m
DEFINE g_bmga_m_t        type_g_bmga_m
 
   DEFINE g_bmga001_t LIKE bmga_t.bmga001
DEFINE g_bmga002_t LIKE bmga_t.bmga002
DEFINE g_bmga003_t LIKE bmga_t.bmga003
 
 
DEFINE g_bmgb_d          DYNAMIC ARRAY OF type_g_bmgb_d
DEFINE g_bmgb_d_t        type_g_bmgb_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmga001 LIKE bmga_t.bmga001,
   b_bmga001_desc LIKE type_t.chr80,
      b_bmga002 LIKE bmga_t.bmga002,
      b_bmga003 LIKE bmga_t.bmga003,
      b_bmga004 LIKE bmga_t.bmga004,
      b_bmga005 LIKE bmga_t.bmga005
         #,rank           LIKE type_t.num10
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmga001 LIKE bmga_t.bmga001,
   b_bmga001_desc LIKE type_t.chr80,
      b_bmga002 LIKE bmga_t.bmga002,
      b_bmga003 LIKE bmga_t.bmga003,
      b_bmga004 LIKE bmga_t.bmga004,
      b_bmga005 LIKE bmga_t.bmga005
         #,rank           LIKE type_t.num10
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      bmgal001 LIKE bmgal_t.bmgal001,
      bmgal002 LIKE bmgal_t.bmgal002,
      bmgal003 LIKE bmgal_t.bmgal003,
      bmgal005 LIKE bmgal_t.bmgal005
      END RECORD
#無單身append欄位定義
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
  
{</Module define>}
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="abmm205.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION abmm205_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmgb_d.getLength() THEN
         LET g_detail_idx = g_bmgb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmgb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmgb_d.getLength() TO FORMONLY.cnt
   END IF
   
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="abmm205.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abmm205_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL abmm205_default_search()
    
END FUNCTION
]]>
</section>
  <section id="abmm205.input" ver="1" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION abmm205_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   {</Local define>}
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT bmgb004,'','',bmgb005,'','',bmgb006,'',bmgb007,'',bmgb008,bmgb009 FROM  
       bmgb_t WHERE bmgbent=? AND bmgbsite=? AND bmgb001=? AND bmgb002=? AND bmgb003=? AND bmgb004=?  
       AND bmgb005=? AND bmgb006=? AND bmgb007=? AND bmgb008=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm205_bcl CURSOR FROM g_forupd_sql
   
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abmm205_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL abmm205_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_bmga_m.bmga001,g_bmga_m.imaal003,g_bmga_m.imaal004,g_bmga_m.bmga002,g_bmga_m.bmga003, 
       g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgal005
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="abmm205.input.body" ver="1" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmgb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmgb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmm205_b_fill()
            LET g_rec_b = g_bmgb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmm205_cl USING g_enterprise, g_site,g_bmga_m.bmga001
                                                                ,g_bmga_m.bmga002
 
                                                                ,g_bmga_m.bmga003
 
 
            IF STATUS THEN
               CALL cl_err("OPEN abmm205_cl:", STATUS, 1)
               CLOSE abmm205_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmgb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmgb_d[l_ac].bmgb004 IS NOT NULL
               AND g_bmgb_d[l_ac].bmgb005 IS NOT NULL
 
               AND g_bmgb_d[l_ac].bmgb006 IS NOT NULL
 
               AND g_bmgb_d[l_ac].bmgb007 IS NOT NULL
 
               AND g_bmgb_d[l_ac].bmgb008 IS NOT NULL
 
 
            THEN
               LET l_cmd='u'
               LET g_bmgb_d_t.* = g_bmgb_d[l_ac].*  #BACKUP
               CALL abmm205_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL abmm205_set_no_entry_b(l_cmd)
               IF NOT abmm205_lock_b("bmgb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmm205_bcl INTO g_bmgb_d[l_ac].bmgb004,g_bmgb_d[l_ac].bmgb004_desc,g_bmgb_d[l_ac].bmgb004_desc_desc, 
                      g_bmgb_d[l_ac].bmgb005,g_bmgb_d[l_ac].bmgb005_desc,g_bmgb_d[l_ac].bmgb005_desc_desc, 
                      g_bmgb_d[l_ac].bmgb006,g_bmgb_d[l_ac].bmgb006_desc,g_bmgb_d[l_ac].bmgb007,g_bmgb_d[l_ac].bmgb007_desc, 
                      g_bmgb_d[l_ac].bmgb008,g_bmgb_d[l_ac].bmgb009
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_bmgb_d_t.bmgb004,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmm205_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmgb_d[l_ac].* TO NULL 
                  LET g_bmgb_d[l_ac].bmgb009 = "N"
 
 
            LET g_bmgb_d_t.* = g_bmgb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmm205_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmm205_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmgb_d[li_reproduce_target].* = g_bmgb_d[li_reproduce].*
 
               LET g_bmgb_d[li_reproduce_target].bmgb004 = NULL
               LET g_bmgb_d[li_reproduce_target].bmgb005 = NULL
 
               LET g_bmgb_d[li_reproduce_target].bmgb006 = NULL
 
               LET g_bmgb_d[li_reproduce_target].bmgb007 = NULL
 
               LET g_bmgb_d[li_reproduce_target].bmgb008 = NULL
 
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmgb_t 
             WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND bmgb001 = g_bmga_m.bmga001
               AND bmgb002 = g_bmga_m.bmga002
 
               AND bmgb003 = g_bmga_m.bmga003
 
 
               AND bmgb004 = g_bmgb_d[l_ac].bmgb004
               AND bmgb005 = g_bmgb_d[l_ac].bmgb005
 
               AND bmgb006 = g_bmgb_d[l_ac].bmgb006
 
               AND bmgb007 = g_bmgb_d[l_ac].bmgb007
 
               AND bmgb008 = g_bmgb_d[l_ac].bmgb008
 
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmga_m.bmga001
               LET gs_keys[2] = g_bmga_m.bmga002
               LET gs_keys[3] = g_bmga_m.bmga003
               LET gs_keys[4] = g_bmgb_d[g_detail_idx].bmgb004
               LET gs_keys[5] = g_bmgb_d[g_detail_idx].bmgb005
               LET gs_keys[6] = g_bmgb_d[g_detail_idx].bmgb006
               LET gs_keys[7] = g_bmgb_d[g_detail_idx].bmgb007
               LET gs_keys[8] = g_bmgb_d[g_detail_idx].bmgb008
               CALL abmm205_insert_b('bmgb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmgb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmgb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmm205_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmgb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmgb_d.deleteElement(l_ac)
               NEXT FIELD bmgb004
            END IF
         
            IF g_bmgb_d[l_ac].bmgb004 IS NOT NULL
               AND g_bmgb_d_t.bmgb005 IS NOT NULL
 
               AND g_bmgb_d_t.bmgb006 IS NOT NULL
 
               AND g_bmgb_d_t.bmgb007 IS NOT NULL
 
               AND g_bmgb_d_t.bmgb008 IS NOT NULL
 
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM bmgb_t
                WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND bmgb001 = g_bmga_m.bmga001 AND
                                          bmgb002 = g_bmga_m.bmga002 AND
 
                                          bmgb003 = g_bmga_m.bmga003 AND
 
 
                      bmgb004 = g_bmgb_d_t.bmgb004
                  AND bmgb005 = g_bmgb_d_t.bmgb005
 
                  AND bmgb006 = g_bmgb_d_t.bmgb006
 
                  AND bmgb007 = g_bmgb_d_t.bmgb007
 
                  AND bmgb008 = g_bmgb_d_t.bmgb008
 
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmgb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmm205_bcl
               LET l_count = g_bmgb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmga_m.bmga001
               LET gs_keys[2] = g_bmga_m.bmga002
               LET gs_keys[3] = g_bmga_m.bmga003
               LET gs_keys[4] = g_bmgb_d[g_detail_idx].bmgb004
               LET gs_keys[5] = g_bmgb_d[g_detail_idx].bmgb005
               LET gs_keys[6] = g_bmgb_d[g_detail_idx].bmgb006
               LET gs_keys[7] = g_bmgb_d[g_detail_idx].bmgb007
               LET gs_keys[8] = g_bmgb_d[g_detail_idx].bmgb008
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL abmm205_delete_b('bmgb_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<bmgb004>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmgb004
            
            #add-point:AFTER FIELD bmgb004
            {<point name="input.a.page1.bmgb004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb004
            #add-point:BEFORE FIELD bmgb004
            {<point name="input.b.page1.bmgb004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmgb004
            #add-point:ON CHANGE bmgb004
            {<point name="input.g.page1.bmgb004" />}
            #END add-point
 
         #----<<bmgb005>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmgb005
            
            #add-point:AFTER FIELD bmgb005
            {<point name="input.a.page1.bmgb005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb005
            #add-point:BEFORE FIELD bmgb005
            {<point name="input.b.page1.bmgb005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmgb005
            #add-point:ON CHANGE bmgb005
            {<point name="input.g.page1.bmgb005" />}
            #END add-point
 
         #----<<bmgb006>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmgb006
            
            #add-point:AFTER FIELD bmgb006
            {<point name="input.a.page1.bmgb006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb006
            #add-point:BEFORE FIELD bmgb006
            {<point name="input.b.page1.bmgb006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmgb006
            #add-point:ON CHANGE bmgb006
            {<point name="input.g.page1.bmgb006" />}
            #END add-point
 
         #----<<bmgb007>>----
         #此段落由子樣板a02產生
         AFTER FIELD bmgb007
            
            #add-point:AFTER FIELD bmgb007
            {<point name="input.a.page1.bmgb007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb007
            #add-point:BEFORE FIELD bmgb007
            {<point name="input.b.page1.bmgb007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmgb007
            #add-point:ON CHANGE bmgb007
            {<point name="input.g.page1.bmgb007" />}
            #END add-point
 
         #----<<bmgb008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb008
            #add-point:BEFORE FIELD bmgb008
            {<point name="input.b.page1.bmgb008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb008
            
            #add-point:AFTER FIELD bmgb008
            {<point name="input.a.page1.bmgb008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmgb008
            #add-point:ON CHANGE bmgb008
            {<point name="input.g.page1.bmgb008" />}
            #END add-point
 
         #----<<bmgb009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgb009
            #add-point:BEFORE FIELD bmgb009
            {<point name="input.b.page1.bmgb009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgb009
            
            #add-point:AFTER FIELD bmgb009
            {<point name="input.a.page1.bmgb009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmgb009
            #add-point:ON CHANGE bmgb009
            {<point name="input.g.page1.bmgb009" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<bmgb004>>----
         #Ctrlp:input.c.page1.bmgb004
         ON ACTION controlp INFIELD bmgb004
            #add-point:ON ACTION controlp INFIELD bmgb004
            {<point name="input.c.page1.bmgb004" />}
            #END add-point
 
         #----<<bmgb005>>----
         #Ctrlp:input.c.page1.bmgb005
         ON ACTION controlp INFIELD bmgb005
            #add-point:ON ACTION controlp INFIELD bmgb005
            {<point name="input.c.page1.bmgb005" />}
            #END add-point
 
         #----<<bmgb006>>----
         #Ctrlp:input.c.page1.bmgb006
         ON ACTION controlp INFIELD bmgb006
            #add-point:ON ACTION controlp INFIELD bmgb006
            {<point name="input.c.page1.bmgb006" />}
            #END add-point
 
         #----<<bmgb007>>----
         #Ctrlp:input.c.page1.bmgb007
         ON ACTION controlp INFIELD bmgb007
            #add-point:ON ACTION controlp INFIELD bmgb007
            {<point name="input.c.page1.bmgb007" />}
            #END add-point
 
         #----<<bmgb008>>----
         #Ctrlp:input.c.page1.bmgb008
         ON ACTION controlp INFIELD bmgb008
            #add-point:ON ACTION controlp INFIELD bmgb008
            {<point name="input.c.page1.bmgb008" />}
            #END add-point
 
         #----<<bmgb009>>----
         #Ctrlp:input.c.page1.bmgb009
         ON ACTION controlp INFIELD bmgb009
            #add-point:ON ACTION controlp INFIELD bmgb009
            {<point name="input.c.page1.bmgb009" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmgb_d[l_ac].* = g_bmgb_d_t.*
               CLOSE abmm205_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_bmgb_d[l_ac].bmgb004,-263,1)
               LET g_bmgb_d[l_ac].* = g_bmgb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE bmgb_t SET (bmgb001,bmgb002,bmgb003,bmgb004,bmgb005,bmgb006,bmgb007,bmgb008,bmgb009) = (g_bmga_m.bmga001, 
                   g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmgb_d[l_ac].bmgb004,g_bmgb_d[l_ac].bmgb005,g_bmgb_d[l_ac].bmgb006, 
                   g_bmgb_d[l_ac].bmgb007,g_bmgb_d[l_ac].bmgb008,g_bmgb_d[l_ac].bmgb009)
                WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND bmgb001 = g_bmga_m.bmga001 
                  AND bmgb002 = g_bmga_m.bmga002 
 
                  AND bmgb003 = g_bmga_m.bmga003 
 
 
                  AND bmgb004 = g_bmgb_d_t.bmgb004 #項次   
                  AND bmgb005 = g_bmgb_d_t.bmgb005  
 
                  AND bmgb006 = g_bmgb_d_t.bmgb006  
 
                  AND bmgb007 = g_bmgb_d_t.bmgb007  
 
                  AND bmgb008 = g_bmgb_d_t.bmgb008  
 
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmgb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmgb_d[l_ac].* = g_bmgb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmgb_t",SQLCA.sqlcode,1)
                     LET g_bmgb_d[l_ac].* = g_bmgb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmga_m.bmga001
               LET gs_keys_bak[1] = g_bmga001_t
               LET gs_keys[2] = g_bmga_m.bmga002
               LET gs_keys_bak[2] = g_bmga002_t
               LET gs_keys[3] = g_bmga_m.bmga003
               LET gs_keys_bak[3] = g_bmga003_t
               LET gs_keys[4] = g_bmgb_d[g_detail_idx].bmgb004
               LET gs_keys_bak[4] = g_bmgb_d_t.bmgb004
               LET gs_keys[5] = g_bmgb_d[g_detail_idx].bmgb005
               LET gs_keys_bak[5] = g_bmgb_d_t.bmgb005
               LET gs_keys[6] = g_bmgb_d[g_detail_idx].bmgb006
               LET gs_keys_bak[6] = g_bmgb_d_t.bmgb006
               LET gs_keys[7] = g_bmgb_d[g_detail_idx].bmgb007
               LET gs_keys_bak[7] = g_bmgb_d_t.bmgb007
               LET gs_keys[8] = g_bmgb_d[g_detail_idx].bmgb008
               LET gs_keys_bak[8] = g_bmgb_d_t.bmgb008
               CALL abmm205_update_b('bmgb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL abmm205_unlock_b("bmgb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_bmgb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmgb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="abmm205.input.head" ver="1" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_bmga_m.bmga001,g_bmga_m.imaal003,g_bmga_m.imaal004,g_bmga_m.bmga002,g_bmga_m.bmga003, 
          g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgal005 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
 
         ON ACTION update_item
            #add-point:ON ACTION update_item
            {<point name="input.master_input.update_item" />}
            #END add-point
 
     
         BEFORE INPUT
            LET g_master_multi_table_t.bmgal001 = g_bmga_m.bmga001
LET g_master_multi_table_t.bmgal002 = g_bmga_m.bmga002
LET g_master_multi_table_t.bmgal003 = g_bmga_m.bmga003
LET g_master_multi_table_t.bmgal005 = g_bmga_m.bmgal005
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.bmgal001 = ''
LET g_master_multi_table_t.bmgal002 = ''
LET g_master_multi_table_t.bmgal003 = ''
LET g_master_multi_table_t.bmgal005 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
         #---------------------------<  Master  >---------------------------
         #----<<bmga001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga001
            #add-point:BEFORE FIELD bmga001
            {<point name="input.b.bmga001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga001
            
            #add-point:AFTER FIELD bmga001
            {<point name="input.a.bmga001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmga001
            #add-point:ON CHANGE bmga001
            {<point name="input.g.bmga001" />}
            #END add-point
 
         #----<<imaal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point
 
         #----<<imaal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point
 
         #----<<bmga002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga002
            #add-point:BEFORE FIELD bmga002
            {<point name="input.b.bmga002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga002
            
            #add-point:AFTER FIELD bmga002
            {<point name="input.a.bmga002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmga002
            #add-point:ON CHANGE bmga002
            {<point name="input.g.bmga002" />}
            #END add-point
 
         #----<<bmga003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga003
            #add-point:BEFORE FIELD bmga003
            {<point name="input.b.bmga003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga003
            
            #add-point:AFTER FIELD bmga003
            {<point name="input.a.bmga003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmga003
            #add-point:ON CHANGE bmga003
            {<point name="input.g.bmga003" />}
            #END add-point
 
         #----<<bmga004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga004
            #add-point:BEFORE FIELD bmga004
            {<point name="input.b.bmga004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga004
            
            #add-point:AFTER FIELD bmga004
            {<point name="input.a.bmga004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmga004
            #add-point:ON CHANGE bmga004
            {<point name="input.g.bmga004" />}
            #END add-point
 
         #----<<bmga005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmga005
            #add-point:BEFORE FIELD bmga005
            {<point name="input.b.bmga005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmga005
            
            #add-point:AFTER FIELD bmga005
            {<point name="input.a.bmga005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmga005
            #add-point:ON CHANGE bmga005
            {<point name="input.g.bmga005" />}
            #END add-point
 
         #----<<bmgal005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD bmgal005
            #add-point:BEFORE FIELD bmgal005
            {<point name="input.b.bmgal005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmgal005
            
            #add-point:AFTER FIELD bmgal005
            {<point name="input.a.bmgal005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmgal005
            #add-point:ON CHANGE bmgal005
            {<point name="input.g.bmgal005" />}
            #END add-point
 
         #----<<bmgaownid>>----
         #----<<bmgaowndp>>----
         #----<<bmgacrtid>>----
         #----<<bmgacrtdp>>----
         #----<<bmgacrtdt>>----
         #----<<bmgamodid>>----
         #----<<bmgamoddt>>----
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<bmga001>>----
         #Ctrlp:input.c.bmga001
         ON ACTION controlp INFIELD bmga001
            #add-point:ON ACTION controlp INFIELD bmga001
            {<point name="input.c.bmga001" />}
            #END add-point
 
         #----<<imaal003>>----
         #Ctrlp:input.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point
 
         #----<<imaal004>>----
         #Ctrlp:input.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point
 
         #----<<bmga002>>----
         #Ctrlp:input.c.bmga002
         ON ACTION controlp INFIELD bmga002
            #add-point:ON ACTION controlp INFIELD bmga002
            {<point name="input.c.bmga002" />}
            #END add-point
 
         #----<<bmga003>>----
         #Ctrlp:input.c.bmga003
         ON ACTION controlp INFIELD bmga003
            #add-point:ON ACTION controlp INFIELD bmga003
            {<point name="input.c.bmga003" />}
            #END add-point
 
         #----<<bmga004>>----
         #Ctrlp:input.c.bmga004
         ON ACTION controlp INFIELD bmga004
            #add-point:ON ACTION controlp INFIELD bmga004
            {<point name="input.c.bmga004" />}
            #END add-point
 
         #----<<bmga005>>----
         #Ctrlp:input.c.bmga005
         ON ACTION controlp INFIELD bmga005
            #add-point:ON ACTION controlp INFIELD bmga005
            {<point name="input.c.bmga005" />}
            #END add-point
 
         #----<<bmgal005>>----
         #Ctrlp:input.c.bmgal005
         ON ACTION controlp INFIELD bmgal005
            #add-point:ON ACTION controlp INFIELD bmgal005
            {<point name="input.c.bmgal005" />}
            #END add-point
 
         #----<<bmgaownid>>----
         #----<<bmgaowndp>>----
         #----<<bmgacrtid>>----
         #----<<bmgacrtdp>>----
         #----<<bmgacrtdt>>----
         #----<<bmgamodid>>----
         #----<<bmgamoddt>>----
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_bmga_m.bmga001             
                            ,g_bmga_m.bmga002   
 
                            ,g_bmga_m.bmga003   
 
 
                            
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO bmga_t (bmgaent, bmgasite,bmga001,bmga002,bmga003,bmga004,bmga005,bmgaownid, 
                   bmgaowndp,bmgacrtid,bmgacrtdp,bmgacrtdt,bmgamodid,bmgamoddt)
               VALUES (g_enterprise, g_site,g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmga_m.bmga004, 
                   g_bmga_m.bmga005,g_bmga_m.bmgaownid,g_bmga_m.bmgaowndp,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtdp, 
                   g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid,g_bmga_m.bmgamoddt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_bmga_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_bmga_m.bmga001 = g_master_multi_table_t.bmgal001 AND
         g_bmga_m.bmga002 = g_master_multi_table_t.bmgal002 AND
         g_bmga_m.bmga003 = g_master_multi_table_t.bmgal003 AND
         g_bmga_m.bmgal005 = g_master_multi_table_t.bmgal005  THEN
         ELSE 
            LET l_var_keys[01] = g_bmga_m.bmga001
            LET l_field_keys[01] = 'bmgal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.bmgal001
            LET l_var_keys[02] = g_bmga_m.bmga002
            LET l_field_keys[02] = 'bmgal002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.bmgal002
            LET l_var_keys[03] = g_bmga_m.bmga003
            LET l_field_keys[03] = 'bmgal003'
            LET l_var_keys_bak[03] = g_master_multi_table_t.bmgal003
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'bmgal004'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_bmga_m.bmgal005
            LET l_fields[01] = 'bmgal005'
            LET l_vars[02] = g_site 
            LET l_fields[02] = 'bmgalsite'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'bmgalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'bmgal_t')
         END IF 
 
               CALL s_transaction_end('Y','0') 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abmm205_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
 
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE bmga_t SET (bmga001,bmga002,bmga003,bmga004,bmga005,bmgaownid,bmgaowndp,bmgacrtid, 
                   bmgacrtdp,bmgacrtdt,bmgamodid,bmgamoddt) = (g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003, 
                   g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgaownid,g_bmga_m.bmgaowndp,g_bmga_m.bmgacrtid, 
                   g_bmga_m.bmgacrtdp,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid,g_bmga_m.bmgamoddt)
                WHERE bmgaent = g_enterprise AND bmgasite = g_site AND bmga001 = g_bmga001_t
                  AND bmga002 = g_bmga002_t
 
                  AND bmga003 = g_bmga003_t
 
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmga_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_bmga_m.bmga001 = g_master_multi_table_t.bmgal001 AND
         g_bmga_m.bmga002 = g_master_multi_table_t.bmgal002 AND
         g_bmga_m.bmga003 = g_master_multi_table_t.bmgal003 AND
         g_bmga_m.bmgal005 = g_master_multi_table_t.bmgal005  THEN
         ELSE 
            LET l_var_keys[01] = g_bmga_m.bmga001
            LET l_field_keys[01] = 'bmgal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.bmgal001
            LET l_var_keys[02] = g_bmga_m.bmga002
            LET l_field_keys[02] = 'bmgal002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.bmgal002
            LET l_var_keys[03] = g_bmga_m.bmga003
            LET l_field_keys[03] = 'bmgal003'
            LET l_var_keys_bak[03] = g_master_multi_table_t.bmgal003
            LET l_var_keys[04] = g_dlang
            LET l_field_keys[04] = 'bmgal004'
            LET l_var_keys_bak[04] = g_dlang
            LET l_vars[01] = g_bmga_m.bmgal005
            LET l_fields[01] = 'bmgal005'
            LET l_vars[02] = g_site 
            LET l_fields[02] = 'bmgalsite'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'bmgalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'bmgal_t')
         END IF 
 
               CALL s_transaction_end('Y','0')
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_bmga001_t = g_bmga_m.bmga001
            LET g_bmga002_t = g_bmga_m.bmga002
 
            LET g_bmga003_t = g_bmga_m.bmga003
 
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="abmm205.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD bmga001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bmgb004
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="abmm205.insert" ver="1" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION abmm205_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_bmgb_d.clear()   
 
 
   INITIALIZE g_bmga_m.* LIKE bmga_t.*             #DEFAULT 設定
   
   LET g_bmga001_t = NULL
   LET g_bmga002_t = NULL
 
   LET g_bmga003_t = NULL
 
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_bmga_m.bmgaownid = g_user
      LET g_bmga_m.bmgaowndp = g_dept
      LET g_bmga_m.bmgacrtid = g_user
      LET g_bmga_m.bmgacrtdp = g_dept 
      LET g_bmga_m.bmgacrtdt = cl_get_current()
      LET g_bmga_m.bmgamodid = ""
      LET g_bmga_m.bmgamoddt = ""
      ##LET g_bmga_m.bmgastus = ""
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
      
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL abmm205_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmga_m.* = g_bmga_m_t.*
         CALL abmm205_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_bmgb_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   
   LET g_bmga001_t = g_bmga_m.bmga001
   LET g_bmga002_t = g_bmga_m.bmga002
 
   LET g_bmga003_t = g_bmga_m.bmga003
 
 
   
   LET g_wc = g_wc,  
              " OR ( bmgaent = '" ||g_enterprise|| "' AND bmgasite = '" ||g_site|| "' AND",
              " bmga001 = '", g_bmga_m.bmga001 CLIPPED, "' "
              ," AND bmga002 = '", g_bmga_m.bmga002 CLIPPED, "' "
 
              ," AND bmga003 = '", g_bmga_m.bmga003 CLIPPED, "' "
 
 
              , ") "
   
   CLOSE abmm205_cl
   
END FUNCTION
]]>
</section>
  <section id="abmm205.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION abmm205_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO bmgb_t
                  (bmgbent, bmgbsite,
                   bmgb001,bmgb002,bmgb003,
                   bmgb004,bmgb005,bmgb006,bmgb007,bmgb008
                   ,bmgb009) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8]
                   ,g_bmgb_d[g_detail_idx].bmgb009)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmgb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="abmm205.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION abmm205_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL abmm205_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bmgb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmm205_bcl USING g_enterprise, g_site,
                                       g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmgb_d[g_detail_idx].bmgb004, 
                                           g_bmgb_d[g_detail_idx].bmgb005,g_bmgb_d[g_detail_idx].bmgb006, 
                                           g_bmgb_d[g_detail_idx].bmgb007,g_bmgb_d[g_detail_idx].bmgb008 

                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("abmm205_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="abmm205.main" ver="1" status="" src="s">
<![CDATA[#test
#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = "SELECT bmga001,'','',bmga002,bmga003,bmga004,bmga005,'',bmgaownid,'',bmgaowndp, 
       '',bmgacrtid,'',bmgacrtdp,'',bmgacrtdt,bmgamodid,'',bmgamoddt FROM bmga_t WHERE bmgaent= ? AND  
       bmgasite= ? AND bmga001=? AND bmga002=? AND bmga003=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   DECLARE abmm205_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmm205 WITH FORM cl_ap_formpath("abm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abmm205_init()   
 
      #進入選單 Menu (="N")
      CALL abmm205_ui_dialog() 
	  
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abmm205
      
   END IF 
   
   CLOSE abmm205_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="abmm205.modify" ver="1" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION abmm205_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_bmga_m.bmga001 IS NULL
   OR g_bmga_m.bmga002 IS NULL
 
   OR g_bmga_m.bmga003 IS NULL
 
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
    SELECT UNIQUE bmga001,bmga002,bmga003,bmga004,bmga005,bmgaownid,bmgaowndp,bmgacrtid,bmgacrtdp,bmgacrtdt, 
        bmgamodid,bmgamoddt
 INTO g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgaownid, 
     g_bmga_m.bmgaowndp,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtdp,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid, 
     g_bmga_m.bmgamoddt
 FROM bmga_t
 WHERE bmgaent = g_enterprise AND bmgasite = g_site AND bmga001 = g_bmga_m.bmga001 AND bmga002 = g_bmga_m.bmga002 AND bmga003 = g_bmga_m.bmga003
 
   ERROR ""
  
   LET g_bmga001_t = g_bmga_m.bmga001
   LET g_bmga002_t = g_bmga_m.bmga002
 
   LET g_bmga003_t = g_bmga_m.bmga003
 
 
   CALL s_transaction_begin()
   
   OPEN abmm205_cl USING g_enterprise, g_site,g_bmga_m.bmga001
                                                       ,g_bmga_m.bmga002
 
                                                       ,g_bmga_m.bmga003
 
 
   IF STATUS THEN
      CALL cl_err("OPEN abmm205_cl:", STATUS, 1)
      CLOSE abmm205_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #鎖住將被更改或取消的資料
   FETCH abmm205_cl INTO g_bmga_m.bmga001,g_bmga_m.imaal003,g_bmga_m.imaal004,g_bmga_m.bmga002,g_bmga_m.bmga003, 
       g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgal005,g_bmga_m.bmgaownid,g_bmga_m.bmgaownid_desc, 
       g_bmga_m.bmgaowndp,g_bmga_m.bmgaowndp_desc,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtid_desc,g_bmga_m.bmgacrtdp, 
       g_bmga_m.bmgacrtdp_desc,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid,g_bmga_m.bmgamodid_desc,g_bmga_m.bmgamoddt 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmga_m.bmga001,SQLCA.sqlcode,0)
      CLOSE abmm205_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
 
   CALL abmm205_show()
   WHILE TRUE
      LET g_bmga001_t = g_bmga_m.bmga001
      LET g_bmga002_t = g_bmga_m.bmga002
 
      LET g_bmga003_t = g_bmga_m.bmga003
 
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_bmga_m.bmgamodid = g_user 
LET g_bmga_m.bmgamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      CALL abmm205_input("u")     #欄位更改
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmga_m.* = g_bmga_m_t.*
         CALL abmm205_show()
         CALL cl_err('',9001,0)
         EXIT WHILE
      END IF
      
      #若單頭key欄位有變更
      IF g_bmga_m.bmga001 != g_bmga001_t 
      OR g_bmga_m.bmga002 != g_bmga002_t 
 
      OR g_bmga_m.bmga003 != g_bmga003_t 
 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE bmgb_t SET bmgb001 = g_bmga_m.bmga001
                                      ,bmgb002 = g_bmga_m.bmga002
 
                                      ,bmgb003 = g_bmga_m.bmga003
 
 
          WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND bmgb001 = g_bmga001_t
            AND bmgb002 = g_bmga002_t
 
            AND bmgb003 = g_bmga003_t
 
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmgb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmgb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
 
         
         #UPDATE 多語言table key值
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   IF NOT cl_log_modified_record(g_bmga_m.bmga001,g_site) THEN 
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE abmm205_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_bmga_m.bmga001,'U')
 
END FUNCTION   
]]>
</section>
  <section id="abmm205.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="abmm205.other_function" ver="1" status="" src="s">
<![CDATA[   
{<point name="other.function"/>}
]]>
</section>
  <section id="abmm205.query" ver="1" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abmm205_query()
   {<Local define>}
   DEFINE ls_wc STRING
   {</Local define>}
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bmgb_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL abmm205_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL abmm205_browser_fill("")
      CALL abmm205_fetch("")
      RETURN
   END IF
   
   #搜尋後資料初始化
   LET g_detail_cnt = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx = 1
   LET g_detail_idx2 = 1
   LET l_ac = 1
   LET g_wc_filter = ""
   CALL FGL_SET_ARR_CURR(1)
      CALL abmm205_filter_show('bmga001')
   CALL abmm205_filter_show('bmga002')
   CALL abmm205_filter_show('bmga003')
   CALL abmm205_filter_show('bmga004')
   CALL abmm205_filter_show('bmga005')
   LET g_error_show = 1
   CALL abmm205_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL abmm205_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="abmm205.reproduce" ver="1" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION abmm205_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE bmga_t.bmga001 
   DEFINE l_oldno     LIKE bmga_t.bmga001 
   DEFINE l_newno02     LIKE bmga_t.bmga002 
   DEFINE l_oldno02     LIKE bmga_t.bmga002 
 
   DEFINE l_newno03     LIKE bmga_t.bmga003 
   DEFINE l_oldno03     LIKE bmga_t.bmga003 
 
 
   DEFINE l_master    RECORD LIKE bmga_t.*
   DEFINE l_detail    RECORD LIKE bmgb_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_bmga_m.bmga001 IS NULL
   OR g_bmga_m.bmga002 IS NULL
 
   OR g_bmga_m.bmga003 IS NULL
 
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_bmga001_t = g_bmga_m.bmga001
   LET g_bmga002_t = g_bmga_m.bmga002
 
   LET g_bmga003_t = g_bmga_m.bmga003
 
 
    
   LET g_bmga_m.bmga001 = ""
   LET g_bmga_m.bmga002 = ""
 
   LET g_bmga_m.bmga003 = ""
 
 
    
   CALL abmm205_set_entry('a')
   CALL abmm205_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_bmga_m.bmgaownid = g_user
      LET g_bmga_m.bmgaowndp = g_dept
      LET g_bmga_m.bmgacrtid = g_user
      LET g_bmga_m.bmgacrtdp = g_dept 
      LET g_bmga_m.bmgacrtdt = cl_get_current()
      LET g_bmga_m.bmgamodid = ""
      LET g_bmga_m.bmgamoddt = ""
      ##LET g_bmga_m.bmgastus = ""
 
 
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL abmm205_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              " bmga001 = '", g_bmga_m.bmga001 CLIPPED, "' "
              ," AND bmga002 = '", g_bmga_m.bmga002 CLIPPED, "' "
 
              ," AND bmga003 = '", g_bmga_m.bmga003 CLIPPED, "' "
 
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="abmm205.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION abmm205_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1  
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmga001,bmga002,bmga003",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="abmm205.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION abmm205_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="abmm205.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION abmm205_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("bmga001,bmga002,bmga003",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="abmm205.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION abmm205_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1   
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="abmm205.show" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abmm205_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   {</Local define>}
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_bmga_m_t.* = g_bmga_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL abmm205_b_fill() #單身填充
      CALL abmm205_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_bmga_m.bmgaownid_desc = cl_get_username(g_bmga_m.bmgaownid)
      #LET g_bmga_m.bmgaowndp_desc = cl_get_deptname(g_bmga_m.bmgaowndp)
      #LET g_bmga_m.bmgacrtid_desc = cl_get_username(g_bmga_m.bmgacrtid)
      #LET g_bmga_m.bmgacrtdp_desc = cl_get_deptname(g_bmga_m.bmgacrtdp)
      #LET g_bmga_m.bmgamodid_desc = cl_get_username(g_bmga_m.bmgamodid)
      ##LET g_bmga_m.bmgacnfid_desc = cl_get_deptname(g_bmga_m.bmgacnfid)
      ##LET g_bmga_m.bmgapstid_desc = cl_get_deptname(g_bmga_m.bmgapstid)
      
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmga_m.bmga001,g_bmga_m.imaal003,g_bmga_m.imaal004,g_bmga_m.bmga002,g_bmga_m.bmga003, 
       g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgal005,g_bmga_m.bmgaownid,g_bmga_m.bmgaownid_desc, 
       g_bmga_m.bmgaowndp,g_bmga_m.bmgaowndp_desc,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtid_desc,g_bmga_m.bmgacrtdp, 
       g_bmga_m.bmgacrtdp_desc,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid,g_bmga_m.bmgamodid_desc,g_bmga_m.bmgamoddt 

   
   #顯示狀態(stus)圖片
   
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmgb_d.getLength()
      #帶出公用欄位reference值
      
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL abmm205_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="abmm205.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="abmm205.state_change" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="abmm205.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abmm205_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmga001 = g_bmga_m.bmga001 
         AND g_browser[l_i].b_bmga002 = g_bmga_m.bmga002 
 
         AND g_browser[l_i].b_bmga003 = g_bmga_m.bmga003 
 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="abmm205.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION abmm205_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="abmm205.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION abmm205_ui_dialog()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   {</Local define>}
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_wc.trim() <> "1=1" THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL abmm205_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_bmga001 = g_bmga001_t
               AND g_browser[li_idx].b_bmga002 = g_bmga002_t
 
               AND g_browser[li_idx].b_bmga003 = g_bmga003_t
 
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
         #INPUT g_searchstr,g_searchcol FROM formonly.searchstr,formonly.cbo_searchcol
         #
         #   BEFORE INPUT
         #   
         #END INPUT
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL abmm205_fetch('') # reload data
               LET l_ac = 1
               CALL abmm205_ui_detailshow() #Setting the current row 
      
               CALL abmm205_idx_chk()
               #NEXT FIELD bmgb004
         
         END DISPLAY
        
         DISPLAY ARRAY g_bmgb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL abmm205_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL abmm205_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmm205_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abmm205_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL abmm205_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
            
            #NEXT FIELD bmgb004
        
         #ON ACTION statechange
         #   CALL abmm205_statechange()
         #   LET g_action_choice = "statechange"
         #   EXIT DIALOG
      
         
          
         #ACTION表單列
         ON ACTION filter
            CALL abmm205_filter()
            EXIT DIALOG
         
         ON ACTION first
            CALL abmm205_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm205_idx_chk()
            
         ON ACTION previous
            CALL abmm205_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm205_idx_chk()
            
         ON ACTION jump
            CALL abmm205_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm205_idx_chk()
            
         ON ACTION next
            CALL abmm205_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm205_idx_chk()
            
         ON ACTION last
            CALL abmm205_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm205_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
 
         ON ACTION reproduce
 
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN 
               CALL abmm205_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION delete
 
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN 
               CALL abmm205_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF
 
 
         ON ACTION modify
 
            LET g_aw = ''
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN 
               CALL abmm205_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION modify_detail
 
            LET g_aw = g_curr_diag.getCurrentItem()
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN 
               CALL abmm205_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION insert
 
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN 
               CALL abmm205_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION output
 
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN 
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         ON ACTION query
 
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN 
               CALL abmm205_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="abmm205.ui_headershow" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION abmm205_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_bmga_m.bmga001 = g_browser[g_current_idx].b_bmga001   
   LET g_bmga_m.bmga002 = g_browser[g_current_idx].b_bmga002   
 
   LET g_bmga_m.bmga003 = g_browser[g_current_idx].b_bmga003   
 
 
    SELECT UNIQUE bmga001,bmga002,bmga003,bmga004,bmga005,bmgaownid,bmgaowndp,bmgacrtid,bmgacrtdp,bmgacrtdt, 
        bmgamodid,bmgamoddt
 INTO g_bmga_m.bmga001,g_bmga_m.bmga002,g_bmga_m.bmga003,g_bmga_m.bmga004,g_bmga_m.bmga005,g_bmga_m.bmgaownid, 
     g_bmga_m.bmgaowndp,g_bmga_m.bmgacrtid,g_bmga_m.bmgacrtdp,g_bmga_m.bmgacrtdt,g_bmga_m.bmgamodid, 
     g_bmga_m.bmgamoddt
 FROM bmga_t
 WHERE bmgaent = g_enterprise AND bmgasite = g_site AND bmga001 = g_bmga_m.bmga001 AND bmga002 = g_bmga_m.bmga002 AND bmga003 = g_bmga_m.bmga003
   CALL abmm205_show()
   
END FUNCTION
]]>
</section>
  <section id="abmm205.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abmm205_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmm205_bcl
   END IF
   
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="abmm205.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION abmm205_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmgb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE bmgb_t 
         SET (bmgb001,bmgb002,bmgb003,
              bmgb004,bmgb005,bmgb006,bmgb007,bmgb008
              ,bmgb009) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5],ps_keys[6],ps_keys[7],ps_keys[8]
              ,g_bmgb_d[g_detail_idx].bmgb009) 
         WHERE bmgbent = g_enterprise AND bmgbsite = g_site AND bmgb001 = ps_keys_bak[1] AND bmgb002 = ps_keys_bak[2] AND bmgb003 = ps_keys_bak[3] AND bmgb004 = ps_keys_bak[4] AND bmgb005 = ps_keys_bak[5] AND bmgb006 = ps_keys_bak[6] AND bmgb007 = ps_keys_bak[7] AND bmgb008 = ps_keys_bak[8]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmgb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmgb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>