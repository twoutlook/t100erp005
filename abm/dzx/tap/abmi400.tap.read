<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="abmi400" std_prog="abmi400" erpver="1.0" module="ABM" ver="2" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.abmi400_oocql004_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_oocql004_desc(p_oocql001,p_oocql002)
DEFINE p_oocql001   LIKE oocql_t.oocql001,
       p_oocql002   LIKE oocql_t.oocql002,
       r_oocql004   LIKE oocql_t.oocql004
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocql001
   LET g_ref_fields[2] = p_oocql002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_oocql004 = g_rtn_fields[1] 
   RETURN r_oocql004
END FUNCTION]]>
  </point>
  <point name="function.abmi400_bmha002_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_bmha002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmha_d[l_ac].bmha002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocq014 FROM oocq_t WHERE oocqent='"||g_enterprise||"' AND oocq001='1115' AND oocq002=? ","") RETURNING g_rtn_fields
   LET g_bmha_d[l_ac].bmha005 = g_rtn_fields[1]
   DISPLAY BY NAME g_bmha_d[l_ac].bmha005  
END FUNCTION]]>
  </point>
  <point name="function.abmi400_bmhb005_desc" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_bmhb005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmha2_d[l_ac].bmhb005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001= ? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmha2_d[l_ac].bmhb005_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_bmha2_d[l_ac].bmhb005_desc  
END FUNCTION]]>
  </point>
  <point name="function.abmi400_bmhd003_desc" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_bmhd003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmha4_d[l_ac].bmhd003
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmha4_d[l_ac].bmhd003_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_bmha4_d[l_ac].bmhd003_desc
END FUNCTION]]>
  </point>
  <point name="function.abmi400_bmhc006_chk" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_bmhc006_chk()
DEFINE l_sql      STRING
DEFINE l_n        LIKE type_t.num5

   IF NOT cl_null(g_bmha3_d[l_ac].bmhc005) AND NOT cl_null(g_bmha3_d[l_ac].bmhc006) THEN
      IF g_bmha3_d[l_ac].bmhc005 = '1' THEN
         LET l_sql = "SELECT COUNT(*) FROM qcac_t WHERE qcacent=",g_enterprise," AND qcac002=?"
         IF NOT ap_chk_isExist(g_bmha3_d[l_ac].bmhc006,l_sql,'aqc-00021',1) THEN
            RETURN FALSE
         END IF
         LET l_sql = l_sql," AND qcacstus='Y'"
         IF NOT ap_chk_isExist(g_bmha3_d[l_ac].bmhc006,l_sql,'aqc-00022',1) THEN
            RETURN FALSE
         END IF
      END IF
      IF g_bmha3_d[l_ac].bmhc005 = '2' THEN
         LET l_sql = "SELECT COUNT(*) FROM qcag_t WHERE qcagent=",g_enterprise," AND qcag003=?"
         IF NOT ap_chk_isExist(g_bmha3_d[l_ac].bmhc006,l_sql,'aqc-00023',1) THEN
            RETURN FALSE
         END IF
         LET l_sql = l_sql," AND qcagstus='Y'"
         IF NOT ap_chk_isExist(g_bmha3_d[l_ac].bmhc006,l_sql,'aqc-00024',1) THEN
            RETURN FALSE
         END IF
      END IF
      IF g_bmha3_d[l_ac].bmhc005 = '5' THEN 
         IF g_bmha3_d[l_ac].bmhc006 < 0 OR g_bmha3_d[l_ac].bmhc006 > 100 THEN
            CALL cl_err('','aqc-00057',1)
            RETURN FALSE
         END IF
      END IF
      IF g_bmha3_d[l_ac].bmhc005 = '6' THEN 
         LET l_n = 0 
         SELECT COUNT(*) INTO l_n FROM qcah_t 
          WHERE qcahent = g_enterprise AND qcah001 = g_qcam001
            AND qcah002 =  g_bmha3_d[l_ac].bmhc006
          IF l_n = 0 THEN
             CALL cl_err(g_bmha3_d[l_ac].bmhc006,'aqc-00058',1)
             RETURN FALSE
          END IF
          
          LET l_n = 0 
         SELECT COUNT(*) INTO l_n FROM qcah_t 
          WHERE qcahent = g_enterprise AND qcah001 = g_qcam001
            AND qcah002 =  g_bmha3_d[l_ac].bmhc006 AND qcahstus = 'Y'
          IF l_n = 0 THEN
             CALL cl_err(g_bmha3_d[l_ac].bmhc006,'aqc-00059',1)
             RETURN FALSE
          END IF
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.abmi400_bmha_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_bmha_ref()
DEFINE l_cnt      LIKE type_t.num5
 
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt 
     FROM bmha_t
    WHERE bmhaent = g_enterprise
      AND bmha001 = g_bmhe_m.bmhe001 
      AND bmhaseq = g_bmha_d[l_ac].bmhaseq
   IF l_cnt > 0 THEN 
      SELECT DISTINCT bmha002 INTO g_bmha_d[l_ac].bmha002
        FROM bmha_t
       WHERE bmhaent = g_enterprise
         AND bmha001 = g_bmhe_m.bmhe001 
         AND bmhaseq = g_bmha_d[l_ac].bmhaseq
      CALL abmi400_oocql004_desc('1115',g_bmha_d[l_ac].bmha002) RETURNING g_bmha_d[l_ac].bmha002_desc
      DISPLAY BY NAME g_bmha_d[l_ac].bmha002_desc 
      LET g_bmhaseq_e = TRUE  
   ELSE
      LET g_bmhaseq_e = FALSE    
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmi400_bmha004_desc" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_bmha004_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmha_d[l_ac].bmha004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmha_d[l_ac].bmha004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmha_d[l_ac].bmha004_desc
END FUNCTION]]>
  </point>
  <point name="function.abmi400_bmhc014_desc" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmi400_bmhc014_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmha3_d[l_ac].bmhc014
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001= ? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmha3_d[l_ac].bmhc014_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_bmha3_d[l_ac].bmhc014_desc  
END FUNCTION]]>
  </point>
  <point name="construct.c.bmhe001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmhe001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhe001  #顯示到畫面上
            NEXT FIELD bmhe001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmhecrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhecrtdp  #顯示到畫面上
            NEXT FIELD bmhecrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmhecrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhecrtid  #顯示到畫面上
            NEXT FIELD bmhecrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmhemodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhemodid  #顯示到畫面上
            NEXT FIELD bmhemodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmheowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmheowndp  #顯示到畫面上
            NEXT FIELD bmheowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmheownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmheownid  #顯示到畫面上
            NEXT FIELD bmheownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmha002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1115"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmha002  #顯示到畫面上
            NEXT FIELD bmha002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmha003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmha003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmha003  #顯示到畫面上
            NEXT FIELD bmha003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmha004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmha004  #顯示到畫面上
            NEXT FIELD bmha004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmhb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "270"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhb002  #顯示到畫面上
            NEXT FIELD bmhb002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmhb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "271"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhb003  #顯示到畫面上
            NEXT FIELD bmhb003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmhb005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhb005  #顯示到畫面上
            NEXT FIELD bmhb005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmhb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "272"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhb006  #顯示到畫面上
            NEXT FIELD bmhb006                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.bmhc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1051"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhc002  #顯示到畫面上
            NEXT FIELD bmhc002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page3.bmhc014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhc014  #顯示到畫面上
            NEXT FIELD bmhc014                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.bmhd003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_rtax001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmhd003  #顯示到畫面上
            NEXT FIELD bmhd003                     #返回原欄位
    

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("delete,modify,modify_detail",TRUE)
   IF g_bmhe_m.bmhestus = "N" THEN 
      CALL cl_set_act_visible("delete,modify,modify_detail",FALSE)
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_bmha_d_o        type_g_bmha_d
DEFINE g_qcam001         LIKE qcam_t.qcam001
DEFINE g_bmhaseq_e       LIKE type_t.num5]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_get_para(g_enterprise,g_site,'S-MFG-0046') RETURNING g_qcam001]]>
  </point>
  <point name="input.a.bmhe001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmhe_m.bmhe001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmhe_t WHERE "||"bmheent = '" ||g_enterprise|| "' AND "||"bmhe001 = '"||g_bmhe_m.bmhe001 ||"'",'std-00004',0) THEN 
                     LET g_bmhe_m.bmhe001 = g_bmhe_m_t.bmhe001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.bmha002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('1115',g_bmha_d[l_ac].bmha002) RETURNING g_bmha_d[l_ac].bmha002_desc
            DISPLAY BY NAME g_bmha_d[l_ac].bmha002_desc
            IF NOT cl_null(g_bmha_d[l_ac].bmha002) THEN 
               IF NOT s_azzi650_chk_exist('1115',g_bmha_d[l_ac].bmha002) THEN
                  LET g_bmha_d[l_ac].bmha002 = g_bmha_d_t.bmha002
                  NEXT FIELD CURRENT
               END IF 
               CALL abmi400_bmha002_ref()                
            END IF             ]]>
  </point>
  <point name="input.a.page1.bmha004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmha004_desc()
            IF NOT cl_null(g_bmha_d[l_ac].bmha004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmha_d[l_ac].bmha004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_14") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmha_d[l_ac].bmha004 = g_bmha_d_t.bmha004
                  NEXT FIELD CURRENT
               END IF
            

            END IF 


]]>
  </point>
  <point name="input.a.page1.bmhaseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmhe_m.bmhe001 IS NOT NULL AND g_bmha_d[g_detail_idx].bmhaseq IS NOT NULL AND g_bmha_d[g_detail_idx].bmhaseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t OR g_bmha_d[g_detail_idx].bmhaseq != g_bmha_d_t.bmhaseq OR g_bmha_d[g_detail_idx].bmhaseq1 != g_bmha_d_t.bmhaseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmha_t WHERE "||"bmhaent = '" ||g_enterprise|| "' AND "||"bmha001 = '"||g_bmhe_m.bmhe001 ||"' AND "|| "bmhaseq = '"||g_bmha_d[g_detail_idx].bmhaseq ||"' AND "|| "bmhaseq1 = '"||g_bmha_d[g_detail_idx].bmhaseq1 ||"'",'std-00004',0) THEN 
                     LET g_bmha_d[l_ac].bmhaseq = g_bmha_d_t.bmhaseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmha_d[l_ac].bmhaseq) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_bmha_d[l_ac].bmhaseq <> g_bmha_d_o.bmhaseq OR cl_null(g_bmha_d_o.bmhaseq))) THEN 
                  CALL abmi400_bmha_ref() 
               END IF
            END IF
            LET g_bmha_d_o.bmhaseq = g_bmha_d[l_ac].bmhaseq
            CALL abmi400_set_entry_b(l_cmd)
            CALL abmi400_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page1.bmhaseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmhe_m.bmhe001 IS NOT NULL AND g_bmha_d[g_detail_idx].bmhaseq IS NOT NULL AND g_bmha_d[g_detail_idx].bmhaseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t OR g_bmha_d[g_detail_idx].bmhaseq != g_bmha_d_t.bmhaseq OR g_bmha_d[g_detail_idx].bmhaseq1 != g_bmha_d_t.bmhaseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmha_t WHERE "||"bmhaent = '" ||g_enterprise|| "' AND "||"bmha001 = '"||g_bmhe_m.bmhe001 ||"' AND "|| "bmhaseq = '"||g_bmha_d[g_detail_idx].bmhaseq ||"' AND "|| "bmhaseq1 = '"||g_bmha_d[g_detail_idx].bmhaseq1 ||"'",'std-00004',0) THEN 
                     LET g_bmha_d[l_ac].bmhaseq1 = g_bmha_d_t.bmhaseq1
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.bmhb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('270',g_bmha2_d[l_ac].bmhb002) RETURNING g_bmha2_d[l_ac].bmhb002_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb002_desc
            IF NOT cl_null(g_bmha2_d[l_ac].bmhb002) THEN 
               IF NOT s_azzi650_chk_exist('270',g_bmha2_d[l_ac].bmhb002) THEN
                  LET g_bmha2_d[l_ac].bmhb002 = g_bmha2_d_t.bmhb002
                  NEXT FIELD CURRENT
               END IF               
            END IF  

            #此段落由子樣板a05產生
            IF  g_bmhe_m.bmhe001 IS NOT NULL AND g_bmha2_d[g_detail_idx].bmhb002 IS NOT NULL AND g_bmha2_d[g_detail_idx].bmhb003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t OR g_bmha2_d[g_detail_idx].bmhb002 != g_bmha2_d_t.bmhb002 OR g_bmha2_d[g_detail_idx].bmhb003 != g_bmha2_d_t.bmhb003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmhb_t WHERE "||"bmhbent = '" ||g_enterprise|| "' AND "||"bmhb001 = '"||g_bmhe_m.bmhe001 ||"' AND "|| "bmhb002 = '"||g_bmha2_d[g_detail_idx].bmhb002 ||"' AND "|| "bmhb003 = '"||g_bmha2_d[g_detail_idx].bmhb003 ||"'",'std-00004',0) THEN 
                     LET g_bmha2_d[l_ac].bmhb002 = g_bmha2_d_t.bmhb002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.bmhb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('271',g_bmha2_d[l_ac].bmhb003) RETURNING g_bmha2_d[l_ac].bmhb003_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb003_desc
            IF NOT cl_null(g_bmha2_d[l_ac].bmhb003) THEN 
               IF NOT s_azzi650_chk_exist('271',g_bmha2_d[l_ac].bmhb003) THEN
                  LET g_bmha2_d[l_ac].bmhb003 = g_bmha2_d_t.bmhb003
                  NEXT FIELD CURRENT
               END IF               
            END IF 

            #此段落由子樣板a05產生
            IF  g_bmhe_m.bmhe001 IS NOT NULL AND g_bmha2_d[g_detail_idx].bmhb002 IS NOT NULL AND g_bmha2_d[g_detail_idx].bmhb003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t OR g_bmha2_d[g_detail_idx].bmhb002 != g_bmha2_d_t.bmhb002 OR g_bmha2_d[g_detail_idx].bmhb003 != g_bmha2_d_t.bmhb003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmhb_t WHERE "||"bmhbent = '" ||g_enterprise|| "' AND "||"bmhb001 = '"||g_bmhe_m.bmhe001 ||"' AND "|| "bmhb002 = '"||g_bmha2_d[g_detail_idx].bmhb002 ||"' AND "|| "bmhb003 = '"||g_bmha2_d[g_detail_idx].bmhb003 ||"'",'std-00004',0) THEN 
                     LET g_bmha2_d[l_ac].bmhb003 = g_bmha2_d_t.bmhb003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.bmhb005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmhb005_desc()
            IF NOT cl_null(g_bmha2_d[l_ac].bmhb005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmha2_d[l_ac].bmhb005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmha2_d[l_ac].bmhb005 = g_bmha2_d_t.bmhb005
                  NEXT FIELD CURRENT
               END IF
            END IF 

]]>
  </point>
  <point name="input.a.page2.bmhb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('272',g_bmha2_d[l_ac].bmhb006) RETURNING g_bmha2_d[l_ac].bmhb006_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb006_desc
            IF NOT cl_null(g_bmha2_d[l_ac].bmhb006) THEN 
               IF NOT s_azzi650_chk_exist('272',g_bmha2_d[l_ac].bmhb006) THEN
                  LET g_bmha2_d[l_ac].bmhb006 = g_bmha2_d_t.bmhb006
                  NEXT FIELD CURRENT
               END IF               
            END IF 
]]>
  </point>
  <point name="input.a.page3.bmhc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('1051',g_bmha3_d[l_ac].bmhc002) RETURNING g_bmha3_d[l_ac].bmhc002_desc
            DISPLAY BY NAME g_bmha3_d[l_ac].bmhc002_desc
            IF NOT cl_null(g_bmha2_d[l_ac].bmhb006) THEN 
               IF NOT s_azzi650_chk_exist('1051',g_bmha3_d[l_ac].bmhc002) THEN
                  LET g_bmha3_d[l_ac].bmhc002 = g_bmha3_d_t.bmhc002
                  NEXT FIELD CURRENT
               END IF               
            END IF 
]]>
  </point>
  <point name="input.a.page3.bmhc005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_set_entry_b(l_cmd)
            CALL abmi400_set_no_entry(l_cmd)]]>
  </point>
  <point name="input.a.page3.bmhc009" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmha3_d[l_ac].bmhc009) AND NOT cl_null(g_bmha3_d[l_ac].bmhc013) THEN 
               IF g_bmha3_d[l_ac].bmhc009 < g_bmha3_d[l_ac].bmhc013 THEN 
                  CALL cl_err(g_bmha3_d[l_ac].bmhc009,'abm-00099',1)
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page3.bmhc010" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmha3_d[l_ac].bmhc010) AND NOT cl_null(g_bmha3_d[l_ac].bmhc012) THEN 
               IF g_bmha3_d[l_ac].bmhc010 < g_bmha3_d[l_ac].bmhc012 THEN 
                  CALL cl_err(g_bmha3_d[l_ac].bmhc010,'abm-00100',1)
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_bmha3_d[l_ac].bmhc010) AND NOT cl_null(g_bmha3_d[l_ac].bmhc009) THEN 
               IF g_bmha3_d[l_ac].bmhc010 > g_bmha3_d[l_ac].bmhc009 THEN 
                  CALL cl_err(g_bmha3_d[l_ac].bmhc010,'abm-00101',1)
                  NEXT FIELD CURRENT
               END IF
            END IF            ]]>
  </point>
  <point name="input.a.page3.bmhc012" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmha3_d[l_ac].bmhc010) AND NOT cl_null(g_bmha3_d[l_ac].bmhc012) THEN 
               IF g_bmha3_d[l_ac].bmhc010 < g_bmha3_d[l_ac].bmhc012 THEN 
                  CALL cl_err(g_bmha3_d[l_ac].bmhc012,'abm-00100',1)
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_bmha3_d[l_ac].bmhc013) AND NOT cl_null(g_bmha3_d[l_ac].bmhc012) THEN 
               IF g_bmha3_d[l_ac].bmhc012 < g_bmha3_d[l_ac].bmhc013 THEN 
                  CALL cl_err(g_bmha3_d[l_ac].bmhc012,'abm-00102',1)
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page3.bmhc013" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmha3_d[l_ac].bmhc009) AND NOT cl_null(g_bmha3_d[l_ac].bmhc013) THEN 
               IF g_bmha3_d[l_ac].bmhc009 < g_bmha3_d[l_ac].bmhc013 THEN 
                  CALL cl_err(g_bmha3_d[l_ac].bmhc013,'abm-00100',1)
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page3.bmhc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmhc014_desc()
            IF NOT cl_null(g_bmha3_d[l_ac].bmhc014) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmha3_d[l_ac].bmhc014
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmha3_d[l_ac].bmhc014 = g_bmha3_d_t.bmhc014
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page3.bmhc017" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmhe_m.bmhe001 IS NOT NULL AND g_bmha3_d[g_detail_idx].bmhcseq IS NOT NULL AND g_bmha3_d[g_detail_idx].bmhc017 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t OR g_bmha3_d[g_detail_idx].bmhcseq != g_bmha3_d_t.bmhcseq OR g_bmha3_d[g_detail_idx].bmhc017 != g_bmha3_d_t.bmhc017)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmhc_t WHERE "||"bmhcent = '" ||g_enterprise|| "' AND "||"bmhc001 = '"||g_bmhe_m.bmhe001 ||"' AND "|| "bmhcseq = '"||g_bmha3_d[g_detail_idx].bmhcseq ||"' AND "|| "bmhc017 = '"||g_bmha3_d[g_detail_idx].bmhc017 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page3.bmhcseq" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmhe_m.bmhe001 IS NOT NULL AND g_bmha3_d[g_detail_idx].bmhcseq IS NOT NULL AND g_bmha3_d[g_detail_idx].bmhc017 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t OR g_bmha3_d[g_detail_idx].bmhcseq != g_bmha3_d_t.bmhcseq OR g_bmha3_d[g_detail_idx].bmhc017 != g_bmha3_d_t.bmhc017)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmhc_t WHERE "||"bmhcent = '" ||g_enterprise|| "' AND "||"bmhc001 = '"||g_bmhe_m.bmhe001 ||"' AND "|| "bmhcseq = '"||g_bmha3_d[g_detail_idx].bmhcseq ||"' AND "|| "bmhc017 = '"||g_bmha3_d[g_detail_idx].bmhc017 ||"'",'std-00004',0) THEN 
                     LET g_bmha3_d[l_ac].bmhcseq = g_bmha3_d_t.bmhcseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.bmhd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmhd003_desc()
            IF NOT cl_null(g_bmha4_d[l_ac].bmhd003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmha4_d[l_ac].bmhd003
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_rtax001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmha4_d[l_ac].bmhd003 = g_bmha4_d_t.bmhd003
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            #此段落由子樣板a05產生
            IF  g_bmhe_m.bmhe001 IS NOT NULL AND g_bmha4_d[g_detail_idx].bmhd003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmhe_m.bmhe001 != g_bmhe001_t OR g_bmha4_d[g_detail_idx].bmhd003 != g_bmha4_d_t.bmhd003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmhd_t WHERE "||"bmhdent = '" ||g_enterprise|| "' AND "||"bmhd001 = '"||g_bmhe_m.bmhe001 ||"' AND "|| "bmhd003 = '"||g_bmha4_d[g_detail_idx].bmhd003 ||"'",'std-00004',0) THEN 
                     LET g_bmha4_d[l_ac].bmhd003 = g_bmha4_d_t.bmhd003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.b.page1.bmha002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('1115',g_bmha_d[l_ac].bmha002) RETURNING g_bmha_d[l_ac].bmha002_desc
            DISPLAY BY NAME g_bmha_d[l_ac].bmha002_desc]]>
  </point>
  <point name="input.b.page1.bmha004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmha004_desc()]]>
  </point>
  <point name="input.b.page2.bmhb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('270',g_bmha2_d[l_ac].bmhb002) RETURNING g_bmha2_d[l_ac].bmhb002_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb002_desc]]>
  </point>
  <point name="input.b.page2.bmhb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('271',g_bmha2_d[l_ac].bmhb003) RETURNING g_bmha2_d[l_ac].bmhb003_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb003_desc]]>
  </point>
  <point name="input.b.page2.bmhb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('272',g_bmha2_d[l_ac].bmhb006) RETURNING g_bmha2_d[l_ac].bmhb006_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb006_desc]]>
  </point>
  <point name="input.b.page3.bmhc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('1051',g_bmha3_d[l_ac].bmhc002) RETURNING g_bmha3_d[l_ac].bmhc002_desc
            DISPLAY BY NAME g_bmha3_d[l_ac].bmhc002_desc]]>
  </point>
  <point name="input.b.page3.bmhc014" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmhc014_desc()]]>
  </point>
  <point name="input.b.page4.bmhd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmhd003_desc()]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.body.after_set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               LET g_bmha_d_o.* = g_bmha_d[l_ac].*]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_bmha_d[l_ac].bmhaseq IS NULL THEN 
               SELECT MAX(bmhaseq) INTO g_bmha_d[l_ac].bmhaseq
                 FROM bmha_t
                WHERE bmhaent = g_enterprise
                  AND bmha001 = g_bmhe_m.bmhe001
               IF cl_null(g_bmha_d[l_ac].bmhaseq) THEN 
                  LET g_bmha_d[l_ac].bmhaseq = 1
               ELSE
                  LET g_bmha_d[l_ac].bmhaseq = g_bmha_d[l_ac].bmhaseq + 1
               END IF   
            END IF
            LET g_bmha_d_t.* = g_bmha_d[l_ac].*
            LET g_bmha_d_o.* = g_bmha_d[l_ac].*]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_bmha3_d[l_ac].bmhcseq IS NULL THEN 
               SELECT MAX(bmhcseq) INTO g_bmha3_d[l_ac].bmhcseq
                 FROM bmhc_t
                WHERE bmhcent = g_enterprise
                  AND bmhc001 = g_bmhe_m.bmhe001
               IF cl_null(g_bmha3_d[l_ac].bmhcseq) THEN 
                  LET g_bmha3_d[l_ac].bmhcseq = 1
               ELSE
                  LET g_bmha3_d[l_ac].bmhcseq = g_bmha3_d[l_ac].bmhcseq + 1
               END IF   
            END IF
            LET g_bmha3_d_t.* = g_bmha3_d[l_ac].* ]]>
  </point>
  <point name="input.c.page1.bmha002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha_d[l_ac].bmha002             #給予default值
            LET g_qryparam.default2 = "" #g_bmha_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1115" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmha_d[l_ac].bmha002 = g_qryparam.return1              
            #LET g_bmha_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmha_d[l_ac].bmha002 TO bmha002              #
            #DISPLAY g_bmha_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmha002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmha003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha_d[l_ac].bmha003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_bmhe_m.bmhe001

            
            CALL q_bmha003()                                #呼叫開窗

            LET g_bmha_d[l_ac].bmha003 = g_qryparam.return1              

            DISPLAY g_bmha_d[l_ac].bmha003 TO bmha003              #

            NEXT FIELD bmha003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmha004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha_d[l_ac].bmha004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001_9()                                #呼叫開窗

            LET g_bmha_d[l_ac].bmha004 = g_qryparam.return1              

            DISPLAY g_bmha_d[l_ac].bmha004 TO bmha004              #

            NEXT FIELD bmha004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmhb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha2_d[l_ac].bmhb002             #給予default值
            LET g_qryparam.default2 = "" #g_bmha2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "270" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmha2_d[l_ac].bmhb002 = g_qryparam.return1              
            #LET g_bmha2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmha2_d[l_ac].bmhb002 TO bmhb002              #
            #DISPLAY g_bmha2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmhb002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmhb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha2_d[l_ac].bmhb003             #給予default值
            LET g_qryparam.default2 = "" #g_bmha2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "271" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmha2_d[l_ac].bmhb003 = g_qryparam.return1              
            #LET g_bmha2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmha2_d[l_ac].bmhb003 TO bmhb003              #
            #DISPLAY g_bmha2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmhb003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmhb005" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha2_d[l_ac].bmhb005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_bmha2_d[l_ac].bmhb005 = g_qryparam.return1              

            DISPLAY g_bmha2_d[l_ac].bmhb005 TO bmhb005              #

            NEXT FIELD bmhb005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmhb006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha2_d[l_ac].bmhb006             #給予default值
            LET g_qryparam.default2 = "" #g_bmha2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "272" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmha2_d[l_ac].bmhb006 = g_qryparam.return1              
            #LET g_bmha2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmha2_d[l_ac].bmhb006 TO bmhb006              #
            #DISPLAY g_bmha2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmhb006                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.bmhc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha3_d[l_ac].bmhc002             #給予default值
            LET g_qryparam.default2 = "" #g_bmha3_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1051" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmha3_d[l_ac].bmhc002 = g_qryparam.return1              
            #LET g_bmha3_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmha3_d[l_ac].bmhc002 TO bmhc002              #
            #DISPLAY g_bmha3_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmhc002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page3.bmhc006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		    	LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bmha3_d[l_ac].bmhc006             #給予default值
            CASE WHEN g_bmha3_d[l_ac].bmhc005 = '1' 
                    CALL q_qcac002()
                 WHEN g_bmha3_d[l_ac].bmhc005 = '2'
                    CALL q_qcag003()
                 WHEN g_bmha3_d[l_ac].bmhc005 = '6'
                    LET g_qryparam.where = " qcam001 = '",g_qcam001,"'"
                    CALL q_qcah002()
            END CASE
            LET g_bmha3_d[l_ac].bmhc006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bmha3_d[l_ac].bmhc006 TO bmhc006              #顯示到畫面上
            NEXT FIELD bmhc006                          #返回原欄位]]>
  </point>
  <point name="input.c.page3.bmhc014" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha3_d[l_ac].bmhc014             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_bmha3_d[l_ac].bmhc014 = g_qryparam.return1              

            DISPLAY g_bmha3_d[l_ac].bmhc014 TO bmhc014              #

            NEXT FIELD bmhc014                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.bmhd003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmha4_d[l_ac].bmhd003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_rtax001_1()                                #呼叫開窗

            LET g_bmha4_d[l_ac].bmhd003 = g_qryparam.return1              

            DISPLAY g_bmha4_d[l_ac].bmhd003 TO bmhd003              #

            NEXT FIELD bmhd003                          #返回原欄位

]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_bmhe_m.bmhe001)  THEN
                  CALL n_bmhel(g_bmhe_m.bmhe001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_bmhe_m.bmhe001
                  CALL ap_ref_array2(g_ref_fields," SELECT bmhel003 FROM bmhel_t WHERE imaalent = '"
                      ||g_enterprise||"' AND bmhel001 = ? AND bmhel002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_bmhe_m.bmhel003 = g_rtn_fields[1]
                  DISPLAY BY NAME g_bmhe_m.bmhel003
               END IF]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_bmhe_m.bmhe002 = "1"
      LET g_bmhe_m_t.* = g_bmhe_m.*]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_bmhe_m.bmhestus = "Y"
   LET g_bmhe_m.bmhe002 = "1"
   LET g_bmhe_m_t.* = g_bmhe_m.*]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("bmhaseq,bmha002",TRUE)
   CALL cl_set_comp_required("bmhc009",FALSE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_bmhaseq_e = TRUE THEN 
      CALL cl_set_comp_entry("bmha002",FALSE)
   END IF
   IF p_cmd = 'u' THEN 
      CALL cl_set_comp_entry("bmhaseq,bmha002",FALSE)
   END IF
   IF g_bmha3_d[l_ac].bmhc005 = '4' THEN 
       CALL cl_set_comp_required("bmhc009",FALSE)
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            CALL abmi400_oocql004_desc('1115',g_bmha_d[l_ac].bmha002) RETURNING g_bmha_d[l_ac].bmha002_desc
            DISPLAY BY NAME g_bmha_d[l_ac].bmha002_desc

            CALL abmi400_bmha004_desc()
]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            CALL abmi400_oocql004_desc('270',g_bmha2_d[l_ac].bmhb002) RETURNING g_bmha2_d[l_ac].bmhb002_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb002_desc

            CALL abmi400_oocql004_desc('271',g_bmha2_d[l_ac].bmhb003) RETURNING g_bmha2_d[l_ac].bmhb003_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb003_desc

            CALL abmi400_oocql004_desc('272',g_bmha2_d[l_ac].bmhb006) RETURNING g_bmha2_d[l_ac].bmhb006_desc
            DISPLAY BY NAME g_bmha2_d[l_ac].bmhb006_desc

            CALL abmi400_bmhb005_desc()]]>
  </point>
  <point name="show.body3.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_oocql004_desc('1051',g_bmha3_d[l_ac].bmhc002) RETURNING g_bmha3_d[l_ac].bmhc002_desc
            DISPLAY BY NAME g_bmha3_d[l_ac].bmhc002_desc
            CALL abmi400_bmhc014_desc()]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL abmi400_bmhd003_desc()]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmhe_m.bmhe001
   CALL ap_ref_array2(g_ref_fields," SELECT bmhel003 FROM bmhel_t WHERE bmhelent = '"||g_enterprise||"' AND bmhel001 = ? AND bmhel002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_bmhe_m.bmhel003 = g_rtn_fields[1] 
   DISPLAY g_bmhe_m.bmhel003 TO bmhel003
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmhe_m.bmheownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmhe_m.bmheownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmhe_m.bmheownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmhe_m.bmheowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmhe_m.bmheowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmhe_m.bmheowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmhe_m.bmhecrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmhe_m.bmhecrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmhe_m.bmhecrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmhe_m.bmhecrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmhe_m.bmhecrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmhe_m.bmhecrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmhe_m.bmhemodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_bmhe_m.bmhemodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmhe_m.bmhemodid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("delete,modify,modify_detail",TRUE)
   IF g_bmhe_m.bmhestus = "N" THEN 
      CALL cl_set_act_visible("delete,modify,modify_detail",FALSE)
   END IF]]>
  </point>
  <section id="abmi400.b_fill" ver="4" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION abmi400_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_bmha_d.clear()    #g_bmha_d 單頭及單身 
   CALL g_bmha2_d.clear()
   CALL g_bmha3_d.clear()
   CALL g_bmha4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF abmi400_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE bmhaseq,bmha002,bmhaseq1,bmha003,bmha004,bmha005 ,t1.oocql004 ,t2.ooefl003 FROM bmha_t", 
             
                  " INNER JOIN bmhe_t ON bmhe001 = bmha001 ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='1115' AND t1.oocql002=bmha002 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=bmha004 AND t2.ooefl002='"||g_dlang||"' ",
 
                  " WHERE bmhaent=? AND bmha001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmha_t.bmhaseq,bmha_t.bmhaseq1"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmi400_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR abmi400_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_bmhe_m.bmhe001
                                               
      FOREACH b_fill_cs INTO g_bmha_d[l_ac].bmhaseq,g_bmha_d[l_ac].bmha002,g_bmha_d[l_ac].bmhaseq1,g_bmha_d[l_ac].bmha003, 
          g_bmha_d[l_ac].bmha004,g_bmha_d[l_ac].bmha005,g_bmha_d[l_ac].bmha002_desc,g_bmha_d[l_ac].bmha004_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF abmi400_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE bmhb002,bmhb003,bmhb004,bmhb005,bmhb006 ,t3.oocql004 ,t4.oocql004 , 
          t5.oocal003 ,t6.oocql004 FROM bmhb_t",   
                  " INNER JOIN bmhe_t ON bmhe001 = bmhb001 ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='270' AND t3.oocql002=bmhb002 AND t3.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='271' AND t4.oocql002=bmhb002 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t5 ON t5.oocalent='"||g_enterprise||"' AND t5.oocal001=bmhb005 AND t5.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='272' AND t6.oocql002=bmhb006 AND t6.oocql003='"||g_dlang||"' ",
 
                  " WHERE bmhbent=? AND bmhb001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmhb_t.bmhb002,bmhb_t.bmhb003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmi400_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR abmi400_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_bmhe_m.bmhe001
                                               
      FOREACH b_fill_cs2 INTO g_bmha2_d[l_ac].bmhb002,g_bmha2_d[l_ac].bmhb003,g_bmha2_d[l_ac].bmhb004, 
          g_bmha2_d[l_ac].bmhb005,g_bmha2_d[l_ac].bmhb006,g_bmha2_d[l_ac].bmhb002_desc,g_bmha2_d[l_ac].bmhb003_desc, 
          g_bmha2_d[l_ac].bmhb005_desc,g_bmha2_d[l_ac].bmhb006_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF abmi400_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE bmhcseq,bmhc017,bmhc002,bmhc003,bmhc005,bmhc004,bmhc006,bmhc009,bmhc010, 
          bmhc011,bmhc012,bmhc013,bmhc014,bmhc015,bmhc016 ,t7.oocql004 ,t8.oocal003 FROM bmhc_t",    

                  " INNER JOIN bmhe_t ON bmhe001 = bmhc001 ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='1050' AND t7.oocql002=bmhc002 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t8 ON t8.oocalent='"||g_enterprise||"' AND t8.oocal001=bmhc014 AND t8.oocal002='"||g_dlang||"' ",
 
                  " WHERE bmhcent=? AND bmhc001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmhc_t.bmhcseq,bmhc_t.bmhc017"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmi400_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR abmi400_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_bmhe_m.bmhe001
                                               
      FOREACH b_fill_cs3 INTO g_bmha3_d[l_ac].bmhcseq,g_bmha3_d[l_ac].bmhc017,g_bmha3_d[l_ac].bmhc002, 
          g_bmha3_d[l_ac].bmhc003,g_bmha3_d[l_ac].bmhc005,g_bmha3_d[l_ac].bmhc004,g_bmha3_d[l_ac].bmhc006, 
          g_bmha3_d[l_ac].bmhc009,g_bmha3_d[l_ac].bmhc010,g_bmha3_d[l_ac].bmhc011,g_bmha3_d[l_ac].bmhc012, 
          g_bmha3_d[l_ac].bmhc013,g_bmha3_d[l_ac].bmhc014,g_bmha3_d[l_ac].bmhc015,g_bmha3_d[l_ac].bmhc016, 
          g_bmha3_d[l_ac].bmhc002_desc,g_bmha3_d[l_ac].bmhc014_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF abmi400_fill_chk(4) THEN
      LET g_sql = "SELECT  UNIQUE bmhd003 ,t9.rtaxl003 FROM bmhd_t",   
                  " INNER JOIN bmhe_t ON bmhe001 = bmhd001 ",
 
                  "",
                  
                                 " LEFT JOIN rtaxl_t t9 ON t9.rtaxlent='"||g_enterprise||"' AND t9.rtaxl001=bmhd003 AND t9.rtaxl002='"||g_dlang||"' ",
 
                  " WHERE bmhdent=? AND bmhd001=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body4.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table4) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmhd_t.bmhd003"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql4"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmi400_pb4 FROM g_sql
      DECLARE b_fill_cs4 CURSOR FOR abmi400_pb4
      
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_bmhe_m.bmhe001
                                               
      FOREACH b_fill_cs4 INTO g_bmha4_d[l_ac].bmhd003,g_bmha4_d[l_ac].bmhd003_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_bmha_d.deleteElement(g_bmha_d.getLength())
   CALL g_bmha2_d.deleteElement(g_bmha2_d.getLength())
   CALL g_bmha3_d.deleteElement(g_bmha3_d.getLength())
   CALL g_bmha4_d.deleteElement(g_bmha4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abmi400_pb
   FREE abmi400_pb2
 
   FREE abmi400_pb3
 
   FREE abmi400_pb4
 
 
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION abmi400_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL abmi400_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.browser_fill" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abmi400_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmhe_m.* TO NULL
   CALL g_bmha_d.clear()        
   CALL g_bmha2_d.clear() 
   CALL g_bmha3_d.clear() 
   CALL g_bmha4_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "bmhe001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE bmhe001 ",
                      " FROM bmhe_t ",
                      " ",
                      " LEFT JOIN bmha_t ON bmhaent = bmheent AND bmhe001 = bmha001 ",
                      " LEFT JOIN bmhb_t ON bmhbent = bmheent AND bmhe001 = bmhb001", 
 
                      " LEFT JOIN bmhc_t ON bmhcent = bmheent AND bmhe001 = bmhc001", 
 
                      " LEFT JOIN bmhd_t ON bmhdent = bmheent AND bmhe001 = bmhd001", 
 
 
 
                      " LEFT JOIN bmhel_t ON bmhe001 = bmhel001 AND bmhel002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE bmheent = '" ||g_enterprise|| "' AND bmhaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("bmhe_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE bmhe001 ",
                      " FROM bmhe_t ", 
                      "  ",
                      "  LEFT JOIN bmhel_t ON bmhe001 = bmhel001 AND bmhel002 = '",g_lang,"' ",
                      " WHERE bmheent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("bmhe_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照bmhe001,'' Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT bmhestus,bmhe001,'',t1.bmhel003 ",
               " FROM bmhe_t ",
               "  ",
               "  LEFT JOIN bmha_t ON bmhaent = bmheent AND bmhe001 = bmha001 ",
               "  LEFT JOIN bmhb_t ON bmhbent = bmheent AND bmhe001 = bmhb001",
 
               "  LEFT JOIN bmhc_t ON bmhcent = bmheent AND bmhe001 = bmhc001",
 
               "  LEFT JOIN bmhd_t ON bmhdent = bmheent AND bmhe001 = bmhd001",
 
 
 
               "  LEFT JOIN bmhel_t ON bmhe001 = bmhel001 AND bmhel002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN bmhel_t t1 ON t1.bmhelent='"||g_enterprise||"' AND t1.bmhel001=bmhe001 AND t1.bmhel002='"||g_lang||"' ",
 
               " WHERE bmheent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("bmhe_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_bmhe001,g_browser[g_cnt].b_bmhe001_desc, 
       g_browser[g_cnt].b_bmhe001_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/inactive.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/active.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION abmi400_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY bmhe001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL abmi400_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.construct" ver="8" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION abmi400_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmhe_m.* TO NULL
   CALL g_bmha_d.clear()        
   CALL g_bmha2_d.clear() 
   CALL g_bmha3_d.clear() 
   CALL g_bmha4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bmhe001,bmhel003,bmhestus,bmheownid,bmheowndp,bmhecrtid,bmhecrtdp,bmhecrtdt, 
          bmhemodid,bmhemoddt,bmhe002
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<bmhecrtdt>>----
         AFTER FIELD bmhecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmhemoddt>>----
         AFTER FIELD bmhemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmhecnfdt>>----
         
         #----<<bmhepstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.bmhe001
         ON ACTION controlp INFIELD bmhe001
            #add-point:ON ACTION controlp INFIELD bmhe001
            {<point name="construct.c.bmhe001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhe001
            #add-point:BEFORE FIELD bmhe001
            {<point name="construct.b.bmhe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhe001
            
            #add-point:AFTER FIELD bmhe001
            {<point name="construct.a.bmhe001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhel003
            #add-point:BEFORE FIELD bmhel003
            {<point name="construct.b.bmhel003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhel003
            
            #add-point:AFTER FIELD bmhel003
            {<point name="construct.a.bmhel003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmhel003
         ON ACTION controlp INFIELD bmhel003
            #add-point:ON ACTION controlp INFIELD bmhel003
            {<point name="construct.c.bmhel003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhestus
            #add-point:BEFORE FIELD bmhestus
            {<point name="construct.b.bmhestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhestus
            
            #add-point:AFTER FIELD bmhestus
            {<point name="construct.a.bmhestus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmhestus
         ON ACTION controlp INFIELD bmhestus
            #add-point:ON ACTION controlp INFIELD bmhestus
            {<point name="construct.c.bmhestus" />}
            #END add-point
 
         #Ctrlp:construct.c.bmheownid
         ON ACTION controlp INFIELD bmheownid
            #add-point:ON ACTION controlp INFIELD bmheownid
            {<point name="construct.c.bmheownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmheownid
            #add-point:BEFORE FIELD bmheownid
            {<point name="construct.b.bmheownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmheownid
            
            #add-point:AFTER FIELD bmheownid
            {<point name="construct.a.bmheownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmheowndp
         ON ACTION controlp INFIELD bmheowndp
            #add-point:ON ACTION controlp INFIELD bmheowndp
            {<point name="construct.c.bmheowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmheowndp
            #add-point:BEFORE FIELD bmheowndp
            {<point name="construct.b.bmheowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmheowndp
            
            #add-point:AFTER FIELD bmheowndp
            {<point name="construct.a.bmheowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmhecrtid
         ON ACTION controlp INFIELD bmhecrtid
            #add-point:ON ACTION controlp INFIELD bmhecrtid
            {<point name="construct.c.bmhecrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhecrtid
            #add-point:BEFORE FIELD bmhecrtid
            {<point name="construct.b.bmhecrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhecrtid
            
            #add-point:AFTER FIELD bmhecrtid
            {<point name="construct.a.bmhecrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmhecrtdp
         ON ACTION controlp INFIELD bmhecrtdp
            #add-point:ON ACTION controlp INFIELD bmhecrtdp
            {<point name="construct.c.bmhecrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhecrtdp
            #add-point:BEFORE FIELD bmhecrtdp
            {<point name="construct.b.bmhecrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhecrtdp
            
            #add-point:AFTER FIELD bmhecrtdp
            {<point name="construct.a.bmhecrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhecrtdt
            #add-point:BEFORE FIELD bmhecrtdt
            {<point name="construct.b.bmhecrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmhemodid
         ON ACTION controlp INFIELD bmhemodid
            #add-point:ON ACTION controlp INFIELD bmhemodid
            {<point name="construct.c.bmhemodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhemodid
            #add-point:BEFORE FIELD bmhemodid
            {<point name="construct.b.bmhemodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhemodid
            
            #add-point:AFTER FIELD bmhemodid
            {<point name="construct.a.bmhemodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhemoddt
            #add-point:BEFORE FIELD bmhemoddt
            {<point name="construct.b.bmhemoddt" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhe002
            #add-point:BEFORE FIELD bmhe002
            {<point name="construct.b.bmhe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhe002
            
            #add-point:AFTER FIELD bmhe002
            {<point name="construct.a.bmhe002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmhe002
         ON ACTION controlp INFIELD bmhe002
            #add-point:ON ACTION controlp INFIELD bmhe002
            {<point name="construct.c.bmhe002" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON bmhaseq,bmha002,bmhaseq1,bmha003,bmha004,bmha005
           FROM s_detail1[1].bmhaseq,s_detail1[1].bmha002,s_detail1[1].bmhaseq1,s_detail1[1].bmha003, 
               s_detail1[1].bmha004,s_detail1[1].bmha005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD bmhaseq
            #add-point:BEFORE FIELD bmhaseq
            {<point name="construct.b.page1.bmhaseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhaseq
            
            #add-point:AFTER FIELD bmhaseq
            {<point name="construct.a.page1.bmhaseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmhaseq
         ON ACTION controlp INFIELD bmhaseq
            #add-point:ON ACTION controlp INFIELD bmhaseq
            {<point name="construct.c.page1.bmhaseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.bmha002
         ON ACTION controlp INFIELD bmha002
            #add-point:ON ACTION controlp INFIELD bmha002
            {<point name="construct.c.page1.bmha002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha002
            #add-point:BEFORE FIELD bmha002
            {<point name="construct.b.page1.bmha002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha002
            
            #add-point:AFTER FIELD bmha002
            {<point name="construct.a.page1.bmha002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhaseq1
            #add-point:BEFORE FIELD bmhaseq1
            {<point name="construct.b.page1.bmhaseq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhaseq1
            
            #add-point:AFTER FIELD bmhaseq1
            {<point name="construct.a.page1.bmhaseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmhaseq1
         ON ACTION controlp INFIELD bmhaseq1
            #add-point:ON ACTION controlp INFIELD bmhaseq1
            {<point name="construct.c.page1.bmhaseq1" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.bmha003
         ON ACTION controlp INFIELD bmha003
            #add-point:ON ACTION controlp INFIELD bmha003
            {<point name="construct.c.page1.bmha003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha003
            #add-point:BEFORE FIELD bmha003
            {<point name="construct.b.page1.bmha003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha003
            
            #add-point:AFTER FIELD bmha003
            {<point name="construct.a.page1.bmha003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmha004
         ON ACTION controlp INFIELD bmha004
            #add-point:ON ACTION controlp INFIELD bmha004
            {<point name="construct.c.page1.bmha004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha004
            #add-point:BEFORE FIELD bmha004
            {<point name="construct.b.page1.bmha004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha004
            
            #add-point:AFTER FIELD bmha004
            {<point name="construct.a.page1.bmha004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha005
            #add-point:BEFORE FIELD bmha005
            {<point name="construct.b.page1.bmha005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha005
            
            #add-point:AFTER FIELD bmha005
            {<point name="construct.a.page1.bmha005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmha005
         ON ACTION controlp INFIELD bmha005
            #add-point:ON ACTION controlp INFIELD bmha005
            {<point name="construct.c.page1.bmha005" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON bmhb002,bmhb003,bmhb004,bmhb005,bmhb006
           FROM s_detail2[1].bmhb002,s_detail2[1].bmhb003,s_detail2[1].bmhb004,s_detail2[1].bmhb005, 
               s_detail2[1].bmhb006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page2.bmhb002
         ON ACTION controlp INFIELD bmhb002
            #add-point:ON ACTION controlp INFIELD bmhb002
            {<point name="construct.c.page2.bmhb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb002
            #add-point:BEFORE FIELD bmhb002
            {<point name="construct.b.page2.bmhb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb002
            
            #add-point:AFTER FIELD bmhb002
            {<point name="construct.a.page2.bmhb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmhb003
         ON ACTION controlp INFIELD bmhb003
            #add-point:ON ACTION controlp INFIELD bmhb003
            {<point name="construct.c.page2.bmhb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb003
            #add-point:BEFORE FIELD bmhb003
            {<point name="construct.b.page2.bmhb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb003
            
            #add-point:AFTER FIELD bmhb003
            {<point name="construct.a.page2.bmhb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb004
            #add-point:BEFORE FIELD bmhb004
            {<point name="construct.b.page2.bmhb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb004
            
            #add-point:AFTER FIELD bmhb004
            {<point name="construct.a.page2.bmhb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmhb004
         ON ACTION controlp INFIELD bmhb004
            #add-point:ON ACTION controlp INFIELD bmhb004
            {<point name="construct.c.page2.bmhb004" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.bmhb005
         ON ACTION controlp INFIELD bmhb005
            #add-point:ON ACTION controlp INFIELD bmhb005
            {<point name="construct.c.page2.bmhb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb005
            #add-point:BEFORE FIELD bmhb005
            {<point name="construct.b.page2.bmhb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb005
            
            #add-point:AFTER FIELD bmhb005
            {<point name="construct.a.page2.bmhb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmhb006
         ON ACTION controlp INFIELD bmhb006
            #add-point:ON ACTION controlp INFIELD bmhb006
            {<point name="construct.c.page2.bmhb006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb006
            #add-point:BEFORE FIELD bmhb006
            {<point name="construct.b.page2.bmhb006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb006
            
            #add-point:AFTER FIELD bmhb006
            {<point name="construct.a.page2.bmhb006" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON bmhcseq,bmhc017,bmhc002,bmhc003,bmhc005,bmhc004,bmhc006,bmhc009,bmhc010, 
          bmhc011,bmhc012,bmhc013,bmhc014,bmhc015,bmhc016
           FROM s_detail3[1].bmhcseq,s_detail3[1].bmhc017,s_detail3[1].bmhc002,s_detail3[1].bmhc003, 
               s_detail3[1].bmhc005,s_detail3[1].bmhc004,s_detail3[1].bmhc006,s_detail3[1].bmhc009,s_detail3[1].bmhc010, 
               s_detail3[1].bmhc011,s_detail3[1].bmhc012,s_detail3[1].bmhc013,s_detail3[1].bmhc014,s_detail3[1].bmhc015, 
               s_detail3[1].bmhc016
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD bmhcseq
            #add-point:BEFORE FIELD bmhcseq
            {<point name="construct.b.page3.bmhcseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhcseq
            
            #add-point:AFTER FIELD bmhcseq
            {<point name="construct.a.page3.bmhcseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhcseq
         ON ACTION controlp INFIELD bmhcseq
            #add-point:ON ACTION controlp INFIELD bmhcseq
            {<point name="construct.c.page3.bmhcseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc017
            #add-point:BEFORE FIELD bmhc017
            {<point name="construct.b.page3.bmhc017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc017
            
            #add-point:AFTER FIELD bmhc017
            {<point name="construct.a.page3.bmhc017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc017
         ON ACTION controlp INFIELD bmhc017
            #add-point:ON ACTION controlp INFIELD bmhc017
            {<point name="construct.c.page3.bmhc017" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.bmhc002
         ON ACTION controlp INFIELD bmhc002
            #add-point:ON ACTION controlp INFIELD bmhc002
            {<point name="construct.c.page3.bmhc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc002
            #add-point:BEFORE FIELD bmhc002
            {<point name="construct.b.page3.bmhc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc002
            
            #add-point:AFTER FIELD bmhc002
            {<point name="construct.a.page3.bmhc002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc003
            #add-point:BEFORE FIELD bmhc003
            {<point name="construct.b.page3.bmhc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc003
            
            #add-point:AFTER FIELD bmhc003
            {<point name="construct.a.page3.bmhc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc003
         ON ACTION controlp INFIELD bmhc003
            #add-point:ON ACTION controlp INFIELD bmhc003
            {<point name="construct.c.page3.bmhc003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc005
            #add-point:BEFORE FIELD bmhc005
            {<point name="construct.b.page3.bmhc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc005
            
            #add-point:AFTER FIELD bmhc005
            {<point name="construct.a.page3.bmhc005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc005
         ON ACTION controlp INFIELD bmhc005
            #add-point:ON ACTION controlp INFIELD bmhc005
            {<point name="construct.c.page3.bmhc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc004
            #add-point:BEFORE FIELD bmhc004
            {<point name="construct.b.page3.bmhc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc004
            
            #add-point:AFTER FIELD bmhc004
            {<point name="construct.a.page3.bmhc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc004
         ON ACTION controlp INFIELD bmhc004
            #add-point:ON ACTION controlp INFIELD bmhc004
            {<point name="construct.c.page3.bmhc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc006
            #add-point:BEFORE FIELD bmhc006
            {<point name="construct.b.page3.bmhc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc006
            
            #add-point:AFTER FIELD bmhc006
            {<point name="construct.a.page3.bmhc006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc006
         ON ACTION controlp INFIELD bmhc006
            #add-point:ON ACTION controlp INFIELD bmhc006
            {<point name="construct.c.page3.bmhc006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc009
            #add-point:BEFORE FIELD bmhc009
            {<point name="construct.b.page3.bmhc009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc009
            
            #add-point:AFTER FIELD bmhc009
            {<point name="construct.a.page3.bmhc009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc009
         ON ACTION controlp INFIELD bmhc009
            #add-point:ON ACTION controlp INFIELD bmhc009
            {<point name="construct.c.page3.bmhc009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc010
            #add-point:BEFORE FIELD bmhc010
            {<point name="construct.b.page3.bmhc010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc010
            
            #add-point:AFTER FIELD bmhc010
            {<point name="construct.a.page3.bmhc010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc010
         ON ACTION controlp INFIELD bmhc010
            #add-point:ON ACTION controlp INFIELD bmhc010
            {<point name="construct.c.page3.bmhc010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc011
            #add-point:BEFORE FIELD bmhc011
            {<point name="construct.b.page3.bmhc011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc011
            
            #add-point:AFTER FIELD bmhc011
            {<point name="construct.a.page3.bmhc011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc011
         ON ACTION controlp INFIELD bmhc011
            #add-point:ON ACTION controlp INFIELD bmhc011
            {<point name="construct.c.page3.bmhc011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc012
            #add-point:BEFORE FIELD bmhc012
            {<point name="construct.b.page3.bmhc012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc012
            
            #add-point:AFTER FIELD bmhc012
            {<point name="construct.a.page3.bmhc012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc012
         ON ACTION controlp INFIELD bmhc012
            #add-point:ON ACTION controlp INFIELD bmhc012
            {<point name="construct.c.page3.bmhc012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc013
            #add-point:BEFORE FIELD bmhc013
            {<point name="construct.b.page3.bmhc013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc013
            
            #add-point:AFTER FIELD bmhc013
            {<point name="construct.a.page3.bmhc013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc013
         ON ACTION controlp INFIELD bmhc013
            #add-point:ON ACTION controlp INFIELD bmhc013
            {<point name="construct.c.page3.bmhc013" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.bmhc014
         ON ACTION controlp INFIELD bmhc014
            #add-point:ON ACTION controlp INFIELD bmhc014
            {<point name="construct.c.page3.bmhc014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc014
            #add-point:BEFORE FIELD bmhc014
            {<point name="construct.b.page3.bmhc014" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc014
            
            #add-point:AFTER FIELD bmhc014
            {<point name="construct.a.page3.bmhc014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc015
            #add-point:BEFORE FIELD bmhc015
            {<point name="construct.b.page3.bmhc015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc015
            
            #add-point:AFTER FIELD bmhc015
            {<point name="construct.a.page3.bmhc015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc015
         ON ACTION controlp INFIELD bmhc015
            #add-point:ON ACTION controlp INFIELD bmhc015
            {<point name="construct.c.page3.bmhc015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc016
            #add-point:BEFORE FIELD bmhc016
            {<point name="construct.b.page3.bmhc016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc016
            
            #add-point:AFTER FIELD bmhc016
            {<point name="construct.a.page3.bmhc016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmhc016
         ON ACTION controlp INFIELD bmhc016
            #add-point:ON ACTION controlp INFIELD bmhc016
            {<point name="construct.c.page3.bmhc016" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON bmhd003
           FROM s_detail4[1].bmhd003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page4.bmhd003
         ON ACTION controlp INFIELD bmhd003
            #add-point:ON ACTION controlp INFIELD bmhd003
            {<point name="construct.c.page4.bmhd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhd003
            #add-point:BEFORE FIELD bmhd003
            {<point name="construct.b.page4.bmhd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhd003
            
            #add-point:AFTER FIELD bmhd003
            {<point name="construct.a.page4.bmhd003" />}
            #END add-point
            
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION abmi400_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bmhe001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.delete" ver="5" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION abmi400_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_bmhe_m.bmhe001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g_master_multi_table_t.bmhel001 = g_bmhe_m.bmhe001
LET g_master_multi_table_t.bmhel003 = g_bmhe_m.bmhel003
 
 
   CALL abmi400_show()
   
   CALL s_transaction_begin()
 
   OPEN abmi400_cl USING g_enterprise,g_bmhe_m.bmhe001
   IF STATUS THEN
      CALL cl_err("OPEN abmi400_cl:", STATUS, 1)
      CLOSE abmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmi400_master_referesh USING g_bmhe_m.bmhe001 INTO g_bmhe_m.bmhe001,g_bmhe_m.bmhestus,g_bmhe_m.bmheownid, 
       g_bmhe_m.bmheowndp,g_bmhe_m.bmhecrtid,g_bmhe_m.bmhecrtdp,g_bmhe_m.bmhecrtdt,g_bmhe_m.bmhemodid, 
       g_bmhe_m.bmhemoddt,g_bmhe_m.bmhe002,g_bmhe_m.bmheownid_desc,g_bmhe_m.bmheowndp_desc,g_bmhe_m.bmhecrtid_desc, 
       g_bmhe_m.bmhecrtdp_desc,g_bmhe_m.bmhemodid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmhe_m.bmhe001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL abmi400_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_bmhe001_t = g_bmhe_m.bmhe001
 
 
      DELETE FROM bmhe_t
       WHERE bmheent = g_enterprise AND bmhe001 = g_bmhe_m.bmhe001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_bmhe_m.bmhe001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM bmha_t
       WHERE bmhaent = g_enterprise AND bmha001 = g_bmhe_m.bmhe001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmha_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM bmhb_t
       WHERE bmhbent = g_enterprise AND
             bmhb001 = g_bmhe_m.bmhe001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM bmhc_t
       WHERE bmhcent = g_enterprise AND
             bmhc001 = g_bmhe_m.bmhe001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhc_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM bmhd_t
       WHERE bmhdent = g_enterprise AND
             bmhd001 = g_bmhe_m.bmhe001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhd_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_bmha_d.clear() 
      CALL g_bmha2_d.clear()       
      CALL g_bmha3_d.clear()       
      CALL g_bmha4_d.clear()       
 
     
      #CALL abmi400_ui_browser_refresh()  
      CALL abmi400_ui_headershow()  
      CALL abmi400_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL abmi400_browser_fill("")
         CALL abmi400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL abmi400_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.bmhel001
   LET l_field_keys[01] = 'bmhel001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'bmhel002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'bmhel_t')
 
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE abmi400_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_bmhe_m.bmhe001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="abmi400.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION abmi400_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM bmha_t
       WHERE bmhaent = g_enterprise AND
         bmha001 = ps_keys_bak[1] AND bmhaseq = ps_keys_bak[2] AND bmhaseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM bmhb_t
       WHERE bmhbent = g_enterprise AND
         bmhb001 = ps_keys_bak[1] AND bmhb002 = ps_keys_bak[2] AND bmhb003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM bmhc_t
       WHERE bmhcent = g_enterprise AND
         bmhc001 = ps_keys_bak[1] AND bmhcseq = ps_keys_bak[2] AND bmhc017 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM bmhd_t
       WHERE bmhdent = g_enterprise AND
         bmhd001 = ps_keys_bak[1] AND bmhd003 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.description" ver="1" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000063
#+ 
#+ Filename...: abmi400
#+ Description: 料件承認模板維護作業
#+ Creator....: 02295(2014/06/06)
#+ Modifier...: 02295(2014/06/10)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="abmi400.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION abmi400_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bmha_t.*
   DEFINE l_detail2    RECORD LIKE bmhb_t.*
 
   DEFINE l_detail3    RECORD LIKE bmhc_t.*
 
   DEFINE l_detail4    RECORD LIKE bmhd_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abmi400_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE abmi400_detail AS ",
                "SELECT * FROM bmha_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmi400_detail SELECT * FROM bmha_t 
                                         WHERE bmhaent = g_enterprise AND bmha001 = g_bmhe001_t
 
   
   #將key修正為調整後   
   UPDATE abmi400_detail 
      #更新key欄位
      SET bmha001 = g_bmhe_m.bmhe001
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO bmha_t SELECT * FROM abmi400_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmi400_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmi400_detail AS ",
      "SELECT * FROM bmhb_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmi400_detail SELECT * FROM bmhb_t
                                         WHERE bmhbent = g_enterprise AND bmhb001 = g_bmhe001_t
 
 
   #將key修正為調整後   
   UPDATE abmi400_detail SET bmhb001 = g_bmhe_m.bmhe001
 
  
   #將資料塞回原table   
   INSERT INTO bmhb_t SELECT * FROM abmi400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmi400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmi400_detail AS ",
      "SELECT * FROM bmhc_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmi400_detail SELECT * FROM bmhc_t
                                         WHERE bmhcent = g_enterprise AND bmhc001 = g_bmhe001_t
 
 
   #將key修正為調整後   
   UPDATE abmi400_detail SET bmhc001 = g_bmhe_m.bmhe001
 
  
   #將資料塞回原table   
   INSERT INTO bmhc_t SELECT * FROM abmi400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmi400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmi400_detail AS ",
      "SELECT * FROM bmhd_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmi400_detail SELECT * FROM bmhd_t
                                         WHERE bmhdent = g_enterprise AND bmhd001 = g_bmhe001_t
 
 
   #將key修正為調整後   
   UPDATE abmi400_detail SET bmhd001 = g_bmhe_m.bmhe001
 
  
   #將資料塞回原table   
   INSERT INTO bmhd_t SELECT * FROM abmi400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmi400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bmhe001_t = g_bmhe_m.bmhe001
 
   
   DROP TABLE abmi400_detail
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION abmi400_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.fetch" ver="4" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abmi400_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bmhe_m.bmhe001 = g_browser[g_current_idx].b_bmhe001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE abmi400_master_referesh USING g_bmhe_m.bmhe001 INTO g_bmhe_m.bmhe001,g_bmhe_m.bmhestus,g_bmhe_m.bmheownid, 
       g_bmhe_m.bmheowndp,g_bmhe_m.bmhecrtid,g_bmhe_m.bmhecrtdp,g_bmhe_m.bmhecrtdt,g_bmhe_m.bmhemodid, 
       g_bmhe_m.bmhemoddt,g_bmhe_m.bmhe002,g_bmhe_m.bmheownid_desc,g_bmhe_m.bmheowndp_desc,g_bmhe_m.bmhecrtid_desc, 
       g_bmhe_m.bmhecrtdp_desc,g_bmhe_m.bmhemodid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("bmhe_t",SQLCA.sqlcode,1)
      INITIALIZE g_bmhe_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_bmhe_m_t.* = g_bmhe_m.*
   LET g_bmhe_m_o.* = g_bmhe_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL abmi400_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.fill_chk" ver="2" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION abmi400_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 4 AND
      ((NOT cl_null(g_wc2_table4) AND g_wc2_table4.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION abmi400_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON bmhe001
                          FROM s_browse[1].b_bmhe001
 
         BEFORE CONSTRUCT
               DISPLAY abmi400_filter_parser('bmhe001') TO s_browse[1].b_bmhe001
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL abmi400_filter_show('bmhe001')
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION abmi400_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION abmi400_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = abmi400_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.global" ver="8" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_bmhe_m        RECORD
       bmhe001 LIKE bmhe_t.bmhe001, 
   bmhel003 LIKE bmhel_t.bmhel003, 
   bmhestus LIKE bmhe_t.bmhestus, 
   bmheownid LIKE bmhe_t.bmheownid, 
   bmheownid_desc LIKE type_t.chr80, 
   bmheowndp LIKE bmhe_t.bmheowndp, 
   bmheowndp_desc LIKE type_t.chr80, 
   bmhecrtid LIKE bmhe_t.bmhecrtid, 
   bmhecrtid_desc LIKE type_t.chr80, 
   bmhecrtdp LIKE bmhe_t.bmhecrtdp, 
   bmhecrtdp_desc LIKE type_t.chr80, 
   bmhecrtdt DATETIME YEAR TO SECOND, 
   bmhemodid LIKE bmhe_t.bmhemodid, 
   bmhemodid_desc LIKE type_t.chr80, 
   bmhemoddt DATETIME YEAR TO SECOND, 
   bmhe002 LIKE bmhe_t.bmhe002
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bmha_d        RECORD
       bmhaseq LIKE bmha_t.bmhaseq, 
   bmha002 LIKE bmha_t.bmha002, 
   bmha002_desc LIKE type_t.chr500, 
   bmhaseq1 LIKE bmha_t.bmhaseq1, 
   bmha003 LIKE bmha_t.bmha003, 
   bmha004 LIKE bmha_t.bmha004, 
   bmha004_desc LIKE type_t.chr500, 
   bmha005 LIKE bmha_t.bmha005
       END RECORD
PRIVATE TYPE type_g_bmha2_d RECORD
       bmhb002 LIKE bmhb_t.bmhb002, 
   bmhb002_desc LIKE type_t.chr500, 
   bmhb003 LIKE bmhb_t.bmhb003, 
   bmhb003_desc LIKE type_t.chr500, 
   bmhb004 LIKE bmhb_t.bmhb004, 
   bmhb005 LIKE bmhb_t.bmhb005, 
   bmhb005_desc LIKE type_t.chr500, 
   bmhb006 LIKE bmhb_t.bmhb006, 
   bmhb006_desc LIKE type_t.chr500
       END RECORD
PRIVATE TYPE type_g_bmha3_d RECORD
       bmhcseq LIKE bmhc_t.bmhcseq, 
   bmhc017 LIKE bmhc_t.bmhc017, 
   bmhc002 LIKE bmhc_t.bmhc002, 
   bmhc002_desc LIKE type_t.chr500, 
   bmhc003 LIKE bmhc_t.bmhc003, 
   bmhc005 LIKE bmhc_t.bmhc005, 
   bmhc004 LIKE bmhc_t.bmhc004, 
   bmhc006 LIKE bmhc_t.bmhc006, 
   bmhc009 LIKE bmhc_t.bmhc009, 
   bmhc010 LIKE bmhc_t.bmhc010, 
   bmhc011 LIKE bmhc_t.bmhc011, 
   bmhc012 LIKE bmhc_t.bmhc012, 
   bmhc013 LIKE bmhc_t.bmhc013, 
   bmhc014 LIKE bmhc_t.bmhc014, 
   bmhc014_desc LIKE type_t.chr500, 
   bmhc015 LIKE bmhc_t.bmhc015, 
   bmhc016 LIKE bmhc_t.bmhc016
       END RECORD
PRIVATE TYPE type_g_bmha4_d RECORD
       bmhd003 LIKE bmhd_t.bmhd003, 
   bmhd003_desc LIKE type_t.chr500
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_bmhe_m          type_g_bmhe_m
DEFINE g_bmhe_m_t        type_g_bmhe_m
DEFINE g_bmhe_m_o        type_g_bmhe_m
 
   DEFINE g_bmhe001_t LIKE bmhe_t.bmhe001
 
 
DEFINE g_bmha_d          DYNAMIC ARRAY OF type_g_bmha_d
DEFINE g_bmha_d_t        type_g_bmha_d
DEFINE g_bmha_d_o        type_g_bmha_d
DEFINE g_bmha2_d   DYNAMIC ARRAY OF type_g_bmha2_d
DEFINE g_bmha2_d_t type_g_bmha2_d
DEFINE g_bmha2_d_o type_g_bmha2_d
DEFINE g_bmha3_d   DYNAMIC ARRAY OF type_g_bmha3_d
DEFINE g_bmha3_d_t type_g_bmha3_d
DEFINE g_bmha3_d_o type_g_bmha3_d
DEFINE g_bmha4_d   DYNAMIC ARRAY OF type_g_bmha4_d
DEFINE g_bmha4_d_t type_g_bmha4_d
DEFINE g_bmha4_d_o type_g_bmha4_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmhe001 LIKE bmhe_t.bmhe001,
   b_bmhe001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmhe001 LIKE bmhe_t.bmhe001,
   b_bmhe001_desc LIKE type_t.chr80
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      bmhel001 LIKE bmhel_t.bmhel001,
      bmhel003 LIKE bmhel_t.bmhel003
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="abmi400.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION abmi400_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmha_d.getLength() THEN
         LET g_detail_idx = g_bmha_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmha_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmha_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_bmha2_d.getLength() THEN
         LET g_detail_idx = g_bmha2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmha2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmha2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_bmha3_d.getLength() THEN
         LET g_detail_idx = g_bmha3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmha3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmha3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_bmha4_d.getLength() THEN
         LET g_detail_idx = g_bmha4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmha4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmha4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abmi400_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('bmhestus','17','N,Y')
 
      CALL cl_set_combo_scc('bmhe002','37') 
   CALL cl_set_combo_scc('bmhc017','5056') 
   CALL cl_set_combo_scc('bmhc005','5058') 
   CALL cl_set_combo_scc('bmhc004','5057') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL abmi400_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="abmi400.input" ver="6" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION abmi400_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT bmhaseq,bmha002,bmhaseq1,bmha003,bmha004,bmha005 FROM bmha_t WHERE bmhaent=?  
       AND bmha001=? AND bmhaseq=? AND bmhaseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmi400_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmhb002,bmhb003,bmhb004,bmhb005,bmhb006 FROM bmhb_t WHERE bmhbent=? AND  
       bmhb001=? AND bmhb002=? AND bmhb003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmi400_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmhcseq,bmhc017,bmhc002,bmhc003,bmhc005,bmhc004,bmhc006,bmhc009,bmhc010, 
       bmhc011,bmhc012,bmhc013,bmhc014,bmhc015,bmhc016 FROM bmhc_t WHERE bmhcent=? AND bmhc001=? AND  
       bmhcseq=? AND bmhc017=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmi400_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmhd003 FROM bmhd_t WHERE bmhdent=? AND bmhd001=? AND bmhd003=? FOR UPDATE" 

   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmi400_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abmi400_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL abmi400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_bmhe_m.bmhe001,g_bmhe_m.bmhel003,g_bmhe_m.bmhestus,g_bmhe_m.bmhe002
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="abmi400.input.body" ver="8" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmha_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmha_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmi400_b_fill()
            LET g_rec_b = g_bmha_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmi400_cl USING g_enterprise,g_bmhe_m.bmhe001
            IF STATUS THEN
               CALL cl_err("OPEN abmi400_cl:", STATUS, 1)
               CLOSE abmi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmha_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmha_d[l_ac].bmhaseq IS NOT NULL
               AND g_bmha_d[l_ac].bmhaseq1 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bmha_d_t.* = g_bmha_d[l_ac].*  #BACKUP
               LET g_bmha_d_o.* = g_bmha_d[l_ac].*  #BACKUP
               CALL abmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL abmi400_set_no_entry_b(l_cmd)
               IF NOT abmi400_lock_b("bmha_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmi400_bcl INTO g_bmha_d[l_ac].bmhaseq,g_bmha_d[l_ac].bmha002,g_bmha_d[l_ac].bmhaseq1, 
                      g_bmha_d[l_ac].bmha003,g_bmha_d[l_ac].bmha004,g_bmha_d[l_ac].bmha005
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_bmha_d_t.bmhaseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmha_d[l_ac].* TO NULL 
			INITIALIZE g_bmha_d_t.* TO NULL 
            INITIALIZE g_bmha_d_o.* TO NULL 
                  LET g_bmha_d[l_ac].bmha005 = "N"
 
            LET g_bmha_d_t.* = g_bmha_d[l_ac].*     #新輸入資料
            LET g_bmha_d_o.* = g_bmha_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmha_d[li_reproduce_target].* = g_bmha_d[li_reproduce].*
 
               LET g_bmha_d[li_reproduce_target].bmhaseq = NULL
               LET g_bmha_d[li_reproduce_target].bmhaseq1 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmha_t 
             WHERE bmhaent = g_enterprise AND bmha001 = g_bmhe_m.bmhe001
 
               AND bmhaseq = g_bmha_d[l_ac].bmhaseq
               AND bmhaseq1 = g_bmha_d[l_ac].bmhaseq1
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha_d[g_detail_idx].bmhaseq
               LET gs_keys[3] = g_bmha_d[g_detail_idx].bmhaseq1
               CALL abmi400_insert_b('bmha_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmha_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmha_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmha_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmha_d.deleteElement(l_ac)
               NEXT FIELD bmhaseq
            END IF
         
            IF g_bmha_d[l_ac].bmhaseq IS NOT NULL
               AND g_bmha_d_t.bmhaseq1 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM bmha_t
                WHERE bmhaent = g_enterprise AND bmha001 = g_bmhe_m.bmhe001 AND
 
                      bmhaseq = g_bmha_d_t.bmhaseq
                  AND bmhaseq1 = g_bmha_d_t.bmhaseq1
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmha_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmi400_bcl
               LET l_count = g_bmha_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha_d[g_detail_idx].bmhaseq
               LET gs_keys[3] = g_bmha_d[g_detail_idx].bmhaseq1
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL abmi400_delete_b('bmha_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD bmhaseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmha_d[l_ac].bmhaseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD bmhaseq
            END IF
 
 
            #add-point:AFTER FIELD bmhaseq
            {<point name="input.a.page1.bmhaseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhaseq
            #add-point:BEFORE FIELD bmhaseq
            {<point name="input.b.page1.bmhaseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhaseq
            #add-point:ON CHANGE bmhaseq
            {<point name="input.g.page1.bmhaseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha002
            
            #add-point:AFTER FIELD bmha002
            {<point name="input.a.page1.bmha002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha002
            #add-point:BEFORE FIELD bmha002
            {<point name="input.b.page1.bmha002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmha002
            #add-point:ON CHANGE bmha002
            {<point name="input.g.page1.bmha002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhaseq1
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmha_d[l_ac].bmhaseq1,"0","0","","","azz-00079",1) THEN
               NEXT FIELD bmhaseq1
            END IF
 
 
            #add-point:AFTER FIELD bmhaseq1
            {<point name="input.a.page1.bmhaseq1" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhaseq1
            #add-point:BEFORE FIELD bmhaseq1
            {<point name="input.b.page1.bmhaseq1" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhaseq1
            #add-point:ON CHANGE bmhaseq1
            {<point name="input.g.page1.bmhaseq1" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha003
            #add-point:BEFORE FIELD bmha003
            {<point name="input.b.page1.bmha003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha003
            
            #add-point:AFTER FIELD bmha003
            {<point name="input.a.page1.bmha003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmha003
            #add-point:ON CHANGE bmha003
            {<point name="input.g.page1.bmha003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha004
            
            #add-point:AFTER FIELD bmha004
            {<point name="input.a.page1.bmha004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha004
            #add-point:BEFORE FIELD bmha004
            {<point name="input.b.page1.bmha004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmha004
            #add-point:ON CHANGE bmha004
            {<point name="input.g.page1.bmha004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmha005
            #add-point:BEFORE FIELD bmha005
            {<point name="input.b.page1.bmha005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmha005
            
            #add-point:AFTER FIELD bmha005
            {<point name="input.a.page1.bmha005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmha005
            #add-point:ON CHANGE bmha005
            {<point name="input.g.page1.bmha005" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.bmhaseq
         ON ACTION controlp INFIELD bmhaseq
            #add-point:ON ACTION controlp INFIELD bmhaseq
            {<point name="input.c.page1.bmhaseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmha002
         ON ACTION controlp INFIELD bmha002
            #add-point:ON ACTION controlp INFIELD bmha002
            {<point name="input.c.page1.bmha002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmhaseq1
         ON ACTION controlp INFIELD bmhaseq1
            #add-point:ON ACTION controlp INFIELD bmhaseq1
            {<point name="input.c.page1.bmhaseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmha003
         ON ACTION controlp INFIELD bmha003
            #add-point:ON ACTION controlp INFIELD bmha003
            {<point name="input.c.page1.bmha003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmha004
         ON ACTION controlp INFIELD bmha004
            #add-point:ON ACTION controlp INFIELD bmha004
            {<point name="input.c.page1.bmha004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmha005
         ON ACTION controlp INFIELD bmha005
            #add-point:ON ACTION controlp INFIELD bmha005
            {<point name="input.c.page1.bmha005" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmha_d[l_ac].* = g_bmha_d_t.*
               CLOSE abmi400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_bmha_d[l_ac].bmhaseq,-263,1)
               LET g_bmha_d[l_ac].* = g_bmha_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE bmha_t SET (bmha001,bmhaseq,bmha002,bmhaseq1,bmha003,bmha004,bmha005) = (g_bmhe_m.bmhe001, 
                   g_bmha_d[l_ac].bmhaseq,g_bmha_d[l_ac].bmha002,g_bmha_d[l_ac].bmhaseq1,g_bmha_d[l_ac].bmha003, 
                   g_bmha_d[l_ac].bmha004,g_bmha_d[l_ac].bmha005)
                WHERE bmhaent = g_enterprise AND bmha001 = g_bmhe_m.bmhe001 
 
                  AND bmhaseq = g_bmha_d_t.bmhaseq #項次   
                  AND bmhaseq1 = g_bmha_d_t.bmhaseq1  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmha_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmha_d[l_ac].* = g_bmha_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmha_t",SQLCA.sqlcode,1)
                     LET g_bmha_d[l_ac].* = g_bmha_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys_bak[1] = g_bmhe001_t
               LET gs_keys[2] = g_bmha_d[g_detail_idx].bmhaseq
               LET gs_keys_bak[2] = g_bmha_d_t.bmhaseq
               LET gs_keys[3] = g_bmha_d[g_detail_idx].bmhaseq1
               LET gs_keys_bak[3] = g_bmha_d_t.bmhaseq1
               CALL abmi400_update_b('bmha_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha_d_t)
               LET g_log2 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL abmi400_unlock_b("bmha_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_bmha_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmha_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_bmha2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmha2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmi400_b_fill()
            LET g_rec_b = g_bmha2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmha2_d[l_ac].* TO NULL 
            INITIALIZE g_bmha2_d_t.* TO NULL 
            INITIALIZE g_bmha2_d_o.* TO NULL 
            
            LET g_bmha2_d_t.* = g_bmha2_d[l_ac].*     #新輸入資料
            LET g_bmha2_d_o.* = g_bmha2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmha2_d[li_reproduce_target].* = g_bmha2_d[li_reproduce].*
 
               LET g_bmha2_d[li_reproduce_target].bmhb002 = NULL
               LET g_bmha2_d[li_reproduce_target].bmhb003 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmi400_cl USING g_enterprise,g_bmhe_m.bmhe001
            IF STATUS THEN
               CALL cl_err("OPEN abmi400_cl:", STATUS, 1)
               CLOSE abmi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmha2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmha2_d[l_ac].bmhb002 IS NOT NULL
               AND g_bmha2_d[l_ac].bmhb003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmha2_d_t.* = g_bmha2_d[l_ac].*  #BACKUP
               LET g_bmha2_d_o.* = g_bmha2_d[l_ac].*  #BACKUP
               CALL abmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL abmi400_set_no_entry_b(l_cmd)
               IF NOT abmi400_lock_b("bmhb_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmi400_bcl2 INTO g_bmha2_d[l_ac].bmhb002,g_bmha2_d[l_ac].bmhb003,g_bmha2_d[l_ac].bmhb004, 
                      g_bmha2_d[l_ac].bmhb005,g_bmha2_d[l_ac].bmhb006
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmha2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmha2_d.deleteElement(l_ac)
               NEXT FIELD bmhb002
            END IF
         
            IF g_bmha2_d[l_ac].bmhb002 IS NOT NULL
               AND g_bmha2_d_t.bmhb003 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM bmhb_t
                WHERE bmhbent = g_enterprise AND bmhb001 = g_bmhe_m.bmhe001 AND
                      bmhb002 = g_bmha2_d_t.bmhb002
                  AND bmhb003 = g_bmha2_d_t.bmhb003
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmha_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmi400_bcl
               LET l_count = g_bmha_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha2_d[g_detail_idx].bmhb002
               LET gs_keys[3] = g_bmha2_d[g_detail_idx].bmhb003
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL abmi400_delete_b('bmhb_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmhb_t 
             WHERE bmhbent = g_enterprise AND bmhb001 = g_bmhe_m.bmhe001
               AND bmhb002 = g_bmha2_d[l_ac].bmhb002
               AND bmhb003 = g_bmha2_d[l_ac].bmhb003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha2_d[g_detail_idx].bmhb002
               LET gs_keys[3] = g_bmha2_d[g_detail_idx].bmhb003
               CALL abmi400_insert_b('bmhb_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmha_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmhb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmha2_d[l_ac].* = g_bmha2_d_t.*
               CLOSE abmi400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_bmha2_d[l_ac].* = g_bmha2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE bmhb_t SET (bmhb001,bmhb002,bmhb003,bmhb004,bmhb005,bmhb006) = (g_bmhe_m.bmhe001, 
                   g_bmha2_d[l_ac].bmhb002,g_bmha2_d[l_ac].bmhb003,g_bmha2_d[l_ac].bmhb004,g_bmha2_d[l_ac].bmhb005, 
                   g_bmha2_d[l_ac].bmhb006) #自訂欄位頁簽
                WHERE bmhbent = g_enterprise AND bmhb001 = g_bmhe_m.bmhe001
                  AND bmhb002 = g_bmha2_d_t.bmhb002 #項次 
                  AND bmhb003 = g_bmha2_d_t.bmhb003
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmhb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmha2_d[l_ac].* = g_bmha2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmhb_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_bmha2_d[l_ac].* = g_bmha2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys_bak[1] = g_bmhe001_t
               LET gs_keys[2] = g_bmha2_d[g_detail_idx].bmhb002
               LET gs_keys_bak[2] = g_bmha2_d_t.bmhb002
               LET gs_keys[3] = g_bmha2_d[g_detail_idx].bmhb003
               LET gs_keys_bak[3] = g_bmha2_d_t.bmhb003
               CALL abmi400_update_b('bmhb_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha2_d_t)
               LET g_log2 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD bmhb002
            
            #add-point:AFTER FIELD bmhb002
            {<point name="input.a.page2.bmhb002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb002
            #add-point:BEFORE FIELD bmhb002
            {<point name="input.b.page2.bmhb002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhb002
            #add-point:ON CHANGE bmhb002
            {<point name="input.g.page2.bmhb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb003
            
            #add-point:AFTER FIELD bmhb003
            {<point name="input.a.page2.bmhb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb003
            #add-point:BEFORE FIELD bmhb003
            {<point name="input.b.page2.bmhb003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhb003
            #add-point:ON CHANGE bmhb003
            {<point name="input.g.page2.bmhb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb004
            #add-point:BEFORE FIELD bmhb004
            {<point name="input.b.page2.bmhb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb004
            
            #add-point:AFTER FIELD bmhb004
            {<point name="input.a.page2.bmhb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhb004
            #add-point:ON CHANGE bmhb004
            {<point name="input.g.page2.bmhb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb005
            
            #add-point:AFTER FIELD bmhb005
            {<point name="input.a.page2.bmhb005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb005
            #add-point:BEFORE FIELD bmhb005
            {<point name="input.b.page2.bmhb005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhb005
            #add-point:ON CHANGE bmhb005
            {<point name="input.g.page2.bmhb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhb006
            
            #add-point:AFTER FIELD bmhb006
            {<point name="input.a.page2.bmhb006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhb006
            #add-point:BEFORE FIELD bmhb006
            {<point name="input.b.page2.bmhb006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhb006
            #add-point:ON CHANGE bmhb006
            {<point name="input.g.page2.bmhb006" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.bmhb002
         ON ACTION controlp INFIELD bmhb002
            #add-point:ON ACTION controlp INFIELD bmhb002
            {<point name="input.c.page2.bmhb002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmhb003
         ON ACTION controlp INFIELD bmhb003
            #add-point:ON ACTION controlp INFIELD bmhb003
            {<point name="input.c.page2.bmhb003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmhb004
         ON ACTION controlp INFIELD bmhb004
            #add-point:ON ACTION controlp INFIELD bmhb004
            {<point name="input.c.page2.bmhb004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmhb005
         ON ACTION controlp INFIELD bmhb005
            #add-point:ON ACTION controlp INFIELD bmhb005
            {<point name="input.c.page2.bmhb005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmhb006
         ON ACTION controlp INFIELD bmhb006
            #add-point:ON ACTION controlp INFIELD bmhb006
            {<point name="input.c.page2.bmhb006" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmha2_d[l_ac].* = g_bmha2_d_t.*
               END IF
               CLOSE abmi400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmi400_unlock_b("bmhb_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmha2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmha2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_bmha3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmha3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmi400_b_fill()
            LET g_rec_b = g_bmha3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmha3_d[l_ac].* TO NULL 
            INITIALIZE g_bmha3_d_t.* TO NULL 
            INITIALIZE g_bmha3_d_o.* TO NULL 
                  LET g_bmha3_d[l_ac].bmhc017 = "0"
 
            LET g_bmha3_d_t.* = g_bmha3_d[l_ac].*     #新輸入資料
            LET g_bmha3_d_o.* = g_bmha3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmha3_d[li_reproduce_target].* = g_bmha3_d[li_reproduce].*
 
               LET g_bmha3_d[li_reproduce_target].bmhcseq = NULL
               LET g_bmha3_d[li_reproduce_target].bmhc017 = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmi400_cl USING g_enterprise,g_bmhe_m.bmhe001
            IF STATUS THEN
               CALL cl_err("OPEN abmi400_cl:", STATUS, 1)
               CLOSE abmi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmha3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmha3_d[l_ac].bmhcseq IS NOT NULL
               AND g_bmha3_d[l_ac].bmhc017 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmha3_d_t.* = g_bmha3_d[l_ac].*  #BACKUP
               LET g_bmha3_d_o.* = g_bmha3_d[l_ac].*  #BACKUP
               CALL abmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL abmi400_set_no_entry_b(l_cmd)
               IF NOT abmi400_lock_b("bmhc_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmi400_bcl3 INTO g_bmha3_d[l_ac].bmhcseq,g_bmha3_d[l_ac].bmhc017,g_bmha3_d[l_ac].bmhc002, 
                      g_bmha3_d[l_ac].bmhc003,g_bmha3_d[l_ac].bmhc005,g_bmha3_d[l_ac].bmhc004,g_bmha3_d[l_ac].bmhc006, 
                      g_bmha3_d[l_ac].bmhc009,g_bmha3_d[l_ac].bmhc010,g_bmha3_d[l_ac].bmhc011,g_bmha3_d[l_ac].bmhc012, 
                      g_bmha3_d[l_ac].bmhc013,g_bmha3_d[l_ac].bmhc014,g_bmha3_d[l_ac].bmhc015,g_bmha3_d[l_ac].bmhc016 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmha3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmha3_d.deleteElement(l_ac)
               NEXT FIELD bmhcseq
            END IF
         
            IF g_bmha3_d[l_ac].bmhcseq IS NOT NULL
               AND g_bmha3_d_t.bmhc017 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM bmhc_t
                WHERE bmhcent = g_enterprise AND bmhc001 = g_bmhe_m.bmhe001 AND
                      bmhcseq = g_bmha3_d_t.bmhcseq
                  AND bmhc017 = g_bmha3_d_t.bmhc017
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmha_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmi400_bcl
               LET l_count = g_bmha_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha3_d[g_detail_idx].bmhcseq
               LET gs_keys[3] = g_bmha3_d[g_detail_idx].bmhc017
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL abmi400_delete_b('bmhc_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmhc_t 
             WHERE bmhcent = g_enterprise AND bmhc001 = g_bmhe_m.bmhe001
               AND bmhcseq = g_bmha3_d[l_ac].bmhcseq
               AND bmhc017 = g_bmha3_d[l_ac].bmhc017
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha3_d[g_detail_idx].bmhcseq
               LET gs_keys[3] = g_bmha3_d[g_detail_idx].bmhc017
               CALL abmi400_insert_b('bmhc_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmha_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmhc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmha3_d[l_ac].* = g_bmha3_d_t.*
               CLOSE abmi400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_bmha3_d[l_ac].* = g_bmha3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE bmhc_t SET (bmhc001,bmhcseq,bmhc017,bmhc002,bmhc003,bmhc005,bmhc004,bmhc006,bmhc009, 
                   bmhc010,bmhc011,bmhc012,bmhc013,bmhc014,bmhc015,bmhc016) = (g_bmhe_m.bmhe001,g_bmha3_d[l_ac].bmhcseq, 
                   g_bmha3_d[l_ac].bmhc017,g_bmha3_d[l_ac].bmhc002,g_bmha3_d[l_ac].bmhc003,g_bmha3_d[l_ac].bmhc005, 
                   g_bmha3_d[l_ac].bmhc004,g_bmha3_d[l_ac].bmhc006,g_bmha3_d[l_ac].bmhc009,g_bmha3_d[l_ac].bmhc010, 
                   g_bmha3_d[l_ac].bmhc011,g_bmha3_d[l_ac].bmhc012,g_bmha3_d[l_ac].bmhc013,g_bmha3_d[l_ac].bmhc014, 
                   g_bmha3_d[l_ac].bmhc015,g_bmha3_d[l_ac].bmhc016) #自訂欄位頁簽
                WHERE bmhcent = g_enterprise AND bmhc001 = g_bmhe_m.bmhe001
                  AND bmhcseq = g_bmha3_d_t.bmhcseq #項次 
                  AND bmhc017 = g_bmha3_d_t.bmhc017
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmhc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmha3_d[l_ac].* = g_bmha3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmhc_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_bmha3_d[l_ac].* = g_bmha3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys_bak[1] = g_bmhe001_t
               LET gs_keys[2] = g_bmha3_d[g_detail_idx].bmhcseq
               LET gs_keys_bak[2] = g_bmha3_d_t.bmhcseq
               LET gs_keys[3] = g_bmha3_d[g_detail_idx].bmhc017
               LET gs_keys_bak[3] = g_bmha3_d_t.bmhc017
               CALL abmi400_update_b('bmhc_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha3_d_t)
               LET g_log2 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha3_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD bmhcseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmha3_d[l_ac].bmhcseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD bmhcseq
            END IF
 
 
            #add-point:AFTER FIELD bmhcseq
            {<point name="input.a.page3.bmhcseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhcseq
            #add-point:BEFORE FIELD bmhcseq
            {<point name="input.b.page3.bmhcseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhcseq
            #add-point:ON CHANGE bmhcseq
            {<point name="input.g.page3.bmhcseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc017
            #add-point:BEFORE FIELD bmhc017
            {<point name="input.b.page3.bmhc017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc017
            
            #add-point:AFTER FIELD bmhc017
            {<point name="input.a.page3.bmhc017" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc017
            #add-point:ON CHANGE bmhc017
            {<point name="input.g.page3.bmhc017" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc002
            
            #add-point:AFTER FIELD bmhc002
            {<point name="input.a.page3.bmhc002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc002
            #add-point:BEFORE FIELD bmhc002
            {<point name="input.b.page3.bmhc002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc002
            #add-point:ON CHANGE bmhc002
            {<point name="input.g.page3.bmhc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc003
            #add-point:BEFORE FIELD bmhc003
            {<point name="input.b.page3.bmhc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc003
            
            #add-point:AFTER FIELD bmhc003
            {<point name="input.a.page3.bmhc003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc003
            #add-point:ON CHANGE bmhc003
            {<point name="input.g.page3.bmhc003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc005
            #add-point:BEFORE FIELD bmhc005
            {<point name="input.b.page3.bmhc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc005
            
            #add-point:AFTER FIELD bmhc005
            {<point name="input.a.page3.bmhc005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc005
            #add-point:ON CHANGE bmhc005
            {<point name="input.g.page3.bmhc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc004
            #add-point:BEFORE FIELD bmhc004
            {<point name="input.b.page3.bmhc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc004
            
            #add-point:AFTER FIELD bmhc004
            {<point name="input.a.page3.bmhc004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc004
            #add-point:ON CHANGE bmhc004
            {<point name="input.g.page3.bmhc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc006
            #add-point:BEFORE FIELD bmhc006
            {<point name="input.b.page3.bmhc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc006
            
            #add-point:AFTER FIELD bmhc006
            {<point name="input.a.page3.bmhc006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc006
            #add-point:ON CHANGE bmhc006
            {<point name="input.g.page3.bmhc006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc009
            #add-point:BEFORE FIELD bmhc009
            {<point name="input.b.page3.bmhc009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc009
            
            #add-point:AFTER FIELD bmhc009
            {<point name="input.a.page3.bmhc009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc009
            #add-point:ON CHANGE bmhc009
            {<point name="input.g.page3.bmhc009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc010
            #add-point:BEFORE FIELD bmhc010
            {<point name="input.b.page3.bmhc010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc010
            
            #add-point:AFTER FIELD bmhc010
            {<point name="input.a.page3.bmhc010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc010
            #add-point:ON CHANGE bmhc010
            {<point name="input.g.page3.bmhc010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc011
            #add-point:BEFORE FIELD bmhc011
            {<point name="input.b.page3.bmhc011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc011
            
            #add-point:AFTER FIELD bmhc011
            {<point name="input.a.page3.bmhc011" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc011
            #add-point:ON CHANGE bmhc011
            {<point name="input.g.page3.bmhc011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc012
            #add-point:BEFORE FIELD bmhc012
            {<point name="input.b.page3.bmhc012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc012
            
            #add-point:AFTER FIELD bmhc012
            {<point name="input.a.page3.bmhc012" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc012
            #add-point:ON CHANGE bmhc012
            {<point name="input.g.page3.bmhc012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc013
            #add-point:BEFORE FIELD bmhc013
            {<point name="input.b.page3.bmhc013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc013
            
            #add-point:AFTER FIELD bmhc013
            {<point name="input.a.page3.bmhc013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc013
            #add-point:ON CHANGE bmhc013
            {<point name="input.g.page3.bmhc013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc014
            
            #add-point:AFTER FIELD bmhc014
            {<point name="input.a.page3.bmhc014" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc014
            #add-point:BEFORE FIELD bmhc014
            {<point name="input.b.page3.bmhc014" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc014
            #add-point:ON CHANGE bmhc014
            {<point name="input.g.page3.bmhc014" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc015
            #add-point:BEFORE FIELD bmhc015
            {<point name="input.b.page3.bmhc015" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc015
            
            #add-point:AFTER FIELD bmhc015
            {<point name="input.a.page3.bmhc015" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc015
            #add-point:ON CHANGE bmhc015
            {<point name="input.g.page3.bmhc015" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhc016
            #add-point:BEFORE FIELD bmhc016
            {<point name="input.b.page3.bmhc016" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhc016
            
            #add-point:AFTER FIELD bmhc016
            {<point name="input.a.page3.bmhc016" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhc016
            #add-point:ON CHANGE bmhc016
            {<point name="input.g.page3.bmhc016" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.bmhcseq
         ON ACTION controlp INFIELD bmhcseq
            #add-point:ON ACTION controlp INFIELD bmhcseq
            {<point name="input.c.page3.bmhcseq" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc017
         ON ACTION controlp INFIELD bmhc017
            #add-point:ON ACTION controlp INFIELD bmhc017
            {<point name="input.c.page3.bmhc017" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc002
         ON ACTION controlp INFIELD bmhc002
            #add-point:ON ACTION controlp INFIELD bmhc002
            {<point name="input.c.page3.bmhc002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc003
         ON ACTION controlp INFIELD bmhc003
            #add-point:ON ACTION controlp INFIELD bmhc003
            {<point name="input.c.page3.bmhc003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc005
         ON ACTION controlp INFIELD bmhc005
            #add-point:ON ACTION controlp INFIELD bmhc005
            {<point name="input.c.page3.bmhc005" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc004
         ON ACTION controlp INFIELD bmhc004
            #add-point:ON ACTION controlp INFIELD bmhc004
            {<point name="input.c.page3.bmhc004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc006
         ON ACTION controlp INFIELD bmhc006
            #add-point:ON ACTION controlp INFIELD bmhc006
            {<point name="input.c.page3.bmhc006" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc009
         ON ACTION controlp INFIELD bmhc009
            #add-point:ON ACTION controlp INFIELD bmhc009
            {<point name="input.c.page3.bmhc009" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc010
         ON ACTION controlp INFIELD bmhc010
            #add-point:ON ACTION controlp INFIELD bmhc010
            {<point name="input.c.page3.bmhc010" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc011
         ON ACTION controlp INFIELD bmhc011
            #add-point:ON ACTION controlp INFIELD bmhc011
            {<point name="input.c.page3.bmhc011" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc012
         ON ACTION controlp INFIELD bmhc012
            #add-point:ON ACTION controlp INFIELD bmhc012
            {<point name="input.c.page3.bmhc012" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc013
         ON ACTION controlp INFIELD bmhc013
            #add-point:ON ACTION controlp INFIELD bmhc013
            {<point name="input.c.page3.bmhc013" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc014
         ON ACTION controlp INFIELD bmhc014
            #add-point:ON ACTION controlp INFIELD bmhc014
            {<point name="input.c.page3.bmhc014" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc015
         ON ACTION controlp INFIELD bmhc015
            #add-point:ON ACTION controlp INFIELD bmhc015
            {<point name="input.c.page3.bmhc015" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmhc016
         ON ACTION controlp INFIELD bmhc016
            #add-point:ON ACTION controlp INFIELD bmhc016
            {<point name="input.c.page3.bmhc016" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmha3_d[l_ac].* = g_bmha3_d_t.*
               END IF
               CLOSE abmi400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmi400_unlock_b("bmhc_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmha3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmha3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_bmha4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmha4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmi400_b_fill()
            LET g_rec_b = g_bmha4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmha4_d[l_ac].* TO NULL 
            INITIALIZE g_bmha4_d_t.* TO NULL 
            INITIALIZE g_bmha4_d_o.* TO NULL 
            
            LET g_bmha4_d_t.* = g_bmha4_d[l_ac].*     #新輸入資料
            LET g_bmha4_d_o.* = g_bmha4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmi400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmi400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmha4_d[li_reproduce_target].* = g_bmha4_d[li_reproduce].*
 
               LET g_bmha4_d[li_reproduce_target].bmhd003 = NULL
            END IF
            #公用欄位給值(單身4)
            
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmi400_cl USING g_enterprise,g_bmhe_m.bmhe001
            IF STATUS THEN
               CALL cl_err("OPEN abmi400_cl:", STATUS, 1)
               CLOSE abmi400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmha4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmha4_d[l_ac].bmhd003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmha4_d_t.* = g_bmha4_d[l_ac].*  #BACKUP
               LET g_bmha4_d_o.* = g_bmha4_d[l_ac].*  #BACKUP
               CALL abmi400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL abmi400_set_no_entry_b(l_cmd)
               IF NOT abmi400_lock_b("bmhd_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmi400_bcl4 INTO g_bmha4_d[l_ac].bmhd003
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmi400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmha4_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmha4_d.deleteElement(l_ac)
               NEXT FIELD bmhd003
            END IF
         
            IF g_bmha4_d[l_ac].bmhd003 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM bmhd_t
                WHERE bmhdent = g_enterprise AND bmhd001 = g_bmhe_m.bmhe001 AND
                      bmhd003 = g_bmha4_d_t.bmhd003
                  
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmha_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身4刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmi400_bcl
               LET l_count = g_bmha_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha4_d[g_detail_idx].bmhd003
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL abmi400_delete_b('bmhd_t',gs_keys,"'4'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmhd_t 
             WHERE bmhdent = g_enterprise AND bmhd001 = g_bmhe_m.bmhe001
               AND bmhd003 = g_bmha4_d[l_ac].bmhd003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys[2] = g_bmha4_d[g_detail_idx].bmhd003
               CALL abmi400_insert_b('bmhd_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmha_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmhd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmi400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmha4_d[l_ac].* = g_bmha4_d_t.*
               CLOSE abmi400_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_bmha4_d[l_ac].* = g_bmha4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               UPDATE bmhd_t SET (bmhd001,bmhd003) = (g_bmhe_m.bmhe001,g_bmha4_d[l_ac].bmhd003) #自訂欄位頁簽 

                WHERE bmhdent = g_enterprise AND bmhd001 = g_bmhe_m.bmhe001
                  AND bmhd003 = g_bmha4_d_t.bmhd003 #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmhd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmha4_d[l_ac].* = g_bmha4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmhd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_bmha4_d[l_ac].* = g_bmha4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmhe_m.bmhe001
               LET gs_keys_bak[1] = g_bmhe001_t
               LET gs_keys[2] = g_bmha4_d[g_detail_idx].bmhd003
               LET gs_keys_bak[2] = g_bmha4_d_t.bmhd003
               CALL abmi400_update_b('bmhd_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha4_d_t)
               LET g_log2 = util.JSON.stringify(g_bmhe_m),util.JSON.stringify(g_bmha4_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD bmhd003
            
            #add-point:AFTER FIELD bmhd003
            {<point name="input.a.page4.bmhd003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhd003
            #add-point:BEFORE FIELD bmhd003
            {<point name="input.b.page4.bmhd003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmhd003
            #add-point:ON CHANGE bmhd003
            {<point name="input.g.page4.bmhd003" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page4.bmhd003
         ON ACTION controlp INFIELD bmhd003
            #add-point:ON ACTION controlp INFIELD bmhd003
            {<point name="input.c.page4.bmhd003" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmha4_d[l_ac].* = g_bmha4_d_t.*
               END IF
               CLOSE abmi400_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmi400_unlock_b("bmhd_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmha4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmha4_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
  </section>
  <section id="abmi400.input.head" ver="5" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_bmhe_m.bmhe001,g_bmhe_m.bmhel003,g_bmhe_m.bmhestus,g_bmhe_m.bmhe002 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.bmhel001 = g_bmhe_m.bmhe001
LET g_master_multi_table_t.bmhel003 = g_bmhe_m.bmhel003
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.bmhel001 = ''
LET g_master_multi_table_t.bmhel003 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD bmhe001
            #add-point:BEFORE FIELD bmhe001
            {<point name="input.b.bmhe001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhe001
            
            #add-point:AFTER FIELD bmhe001
            {<point name="input.a.bmhe001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhe001
            #add-point:ON CHANGE bmhe001
            {<point name="input.g.bmhe001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhel003
            #add-point:BEFORE FIELD bmhel003
            {<point name="input.b.bmhel003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhel003
            
            #add-point:AFTER FIELD bmhel003
            {<point name="input.a.bmhel003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhel003
            #add-point:ON CHANGE bmhel003
            {<point name="input.g.bmhel003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhestus
            #add-point:BEFORE FIELD bmhestus
            {<point name="input.b.bmhestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhestus
            
            #add-point:AFTER FIELD bmhestus
            {<point name="input.a.bmhestus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhestus
            #add-point:ON CHANGE bmhestus
            {<point name="input.g.bmhestus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmhe002
            #add-point:BEFORE FIELD bmhe002
            {<point name="input.b.bmhe002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmhe002
            
            #add-point:AFTER FIELD bmhe002
            {<point name="input.a.bmhe002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmhe002
            #add-point:ON CHANGE bmhe002
            {<point name="input.g.bmhe002" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.bmhe001
         ON ACTION controlp INFIELD bmhe001
            #add-point:ON ACTION controlp INFIELD bmhe001
            {<point name="input.c.bmhe001" />}
            #END add-point
 
         #Ctrlp:input.c.bmhel003
         ON ACTION controlp INFIELD bmhel003
            #add-point:ON ACTION controlp INFIELD bmhel003
            {<point name="input.c.bmhel003" />}
            #END add-point
 
         #Ctrlp:input.c.bmhestus
         ON ACTION controlp INFIELD bmhestus
            #add-point:ON ACTION controlp INFIELD bmhestus
            {<point name="input.c.bmhestus" />}
            #END add-point
 
         #Ctrlp:input.c.bmhe002
         ON ACTION controlp INFIELD bmhe002
            #add-point:ON ACTION controlp INFIELD bmhe002
            {<point name="input.c.bmhe002" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_bmhe_m.bmhe001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO bmhe_t (bmheent,bmhe001,bmhestus,bmheownid,bmheowndp,bmhecrtid,bmhecrtdp, 
                   bmhecrtdt,bmhe002)
               VALUES (g_enterprise,g_bmhe_m.bmhe001,g_bmhe_m.bmhestus,g_bmhe_m.bmheownid,g_bmhe_m.bmheowndp, 
                   g_bmhe_m.bmhecrtid,g_bmhe_m.bmhecrtdp,g_bmhe_m.bmhecrtdt,g_bmhe_m.bmhe002) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_bmhe_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_bmhe_m.bmhe001 = g_master_multi_table_t.bmhel001 AND
         g_bmhe_m.bmhel003 = g_master_multi_table_t.bmhel003  THEN
         ELSE 
            LET l_var_keys[01] = g_bmhe_m.bmhe001
            LET l_field_keys[01] = 'bmhel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.bmhel001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'bmhel002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_bmhe_m.bmhel003
            LET l_fields[01] = 'bmhel003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'bmhelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'bmhel_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abmi400_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE bmhe_t SET (bmhe001,bmhestus,bmheownid,bmheowndp,bmhecrtid,bmhecrtdp,bmhecrtdt, 
                   bmhe002) = (g_bmhe_m.bmhe001,g_bmhe_m.bmhestus,g_bmhe_m.bmheownid,g_bmhe_m.bmheowndp, 
                   g_bmhe_m.bmhecrtid,g_bmhe_m.bmhecrtdp,g_bmhe_m.bmhecrtdt,g_bmhe_m.bmhe002)
                WHERE bmheent = g_enterprise AND bmhe001 = g_bmhe001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmhe_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_bmhe_m.bmhe001 = g_master_multi_table_t.bmhel001 AND
         g_bmhe_m.bmhel003 = g_master_multi_table_t.bmhel003  THEN
         ELSE 
            LET l_var_keys[01] = g_bmhe_m.bmhe001
            LET l_field_keys[01] = 'bmhel001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.bmhel001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'bmhel002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_bmhe_m.bmhel003
            LET l_fields[01] = 'bmhel003'
            LET l_vars[02] = g_enterprise 
            LET l_fields[02] = 'bmhelent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'bmhel_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_bmhe_m_t)
               LET g_log2 = util.JSON.stringify(g_bmhe_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_bmhe001_t = g_bmhe_m.bmhe001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="abmi400.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD bmhe001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bmhaseq
               WHEN "s_detail2"
                  NEXT FIELD bmhb002
               WHEN "s_detail3"
                  NEXT FIELD bmhcseq
               WHEN "s_detail4"
                  NEXT FIELD bmhd003
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.insert" ver="5" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION abmi400_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_bmha_d.clear()   
   CALL g_bmha2_d.clear()  
   CALL g_bmha3_d.clear()  
   CALL g_bmha4_d.clear()  
 
 
   INITIALIZE g_bmhe_m.* LIKE bmhe_t.*             #DEFAULT 設定
   
   LET g_bmhe001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_bmhe_m.bmheownid = g_user
      LET g_bmhe_m.bmheowndp = g_dept
      LET g_bmhe_m.bmhecrtid = g_user
      LET g_bmhe_m.bmhecrtdp = g_dept 
      LET g_bmhe_m.bmhecrtdt = cl_get_current()
      LET g_bmhe_m.bmhemodid = ""
      LET g_bmhe_m.bmhemoddt = ""
      LET g_bmhe_m.bmhestus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_bmhe_m.bmhestus = "Y"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL abmi400_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmhe_m.* = g_bmhe_m_t.*
         CALL abmi400_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_bmha_d.clear()
      CALL g_bmha2_d.clear()
      CALL g_bmha3_d.clear()
      CALL g_bmha4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_bmhe001_t = g_bmhe_m.bmhe001
 
   
   LET g_wc = g_wc,  
              " OR ( bmheent = '" ||g_enterprise|| "' AND",
              " bmhe001 = '", g_bmhe_m.bmhe001 CLIPPED, "' "
 
              , ") "
   
   CLOSE abmi400_cl
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION abmi400_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO bmha_t
                  (bmhaent,
                   bmha001,
                   bmhaseq,bmhaseq1
                   ,bmha002,bmha003,bmha004,bmha005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmha_d[g_detail_idx].bmha002,g_bmha_d[g_detail_idx].bmha003,g_bmha_d[g_detail_idx].bmha004, 
                       g_bmha_d[g_detail_idx].bmha005)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmha_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO bmhb_t
                  (bmhbent,
                   bmhb001,
                   bmhb002,bmhb003
                   ,bmhb004,bmhb005,bmhb006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmha2_d[g_detail_idx].bmhb004,g_bmha2_d[g_detail_idx].bmhb005,g_bmha2_d[g_detail_idx].bmhb006) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO bmhc_t
                  (bmhcent,
                   bmhc001,
                   bmhcseq,bmhc017
                   ,bmhc002,bmhc003,bmhc005,bmhc004,bmhc006,bmhc009,bmhc010,bmhc011,bmhc012,bmhc013,bmhc014,bmhc015,bmhc016) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmha3_d[g_detail_idx].bmhc002,g_bmha3_d[g_detail_idx].bmhc003,g_bmha3_d[g_detail_idx].bmhc005, 
                       g_bmha3_d[g_detail_idx].bmhc004,g_bmha3_d[g_detail_idx].bmhc006,g_bmha3_d[g_detail_idx].bmhc009, 
                       g_bmha3_d[g_detail_idx].bmhc010,g_bmha3_d[g_detail_idx].bmhc011,g_bmha3_d[g_detail_idx].bmhc012, 
                       g_bmha3_d[g_detail_idx].bmhc013,g_bmha3_d[g_detail_idx].bmhc014,g_bmha3_d[g_detail_idx].bmhc015, 
                       g_bmha3_d[g_detail_idx].bmhc016)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO bmhd_t
                  (bmhdent,
                   bmhd001,
                   bmhd003
                   ) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   )
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmhd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION abmi400_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL abmi400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bmha_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN abmi400_bcl USING g_enterprise,
                                       g_bmhe_m.bmhe001,g_bmha_d[g_detail_idx].bmhaseq,g_bmha_d[g_detail_idx].bmhaseq1  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("abmi400_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "bmhb_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmi400_bcl2 USING g_enterprise,
                                             g_bmhe_m.bmhe001,g_bmha2_d[g_detail_idx].bmhb002,g_bmha2_d[g_detail_idx].bmhb003 

      IF SQLCA.sqlcode THEN
         CALL cl_err("abmi400_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "bmhc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmi400_bcl3 USING g_enterprise,
                                             g_bmhe_m.bmhe001,g_bmha3_d[g_detail_idx].bmhcseq,g_bmha3_d[g_detail_idx].bmhc017 

      IF SQLCA.sqlcode THEN
         CALL cl_err("abmi400_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "bmhd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmi400_bcl4 USING g_enterprise,
                                             g_bmhe_m.bmhe001,g_bmha4_d[g_detail_idx].bmhd003
      IF SQLCA.sqlcode THEN
         CALL cl_err("abmi400_bcl4",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.main" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT bmhe001,'',bmhestus,bmheownid,'',bmheowndp,'',bmhecrtid,'',bmhecrtdp, 
       '',bmhecrtdt,bmhemodid,'',bmhemoddt,bmhe002", 
                      " FROM bmhe_t",
                      " WHERE bmheent= ? AND bmhe001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmi400_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE bmhe001,bmhestus,bmheownid,bmheowndp,bmhecrtid,bmhecrtdp,bmhecrtdt,bmhemodid, 
       bmhemoddt,bmhe002,t1.oofa011 ,t2.ooefl003 ,t3.oofa011 ,t4.ooefl003 ,t5.oofa011",
               " FROM bmhe_t",
                              " LEFT JOIN oofa_t t1 ON t1.oofaent='"||g_enterprise||"' AND t1.oofa002='2' AND t1.oofa003=bmheownid  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=bmheowndp AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=bmhecrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=bmhecrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t5 ON t5.oofaent='"||g_enterprise||"' AND t5.oofa002='2' AND t5.oofa003=bmhemodid  ",
 
               " WHERE bmheent = '" ||g_enterprise|| "' AND bmhe001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE abmi400_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmi400 WITH FORM cl_ap_formpath("abm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abmi400_init()   
 
      #進入選單 Menu (="N")
      CALL abmi400_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abmi400
      
   END IF 
   
   CLOSE abmi400_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="abmi400.modify" ver="5" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION abmi400_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_bmhe_m.bmhe001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_bmhe001_t = g_bmhe_m.bmhe001
 
   CALL s_transaction_begin()
   
   OPEN abmi400_cl USING g_enterprise,g_bmhe_m.bmhe001
   IF STATUS THEN
      CALL cl_err("OPEN abmi400_cl:", STATUS, 1)
      CLOSE abmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmi400_master_referesh USING g_bmhe_m.bmhe001 INTO g_bmhe_m.bmhe001,g_bmhe_m.bmhestus,g_bmhe_m.bmheownid, 
       g_bmhe_m.bmheowndp,g_bmhe_m.bmhecrtid,g_bmhe_m.bmhecrtdp,g_bmhe_m.bmhecrtdt,g_bmhe_m.bmhemodid, 
       g_bmhe_m.bmhemoddt,g_bmhe_m.bmhe002,g_bmhe_m.bmheownid_desc,g_bmhe_m.bmheowndp_desc,g_bmhe_m.bmhecrtid_desc, 
       g_bmhe_m.bmhecrtdp_desc,g_bmhe_m.bmhemodid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmhe_m.bmhe001,SQLCA.sqlcode,0)
      CLOSE abmi400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL abmi400_show()
   WHILE TRUE
      LET g_bmhe001_t = g_bmhe_m.bmhe001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_bmhe_m.bmhemodid = g_user 
LET g_bmhe_m.bmhemoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL abmi400_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmhe_m.* = g_bmhe_m_t.*
         CALL abmi400_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE bmhe_t SET (bmhemodid,bmhemoddt) = (g_bmhe_m.bmhemodid,g_bmhe_m.bmhemoddt)
       WHERE bmheent = g_enterprise AND bmhe001 = g_bmhe001_t
 
                  
      #若單頭key欄位有變更
      IF g_bmhe_m.bmhe001 != g_bmhe001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE bmha_t SET bmha001 = g_bmhe_m.bmhe001
 
          WHERE bmhaent = g_enterprise AND bmha001 = g_bmhe001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmha_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmha_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE bmhb_t
            SET bmhb001 = g_bmhe_m.bmhe001
 
          WHERE bmhbent = g_enterprise AND
                bmhb001 = g_bmhe001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmhb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmhb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE bmhc_t
            SET bmhc001 = g_bmhe_m.bmhe001
 
          WHERE bmhcent = g_enterprise AND
                bmhc001 = g_bmhe001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmhc_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmhc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE bmhd_t
            SET bmhd001 = g_bmhe_m.bmhe001
 
          WHERE bmhdent = g_enterprise AND
                bmhd001 = g_bmhe001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmhd_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmhd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_bmhe_m.bmhe001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE abmi400_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_bmhe_m.bmhe001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="abmi400.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="abmi400.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="abmi400.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abmi400_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bmha_d.clear()
   CALL g_bmha2_d.clear()
   CALL g_bmha3_d.clear()
   CALL g_bmha4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL abmi400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL abmi400_browser_fill("")
      CALL abmi400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL abmi400_filter_show('bmhe001')
   CALL abmi400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL abmi400_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION abmi400_reproduce()
   DEFINE l_newno     LIKE bmhe_t.bmhe001 
   DEFINE l_oldno     LIKE bmhe_t.bmhe001 
 
   DEFINE l_master    RECORD LIKE bmhe_t.*
   DEFINE l_detail    RECORD LIKE bmha_t.*
   DEFINE l_detail2    RECORD LIKE bmhb_t.*
 
   DEFINE l_detail3    RECORD LIKE bmhc_t.*
 
   DEFINE l_detail4    RECORD LIKE bmhd_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_bmhe_m.bmhe001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_bmhe001_t = g_bmhe_m.bmhe001
 
    
   LET g_bmhe_m.bmhe001 = ""
 
    
   CALL abmi400_set_entry('a')
   CALL abmi400_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_bmhe_m.bmheownid = g_user
      LET g_bmhe_m.bmheowndp = g_dept
      LET g_bmhe_m.bmhecrtid = g_user
      LET g_bmhe_m.bmhecrtdp = g_dept 
      LET g_bmhe_m.bmhecrtdt = cl_get_current()
      LET g_bmhe_m.bmhemodid = ""
      LET g_bmhe_m.bmhemoddt = ""
      LET g_bmhe_m.bmhestus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL abmi400_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " bmhe001 = '", g_bmhe_m.bmhe001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION abmi400_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmhe001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION abmi400_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="abmi400.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION abmi400_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("bmhe001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION abmi400_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="abmi400.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION abmi400_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmhe_m.bmhe001
   LET g_pk_array[1].column = 'bmhe001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="abmi400.show" ver="5" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abmi400_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL abmi400_b_fill() #單身填充
      CALL abmi400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_bmhe_m.bmheownid_desc = cl_get_username(g_bmhe_m.bmheownid)
      #LET g_bmhe_m.bmheowndp_desc = cl_get_deptname(g_bmhe_m.bmheowndp)
      #LET g_bmhe_m.bmhecrtid_desc = cl_get_username(g_bmhe_m.bmhecrtid)
      #LET g_bmhe_m.bmhecrtdp_desc = cl_get_deptname(g_bmhe_m.bmhecrtdp)
      #LET g_bmhe_m.bmhemodid_desc = cl_get_username(g_bmhe_m.bmhemodid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL abmi400_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmhe_m.bmhe001,g_bmhe_m.bmhel003,g_bmhe_m.bmhestus,g_bmhe_m.bmheownid,g_bmhe_m.bmheownid_desc, 
       g_bmhe_m.bmheowndp,g_bmhe_m.bmheowndp_desc,g_bmhe_m.bmhecrtid,g_bmhe_m.bmhecrtid_desc,g_bmhe_m.bmhecrtdp, 
       g_bmhe_m.bmhecrtdp_desc,g_bmhe_m.bmhecrtdt,g_bmhe_m.bmhemodid,g_bmhe_m.bmhemodid_desc,g_bmhe_m.bmhemoddt, 
       g_bmhe_m.bmhe002
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_bmhe_m.bmhestus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmha_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_bmha2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_bmha3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_bmha4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL abmi400_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="abmi400.state_change" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION abmi400_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_bmhe_m.bmhe001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_bmhe_m.bmhestus
            WHEN "N"
               HIDE OPTION "inactive"
            WHEN "Y"
               HIDE OPTION "active"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION inactive
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.inactive"/>}
         #end add-point
         EXIT MENU
      ON ACTION active
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.active"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE bmhe_t SET bmhestus = lc_state 
    WHERE bmheent = g_enterprise AND bmhe001 = g_bmhe_m.bmhe001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/inactive.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/active.png")
         
      END CASE
      LET g_bmhe_m.bmhestus = lc_state
      DISPLAY BY NAME g_bmhe_m.bmhestus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="abmi400.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abmi400_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmhe001 = g_bmhe_m.bmhe001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION abmi400_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.ui_dialog" ver="2" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION abmi400_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL abmi400_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL abmi400_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_bmhe001 = g_bmhe001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL abmi400_fetch('') # reload data
               LET l_ac = 1
               CALL abmi400_ui_detailshow() #Setting the current row 
      
               CALL abmi400_idx_chk()
               #NEXT FIELD bmhaseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_bmha_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL abmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL abmi400_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_bmha2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL abmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL abmi400_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_bmha3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL abmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL abmi400_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_bmha4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL abmi400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               CALL abmi400_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmi400_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abmi400_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL abmi400_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL abmi400_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL abmi400_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL abmi400_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL abmi400_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL abmi400_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL abmi400_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmi400_idx_chk()
            
         ON ACTION previous
            CALL abmi400_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmi400_idx_chk()
            
         ON ACTION jump
            CALL abmi400_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmi400_idx_chk()
            
         ON ACTION next
            CALL abmi400_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmi400_idx_chk()
            
         ON ACTION last
            CALL abmi400_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmi400_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD bmhaseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abmi400_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmi400_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abmi400_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL abmi400_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abmi400_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abmi400_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL abmi400_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abmi400_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abmi400_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="abmi400.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION abmi400_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_bmhe_m.bmhe001 = g_browser[g_current_idx].b_bmhe001   
 
   EXECUTE abmi400_master_referesh USING g_bmhe_m.bmhe001 INTO g_bmhe_m.bmhe001,g_bmhe_m.bmhestus,g_bmhe_m.bmheownid, 
       g_bmhe_m.bmheowndp,g_bmhe_m.bmhecrtid,g_bmhe_m.bmhecrtdp,g_bmhe_m.bmhecrtdt,g_bmhe_m.bmhemodid, 
       g_bmhe_m.bmhemoddt,g_bmhe_m.bmhe002,g_bmhe_m.bmheownid_desc,g_bmhe_m.bmheowndp_desc,g_bmhe_m.bmhecrtid_desc, 
       g_bmhe_m.bmhecrtdp_desc,g_bmhe_m.bmhemodid_desc
   CALL abmi400_show()
   
END FUNCTION
]]>
  </section>
  <section id="abmi400.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abmi400_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmi400_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmi400_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmi400_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmi400_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="abmi400.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION abmi400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmha_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE bmha_t 
         SET (bmha001,
              bmhaseq,bmhaseq1
              ,bmha002,bmha003,bmha004,bmha005) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmha_d[g_detail_idx].bmha002,g_bmha_d[g_detail_idx].bmha003,g_bmha_d[g_detail_idx].bmha004, 
                  g_bmha_d[g_detail_idx].bmha005) 
         WHERE bmhaent = g_enterprise AND bmha001 = ps_keys_bak[1] AND bmhaseq = ps_keys_bak[2] AND bmhaseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmha_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmha_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmhb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE bmhb_t 
         SET (bmhb001,
              bmhb002,bmhb003
              ,bmhb004,bmhb005,bmhb006) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmha2_d[g_detail_idx].bmhb004,g_bmha2_d[g_detail_idx].bmhb005,g_bmha2_d[g_detail_idx].bmhb006)  

         WHERE bmhbent = g_enterprise AND bmhb001 = ps_keys_bak[1] AND bmhb002 = ps_keys_bak[2] AND bmhb003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmhb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmhb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmhc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE bmhc_t 
         SET (bmhc001,
              bmhcseq,bmhc017
              ,bmhc002,bmhc003,bmhc005,bmhc004,bmhc006,bmhc009,bmhc010,bmhc011,bmhc012,bmhc013,bmhc014,bmhc015,bmhc016) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmha3_d[g_detail_idx].bmhc002,g_bmha3_d[g_detail_idx].bmhc003,g_bmha3_d[g_detail_idx].bmhc005, 
                  g_bmha3_d[g_detail_idx].bmhc004,g_bmha3_d[g_detail_idx].bmhc006,g_bmha3_d[g_detail_idx].bmhc009, 
                  g_bmha3_d[g_detail_idx].bmhc010,g_bmha3_d[g_detail_idx].bmhc011,g_bmha3_d[g_detail_idx].bmhc012, 
                  g_bmha3_d[g_detail_idx].bmhc013,g_bmha3_d[g_detail_idx].bmhc014,g_bmha3_d[g_detail_idx].bmhc015, 
                  g_bmha3_d[g_detail_idx].bmhc016) 
         WHERE bmhcent = g_enterprise AND bmhc001 = ps_keys_bak[1] AND bmhcseq = ps_keys_bak[2] AND bmhc017 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmhc_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmhc_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmhd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point     
      UPDATE bmhd_t 
         SET (bmhd001,
              bmhd003
              ) 
              = 
             (ps_keys[1],ps_keys[2]
              ) 
         WHERE bmhdent = g_enterprise AND bmhd001 = ps_keys_bak[1] AND bmhd003 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmhd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmhd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
