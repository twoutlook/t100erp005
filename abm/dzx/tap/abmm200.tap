<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="abmm200" std_prog="abmm200" erpver="1.0" module="ABM" ver="12" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="Y" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="Y" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="construct.c.bmaa001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaa001  #顯示到畫面上

            NEXT FIELD bmaa001                     #返回原欄位

]]>
  </point>
  <point name="show.head.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaa001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaa001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaa001_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaamodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaacnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaacnfid_desc
]]>
  </point>
  <point name="show.body.reference" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba003
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba007_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba015
            #LET g_ref_fields[2] = g_bmba_d[l_ac].bmbasite
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? AND inaasite=? ","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba015_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba016
            #LET g_ref_fields[2] = g_bmba_d[l_ac].bmbasite
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inab002=? AND inabsite=? ","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba016_desc
]]>
  </point>
  <point name="main.define_sql" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_forupd_sql = "SELECT bmaa001,'',bmaa002,'','','','','',bmaa003,bmaa004,'',bmaastus,bmaasite,bmaaownid,'',bmaaowndp,'',bmaacrtid,'',bmaacrtdp,'',bmaacrtdt,bmaamodid,'',bmaamoddt,bmaacnfid,'',bmaacnfdt FROM bmaa_t ",
                      " WHERE bmaaent= ? AND bmaasite=? AND bmaa001=? AND bmaa002=? FOR UPDATE"]]>
  </point>
  <point name="input.c.page1.bmba024" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba024             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba024 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_d[l_ac].bmba024 TO bmba024              #顯示到畫面上

            NEXT FIELD bmba024                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmba016" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba016             #給予default值

            #給予arg

            CALL q_inab002_1()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba016 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_d[l_ac].bmba016 TO bmba016              #顯示到畫面上

            NEXT FIELD bmba016                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmba015" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba015             #給予default值

            #給予arg

            CALL q_inaa001_2()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_d[l_ac].bmba015 TO bmba015              #顯示到畫面上

            NEXT FIELD bmba015                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmba010" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba010             #給予default值

            #給予arg

            CALL q_ooca001()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_d[l_ac].bmba010 TO bmba010              #顯示到畫面上

            NEXT FIELD bmba010                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmba007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_d[l_ac].bmba007 TO bmba007              #顯示到畫面上

            NEXT FIELD bmba007                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmba004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_d[l_ac].bmba004 TO bmba004              #顯示到畫面上

            NEXT FIELD bmba004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmba003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmba_d[l_ac].bmba003             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_bmba_d[l_ac].bmba003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmba_d[l_ac].bmba003 TO bmba003              #顯示到畫面上

            NEXT FIELD bmba003                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmaa001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmaa_m.bmaa001             #給予default值

            #給予arg

            CALL q_imaa001_2()                                #呼叫開窗

            LET g_bmaa_m.bmaa001 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmaa_m.bmaa001 TO bmaa001              #顯示到畫面上

            NEXT FIELD bmaa001                          #返回原欄位

]]>
  </point>
  <point name="input.a.page1.bmba016" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba016
            #LET g_ref_fields[2] = g_bmba_d[l_ac].bmbasite
            CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inab002=? AND inabsite=? ","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba016_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba016_desc
]]>
  </point>
  <point name="input.a.page1.bmba015" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba015
            #LET g_ref_fields[2] = g_bmba_d[l_ac].bmbasite
            CALL ap_ref_array2(g_ref_fields,"SELECT inaa002 FROM inaa_t WHERE inaaent='"||g_enterprise||"' AND inaa001=? AND inaasite=? ","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba015_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba015_desc
]]>
  </point>
  <point name="input.a.page1.bmba008" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) AND NOT cl_null(g_bmba_d[l_ac].bmba003) AND NOT cl_null(g_bmba_d[l_ac].bmba004) AND NOT cl_null(g_bmba_d[l_ac].bmba005) AND NOT cl_null(g_bmba_d[l_ac].bmba007) AND NOT cl_null(g_bmba_d[l_ac].bmba008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t OR g_bmaa_m.bmaa001 != g_bmaa001_t OR g_bmaa_m.bmaa002 != g_bmaa002_t OR g_bmba_d[l_ac].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[l_ac].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[l_ac].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[l_ac].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[l_ac].bmba008 != g_bmba_d_t.bmba008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmba001 = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmbasite = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[l_ac].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.bmba007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba007
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba007_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba007_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) AND NOT cl_null(g_bmba_d[l_ac].bmba003) AND NOT cl_null(g_bmba_d[l_ac].bmba004) AND NOT cl_null(g_bmba_d[l_ac].bmba005) AND NOT cl_null(g_bmba_d[l_ac].bmba007) AND NOT cl_null(g_bmba_d[l_ac].bmba008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t OR g_bmaa_m.bmaa001 != g_bmaa001_t OR g_bmaa_m.bmaa002 != g_bmaa002_t OR g_bmba_d[l_ac].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[l_ac].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[l_ac].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[l_ac].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[l_ac].bmba008 != g_bmba_d_t.bmba008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmba001 = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmbasite = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[l_ac].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.bmba005" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) AND NOT cl_null(g_bmba_d[l_ac].bmba003) AND NOT cl_null(g_bmba_d[l_ac].bmba004) AND NOT cl_null(g_bmba_d[l_ac].bmba005) AND NOT cl_null(g_bmba_d[l_ac].bmba007) AND NOT cl_null(g_bmba_d[l_ac].bmba008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t OR g_bmaa_m.bmaa001 != g_bmaa001_t OR g_bmaa_m.bmaa002 != g_bmaa002_t OR g_bmba_d[l_ac].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[l_ac].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[l_ac].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[l_ac].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[l_ac].bmba008 != g_bmba_d_t.bmba008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmba001 = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmbasite = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[l_ac].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.bmba004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba004_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) AND NOT cl_null(g_bmba_d[l_ac].bmba003) AND NOT cl_null(g_bmba_d[l_ac].bmba004) AND NOT cl_null(g_bmba_d[l_ac].bmba005) AND NOT cl_null(g_bmba_d[l_ac].bmba007) AND NOT cl_null(g_bmba_d[l_ac].bmba008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t OR g_bmaa_m.bmaa001 != g_bmaa001_t OR g_bmaa_m.bmaa002 != g_bmaa002_t OR g_bmba_d[l_ac].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[l_ac].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[l_ac].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[l_ac].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[l_ac].bmba008 != g_bmba_d_t.bmba008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmba001 = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmbasite = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[l_ac].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.bmba003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_bmba_d[l_ac].bmba003 = g_bmaa_m.bmaa001 THEN 
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'tree-004'
               LET g_errparam.extend = g_bmba_d[l_ac].bmba003
               LET g_errparam.popup = TRUE
               CALL cl_err()

               NEXT FIELD bmba003
            ELSE 
               IF NOT ap_chk_isExist(g_bmba_d[l_ac].bmba003,"SELECT COUNT(*) FROM bmaa_t WHERE bmaa001 = ? ",'tree-003',1)  THEN
                  NEXT FIELD bmba003
               END IF
            END IF

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmba_d[l_ac].bmba003
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmba_d[l_ac].bmba003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmba_d[l_ac].bmba003_desc

            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) AND NOT cl_null(g_bmba_d[l_ac].bmba003) AND NOT cl_null(g_bmba_d[l_ac].bmba004) AND NOT cl_null(g_bmba_d[l_ac].bmba005) AND NOT cl_null(g_bmba_d[l_ac].bmba007) AND NOT cl_null(g_bmba_d[l_ac].bmba008) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t OR g_bmaa_m.bmaa001 != g_bmaa001_t OR g_bmaa_m.bmaa002 != g_bmaa002_t OR g_bmba_d[l_ac].bmba003 != g_bmba_d_t.bmba003 OR g_bmba_d[l_ac].bmba004 != g_bmba_d_t.bmba004 OR g_bmba_d[l_ac].bmba005 != g_bmba_d_t.bmba005 OR g_bmba_d[l_ac].bmba007 != g_bmba_d_t.bmba007 OR g_bmba_d[l_ac].bmba008 != g_bmba_d_t.bmba008))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmba001 = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmbasite = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d[l_ac].bmba008 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.bmaasite" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t  OR g_bmaa_m.bmaa001 != g_bmaa001_t  OR g_bmaa_m.bmaa002 != g_bmaa002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_m.bmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.bmaaownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaaownid_desc
]]>
  </point>
  <point name="input.a.bmaaowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaaowndp_desc
]]>
  </point>
  <point name="input.a.bmaamodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaamodid_desc
]]>
  </point>
  <point name="input.a.bmaacrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaacrtid_desc
]]>
  </point>
  <point name="input.a.bmaacrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaacrtdp_desc
]]>
  </point>
  <point name="input.a.bmaacnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaacnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaacnfid_desc
]]>
  </point>
  <point name="input.a.bmaa002" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t  OR g_bmaa_m.bmaa001 != g_bmaa001_t  OR g_bmaa_m.bmaa002 != g_bmaa002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_m.bmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.bmaa001" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t  OR g_bmaa_m.bmaa001 != g_bmaa001_t  OR g_bmaa_m.bmaa002 != g_bmaa002_t ))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_m.bmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmaa_m.bmaa001
            CALL ap_ref_array2(g_ref_fields,"SELECT imaal003 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmaa_m.bmaa001_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmaa_m.bmaa001_desc
]]>
  </point>
  <point name="construct.c.bmaacnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaacnfid  #顯示到畫面上

            NEXT FIELD bmaacnfid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmaacrtdp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaacrtdp  #顯示到畫面上

            NEXT FIELD bmaacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmaacrtid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaacrtid  #顯示到畫面上

            NEXT FIELD bmaacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmaamodid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaamodid  #顯示到畫面上

            NEXT FIELD bmaamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmaaowndp" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaaowndp  #顯示到畫面上

            NEXT FIELD bmaaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmaaownid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaaownid  #顯示到畫面上

            NEXT FIELD bmaaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmba003" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba003  #顯示到畫面上

            NEXT FIELD bmba003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmba004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba004  #顯示到畫面上

            NEXT FIELD bmba004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmba007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba007  #顯示到畫面上

            NEXT FIELD bmba007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmba010" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba010  #顯示到畫面上

            NEXT FIELD bmba010                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmba015" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_inaa001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba015  #顯示到畫面上

            NEXT FIELD bmba015                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmba016" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_inab002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba016  #顯示到畫面上

            NEXT FIELD bmba016                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmba024" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba024  #顯示到畫面上

            NEXT FIELD bmba024                     #返回原欄位

]]>
  </point>
  <point name="desc_show.show" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_browser[l_ac].b_show = 
           g_browser[l_ac].b_bmaasite,
             '(',g_browser[l_ac].b_bmaa001,')'
]]>
  </point>
  <point name="function.abmm200_bmad_back" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmad_back()
   LET g_bmad.bmadent = g_enterprise
   LET g_bmad.bmadsite= g_bmaa_m.bmaasite
   LET g_bmad.bmad001 = g_bmaa_m.bmaa001
   LET g_bmad.bmad002 = g_bmaa_m.bmaa002
   LET g_bmad.bmad003 = g_bmad_d[l_ac].bmad003
   LET g_bmad.bmad004 = g_bmad_d[l_ac].bmad004
   LET g_bmad.bmad005 = g_bmad_d[l_ac].bmad005
   LET g_bmad.bmad006 = g_bmad_d[l_ac].bmad006
   LET g_bmad.bmad007 = g_bmad_d[l_ac].bmad007
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmba_back2" order="2" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmba_back2()
   LET g_bmba.bmbaent = g_enterprise
   LET g_bmba.bmbasite= g_bmaa_m.bmaasite
   LET g_bmba.bmba001 = g_bmaa_m.bmaa001
   LET g_bmba.bmba002 = g_bmaa_m.bmaa002
   LET g_bmba.bmba009 = g_bmba_d2[l_ac].bmba009
   LET g_bmba.bmba003 = g_bmba_d2[l_ac].bmba003
   LET g_bmba.bmba004 = g_bmba_d2[l_ac].bmba004
   LET g_bmba.bmba007 = g_bmba_d2[l_ac].bmba007
   LET g_bmba.bmba008 = g_bmba_d2[l_ac].bmba008
   LET g_bmba.bmba011 = g_bmba_d2[l_ac].bmba011
   LET g_bmba.bmba012 = g_bmba_d2[l_ac].bmba012
   LET g_bmba.bmba010 = g_bmba_d2[l_ac].bmba010
   LET g_bmba.bmba005 = g_bmba_d2[l_ac].bmba005
   LET g_bmba.bmba006 = g_bmba_d2[l_ac].bmba006
   LET g_bmba.bmba021 = g_bmba_d2[l_ac].bmba021
   LET g_bmba.bmba022 = g_bmba_d2[l_ac].bmba022
   LET g_bmba.bmba023 = g_bmba_d2[l_ac].bmba023
   LET g_bmba.bmba024 = g_bmba_d2[l_ac].bmba024
   LET g_bmba.bmba030 = g_bmba_d2[l_ac].bmba030
   LET g_bmba.bmba031 = g_bmba_d2[l_ac].bmba031
   LET g_bmba.bmba015 = g_bmba_d2[l_ac].bmba015
   LET g_bmba.bmba016 = g_bmba_d2[l_ac].bmba016
   LET g_bmba.bmba032 = g_bmba_d2[l_ac].bmba032
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmba_back1" order="3" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmba_back1()
   DEFINE l_imae021   LIKE imae_t.imae021  #工单展开选项
   DEFINE l_imae091   LIKE imae_t.imae091  #倒扣料

   IF cl_null(g_bmba_d1[l_ac].bmba004) THEN #部位
      LET g_bmba_d1[l_ac].bmba004 = ' '
   END IF
   IF cl_null(g_bmba_d1[l_ac].bmba007) THEN #作业
      LET g_bmba_d1[l_ac].bmba007 = ' '
   END IF
   IF cl_null(g_bmba_d1[l_ac].bmba008) THEN #作业序
      LET g_bmba_d1[l_ac].bmba008 = ' '
   END IF
   
   LET g_bmba.bmbaent = g_enterprise
   LET g_bmba.bmbasite= g_bmaa_m.bmaasite
   LET g_bmba.bmba001 = g_bmaa_m.bmaa001
   LET g_bmba.bmba002 = g_bmaa_m.bmaa002
   LET g_bmba.bmba009 = g_bmba_d1[l_ac].bmba009
   LET g_bmba.bmba003 = g_bmba_d1[l_ac].bmba003
   LET g_bmba.bmba004 = g_bmba_d1[l_ac].bmba004
   LET g_bmba.bmba007 = g_bmba_d1[l_ac].bmba007
   LET g_bmba.bmba008 = g_bmba_d1[l_ac].bmba008
   LET g_bmba.bmba011 = g_bmba_d1[l_ac].bmba011
   LET g_bmba.bmba012 = g_bmba_d1[l_ac].bmba012
   LET g_bmba.bmba010 = g_bmba_d1[l_ac].bmba010
   LET g_bmba.bmba005 = g_bmba_d1[l_ac].bmba005
   LET g_bmba.bmba006 = g_bmba_d1[l_ac].bmba006
   LET g_bmba.bmba027 = g_bmba_d1[l_ac].bmba027
   LET g_bmba.bmba028 = g_bmba_d1[l_ac].bmba028
   LET g_bmba.bmba013 = g_bmba_d1[l_ac].bmba013
   LET g_bmba.bmba014 = g_bmba_d1[l_ac].bmba014
   LET g_bmba.bmba020 = g_bmba_d1[l_ac].bmba020
   LET g_bmba.bmba017 = g_bmba_d1[l_ac].bmba017
   LET g_bmba.bmba025 = g_bmba_d1[l_ac].bmba025
   LET g_bmba.bmba018 = g_bmba_d1[l_ac].bmba018
   LET g_bmba.bmba026 = g_bmba_d1[l_ac].bmba026
   LET g_bmba.bmba019 = g_bmba_d1[l_ac].bmba019
   
   LET g_bmba.bmba021 = g_bmba_d2[l_ac].bmba021
   LET g_bmba.bmba030 = g_bmba_d2[l_ac].bmba030
   
   IF cl_null(g_bmba.bmba022) THEN #代买料
      LET g_bmba.bmba022 = 'N'
   END IF
   IF cl_null(g_bmba.bmba023) THEN #元件投料时距
      LET g_bmba.bmba023 = 0
   END IF
   IF cl_null(g_bmba.bmba031) THEN #客供料
      LET g_bmba.bmba031 = 'N'
   END IF
   IF cl_null(g_bmba.bmba029) THEN #损耗率形态
      LET g_bmba.bmba029 = '1'  
   END IF

   SELECT imae021,imae091
     INTO l_imae021,l_imae091
     FROM imae_t
    WHERE imaeent = g_enterprise
      AND imaesite= g_bmaa_m.bmaasite
      AND imae001 = g_bmba.bmba003
   IF cl_null(l_imae021) THEN LET l_imae021 = '1' END IF
   IF cl_null(l_imae091) THEN LET l_imae091 = 'N' END IF
   #工单展开选项
   IF cl_null(g_bmba.bmba021) THEN
      LET g_bmba.bmba021 = l_imae021
   END IF
      
   #倒扣料
   IF cl_null(g_bmba.bmba030) THEN
      LET g_bmba.bmba030 = l_imae091
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmac_back" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmac_back()
   LET g_bmac.bmacent = g_enterprise
   LET g_bmac.bmacsite= g_bmaa_m.bmaasite
   LET g_bmac.bmac001 = g_bmaa_m.bmaa001
   LET g_bmac.bmac002 = g_bmaa_m.bmaa002
   LET g_bmac.bmac003 = g_bmac_d[l_ac].bmac003
   LET g_bmac.bmac005 = g_bmac_d[l_ac].bmac005
   LET g_bmac.bmac006 = g_bmac_d[l_ac].bmac006
   LET g_bmac.bmac004 = g_bmac_d[l_ac].bmac004
   LET g_bmac.bmac007 = g_bmac_d[l_ac].bmac007
   LET g_bmac.bmac008 = g_bmac_d[l_ac].bmac008
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmab_back" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmab_back()
   LET g_bmab.bmabent = g_enterprise
   LET g_bmab.bmabsite= g_bmaa_m.bmaasite
   LET g_bmab.bmab001 = g_bmaa_m.bmaa001
   LET g_bmab.bmab002 = g_bmaa_m.bmaa002
   LET g_bmab.bmab003 = g_bmab_d[l_ac].bmab003
   LET g_bmab.bmab004 = g_bmab_d[l_ac].bmab004
   LET g_bmab.bmab005 = g_bmab_d[l_ac].bmab005
   LET g_bmab.bmab006 = g_bmab_d[l_ac].bmab006
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmbb_back" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmbb_back()
   LET g_bmbb.bmbbent = g_enterprise
   LET g_bmbb.bmbbsite= g_bmaa_m.bmaasite
   LET g_bmbb.bmbb001 = g_bmaa_m.bmaa001
   LET g_bmbb.bmbb002 = g_bmaa_m.bmaa002
   LET g_bmbb.bmbb003 = g_bmba_d3[l_ac].bmba003
   LET g_bmbb.bmbb004 = g_bmba_d3[l_ac].bmba004
   LET g_bmbb.bmbb005 = g_bmba_d3[l_ac].bmba005
   LET g_bmbb.bmbb007 = g_bmba_d3[l_ac].bmba007
   LET g_bmbb.bmbb008 = g_bmba_d3[l_ac].bmba008
   LET g_bmbb.bmbb009 = g_bmbb_d[l_ac_bmbb].bmbb009
   LET g_bmbb.bmbb010 = g_bmbb_d[l_ac_bmbb].bmbb010
   LET g_bmbb.bmbb011 = g_bmbb_d[l_ac_bmbb].bmbb011
   LET g_bmbb.bmbb012 = g_bmbb_d[l_ac_bmbb].bmbb012
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmba_back3" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmba_back3()
   LET g_bmba.bmbaent = g_enterprise
   LET g_bmba.bmbasite= g_bmaa_m.bmaasite
   LET g_bmba.bmba001 = g_bmaa_m.bmaa001
   LET g_bmba.bmba002 = g_bmaa_m.bmaa002
   LET g_bmba.bmba009 = g_bmba_d3[l_ac].bmba009
   LET g_bmba.bmba003 = g_bmba_d3[l_ac].bmba003
   LET g_bmba.bmba004 = g_bmba_d3[l_ac].bmba004
   LET g_bmba.bmba007 = g_bmba_d3[l_ac].bmba007
   LET g_bmba.bmba008 = g_bmba_d3[l_ac].bmba008
   LET g_bmba.bmba011 = g_bmba_d3[l_ac].bmba011
   LET g_bmba.bmba012 = g_bmba_d3[l_ac].bmba012
   LET g_bmba.bmba010 = g_bmba_d3[l_ac].bmba010
   LET g_bmba.bmba005 = g_bmba_d3[l_ac].bmba005
   LET g_bmba.bmba006 = g_bmba_d3[l_ac].bmba006
   LET g_bmba.bmba029 = g_bmba_d3[l_ac].bmba029
END FUNCTION]]>
  </point>
  <point name="function.abmm200_init" order="8" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_init()
   CALL cl_set_combo_scc('bmaa001_imaa004','1001')
   CALL cl_set_combo_scc('bmaa001_imaa011','1002')
   CALL cl_set_combo_scc('bmba013','1101')
   CALL cl_set_combo_scc('bmba019','1104')
   CALL cl_set_combo_scc('bmba021','4003')
   CALL cl_set_combo_scc('bmba029','1108')
   CALL cl_set_combo_scc_part('bmaastus','13','N,Y,X')

   CALL cl_set_comp_visible("rdo_searchtype", FALSE)
   #141028 add 批次数量栏位取消
   CALL cl_set_comp_visible("bmaa003", FALSE)
   #141028 end
   
   CALL cl_set_comp_required("bmba004",FALSE)
   CALL cl_set_comp_required("bmba007",FALSE)
   CALL cl_set_comp_required("bmba008",FALSE)
   
   IF g_prog = 'abmm210' THEN
      CALL cl_set_act_visible("edit_co_product,edit_by_product,edit_multi_product", FALSE)
      CALL cl_set_act_visible("carry_exe,carryed_show", FALSE)  #add 150327
   END IF
   
   CALL abmm200_default_search()

END FUNCTION]]>
  </point>
  <point name="function.abmm200_ui_dialog" order="9" ver="12" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_ui_dialog()
   DEFINE l_msg            STRING
   DEFINE li_idx           LIKE type_t.num5
   DEFINE l_imaa011        LIKE imaa_t.imaa011  #产出类型
   DEFINE l_imaa012        LIKE imaa_t.imaa012  #允许副产品产出
   DEFINE l_ismatch        LIKE type_t.chr1     #新增的那笔资料与根目录list是否匹配到
   DEFINE l_find           LIKE type_t.chr1
   DEFINE l_wc        STRING  #add 150327
   DEFINE l_equal     LIKE type_t.num5     #TRUE/FALSE：一致/不一致.组成用量是否与插件数量一致，ima037为N是作一致处理

   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件

   CALL cl_set_act_visible("accept,cancel", FALSE)

   WHILE TRUE

      #清除畫面
      CLEAR FORM
      INITIALIZE g_bmaa_m.* TO NULL
      CALL g_bmba_d1.clear()
      CALL g_bmba_d2.clear()
      CALL g_bmba_d3.clear()
      CALL g_bmbb_d.clear()
      CALL g_bmab_d.clear()
      CALL g_bmac_d.clear()
      CALL g_bmad_d.clear()
      CALL g_browser.clear()
      
      CALL abmm200_browser_fill()

      #回到原来的那笔
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      #IF g_state = "insert" THEN
      IF NOT cl_null(g_state) THEN
         LET l_ismatch = 'N'
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_bmaa001 = g_bmaa001_t AND g_browser[li_idx].b_bmaa002 = g_bmaa002_t THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               LET l_ismatch = 'Y'
               EXIT FOR
            END IF
         END FOR
         
         IF l_ismatch = 'N' THEN
            #没找到代表在子目录中，将新增的主件需作为元件查找主件，找到根目录有的主件展开
            LET g_xh = 'N'  #循环未报错
            CALL abmm200_find_new_expand(g_bmaa001_t,0) RETURNING l_find
            #再次找到新增的笔数
            #IF l_find = 'Y' THEN #展开中有找到与根目录相匹配的
               FOR li_idx = 1 TO g_browser.getLength()
                  IF g_browser[li_idx].b_bmaa001 = g_bmaa001_t AND g_browser[li_idx].b_bmaa002 = g_bmaa002_t THEN
                     LET g_current_row = li_idx
                     LET g_current_idx = li_idx
                     EXIT FOR
                  END IF
               END FOR
            #END IF
         END IF
         
         LET g_state = ""
      END IF

      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

         INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype
            BEFORE INPUT
         END INPUT

         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE

               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF

               CALL abmm200_fetch('') # reload data
               #CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt) #設定browser 下面4個button
               LET g_detail_idx = 1
               CALL abmm200_ui_detailshow() #Setting the current row

               CALL abmm200_idx_chk()
               #NEXT FIELD bmba003

               ON EXPAND (g_row_index)
                  #樹展開
                  CALL abmm200_browser_expand(g_row_index)
                  LET g_browser[g_row_index].b_isExp = 1

               ON COLLAPSE (g_row_index)
                  #樹關閉

         END DISPLAY

         DISPLAY ARRAY g_bmab_d TO s_bmab.* ATTRIBUTES(COUNT=g_rec_b_bmab) #page1
            BEFORE ROW
               CALL abmm200_idx_chk()
               LET l_ac = ARR_CURR()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL abmm200_idx_chk()
         END DISPLAY

         DISPLAY ARRAY g_bmac_d TO s_bmac.* ATTRIBUTES(COUNT=g_rec_b_bmac) #page1
            BEFORE ROW
               CALL abmm200_idx_chk()
               LET l_ac = ARR_CURR()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL abmm200_idx_chk()
         END DISPLAY

         DISPLAY ARRAY g_bmad_d TO s_bmad.* ATTRIBUTES(COUNT=g_rec_b_bmad) #page1
            BEFORE ROW
               CALL abmm200_idx_chk()
               LET l_ac = ARR_CURR()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL abmm200_idx_chk()
         END DISPLAY

         DISPLAY ARRAY g_bmba_d1 TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b_bmba1) #page1
            BEFORE ROW
               CALL abmm200_idx_chk()
               LET l_ac = ARR_CURR()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL abmm200_idx_chk()

            #取替代维护
            ON ACTION abmm207
               LET g_action_choice="abmm207"
               IF cl_auth_chk_act("abmm207") THEN
                  IF NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005)  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                     INITIALIZE la_param.* TO NULL
                     CASE g_prog
                        WHEN "abmm200"
                             LET la_param.prog = "abmm207"
                        WHEN "abmm210"
                             LET la_param.prog = "abmm217"
                     END CASE
                     
                     #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                     LET la_param.param[1] = g_bmaa_m.bmaasite  #azzi910中
                     LET la_param.param[2] = g_bmaa_m.bmaa001
                     LET la_param.param[3] = g_bmaa_m.bmaa002
                     LET la_param.param[4] = g_bmba_d1[l_ac].bmba003
                     LET la_param.param[5] = g_bmba_d1[l_ac].bmba004
                     #LET la_param.param[6] = g_bmba005_2   #g_bmba_d1[l_ac].bmba005
                     LET la_param.param[6] = g_bmba_d1[l_ac].bmba007
                     LET la_param.param[7] = g_bmba_d1[l_ac].bmba008
                     LET ls_js = util.JSON.stringify(la_param)
                     DISPLAY ls_js
                     CALL cl_cmdrun_wait(ls_js)
                     
                     #检查是否有取替代料
                     CALL abmm200_chk_replace()
                          RETURNING g_bmba_d1[l_ac].replace
                     DISPLAY BY NAME g_bmba_d1[l_ac].replace
                  END IF
               END IF

            #插件位置维护
            ON ACTION abmm202
               LET g_action_choice="abmm202"
               IF cl_auth_chk_act("abmm202") THEN
                  IF NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005)  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                     #打开维护插件位置的作业
                     CALL abmm200_open_abmm202(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)

                     #检查是否有插件位置资料，并更新
                     CALL abmm200_get_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)  #重新获取bmba018
                        RETURNING g_bmba_d1[l_ac].bmba018
                     DISPLAY BY NAME g_bmba_d1[l_ac].bmba018
                     
                     #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                     UPDATE bmba_t SET bmba018 = g_bmba_d1[l_ac].bmba018
                      WHERE bmbaent = g_enterprise
                        AND bmbasite= g_bmaa_m.bmaasite
                        AND bmba001 = g_bmaa_m.bmaa001
                        AND bmba002 = g_bmaa_m.bmaa002
                        AND bmba003 = g_bmba_d1[l_ac].bmba003 #項次
                        AND bmba004 = g_bmba_d1[l_ac].bmba004
                        #AND bmba005 = g_bmba_d1[l_ac].bmba005
                        AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmba007 = g_bmba_d1[l_ac].bmba007
                        AND bmba008 = g_bmba_d1[l_ac].bmba008
                     
                     #add 150527
                     #维护拆件位置的时候，可能会更新组成用量，需重新刷新一下
                     SELECT bmba011 INTO g_bmba_d1[l_ac].bmba011 FROM bmba_t
                      WHERE bmbaent = g_enterprise
                        AND bmbasite= g_bmaa_m.bmaasite
                        AND bmba001 = g_bmaa_m.bmaa001
                        AND bmba002 = g_bmaa_m.bmaa002
                        AND bmba003 = g_bmba_d1[l_ac].bmba003
                        AND bmba004 = g_bmba_d1[l_ac].bmba004
                        #AND bmba005 = g_bmba_d1[l_ac].bmba005
                        AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmba007 = g_bmba_d1[l_ac].bmba007
                        AND bmba008 = g_bmba_d1[l_ac].bmba008
                     DISPLAY BY NAME g_bmba_d1[l_ac].bmba011
                     #勾稽组成用量和插件数量
                     CALL s_abmm200_chk_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,'',g_bmba_d1[l_ac].bmba011)
                        RETURNING l_equal  #TRUE/FALSE：一致/不一致
                     IF NOT l_equal THEN  #不一致
                        #组件料号资料的组装位置需勾稽(imaa037)=Y时，需检查单身数量加总等于组成用量(bmba011)
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'abm-00076'
                        LET g_errparam.extend = g_bmba_d1[l_ac].bmba003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                     END IF
                     #add 150527 end
                     
                  END IF
               END IF

            #特征管理维护
            ON ACTION abmm203
               LET g_action_choice="abmm203"
               IF cl_auth_chk_act("abmm203") THEN
                  IF NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005)  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                     #CASE g_prog
                     #   WHEN "abmm200"
                     #        LET l_msg = " abmm203 '",g_bmaa_m.bmaasite,"' '",g_bmaa_m.bmaa001,"' '",g_bmaa_m.bmaa002,"' '",g_bmba_d2[l_ac].bmba003,"' '",g_bmba_d2[l_ac].bmba004,"' '",g_bmba_d2[l_ac].bmba005,"' '",g_bmba_d2[l_ac].bmba007,"' '",g_bmba_d2[l_ac].bmba008,"' "
                     #   WHEN "abmm210"
                     #        LET l_msg = " abmm213 '",g_bmaa_m.bmaasite,"' '",g_bmaa_m.bmaa001,"' '",g_bmaa_m.bmaa002,"' '",g_bmba_d2[l_ac].bmba003,"' '",g_bmba_d2[l_ac].bmba004,"' '",g_bmba_d2[l_ac].bmba005,"' '",g_bmba_d2[l_ac].bmba007,"' '",g_bmba_d2[l_ac].bmba008,"' "
                     #END CASE
                     #CALL cl_cmdrun(l_msg)
                     INITIALIZE la_param.* TO NULL
                     CASE g_prog
                        WHEN "abmm200"
                             LET la_param.prog = "abmm203"
                             #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                             LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                             #LET la_param.param[1] = g_bmaa_m.bmaasite  #azzi910中
                             LET la_param.param[1] = g_bmaa_m.bmaa001
                             LET la_param.param[2] = g_bmaa_m.bmaa002
                             LET la_param.param[3] = g_bmba_d1[l_ac].bmba003
                             LET la_param.param[4] = g_bmba_d1[l_ac].bmba004
                             LET la_param.param[5] = g_bmba005_2  #g_bmba_d1[l_ac].bmba005
                             LET la_param.param[6] = g_bmba_d1[l_ac].bmba007
                             LET la_param.param[7] = g_bmba_d1[l_ac].bmba008
                        WHEN "abmm210"
                             LET la_param.prog = "abmm213"
                             #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                             LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                             LET la_param.param[1] = g_bmaa_m.bmaasite  #azzi910中
                             LET la_param.param[2] = g_bmaa_m.bmaa001
                             LET la_param.param[3] = g_bmaa_m.bmaa002
                             LET la_param.param[4] = g_bmba_d1[l_ac].bmba003
                             LET la_param.param[5] = g_bmba_d1[l_ac].bmba004
                             LET la_param.param[6] = g_bmba005_2  #g_bmba_d1[l_ac].bmba005
                             LET la_param.param[7] = g_bmba_d1[l_ac].bmba007
                             LET la_param.param[8] = g_bmba_d1[l_ac].bmba008
                     END CASE
                     LET ls_js = util.JSON.stringify(la_param)
                     DISPLAY ls_js
                     CALL cl_cmdrun(ls_js)
                  END IF
               END IF
               
            #明细操作-公式用量
            ON ACTION abmm200_01
               LET g_action_choice="abmm200_01"
               IF cl_auth_chk_act("abmm200_01") THEN
                  IF NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba027='Y' THEN
                     CALL abmm200_01(g_bmaa_m.bmaa001,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba028) RETURNING g_bmba_d1[l_ac].bmba028
                     DISPLAY g_bmba_d1[l_ac].bmba028 TO bmba028
                     
                     #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                     UPDATE bmba_t SET bmba028 = g_bmba_d1[l_ac].bmba028
                      WHERE bmbaent = g_enterprise
                        AND bmbasite= g_bmaa_m.bmaasite
                        AND bmba001 = g_bmaa_m.bmaa001
                        AND bmba002 = g_bmaa_m.bmaa002
                        AND bmba003 = g_bmba_d1[l_ac].bmba003 #項次
                        AND bmba004 = g_bmba_d1[l_ac].bmba004
                        #AND bmba005 = g_bmba_d1[l_ac].bmba005
                        AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmba007 = g_bmba_d1[l_ac].bmba007
                        AND bmba008 = g_bmba_d1[l_ac].bmba008
                  END IF
               END IF
            #add 150310
            #明细操作-修改单身备注
            ON ACTION bmba_ooff013  #修改单身备注
               LET g_action_choice="bmba_ooff013"
               IF cl_auth_chk_act("bmba_ooff013") THEN
                  IF NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005)  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                     CALL s_aooi360_edit('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,' ',g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)
                        RETURNING g_bmba_d1[l_ac].bmba_ooff013
                     DISPLAY g_bmba_d1[l_ac].bmba_ooff013 TO bmba_ooff013              #顯示到畫面上
                     
                     #开启事务
                     CALL s_transaction_begin()
                     LET l_success_tot = TRUE
                     
                     #ooff资料
                     IF NOT cl_null(g_bmba_d1[l_ac].bmba_ooff013) THEN
                        CALL s_aooi360_gen('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,' ',g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)
                           RETURNING l_success
                     ELSE
                        CALL s_aooi360_del('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,' ',g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,' ',' ','4') 
                           RETURNING l_success
                     END IF
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                     
                     #拋转
                     IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                        CALL s_abmm200_carry_ooff('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,' ',g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)
                           RETURNING l_success
                        IF NOT l_success THEN
                           LET l_success_tot = FALSE
                        END IF
                     END IF
                     
                     IF l_success_tot = FALSE THEN
                        CALL s_transaction_end('N','0')
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "sub-00034" #资料更新失败
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = FALSE
                        CALL cl_err()
                     ELSE
                        CALL s_transaction_end('Y','0')
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = "sub-00033" #资料更新成功
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = FALSE
                        CALL cl_err()
                     END IF
                  END IF
               END IF
            #add 150310 end
            
            #单身串查
            ON ACTION detail_qrystr
               LET g_action_choice="detail_qrystr"
               IF cl_auth_chk_act("detail_qrystr") THEN
                  MENU "" ATTRIBUTE(STYLE="popup")
                     ON ACTION abmt300
                        LET g_action_choice="abmt300"
                        IF cl_auth_chk_act("abmt300") THEN
                           #IF l_ac>0 THEN
                           #   LET l_msg = "abmt300 '",g_bmaa_m.bmaasite,"' '",g_bmba_d1[l_ac].bmba026,"'"
                           #   CALL cl_cmdrun(l_msg)   
                           #ELSE
                           #   CALL cl_cmdrun("abmt300") 
                           #END IF
                           INITIALIZE la_param.* TO NULL
                           LET la_param.prog = "abmt300"
                           LET la_param.param[1] = g_bmaa_m.bmaasite
                           LET la_param.param[2] = g_bmba_d1[l_ac].bmba026
                           LET ls_js = util.JSON.stringify(la_param)
                           DISPLAY ls_js
                           CALL cl_cmdrun(ls_js)
                        END IF

                     ON ACTION aimm200
                        LET g_action_choice="aimm200"
                        IF cl_auth_chk_act("aimm200") THEN
                           #IF l_ac>0 THEN
                           #   LET l_msg = "aimm200 '",g_bmba_d1[l_ac].bmba003,"'"
                           #   CALL cl_cmdrun(l_msg)  
                           #ELSE
                           #   CALL cl_cmdrun("aimm200") 
                           #END IF
                           INITIALIZE la_param.* TO NULL
                           LET la_param.prog = "aimm200"
                           LET la_param.param[1] = g_bmba_d1[l_ac].bmba003
                           LET ls_js = util.JSON.stringify(la_param)
                           DISPLAY ls_js
                           CALL cl_cmdrun(ls_js)                           
                        END IF
                     
                     ON ACTION aooi360
                        LET g_action_choice="aooi360"
                        IF cl_auth_chk_act("aooi360") THEN
                           #IF l_ac>0 THEN
                           #   LET l_msg = "aooi360 '5' '",g_bmaa_m.bmaasite,"' '",g_bmaa_m.bmaa001,"' '",g_bmaa_m.bmaa002,"' '",g_bmba_d1[l_ac].bmba003,"' '",g_bmba_d1[l_ac].bmba004,"' '",g_bmba_d1[l_ac].bmba005,"' '",g_bmba_d1[l_ac].bmba007,"'  '",g_bmba_d1[l_ac].bmba008,"' ' ' ' ' '4'"
                           #   CALL cl_cmdrun(l_msg)
                           #ELSE
                           #   CALL cl_cmdrun("aooi360") 
                           #END IF
                           LET g_bmba005 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                           INITIALIZE la_param.* TO NULL
                           LET la_param.prog = "aooi360"
                           LET la_param.param[1] = '5'
                           LET la_param.param[2] = g_bmaa_m.bmaasite
                           LET la_param.param[3] = g_bmaa_m.bmaa001
                           LET la_param.param[4] = g_bmaa_m.bmaa002
                           LET la_param.param[5] = g_bmba_d1[l_ac].bmba003
                           LET la_param.param[6] = g_bmba_d1[l_ac].bmba004
                           LET la_param.param[7] = g_bmba005
                           LET la_param.param[8] = g_bmba_d1[l_ac].bmba007
                           LET la_param.param[9] = g_bmba_d1[l_ac].bmba008
                           LET la_param.param[10]= ' '
                           LET la_param.param[11]= ' '
                           LET la_param.param[12]= '4'
                           LET ls_js = util.JSON.stringify(la_param)
                           DISPLAY ls_js
                           CALL cl_cmdrun(ls_js) 
                        END IF
                  END MENU
                  EXIT DIALOG
               END IF
         END DISPLAY
         
         DISPLAY ARRAY g_bmba_d2 TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b_bmba2) #page1
            BEFORE ROW
               CALL abmm200_idx_chk()
               LET l_ac = ARR_CURR()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL abmm200_idx_chk()

            #单身串查
            ON ACTION detail_qrystr
               LET g_action_choice="detail_qrystr"
               IF cl_auth_chk_act("detail_qrystr") THEN
                  MENU "" ATTRIBUTE(STYLE="popup")
                     ON ACTION aimm200
                        LET g_action_choice="aimm200"
                        IF cl_auth_chk_act("aimm200") THEN
                           #IF l_ac>0 THEN
                           #   LET l_msg = " aimm200 '",g_bmba_d2[l_ac].bmba003,"'"
                           #   CALL cl_cmdrun(l_msg)  
                           #ELSE
                           #   CALL cl_cmdrun("aimm200") 
                           #END IF    
                           INITIALIZE la_param.* TO NULL
                           LET la_param.prog = "aimm200"
                           LET la_param.param[1] = g_bmba_d2[l_ac].bmba003
                           LET ls_js = util.JSON.stringify(la_param)
                           DISPLAY ls_js
                           CALL cl_cmdrun(ls_js)                       
                        END IF
                  END MENU
                  EXIT DIALOG
               END IF
         END DISPLAY
         
         DISPLAY ARRAY g_bmba_d3 TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b_bmba3) #page1
            BEFORE ROW
               CALL abmm200_idx_chk()
               LET l_ac = ARR_CURR()
               CALL abmm200_b_fill_bmbb()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL abmm200_idx_chk()

            #单身串查
            ON ACTION detail_qrystr
               LET g_action_choice="detail_qrystr"
               IF cl_auth_chk_act("detail_qrystr") THEN
                  MENU "" ATTRIBUTE(STYLE="popup")
                     ON ACTION aimm200
                        LET g_action_choice="aimm200"
                        IF cl_auth_chk_act("aimm200") THEN
                           #IF l_ac>0 THEN
                           #   LET l_msg = " aimm200 '",g_bmba_d2[l_ac].bmba003,"'"
                           #   CALL cl_cmdrun(l_msg)  
                           #ELSE
                           #   CALL cl_cmdrun("aimm200") 
                           #END IF 
                           INITIALIZE la_param.* TO NULL
                           LET la_param.prog = "aimm200"
                           LET la_param.param[1] = g_bmba_d2[l_ac].bmba003
                           LET ls_js = util.JSON.stringify(la_param)
                           DISPLAY ls_js
                           CALL cl_cmdrun(ls_js)                          
                        END IF
                  END MENU
                  EXIT DIALOG
               END IF
         END DISPLAY
         
         DISPLAY ARRAY g_bmbb_d TO s_bmbb.* ATTRIBUTES(COUNT=g_rec_b_bmbb) #page1
            BEFORE ROW
               CALL abmm200_idx_chk()
               LET l_ac_bmbb = ARR_CURR()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL abmm200_idx_chk()
         END DISPLAY

         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE

            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF

            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmm200_fetch('') # reload data
            END IF
            #CALL cl_ui_set_browse_page_button(g_curr_diag,g_page_action,g_pagestart,g_browser_cnt)
            #LET g_detail_idx = 1
            LET l_ac = 1
            LET l_ac_bmbb = 1
            CALL abmm200_ui_detailshow() #Setting the current row

            #筆數顯示
            LET g_current_page = 1
            CALL abmm200_idx_chk()

            #NEXT FIELD bmba003

         #Browser用Action
         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc TO NULL
            INITIALIZE g_wc2 TO NULL
            #INITIALIZE g_wc_vdate TO NULL
            #INITIALIZE g_wc2_bmaa TO NULL
            INITIALIZE g_wc2_bmab TO NULL
            INITIALIZE g_wc2_bmac TO NULL
            INITIALIZE g_wc2_bmad TO NULL
            INITIALIZE g_wc2_bmba1 TO NULL
            INITIALIZE g_wc2_bmba2 TO NULL
            INITIALIZE g_wc2_bmba3 TO NULL
            INITIALIZE g_wc2_bmbb TO NULL
            LET g_vdate = ''

            LET g_searchstr = GET_FLDBUF(searchstr)
           #LET g_searchcol = GET_FLDBUF(cbo_searchcol)
  
            IF NOT abmm200_browser_search() THEN
               CONTINUE DIALOG
            END IF
            LET g_current_idx = 1
            IF g_browser.getLength() = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -100
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()
            END IF
            LET g_action_choice = "searchdata"
            EXIT DIALOG

         ON ACTION statechange
            CALL abmm200_statechange()
            LET g_action_choice = "statechange"
            EXIT DIALOG

         #簽核
         #ON ACTION signature
         #   MENU "" ATTRIBUTES( STYLE="popup", IMAGE="tb/authorize/terminate.png" )
         #      ON ACTION ef_sign
         #      ON ACTION stop_authflow
         #      ON ACTION add_auth
         #      ON ACTION revoke_auth
         #      ON ACTION approve
         #      ON ACTION unapprove
         #      ON ACTION auth_opinion
         #      ON ACTION auth_status
         #      ON ACTION auth_attach
         #      ON ACTION authflow_designer
         #   END MENU

         #ACTION表單列
         ON ACTION first
            CALL abmm200_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm200_idx_chk()

         ON ACTION previous
            CALL abmm200_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm200_idx_chk()

         ON ACTION jump
            CALL abmm200_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm200_idx_chk()

         ON ACTION next
            CALL abmm200_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm200_idx_chk()

         ON ACTION last
            CALL abmm200_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmm200_idx_chk()

         ON ACTION close
            LET INT_FLAG=FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF

         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_bmaasite
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF

         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden
            END IF

         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abmm200_delete()
               EXIT DIALOG
            END IF

         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abmm200_query()
            END IF

         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmm200_insert()
                EXIT DIALOG
            END IF

         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL abmm200_reproduce()
                EXIT DIALOG
            END IF

         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
                #LET g_state = "output"
                #LET g_bmaa001_t = g_bmaa_m.bmaa001
                #LET g_bmaa002_t = g_bmaa_m.bmaa002
                LET g_rep_wc = " bmaaent = ",g_enterprise," AND bmaasite = '",g_site,"' AND bmaa001 = '",g_bmaa_m.bmaa001,"' AND bmaa002 = '",g_bmaa_m.bmaa002,"' "
                #&include "erp/abm/abmm200_rep.4gl"
                #CALL abmr001_x01(g_rep_wc,'N',g_vdate,'1')  #模板里不支持日期时间型
                CALL abmr001_x01(g_rep_wc,'N',g_today,'1')
                EXIT DIALOG
            END IF
            
         ON ACTION exporttoexcel   #匯出excel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_export_node[1] = base.typeInfo.create(g_browser)
               LET g_export_id[1]   = "s_browse"
               LET g_export_node[2] = base.typeInfo.create(g_bmab_d)
               LET g_export_id[2]   = "s_bmab"
               LET g_export_node[3] = base.typeInfo.create(g_bmac_d)
               LET g_export_id[3]   = "s_bmac"
               LET g_export_node[4] = base.typeInfo.create(g_bmad_d)
               LET g_export_id[4]   = "s_bmad"
               LET g_export_node[5] = base.typeInfo.create(g_bmba_d1)
               LET g_export_id[5]   = "s_detail1"
               LET g_export_node[6] = base.typeInfo.create(g_bmba_d2)
               LET g_export_id[6]   = "s_detail2"
               LET g_export_node[7] = base.typeInfo.create(g_bmba_d3)
               LET g_export_id[7]   = "s_detail3"
               LET g_export_node[8] = base.typeInfo.create(g_bmbb_d)
               LET g_export_id[8]   = "s_bmbb"
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               CALL abmm200_modify()
               EXIT DIALOG
            END IF

         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               CALL abmm200_modify()
               EXIT DIALOG
            END IF
         
         #add 150120
         ON ACTION image_next
            LET g_action_choice="image_next"
            DISPLAY cl_doc_set_pic_seq(TRUE) TO ffimage
         ON ACTION image_previous
            LET g_action_choice="image_previous"
            DISPLAY cl_doc_set_pic_seq(FALSE) TO ffimage
         #add 150120 end
         
         #生管资料维护
         ON ACTION edit_PC
            LET g_action_choice="edit_PC"
            IF cl_auth_chk_act("edit_PC") AND abmm200_modify_chk_allow() THEN
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               IF g_rec_b_bmba2 = 0 THEN
                  #單身缺少資料，不可維護！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               CALL abmm200_input("u","pc")
               EXIT DIALOG
            END IF

         #损耗率资料维护
         ON ACTION edit_loss
            LET g_action_choice="edit_loss"
            IF cl_auth_chk_act("edit_loss") AND abmm200_modify_chk_allow() THEN
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               IF g_rec_b_bmba3 = 0 THEN
                  #單身缺少資料，不可維護！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00073'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               CALL abmm200_input("u","loss")
               EXIT DIALOG
            END IF

         #联产品维护
         ON ACTION edit_co_product
            LET g_action_choice="edit_co_product"
            IF cl_auth_chk_act("edit_co_product") AND abmm200_modify_chk_allow() THEN
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               IF g_prog = 'abmm210' THEN
                  #不可直接修改BOM,若需修改生管或损耗资料可选择菜单栏上对应按钮，若需修改其他资料，需做ECN变更！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00077'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               #联产品，多产出主件，副产品 处理
               SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmaa_m.bmaa001
               IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
               IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
               IF l_imaa011 != '1' THEN  #联产品
                  #主件料号的"产出类型"不是联产品，不可维护联产品页签;请至[料件主档维护作业aimm200]检查！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00103'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               CALL abmm200_input("u","cp")
               EXIT DIALOG
            END IF

         #副产品维护
         ON ACTION edit_by_product
            LET g_action_choice="edit_by_product"
            IF cl_auth_chk_act("edit_by_product") AND abmm200_modify_chk_allow() THEN
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               IF g_prog = 'abmm210' THEN
                  #不可直接修改BOM,若需修改生管或损耗资料可选择菜单栏上对应按钮，若需修改其他资料，需做ECN变更！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00077'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               #联产品，多产出主件，副产品 处理
               SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmaa_m.bmaa001
               IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
               IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
               IF l_imaa012 = 'N' THEN  #不允许副产品产出
                  #主件料号的"允许副产品产出"设置为不允许，不可维护副产品页签;请至[料件主档维护作业aimm200]检查！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00105'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               CALL abmm200_input("u","bp")
               EXIT DIALOG
            END IF

         #多产出主件维护
         ON ACTION edit_multi_product
            LET g_action_choice="edit_multi_product"
            IF cl_auth_chk_act("edit_multi_product") AND abmm200_modify_chk_allow() THEN
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               IF g_prog = 'abmm210' THEN
                  #不可直接修改BOM,若需修改生管或损耗资料可选择菜单栏上对应按钮，若需修改其他资料，需做ECN变更！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00077'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               #联产品，多产出主件，副产品 处理
               SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmaa_m.bmaa001
               IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
               IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
               IF l_imaa011 != '2' THEN  #分解品
                  #主件料号的"产出类型"不是分解品，不可维护多产出主件页签;请至[料件主档维护作业aimm200]检查！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00104'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               CALL abmm200_input("u","mp")
               EXIT DIALOG
            END IF

         #add 150310
         #整单操作-修改单头备注
         ON ACTION bmaa_ooff013  #修改单头备注
            LET g_action_choice="bmaa_ooff013"
            #IF cl_auth_chk_act("bmaa_ooff013") AND abmm200_modify_chk_allow() THEN
            IF cl_auth_chk_act("bmaa_ooff013") THEN #备注不需要做ECN修改控管，可直接修改by pengu
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               CALL s_aooi360_edit('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4',g_bmaa_m.bmaa_ooff013)
                  RETURNING g_bmaa_m.bmaa_ooff013
               DISPLAY g_bmaa_m.bmaa_ooff013 TO bmaa_ooff013              #顯示到畫面上
               
               #开启事务
               CALL s_transaction_begin()
               LET l_success_tot = TRUE
               
               #ooff资料
               IF NOT cl_null(g_bmaa_m.bmaa_ooff013) THEN
                  CALL s_aooi360_gen('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4',g_bmaa_m.bmaa_ooff013)
                     RETURNING l_success
               ELSE
                  CALL s_aooi360_del('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4')
                     RETURNING l_success
               END IF
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               
               #拋转
               IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                  CALL s_abmm200_carry_ooff('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4',g_bmaa_m.bmaa_ooff013)
                     RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
               END IF
               
               IF l_success_tot = FALSE THEN
                  CALL s_transaction_end('N','0')
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "sub-00034" #资料更新失败
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
               ELSE
                  CALL s_transaction_end('Y','0')
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "sub-00033" #资料更新成功
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
               END IF
            END IF
         #add 150310 end
            
         #add 150327
         #整单操作-拋转
         ON ACTION carry_exe  #拋转
            LET g_action_choice="carry_exe"
            IF cl_auth_chk_act("carry_exe") THEN
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               IF g_prog = 'abmm210' THEN
                  #据点资料不可执行拋转,请到集团研发作业进行操作
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00255'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               IF g_bmaa_m.bmaastus != 'Y' THEN
                  #请先将资料审核，再执行此操作！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00256'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               CALL s_transaction_begin()
               LET l_wc = " bmaa001 = '",g_bmaa_m.bmaa001,"' and bmaa002  = '",g_bmaa_m.bmaa002,"' "
               CALL s_abmm200_carry(l_wc,'','Y') RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
            END IF
            
         ON ACTION carryed_show  #显示拋转据点
            LET g_action_choice="carryed_show"
            IF cl_auth_chk_act("carryed_show") THEN 
               IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaa002 IS NULL THEN
                  #本操作必須先查詢出資料，才能進行處理
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'std-00003'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               IF g_prog = 'abmm210' THEN
                  #据点资料不可执行拋转,请到集团研发作业进行操作
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00255'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               IF g_bmaa_m.bmaastus != 'Y' THEN
                  #请先将资料审核，再执行此操作！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00256'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  EXIT DIALOG
               END IF
               
               CALL s_abmm200_carryed_show(g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
            END IF
         #add 150327 end
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG

      END DIALOG
	
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE

   CALL cl_set_act_visible("accept,cancel", TRUE)

END FUNCTION]]>
  </point>
  <point name="function.abmm200_default_search" order="10" ver="12" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING

   {</Local define>}

   LET g_pagestart = 1

   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   #LET g_wc = " SELECT bmaaent,bmaasite,bmaa001,bmaa002 FROM bmaa_t "
   #LET g_vdate = g_today
   LET g_vdate = cl_get_current()
   LET g_vdate_t = g_vdate

   #RETURN

   IF g_searchtype = 0 OR cl_null(g_searchtype) THEN
      LET g_searchtype = 3
   END IF 

   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " bmaasite = '", g_argv[1], "' AND "
   END IF

   IF NOT cl_null(g_argv[2]) THEN
      LET ls_wc = ls_wc, " bmaa001 = '", g_argv[2], "' AND "
   END IF

   IF g_argv[3] IS NOT NULL THEN
      LET ls_wc = ls_wc, " bmaa002 = '", g_argv[3], "' AND "
   END IF



   #IF NOT cl_null(ls_wc) THEN
   #   LET g_wc = g_wc CLIPPED," WHERE ",ls_wc.subString(1,ls_wc.getLength()-5)
   #ELSE
   #   IF cl_null(g_wc) THEN
   #      LET g_wc = " SELECT bmaaent,bmaasite,bmaa001,bmaa002 FROM bmaa_t "
   #   END IF
   #   LET g_wc = " SELECT bmaaent,bmaasite,bmaa001,bmaa002 FROM bmaa_t WHERE bmaaent=29845 "  #add 作业开启时不要查找资料,不写1=2增加效能
   #END IF
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      #預設查詢條件
      #mod pattern 修改调整150624
      #LET g_wc = cl_qbe_get_default_qryplan()
      #IF cl_null(g_wc) THEN
      #   LET g_wc = " 1=1 AND bmaaent=888888"
      #END IF
      
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_bmaa,g_wc2_extend TO NULL
         INITIALIZE g_wc2_bmab TO NULL
         INITIALIZE g_wc2_bmac TO NULL
         INITIALIZE g_wc2_bmad TO NULL
         INITIALIZE g_wc2_bmba1 TO NULL
         INITIALIZE g_wc2_bmba2 TO NULL
         INITIALIZE g_wc2_bmba3 TO NULL
         INITIALIZE g_wc2_bmbb TO NULL


         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "bmaa_t"
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmab_t"
                  LET g_wc2_bmab = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmac_t"
                  LET g_wc2_bmac = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmad_t"
                  LET g_wc2_bmad = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmba1_t"
                  LET g_wc2_bmba1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmba2_t"
                  LET g_wc2_bmba2 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmba3_t"
                  LET g_wc2_bmba3 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmbb_t"
                  LET g_wc2_bmbb = la_wc[li_idx].wc


               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_bmab)
            OR NOT cl_null(g_wc2_bmac)
            OR NOT cl_null(g_wc2_bmad)
            OR NOT cl_null(g_wc2_bmba1)
            OR NOT cl_null(g_wc2_bmba2)
            OR NOT cl_null(g_wc2_bmba3)
            OR NOT cl_null(g_wc2_bmbb)


            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_bmab <> " 1=1" AND NOT cl_null(g_wc2_bmab) THEN
               LET g_wc2 = g_wc2_bmab
            END IF
            IF g_wc2_bmac <> " 1=1" AND NOT cl_null(g_wc2_bmac) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_bmac
            END IF
            IF g_wc2_bmad <> " 1=1" AND NOT cl_null(g_wc2_bmad) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_bmad
            END IF
            IF g_wc2_bmba1 <> " 1=1" AND NOT cl_null(g_wc2_bmba1) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_bmba1
            END IF
            IF g_wc2_bmba2 <> " 1=1" AND NOT cl_null(g_wc2_bmba2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_bmba2
            END IF
            IF g_wc2_bmba3 <> " 1=1" AND NOT cl_null(g_wc2_bmba3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_bmba3
            END IF
            IF g_wc2_bmbb <> " 1=1" AND NOT cl_null(g_wc2_bmbb) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_bmbb
            END IF


            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF

            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=1 AND bmaaent=888888"
      END IF
      
      #mod pattern 修改调整150624 end
   END IF

   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.abmm200_browser_search" order="11" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_browser_search()
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      #『选择排序字段』没有挑选
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00005"
      LET g_errparam.extend = "searchcol"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN FALSE
   END IF

   #LET g_wc = " SELECT bmaaent,bmaasite,bmaa001,bmaa002 FROM bmaa_t "
   #IF NOT cl_null(g_searchstr) THEN
   #   IF g_searchcol.getindexof('bmba',1)>0 THEN
   #      LET g_wc = " SELECT bmaaent,bmaasite,bmaa001,bmaa002 FROM bmaa_t,bmba_t ",
   #                 "  WHERE bmaaent = bmbaent ",
   #                 "    AND bmaasite= bmbasite",
   #                 "    AND bmaa001 = bmba001 ",
   #                 "    AND bmaa002 = bmba002 "
   #      LET g_wc = g_wc CLIPPED," AND lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
   #   ELSE
   #      LET g_wc = g_wc CLIPPED," WHERE lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
   #   END IF
   #   LET g_wc = g_wc.toLowerCase()
   #END IF
   IF NOT cl_null(g_searchstr) THEN
      IF g_searchcol.getindexof('bmba',1)>0 THEN
         LET g_wc2= " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
         LET g_wc2 = g_wc2.toLowerCase()
      ELSE
         LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
         LET g_wc = g_wc.toLowerCase()
      END IF
   END IF
   IF cl_null(g_wc) THEN LET g_wc = " 1=1 " END IF
   IF cl_null(g_wc2) THEN LET g_wc2 = " 1=1 " END IF

   #若為排序搜尋則添加以下條件
   #IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
   #   LET g_wc = g_wc, " ORDER BY bmaaent,bmaasite,bmaa001,bmaa002"
   #ELSE
   #   LET g_wc = g_wc, " ORDER BY ", g_searchcol
   #END IF

   #CALL abmm200_browser_fill()
   CALL ui.Interface.refresh()
   RETURN TRUE

END FUNCTION]]>
  </point>
  <point name="function.abmm200_ui_headershow" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_ui_headershow()
   LET g_bmaa_m.bmaasite = g_browser[g_current_idx].b_bmaasite
   LET g_bmaa_m.bmaa001 = g_browser[g_current_idx].b_bmaa001
   LET g_bmaa_m.bmaa002 = g_browser[g_current_idx].b_bmaa002


   SELECT UNIQUE bmaa001,bmaa002,bmaa003,bmaa004,bmaastus,bmaasite,bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,bmaacrtdt,bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt
     INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfdt
     FROM bmaa_t
    WHERE bmaaent = g_enterprise AND bmaasite = g_bmaa_m.bmaasite
      AND bmaa001 = g_bmaa_m.bmaa001 AND bmaa002 = g_bmaa_m.bmaa002

   CALL abmm200_show()

END FUNCTION]]>
  </point>
  <point name="function.abmm200_ui_detailshow" order="13" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_ui_detailshow()
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
   END IF

END FUNCTION]]>
  </point>
  <point name="function.abmm200_browser_fill" order="14" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_browser_fill()
   DEFINE l_type            STRING
   DEFINE l_sql             STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_sub_sql         STRING  #有作为元件存在的
   DEFINE l_cnt             LIKE type_t.num5
   DEFINE l_searchcol       STRING
   ##add 150609
   #DEFINE l_bmaa001   LIKE bmaa_t.bmaa001
   #DEFINE l_bmaa002   LIKE bmaa_t.bmaa002
   #DEFINE l_bmaasite  LIKE bmaa_t.bmaasite
   ##add 150609 end
   
   #搜尋用
   #IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "bmaa001,bmaa002"
   #ELSE
   #   LET l_searchcol = g_searchcol
   #END IF 
   IF cl_null(g_wc) THEN LET g_wc = " 1=1" END IF
   IF cl_null(g_wc2) THEN LET g_wc2 = " 1=1" END IF

   #LET g_sql = " SELECT UNIQUE bmaa001,bmaa002,'','',bmaasite ",
   #            "   FROM bmaa_t ",
   #            "  WHERE bmaaent = '",g_enterprise,"' ",
   #            "    AND bmaasite= '",g_site,"' ",
   #            "    AND (bmaaent,bmaasite,bmaa001,bmaa002) IN (",g_wc,")",
   #            "    AND (bmaaent,bmaasite,bmaa001,bmaa002) NOT IN ",
   #            "            (select bmbaent,bmbasite,bmba003,bmba002 from bmba_t,bmaa_t ",  #不作为元件存在
   #            "              where bmbaent=bmaaent and bmbasite=bmaasite and bmba001=bmaa001 and bmba002=bmaa002 ",
   #            "                and bmbaent = '",g_enterprise,"' ",
   #            "                and bmaasite= '",g_site,"' ",
   #            "                and (bmaaent,bmaasite,bmaa001,bmaa002) IN (",g_wc,"))"
   
   #mark 150609
   LET l_sql_rank = "SELECT DISTINCT bmaa001,bmaa002,'','',bmaasite,DENSE_RANK() OVER(ORDER BY ",l_searchcol," ",g_order,") AS RANK ",
                     " FROM bmaa_t "
   IF g_wc.getindexof('imaa',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN imaa_t ON imaaent = bmaaent AND imaa001 = bmaa001 "
   END IF
   IF g_wc.getindexof('imaal',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN imaal_t ON imaalent = bmaaent AND imaal001 = bmaa001 AND imaal002 ='"||g_dlang||"'"
   END IF
   IF g_wc2.getindexof('bmab',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmab_t ON bmabent = bmaaent AND bmabsite = bmaasite AND bmab001 = bmaa001 AND bmab002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmac',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmac_t ON bmacent = bmaaent AND bmacsite = bmaasite AND bmac001 = bmaa001 AND bmac002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmad',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmad_t ON bmadent = bmaaent AND bmadsite = bmaasite AND bmad001 = bmaa001 AND bmad002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmba',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmba_t ON bmbaent = bmaaent AND bmbasite = bmaasite AND bmba001 = bmaa001 AND bmba002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmbb',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmbb_t ON bmbbent = bmaaent AND bmbbsite = bmaasite AND bmbb001 = bmaa001 AND bmbb002 = bmaa002"
   END IF
   LET l_sql_rank = l_sql_rank CLIPPED," WHERE bmaaent = '" ||g_enterprise|| "' AND bmaasite = '" ||g_site|| "' AND ",g_wc," AND ",g_wc2
   
   #取根目录
   ##有作为元件存在的资料
   #LET l_sub_sql = "SELECT bmbaent,bmbasite,bmba003,bmba002 ",
   #                "  FROM bmba_t,bmaa_t ",
   #                  " FROM bmaa_t "
   LET l_sql_rank = l_sql_rank CLIPPED," AND NOT EXISTS ",
                    " (SELECT 1 FROM bmba_t ",
                    "   WHERE bmaaent = bmbaent AND bmaasite = bmbasite AND bmaa001 = bmba003 AND bmaa002 = bmba002 ",
                    "     AND bmaaent = '" ||g_enterprise|| "' AND bmaasite = '" ||g_site|| "' AND ",g_wc," AND ",g_wc2,  #add 150313 按照bom元件查询，有些主件查不出来，明明有的
                    "     AND EXISTS(SELECT 1 FROM bmaa_t "
   IF g_wc.getindexof('imaa',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN imaa_t ON imaaent = bmaaent AND imaa001 = bmaa001 "
   END IF
   IF g_wc.getindexof('imaal',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN imaal_t ON imaalent = bmaaent AND imaal001 = bmaa001 AND imaal002 ='"||g_dlang||"'"
   END IF
   IF g_wc2.getindexof('bmab',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmab_t ON bmabent = bmaaent AND bmabsite = bmaasite AND bmab001 = bmaa001 AND bmab002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmac',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmac_t ON bmacent = bmaaent AND bmacsite = bmaasite AND bmac001 = bmaa001 AND bmac002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmad',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmad_t ON bmadent = bmaaent AND bmadsite = bmaasite AND bmad001 = bmaa001 AND bmad002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmba',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmba_t ON bmbaent = bmaaent AND bmbasite = bmaasite AND bmba001 = bmaa001 AND bmba002 = bmaa002"
   END IF
   IF g_wc2.getindexof('bmbb',1)>0 THEN
      LET l_sql_rank = l_sql_rank CLIPPED," LEFT JOIN bmbb_t ON bmbbent = bmaaent AND bmbbsite = bmaasite AND bmbb001 = bmaa001 AND bmbb002 = bmaa002"
   END IF
   LET l_sql_rank = l_sql_rank CLIPPED," WHERE bmaaent = bmbaent AND bmaasite = bmbasite AND bmaa001 = bmba001 AND bmaa002 = bmba002 "
   LET l_sql_rank = l_sql_rank CLIPPED," AND bmaaent = '" ||g_enterprise|| "' AND bmaasite = '" ||g_site|| "' AND ",g_wc," AND ",g_wc2
   LET l_sql_rank = l_sql_rank CLIPPED," ))"
                    
   LET g_sql= "SELECT bmaa001,bmaa002,'','',bmaasite FROM (",l_sql_rank,") WHERE ",
              " RANK >= ",1," AND RANK<",1+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
   #mark 150609 end
   
   ##add 150609
   #LET g_sql = "SELECT DISTINCT bmaa001,bmaa002,bmaasite ",
   #                  " FROM bmaa_t "
   #IF g_wc.getindexof('imaa',1)>0 THEN
   #   LET g_sql = g_sql CLIPPED," LEFT JOIN imaa_t ON imaaent = bmaaent AND imaa001 = bmaa001 "
   #END IF
   #IF g_wc.getindexof('imaal',1)>0 THEN
   #   LET g_sql = g_sql CLIPPED," LEFT JOIN imaal_t ON imaalent = bmaaent AND imaal001 = bmaa001 AND imaal002 ='"||g_dlang||"'"
   #END IF
   #IF g_wc2.getindexof('bmab',1)>0 THEN
   #   LET g_sql = g_sql CLIPPED," LEFT JOIN bmab_t ON bmabent = bmaaent AND bmabsite = bmaasite AND bmab001 = bmaa001 AND bmab002 = bmaa002"
   #END IF
   #IF g_wc2.getindexof('bmac',1)>0 THEN
   #   LET g_sql = g_sql CLIPPED," LEFT JOIN bmac_t ON bmacent = bmaaent AND bmacsite = bmaasite AND bmac001 = bmaa001 AND bmac002 = bmaa002"
   #END IF
   #IF g_wc2.getindexof('bmad',1)>0 THEN
   #   LET g_sql = g_sql CLIPPED," LEFT JOIN bmad_t ON bmadent = bmaaent AND bmadsite = bmaasite AND bmad001 = bmaa001 AND bmad002 = bmaa002"
   #END IF
   #IF g_wc2.getindexof('bmba',1)>0 THEN
   #   LET g_sql = g_sql CLIPPED," LEFT JOIN bmba_t ON bmbaent = bmaaent AND bmbasite = bmaasite AND bmba001 = bmaa001 AND bmba002 = bmaa002"
   #END IF
   #IF g_wc2.getindexof('bmbb',1)>0 THEN
   #   LET g_sql = g_sql CLIPPED," LEFT JOIN bmbb_t ON bmbbent = bmaaent AND bmbbsite = bmaasite AND bmbb001 = bmaa001 AND bmbb002 = bmaa002"
   #END IF
   #LET g_sql = g_sql CLIPPED," WHERE bmaaent = '" ||g_enterprise|| "' AND bmaasite = '" ||g_site|| "' AND ",g_wc," AND ",g_wc2
   ##取根目录
   ##先直接foreach 只选择根目录的资料放入临时表
   #PREPARE browse_pre0 FROM g_sql
   #DECLARE browse_cur0 CURSOR FOR browse_pre0
   #LET g_cnt = 1
   #DELETE FROM browser_temp
   #FOREACH browse_cur0 INTO l_bmaa001,l_bmaa002,l_bmaasite
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = 'foreach browse_cur0:'
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #      EXIT FOREACH
   #   END IF
   #
   #   #检查是否为根目录
   #   IF abmm200_chk_hasF(l_bmaa001,l_bmaa002) THEN
   #      CONTINUE FOREACH
   #   END IF
   #   INSERT INTO browser_temp VALUES (l_bmaa001,l_bmaa002,l_bmaasite)
   #   IF SQLCA.sqlcode THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code = SQLCA.sqlcode
   #      LET g_errparam.extend = 'ins browser_temp'
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #      EXIT FOREACH
   #   END IF
   #   LET g_cnt = g_cnt + 1
   #   IF g_cnt > g_max_browse THEN
   #      INITIALIZE g_errparam TO NULL
   #      LET g_errparam.code =  9035
   #      LET g_errparam.extend =  ''
   #      LET g_errparam.popup = TRUE
   #      CALL cl_err()
   #      EXIT FOREACH
   #   END IF
   #   
   #END FOREACH
   #
   #LET g_sql = " SELECT bmaa001,bmaa002,'','',bmaasite FROM browser_temp ",
   #            " ORDER BY ",l_searchcol," ",g_order
   ##add 150609 end
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   LET g_cnt = 1
   LET l_type = "0"
   DISPLAY "browser_fill sql:",g_sql
   FOREACH browse_cur INTO g_browser[g_cnt].b_bmaa001,g_browser[g_cnt].b_bmaa002,g_browser[g_cnt].b_bmaa001_imaal003,g_browser[g_cnt].b_bmaa001_imaal004,g_browser[g_cnt].b_bmaasite
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach browse_cur:'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
{
      #检查在查询条件下如果有作为元件存在的，则不显示
     LET l_cnt = 0
     EXECUTE browse_pre2 USING g_browser[g_cnt].b_bmaa001,g_browser[g_cnt].b_bmaa002 INTO l_cnt
     IF l_cnt >0 THEN
        CONTINUE FOREACH
     END IF
}

      LET g_browser[g_cnt].b_pid  = l_type
      LET g_browser[g_cnt].b_id   = l_type, '.', g_cnt USING "<<<"
      LET g_browser[g_cnt].b_exp  = FALSE
      LET g_browser[g_cnt].b_hasC = abmm200_chk_hasC(g_cnt)
      CALL abmm200_desc_show(g_cnt)   #b_show外显栏位

      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF
   END FOREACH
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()

   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   LET g_browser_cnt = g_browser.getLength()

   CLOSE browse_cur
   FREE browse_pre

END FUNCTION]]>
  </point>
  <point name="function.abmm200_ui_browser_refresh" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10
   {</Local define>}

   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmaasite = g_bmaa_m.bmaasite AND g_browser[l_i].b_bmaa001 = g_bmaa_m.bmaa001 AND g_browser[l_i].b_bmaa002 = g_bmaa_m.bmaa002 THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR

   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF

   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示

END FUNCTION]]>
  </point>
  <point name="function.abmm200_desc_show" order="16" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_desc_show(pi_ac)
   {<Local define>}
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   {</Local define>}

   LET li_tmp = l_ac
   LET l_ac = pi_ac

   #add-point:browser_create段desc處理
   #LET g_browser[l_ac].b_show = g_browser[l_ac].b_bmaa001,'(',g_browser[l_ac].b_bmaa002,')'
   LET g_browser[l_ac].b_show = g_browser[l_ac].b_bmaa001

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_browser[l_ac].b_bmaa001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_browser[l_ac].b_bmaa001_imaal003 = '', g_rtn_fields[1] , ''
   LET g_browser[l_ac].b_bmaa001_imaal004 = '', g_rtn_fields[2] , ''
   #end add-point

   LET l_ac = li_tmp

END FUNCTION]]>
  </point>
  <point name="function.abmm200_browser_expand" order="17" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_browser_expand(p_id)
   {<Local define>}
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   #DEFINE l_keyvalue1    LIKE type_t.chr50
   #DEFINE l_keyvalue2    LIKE type_t.chr50
   DEFINE l_sql         LIKE type_t.chr500
   #DEFINE l_return      LIKE type_t.num5
   DEFINE l_bmba009     LIKE bmba_t.bmba009
   {</Local define>}

   #若已經展開
   IF g_browser[p_id].b_isExp = 1 THEN
      RETURN
   END IF

   #LET l_keyvalue1 = g_browser[p_id].b_bmaa001
   #LET l_keyvalue2 = g_browser[p_id].b_bmaa002

   LET l_sql = " SELECT UNIQUE bmba009,'','','','FALSE','','','',bmba003,bmba002,'','',bmbasite",
               " FROM bmba_t ",
               #" INNER JOIN bmaa_t ON bmba003 = bmaa001 AND bmbaent=bmaaent AND bmbasite=bmaasite AND bmba002=bmaa002 ",
               " WHERE bmba001 = '", g_browser[p_id].b_bmaa001,"' ",
               "   AND bmba002 = '", g_browser[p_id].b_bmaa002,"' ",
               "   AND bmbaent = '",g_enterprise,"' ",
               "   AND bmbasite = '",g_site,"' "
   IF NOT cl_null(g_wc2_bmba1) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba1 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba2) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba2 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba3) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba3 CLIPPED
   END IF
   IF NOT cl_null(g_vdate) THEN
      LET l_sql = l_sql CLIPPED," AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='", g_vdate,"')",
                                " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >  '",g_vdate,"'"," OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )"
   END IF
   #abmm210 取消参照研发中心的资料不显示出来,只有在不指定生效时间的查询状态再显示
   IF g_prog = 'abmm210' AND NOT cl_null(g_vdate) THEN
      LET l_sql = l_sql CLIPPED," AND bmba019 != '2' "
   END IF
   LET l_sql = l_sql CLIPPED," ORDER BY bmba009"

   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand

   LET l_id = p_id + 1
   CALL g_browser.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO l_bmba009,g_browser[l_id].*
      LET g_browser[l_id].b_pid      = g_browser[p_id].b_id              #pid=父節點id
      LET g_browser[l_id].b_id       = g_browser[p_id].b_id||"."||l_cnt  #id=本身節點id(採流水號遞增)
      LET g_browser[l_id].b_hasC     = abmm200_chk_hasC(l_id)            #hasC=確認該節點是否有子孫
      CALL abmm200_desc_show(l_id)
      LET l_id = l_id + 1
      CALL g_browser.insertElement(l_id)  #当中增加
      LET l_cnt = l_cnt + 1

      #LET l_return = TRUE
   END FOREACH

   #刪除空資料
   CALL g_browser.deleteElement(l_id)

   CLOSE tree_ex_cur
   FREE tree_expand

END FUNCTION]]>
  </point>
  <point name="function.abmm200_chk_hasC" order="18" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_chk_hasC(pi_id)
   {<Local define>}
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   {</Local define>}
   DEFINE l_sql STRING

   LET li_cnt = 0

   LET l_sql = " SELECT COUNT(*)",
               " FROM bmba_t ",
               " WHERE bmba001 = '",g_browser[pi_id].b_bmaa001,"' ",
               "   AND bmba002 = '",g_browser[pi_id].b_bmaa002,"' ",
               "   AND bmbaent = '",g_enterprise,"' ",
               "   AND bmbasite = '",g_site,"' "
   IF NOT cl_null(g_wc2_bmba1) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba1 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba2) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba2 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba3) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba3 CLIPPED
   END IF
   IF NOT cl_null(g_vdate) THEN
      LET l_sql = l_sql CLIPPED," AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='", g_vdate,"')",
                                " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >  '",g_vdate,"'"," OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )"
   END IF
   #abmm210 取消参照研发中心的资料不显示出来,只有在不指定生效时间的查询状态再显示
   IF g_prog = 'abmm210' AND NOT cl_null(g_vdate) THEN
      LET l_sql = l_sql CLIPPED," AND bmba019 != '2' "
   END IF
   PREPARE abmm200_chk_hasC_p FROM l_sql
   EXECUTE abmm200_chk_hasC_p INTO li_cnt

   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF

END FUNCTION]]>
  </point>
  <point name="function.abmm200_construct" order="19" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_construct()
   {<Local define>}
   DEFINE lc_qbe_sn    LIKE type_t.num10
   DEFINE ls_return    STRING
   DEFINE ls_result    STRING
   {</Local define>}
   DEFINE l_sql_bmaa   STRING
   DEFINE l_sql_bmab   STRING
   DEFINE l_sql_bmac   STRING
   DEFINE l_sql_bmad   STRING
  #DEFINE l_sql_bmba1  STRING
  #DEFINE l_sql_bmba2  STRING
   DEFINE l_sql_bmba12 STRING
   DEFINE l_sql_bmba3  STRING
   DEFINE l_length     LIKE type_t.num20  #wc总长度
   DEFINE l_place      LIKE type_t.num20  #wc中vdate所在位置
   DEFINE l_str1       STRING                #l_place位置前的字符串
   DEFINE l_str2       STRING                #l_place位置后的字符串
   DEFINE l_place1     LIKE type_t.num20  #l_place位置前的字符串中最后一个and所在位置
   DEFINE l_place2     LIKE type_t.num20  #l_place位置后的字符串中第一个and所在位置
   DEFINE l_length1    LIKE type_t.num20  #l_place位置前的字符串总长度
   DEFINE l_length2    LIKE type_t.num20  #l_place位置后的字符串总长度
   DEFINE l_post       LIKE type_t.num5   #add 150608 检查qbe中是否有bmba005的条件，需要手工转换一下

   #清除畫面
   CLEAR FORM
   INITIALIZE g_bmaa_m.* TO NULL
   CALL g_browser.clear()
   CALL g_bmab_d.clear()
   CALL g_bmac_d.clear()
   CALL g_bmad_d.clear()
   CALL g_bmba_d1.clear()
   CALL g_bmba_d2.clear()
   CALL g_bmba_d3.clear()
   CALL g_bmbb_d.clear()

   LET g_rec_b_bmab = 0
   LET g_rec_b_bmac = 0
   LET g_rec_b_bmad = 0
   LET g_rec_b_bmba1= 0
   LET g_rec_b_bmba2= 0
   LET g_rec_b_bmba3= 0
   LET g_rec_b_bmbb = 0

   LET g_current_idx = 1
   LET g_action_choice = ""

   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   #INITIALIZE g_wc_vdate TO NULL
   #INITIALIZE g_wc2_bmaa TO NULL
   INITIALIZE g_wc2_bmab TO NULL
   INITIALIZE g_wc2_bmac TO NULL
   INITIALIZE g_wc2_bmad TO NULL
   INITIALIZE g_wc2_bmba1 TO NULL
   INITIALIZE g_wc2_bmba2 TO NULL
   INITIALIZE g_wc2_bmba3 TO NULL
   INITIALIZE g_wc2_bmbb TO NULL

   LET g_sql       = ''
   LET l_sql_bmab  = ''
   LET l_sql_bmac  = ''
   LET l_sql_bmad  = ''
  #LET l_sql_bmba1 = ''
  #LET l_sql_bmba2 = ''
   LET l_sql_bmba12= ''
   LET l_sql_bmba3 = ''
   
   #LET g_vdate = g_today
   LET g_vdate = cl_get_current()
   LET g_vdate_t = g_vdate

   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      #單頭
     #CONSTRUCT BY NAME g_wc2_bmaa ON bmaa001,bmaa002,bmaa003,bmaa004,bmaastus,
     #                               bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,bmaacrtdt,
     #                               bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt
      CONSTRUCT BY NAME g_wc ON bmaa001,bmaa002,bmaa001_imaal003,bmaa001_imaal004,
                                     bmaa001_imaa009,bmaa001_imaa004,bmaa001_imaa010,bmaa001_imaa011,
                                     bmaa003,bmaa004,bmaastus,
                                     bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,bmaacrtdt,
                                     bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            DISPLAY g_vdate TO FORMONLY.vdate

         AFTER FIELD bmaacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         AFTER FIELD bmaamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         AFTER FIELD bmaacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         ON ACTION controlp INFIELD bmaa001
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaa001  #顯示到畫面上
            NEXT FIELD bmaa001                     #返回原欄位

         ON ACTION controlp INFIELD bmaa001_imaa009  #产品分类
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa009()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaa001_imaa009  #顯示到畫面上
            NEXT FIELD bmaa001_imaa009                     #返回原欄位

         ON ACTION controlp INFIELD bmaa001_imaa010  #生命周期
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "210" #應用分類
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaa001_imaa010  #顯示到畫面上
            NEXT FIELD bmaa001_imaa010                     #返回原欄位

         ON ACTION controlp INFIELD bmaa004
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_2()                      #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaa004  #顯示到畫面上
            NEXT FIELD bmaa004                     #返回原欄位
            
         ON ACTION controlp INFIELD bmaaownid
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaaownid  #顯示到畫面上
            NEXT FIELD bmaaownid                     #返回原欄位

         ON ACTION controlp INFIELD bmaaowndp
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaaowndp  #顯示到畫面上
            NEXT FIELD bmaaowndp                     #返回原欄位

         ON ACTION controlp INFIELD bmaacrtid
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaacrtid  #顯示到畫面上
            NEXT FIELD bmaacrtid                     #返回原欄位

         ON ACTION controlp INFIELD bmaacrtdp
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaacrtdp  #顯示到畫面上
            NEXT FIELD bmaacrtdp                     #返回原欄位

         ON ACTION controlp INFIELD bmaamodid
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaamodid  #顯示到畫面上
            NEXT FIELD bmaamodid                     #返回原欄位

         ON ACTION controlp INFIELD bmaacnfid
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmaacnfid  #顯示到畫面上
            NEXT FIELD bmaacnfid                     #返回原欄位

      END CONSTRUCT
      
      CONSTRUCT BY NAME g_wc2_bmaa ON vdate
         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            DISPLAY g_vdate TO FORMONLY.vdate
            
         AFTER FIELD vdate
            LET g_vdate = GET_FLDBUF(vdate)
            LET g_vdate = cl_replace_str(g_vdate,'/', '-')

      END CONSTRUCT
      
      CONSTRUCT g_wc2_bmab ON bmab003,bmab004,bmab005,bmab006
           FROM s_bmab[1].bmab003,s_bmab[1].bmab004,s_bmab[1].bmab005,s_bmab[1].bmab006

         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)

         ON ACTION controlp INFIELD bmab003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " imaesite ='",g_site,"' "
            CALL q_imaa001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmab003  #顯示到畫面上
            NEXT FIELD bmab003                     #返回原欄位

      END CONSTRUCT

      CONSTRUCT g_wc2_bmac ON bmac003,bmac005,bmac006,bmac004,bmac007,bmac008
           FROM s_bmac[1].bmac003,s_bmac[1].bmac005,s_bmac[1].bmac006,s_bmac[1].bmac004,
                s_bmac[1].bmac007,s_bmac[1].bmac008

         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)

         ON ACTION controlp INFIELD bmac003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " imaesite ='",g_site,"' "
            CALL q_imaa001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmac003  #顯示到畫面上
            NEXT FIELD bmac003                     #返回原欄位
            
         ON ACTION controlp INFIELD bmac004
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmac004  #顯示到畫面上
            NEXT FIELD bmac004                     #返回原欄位

      END CONSTRUCT

      CONSTRUCT g_wc2_bmad ON bmad003,bmad004,bmad005,bmad006,bmad007
           FROM s_bmad[1].bmad003,s_bmad[1].bmad004,s_bmad[1].bmad005,s_bmad[1].bmad006,s_bmad[1].bmad007

         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)

         ON ACTION controlp INFIELD bmad003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.where = " imaesite ='",g_site,"' "
            CALL q_imaa001_7()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmad003  #顯示到畫面上
            NEXT FIELD bmad003                     #返回原欄位

         ON ACTION controlp INFIELD bmad005
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmad005  #顯示到畫面上
            NEXT FIELD bmad005                     #返回原欄位

      END CONSTRUCT
      
      #單身根據table1分拆construct
      CONSTRUCT g_wc2_bmba1 ON bmba009,bmba003,bmba004,bmba007,bmba008,bmba011,bmba012,bmba010,bmba005,bmba006,
                              bmba027,bmba028,bmba013,bmba014,bmba020,bmba017,bmba025,bmba018,bmba026,bmba019
           FROM s_detail1[1].bmba009,s_detail1[1].bmba003,s_detail1[1].bmba004,s_detail1[1].bmba007,
                s_detail1[1].bmba008,s_detail1[1].bmba011,s_detail1[1].bmba012,s_detail1[1].bmba010,
                s_detail1[1].bmba005,s_detail1[1].bmba006,s_detail1[1].bmba027,s_detail1[1].bmba028,
                s_detail1[1].bmba013,s_detail1[1].bmba014,s_detail1[1].bmba020,s_detail1[1].bmba017,
                s_detail1[1].bmba025,s_detail1[1].bmba018,s_detail1[1].bmba026,s_detail1[1].bmba019

         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)
            
         #add 150608
         AFTER FIELD bmba005
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result 
            IF NOT cl_null(ls_result) THEN 
               IF NOT cl_chk_date_symbol(ls_result) THEN 
                  LET ls_result = cl_add_date_extra_cond(ls_result) 
               END IF 
            END IF 
            CALL FGL_DIALOG_SETBUFFER(ls_result)
            
            #LET ls_result = GET_FLDBUF(bmba005)
            #CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            #CALL abmm200_get_bmba005_str(ls_result) RETURNING ls_result
            #DISPLAY ls_result TO bmba005
            
         AFTER FIELD bmba006
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result 
            IF NOT cl_null(ls_result) THEN 
               IF NOT cl_chk_date_symbol(ls_result) THEN 
                  LET ls_result = cl_add_date_extra_cond(ls_result) 
               END IF 
            END IF 
            CALL FGL_DIALOG_SETBUFFER(ls_result)
            
            #LET ls_result = GET_FLDBUF(bmba006)
            #CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            #CALL abmm200_get_bmba005_str(ls_result) RETURNING ls_result
            #DISPLAY ls_result TO bmba006
         #add 150608 end
         
         ON ACTION controlp INFIELD bmba003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba003  #顯示到畫面上
            NEXT FIELD bmba003                     #返回原欄位

         ON ACTION controlp INFIELD bmba004
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215" #應用分類
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba004  #顯示到畫面上
            NEXT FIELD bmba004                     #返回原欄位


         ON ACTION controlp INFIELD bmba007
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221" #應用分類
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba007  #顯示到畫面上
            NEXT FIELD bmba007                     #返回原欄位

         ON ACTION controlp INFIELD bmba010
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba010  #顯示到畫面上
            NEXT FIELD bmba010                     #返回原欄位

         ON ACTION controlp INFIELD bmba017
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = '1112'
            CALL q_oocq002_5()                             #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba017  #顯示到畫面上
            NEXT FIELD bmba017                     #返回原欄位
      END CONSTRUCT

      #單身根據table2分拆construct
      CONSTRUCT g_wc2_bmba2 ON bmba009,bmba003,bmba004,bmba007,bmba008,
                               bmba011,bmba012,bmba010,bmba005,bmba006,
                               bmba021,bmba022,bmba023,bmba024,bmba030,bmba031,bmba015,bmba016,bmba032
           FROM s_detail2[1].bmba009_2,s_detail2[1].bmba003_2,s_detail2[1].bmba004_2,s_detail2[1].bmba007_2,
                s_detail2[1].bmba008_2,s_detail2[1].bmba011_2,s_detail2[1].bmba012_2,s_detail2[1].bmba010_2,
                s_detail2[1].bmba005_2,s_detail2[1].bmba006_2,s_detail2[1].bmba021,s_detail2[1].bmba022,
                s_detail2[1].bmba023,s_detail2[1].bmba024,s_detail2[1].bmba030,s_detail2[1].bmba031,
                s_detail2[1].bmba015,s_detail2[1].bmba016,s_detail2[1].bmba032

         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)

         #add 150608
         AFTER FIELD bmba005
            #LET ls_result = GET_FLDBUF(bmba005)
            #CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            #CALL abmm200_get_bmba005_str(ls_result) RETURNING ls_result
            #DISPLAY ls_result TO bmba005
            
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result 
            IF NOT cl_null(ls_result) THEN 
               IF NOT cl_chk_date_symbol(ls_result) THEN 
                  LET ls_result = cl_add_date_extra_cond(ls_result) 
               END IF 
            END IF 
            CALL FGL_DIALOG_SETBUFFER(ls_result)
            
         AFTER FIELD bmba006
            #LET l_bmba006 = GET_FLDBUF(bmba006)
            #CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            #CALL abmm200_get_bmba005_str(ls_result) RETURNING ls_result
            #DISPLAY ls_result TO bmba006
            
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result 
            IF NOT cl_null(ls_result) THEN 
               IF NOT cl_chk_date_symbol(ls_result) THEN 
                  LET ls_result = cl_add_date_extra_cond(ls_result) 
               END IF 
            END IF 
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         #add 150608 end
         
         ON ACTION controlp INFIELD bmba003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba003  #顯示到畫面上
            NEXT FIELD bmba003                     #返回原欄位

         ON ACTION controlp INFIELD bmba004
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215" #應用分類
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba004  #顯示到畫面上
            NEXT FIELD bmba004                     #返回原欄位

         ON ACTION controlp INFIELD bmba007
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221" #應用分類
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba007  #顯示到畫面上
            NEXT FIELD bmba007                     #返回原欄位

         ON ACTION controlp INFIELD bmba010
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba010  #顯示到畫面上
            NEXT FIELD bmba010                     #返回原欄位

         ON ACTION controlp INFIELD bmba015
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CASE g_prog
               WHEN 'abmm200'
                    CALL q_inaa001_5()   
               WHEN 'abmm210'
                    CALL q_inaa001_2()   
            END CASE                        #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba015  #顯示到畫面上
            NEXT FIELD bmba015                     #返回原欄位

         ON ACTION controlp INFIELD bmba016
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CASE g_prog
               WHEN 'abmm200'
                    CALL q_inab002_2()    
               WHEN 'abmm210'
                    CALL q_inab002_1()    
            END CASE                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba016  #顯示到畫面上
            NEXT FIELD bmba016                     #返回原欄位

         ON ACTION controlp INFIELD bmba024
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmea008_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba024  #顯示到畫面上
            NEXT FIELD bmba024                     #返回原欄位
      END CONSTRUCT
      
      #單身根據table3分拆construct
      CONSTRUCT g_wc2_bmba3 ON bmba009,bmba003,bmba004,bmba007,bmba008,
                               bmba011,bmba012,bmba010,bmba005,bmba006,
                               bmba029
           FROM s_detail3[1].bmba009_3,s_detail3[1].bmba003_3,s_detail3[1].bmba004_3,s_detail3[1].bmba007_3,
                s_detail3[1].bmba008_3,s_detail3[1].bmba011_3,s_detail3[1].bmba012_3,s_detail3[1].bmba010_3,
                s_detail3[1].bmba005_3,s_detail3[1].bmba006_3,s_detail3[1].bmba029

         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)

         #add 150608
         AFTER FIELD bmba005
            #LET ls_result = GET_FLDBUF(bmba005)
            #CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            #CALL abmm200_get_bmba005_str(ls_result) RETURNING ls_result
            #DISPLAY ls_result TO bmba005
            
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result 
            IF NOT cl_null(ls_result) THEN 
               IF NOT cl_chk_date_symbol(ls_result) THEN 
                  LET ls_result = cl_add_date_extra_cond(ls_result) 
               END IF 
            END IF 
            CALL FGL_DIALOG_SETBUFFER(ls_result)
            
         AFTER FIELD bmba006
            #LET l_bmba006 = GET_FLDBUF(bmba006)
            #CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            #CALL abmm200_get_bmba005_str(ls_result) RETURNING ls_result
            #DISPLAY ls_result TO bmba006
            
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result 
            IF NOT cl_null(ls_result) THEN 
               IF NOT cl_chk_date_symbol(ls_result) THEN 
                  LET ls_result = cl_add_date_extra_cond(ls_result) 
               END IF 
            END IF 
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         #add 150608 end
         
         ON ACTION controlp INFIELD bmba003
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001_5()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba003  #顯示到畫面上
            NEXT FIELD bmba003                     #返回原欄位

         ON ACTION controlp INFIELD bmba004
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215" #應用分類
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba004  #顯示到畫面上
            NEXT FIELD bmba004                     #返回原欄位

         ON ACTION controlp INFIELD bmba007
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221" #應用分類
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba007  #顯示到畫面上
            NEXT FIELD bmba007                     #返回原欄位

         ON ACTION controlp INFIELD bmba010
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmba010  #顯示到畫面上
            NEXT FIELD bmba010                     #返回原欄位

      END CONSTRUCT

      #單身根據bmbb分拆construct
      CONSTRUCT g_wc2_bmbb ON bmbb009,bmbb010,bmbb011,bmbb012
           FROM s_bmbb[1].bmbb009,s_bmbb[1].bmbb010,s_bmbb[1].bmbb011,s_bmbb[1].bmbb012

         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)

      END CONSTRUCT

      BEFORE DIALOG
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point

      ON ACTION qbe_select     #條件查詢
         #CALL cl_qbe_list() RETURNING lc_qbe_sn
         #CALL cl_qbe_display_condition(lc_qbe_sn,g_user)

      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   IF INT_FLAG THEN
      RETURN
   END IF

   #add 150608 环境不支持key值的日期时间形态自动转换，程序里边再转换
   #ex:bmba005>='150101'-->bmba005>=TO_DATE('2015-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS') 
   IF g_wc2_bmba1.getIndexOf("bmba005",1) THEN
      CALL abmm200_get_bmba005_str2(g_wc2_bmba1) RETURNING g_wc2_bmba1
   END IF
   #add 150608 end
   
   #画面栏位转换成数据库表栏位
   LET g_wc = cl_replace_str(g_wc,'bmaa001_imaal003', 'imaal003')
   LET g_wc = cl_replace_str(g_wc,'bmaa001_imaal004', 'imaal004')
   LET g_wc = cl_replace_str(g_wc,'bmaa001_imaa009', 'imaa009')
   LET g_wc = cl_replace_str(g_wc,'bmaa001_imaa004', 'imaa004')
   LET g_wc = cl_replace_str(g_wc,'bmaa001_imaa010', 'imaa010')
   LET g_wc = cl_replace_str(g_wc,'bmaa001_imaa011', 'imaa011')

   #增加vdate条件  这个增加了如bb没资料的就始终抓不出来了，所以注释掉
   #IF NOT cl_null(g_vdate) THEN
   #   LET g_wc2_bmba1 = g_wc2_bmba1 CLIPPED,
   #                      " AND (bmba005 <='", g_vdate,"')",
   #                      " AND (bmba006 >  '",g_vdate,"'"," OR bmba006 IS NULL )"
   #   LET g_wc2_bmba2 = g_wc2_bmba2 CLIPPED,
   #                      " AND (bmba005 <='", g_vdate,"')",
   #                      " AND (bmba006 >  '",g_vdate,"'"," OR bmba006 IS NULL )"
   #   LET g_wc2_bmba3 = g_wc2_bmba3 CLIPPED,
   #                      " AND (bmba005 <='", g_vdate,"')",
   #                      " AND (bmba006 >  '",g_vdate,"'"," OR bmba006 IS NULL )"
   #END IF
   
   #zll bmba005 bmba006 (to_char,'yyyy-mm-dd hh24:mi:ss')处理 或者 改成日期型处理
   
   #组合g_wc2
   LET g_wc2 = g_wc2_bmab
   IF g_wc2_bmac <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_bmac
   END IF
   IF g_wc2_bmad <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_bmad
   END IF

   IF g_wc2_bmba1 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_bmba1
   END IF
   IF g_wc2_bmba2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_bmba2
   END IF
   IF g_wc2_bmba3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_bmba3
   END IF
   
   IF g_wc2_bmbb <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_bmbb
   END IF
   
   IF cl_null(g_wc) THEN LET g_wc = " 1=1" END IF
   IF cl_null(g_wc2) THEN LET g_wc2 = " 1=1" END IF

END FUNCTION]]>
  </point>
  <point name="function.abmm200_query" order="20" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_query()
   DEFINE ls_wc STRING
   DEFINE ls_wc2 STRING
   
   LET ls_wc = g_wc
   LET ls_wc2= g_wc2
   
   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_idx = 0
   LET g_current_row = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""

   #清除畫面及相關資料
   CLEAR FORM
   INITIALIZE g_bmaa_m.* TO NULL
   CALL g_browser.clear()
   CALL g_bmab_d.clear()
   CALL g_bmac_d.clear()
   CALL g_bmad_d.clear()
   CALL g_bmba_d1.clear()
   CALL g_bmba_d2.clear()
   CALL g_bmba_d3.clear()
   CALL g_bmbb_d.clear()

   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count

   CALL abmm200_construct()

   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #INITIALIZE g_bmaa_m.* TO NULL
      #CALL g_browser.clear()
      #CALL g_bmab_d.clear()
      #CALL g_bmac_d.clear()
      #CALL g_bmad_d.clear()
      #CALL g_bmba_d1.clear()
      #CALL g_bmba_d2.clear()
      #CALL g_bmba_d3.clear()
      #CALL g_bmbb_d.clear()
      #LET g_rec_b_bmab = 0
      #LET g_rec_b_bmac = 0
      #LET g_rec_b_bmad = 0
      #LET g_rec_b_bmba1= 0
      #LET g_rec_b_bmba2= 0
      #LET g_rec_b_bmba3= 0
      #LET g_rec_b_bmbb = 0
      #CLEAR FORM
      #LET g_wc = " SELECT bmaaent,bmaasite,bmaa001,bmaa002 FROM bmaa_t "
      LET g_wc = ls_wc
      LET g_wc2= ls_wc2
      CALL abmm200_browser_fill()
      CALL abmm200_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   LET g_searchtype = "3"
   LET g_searchcol = "0"
   CALL abmm200_browser_fill()

   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "-100"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

   ELSE
      CALL abmm200_fetch("F")
   END IF

END FUNCTION]]>
  </point>
  <point name="function.abmm200_fetch" order="21" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   {</Local define>}
   
   DISPLAY g_current_idx TO FORMONLY.h_count

   IF g_browser_cnt = 0 THEN
      RETURN
   END IF

   #此程式無root欄位:LET ls_chk = g_browser[g_current_idx].b_id
   #此程式無root欄位:IF ls_chk.getIndexOf('.',1) = 0 THEN
   #此程式無root欄位:   INITIALIZE g_bmaa_m.* TO NULL
   #此程式無root欄位:   INITIALIZE g_bmba_d TO NULL
   #此程式無root欄位:   CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   #此程式無root欄位:   DISPLAY '' TO FORMONLY.b_index
   #此程式無root欄位:   DISPLAY '' TO FORMONLY.h_index
   #此程式無root欄位:   RETURN
   #此程式無root欄位:END IF

   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt
      WHEN 'P'
         IF g_current_idx > 1 THEN
            LET g_current_idx = g_current_idx - 1
         END IF
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF
      WHEN '/'
         IF (NOT g_no_ask) THEN
            CALL cl_set_act_visible("accept,cancel", TRUE)
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0

            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT

            CALL cl_set_act_visible("accept,cancel", FALSE)
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE
            END IF
         END IF

         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF

         LET g_no_ask = FALSE
   END CASE

   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   LET g_detail_cnt = g_header_cnt

   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx
   END IF

   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數

   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )

   #代表沒有資料
   IF g_current_idx = 0 THEN
      RETURN
   END IF

   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF

   LET g_bmaa_m.bmaasite = g_browser[g_current_idx].b_bmaasite
   LET g_bmaa_m.bmaa001 = g_browser[g_current_idx].b_bmaa001
   LET g_bmaa_m.bmaa002 = g_browser[g_current_idx].b_bmaa002

   #重讀DB,因TEMP有不被更新特性
   SELECT UNIQUE bmaa001,bmaa002,bmaa003,bmaa004,bmaastus,
          bmaasite,bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,bmaacrtdt,bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt
     INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaastus,
          g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfdt
     FROM bmaa_t
    WHERE bmaaent = g_enterprise AND bmaasite = g_bmaa_m.bmaasite
      AND bmaa001 = g_bmaa_m.bmaa001 AND bmaa002 = g_bmaa_m.bmaa002
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "bmaa_t"
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLEAR FORM                    #清畫面欄位內容
      CALL g_bmab_d.clear()
      CALL g_bmac_d.clear()
      CALL g_bmad_d.clear()
      CALL g_bmba_d1.clear()    #清除陣列
      CALL g_bmba_d2.clear()    #清除陣列
      CALL g_bmba_d3.clear()    #清除陣列
      CALL g_bmbb_d.clear()

      INITIALIZE g_bmaa_m.* LIKE bmaa_t.*             #DEFAULT 設定
      LET g_bmaasite_t = NULL
      LET g_bmaa001_t = NULL
      LET g_bmaa002_t = NULL
      RETURN
   END IF

   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF

   #重新顯示
   CALL abmm200_show()

END FUNCTION]]>
  </point>
  <point name="function.abmm200_insert" order="22" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_insert()
   IF g_prog='abmm210' THEN
      #本作业不可执行此功能,请与bom研发单位联系（abmm200作业可执行）！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00074'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF

   CLEAR FORM                    #清畫面欄位內容
   CALL g_bmab_d.clear()
   CALL g_bmac_d.clear()
   CALL g_bmad_d.clear()
   CALL g_bmba_d1.clear()    #清除陣列
   CALL g_bmba_d2.clear()    #清除陣列
   CALL g_bmba_d3.clear()    #清除陣列
   CALL g_bmbb_d.clear()


   INITIALIZE g_bmaa_m.* LIKE bmaa_t.*             #DEFAULT 設定
   INITIALIZE g_bmaa_m_t.* LIKE bmaa_t.*             #DEFAULT 設定
   LET g_bmaasite_t = NULL
   LET g_bmaa001_t = NULL
   LET g_bmaa002_t = NULL
   
   LET g_vdate = ''

   CALL s_transaction_begin()

   WHILE TRUE
      LET g_bmaa_m.bmaasite  = g_site
      LET g_bmaa_m.bmaastus  = 'N'
      LET g_bmaa_m.bmaaownid = g_user
      LET g_bmaa_m.bmaaowndp = g_dept
      LET g_bmaa_m.bmaacrtid = g_user
      LET g_bmaa_m.bmaacrtdp = g_dept
      LET g_bmaa_m.bmaacrtdt = cl_get_current()
      #LET g_bmaa_m.bmaamodid = g_user
      ##LET g_bmaa_m.bmaamoddt = cl_get_current()

      CALL abmm200_input("a","all")
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmaa_m.* = g_bmaa_m_t.*
         CALL abmm200_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      END IF

      CALL g_bmab_d.clear()
      CALL g_bmac_d.clear()
      CALL g_bmad_d.clear()
      CALL g_bmba_d1.clear()
      CALL g_bmba_d2.clear()
      CALL g_bmba_d3.clear()
      CALL g_bmbb_d.clear()


      LET g_rec_b = 0
      LET g_rec_b_bmab = 0
      LET g_rec_b_bmac = 0
      LET g_rec_b_bmad = 0
      LET g_rec_b_bmba1 = 0
      LET g_rec_b_bmba2 = 0
      LET g_rec_b_bmba3 = 0
      LET g_rec_b_bmbb = 0
      EXIT WHILE

   END WHILE

   LET g_state = "insert"
   LET g_bmaa001_t = g_bmaa_m.bmaa001
   LET g_bmaa002_t = g_bmaa_m.bmaa002
   #LET g_wc = g_wc," UNION ",
   #          " SELECT bmaaent,bmaasite,bmaa001,bmaa002  FROM bmaa_t ",
   #          "  WHERE bmaaent = '",g_enterprise,"' ",
   #          "    AND bmaasite= '",g_site,"' ",
   #          "    AND bmaa001 = '",g_bmaa_m.bmaa001 CLIPPED,"' ",
   #          "    AND bmaa002 = '",g_bmaa_m.bmaa002, "' "
   #mod 150316
   #LET g_wc = g_wc CLIPPED,
   #           " OR (bmaasite= '",g_site,"' AND bmaa001 = '",g_bmaa_m.bmaa001 CLIPPED, "' AND bmaa002 = '",g_bmaa_m.bmaa002, "') "
   LET g_wc = "(",g_wc CLIPPED,
              " OR (bmaaent = ",g_enterprise," AND bmaasite= '",g_site,"' AND bmaa001 = '",g_bmaa_m.bmaa001 CLIPPED, "' AND bmaa002 = '",g_bmaa_m.bmaa002, "') ",
              ")"
   #mod 150316 end

   LET g_vdate = cl_get_current()
   LET g_vdate_t = g_vdate


END FUNCTION]]>
  </point>
  <point name="function.abmm200_modify" order="23" ver="8" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_modify()
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   {</Local define>}

   IF g_bmaa_m.bmaasite IS NULL OR g_bmaa_m.bmaa001 IS NULL OR g_bmaa_m.bmaa002 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF


   SELECT UNIQUE bmaa001,bmaa002,bmaa003,bmaa004,bmaastus,
          bmaasite,bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,bmaacrtdt,bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt
    INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaastus,
         g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfdt
    FROM bmaa_t
   WHERE bmaaent = g_enterprise AND bmaasite = g_bmaa_m.bmaasite
     AND bmaa001 = g_bmaa_m.bmaa001 AND bmaa002 = g_bmaa_m.bmaa002

   IF g_prog='abmm210' THEN
      #不可直接修改BOM,若需修改生管或损耗资料可选择菜单栏上对应按钮，若需修改其他资料，需做ECN变更！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00077'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   ELSE
      #確認後能不能直接修改BOM要看aimi012的設定：有維護各個生命週期要不要做ECN
      CALL abmm200_modify_chk_allow() RETURNING l_success
      IF NOT l_success THEN
         RETURN
      END IF
   END IF
   
   ERROR ""

   LET g_bmaasite_t = g_bmaa_m.bmaasite
   LET g_bmaa001_t = g_bmaa_m.bmaa001
   LET g_bmaa002_t = g_bmaa_m.bmaa002

   CALL s_transaction_begin()

   OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN abmm200_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abmm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   #鎖住將被更改或取消的資料
   FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bmaa_m.bmaasite
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abmm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL abmm200_show()
   WHILE TRUE
      LET g_bmaasite_t = g_bmaa_m.bmaasite
      LET g_bmaa001_t = g_bmaa_m.bmaa001
      LET g_bmaa002_t = g_bmaa_m.bmaa002
      LET g_bmaa_m_t.* = g_bmaa_m.*

      #寫入修改者/修改日期資訊
      LET g_bmaa_m.bmaamodid = g_user
      LET g_bmaa_m.bmaamoddt = cl_get_current()

      CALL abmm200_input("u","all")     #欄位更改
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmaa_m.* = g_bmaa_m_t.*
         CALL abmm200_show()
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 9001
         LET g_errparam.extend = ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT WHILE
      END IF



      EXIT WHILE
   END WHILE

   #修改歷程記錄
   IF NOT cl_log_modified_record(g_bmaa_m.bmaasite,g_bmaa_m.bmaasite) THEN
      CALL s_transaction_end('N','0')
   END IF

   CLOSE abmm200_cl
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-U
   CALL cl_flow_notify(g_bmaa_m.bmaasite,'U')
   IF g_vdate_t = g_vdate THEN
      LET g_vdate = cl_get_current()
      LET g_vdate_t = g_vdate
   END IF

   LET g_state = "modify"
   LET g_bmaa001_t = g_bmaa_m.bmaa001
   LET g_bmaa002_t = g_bmaa_m.bmaa002
END FUNCTION]]>
  </point>
  <point name="function.abmm200_input" order="24" ver="12" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_input(p_cmd,p_type)
   {<Local define>}
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  p_type          LIKE type_t.chr10       #控制各页签的输入
   DEFINE  l_cmd           LIKE type_t.chr1              #未取消的ARRAY CNT
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   DEFINE l_cnt1           LIKE type_t.num5
   DEFINE l_cnt2           LIKE type_t.num5
   DEFINE l_bmbb009        LIKE bmbb_t.bmbb009
   DEFINE l_bmba028        LIKE bmba_t.bmba028
   DEFINE l_ooffcrtdt      DATETIME YEAR TO SECOND
   DEFINE l_bmba004        LIKE bmba_t.bmba004
   DEFINE l_bmba007        LIKE bmba_t.bmba007
   DEFINE l_bmba008        LIKE bmba_t.bmba008
   DEFINE l_msg            STRING
   DEFINE l_imaa009        LIKE imaa_t.imaa009  #产品分类
   DEFINE l_bmba011        LIKE bmba_t.bmba011  #组成用量
   DEFINE l_ln             LIKE type_t.num5     #间隔项次
   DEFINE l_imaa011        LIKE imaa_t.imaa011  #产出类型
   DEFINE l_imaa012        LIKE imaa_t.imaa012  #允许副产品产出
   DEFINE l_today          LIKE bmab_t.bmab005
   DEFINE l_while          LIKE type_t.num5     #while控制
   DEFINE l_imaa005_1      LIKE imaa_t.imaa005
   DEFINE l_imaa005_2      LIKE imaa_t.imaa005
   DEFINE l_imaa004        LIKE imaa_t.imaa004  #料件类别
   DEFINE l_imaa004_2      LIKE imaa_t.imaa004  #料件类别
   DEFINE l_bmab004        LIKE bmab_t.bmab004
   DEFINE l_imaa037        LIKE imaa_t.imaa037  #
   DEFINE l_equal          LIKE type_t.num5     #TRUE/FALSE：一致/不一致.组成用量是否与插件数量一致，ima037为N是作一致处理
   
   DISPLAY BY NAME g_bmaa_m.bmaastus,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaowndp,
                   g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdt,
                   g_bmaa_m.bmaamodid,g_bmaa_m.bmaamoddt
      
   CALL cl_set_head_visible("","YES")

   LET l_insert = FALSE
   LET g_action_choice = ""

   LET g_forupd_sql = "SELECT * ",
                      "  FROM bmab_t ",
                      " WHERE bmabent=? AND bmabsite=? ",
                      "   AND bmab001=? AND bmab002=? AND bmab003=? ",
                      "   FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm200_bmab_bcl CURSOR FROM g_forupd_sql
   

   LET g_forupd_sql = "SELECT * ",
                      "  FROM bmac_t ",
                      " WHERE bmacent=? AND bmacsite=? ",
                      "   AND bmac001=? AND bmac002=? AND bmac003=? ",
                      "   FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm200_bmac_bcl CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT * ",
                      "  FROM bmad_t ",
                      " WHERE bmadent=? AND bmadsite=? ",
                      "   AND bmad001=? AND bmad002=? AND bmad003=? ",
                      "   FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm200_bmad_bcl CURSOR FROM g_forupd_sql

   #LET g_forupd_sql = "SELECT * ",
   LET g_forupd_sql = "SELECT bmbaent,bmbasite,bmba001,bmba002,bmba003, ",
                      "       bmba004,bmba005,bmba006,bmba007,bmba008, ",
                      "       bmba009,bmba010,bmba011,bmba012,bmba013, ",
                      "       bmba014,bmba015,bmba016,bmba017,bmba018, ",
                      "       bmba019,bmba020,bmba021,bmba022,bmba023, ",
                      "       bmba024,bmba025,bmba026,bmba027,bmba028, ",
                      "       bmba029,bmba030,bmba031,bmba032 ",
                      " FROM bmba_t ",
                      " WHERE bmbaent=? AND bmbasite=? ",
                      "   AND bmba001=? AND bmba002=? AND bmba003=? AND bmba004=? ",
                      #"   AND bmba005=? AND bmba007=? AND bmba008=? ",
                      "   AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss')=? AND bmba007=? AND bmba008=? ",
                      "   FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm200_bmba_bcl CURSOR FROM g_forupd_sql

   #LET g_forupd_sql = "SELECT * ",
   LET g_forupd_sql = "SELECT bmbbent,bmbbsite,bmbb001,bmbb002,bmbb003, ",
                      "       bmbb004,bmbb005,bmbb007,bmbb008,bmbb009, ",
                      "       bmbb010,bmbb011,bmbb012 ",
                      "  FROM bmbb_t ",
                      " WHERE bmbbent=? AND bmbbsite=? ",
                      "   AND bmbb001=? AND bmbb002=? AND bmbb003=? AND bmbb004=? ",
                      #"   AND bmbb005=? AND bmbb007=? AND bmbb008=? AND bmbb009=? ",
                      "   AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss')=? AND bmbb007=? AND bmbb008=? AND bmbb009=? ",
                      "   FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmm200_bmbb_bcl CURSOR FROM g_forupd_sql

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")

   #控制key欄位可否輸入
   CALL abmm200_set_entry(p_cmd)
   CALL abmm200_set_no_entry(p_cmd)

   DISPLAY BY NAME g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaastus
   
   LET l_while = FALSE  #不用循环
   WHILE TRUE
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #單頭段
         INPUT BY NAME g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaastus
            ATTRIBUTE(WITHOUT DEFAULTS)

            #自訂ACTION

            BEFORE INPUT
               IF p_type!="all" THEN
                  EXIT DIALOG
               END IF

            AFTER FIELD bmaa001
               IF cl_null (g_bmaa_m.bmaa001) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aoo-00052'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD CURRENT
               END IF
               #IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL THEN
               #   IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t  OR g_bmaa_m.bmaa001 != g_bmaa001_t  OR g_bmaa_m.bmaa002 != g_bmaa002_t ))) THEN
               #      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_m.bmaa002 ||"'",'std-00004',1) THEN
               #         NEXT FIELD CURRENT
               #      END IF
               #   END IF
               #END IF
               #mark 完成修改时检查

               #chk
               CALL abmm200_chk_bmaa001(g_bmaa_m.bmaa001) RETURNING l_success
               IF l_success = FALSE THEN
                  NEXT FIELD CURRENT
               END IF
               
               #show
               CALL abmm200_show_bmaa_desc()
               CALL abmm200_show_bmaa001_desc('i')

            AFTER FIELD bmaa002
               IF cl_null(g_bmaa_m.bmaa002) THEN
                  LET g_bmaa_m.bmaa002 = ' '
               END IF
               #IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) THEN
               #   IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t  OR g_bmaa_m.bmaa001 != g_bmaa001_t  OR g_bmaa_m.bmaa002 != g_bmaa002_t ))) THEN
               #      IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_m.bmaa002 ||"'",'std-00004',1) THEN
               #         NEXT FIELD CURRENT
               #      END IF
               #   END IF
               #END IF
               #mark 完成修改时检查

               CALL abmm200_show_bmaa_desc()

            AFTER FIELD bmaa003
               IF NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003 <= 0 THEN
                  #输入值不可小于等于0
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'asf-00155'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               #IF g_bmaa_m.bmaastus = 'Y' AND NOT cl_null(g_bmaa_m.bmaa003) THEN
               #   #底数不用检查，会自己更新
               #   #檢查單身所有的料件生效日期、失效日期在同一時間點下，組成用量加總是否等於bmaa003批次数量
               #   LET l_bmba011=0
               #   LET g_today_dt = cl_get_current()
               #   SELECT SUM(bmba011) INTO l_bmba011 FROM bmba_t
               #    WHERE bmbaent = g_enterprise
               #      AND bmbasite= g_bmaa_m.bmaasite
               #      AND bmba001 = g_bmaa_m.bmaa001
               #      AND bmba002 = g_bmaa_m.bmaa002
               #      #AND bmba005<= g_today_dt
               #      #AND (bmba006> g_today_dt OR bmba006 IS NULL )
               #      AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss')<= g_today_dt
               #      AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss')> g_today_dt OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )
               #   IF cl_null(l_bmba011) THEN LET l_bmba011 = 0 END IF
               #   IF l_bmba011 != g_bmaa_m.bmaa003 THEN
               #      #單頭批次數量與單身組成用量加總不一致,請確認！(審核狀態下可先清空單頭批次數量，修改完單身組成用量后再修改單頭批次數量)
               #      INITIALIZE g_errparam TO NULL
               #      LET g_errparam.code = 'abm-00062'
               #      LET g_errparam.extend = ''
               #      LET g_errparam.popup = TRUE
               #      CALL cl_err()
               #
               #      NEXT FIELD CURRENT
               #   END IF 
               #END IF
               #mark 移到整个输入结束后判断EXIT DIALOG
               CALL abmm200_chg_bmaa003() RETURNING l_success
               IF l_success = FALSE THEN
                  NEXT FIELD CURRENT
               END IF

           #生产单位 display only的
           #AFTER FIELD bmaa004
           #   CALL abmm200_chk_ucr(g_bmaa_m.bmaa001,g_bmaa_m.bmaa004) RETURNING l_success
           #   IF l_success = FALSE THEN
           #      NEXT FIELD CURRENT
           #   END IF
               
           #AFTER FIELD bmaasite
           #   IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmaa_m.bmaa002) THEN
           #      IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t  OR g_bmaa_m.bmaa001 != g_bmaa001_t  OR g_bmaa_m.bmaa002 != g_bmaa002_t ))) THEN
           #         IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_m.bmaa002 ||"'",'std-00004',1) THEN
           #            NEXT FIELD CURRENT
           #         END IF
           #      END IF
           #   END IF
           #   CALL abmm200_show_bmaa_desc()

            ON ACTION controlp INFIELD bmaa001   #料件
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmaa_m.bmaa001             #給予default值
               #給予arg
               CALL q_imaa001_9()                                #呼叫開窗
               LET g_bmaa_m.bmaa001 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmaa_m.bmaa001 TO bmaa001              #顯示到畫面上
               NEXT FIELD bmaa001                          #返回原欄位

            AFTER INPUT
               IF INT_FLAG THEN
                  EXIT DIALOG
               END IF

               #CALL cl_showmsg()      #錯誤訊息統整顯示
               DISPLAY BY NAME g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF p_cmd <> 'u' THEN
                  LET l_count = 1
                  SELECT COUNT(*) INTO l_count FROM bmaa_t
                   WHERE bmaaent = g_enterprise AND bmaasite = g_bmaa_m.bmaasite
                     AND bmaa001 = g_bmaa_m.bmaa001
                     AND bmaa002 = g_bmaa_m.bmaa002

                  IF l_count = 0 THEN
                     INSERT INTO bmaa_t (bmaaent,bmaa001,bmaa002,bmaa003,bmaa004,bmaastus,
                                         bmaasite,bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,
                                         bmaacrtdt,bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt)
                     VALUES (g_enterprise,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,
                             g_bmaa_m.bmaa004,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,
                             g_bmaa_m.bmaaowndp,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdt,
                             g_bmaa_m.bmaamodid,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfdt)
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "g_bmaa_m"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        CONTINUE DIALOG
                     END IF
                     
                     #联产品，多产出主件，副产品 处理
                     CALL abmm200_chk_imaa011_imaa012() RETURNING l_success
                     IF NOT l_success THEN
                        CONTINUE DIALOG
                     END IF
                     CALL s_transaction_end('Y','0')
                     LET p_cmd = 'u'
                     LET g_bmaa_m_t.* = g_bmaa_m.*

                  ELSE
                     INITIALIZE g_errparam TO NULL
                     #LET g_errparam.code = '!'
                     LET g_errparam.code = 'std-00006'
                     LET g_errparam.extend =  g_bmaa_m.bmaasite
                     LET g_errparam.popup = FALSE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     NEXT FIELD bmaa001
                  END IF
               ELSE
                  IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) THEN
                     IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmaa_m.bmaasite != g_bmaasite_t  OR g_bmaa_m.bmaa001 != g_bmaa001_t  OR g_bmaa_m.bmaa002 != g_bmaa002_t ))) THEN
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_m.bmaa002 ||"'",'std-00004',1) THEN
                           NEXT FIELD bmaa001
                        END IF
                     END IF
                  END IF
                  LET l_success_tot = TRUE
                  UPDATE bmaa_t SET (bmaa001,bmaa002,bmaa003,bmaa004,bmaasite,bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,bmaacrtdt,bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt) = (g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfdt)
                   WHERE bmaaent = g_enterprise AND bmaasite = g_bmaasite_t
                     AND bmaa001 = g_bmaa001_t AND bmaa002 = g_bmaa002_t
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE g_bmaa"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF

                  #更新key值
                  CALL abmm200_update_key("a") RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
               
                  #联产品，多产出主件，副产品 处理
                  IF cl_null(g_bmaa_m_t.bmaa001) OR g_bmaa_m.bmaa001 != g_bmaa_m_t.bmaa001 THEN
                     CALL abmm200_chk_imaa011_imaa012() RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
            
                  #更新已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN                  #产品分类
                     #bmaa
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     UPDATE bmaa_t SET (bmaa003,bmaa004,bmaaownid,bmaaowndp,bmaacrtid,bmaacrtdp,bmaacrtdt,bmaamodid,bmaamoddt,bmaacnfid,bmaacnfdt)
                                     = (g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfdt)
                      WHERE bmaaent = g_enterprise
                        AND bmaasite!= g_bmaasite_t
                        #mark 141231
                        #AND bmaasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmaa001 = g_bmaa001_t
                        AND bmaa002 = g_bmaa002_t
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                     
                  END IF
                  
                  IF l_success_tot = FALSE THEN
                     CALL s_transaction_end('N','0')
                  ELSE
                     CALL s_transaction_end('Y','0')
                  END IF
               END IF

               CALL abmm200_show_bmaa_desc()
            
              #controlp
              
         END INPUT

         #联产品
         INPUT ARRAY g_bmab_d FROM s_bmab.* 
             ATTRIBUTE(COUNT = g_rec_b_bmab,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = l_allow_insert,
                     DELETE ROW = l_allow_delete,
                     APPEND ROW = l_allow_insert)

            #自訂ACTION

            BEFORE INPUT
               IF p_type!="all" AND p_type!="cp" THEN
                  EXIT DIALOG
               END IF
               
               #联产品，多产出主件，副产品 处理
               SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmaa_m.bmaa001
               IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
               IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
               IF l_imaa011 != '1' THEN  #联产品
                  #主件料号的"产出类型"不是联产品，不可维护联产品页签;请至[料件主档维护作业aimm200]检查！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00103'
                  LET g_errparam.extend = ''
                  
                  CASE p_type
                     WHEN "all"
                          LET g_errparam.popup = FALSE
                          CALL cl_err()
                          NEXT FIELD bmac003
                     WHEN "cp"
                          LET g_errparam.popup = TRUE
                          CALL cl_err()
                          LET l_while = TRUE
                          EXIT DIALOG
                     OTHERWISE
                          LET g_errparam.popup = FALSE
                          CALL cl_err()
                          NEXT FIELD bmac003
                  END CASE
               END IF
            
               CALL abmm200_b_fill_bmab()
               LET g_rec_b_bmab = g_bmab_d.getLength()
               IF g_rec_b_bmab !=0 THEN
                  CALL FGL_SET_ARR_CURR(l_ac)
               END IF
          
            BEFORE ROW
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac = ARR_CURR()
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac TO FORMONLY.idx
              
               CALL s_transaction_begin()
               OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abmm200_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CLOSE abmm200_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               #FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
               #IF SQLCA.sqlcode THEN
               #   #CALL cl_err(g_bmaa_m.bmaasite,SQLCA.sqlcode,1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code =  SQLCA.sqlcode
               #   LET g_errparam.extend = g_bmaa_m.bmaasite
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   CLOSE abmm200_cl
               #   CALL s_transaction_end('N','0')
               #   RETURN
               #END IF

               LET g_rec_b_bmab = g_bmab_d.getLength()

               IF g_rec_b_bmab >= l_ac AND NOT cl_null(g_bmab_d[l_ac].bmab003) THEN
                  LET l_cmd='u'
			         LET g_bmab_d_t.* = g_bmab_d[l_ac].*  #BACKUP
                  CALL abmm200_set_entry_b(l_cmd)
                  CALL abmm200_set_no_entry_b(l_cmd)
                  OPEN abmm200_bmab_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmab_d[l_ac].bmab003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmab_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw='Y'
                  ELSE
                     FETCH abmm200_bmab_bcl INTO g_bmab.*
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmab_d_t.bmab003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET l_lock_sw = "Y"
                     ELSE
                        CALL abmm200_bmab_to()
                     END IF
                     CALL cl_show_fld_cont()
                  END IF
               ELSE
                  LET l_cmd='a'
               END IF

            BEFORE INSERT
               LET l_insert = TRUE
               LET l_n = ARR_COUNT()
               LET l_cmd = 'a'
               INITIALIZE g_bmab_d[l_ac].* TO NULL
               INITIALIZE g_bmab.* TO NULL
            
               LET g_bmab_d_t.* = g_bmab_d[l_ac].*     #新輸入資料
               LET g_bmab_d[l_ac].bmab004 = 0
               LET g_bmab_d[l_ac].bmab005 = cl_get_current()  #生效日期
               CALL cl_show_fld_cont()
               CALL abmm200_set_entry_b(l_cmd)
               CALL abmm200_set_no_entry_b(l_cmd)
               NEXT FIELD bmab003
            
            AFTER INSERT
               LET l_insert = FALSE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  CANCEL INSERT
               END IF

               LET l_count = 1
               SELECT COUNT(*) INTO l_count FROM bmab_t
                WHERE bmabent = g_enterprise
                  AND bmabsite = g_bmaa_m.bmaasite
                  AND bmab001 = g_bmaa_m.bmaa001
                  AND bmab002 = g_bmaa_m.bmaa002
                  AND bmab003 = g_bmab_d[l_ac].bmab003
               #資料未重複, 插入新增資料
               IF l_count = 0 THEN
                  CALL abmm200_bmab_back()
                  LET l_success_tot = TRUE
                  INSERT INTO bmab_t VALUES(g_bmab.*)
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "INSERT bmba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF
                  #拋转已拋转过的bom
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     CALL s_abmm200_carry_bmab(g_bmab.*) RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  ELSE
                     CALL s_transaction_end('Y','0')
                     #ERROR 'INSERT O.K'
                     LET g_rec_b_bmab=g_rec_b_bmab+1
                  END IF
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00006"
                  LET g_errparam.extend = 'INSERT'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  INITIALIZE g_bmab_d[l_ac].* TO NULL
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF

            BEFORE DELETE                            #是否取消單身
               IF NOT cl_null(g_bmab_d[l_ac].bmab003) THEN
                  IF NOT cl_ask_del_detail() THEN
                     CANCEL DELETE
                  END IF
                  IF l_lock_sw = "Y" THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code =  -263
                     LET g_errparam.extend = ""
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CANCEL DELETE
                  END IF
            
                  LET l_success_tot = TRUE
                  DELETE FROM bmab_t
                   WHERE bmabent = g_enterprise
                     AND bmabsite= g_bmaa_m.bmaasite
                     AND bmab001 = g_bmaa_m.bmaa001
                     AND bmab002 = g_bmaa_m.bmaa002
                     AND bmab003 = g_bmab_d_t.bmab003
                  IF SQLCA.sqlcode THEN
                     LET l_success_tot = FALSE
                  END IF
                  #删除已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     DELETE FROM bmab_t
                      WHERE bmabent = g_enterprise
                        AND bmabsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmabsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmab001 = g_bmaa_m.bmaa001
                        AND bmab002 = g_bmaa_m.bmaa002
                        AND bmab003 = g_bmab_d_t.bmab003
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF

                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmab_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  ELSE
                     LET g_rec_b_bmab = g_rec_b_bmab-1
                     CALL s_transaction_end('Y','0')
                  END IF
                  CLOSE abmm200_bmab_bcl
                  LET l_count = g_bmab_d.getLength()
               END IF

            AFTER DELETE
               #CALL abmm200_delete_b('bmab_t',gs_keys,"'1'")
               #同步删除相关资料

            AFTER FIELD bmab003
               IF NOT cl_null (g_bmab_d[l_ac].bmab003) THEN
                  #检查料件是否有效存在与料件主档中
                  CALL s_aimm200_chk_item(g_bmab_d[l_ac].bmab003) RETURNING l_success
                  IF l_success=FALSE THEN
                     NEXT FIELD bmab003
                  END IF
                  #检查key值是否重复
                  IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmab_d[l_ac].bmab003) THEN
                     IF l_cmd = 'a' OR ( l_cmd = 'u' AND g_bmab_d[l_ac].bmab003 != g_bmab_d_t.bmab003) THEN
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmab_t WHERE "||"bmabent = '" ||g_enterprise|| "' AND "||"bmabsite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmab001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmab002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmab003 = '"||g_bmab_d[l_ac].bmab003 ||"'",'std-00004',1) THEN
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
                  #控制不可等於主件料號 add 141107
                  IF g_bmab_d[l_ac].bmab003 = g_bmaa_m.bmaa001 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00008'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  #不可與副產品相同
                  SELECT COUNT(*) INTO l_cnt FROM bmac_t
                   WHERE bmacent = g_enterprise
                     AND bmacsite= g_bmaa_m.bmaasite
                     AND bmac001 = g_bmaa_m.bmaa001
                     AND bmac002 = g_bmaa_m.bmaa002
                     AND bmac003 = g_bmab_d[l_ac].bmab003
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00038'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
 
                     NEXT FIELD CURRENT
                  END IF
                  
                  #料號，必需要跟主件料號的特徵組別(imaa005)是一致的,若主件没维护特征组别，联产品料号也需不维护的
                  LET l_imaa005_1 = ''
                  SELECT imaa005 INTO l_imaa005_1 FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_bmaa_m.bmaa001
                  IF cl_null(l_imaa005_1) THEN LET l_imaa005_1 = ' ' END IF
                     
                  LET l_imaa005_2 = ''
                  SELECT imaa005 INTO l_imaa005_2 FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_bmab_d[l_ac].bmab003
                  IF cl_null(l_imaa005_2) THEN LET l_imaa005_2 = ' ' END IF
                     
                  IF l_imaa005_1 != l_imaa005_2 THEN
                     #聯產品料號，跟主件料號的特徵組別(imaa005)不一致，不可輸入此料號
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00114'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
                  
                  #受研發控制組限制能輸入的料號範圍
                  CALL s_control_chk_item(g_bmab_d[l_ac].bmab003,g_user,g_dept,'') RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
            
                  #检查生命周期
                  CALL abmm200_chk_item_lifecycle(g_bmab_d[l_ac].bmab003) RETURNING l_success
                  IF l_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
               
                  CALL abmm200_show_bmab003_desc(l_ac)
               END IF

            AFTER FIELD bmab004
               IF NOT cl_null (g_bmab_d[l_ac].bmab004) THEN
                  IF NOT cl_null(g_bmab_d[l_ac].bmab004) AND g_bmab_d[l_ac].bmab004< 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            AFTER FIELD bmab005
               IF NOT cl_null (g_bmab_d[l_ac].bmab005) THEN
                  IF NOT cl_null(g_bmab_d[l_ac].bmab005) AND NOT cl_null(g_bmab_d[l_ac].bmab006) THEN
                     IF g_bmab_d[l_ac].bmab005>g_bmab_d[l_ac].bmab006 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'ais-00047' #生效日期不可大于失效日期
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF

            AFTER FIELD bmab006
               IF NOT cl_null(g_bmab_d[l_ac].bmab005) AND NOT cl_null(g_bmab_d[l_ac].bmab006) THEN
                  IF g_bmab_d[l_ac].bmab005>g_bmab_d[l_ac].bmab006 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00048' #失效日期不可小于生效日期
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            ON ACTION controlp INFIELD bmab003
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmab_d[l_ac].bmab003             #給予default值
               LET g_qryparam.where = " imaesite ='",g_site,"' "
               CALL q_imaa001_7()                               #呼叫開窗
               LET g_bmab_d[l_ac].bmab003 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmab_d[l_ac].bmab003 TO bmab003              #顯示到畫面上
               CALL abmm200_show_bmab003_desc(l_ac)
               NEXT FIELD bmab003                          #返回原欄位
            
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET INT_FLAG = 0
                  LET g_bmab_d[l_ac].* = g_bmab_d_t.*
                  CLOSE abmm200_bmab_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
               
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = -263
                  LET g_errparam.extend = g_bmab_d[l_ac].bmab003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmab_d[l_ac].* = g_bmab_d_t.*
               ELSE
                  CALL abmm200_bmab_back()
               
                  LET l_success_tot = TRUE
                  UPDATE bmab_t SET * = g_bmab.*
                   WHERE bmabent = g_enterprise
                     AND bmabsite= g_bmaa_m.bmaasite
                     AND bmab001 = g_bmaa_m.bmaa001
                     AND bmab002 = g_bmaa_m.bmaa002
                     AND bmab003 = g_bmab_d_t.bmab003
                  IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                     LET l_success_tot = FALSE
                  END IF
               
                  #更新已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     UPDATE bmab_t SET (bmab003,bmab004,bmab005,bmab006)
                                     = (g_bmab.bmab003,g_bmab.bmab004,g_bmab.bmab005,g_bmab.bmab006)
                      WHERE bmabent = g_enterprise
                        AND bmabsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmabsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmab001 = g_bmaa_m.bmaa001
                        AND bmab002 = g_bmaa_m.bmaa002
                        AND bmab003 = g_bmab_d_t.bmab003
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
               
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE bmab_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmab_d[l_ac].* = g_bmab_d_t.*
                     CALL s_transaction_end('N','0')
                  END IF
               END IF

            AFTER ROW
               IF l_cmd = 'u' THEN 
                  CLOSE abmm200_bmab_bcl
               END IF
               CALL s_transaction_end('Y','0')
        
            AFTER INPUT
               IF p_type='cp' THEN
                  EXIT DIALOG
               END IF
        
               #比率加總不能超過100 141107 add
               LET l_bmab004=0
               #IF NOT cl_null(g_bmab_d_t.bmab003) THNE
                  SELECT SUM(bmab004) INTO l_bmab004 FROM bmab_t
                   WHERE bmabent = g_enterprise
                     AND bmabsite= g_bmaa_m.bmaasite
                     AND bmab001 = g_bmaa_m.bmaa001
                     AND bmab002 = g_bmaa_m.bmaa002
                     #AND bmab003 != g_bmab_d_t.bmab003
               #END IF
               #IF l_bmab004 + g_bmab_d[l_ac].bmab004 > 100 THEN
               IF l_bmab004 > 100 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00243'
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  NEXT FIELD bmab004
               END IF
         END INPUT

         #副产品
         INPUT ARRAY g_bmac_d FROM s_bmac.* 
             ATTRIBUTE(COUNT = g_rec_b_bmac,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = l_allow_insert,
                     DELETE ROW = l_allow_delete,
                     APPEND ROW = l_allow_insert)
         
            #自訂ACTION
         
            BEFORE INPUT
               IF p_type!="all" AND p_type!="bp" THEN
                  EXIT DIALOG
               END IF
               
               #联产品，多产出主件，副产品 处理
               SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmaa_m.bmaa001
               IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
               IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
               IF l_imaa012 = 'N' THEN  #不允许副产品产出
                  #主件料号的"允许副产品产出"设置为不允许，不可维护副产品页签;请至[料件主档维护作业aimm200]检查！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00105'
                  LET g_errparam.extend = ''
                  
                  CASE p_type
                     WHEN "all"
                          LET g_errparam.popup = FALSE
                          CALL cl_err()
                          NEXT FIELD bmad003
                     WHEN "bp"
                          LET g_errparam.popup = TRUE
                          CALL cl_err()
                          LET l_while = TRUE
                          EXIT DIALOG
                     OTHERWISE
                          LET g_errparam.popup = FALSE
                          CALL cl_err()
                          NEXT FIELD bmad003
                  END CASE
               END IF
               
               CALL abmm200_b_fill_bmac()
               LET g_rec_b_bmac = g_bmac_d.getLength()
               IF g_rec_b_bmac !=0 THEN
                  CALL FGL_SET_ARR_CURR(l_ac)
               END IF
         
            BEFORE ROW
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac = ARR_CURR()
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac TO FORMONLY.idx
         
               CALL s_transaction_begin()
               OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abmm200_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE abmm200_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
         
               #FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
               #IF SQLCA.sqlcode THEN
               #   #CALL cl_err(g_bmaa_m.bmaasite,SQLCA.sqlcode,1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code =  SQLCA.sqlcode
               #   LET g_errparam.extend = g_bmaa_m.bmaasite
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   CLOSE abmm200_cl
               #   CALL s_transaction_end('N','0')
               #   RETURN
               #END IF
         
               LET g_rec_b_bmac = g_bmac_d.getLength()
         
               IF g_rec_b_bmac >= l_ac
                  AND NOT cl_null(g_bmac_d[l_ac].bmac003)
               THEN
                  LET l_cmd='u'
		   	   LET g_bmac_d_t.* = g_bmac_d[l_ac].*  #BACKUP
                  CALL abmm200_set_entry_b(l_cmd)
                  CALL abmm200_set_no_entry_b(l_cmd)
                  OPEN abmm200_bmac_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmac_d[l_ac].bmac003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmac_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw='Y'
                  ELSE
                     FETCH abmm200_bmac_bcl INTO g_bmac.*
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmac_d_t.bmac003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET l_lock_sw = "Y"
                     ELSE
                        CALL abmm200_bmac_to()
                     END IF
                     CALL cl_show_fld_cont()
                  END IF
               ELSE
                  LET l_cmd='a'
               END IF
               #其他table資料備份(確定是否更改用)
         
               #其他table進行lock
         
         
            BEFORE INSERT
               LET l_insert = TRUE
               LET l_n = ARR_COUNT()
               LET l_cmd = 'a'
               INITIALIZE g_bmac_d[l_ac].* TO NULL
               INITIALIZE g_bmac.* TO NULL
        
               LET g_bmac_d_t.* = g_bmac_d[l_ac].*     #新輸入資料
               LET g_bmac_d[l_ac].bmac005 = 1   #数量
               LET g_bmac_d[l_ac].bmac006 = 1   
               LET g_bmac_d[l_ac].bmac007 = cl_get_current()  #生效日期   
               CALL cl_show_fld_cont()
               CALL abmm200_set_entry_b(l_cmd)
               CALL abmm200_set_no_entry_b(l_cmd)
               NEXT FIELD bmac003
        
            AFTER INSERT
               LET l_insert = FALSE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET INT_FLAG = 0
                  CANCEL INSERT
               END IF
        
               LET l_count = 1
               SELECT COUNT(*) INTO l_count FROM bmac_t
                WHERE bmacent = g_enterprise
                  AND bmacsite = g_bmaa_m.bmaasite
                  AND bmac001 = g_bmaa_m.bmaa001
                  AND bmac002 = g_bmaa_m.bmaa002
                  AND bmac003 = g_bmac_d[l_ac].bmac003
               #資料未重複, 插入新增資料
               IF l_count = 0 THEN
                  CALL abmm200_bmac_back()
                  LET l_success_tot = TRUE
                  INSERT INTO bmac_t VALUES(g_bmac.*)
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "INSERT bmac_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_success_tot = FALSE
                  END IF
                  #拋转已拋转过的bom
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     CALL s_abmm200_carry_bmac(g_bmac.*) RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  ELSE
                     CALL s_transaction_end('Y','0')
                     #ERROR 'INSERT O.K'
                     LET g_rec_b_bmac=g_rec_b_bmac+1
                  END IF
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00006"
                  LET g_errparam.extend = 'INSERT'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  INITIALIZE g_bmac_d[l_ac].* TO NULL
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
        
        
            BEFORE DELETE                            #是否取消單身
               IF NOT cl_null(g_bmac_d[l_ac].bmac003) THEN
                  IF NOT cl_ask_del_detail() THEN
                     CANCEL DELETE
                  END IF
                  IF l_lock_sw = "Y" THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code =  -263
                     LET g_errparam.extend = ""
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CANCEL DELETE
                  END IF
        
                  LET l_success_tot = TRUE
                  DELETE FROM bmac_t
                   WHERE bmacent = g_enterprise
                     AND bmacsite = g_bmaa_m.bmaasite
                     AND bmac001 = g_bmaa_m.bmaa001
                     AND bmac002 = g_bmaa_m.bmaa002
                     AND bmac003 = g_bmac_d_t.bmac003
                  IF SQLCA.sqlcode THEN
                     LET l_success_tot = FALSE
                  END IF
                  #删除已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     DELETE FROM bmac_t
                      WHERE bmacent = g_enterprise
                        AND bmacsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmacsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmac001 = g_bmaa_m.bmaa001
                        AND bmac002 = g_bmaa_m.bmaa002
                        AND bmac003 = g_bmac_d_t.bmac003
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmac_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  ELSE
                     LET g_rec_b_bmac = g_rec_b_bmac-1
                     CALL s_transaction_end('Y','0')
                  END IF
        
                  CLOSE abmm200_bmac_bcl
                  LET l_count = g_bmac_d.getLength()
               END IF
        
            AFTER DELETE
               #CALL abmm200_delete_b('bmac_t',gs_keys,"'1'")

            AFTER FIELD bmac003
               IF NOT cl_null (g_bmac_d[l_ac].bmac003) THEN
                  #不可和主件料號、聯產品料號相同
                  IF g_bmac_d[l_ac].bmac003 = g_bmaa_m.bmaa001 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00063'
                     LET g_errparam.extend = g_bmac_d[l_ac].bmac003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
                  SELECT COUNT(*) INTO l_cnt FROM bmab_t
                   WHERE bmabent = g_enterprise
                     AND bmabsite= g_bmaa_m.bmaasite
                     AND bmab001 = g_bmaa_m.bmaa001
                     AND bmab002 = g_bmaa_m.bmaa002
                     AND bmab003 = g_bmac_d[l_ac].bmac003
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00064'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
 
                     NEXT FIELD CURRENT
                  END IF
                  #检查料件是否有效存在与料件主档中
                  CALL s_aimm200_chk_item(g_bmac_d[l_ac].bmac003) RETURNING l_success
                  IF l_success=FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
                  #本字段数据重复性检查未通过
                  IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmac_d[l_ac].bmac003) THEN
                     IF l_cmd = 'a' OR (l_cmd = 'u' AND g_bmac_d[l_ac].bmac003 != g_bmac_d_t.bmac003) THEN
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmac_t WHERE "||"bmacent = '" ||g_enterprise|| "' AND "||"bmacsite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmac001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmac002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmac003 = '"||g_bmac_d[l_ac].bmac003 ||"'",'std-00004',1) THEN
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
              
                  #检查生命周期
                  CALL abmm200_chk_item_lifecycle(g_bmac_d[l_ac].bmac003) RETURNING l_success
                  IF l_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
               
                  CALL abmm200_show_bmac003_desc(l_ac,'i')
               END IF

            AFTER FIELD bmac005
               IF NOT cl_null (g_bmac_d[l_ac].bmac005) THEN
                  IF NOT cl_null(g_bmac_d[l_ac].bmac005) AND g_bmac_d[l_ac].bmac005< 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            AFTER FIELD bmac006
               IF NOT cl_null (g_bmac_d[l_ac].bmac006) THEN
                  IF NOT cl_null(g_bmac_d[l_ac].bmac006) AND g_bmac_d[l_ac].bmac006<= 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            AFTER FIELD bmac004
            #单位
               IF NOT cl_null (g_bmac_d[l_ac].bmac004) THEN
                  #校验带值说明
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_bmac_d[l_ac].bmac004
                  IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                     ##檢查成功時後續處理
                     #LET g_bmac_d[l_ac].bmac004_desc = g_chkparam.return1
                     #DISPLAY BY NAME g_bmac_d[l_ac].bmac004_desc
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmac_d[l_ac].bmac004 = g_bmac_d_t.bmac004
                     NEXT FIELD CURRENT
                  END IF
                  #存在单位资料表中               
                  #SELECT oocastus FROM ooca_t
                  # WHERE oocaent = g_enterprise
                  #   AND ooca001 = g_bmac_d[l_ac].bmac004
                  #   AND oocastus= 'Y'
                  #IF SQLCA.sqlcode THEN
                  #   #CALL cl_err(g_bmac_d[l_ac].bmac004,SQLCA.sqlcode,1)
                  #   INITIALIZE g_errparam TO NULL
                  #   LET g_errparam.code = SQLCA.sqlcode
                  #   LET g_errparam.extend = g_bmac_d[l_ac].bmac004
                  #   LET g_errparam.popup = TRUE
                  #   CALL cl_err()
                  #   NEXT FIELD CURRENT
                  #END IF
                  #与料件库存单位有换算率
                  #CALL abmm200_chk_ucr(g_bmac_d[l_ac].bmac003,g_bmac_d[l_ac].bmac004) RETURNING l_success
                  #与料件基础单位有换算率
                  CALL s_aimi190_chk_base_convert(g_bmac_d[l_ac].bmac003,g_bmac_d[l_ac].bmac004) RETURNING l_success
                  IF l_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            AFTER FIELD bmac007
               IF NOT cl_null (g_bmac_d[l_ac].bmac007) THEN
                  IF NOT cl_null(g_bmac_d[l_ac].bmac007) AND NOT cl_null(g_bmac_d[l_ac].bmac008) THEN
                     IF g_bmac_d[l_ac].bmac007>g_bmac_d[l_ac].bmac008 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'ais-00047' #生效日期不可大于失效日期
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
           
            AFTER FIELD bmac008
               IF NOT cl_null(g_bmac_d[l_ac].bmac007) AND NOT cl_null(g_bmac_d[l_ac].bmac008) THEN
                  IF g_bmac_d[l_ac].bmac007>g_bmac_d[l_ac].bmac008 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00048' #失效日期不可小于生效日期
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
           
            ON ACTION controlp INFIELD bmac003
               #add-point:ON ACTION controlp INFIELD bmac003
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmac_d[l_ac].bmac003             #給予default值
               LET g_qryparam.where = " imaesite ='",g_site,"' "
               CALL q_imaa001_7()                               #呼叫開窗
               LET g_bmac_d[l_ac].bmac003 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmac_d[l_ac].bmac003 TO bmac003              #顯示到畫面上
               CALL abmm200_show_bmac003_desc(l_ac,'s')
               NEXT FIELD bmac003                          #返回原欄位

            ON ACTION controlp INFIELD bmac004
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmac_d[l_ac].bmac004              #給予default值
               #給予arg
               CALL q_ooca001_1()                                #呼叫開窗
               LET g_bmac_d[l_ac].bmac004 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmac_d[l_ac].bmac004 TO bmac004             #顯示到畫面上
               NEXT FIELD bmac004                         #返回原欄位
          
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  LET INT_FLAG = 0
                  LET g_bmac_d[l_ac].* = g_bmac_d_t.*
                  CLOSE abmm200_bmac_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
          
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = -263
                  LET g_errparam.extend = g_bmac_d[l_ac].bmac003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmac_d[l_ac].* = g_bmac_d_t.*
               ELSE
                  CALL abmm200_bmac_back()
                  
                  LET l_success_tot = TRUE
                  UPDATE bmac_t SET * = g_bmac.*
                   WHERE bmacent = g_enterprise
                     AND bmacsite = g_bmaa_m.bmaasite
                     AND bmac001 = g_bmaa_m.bmaa001
                     AND bmac002 = g_bmaa_m.bmaa002
                     AND bmac003 = g_bmac_d_t.bmac003 
                  IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                     LET l_success_tot = FALSE
                  END IF
          
                  #更新已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     UPDATE bmac_t SET (bmac003,bmac004,bmac005,bmac006,bmac007,bmac008)
                                     = (g_bmac.bmac003,g_bmac.bmac004,g_bmac.bmac005,g_bmac.bmac006,g_bmac.bmac007,g_bmac.bmac008)
                      WHERE bmacent = g_enterprise
                        AND bmacsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmacsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmac001 = g_bmaa_m.bmaa001
                        AND bmac002 = g_bmaa_m.bmaa002
                        AND bmac003 = g_bmac_d_t.bmac003 
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
          
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE bmac_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmac_d[l_ac].* = g_bmac_d_t.*
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
          
            AFTER ROW
               IF l_cmd = 'u' THEN 
                  CLOSE abmm200_bmac_bcl
               END IF
               CALL s_transaction_end('Y','0')
               #其他table進行unlock
          
          
            AFTER INPUT

         END INPUT

         #多产出主件
         INPUT ARRAY g_bmad_d FROM s_bmad.*
             ATTRIBUTE(COUNT = g_rec_b_bmad,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = l_allow_insert,
                     DELETE ROW = l_allow_delete,
                     APPEND ROW = l_allow_insert)
       
            #自訂ACTION
           
            BEFORE INPUT
               IF p_type!="all" AND p_type!="mp" THEN
                  EXIT DIALOG
               END IF
             
               #联产品，多产出主件，副产品 处理
               SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
                WHERE imaaent = g_enterprise
                  AND imaa001 = g_bmaa_m.bmaa001
               IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
               IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
               IF l_imaa011 != '2' THEN  #分解品
                  #主件料号的"产出类型"不是分解品，不可维护多产出主件页签;请至[料件主档维护作业aimm200]检查！
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00104'
                  LET g_errparam.extend = ''
                  
                  CASE p_type
                     WHEN "all"
                          LET g_errparam.popup = FALSE
                          CALL cl_err()
                          NEXT FIELD bmaa_ooff013
                     WHEN "bp"
                          LET g_errparam.popup = TRUE
                          CALL cl_err()
                          LET l_while = TRUE
                          EXIT DIALOG
                     OTHERWISE
                          LET g_errparam.popup = FALSE
                          CALL cl_err()
                          NEXT FIELD bmaa_ooff013
                  END CASE
               END IF
             
               CALL abmm200_b_fill_bmad()
               LET g_rec_b_bmad = g_bmad_d.getLength()
               IF g_rec_b_bmad != 0 THEN
                  CALL FGL_SET_ARR_CURR(l_ac)
               END IF
          
            BEFORE ROW
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac = ARR_CURR()
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac TO FORMONLY.idx
       
               CALL s_transaction_begin()
               OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abmm200_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CLOSE abmm200_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            
               #FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
               #IF SQLCA.sqlcode THEN
               #   #CALL cl_err(g_bmaa_m.bmaasite,SQLCA.sqlcode,1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code =  SQLCA.sqlcode
               #   LET g_errparam.extend = g_bmaa_m.bmaasite
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   CLOSE abmm200_cl
               #   CALL s_transaction_end('N','0')
               #   RETURN
               #END IF
            
               LET g_rec_b_bmad = g_bmad_d.getLength()
            
               IF g_rec_b_bmad >= l_ac AND NOT cl_null(g_bmad_d[l_ac].bmad003) THEN
                  LET l_cmd='u'
		 	         LET g_bmad_d_t.* = g_bmad_d[l_ac].*  #BACKUP
                  CALL abmm200_set_entry_b(l_cmd)
                  CALL abmm200_set_no_entry_b(l_cmd)
                  OPEN abmm200_bmad_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmad_d[l_ac].bmad003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmad_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw='Y'
                  ELSE
                     FETCH abmm200_bmad_bcl INTO g_bmad.*
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmad_d_t.bmad003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                        LET l_lock_sw = "Y"
                     ELSE
                        CALL abmm200_bmad_to()
                     END IF
                     CALL cl_show_fld_cont()
                  END IF
               ELSE
                  LET l_cmd='a'
               END IF
               #其他table資料備份(確定是否更改用)
              
               #其他table進行lock
       
            BEFORE INSERT
               LET l_insert = TRUE
               LET l_n = ARR_COUNT()
               LET l_cmd = 'a'
               INITIALIZE g_bmad_d[l_ac].* TO NULL
               INITIALIZE g_bmad.* TO NULL
           
               LET g_bmad_d_t.* = g_bmad_d[l_ac].*     #新輸入資料
               LET g_bmad_d[l_ac].bmad006 = cl_get_current()  #生效日期
               CALL cl_show_fld_cont()
               CALL abmm200_set_entry_b(l_cmd)
               CALL abmm200_set_no_entry_b(l_cmd)
               NEXT FIELD bmad003
       
            AFTER INSERT
               LET l_insert = FALSE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  CANCEL INSERT
               END IF
           
               LET l_count = 1
               SELECT COUNT(*) INTO l_count FROM bmad_t
                WHERE bmadent = g_enterprise AND bmadsite = g_bmaa_m.bmaasite
                  AND bmad001 = g_bmaa_m.bmaa001
                  AND bmad002 = g_bmaa_m.bmaa002
                  AND bmad003 = g_bmad_d[l_ac].bmad003 
               #資料未重複, 插入新增資料
               IF l_count = 0 THEN
                  CALL abmm200_bmad_back()
                  LET l_success_tot = TRUE
                  INSERT INTO bmad_t VALUES(g_bmad.*)
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmad_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF
                  #拋转已拋转过的bom
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     CALL s_abmm200_carry_bmad(g_bmad.*) RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  ELSE
                     CALL s_transaction_end('Y','0')
                     #ERROR 'INSERT O.K'
                     LET g_rec_b_bmad=g_rec_b_bmad+1
                  END IF
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00006"
                  LET g_errparam.extend = 'INSERT'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  INITIALIZE g_bmad_d[l_ac].* TO NULL
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
       
       
            BEFORE DELETE                            #是否取消單身
               IF NOT cl_null(g_bmad_d[l_ac].bmad003)  THEN
                  IF NOT cl_ask_del_detail() THEN
                     CANCEL DELETE
                  END IF
                  IF l_lock_sw = "Y" THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code =  -263
                     LET g_errparam.extend = ""
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CANCEL DELETE
                  END IF
       
                  LET l_success_tot = TRUE
                  DELETE FROM bmad_t
                   WHERE bmadent = g_enterprise
                     AND bmadsite = g_bmaa_m.bmaasite
                     AND bmad001 = g_bmaa_m.bmaa001
                     AND bmad002 = g_bmaa_m.bmaa002
                     AND bmad003 = g_bmad_d_t.bmad003
                  IF SQLCA.sqlcode THEN
                     LET l_success_tot = FALSE
                  END IF
                  #删除已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     DELETE FROM bmad_t
                      WHERE bmadent = g_enterprise
                        AND bmadsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmadsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmad001 = g_bmaa_m.bmaa001
                        AND bmad002 = g_bmaa_m.bmaa002
                        AND bmad003 = g_bmad_d_t.bmad003
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmad_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  ELSE
                     LET g_rec_b_bmad = g_rec_b_bmad-1
                     CALL s_transaction_end('Y','0')
                  END IF
                 
                  CLOSE abmm200_bmad_bcl
                  LET l_count = g_bmad_d.getLength()
               END IF
       
            AFTER DELETE
               #CALL abmm200_delete_b('bmad_t',gs_keys,"'1'")
       
            AFTER FIELD bmad003
               IF NOT cl_null (g_bmad_d[l_ac].bmad003) THEN
                  #检查料件是否有效存在与料件主档中
                  CALL s_aimm200_chk_item(g_bmad_d[l_ac].bmad003) RETURNING l_success
                  IF l_success=FALSE THEN
                     NEXT FIELD bmad003
                  END IF
                  #本字段数据重复性检查未通过
                  IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmad_d[l_ac].bmad003) THEN
                     IF l_cmd = 'a' OR ( l_cmd = 'u' AND  g_bmad_d[l_ac].bmad003 != g_bmad_d_t.bmad003) THEN
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmad_t WHERE "||"bmadent = '" ||g_enterprise|| "' AND "||"bmadsite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmad001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmad002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmad003 = '"||g_bmad_d[l_ac].bmad003 ||"'",'std-00004',1) THEN
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
                
                  #受研發控制組限制能輸入的料號範圍
                  CALL s_control_chk_item(g_bmad_d[l_ac].bmad003,g_user,g_dept,'') RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
              
                  #检查生命周期
                  CALL abmm200_chk_item_lifecycle(g_bmad_d[l_ac].bmad003) RETURNING l_success
                  IF l_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
               
                  CALL abmm200_show_bmad003_desc(l_ac,'i')
               END IF
       
            AFTER FIELD bmad004
               IF NOT cl_null (g_bmad_d[l_ac].bmad004) THEN
                  IF NOT cl_null(g_bmad_d[l_ac].bmad004) AND g_bmad_d[l_ac].bmad004< 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     NEXT FIELD CURRENT
                  END IF
               END IF
             
            AFTER FIELD bmad005
               IF NOT cl_null (g_bmad_d[l_ac].bmad005) THEN
                  #校验带值说明
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_bmad_d[l_ac].bmad005
                  IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                     ##檢查成功時後續處理
                     #LET g_bmad_d[l_ac].bmad005_desc = g_chkparam.return1
                     #DISPLAY BY NAME g_bmad_d[l_ac].bmad005_desc
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmad_d[l_ac].bmad005 = g_bmad_d_t.bmad005
                     NEXT FIELD CURRENT
                  END IF
                  #存在单位资料表中
                  #SELECT oocastus FROM ooca_t
                  # WHERE oocaent = g_enterprise
                  #   AND ooca001 = g_bmad_d[l_ac].bmad005
                  #   AND oocastus= 'Y'
                  #IF SQLCA.sqlcode THEN
                  #   #CALL cl_err(g_bmad_d[l_ac].bmad005,SQLCA.sqlcode,1)
                  #   INITIALIZE g_errparam TO NULL
                  #   LET g_errparam.code = SQLCA.sqlcode
                  #   LET g_errparam.extend = g_bmad_d[l_ac].bmad005
                  #   LET g_errparam.popup = TRUE
                  #   CALL cl_err()
                  #   NEXT FIELD CURRENT
                  #END IF
                
                  #与料件库存单位有换算率
                  #CALL abmm200_chk_ucr(g_bmad_d[l_ac].bmad003,g_bmad_d[l_ac].bmad005) RETURNING l_success
                  #与料件基础单位有换算率
                  CALL s_aimi190_chk_base_convert(g_bmad_d[l_ac].bmad003,g_bmad_d[l_ac].bmad005) RETURNING l_success
                  IF l_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
          
            AFTER FIELD bmad006
               IF NOT cl_null (g_bmad_d[l_ac].bmad006) THEN
                  IF NOT cl_null(g_bmad_d[l_ac].bmad006) AND NOT cl_null(g_bmad_d[l_ac].bmad007) THEN
                     IF g_bmad_d[l_ac].bmad006 > g_bmad_d[l_ac].bmad007 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'ais-00047' #生效日期不可大于失效日期
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
           
            AFTER FIELD bmad007
               IF NOT cl_null(g_bmad_d[l_ac].bmad006) AND NOT cl_null(g_bmad_d[l_ac].bmad007) THEN
                  IF g_bmad_d[l_ac].bmad006 > g_bmad_d[l_ac].bmad007 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00048' #失效日期不可小于生效日期
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
         
            ON ACTION controlp INFIELD bmad003
               #add-point:ON ACTION controlp INFIELD bmad003
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmad_d[l_ac].bmad003             #給予default值
               LET g_qryparam.where = " imaesite ='",g_site,"' "
               CALL q_imaa001_7()                                #呼叫開窗
               LET g_bmad_d[l_ac].bmad003 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmad_d[l_ac].bmad003 TO bmad003              #顯示到畫面上
               CALL abmm200_show_bmad003_desc(l_ac,'s')
               NEXT FIELD bmad003                          #返回原欄位
            
            ON ACTION controlp INFIELD bmad005
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmad_d[l_ac].bmad005             #給予default值
               #給予arg
               CALL q_ooca001_1()                                #呼叫開窗
               LET g_bmad_d[l_ac].bmad005 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmad_d[l_ac].bmad005 TO bmad005            #顯示到畫面上
               NEXT FIELD bmad005                        #返回原欄位
             
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
        
                  LET INT_FLAG = 0
                  LET g_bmad_d[l_ac].* = g_bmad_d_t.*
                  CLOSE abmm200_bmad_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
            
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = -263
                  LET g_errparam.extend = g_bmad_d[l_ac].bmad003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
            
                  LET g_bmad_d[l_ac].* = g_bmad_d_t.*
               ELSE
                  CALL abmm200_bmad_back()
                  
                  LET l_success_tot = TRUE
                  UPDATE bmad_t SET * = g_bmad.*
                   WHERE bmadent = g_enterprise
                     AND bmadsite= g_bmaa_m.bmaasite
                     AND bmad001 = g_bmaa_m.bmaa001
                     AND bmad002 = g_bmaa_m.bmaa002
                     AND bmad003 = g_bmad_d_t.bmad003
                  IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                     LET l_success_tot = FALSE
                  END IF
            
                  #更新已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     UPDATE bmad_t SET (bmad003,bmad004,bmad005,bmad006,bmad007)
                                     = (g_bmad.bmad003,g_bmad.bmad004,g_bmad.bmad005,g_bmad.bmad006,g_bmad.bmad007)
                      WHERE bmadent = g_enterprise
                        AND bmadsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmadsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmad001 = g_bmaa_m.bmaa001
                        AND bmad002 = g_bmaa_m.bmaa002
                        AND bmad003 = g_bmad_d_t.bmad003
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE bmad_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
         
                     LET g_bmad_d[l_ac].* = g_bmad_d_t.*
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
         
            AFTER ROW
               IF l_cmd = 'u' THEN 
                  CLOSE abmm200_bmad_bcl
               END IF
               CALL s_transaction_end('Y','0')
               #其他table進行unlock
         
         
            AFTER INPUT
               #add-point:input段after input
               {<point name="input.body.after_input"/>}
               #end add-point
         
         END INPUT
         
         #單頭段
         INPUT BY NAME g_bmaa_m.bmaa_ooff013
             ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION
            
            BEFORE INPUT
               IF p_type!="all" THEN
                  EXIT DIALOG
               END IF
               
            AFTER INPUT
               IF INT_FLAG THEN
                  EXIT DIALOG
               END IF
            
               CALL s_transaction_begin()
               LET l_success_tot = TRUE  #add 150310
               #CALL cl_showmsg()      #錯誤訊息統整顯示
               DISPLAY BY NAME g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
            
               IF NOT cl_null(g_bmaa_m.bmaa_ooff013) THEN
                  CALL s_aooi360_gen('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4',g_bmaa_m.bmaa_ooff013)
                     RETURNING l_success
               ELSE
                  CALL s_aooi360_del('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4')
                     RETURNING l_success
               END IF  
               #add 150310
               IF NOT l_success THEN
                  LET l_success_tot = FALSE
               END IF
               #ooff
               IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                  CALL s_abmm200_carry_ooff('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4',g_bmaa_m.bmaa_ooff013)
                     RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
               END IF
               #add 150310 end 
               #IF NOT l_success THEN
               IF NOT l_success_tot THEN  #mod 150310
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF            
        
              #controlp
         END INPUT
        
         #单身
         INPUT ARRAY g_bmba_d1 FROM s_detail1.*
             ATTRIBUTE(COUNT = g_rec_b_bmba1,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = l_allow_insert,
                     DELETE ROW = l_allow_delete,
                     APPEND ROW = l_allow_insert)
        
            #自訂ACTION
        
        
            BEFORE INPUT
               IF p_type!="all" THEN
                  EXIT DIALOG
               END IF
               CALL abmm200_b_fill_bmba1()
               LET g_rec_b_bmba1 = g_bmba_d1.getLength()
               IF g_rec_b_bmba1 != 0 THEN
                  CALL FGL_SET_ARR_CURR(l_ac)
               END IF

            BEFORE ROW
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac = ARR_CURR()
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac TO FORMONLY.idx
   
               CALL s_transaction_begin()
               OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abmm200_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
   
                  CLOSE abmm200_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
   
               #FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
               #IF SQLCA.sqlcode THEN
               #   #CALL cl_err(g_bmaa_m.bmaasite,SQLCA.sqlcode,1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code =  SQLCA.sqlcode
               #   LET g_errparam.extend = g_bmaa_m.bmaasite
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   CLOSE abmm200_cl
               #   CALL s_transaction_end('N','0')
               #   RETURN
               #END IF
   
               LET g_rec_b_bmba1 = g_bmba_d1.getLength()
               
               IF g_rec_b_bmba1 >= l_ac
                  AND NOT cl_null(g_bmba_d1[l_ac].bmba003)
                  AND g_bmba_d1[l_ac].bmba004 IS NOT NULL
                  AND NOT cl_null(g_bmba_d1[l_ac].bmba005)
                  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL
                  AND g_bmba_d1[l_ac].bmba008 IS NOT NULL
               THEN
                  LET l_cmd='u'
			         LET g_bmba_d1_t.* = g_bmba_d1[l_ac].*  #BACKUP
                  CALL abmm200_set_entry_b(l_cmd)
                  CALL abmm200_set_no_entry_b(l_cmd)
                  #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                  OPEN abmm200_bmba_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba005_2,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmba_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
              
                     LET l_lock_sw='Y'
                  ELSE
                     #FETCH abmm200_bmba_bcl INTO g_bmba.*
                     FETCH abmm200_bmba_bcl INTO g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                                                 g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                                                 g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                                                 g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                                                 g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                                                 g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                                                 g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmba_d1_t.bmba009
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
              
                        LET l_lock_sw = "Y"
                     ELSE
                        CALL abmm200_bmba_to1()
                     END IF
                     CALL cl_show_fld_cont()
                  END IF
               ELSE
                  LET l_cmd='a'
               END IF
               #其他table資料備份(確定是否更改用)
              
               #其他table進行lock


            BEFORE INSERT

               LET l_insert = TRUE
               LET l_n = ARR_COUNT()
               LET l_cmd = 'a'
               INITIALIZE g_bmba_d1[l_ac].* TO NULL
               INITIALIZE g_bmba.* TO NULL
               CALL g_imaa_r.clear()   #add 150420
               LET g_bmba_d1_t.* = g_bmba_d1[l_ac].*     #新輸入資料
               #初始值
               LET g_bmba_d1[l_ac].bmba005 = cl_get_current()  #生效日期
               LET g_bmba_d1[l_ac].bmba011 = 1                 #组成用量
               IF g_bmaa_m.bmaastus = 'Y' AND NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003 > 0 THEN
                  LET g_bmba_d1[l_ac].bmba011 = ''             #组成用量
               END IF
               IF cl_null(g_bmaa_m.bmaa003) OR g_bmaa_m.bmaa003<=0 THEN
                  LET g_bmba_d1[l_ac].bmba012 = 1                 #底数
               ELSE
                  LET g_bmba_d1[l_ac].bmba012 = g_bmaa_m.bmaa003  #底数
               END IF
               LET g_bmba_d1[l_ac].bmba027 = 'N'               #公式用量
               LET g_bmba_d1[l_ac].bmba028 = ''                #公式
               LET g_bmba_d1[l_ac].bmba013 = '1'               #必要
               LET g_bmba_d1[l_ac].bmba014 = 'N'               #特征
               LET g_bmba_d1[l_ac].bmba020 = 'N'               #可选件
               LET g_bmba_d1[l_ac].bmba025 = 'N'               #附属零件
               LET g_bmba_d1[l_ac].bmba018 = 'N'               #插件位置
               LET g_bmba_d1[l_ac].bmba019 = '1'               #参数研发中心
               #项次
               SELECT MAX(bmba009) INTO g_bmba_d1[l_ac].bmba009
                 FROM bmba_t
                WHERE bmbaent = g_enterprise
                  AND bmbasite= g_bmaa_m.bmaasite
                  AND bmba001 = g_bmaa_m.bmaa001
                  AND bmba002 = g_bmaa_m.bmaa002
               IF g_bmba_d1[l_ac].bmba009 IS NULL THEN
                  LET g_bmba_d1[l_ac].bmba009 = 0
               END IF
               CALL cl_get_para(g_enterprise,g_site,'E-BAS-0008') RETURNING l_ln
               IF cl_null(l_ln) OR l_ln=0 THEN LET l_ln = 1 END IF
               LET g_bmba_d1[l_ac].bmba009 = g_bmba_d1[l_ac].bmba009 + l_ln
                   
               CALL cl_show_fld_cont()
               CALL abmm200_set_entry_b(l_cmd)
               CALL abmm200_set_no_entry_b(l_cmd)
               NEXT FIELD bmba009

            AFTER INSERT
               LET l_insert = FALSE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  CANCEL INSERT
               END IF
               
               LET l_count = 1
               #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
               LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
               IF cl_null(g_bmba_d1[l_ac].bmba004) THEN #部位
                  LET g_bmba_d1[l_ac].bmba004 = ' '
               END IF
               IF cl_null(g_bmba_d1[l_ac].bmba007) THEN #作业
                  LET g_bmba_d1[l_ac].bmba007 = ' '
               END IF
               IF cl_null(g_bmba_d1[l_ac].bmba008) THEN #作业序
                  LET g_bmba_d1[l_ac].bmba008 = ' '
               END IF
               SELECT COUNT(*) INTO l_count FROM bmba_t
                WHERE bmbaent = g_enterprise AND bmbasite = g_bmaa_m.bmaasite
                  AND bmba001 = g_bmaa_m.bmaa001
                  AND bmba002 = g_bmaa_m.bmaa002
                  AND bmba003 = g_bmba_d1[l_ac].bmba003
                  AND bmba004 = g_bmba_d1[l_ac].bmba004
                  #AND bmba005 = g_bmba_d1[l_ac].bmba005
                  AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                  AND bmba007 = g_bmba_d1[l_ac].bmba007
                  AND bmba008 = g_bmba_d1[l_ac].bmba008
               #資料未重複, 插入新增資料
               IF l_count = 0 THEN
                  #检查是否有插件位置资料
                  CALL abmm200_get_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)  #重新获取bmba018
                     RETURNING g_bmba_d1[l_ac].bmba018
                  CALL abmm200_bmba_back1()
                  LET l_success_tot = TRUE
                  #INSERT INTO bmba_t VALUES(g_bmba.*)
                  INSERT INTO bmba_t(bmbaent,bmbasite,bmba001,bmba002,bmba003, 
                                     bmba004,bmba005,bmba006,bmba007,bmba008,
                                     bmba009,bmba010,bmba011,bmba012,bmba013,
                                     bmba014,bmba015,bmba016,bmba017,bmba018,
                                     bmba019,bmba020,bmba021,bmba022,bmba023,
                                     bmba024,bmba025,bmba026,bmba027,bmba028,
                                     bmba029,bmba030,bmba031,bmba032 )
                  VALUES (g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                          g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                          g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                          g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                          g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                          g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                          g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032 )
                  IF SQLCA.sqlcode  THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "INSERT bmba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF
                  #拋转已拋转过的bom
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     CALL s_abmm200_carry_bmba(g_bmba.*) RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
   
                  IF NOT cl_null(g_bmba_d1[l_ac].bmba_ooff013) THEN
                     #固定格式写法 不会随环境变动而改变 防止异常问题发生 一劳永逸
                     LET g_bmba005 = YEAR(g_bmba.bmba005) USING "####",'-',MONTH(g_bmba.bmba005) USING "&&",'-',DAY(g_bmba.bmba005) USING "&&",' ',TIME(g_bmba.bmba005)
                     #CALL s_aooi360_gen('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba.bmba003,g_bmba.bmba004,g_bmba005,g_bmba.bmba007,g_bmba.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013) #mark 150210
                     #CALL s_aooi360_gen('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba.bmba003,g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba007,g_bmba.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)
                     CALL s_aooi360_gen('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba.bmba003,g_bmba.bmba004,' ',g_bmba.bmba007,g_bmba.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013) #add 150210
                        RETURNING l_success
                     IF NOT l_success  THEN
                        LET l_success_tot = FALSE
                     END IF
                     #add 150310
                     #ooff
                     CALL s_abmm200_carry_ooff('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba.bmba003,g_bmba.bmba004,' ',g_bmba.bmba007,g_bmba.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)
                        RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                     #add 150310 end
                  END IF

                  #add 150420
                  IF g_imaa_r.getLength() > 1 THEN  #因為第一筆資料已呈現在畫面並寫入DB, 從第二筆開始處理
                     CALL abmm200_ins_bmba() RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  #add 150420 end
   
                  IF l_success_tot = FALSE THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  ELSE
                     CALL s_transaction_end('Y','0')
                     
                     #add 150527
                     #根据imaa036设置打开维护插件位置的作业
                     CALL abmm200_open_abmm202_2(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba.bmba003,g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba007,g_bmba.bmba008)
                     #维护拆件位置的时候，可能会更新组成用量，需重新刷新一下
                     SELECT bmba011 INTO g_bmba_d1[l_ac].bmba011 FROM bmba_t
                      WHERE bmbaent = g_enterprise
                        AND bmbasite= g_bmaa_m.bmaasite
                        AND bmba001 = g_bmaa_m.bmaa001
                        AND bmba002 = g_bmaa_m.bmaa002
                        AND bmba003 = g_bmba.bmba003 #項次
                        AND bmba004 = g_bmba.bmba004
                        AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmba007 = g_bmba.bmba007
                        AND bmba008 = g_bmba.bmba008
                     DISPLAY BY NAME g_bmba_d1[l_ac].bmba011
                     LET g_bmba.bmba011 = g_bmba_d1[l_ac].bmba011

                     #针对开窗多选的部分,从第二笔开始
                     IF g_bmba_key.getLength() > 1 THEN
                        FOR l_i = 2 TO g_bmba_key.getLength()
                           #根据imaa036设置打开维护插件位置的作业
                           CALL abmm200_open_abmm202_2(g_bmba_key[l_i].bmaasite,g_bmba_key[l_i].bmaa001,g_bmba_key[l_i].bmaa002,g_bmba_key[l_i].bmba003,g_bmba_key[l_i].bmba004,g_bmba_key[l_i].bmba005,g_bmba_key[l_i].bmba007,g_bmba_key[l_i].bmba008)
                        END FOR
                     END IF
                     #add 150527 end
                     
                     #ERROR 'INSERT O.K'
                     IF NOT cl_null(g_vdate) AND g_vdate_t = g_vdate THEN
                        LET g_vdate = cl_get_current()
                        LET g_vdate_t = g_vdate
                        DISPLAY g_vdate TO FORMONLY.vdate
                     END IF
                     LET g_rec_b_bmba1=g_rec_b_bmba1+1
                     #add 150420
                     IF g_imaa_r.getLength() > 1 THEN
                        LET g_rec_b_bmba1=g_rec_b_bmba1+g_imaa_r.getLength()-1
                        CALL abmm200_b_fill_bmba1()
                     END IF
                     CALL abmm200_idx_chk()  #zll
                     #add 150420 end
                  END IF
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00006"
                  LET g_errparam.extend = 'INSERT'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
   
                  INITIALIZE g_bmba_d1[l_ac].* TO NULL
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF
               CALL g_imaa_r.clear()  #add 150420
   

            BEFORE DELETE                            #是否取消單身
               IF NOT cl_null(g_bmba_d1[l_ac].bmba003)
                  AND g_bmba_d1_t.bmba004 IS NOT NULL
                  AND NOT cl_null(g_bmba_d1_t.bmba005)
                  AND g_bmba_d1_t.bmba007 IS NOT NULL
                  AND g_bmba_d1_t.bmba008 IS NOT NULL
                  THEN
         
                  IF NOT cl_ask_del_detail() THEN
                     CANCEL DELETE
                  END IF
                  IF l_lock_sw = "Y" THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code =  -263
                     LET g_errparam.extend = ""
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
         
                     CANCEL DELETE
                  END IF
         
                  LET l_success_tot = TRUE
                  #LET g_bmba005_2 = g_bmba_d1_t.bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
                  DELETE FROM bmba_t
                   WHERE bmbaent = g_enterprise
                     AND bmbasite = g_bmaa_m.bmaasite
                     AND bmba001 = g_bmaa_m.bmaa001
                     AND bmba002 = g_bmaa_m.bmaa002
                     AND bmba003 = g_bmba_d1_t.bmba003
                     AND bmba004 = g_bmba_d1_t.bmba004
                     #AND bmba005 = g_bmba_d1_t.bmba005
                     AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                     AND bmba007 = g_bmba_d1_t.bmba007
                     AND bmba008 = g_bmba_d1_t.bmba008
                  IF SQLCA.sqlcode THEN
                     LET l_success_tot = FALSE
                  END IF
                  #删除已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     #LET g_bmba005_2 = g_bmba_d1_t.bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
                     DELETE FROM bmba_t
                      WHERE bmbaent = g_enterprise
                        AND bmbasite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmbasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmba001 = g_bmaa_m.bmaa001
                        AND bmba002 = g_bmaa_m.bmaa002
                        AND bmba003 = g_bmba_d1_t.bmba003
                        AND bmba004 = g_bmba_d1_t.bmba004
                        #AND bmba005 = g_bmba_d1_t.bmba005
                        AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmba007 = g_bmba_d1_t.bmba007
                        AND bmba008 = g_bmba_d1_t.bmba008
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  #删除关联表
                  CALL abmm200_delete_key("b",g_bmaa_m.bmaasite) RETURNING l_success
                  IF NOT l_success THEN
                     LET l_success_tot = FALSE
                  END IF
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "DELETE bmba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
         
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  ELSE
                     LET g_rec_b_bmba1 = g_rec_b_bmba1-1
                     CALL s_transaction_end('Y','0')
                  END IF
         
                  CLOSE abmm200_bmba_bcl
                  LET l_count = g_bmba_d1.getLength()
                  
                     CALL abmm200_idx_chk()  #zll
               END IF

            BEFORE FIELD bmba009
               IF g_bmba_d1[l_ac].bmba009 IS NULL OR g_bmba_d1[l_ac].bmba009 = 0 THEN
                   SELECT MAX(bmba009) INTO g_bmba_d1[l_ac].bmba009
                     FROM bmba_t
                    WHERE bmbaent = g_enterprise
                      AND bmbasite= g_bmaa_m.bmaasite
                      AND bmba001 = g_bmaa_m.bmaa001
                      AND bmba002 = g_bmaa_m.bmaa002
                   IF g_bmba_d1[l_ac].bmba009 IS NULL THEN
                      LET g_bmba_d1[l_ac].bmba009 = 0
                   END IF
                   CALL cl_get_para(g_enterprise,g_site,'E-BAS-0008') RETURNING l_ln
                   IF cl_null(l_ln) OR l_ln=0 THEN LET l_ln = 1 END IF
                   LET g_bmba_d1[l_ac].bmba009 = g_bmba_d1[l_ac].bmba009 + l_ln
               END IF
         
            AFTER FIELD bmba009
               IF NOT cl_null(g_bmba_d1[l_ac].bmba009) THEN
                  IF g_bmba_d1[l_ac].bmba009 < 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'amm-00002'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD bmba009
                  END IF
               END IF
         
            AFTER FIELD bmba003
               IF NOT cl_null(g_bmba_d1[l_ac].bmba003) THEN
                  #元件不可與主件料號、聯產品、多產出主件相同
                  IF g_bmba_d1[l_ac].bmba003 = g_bmaa_m.bmaa001 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00063' #不可与主件料号相同
                     LET g_errparam.extend = g_bmba_d1[l_ac].bmba003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD bmba003
                  END IF
                  SELECT COUNT(*) INTO l_cnt FROM bmab_t
                   WHERE bmabent = g_enterprise
                     AND bmabsite= g_bmaa_m.bmaasite
                     AND bmab001 = g_bmaa_m.bmaa001
                     AND bmab002 = g_bmaa_m.bmaa002
                     AND bmab003 = g_bmba_d1[l_ac].bmba003
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00064'  #不可与联产品相同
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD bmba003
                  END IF
                  SELECT COUNT(*) INTO l_cnt FROM bmad_t
                   WHERE bmadent = g_enterprise
                     AND bmadsite= g_bmaa_m.bmaasite
                     AND bmad001 = g_bmaa_m.bmaa001
                     AND bmad002 = g_bmaa_m.bmaa002
                     AND bmad003 = g_bmba_d1[l_ac].bmba003
                  IF l_cnt > 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00065' #不可与多产出主件相同
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD bmba003
                  END IF
                  #检查料件是否有效存在与料件主档中
                  CALL s_aimm200_chk_item(g_bmba_d1[l_ac].bmba003) RETURNING l_success
                  IF l_success=FALSE THEN
                     NEXT FIELD bmba003
                  END IF
                  #141028 add
                  #范本料号不能存在于正式bom中
                  SELECT imaa004 INTO l_imaa004 FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_bmaa_m.bmaa001
                  IF l_imaa004 != 'T' THEN
                     SELECT imaa004 INTO l_imaa004_2 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmba_d1[l_ac].bmba003
                     IF l_imaa004_2 = 'T' THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'abm-00235'
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD bmba003
                     END IF
                  END IF
                  #141028 end
                  #检查key是否重复
                  #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                  IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005) AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                     IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d1[l_ac].bmba003 != g_bmba_d1_t.bmba003 OR g_bmba_d1[l_ac].bmba004 != g_bmba_d1_t.bmba004 OR g_bmba_d1[l_ac].bmba005 != g_bmba_d1_t.bmba005 OR g_bmba_d1[l_ac].bmba007 != g_bmba_d1_t.bmba007 OR g_bmba_d1[l_ac].bmba008 != g_bmba_d1_t.bmba008)) THEN
                        #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d1[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba005_2 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
     
                  #检查生命周期
                  CALL abmm200_chk_item_lifecycle(g_bmba_d1[l_ac].bmba003) RETURNING l_success
                  IF l_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
               
                  CALL abmm200_show_bmba003_desc1(l_ac,'i')
                  CALL abmm200_show_bmba_desc(l_ac)  #ooff
                  IF NOT cl_null(g_bmba_d1[l_ac].bmba003) THEN
                     #检查是否有取替代料
                     CALL abmm200_chk_replace()
                        RETURNING g_bmba_d1[l_ac].replace
                     DISPLAY BY NAME g_bmba_d1[l_ac].replace
                  END IF
               END IF
               #add 141028 fas 群组的控制
               CALL abmm200_set_entry_b(l_cmd)
               CALL abmm200_set_no_entry_b(l_cmd)
               #add 141028 fas 群组的控制--end
               
            AFTER FIELD bmba004
               IF cl_null(g_bmba_d1[l_ac].bmba004) THEN
                  LET g_bmba_d1[l_ac].bmba004 = ' '
               END IF
               
               #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
               LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
               IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005) AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d1[l_ac].bmba003 != g_bmba_d1_t.bmba003 OR g_bmba_d1[l_ac].bmba004 != g_bmba_d1_t.bmba004 OR g_bmba_d1[l_ac].bmba005 != g_bmba_d1_t.bmba005 OR g_bmba_d1[l_ac].bmba007 != g_bmba_d1_t.bmba007 OR g_bmba_d1[l_ac].bmba008 != g_bmba_d1_t.bmba008)) THEN
                     #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d1[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba005_2 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               
               IF NOT cl_null(g_bmba_d1[l_ac].bmba004) THEN
                  #检查是否存在部位档
                  SELECT * FROM oocq_t
                   WHERE oocqent = g_enterprise
                     AND oocq001 = '215'
                     AND oocq002 = g_bmba_d1[l_ac].bmba004
                     AND oocqstus= 'Y'
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00039'
                     LET g_errparam.extend = g_bmba_d1[l_ac].bmba004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bmba_d1[l_ac].bmba004 = g_bmba_d1_t.bmba004
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               CALL abmm200_show_bmba_desc(l_ac)  #ooff
               CALL abmm200_show_bmba004_desc1(l_ac)
   
            AFTER FIELD bmba007
               IF cl_null(g_bmba_d1[l_ac].bmba007) THEN
                  LET g_bmba_d1[l_ac].bmba007 = ' '
               END IF
   
               #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
               LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
               IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005) AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d1[l_ac].bmba003 != g_bmba_d1_t.bmba003 OR g_bmba_d1[l_ac].bmba004 != g_bmba_d1_t.bmba004 OR g_bmba_d1[l_ac].bmba005 != g_bmba_d1_t.bmba005 OR g_bmba_d1[l_ac].bmba007 != g_bmba_d1_t.bmba007 OR g_bmba_d1[l_ac].bmba008 != g_bmba_d1_t.bmba008)) THEN
                     #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d1[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba005_2 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
        
               IF NOT cl_null(g_bmba_d1[l_ac].bmba007) THEN
                  #检查是否存在作业档
                  SELECT * FROM oocq_t
                   WHERE oocqent = g_enterprise
                     AND oocq001 = '221'
                     AND oocq002 = g_bmba_d1[l_ac].bmba007
                     AND oocqstus= 'Y'
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00040'
                     LET g_errparam.extend = g_bmba_d1[l_ac].bmba007
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bmba_d1[l_ac].bmba007 = g_bmba_d1_t.bmba007
                     NEXT FIELD CURRENT
                  END IF
               END IF
               
               CALL abmm200_show_bmba_desc(l_ac)  #ooff
               CALL abmm200_show_bmba007_desc1(l_ac)
               
            AFTER FIELD bmba008 #製程段號
               IF cl_null(g_bmba_d1[l_ac].bmba008) THEN
                  LET g_bmba_d1[l_ac].bmba008 = ' '
               END IF
               #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
               LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
               IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005) AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d1[l_ac].bmba003 != g_bmba_d1_t.bmba003 OR g_bmba_d1[l_ac].bmba004 != g_bmba_d1_t.bmba004 OR g_bmba_d1[l_ac].bmba005 != g_bmba_d1_t.bmba005 OR g_bmba_d1[l_ac].bmba007 != g_bmba_d1_t.bmba007 OR g_bmba_d1[l_ac].bmba008 != g_bmba_d1_t.bmba008)) THEN
                     #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d1[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba005_2 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
               CALL abmm200_show_bmba_desc(l_ac)  #ooff
 
            AFTER FIELD bmba011  #组成用量
               IF NOT cl_null(g_bmba_d1[l_ac].bmba011) THEN
                  IF g_bmba_d1[l_ac].bmba011 < 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  
                  #IF g_bmaa_m.bmaastus = 'Y' THEN  #未审核的时候交给审核检查去卡控，已审核的需卡控一下
                  #   LET l_bmba011=0
                  #   LET g_today_dt = cl_get_current()
                  #   SELECT SUM(bmba011) INTO l_bmba011 FROM bmba_t
                  #    WHERE bmbaent = g_enterprise
                  #      AND bmbasite= g_bmaa_m.bmaasite
                  #      AND bmba001 = g_bmaa_m.bmaa001
                  #      AND bmba002 = g_bmaa_m.bmaa002
                  #      #AND bmba005<= g_today_dt
                  #      #AND (bmba006> g_today_dt OR bmba006 IS NULL )
                  #      AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss')<= g_today_dt
                  #      AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss')> g_today_dt OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )
                  #   IF cl_null(l_bmba011) THEN LET l_bmba011 = 0 END IF
                  #   IF l_cmd = 'a' THEN
                  #      LET l_bmba011 = l_bmba011 + g_bmba_d1[l_ac].bmba011
                  #   ELSE
                  #      LET l_bmba011 = l_bmba011 - g_bmba_d1_t.bmba011 + g_bmba_d1[l_ac].bmba011
                  #   END IF 
                  #   IF l_bmba011 != g_bmaa_m.bmaa003 THEN
                  #      #單頭批次數量與單身組成用量加總不一致,請確認！(審核狀態下可先清空單頭批次數量，修改完單身組成用量后再修改單頭批次數量)
                  #      INITIALIZE g_errparam TO NULL
                  #      LET g_errparam.code = 'abm-00062'
                  #      LET g_errparam.extend = ''
                  #      LET g_errparam.popup = TRUE
                  #      CALL cl_err()
                  #      NEXT FIELD CURRENT
                  #   END IF
                  #END IF
                  #mark 移到整个输入结束后判断EXIT DIALOG
   
                  #IF NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003 != g_bmba_d1[l_ac].bmba012 THEN
                  #   #單頭批次數量與單身主件底數不一致
                  #   INITIALIZE g_errparam TO NULL
                  #   LET g_errparam.code = 'abm-00060'
                  #   LET g_errparam.extend = ''
                  #   LET g_errparam.popup = TRUE
                  #   CALL cl_err()
                  #   NEXT FIELD CURRENT
                  #END IF
                  #mark 移到整个输入结束后判断EXIT DIALOG
               END IF
              
            AFTER FIELD bmba012  #底数
               IF NOT cl_null(g_bmba_d1[l_ac].bmba012) THEN
                  IF g_bmba_d1[l_ac].bmba012 <= 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00042'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  #IF NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003 != g_bmba_d1[l_ac].bmba012 THEN
                  #   INITIALIZE g_errparam TO NULL
                  #   LET g_errparam.code = 'abm-00060'
                  #   LET g_errparam.extend = ''
                  #   LET g_errparam.popup = TRUE
                  #   CALL cl_err()
                  #   NEXT FIELD CURRENT
                  #END IF
                  #mark 移到整个输入结束后判断EXIT DIALOG
               END IF
           
            AFTER FIELD bmba010 #发料单位
               IF NOT cl_null(g_bmba_d1[l_ac].bmba010) THEN
                  #校验带值说明
                  INITIALIZE g_chkparam.* TO NULL
                  LET g_chkparam.arg1 = g_bmba_d1[l_ac].bmba010
                  IF cl_chk_exist_and_ref_val("v_ooca001_1") THEN
                     ##檢查成功時後續處理
                     #LET g_bmba_d1[l_ac].bmba010_desc = g_chkparam.return1
                     #DISPLAY BY NAME g_bmba_d1[l_ac].bmba010_desc
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmba_d1[l_ac].bmba010 = g_bmba_d1_t.bmba010
                     NEXT FIELD CURRENT
                  END IF
                  ##存在单位资料表中
                  #SELECT oocastus FROM ooca_t
                  # WHERE oocaent = g_enterprise
                  #   AND ooca001 = g_bmba_d1[l_ac].bmba010
                  #   AND oocastus= 'Y'
                  #IF SQLCA.sqlcode THEN
                  #   #CALL cl_err(g_bmba_d1[l_ac].bmba010,SQLCA.sqlcode,1)
                  #   INITIALIZE g_errparam TO NULL
                  #   LET g_errparam.code = SQLCA.sqlcode
                  #   LET g_errparam.extend = g_bmba_d1[l_ac].bmba010
                  #   LET g_errparam.popup = TRUE
                  #   CALL cl_err()
                  #   NEXT FIELD CURRENT
                  #END IF
                  #与料件库存单位有换算率
                  #CALL abmm200_chk_ucr(g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba010) RETURNING l_success
                  #与料件基础单位有换算率
                  CALL s_aimi190_chk_base_convert(g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba010) RETURNING l_success
                  IF l_success = FALSE THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF

            AFTER FIELD bmba005 #生效日期
               IF NOT cl_null (g_bmba_d1[l_ac].bmba005) THEN
                  IF NOT cl_null(g_bmba_d1[l_ac].bmba006) THEN
                     IF g_bmba_d1[l_ac].bmba005 > g_bmba_d1[l_ac].bmba006 THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'ais-00047' #生效日期不可大于失效日期
                        LET g_errparam.extend = ''
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        NEXT FIELD CURRENT
                     END IF
                  END IF
                  #LET g_bmba005_2 = g_bmba_d1[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
                  IF NOT cl_null(g_bmaa_m.bmaasite) AND NOT cl_null(g_bmaa_m.bmaa001) AND g_bmaa_m.bmaa002 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005) AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                     IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmba_d1[l_ac].bmba003 != g_bmba_d1_t.bmba003 OR g_bmba_d1[l_ac].bmba004 != g_bmba_d1_t.bmba004 OR g_bmba_d1[l_ac].bmba005 != g_bmba_d1_t.bmba005 OR g_bmba_d1[l_ac].bmba007 != g_bmba_d1_t.bmba007 OR g_bmba_d1[l_ac].bmba008 != g_bmba_d1_t.bmba008)) THEN
                        #IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "bmba005 = '"||g_bmba_d1[l_ac].bmba005 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                        IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmba_t WHERE "||"bmbaent = '" ||g_enterprise|| "' AND "||"bmbasite = '"||g_bmaa_m.bmaasite ||"' AND "|| "bmba001 = '"||g_bmaa_m.bmaa001 ||"' AND "|| "bmba002 = '"||g_bmaa_m.bmaa002 ||"' AND "|| "bmba003 = '"||g_bmba_d1[l_ac].bmba003 ||"' AND "|| "bmba004 = '"||g_bmba_d1[l_ac].bmba004 ||"' AND "|| "to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = '"||g_bmba005_2 ||"' AND "|| "bmba007 = '"||g_bmba_d1[l_ac].bmba007 ||"' AND "|| "bmba008 = '"||g_bmba_d1[l_ac].bmba008 ||"'",'std-00004',1) THEN
                           NEXT FIELD CURRENT
                        END IF
                     END IF
                  END IF
               
                  CALL abmm200_show_bmba_desc(l_ac)  #ooff
             
                  #zll 记录到时间处理
               END IF

            AFTER FIELD bmba006 #失效日期
               IF NOT cl_null(g_bmba_d1[l_ac].bmba005) THEN
                  IF g_bmba_d1[l_ac].bmba005 > g_bmba_d1[l_ac].bmba006 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'ais-00048' #失效日期不可小于生效日期
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
         
            AFTER FIELD bmba027  #公式用量
               IF NOT cl_null (g_bmba_d1[l_ac].bmba027) THEN
                  IF g_bmba_d1[l_ac].bmba027 = 'Y' AND NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmba_d1[l_ac].bmba003)
                     AND (cl_null(g_bmba_d1_t.bmba027) OR g_bmba_d1_t.bmba027 = 'N')
                  THEN
                     CALL abmm200_01(g_bmaa_m.bmaa001,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba028) RETURNING g_bmba_d1[l_ac].bmba028
                     DISPLAY g_bmba_d1[l_ac].bmba028 TO bmba028
                     IF cl_null(g_bmba_d1[l_ac].bmba028) THEN
                        LET g_bmba_d1[l_ac].bmba027 = 'N'
                     END IF
                  END IF
                  IF g_bmba_d1[l_ac].bmba027 = 'N' THEN
                     LET g_bmba_d1[l_ac].bmba028 = ''
                  END IF
               END IF
            
            AFTER FIELD bmba013  #必要
               #IF cl_null (g_bmba_d1[l_ac].bmba013) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
            
            AFTER FIELD bmba014  #特征
               IF NOT cl_null (g_bmba_d1[l_ac].bmba014) THEN
                  IF g_bmba_d1[l_ac].bmba014 = 'Y' THEN
                     #由未勾選狀態改為勾選以後
                     IF g_bmba_d1_t.bmba014 = 'N' THEN
                        #是否維護特徵管理資料？請確認！
                        IF cl_ask_confirm('abm-00017') THEN
                           #LET l_msg = "abmm203 '",g_site,"' '",g_bmaa_m.bmaa001,"' '",g_bmaa_m.bmaa002,"' '",g_bmba_d1[l_ac].bmba003,"'"
                           #CALL cl_cmdrun(l_msg)
                           INITIALIZE la_param.* TO NULL
                           LET la_param.prog = "abmm203"
                           #LET la_param.param[1] = g_site  #azzi910中
                           LET la_param.param[1] = g_bmaa_m.bmaa001
                           LET la_param.param[2] = g_bmaa_m.bmaa002
                           LET la_param.param[3] = g_bmba_d1[l_ac].bmba003
                           LET ls_js = util.JSON.stringify(la_param)
                           DISPLAY ls_js
                           CALL cl_cmdrun(ls_js)
                        END IF
                     END IF
                  END IF
               END IF
         
            AFTER FIELD bmba020  #可选件
               #IF cl_null (g_bmba_d1[l_ac].bmba020) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
            
            AFTER FIELD bmba017  #FAS选择群组
               IF NOT cl_null(g_bmba_d1[l_ac].bmba017) THEN
                  CALL s_azzi650_chk_exist('1112',g_bmba_d1[l_ac].bmba017) RETURNING l_success
                  IF NOT l_success THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL s_desc_get_acc_desc('1112',g_bmba_d1[l_ac].bmba017) RETURNING g_bmba_d1[l_ac].bmba017_desc
               DISPLAY BY NAME g_bmba_d1[l_ac].bmba017_desc
       
            AFTER FIELD bmba025  #附属零件
               #IF cl_null (g_bmba_d1[l_ac].bmba025) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
            
           #AFTER FIELD bmba018  #插件位置
           #   IF cl_null (g_bmba_d1[l_ac].bmba018) THEN
           #      #CALL cl_err('','aoo-00018',1)
           #      INITIALIZE g_errparam TO NULL
           #      LET g_errparam.code = 'aoo-00018'
           #      LET g_errparam.extend = ''
           #      LET g_errparam.popup = TRUE
           #      CALL cl_err()
           #      NEXT FIELD CURRENT
           #   END IF
         
           
            ON ACTION controlp INFIELD bmba003
               #add 150420 
               IF l_cmd = 'a' THEN
                  #多选
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'c'
                  LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_bmba_d1[l_ac].bmba003             #給予default值
                  #增加AFTER FIELD 过滤条件
                  #元件不可與主件料號、聯產品、多產出主件相同
                  LET g_qryparam.where = "     imaa001 !='",g_bmaa_m.bmaa001,"' ", 
                                         " AND imaastus = 'Y' ",
                                         " AND imaa001 NOT IN (select unique bmab003 from bmab_t ",
                                         "                      where bmabent = ",g_enterprise,
                                         "                        and bmabsite='",g_bmaa_m.bmaasite,"' ",
                                         "                        and bmab001 ='",g_bmaa_m.bmaa001,"' ",
                                         "                        and bmab002 ='",g_bmaa_m.bmaa002,"')",
                                         " AND imaa001 NOT IN (select unique bmad003 from bmad_t ",
                                         "                      where bmadent = ",g_enterprise,
                                         "                        and bmadsite='",g_bmaa_m.bmaasite,"' ",
                                         "                        and bmad001 ='",g_bmaa_m.bmaa001,"' ",
                                         "                        and bmad002 ='",g_bmaa_m.bmaa002,"')"
                  #范本料号不能存在于正式bom中
                  SELECT imaa004 INTO l_imaa004 FROM imaa_t
                   WHERE imaaent = g_enterprise
                     AND imaa001 = g_bmaa_m.bmaa001
                  IF l_imaa004 != 'T' THEN
                     LET g_qryparam.where = g_qryparam.where CLIPPED," AND imaa004 != 'T' "
                  END IF
                  #檢查生命週期 太复杂，开窗不筛选，再每笔检查

                  #給予arg
                  CALL q_imaa001()                                #呼叫開窗
                  CALL abmm200_split()     #拆分&插入的动作
                  LET g_bmba_d1[l_ac].bmba003 = g_imaa_r[1].imaa001             #將開窗取得的值回傳到變數
                  DISPLAY g_bmba_d1[l_ac].bmba003 TO bmba003              #顯示到畫面上
                  CALL abmm200_show_bmba003_desc1(l_ac,'s')
                  NEXT FIELD bmba003                          #返回原欄位
               ELSE
               #add 150420 end
                  #開窗i段
                  INITIALIZE g_qryparam.* TO NULL
                  LET g_qryparam.state = 'i'
                  LET g_qryparam.reqry = FALSE
                  LET g_qryparam.default1 = g_bmba_d1[l_ac].bmba003             #給予default值
                  #給予arg
                  CALL q_imaa001()                                #呼叫開窗
                  LET g_bmba_d1[l_ac].bmba003 = g_qryparam.return1              #將開窗取得的值回傳到變數
                  DISPLAY g_bmba_d1[l_ac].bmba003 TO bmba003              #顯示到畫面上
                  CALL abmm200_show_bmba003_desc1(l_ac,'s')
                  NEXT FIELD bmba003                          #返回原欄位
               END IF  #add 150420

            ON ACTION controlp INFIELD bmba004
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmba_d1[l_ac].bmba004             #給予default值
               #給予arg
               LET g_qryparam.arg1 = "215" #應用分類
               CALL q_oocq002()                                #呼叫開窗
               LET g_bmba_d1[l_ac].bmba004 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmba_d1[l_ac].bmba004 TO bmba004              #顯示到畫面上
               CALL abmm200_show_bmba004_desc1(l_ac)
               NEXT FIELD bmba004                          #返回原欄位

            ON ACTION controlp INFIELD bmba007
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmba_d1[l_ac].bmba007             #給予default值
               #給予arg
               LET g_qryparam.arg1 = "221" #應用分類
               CALL q_oocq002()                                #呼叫開窗
               LET g_bmba_d1[l_ac].bmba007 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmba_d1[l_ac].bmba007 TO bmba007              #顯示到畫面上
               CALL abmm200_show_bmba007_desc1(l_ac)
               NEXT FIELD bmba007                          #返回原欄位
         
            ON ACTION controlp INFIELD bmba010
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmba_d1[l_ac].bmba010             #給予default值
               #給予arg
               CALL q_ooca001_1()                                #呼叫開窗
               LET g_bmba_d1[l_ac].bmba010 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmba_d1[l_ac].bmba010 TO bmba010              #顯示到畫面上
               NEXT FIELD bmba010                          #返回原欄位
         
            ON ACTION controlp INFIELD bmba017
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmba_d1[l_ac].bmba017             #給予default值
               LET g_qryparam.arg1 = '1112'
               CALL q_oocq002_5()                               #呼叫開窗
               LET g_bmba_d1[l_ac].bmba017 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmba_d1[l_ac].bmba017 TO bmba017              #顯示到畫面上
               
               CALL s_desc_get_acc_desc('1112',g_bmba_d1[l_ac].bmba017) RETURNING g_bmba_d1[l_ac].bmba017_desc
               DISPLAY BY NAME g_bmba_d1[l_ac].bmba017_desc
               
               NEXT FIELD bmba017                           #返回原欄位
         
            ON ACTION controlp INFIELD bmba_ooff013  #备注
               LET g_bmba005 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
               #CALL s_aooi360_edit('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)  #mark 150210
               #CALL s_aooi360_edit('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013) 
               CALL s_aooi360_edit('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,' ',g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)  #add 150210
                  RETURNING g_bmba_d1[l_ac].bmba_ooff013
               DISPLAY g_bmba_d1[l_ac].bmba_ooff013 TO bmba_ooff013              #顯示到畫面上
               NEXT FIELD bmba_ooff013                          #返回原欄位

            #取替代维护
            ON ACTION abmm207
               IF NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005)  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                  
                  INITIALIZE la_param.* TO NULL
                  CASE g_prog
                     WHEN "abmm200"
                          LET la_param.prog = "abmm207"
                     WHEN "abmm210"
                          LET la_param.prog = "abmm217"
                  END CASE
                  #LET g_bmba005_2 = g_bmba_d2[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d2[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d2[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d2[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d2[l_ac].bmba005)
                  LET la_param.param[1] = g_bmaa_m.bmaasite  #azzi910中维护
                  LET la_param.param[2] = g_bmaa_m.bmaa001
                  LET la_param.param[3] = g_bmaa_m.bmaa002
                  LET la_param.param[4] = g_bmba_d2[l_ac].bmba003
                  LET la_param.param[5] = g_bmba_d2[l_ac].bmba004
                  #LET la_param.param[6] = g_bmba005_2  #g_bmba_d2[l_ac].bmba005
                  LET la_param.param[6] = g_bmba_d2[l_ac].bmba007
                  LET la_param.param[7] = g_bmba_d2[l_ac].bmba008
                  LET ls_js = util.JSON.stringify(la_param)
                  DISPLAY ls_js
                  CALL cl_cmdrun_wait(ls_js)
                  
                  #检查是否有取替代料
                  CALL abmm200_chk_replace()
                       RETURNING g_bmba_d1[l_ac].replace
                  DISPLAY BY NAME g_bmba_d1[l_ac].replace
               END IF

            #插件位置维护
            ON ACTION abmm202
               IF NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005)  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                  #打开作业维护插件位置的作业
                  CALL abmm200_open_abmm202(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
                  #检查是否有插件位置资料
                  CALL abmm200_get_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)  #重新获取bmba018
                     RETURNING g_bmba_d1[l_ac].bmba018
                  DISPLAY g_bmba_d1[l_ac].bmba018 TO bmba018
                  
                  #add 150527
                  #维护拆件位置的时候，可能会更新组成用量，需重新刷新一下
                  SELECT bmba011 INTO g_bmba_d1[l_ac].bmba011 FROM bmba_t
                   WHERE bmbaent = g_enterprise
                     AND bmbasite= g_bmaa_m.bmaasite
                     AND bmba001 = g_bmaa_m.bmaa001
                     AND bmba002 = g_bmaa_m.bmaa002
                     AND bmba003 = g_bmba_d1[l_ac].bmba003
                     AND bmba004 = g_bmba_d1[l_ac].bmba004
                     AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                     AND bmba007 = g_bmba_d1[l_ac].bmba007
                     AND bmba008 = g_bmba_d1[l_ac].bmba008
                  DISPLAY BY NAME g_bmba_d1[l_ac].bmba011
                  #add 150527 end
               END IF
           
            #特征管理维护
            ON ACTION abmm203
               IF NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba004 IS NOT NULL AND NOT cl_null(g_bmba_d1[l_ac].bmba005)  AND g_bmba_d1[l_ac].bmba007 IS NOT NULL AND g_bmba_d1[l_ac].bmba008 IS NOT NULL THEN
                  INITIALIZE la_param.* TO NULL
                  CASE g_prog
                     WHEN "abmm200"
                          LET la_param.prog = "abmm203"
                          #LET g_bmba005_2 = g_bmba_d2[l_ac].bmba005
                          LET g_bmba005_2 = YEAR(g_bmba_d2[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d2[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d2[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d2[l_ac].bmba005)
                          #LET la_param.param[1] = g_bmaa_m.bmaasite  #azzi910中
                          LET la_param.param[1] = g_bmaa_m.bmaa001
                          LET la_param.param[2] = g_bmaa_m.bmaa002
                          LET la_param.param[3] = g_bmba_d2[l_ac].bmba003
                          LET la_param.param[4] = g_bmba_d2[l_ac].bmba004
                          LET la_param.param[5] = g_bmba005_2  #g_bmba_d2[l_ac].bmba005
                          LET la_param.param[6] = g_bmba_d2[l_ac].bmba007
                          LET la_param.param[7] = g_bmba_d2[l_ac].bmba008
                     WHEN "abmm210"
                          LET la_param.prog = "abmm213"
                          #LET g_bmba005_2 = g_bmba_d2[l_ac].bmba005
                          LET g_bmba005_2 = YEAR(g_bmba_d2[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d2[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d2[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d2[l_ac].bmba005)
                          LET la_param.param[1] = g_bmaa_m.bmaasite  #azzi910中
                          LET la_param.param[2] = g_bmaa_m.bmaa001
                          LET la_param.param[3] = g_bmaa_m.bmaa002
                          LET la_param.param[4] = g_bmba_d2[l_ac].bmba003
                          LET la_param.param[5] = g_bmba_d2[l_ac].bmba004
                          LET la_param.param[6] = g_bmba005_2  #g_bmba_d2[l_ac].bmba005
                          LET la_param.param[7] = g_bmba_d2[l_ac].bmba007
                          LET la_param.param[8] = g_bmba_d2[l_ac].bmba008
                  END CASE
                  LET ls_js = util.JSON.stringify(la_param)
                  DISPLAY ls_js
                  CALL cl_cmdrun(ls_js)
               END IF
               NEXT FIELD bmba014
               
            #明细操作-公式用量
            ON ACTION abmm200_01
               IF NOT cl_null(g_bmaa_m.bmaa001) AND NOT cl_null(g_bmba_d1[l_ac].bmba003) AND g_bmba_d1[l_ac].bmba027='Y' THEN
                  CALL abmm200_01(g_bmaa_m.bmaa001,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba028) RETURNING g_bmba_d1[l_ac].bmba028
                  DISPLAY g_bmba_d1[l_ac].bmba028 TO bmba028
               END IF
               NEXT FIELD bmba027
               
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  LET g_bmba_d1[l_ac].* = g_bmba_d1_t.*
                  CLOSE abmm200_bmba_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
        
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = -263
                  LET g_errparam.extend = g_bmba_d1[l_ac].bmba003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmba_d1[l_ac].* = g_bmba_d1_t.*
               ELSE
                  #检查是否有插件位置资料
                  CALL abmm200_get_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)  #重新获取bmba018
                     RETURNING g_bmba_d1[l_ac].bmba018
                  CALL abmm200_bmba_back1()
                  #LET g_bmba005_2 = g_bmba_d1_t.bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
                  #UPDATE bmba_t SET * = g_bmba.*
                  UPDATE bmba_t SET (bmbaent,bmbasite,bmba001,bmba002,bmba003, 
                                     bmba004,bmba005,bmba006,bmba007,bmba008,
                                     bmba009,bmba010,bmba011,bmba012,bmba013,
                                     bmba014,bmba015,bmba016,bmba017,bmba018,
                                     bmba019,bmba020,bmba021,bmba022,bmba023,
                                     bmba024,bmba025,bmba026,bmba027,bmba028,
                                     bmba029,bmba030,bmba031,bmba032 )
                                  = (g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                                     g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                                     g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                                     g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                                     g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                                     g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                                     g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032 )
                   WHERE bmbaent = g_enterprise
                     AND bmbasite= g_bmaa_m.bmaasite
                     AND bmba001 = g_bmaa_m.bmaa001
                     AND bmba002 = g_bmaa_m.bmaa002
                     AND bmba003 = g_bmba_d1_t.bmba003 #項次
                     AND bmba004 = g_bmba_d1_t.bmba004
                     #AND bmba005 = g_bmba_d1_t.bmba005
                     AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                     AND bmba007 = g_bmba_d1_t.bmba007
                     AND bmba008 = g_bmba_d1_t.bmba008
                  IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE bmba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bmba_d1[l_ac].* = g_bmba_d1_t.*
                     CALL s_transaction_end('N','0')
                  ELSE
                     LET l_success_tot = TRUE
                     
                     #add 150527
                     #插件位置与组成用量不一致的时候跳出插件位置作业供维护（ima037='Y'的前提下）
                     CALL s_abmm200_chk_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba.bmba003,g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba007,g_bmba.bmba008,'',g_bmba.bmba011)
                        RETURNING l_equal  #TRUE/FALSE：一致/不一致
                     IF NOT l_equal THEN  #不一致
                        #组件料号资料的组装位置需勾稽(imaa037)=Y时，需检查单身数量加总等于组成用量(bmba011)
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = 'abm-00076'
                        LET g_errparam.extend = g_bmba.bmba003
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                     END IF
                     #add 150527 end
                  
                     #更新已拋转资料
                     IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                        #bmba
                        #产品分类
                        LET l_imaa009=''
                        SELECT imaa009 INTO l_imaa009 FROM imaa_t
                         WHERE imaaent = g_enterprise
                           AND imaa001 = g_bmaa_m.bmaa001
                        #LET g_bmba005_2 = g_bmba_d1_t.bmba005
                        LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
                        UPDATE bmba_t SET (bmba009,bmba003,bmba004,bmba007,bmba008,
                                           bmba011,bmba012,bmba010,bmba005,bmba006,
                                           bmba027,bmba028,bmba013,bmba014,bmba020,
                                           bmba017,bmba025,bmba018,bmba026,bmba019)
                                        = (g_bmba.bmba009,g_bmba.bmba003,g_bmba.bmba004,g_bmba.bmba007,g_bmba.bmba008,
                                           g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba010,g_bmba.bmba005,g_bmba.bmba006,
                                           g_bmba.bmba027,g_bmba.bmba028,g_bmba.bmba013,g_bmba.bmba014,g_bmba.bmba020,
                                           g_bmba.bmba017,g_bmba.bmba025,g_bmba.bmba018,g_bmba.bmba026,g_bmba.bmba019)
                         WHERE bmbaent = g_enterprise
                           AND bmbasite!= g_bmaa_m.bmaasite
                           #mark 141231
                           #AND bmbasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                           #                   where ooefent = g_enterprise
                           #                         #满足aimi150中的产品分类页签
                           #                     and (ooef001 IN (select unique imda001 from imda_t 
                           #                                       where imdaent = g_enterprise
                           #                                         and imdastus= 'Y'             #有效的
                           #                                         and imda005 = 'Y'             #BOM引入
                           #                                         and imda003 = '1'             #自动引入
                           #                                         #and imda002 = l_imaa009)      #产品分类
                           #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                           #                        OR 
                           #                         #满足aimi150中的料件页签
                           #                          ooef001 IN (select unique imdb001 from imdb_t 
                           #                                       where imdbent = g_enterprise
                           #                                         and imdbstus= 'Y'             #有效的
                           #                                         and imdb005 = 'Y'             #BOM引入
                           #                                         and imdb003 = '1'             #自动引入
                           #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                           #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                           #                                     )
                           #                          )
                           #                  )
                           #mark 141231
                           AND bmba001 = g_bmaa_m.bmaa001
                           AND bmba002 = g_bmaa_m.bmaa002
                           AND bmba003 = g_bmba_d1_t.bmba003 #項次
                           AND bmba004 = g_bmba_d1_t.bmba004
                           #AND bmba005 = g_bmba_d1_t.bmba005
                           AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                           AND bmba007 = g_bmba_d1_t.bmba007
                           AND bmba008 = g_bmba_d1_t.bmba008
                        IF SQLCA.sqlcode THEN
                           LET l_success_tot = FALSE
                        END IF
                        
                        #add 150310
                        #ooff
                        CALL s_abmm200_carry_ooff('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,' ',g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)
                           RETURNING l_success
                        IF NOT l_success THEN
                           LET l_success_tot = FALSE
                        END IF
                        #add 150310 end
                     END IF
            
                     #ooff资料
                     LET g_bmba005 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
                     IF NOT cl_null(g_bmba_d1[l_ac].bmba_ooff013) THEN
                        #CALL s_aooi360_gen('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,g_bmba005,g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013) #mod 150210
                        #CALL s_aooi360_gen('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,g_bmba_d1_t.bmba005,g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013)
                        CALL s_aooi360_gen('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,' ',g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4',g_bmba_d1[l_ac].bmba_ooff013) #add 150210
                           RETURNING l_success
                     ELSE
                        #CALL s_aooi360_del('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,g_bmba005,g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4') #mark 150210
                        #CALL s_aooi360_del('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,g_bmba_d1_t.bmba005,g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4')
                        CALL s_aooi360_del('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,' ',g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4') #add 150210
                           RETURNING l_success
                     END IF
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
            
                     #关联表key值同步变更
                     CALL abmm200_update_key("b") RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                     
                     IF l_success_tot = FALSE THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "UPDATE bmba_t"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET g_bmba_d1[l_ac].* = g_bmba_d1_t.*
                        CALL s_transaction_end('N','0')
                     END IF
                  END IF
               END IF
   
            AFTER ROW
               IF p_cmd = 'u' THEN 
                  CLOSE abmm200_bmba_bcl
               END IF
               CALL s_transaction_end('Y','0')
   
            AFTER INPUT
               #LET l_bmba011=0
               #LET g_today_dt = cl_get_current()
               #SELECT SUM(bmba011) INTO l_bmba011 FROM bmba_t
               # WHERE bmbaent = g_enterprise
               #   AND bmbasite= g_bmaa_m.bmaasite
               #   AND bmba001 = g_bmaa_m.bmaa001
               #   AND bmba002 = g_bmaa_m.bmaa002
               #   #AND bmba005<= g_today_dt
               #   #AND (bmba006> g_today_dt OR bmba006 IS NULL )
               #   AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss')<= g_today_dt
               #   AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss')> g_today_dt OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )
               #IF cl_null(l_bmba011) THEN LET l_bmba011 = 0 END IF
               #IF l_bmba011 != g_bmaa_m.bmaa003 THEN
               #   #單頭批次數量與單身組成用量加總不一致,請確認！(審核狀態下可先清空單頭批次數量，修改完單身組成用量后再修改單頭批次數量)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'abm-00062'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD bmba011
               #END IF
               #mark 移到整个输入结束后判断EXIT DIALOG
         END INPUT
   
         #生管资料
         INPUT ARRAY g_bmba_d2 FROM s_detail2.*
             ATTRIBUTE(COUNT = g_rec_b_bmba2,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = FALSE,DELETE ROW = FALSE,APPEND ROW = FALSE)
   
            #自訂ACTION
   
            BEFORE INPUT
               IF p_type!="all" AND p_type!="pc" THEN
                  EXIT DIALOG
               END IF
               CALL abmm200_b_fill_bmba2()
               LET g_rec_b_bmba2 = g_bmba_d2.getLength()
               IF g_rec_b_bmba2 != 0 THEN
                  CALL FGL_SET_ARR_CURR(l_ac)
               END IF
   
            BEFORE ROW
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac = ARR_CURR()
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac TO FORMONLY.idx
   
               CALL s_transaction_begin()
               OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abmm200_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CLOSE abmm200_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
   
               #FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
               #IF SQLCA.sqlcode THEN
               #   #CALL cl_err(g_bmaa_m.bmaasite,SQLCA.sqlcode,1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code =  SQLCA.sqlcode
               #   LET g_errparam.extend = g_bmaa_m.bmaasite
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   CLOSE abmm200_cl
               #   CALL s_transaction_end('N','0')
               #   RETURN
               #END IF
   
               LET g_rec_b_bmba2 = g_bmba_d2.getLength()
   
               IF g_rec_b_bmba2 >= l_ac
                  AND NOT cl_null(g_bmba_d2[l_ac].bmba003)
                  AND g_bmba_d2[l_ac].bmba004 IS NOT NULL
                  AND NOT cl_null(g_bmba_d2[l_ac].bmba005)
                  AND g_bmba_d2[l_ac].bmba007 IS NOT NULL
                  AND g_bmba_d2[l_ac].bmba008 IS NOT NULL
               THEN
                  LET l_cmd='u'
		   	   LET g_bmba_d2_t.* = g_bmba_d2[l_ac].*  #BACKUP
                  CALL abmm200_set_entry_b(l_cmd)
                  CALL abmm200_set_no_entry_b(l_cmd)
                  #LET g_bmba005_2 = g_bmba_d2[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d2[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d2[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d2[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d2[l_ac].bmba005)
                  OPEN abmm200_bmba_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d2[l_ac].bmba003,g_bmba_d2[l_ac].bmba004,g_bmba005_2,g_bmba_d2[l_ac].bmba007,g_bmba_d2[l_ac].bmba008
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmba_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  ELSE
                     #FETCH abmm200_bmba_bcl INTO g_bmba.*
                     FETCH abmm200_bmba_bcl INTO g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                                                 g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                                                 g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                                                 g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                                                 g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                                                 g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                                                 g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032 
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmba_d2_t.bmba009
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET l_lock_sw = "Y"
                     ELSE
                        CALL abmm200_bmba_to2()
                     END IF
                     CALL cl_show_fld_cont()
                  END IF
               ELSE
                  LET l_cmd='a'
               END IF
   
            AFTER FIELD bmba021  #工单展开选项
               #IF cl_null (g_bmba_d2[l_ac].bmba021) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
          
            AFTER FIELD bmba022  #代买料
               #IF cl_null (g_bmba_d2[l_ac].bmba022) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
          
            AFTER FIELD bmba024  #主要替代料
               IF NOT cl_null(g_bmba_d2[l_ac].bmba024) THEN
                  
                  #如果主件不是ALL，那么判断时候需要依据所有的关键字，
                  #如果主件是ALL的话，所有关键字都可以忽略，只需要判断元件就ok
                  IF cl_null(g_bmba_d2[l_ac].bmba004) THEN
                     LET l_bmba004 = ' '
                  ELSE
                     LET l_bmba004 = g_bmba_d2[l_ac].bmba004
                  END IF
                  IF cl_null(g_bmba_d2[l_ac].bmba007) THEN
                     LET l_bmba007 = ' '
                  ELSE
                     LET l_bmba007 = g_bmba_d2[l_ac].bmba007
                  END IF
                  IF cl_null(g_bmba_d2[l_ac].bmba008) THEN
                     LET l_bmba008 = ' '
                  ELSE
                     LET l_bmba008 = g_bmba_d2[l_ac].bmba008
                  END IF
                  SELECT COUNT(*) INTO l_cnt1 FROM bmea_t
                   WHERE bmeaent = g_enterprise
                     AND bmeasite= g_bmaa_m.bmaasite
                     AND bmea001 = g_bmaa_m.bmaa001         #主件
                     AND bmea002 = g_bmaa_m.bmaa002
                     AND bmea003 = g_bmba_d2[l_ac].bmba003  #元件编号
                     AND bmea004 = l_bmba004                #部位
                     AND bmea005 = l_bmba007                #作业
                     AND bmea006 = l_bmba008                #制程序
                     AND bmea008 = g_bmba_d2[l_ac].bmba024  #替代料
                  SELECT COUNT(*) INTO l_cnt2 FROM bmea_t
                   WHERE bmeaent = g_enterprise
                     AND bmeasite= g_bmaa_m.bmaasite
                     AND bmea001 = 'ALL'                    #主件
                     AND bmea003 = g_bmba_d2[l_ac].bmba003  #元件编号
                     AND bmea008 = g_bmba_d2[l_ac].bmba024  #替代料
                  IF l_cnt1 = 0 AND l_cnt2 = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00043'
                     LET g_errparam.extend = g_bmba_d2[l_ac].bmba024
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL abmm200_show_bmba024_desc2(l_ac)
           
            AFTER FIELD bmba030  #倒扣料
               #IF cl_null (g_bmba_d2[l_ac].bmba030) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF

            AFTER FIELD bmba031  #客供料
               #IF cl_null (g_bmba_d2[l_ac].bmba031) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
         
            AFTER FIELD bmba015   #指定发料库位
               IF NOT cl_null (g_bmba_d2[l_ac].bmba015) THEN
                  LET l_cnt1 = 0
                  CASE g_prog 
                     WHEN 'abmm200'
                          SELECT COUNT(*) INTO l_cnt1 FROM inaa_t
                           WHERE inaaent = g_enterprise
                             AND inaa001 = g_bmba_d2[l_ac].bmba015
                             AND inaastus= 'Y'
                     WHEN 'abmm210'
                          SELECT COUNT(*) INTO l_cnt1 FROM inaa_t
                           WHERE inaaent = g_enterprise
                             AND inaasite= g_bmaa_m.bmaasite 
                             AND inaa001 = g_bmba_d2[l_ac].bmba015
                             AND inaastus= 'Y'
                  END CASE
                  IF l_cnt1 = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00044'
                     LET g_errparam.extend = g_bmba_d2[l_ac].bmba015
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
         
               IF NOT cl_null (g_bmba_d2[l_ac].bmba016) AND NOT cl_null(g_bmba_d2[l_ac].bmba015) THEN
                  CASE g_prog 
                     WHEN 'abmm200'
                          SELECT COUNT(*) INTO l_cnt1 FROM inab_t
                           WHERE inabent = g_enterprise
                             AND inab001 = g_bmba_d2[l_ac].bmba015
                             AND inab002 = g_bmba_d2[l_ac].bmba016
                             AND inabstus= 'Y'
                     WHEN 'abmm210'
                          SELECT COUNT(*) INTO l_cnt1 FROM inab_t
                           WHERE inabent = g_enterprise
                             AND inabsite= g_bmaa_m.bmaasite 
                             AND inab001 = g_bmba_d2[l_ac].bmba015
                             AND inab002 = g_bmba_d2[l_ac].bmba016
                             AND inabstus= 'Y'
                  END CASE
                     
                  IF l_cnt1 = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00045'
                     LET g_errparam.extend = g_bmba_d2[l_ac].bmba016
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD bmba016
                  END IF
               END IF
               CALL abmm200_show_bmba015_desc2(l_ac)
         
            AFTER FIELD bmba016
               IF NOT cl_null (g_bmba_d2[l_ac].bmba016) AND NOT cl_null(g_bmba_d2[l_ac].bmba015) THEN
                  CASE g_prog 
                     WHEN 'abmm200'
                          SELECT COUNT(*) INTO l_cnt1 FROM inab_t
                           WHERE inabent = g_enterprise
                             AND inab001 = g_bmba_d2[l_ac].bmba015
                             AND inab002 = g_bmba_d2[l_ac].bmba016
                             AND inabstus= 'Y'
                     WHEN 'abmm210'
                          SELECT COUNT(*) INTO l_cnt1 FROM inab_t
                           WHERE inabent = g_enterprise
                             AND inabsite= g_bmaa_m.bmaasite 
                             AND inab001 = g_bmba_d2[l_ac].bmba015
                             AND inab002 = g_bmba_d2[l_ac].bmba016
                             AND inabstus= 'Y'
                  END CASE
                  IF l_cnt1 = 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00045'
                     LET g_errparam.extend = g_bmba_d2[l_ac].bmba016
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               CALL abmm200_show_bmba016_desc2(l_ac)
         
            ON ACTION controlp INFIELD bmba015
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmba_d2[l_ac].bmba015             #給予default值
               #給予arg
               CASE g_prog
                  WHEN 'abmm200'
                       CALL q_inaa001_5()          #呼叫開窗
                  WHEN 'abmm210'
                       CALL q_inaa001_2()          #呼叫開窗
               END CASE
               LET g_bmba_d2[l_ac].bmba015 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmba_d2[l_ac].bmba015 TO bmba015              #顯示到畫面上
               CALL abmm200_show_bmba015_desc2(l_ac)
               NEXT FIELD bmba015                          #返回原欄位
         
            ON ACTION controlp INFIELD bmba016
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmba_d2[l_ac].bmba016             #給予default值
               #給予arg
               CASE g_prog
                  WHEN 'abmm200'
                       IF cl_null(g_bmba_d2[l_ac].bmba015) THEN
                          CALL q_inab002_2()         #呼叫開窗
                       ELSE
                          LET g_qryparam.arg1 = g_bmba_d2[l_ac].bmba015
                          CALL q_inab002_4()         #呼叫開窗
                       END IF
                  WHEN 'abmm210'
                       IF cl_null(g_bmba_d2[l_ac].bmba015) THEN
                          CALL q_inab002_1()         #呼叫開窗
                       ELSE
                          LET g_qryparam.arg1 = g_bmba_d2[l_ac].bmba015
                          CALL q_inab002_5()         #呼叫開窗
                       END IF
               END CASE 
               LET g_bmba_d2[l_ac].bmba016 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmba_d2[l_ac].bmba016 TO bmba016              #顯示到畫面上
               CALL abmm200_show_bmba016_desc2(l_ac)
               NEXT FIELD bmba016                          #返回原欄位
         
            ON ACTION controlp INFIELD bmba024
               #開窗i段
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'i'
               LET g_qryparam.reqry = FALSE
               LET g_qryparam.default1 = g_bmba_d2[l_ac].bmba024             #給予default值
               #給予arg
               LET g_qryparam.arg1 = g_bmaa_m.bmaasite
               LET g_qryparam.arg2 = g_bmaa_m.bmaa001
               LET g_qryparam.arg3 = g_bmaa_m.bmaa002
               LET g_qryparam.arg4 = g_bmba_d2[l_ac].bmba003  #元件料號
               LET g_qryparam.arg5 = g_bmba_d2[l_ac].bmba004  #部位
               LET g_qryparam.arg6 = g_bmba_d2[l_ac].bmba007  #作業
               LET g_qryparam.arg7 = g_bmba_d2[l_ac].bmba008  #製程序
               CALL q_bmea008_2()                                #呼叫開窗
               LET g_bmba_d2[l_ac].bmba024 = g_qryparam.return1              #將開窗取得的值回傳到變數
               DISPLAY g_bmba_d2[l_ac].bmba024 TO bmba024              #顯示到畫面上
               CALL abmm200_show_bmba024_desc2(l_ac)
               NEXT FIELD bmba024                          #返回原欄位
               
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  LET g_bmba_d2[l_ac].* = g_bmba_d2_t.*
                  CLOSE abmm200_bmba_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
         
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = -263
                  LET g_errparam.extend = g_bmba_d2[l_ac].bmba003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmba_d2[l_ac].* = g_bmba_d2_t.*
               ELSE
                  #检查是否有插件位置资料
                  CALL abmm200_get_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)  #重新获取bmba018
                     RETURNING g_bmba_d1[l_ac].bmba018
                  CALL abmm200_bmba_back2()
                  
                  LET l_success_tot = TRUE
                  #LET g_bmba005_2 = g_bmba_d2_t.bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d2_t.bmba005) USING "####",'-',MONTH(g_bmba_d2_t.bmba005) USING "&&",'-',DAY(g_bmba_d2_t.bmba005) USING "&&",' ',TIME(g_bmba_d2_t.bmba005)
                  #UPDATE bmba_t SET * = g_bmba.*
                  UPDATE bmba_t SET (bmbaent,bmbasite,bmba001,bmba002,bmba003, 
                                     bmba004,bmba005,bmba006,bmba007,bmba008,
                                     bmba009,bmba010,bmba011,bmba012,bmba013,
                                     bmba014,bmba015,bmba016,bmba017,bmba018,
                                     bmba019,bmba020,bmba021,bmba022,bmba023,
                                     bmba024,bmba025,bmba026,bmba027,bmba028,
                                     bmba029,bmba030,bmba031,bmba032 )
                                  = (g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                                     g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                                     g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                                     g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                                     g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                                     g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                                     g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032 )
                   WHERE bmbaent = g_enterprise
                     AND bmbasite= g_bmaa_m.bmaasite
                     AND bmba001 = g_bmaa_m.bmaa001
                     AND bmba002 = g_bmaa_m.bmaa002
                     AND bmba003 = g_bmba_d2_t.bmba003
                     AND bmba004 = g_bmba_d2_t.bmba004
                     #AND bmba005 = g_bmba_d2_t.bmba005
                     AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                     AND bmba007 = g_bmba_d2_t.bmba007
                     AND bmba008 = g_bmba_d2_t.bmba008
                  IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                     LET l_success_tot = FALSE
                  END IF
                  #更新已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     #LET g_bmba005_2 = g_bmba_d2_t.bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d2_t.bmba005) USING "####",'-',MONTH(g_bmba_d2_t.bmba005) USING "&&",'-',DAY(g_bmba_d2_t.bmba005) USING "&&",' ',TIME(g_bmba_d2_t.bmba005)
                     UPDATE bmba_t SET (bmba021,bmba022,bmba023,bmba024,bmba030,bmba031,bmba015,bmba016,bmba032)
                                     = (g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,g_bmba.bmba024,
                                        g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba032)
                      WHERE bmbaent = g_enterprise
                        AND bmbasite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmbasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmba001 = g_bmaa_m.bmaa001
                        AND bmba002 = g_bmaa_m.bmaa002
                        AND bmba003 = g_bmba_d2_t.bmba003
                        AND bmba004 = g_bmba_d2_t.bmba004
                        #AND bmba005 = g_bmba_d2_t.bmba005
                        AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmba007 = g_bmba_d2_t.bmba007
                        AND bmba008 = g_bmba_d2_t.bmba008
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
         
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE bmba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bmba_d2[l_ac].* = g_bmba_d2_t.*
                     CALL s_transaction_end('N','0')
                  END IF
         
               END IF
         
            AFTER ROW
               IF l_cmd = 'u' THEN 
                  CLOSE abmm200_bmba_bcl
               END IF
               CALL s_transaction_end('Y','0')
               #其他table進行unlock
         
         
            AFTER INPUT
         
         
         END INPUT

         #损耗率
         INPUT ARRAY g_bmba_d3 FROM s_detail3.*
             ATTRIBUTE(COUNT = g_rec_b_bmba3,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = FALSE,DELETE ROW = FALSE,APPEND ROW = FALSE)
       
            #自訂ACTION
            BEFORE INPUT
               IF p_type!="all" AND p_type!="loss" THEN
                  EXIT DIALOG
               END IF
               CALL abmm200_b_fill_bmba3()
               LET g_rec_b_bmba3 = g_bmba_d3.getLength()
               IF g_rec_b_bmba3 != 0 THEN
                  CALL FGL_SET_ARR_CURR(l_ac)
               END IF
       
            BEFORE ROW
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac = ARR_CURR()
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac TO FORMONLY.idx
       
               CALL s_transaction_begin()
               OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abmm200_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CLOSE abmm200_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
       
               #FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
               #IF SQLCA.sqlcode THEN
               #   #CALL cl_err(g_bmaa_m.bmaasite,SQLCA.sqlcode,1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code =  SQLCA.sqlcode
               #   LET g_errparam.extend = g_bmaa_m.bmaasite
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   CLOSE abmm200_cl
               #   CALL s_transaction_end('N','0')
               #   RETURN
               #END IF
       
               LET g_rec_b_bmba3 = g_bmba_d3.getLength()
       
               IF g_rec_b_bmba3 >= l_ac
                  AND NOT cl_null(g_bmba_d3[l_ac].bmba003)
                  AND g_bmba_d3[l_ac].bmba004 IS NOT NULL
                  AND NOT cl_null(g_bmba_d3[l_ac].bmba005)
                  AND g_bmba_d3[l_ac].bmba007 IS NOT NULL
                  AND g_bmba_d3[l_ac].bmba008 IS NOT NULL
               THEN
                  LET l_cmd='u'
	  	 	         LET g_bmba_d3_t.* = g_bmba_d3[l_ac].*  #BACKUP
	  	 	         CALL abmm200_b_fill_bmbb() 
                  CALL abmm200_set_entry_b(l_cmd)
                  CALL abmm200_set_no_entry_b(l_cmd)
       
                  #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
                  OPEN abmm200_bmba_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d3[l_ac].bmba003,g_bmba_d3[l_ac].bmba004,g_bmba005_2,g_bmba_d3[l_ac].bmba007,g_bmba_d3[l_ac].bmba008
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmba_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  ELSE
                     #FETCH abmm200_bmba_bcl INTO g_bmba.*
                     FETCH abmm200_bmba_bcl INTO g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                                                 g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                                                 g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                                                 g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                                                 g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                                                 g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                                                 g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmba_d3_t.bmba009
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET l_lock_sw = "Y"
                     ELSE
                        CALL abmm200_bmba_to3()
                     END IF
                  END IF
                  CALL cl_show_fld_cont()
               ELSE
                  LET l_cmd='a'
               END IF
       
            AFTER FIELD bmba029  #损耗率型态
               #IF cl_null (g_bmba_d3[l_ac].bmba029) THEN
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code = 'aoo-00052'
               #   LET g_errparam.extend = ''
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   NEXT FIELD CURRENT
               #END IF
               
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  LET g_bmba_d3[l_ac].* = g_bmba_d3_t.*
                  CLOSE abmm200_bmba_bcl
                  CLOSE abmm200_bmbb_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
       
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = -263
                  LET g_errparam.extend = g_bmba_d3[l_ac].bmba003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmba_d3[l_ac].* = g_bmba_d3_t.*
               ELSE
                  #检查是否有插件位置资料
                  CALL abmm200_get_bmba018(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)  #重新获取bmba018
                     RETURNING g_bmba_d1[l_ac].bmba018
                  CALL abmm200_bmba_back3()
                  
                  LET l_success_tot = TRUE
                  #LET g_bmba005_2 = g_bmba_d3_t.bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d3_t.bmba005) USING "####",'-',MONTH(g_bmba_d3_t.bmba005) USING "&&",'-',DAY(g_bmba_d3_t.bmba005) USING "&&",' ',TIME(g_bmba_d3_t.bmba005)
                  #UPDATE bmba_t SET * = g_bmba.*
                  UPDATE bmba_t SET (bmbaent,bmbasite,bmba001,bmba002,bmba003, 
                                     bmba004,bmba005,bmba006,bmba007,bmba008,
                                     bmba009,bmba010,bmba011,bmba012,bmba013,
                                     bmba014,bmba015,bmba016,bmba017,bmba018,
                                     bmba019,bmba020,bmba021,bmba022,bmba023,
                                     bmba024,bmba025,bmba026,bmba027,bmba028,
                                     bmba029,bmba030,bmba031,bmba032 )
                                  = (g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                                     g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                                     g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                                     g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                                     g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                                     g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                                     g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032 )
                   WHERE bmbaent = g_enterprise
                     AND bmbasite= g_bmaa_m.bmaasite
                     AND bmba001 = g_bmaa_m.bmaa001
                     AND bmba002 = g_bmaa_m.bmaa002
                     AND bmba003 = g_bmba_d3_t.bmba003 #項次
                     AND bmba004 = g_bmba_d3_t.bmba004
                     #AND bmba005 = g_bmba_d3_t.bmba005
                     AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                     AND bmba007 = g_bmba_d3_t.bmba007
                     AND bmba008 = g_bmba_d3_t.bmba008
                  IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                     LET l_success_tot = FALSE
                  END IF
                  #更新已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     #LET g_bmba005_2 = g_bmba_d3_t.bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d3_t.bmba005) USING "####",'-',MONTH(g_bmba_d3_t.bmba005) USING "&&",'-',DAY(g_bmba_d3_t.bmba005) USING "&&",' ',TIME(g_bmba_d3_t.bmba005)
                     UPDATE bmba_t SET (bmba029)
                                     = (g_bmba.bmba029)
                      WHERE bmbaent = g_enterprise
                        AND bmbasite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmbasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001  #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmba001 = g_bmaa_m.bmaa001
                        AND bmba002 = g_bmaa_m.bmaa002
                        AND bmba003 = g_bmba_d3_t.bmba003 #項次
                        AND bmba004 = g_bmba_d3_t.bmba004
                        #AND bmba005 = g_bmba_d3_t.bmba005
                        AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmba007 = g_bmba_d3_t.bmba007
                        AND bmba008 = g_bmba_d3_t.bmba008
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
       
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE bmba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bmba_d3[l_ac].* = g_bmba_d3_t.*
                     CALL s_transaction_end('N','0')
                  END IF
       
               END IF
       
            AFTER ROW
               IF l_cmd = 'u' THEN 
                  CLOSE abmm200_bmba_bcl
               END IF
               CALL s_transaction_end('Y','0')
               #其他table進行unlock
       
            AFTER INPUT
       
         END INPUT


         INPUT ARRAY g_bmbb_d FROM s_bmbb.*
             ATTRIBUTE(COUNT = g_rec_b_bmbb,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                     INSERT ROW = l_allow_insert,
                     DELETE ROW = l_allow_delete,
                     APPEND ROW = l_allow_insert)
     
            #自訂ACTION
            BEFORE INPUT
               IF p_type!="all" AND p_type!="loss" THEN
                  EXIT DIALOG
               END IF
               CALL abmm200_b_fill_bmbb()
               LET g_rec_b_bmbb = g_bmbb_d.getLength()
               IF g_rec_b_bmbb != 0 THEN
                  CALL FGL_SET_ARR_CURR(l_ac_bmbb)
               END IF
     
            BEFORE ROW
               LET l_insert = FALSE
               LET l_cmd = ''
               LET l_ac_bmbb = ARR_CURR()
               LET l_lock_sw = 'N'            #DEFAULT
               LET l_n = ARR_COUNT()
               DISPLAY l_ac_bmbb TO FORMONLY.idx
             
               CALL s_transaction_begin()
               OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
               IF STATUS THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  STATUS
                  LET g_errparam.extend = "OPEN abmm200_cl:"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  CLOSE abmm200_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
               #FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
               #IF SQLCA.sqlcode THEN
               #   #CALL cl_err(g_bmaa_m.bmaasite,SQLCA.sqlcode,1)
               #   INITIALIZE g_errparam TO NULL
               #   LET g_errparam.code =  SQLCA.sqlcode
               #   LET g_errparam.extend = g_bmaa_m.bmaasite
               #   LET g_errparam.popup = TRUE
               #   CALL cl_err()
               #   CLOSE abmm200_cl
               #   CALL s_transaction_end('N','0')
               #   RETURN
               #END IF
             
               LET g_rec_b_bmbb = g_bmbb_d.getLength()
             
               IF g_rec_b_bmbb >= l_ac_bmbb AND NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) THEN
                  LET l_cmd='u'
			      LET g_bmbb_d_t.* = g_bmbb_d[l_ac_bmbb].*  #BACKUP
                  CALL abmm200_set_entry_b(l_cmd)
                  CALL abmm200_set_no_entry_b(l_cmd)
                  #锁表bmba
                  #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
                  OPEN abmm200_bmba_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d3[l_ac].bmba003,g_bmba_d3[l_ac].bmba004,g_bmba005_2,g_bmba_d3[l_ac].bmba007,g_bmba_d3[l_ac].bmba008
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmba_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  ELSE
                    #FETCH abmm200_bmba_bcl INTO g_bmba.*
                     FETCH abmm200_bmba_bcl INTO g_bmba.bmbaent,g_bmba.bmbasite,g_bmba.bmba001,g_bmba.bmba002,g_bmba.bmba003, 
                                                 g_bmba.bmba004,g_bmba.bmba005,g_bmba.bmba006,g_bmba.bmba007,g_bmba.bmba008,
                                                 g_bmba.bmba009,g_bmba.bmba010,g_bmba.bmba011,g_bmba.bmba012,g_bmba.bmba013,
                                                 g_bmba.bmba014,g_bmba.bmba015,g_bmba.bmba016,g_bmba.bmba017,g_bmba.bmba018,
                                                 g_bmba.bmba019,g_bmba.bmba020,g_bmba.bmba021,g_bmba.bmba022,g_bmba.bmba023,
                                                 g_bmba.bmba024,g_bmba.bmba025,g_bmba.bmba026,g_bmba.bmba027,g_bmba.bmba028,
                                                 g_bmba.bmba029,g_bmba.bmba030,g_bmba.bmba031,g_bmba.bmba032
                     IF SQLCA.sqlcode THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmba_d3_t.bmba009
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET l_lock_sw = "Y"
                     END IF
                  END IF
                  #锁表bmbb
                  #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
                  OPEN abmm200_bmbb_bcl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d3[l_ac].bmba003,g_bmba_d3[l_ac].bmba004,g_bmba005_2,g_bmba_d3[l_ac].bmba007,g_bmba_d3[l_ac].bmba008,g_bmbb_d[l_ac_bmbb].bmbb009
                  IF SQLCA.sqlcode AND NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "OPEN abmm200_bmbb_bcl"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_lock_sw='Y'
                  ELSE
                     INITIALIZE g_bmbb.* TO NULL
                     #FETCH abmm200_bmbb_bcl INTO g_bmbb.*
                     FETCH abmm200_bmbb_bcl INTO g_bmbb.bmbbent,g_bmbb.bmbbsite,g_bmbb.bmbb001,g_bmbb.bmbb002,g_bmbb.bmbb003,
                                                 g_bmbb.bmbb004,g_bmbb.bmbb005,g_bmbb.bmbb007,g_bmbb.bmbb008,g_bmbb.bmbb009,
                                                 g_bmbb.bmbb010,g_bmbb.bmbb011,g_bmbb.bmbb012
                     IF SQLCA.sqlcode AND NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = g_bmbb_d[l_ac_bmbb].bmbb009
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        LET l_lock_sw = "Y"
                     ELSE
                        CALL abmm200_bmbb_to()
                     END IF
                     CALL cl_show_fld_cont()
                  END IF
               ELSE
                  LET l_cmd='a'
               END IF
               #其他table資料備份(確定是否更改用)
             
               #其他table進行lock


            BEFORE INSERT
               LET l_insert = TRUE
               LET l_n = ARR_COUNT()
               LET l_cmd = 'a'
               INITIALIZE g_bmbb_d[l_ac_bmbb].* TO NULL
               INITIALIZE g_bmbb.* TO NULL
           
               LET g_bmbb_d_t.* = g_bmbb_d[l_ac_bmbb].*     #新輸入資料
               LET g_bmbb_d[l_ac_bmbb].bmbb011 = 0
               LET g_bmbb_d[l_ac_bmbb].bmbb012 = 0
               CALL abmm200_def_bmbb009()
               CALL cl_show_fld_cont()
               CALL abmm200_set_entry_b(l_cmd)
               CALL abmm200_set_no_entry_b(l_cmd)
               NEXT FIELD bmbb009

            AFTER INSERT
               LET l_insert = FALSE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  CANCEL INSERT
               END IF
              
               LET l_count = 1
               #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
               LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
               SELECT COUNT(*) INTO l_count FROM bmbb_t
                WHERE bmbbent = g_enterprise
                  AND bmbbsite = g_bmaa_m.bmaasite
                  AND bmbb001 = g_bmaa_m.bmaa001
                  AND bmbb002 = g_bmaa_m.bmaa002
                  AND bmbb003 = g_bmba_d3[l_ac].bmba003
                  AND bmbb004 = g_bmba_d3[l_ac].bmba004
                  #AND bmbb005 = g_bmba_d3[l_ac].bmba005
                  AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                  AND bmbb007 = g_bmba_d3[l_ac].bmba007
                  AND bmbb008 = g_bmba_d3[l_ac].bmba008
                  AND bmbb009 = g_bmbb_d[l_ac_bmbb].bmbb009
               #資料未重複, 插入新增資料
               IF l_count = 0 THEN
                  CALL abmm200_bmbb_back()
                  LET l_success_tot = TRUE
                  #INSERT INTO bmbb_t VALUES(g_bmbb.*)
                  INSERT INTO bmbb_t(bmbbent,bmbbsite,bmbb001,bmbb002,bmbb003,
                                     bmbb004,bmbb005,bmbb007,bmbb008,bmbb009,
                                     bmbb010,bmbb011,bmbb012)
                  VALUES(g_bmbb.bmbbent,g_bmbb.bmbbsite,g_bmbb.bmbb001,g_bmbb.bmbb002,g_bmbb.bmbb003,
                         g_bmbb.bmbb004,g_bmbb.bmbb005,g_bmbb.bmbb007,g_bmbb.bmbb008,g_bmbb.bmbb009,
                         g_bmbb.bmbb010,g_bmbb.bmbb011,g_bmbb.bmbb012)
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "INSERT bmbb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET l_success_tot = FALSE
                  END IF
                  #拋转已拋转过的bom
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     CALL s_abmm200_carry_bmbb(g_bmbb.*) RETURNING l_success
                     IF NOT l_success THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF NOT l_success_tot THEN
                     CALL s_transaction_end('N','0')
                     CANCEL INSERT
                  ELSE
                     CALL s_transaction_end('Y','0')
                     #ERROR 'INSERT O.K'
                     LET g_rec_b_bmbb=g_rec_b_bmbb+1
                  END IF
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = "std-00006"
                  LET g_errparam.extend = 'INSERT'
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  INITIALIZE g_bmbb_d[l_ac_bmbb].* TO NULL
                  CALL s_transaction_end('N','0')
                  CANCEL INSERT
               END IF


            BEFORE DELETE                            #是否取消單身
               IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009)  THEN
                  IF NOT cl_ask_del_detail() THEN
                     CANCEL DELETE
                  END IF
                  IF l_lock_sw = "Y" THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code =  -263
                     LET g_errparam.extend = ""
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CANCEL DELETE
                  END IF
            
                  LET l_success_tot = TRUE
                  #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
                  DELETE FROM bmbb_t
                   WHERE bmbbent = g_enterprise
                     AND bmbbsite= g_bmaa_m.bmaasite
                     AND bmbb001 = g_bmaa_m.bmaa001
                     AND bmbb002 = g_bmaa_m.bmaa002
                     AND bmbb003 = g_bmba_d3[l_ac].bmba003
                     AND bmbb004 = g_bmba_d3[l_ac].bmba004
                     #AND bmbb005 = g_bmba_d3[l_ac].bmba005
                     AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                     AND bmbb007 = g_bmba_d3[l_ac].bmba007
                     AND bmbb008 = g_bmba_d3[l_ac].bmba008
                     AND bmbb009 = g_bmbb_d_t.bmbb009
                  IF SQLCA.sqlcode THEN
                     LET l_success_tot = FALSE
                  END IF
                  #删除已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
                     DELETE FROM bmbb_t
                      WHERE bmbbent = g_enterprise
                        AND bmbbsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmbbsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmbb001 = g_bmaa_m.bmaa001
                        AND bmbb002 = g_bmaa_m.bmaa002
                        AND bmbb003 = g_bmba_d3[l_ac].bmba003
                        AND bmbb004 = g_bmba_d3[l_ac].bmba004
                        #AND bmbb005 = g_bmba_d3[l_ac].bmba005
                        AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmbb007 = g_bmba_d3[l_ac].bmba007
                        AND bmbb008 = g_bmba_d3[l_ac].bmba008
                        AND bmbb009 = g_bmbb_d_t.bmbb009
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmbb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  ELSE
                     LET g_rec_b_bmbb = g_rec_b_bmbb-1
                     CALL s_transaction_end('Y','0')
                  END IF
                  CLOSE abmm200_bmbb_bcl
                  LET l_count = g_bmbb_d.getLength()
               END IF

            AFTER DELETE
               #CALL abmm200_delete_b('bmbb_t',gs_keys,"'1'")
          
            BEFORE FIELD bmbb009  #生產起始量
          
            AFTER FIELD bmbb009  #生產起始量
               IF NOT cl_null (g_bmbb_d[l_ac_bmbb].bmbb009) THEN
                  IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) AND g_bmbb_d[l_ac_bmbb].bmbb009< 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb010) AND g_bmbb_d[l_ac_bmbb].bmbb010 < g_bmbb_d[l_ac_bmbb].bmbb009 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00026'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT abmm200_chk_ssqty(l_cmd,'1',g_bmbb_d[l_ac_bmbb].bmbb009)  THEN
                     LET g_bmbb_d[l_ac_bmbb].bmbb009 = g_bmbb_d_t.bmbb009
                     NEXT FIELD bmbb009
                  END IF
               END IF
               NEXT FIELD bmbb010
                  
            AFTER FIELD bmbb010 
               IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb010) THEN
                  IF g_bmbb_d[l_ac_bmbb].bmbb010< 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) AND g_bmbb_d[l_ac_bmbb].bmbb010 < g_bmbb_d[l_ac_bmbb].bmbb009 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00026'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
               IF NOT abmm200_chk_ssqty(l_cmd,'2',g_bmbb_d[l_ac_bmbb].bmbb010) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bmbb_d[l_ac_bmbb].bmbb010
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmbb_d[l_ac_bmbb].bmbb010 = g_bmbb_d_t.bmbb010
                  NEXT FIELD bmbb010
               END IF

            AFTER FIELD bmbb011  #变动损耗率
               IF NOT cl_null (g_bmbb_d[l_ac_bmbb].bmbb011) THEN
                  IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb011) AND g_bmbb_d[l_ac_bmbb].bmbb011< 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
       
            
            AFTER FIELD bmbb012  #固定损耗量
               IF NOT cl_null (g_bmbb_d[l_ac_bmbb].bmbb012) THEN
                  IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb012) AND g_bmbb_d[l_ac_bmbb].bmbb012< 0 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'agl-00041'
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            
            ON ROW CHANGE
               IF INT_FLAG THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 9001
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = FALSE
                  CALL cl_err()
                  LET INT_FLAG = 0
                  LET g_bmbb_d[l_ac_bmbb].* = g_bmbb_d_t.*
                  CLOSE abmm200_bmba_bcl
                  CLOSE abmm200_bmbb_bcl
                  CALL s_transaction_end('N','0')
                  EXIT DIALOG
               END IF
         
               IF l_lock_sw = 'Y' THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = -263
                  LET g_errparam.extend = g_bmbb_d[l_ac_bmbb].bmbb009
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmbb_d[l_ac_bmbb].* = g_bmbb_d_t.*
               ELSE
                  CALL abmm200_bmbb_back()
         
                  LET l_success_tot = TRUE
                  #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
                  LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
                  #UPDATE bmbb_t SET * = g_bmbb.*
                  UPDATE bmbb_t SET (bmbbent,bmbbsite,bmbb001,bmbb002,bmbb003,
                                     bmbb004,bmbb005,bmbb007,bmbb008,bmbb009,
                                     bmbb010,bmbb011,bmbb012)
                                  = (g_bmbb.bmbbent,g_bmbb.bmbbsite,g_bmbb.bmbb001,g_bmbb.bmbb002,g_bmbb.bmbb003,
                                     g_bmbb.bmbb004,g_bmbb.bmbb005,g_bmbb.bmbb007,g_bmbb.bmbb008,g_bmbb.bmbb009,
                                     g_bmbb.bmbb010,g_bmbb.bmbb011,g_bmbb.bmbb012)
                   WHERE bmbbent = g_enterprise
                     AND bmbbsite= g_bmaa_m.bmaasite
                     AND bmbb001 = g_bmaa_m.bmaa001
                     AND bmbb002 = g_bmaa_m.bmaa002
                     AND bmbb003 = g_bmba_d3[l_ac].bmba003
                     AND bmbb004 = g_bmba_d3[l_ac].bmba004
                     #AND bmbb005 = g_bmba_d3[l_ac].bmba005
                     AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                     AND bmbb007 = g_bmba_d3[l_ac].bmba007
                     AND bmbb008 = g_bmba_d3[l_ac].bmba008
                     AND bmbb009 = g_bmbb_d_t.bmbb009
                  IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
                     LET l_success_tot = FALSE
                  END IF
         
                  #更新已拋转资料
                  IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
                     #产品分类
                     LET l_imaa009=''
                     SELECT imaa009 INTO l_imaa009 FROM imaa_t
                      WHERE imaaent = g_enterprise
                        AND imaa001 = g_bmaa_m.bmaa001
                     #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
                     LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
                     UPDATE bmbb_t SET (bmbb009,bmbb010,bmbb011,bmbb012)
                                     = (g_bmbb.bmbb009,g_bmbb.bmbb010,g_bmbb.bmbb011,g_bmbb.bmbb012)
                      WHERE bmbbent = g_enterprise
                        AND bmbbsite!= g_bmaa_m.bmaasite
                        #mark 141231
                        #AND bmbbsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                        #                   where ooefent = g_enterprise
                        #                         #满足aimi150中的产品分类页签
                        #                     and (ooef001 IN (select unique imda001 from imda_t 
                        #                                       where imdaent = g_enterprise
                        #                                         and imdastus= 'Y'             #有效的
                        #                                         and imda005 = 'Y'             #BOM引入
                        #                                         and imda003 = '1'             #自动引入
                        #                                         #and imda002 = l_imaa009)      #产品分类
                        #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                        #                        OR 
                        #                         #满足aimi150中的料件页签
                        #                          ooef001 IN (select unique imdb001 from imdb_t 
                        #                                       where imdbent = g_enterprise
                        #                                         and imdbstus= 'Y'             #有效的
                        #                                         and imdb005 = 'Y'             #BOM引入
                        #                                         and imdb003 = '1'             #自动引入
                        #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                        #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                        #                                     )
                        #                          )
                        #                  )
                        #mark 141231 end
                        AND bmbb001 = g_bmaa_m.bmaa001
                        AND bmbb002 = g_bmaa_m.bmaa002
                        AND bmbb003 = g_bmba_d3[l_ac].bmba003
                        AND bmbb004 = g_bmba_d3[l_ac].bmba004
                        #AND bmbb005 = g_bmba_d3[l_ac].bmba005
                        AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                        AND bmbb007 = g_bmba_d3[l_ac].bmba007
                        AND bmbb008 = g_bmba_d3[l_ac].bmba008
                        AND bmbb009 = g_bmbb_d_t.bmbb009
                     IF SQLCA.sqlcode THEN
                        LET l_success_tot = FALSE
                     END IF
                  END IF
         
                  IF l_success_tot = FALSE THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "UPDATE bmbb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()
                     LET g_bmbb_d[l_ac_bmbb].* = g_bmbb_d_t.*
                     CALL s_transaction_end('N','0')
                  END IF
               END IF
         
            AFTER ROW
               IF l_cmd = 'u' THEN 
                  CLOSE abmm200_bmba_bcl
                  CLOSE abmm200_bmbb_bcl
               END IF
               CALL s_transaction_end('Y','0')
               #其他table進行unlock
         
            AFTER INPUT
         
         END INPUT

         BEFORE DIALOG
            CASE p_type
               WHEN "cp"
                    CALL DIALOG.setCurrentRow("s_bmab",l_ac)
                    NEXT FIELD bmab003
               WHEN "bp"
                    CALL DIALOG.setCurrentRow("s_bmac",l_ac)
                    NEXT FIELD bmac003
               WHEN "mp"
                    CALL DIALOG.setCurrentRow("s_bmad",l_ac)
                    NEXT FIELD bmad003
               WHEN "pc"
                    CALL DIALOG.setCurrentRow("s_detail2",l_ac)
                    NEXT FIELD bmba021
               WHEN "loss"
                    CALL DIALOG.setCurrentRow("s_detail3",l_ac)
                    NEXT FIELD bmba029
            END CASE
     
         AFTER DIALOG
            #在全部录完后做控管
            LET l_bmba011=0
            LET g_today_dt = cl_get_current()
            SELECT SUM(bmba011) INTO l_bmba011 FROM bmba_t
             WHERE bmbaent = g_enterprise
               AND bmbasite= g_bmaa_m.bmaasite
               AND bmba001 = g_bmaa_m.bmaa001
               AND bmba002 = g_bmaa_m.bmaa002
               #AND bmba005<= g_today_dt
               #AND (bmba006> g_today_dt OR bmba006 IS NULL )
               AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss')<= g_today_dt
               AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss')> g_today_dt OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )
            IF cl_null(l_bmba011) THEN LET l_bmba011 = 0 END IF
            IF l_bmba011 != g_bmaa_m.bmaa003 AND NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003 > 0 THEN
               #單頭批次數量與單身組成用量加總不一致,請確認！(審核狀態下可先清空單頭批次數量，修改完單身組成用量后再修改單頭批次數量)
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00062'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD bmaa003
            END IF
            IF NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003 > 0 AND g_bmaa_m.bmaa003 != g_bmba_d1[l_ac].bmba012 THEN
               #單頭批次數量與單身主件底數不一致
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00060'
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()
               NEXT FIELD bmaa003
            END IF

         ON ACTION controlf
            CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
            CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

         ON ACTION controlr
            CALL cl_show_req_fields()
        
         ON ACTION controls
            CALL cl_set_head_visible("","AUTO")
        
         ON ACTION accept
            ACCEPT DIALOG
        
         ON ACTION cancel      #在dialog button (放棄)
            LET g_action_choice=""
            LET INT_FLAG = TRUE
            EXIT DIALOG

         ON ACTION close       #在dialog 右上角 (X)
            LET g_action_choice=""
            LET INT_FLAG = TRUE
            EXIT DIALOG
      
         ON ACTION exit        #toolbar 離開
            LET g_action_choice=""
            LET INT_FLAG = TRUE
            EXIT DIALOG
      
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      
      END DIALOG
      
      IF l_while = TRUE THEN
         LET l_while = FALSE
         CONTINUE WHILE
      END IF
      
      EXIT WHILE
   END WHILE

   CLOSE abmm200_bmab_bcl
   CLOSE abmm200_bmac_bcl
   CLOSE abmm200_bmad_bcl
   CLOSE abmm200_bmba_bcl
   CLOSE abmm200_bmbb_bcl

   IF p_type!='all' THEN
      LET g_state = "input"
      LET g_bmaa001_t = g_bmaa_m.bmaa001
      LET g_bmaa002_t = g_bmaa_m.bmaa002
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show" order="25" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_show()
   {<Local define>}
   DEFINE l_sql     STRING
   {</Local define>}

   LET g_bmaa_m_t.* = g_bmaa_m.*      #保存單頭舊值

   DISPLAY BY NAME g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.bmaastus,
                   g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt
   DISPLAY g_vdate TO FORMONLY.vdate
   
   #讀入ref值(單頭)
   CALL abmm200_show_bmaa001_desc('s')
   CALL abmm200_show_bmaa_desc()
   CALL abmm200_show_bmaaownid_desc()
   CALL abmm200_show_bmaaowndp_desc()
   CALL abmm200_show_bmaacrtid_desc()
   CALL abmm200_show_bmaacrtdp_desc()
   CALL abmm200_show_bmaamodid_desc()
   CALL abmm200_show_bmaacnfid_desc()

   #顯示狀態(stus)圖片
   CASE g_bmaa_m.bmaastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png") #invalid
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")  #void
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png") #valid
   END CASE
   
   #顯示单身
   CALL abmm200_b_fill_bmab()             #單頭
   CALL abmm200_b_fill_bmac()             #單頭
   CALL abmm200_b_fill_bmad()             #單頭
   CALL abmm200_b_fill_bmba1()                 #單身
   CALL abmm200_b_fill_bmba2()                 #單身
   CALL abmm200_b_fill_bmba3()                 #單身
   CALL abmm200_b_fill_bmbb()                 #單身

   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()
   
   #add 150120 增加图片显示
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmaa_m.bmaa001
   LET g_pk_array[1].column = 'imaa001'
   DISPLAY cl_doc_get_pic() TO ffimage
   #add 150120 end

END FUNCTION]]>
  </point>
  <point name="function.abmm200_reproduce" order="26" ver="11" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_reproduce()
   {<Local define>}
   DEFINE l_newno001  LIKE bmaa_t.bmaa001
   DEFINE l_oldno001  LIKE bmaa_t.bmaa001
   DEFINE l_newno002  LIKE bmaa_t.bmaa002
   DEFINE l_oldno002  LIKE bmaa_t.bmaa002
   DEFINE l_bmaa      RECORD LIKE bmaa_t.*
   DEFINE l_bmaacrtdt DATETIME YEAR TO SECOND   #資料創建日
   DEFINE l_bmab      RECORD LIKE bmab_t.*
   DEFINE l_bmac      RECORD LIKE bmac_t.*
   DEFINE l_bmad      RECORD LIKE bmad_t.*
   #DEFINE l_bmba      RECORD LIKE bmba_t.*
   DEFINE l_bmba      RECORD                 #dt-datetime响应日期时间型限制
                 bmbaent    LIKE bmba_t.bmbaent,   #企業代碼
                 bmbasite   LIKE bmba_t.bmbasite,  #營運據點
                 bmba001    LIKE bmba_t.bmba001,   #主件料號
                 bmba002    LIKE bmba_t.bmba002,   #特性
                 bmba003    LIKE bmba_t.bmba003,   #元件料號
                 bmba004    LIKE bmba_t.bmba004,   #部位編號
                 bmba005    DATETIME YEAR TO SECOND,  #datetime生效日期時間
                 bmba006    DATETIME YEAR TO SECOND,  #datetime失效日期時間
                 bmba007    LIKE bmba_t.bmba007,   #作業編號
                 bmba008    LIKE bmba_t.bmba008,   #製程段號
                 bmba009    LIKE bmba_t.bmba009,   #項次
                 bmba010    LIKE bmba_t.bmba010,   #發料單位
                 bmba011    LIKE bmba_t.bmba011,   #組成用量
                 bmba012    LIKE bmba_t.bmba012,   #主件底數
                 bmba013    LIKE bmba_t.bmba013,   #必要
                 bmba014    LIKE bmba_t.bmba014,   #特徵管理
                 bmba015    LIKE bmba_t.bmba015,   #指定發料庫位
                 bmba016    LIKE bmba_t.bmba016,   #指定發料儲位
                 bmba017    LIKE bmba_t.bmba017,   #FAS選擇群組
                 bmba018    LIKE bmba_t.bmba018,   #插件位置
                 bmba019    LIKE bmba_t.bmba019,   #參照研發中心
                 bmba020    LIKE bmba_t.bmba020,   #可選件
                 bmba021    LIKE bmba_t.bmba021,   #工單展開選項
                 bmba022    LIKE bmba_t.bmba022,   #代買料
                 bmba023    LIKE bmba_t.bmba023,   #元件投料時距
                 bmba024    LIKE bmba_t.bmba024,   #主要替代料
                 bmba025    LIKE bmba_t.bmba025,   #附屬零件
                 bmba026    LIKE bmba_t.bmba026,   #ECN單號
                 bmba027    LIKE bmba_t.bmba027,   #用量是否使用公式
                 bmba028    LIKE bmba_t.bmba028,   #用量公式
                 bmba029    LIKE bmba_t.bmba029,   #損耗率型態
                 bmba030    LIKE bmba_t.bmba030,   #倒扣料
                 bmba031    LIKE bmba_t.bmba031,   #客供料
                 bmba032    LIKE bmba_t.bmba032    #库存管理特征
                 END RECORD
   #损耗率
   #DEFINE l_bmbb      RECORD LIKE bmbb_t.*
   DEFINE l_bmbb       RECORD              #dt-datetime响应日期时间型限制
                 bmbbent    LIKE bmbb_t.bmbbent,   #企業代碼
                 bmbbsite   LIKE bmbb_t.bmbbsite,  #營運據點
                 bmbb001    LIKE bmbb_t.bmbb001,   #主件料號
                 bmbb002    LIKE bmbb_t.bmbb002,   #特性
                 bmbb003    LIKE bmbb_t.bmbb003,   #元件料號
                 bmbb004    LIKE bmbb_t.bmbb004,   #部位編號
                 bmbb005    DATETIME YEAR TO SECOND,   #datetime生效日期时间
                 bmbb007    LIKE bmbb_t.bmbb007,   #作業編號
                 bmbb008    LIKE bmbb_t.bmbb008,   #製程段號
                 bmbb009    LIKE bmbb_t.bmbb009,   #起始生產數量
                 bmbb010    LIKE bmbb_t.bmbb010,   #截止生產數量
                 bmbb011    LIKE bmbb_t.bmbb011,   #變動損耗率
                 bmbb012    LIKE bmbb_t.bmbb012    #固定損耗率
                END RECORD
   #插件位置
   DEFINE l_bmbc      RECORD LIKE bmbc_t.*
   #特徵管理
   DEFINE l_bmca      RECORD LIKE bmca_t.*
   DEFINE l_bmcb      RECORD LIKE bmcb_t.*
   DEFINE l_bmcc      RECORD LIKE bmcc_t.*
   DEFINE l_bmcd      RECORD LIKE bmcd_t.*
   DEFINE l_bmce      RECORD LIKE bmce_t.*
   DEFINE l_bmcf      RECORD LIKE bmcf_t.*
   #取替代資訊
   DEFINE l_bmea      RECORD LIKE bmea_t.*
   DEFINE l_bmeb      RECORD LIKE bmeb_t.*
   #备注
   DEFINE l_ooff      RECORD LIKE ooff_t.*
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_imaa011   LIKE imaa_t.imaa011  #产出类型
   DEFINE l_imaa012   LIKE imaa_t.imaa012  #允许副产品产出
   #复制生效日期处理--b  add 150508
   DEFINE l_date      LIKE type_t.chr20          #判断当前生效的bom
   DEFINE l_bmba005   DATETIME YEAR TO SECOND    #datetime生效日期時間
   DEFINE l_date_t    LIKE type_t.chr20          #判断当前生效的bom
   DEFINE l_bmba005_t DATETIME YEAR TO SECOND    #datetime生效日期時間
   #--e
   {</Local define>}

   IF g_prog='abmm210' THEN
      #本作业不可执行此功能,请与bom研发单位联系（abmm200作业可执行）！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00074'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF

   IF g_bmaa_m.bmaasite IS NULL OR g_bmaa_m.bmaa001 IS NULL OR g_bmaa_m.bmaa002 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      RETURN
   END IF

   CALL abmm200_set_entry('a')
   CALL abmm200_set_no_entry('a')

   CALL cl_set_head_visible("","YES")

   LET g_bmaa_m.bmaa001_imaal003 = ''
   LET g_bmaa_m.bmaa001_imaal004 = ''
   LET g_bmaa_m.bmaa001_imaa009 = ''
   LET g_bmaa_m.imaa009_desc = ''
   LET g_bmaa_m.bmaa001_imaa004 = ''
   LET g_bmaa_m.bmaa001_imaa010 = ''
   LET g_bmaa_m.imaa010_desc = ''
   LET g_bmaa_m.bmaa001_imaa011 = ''
   LET g_bmaa_m.bmaa004_desc = ''
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaal003
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaal004
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa009
   DISPLAY BY NAME g_bmaa_m.imaa009_desc
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa004
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa010
   DISPLAY BY NAME g_bmaa_m.imaa010_desc
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa011
   DISPLAY BY NAME g_bmaa_m.bmaa004_desc

   INPUT l_newno001,l_newno002 FROM bmaa001,bmaa002 ATTRIBUTE(FIELD ORDER FORM)
      BEFORE INPUT
 
      AFTER FIELD bmaa001
         IF cl_null(l_newno001) THEN
            NEXT FIELD CURRENT
         END IF

         #chk
         CALL abmm200_chk_bmaa001(l_newno001) RETURNING l_success
         IF l_success = FALSE THEN
            NEXT FIELD CURRENT
         END IF
            
         #show
         CALL abmm200_show_bmaa001_desc('s')
         CALL abmm200_show_bmaa_desc()

      AFTER FIELD bmaa002
         IF cl_null(l_newno002) THEN
            LET l_newno002 = ' '
         END IF

         CALL abmm200_show_bmaa_desc()
         
      AFTER INPUT
         #若取消則直接結束
         IF INT_FLAG = 1 THEN
            LET INT_FLAG = 0
            RETURN
         END IF

         #確定該key值是否有重複定義
         LET l_cnt = 0
         SELECT COUNT(*) INTO l_cnt FROM bmaa_t
          WHERE bmaaent = g_enterprise AND bmaasite = g_site
            AND bmaa001 = l_newno001 AND bmaa002 = l_newno002
         IF l_cnt > 0 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00006"
            LET g_errparam.extend = "Reproduce"
            LET g_errparam.popup = TRUE
            CALL cl_err()
            NEXT FIELD bmaa001
         END IF

      ON ACTION controlp INFIELD bmaa001
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'i'
         LET g_qryparam.reqry = FALSE
         LET g_qryparam.default1 = l_newno001             #給予default值
         #給予arg
         CALL q_imaa001_9()                                #呼叫開窗
         LET l_newno001 = g_qryparam.return1              #將開窗取得的值回傳到變數
         DISPLAY l_newno001 TO bmaa001              #顯示到畫面上
         NEXT FIELD bmaa001                          #返回原欄位

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE INPUT
   END INPUT
   IF INT_FLAG OR l_newno001 IS NULL OR l_newno002 IS NULL THEN
      LET INT_FLAG = 0
      RETURN
   END IF

   CALL s_transaction_begin()

   SELECT * INTO l_bmaa.* FROM bmaa_t
    WHERE bmaaent = g_enterprise AND bmaasite = g_bmaa_m.bmaasite
      AND bmaa001 = g_bmaa_m.bmaa001 AND bmaa002 = g_bmaa_m.bmaa002

   LET l_bmaa.bmaa001 = l_newno001
   LET l_bmaa.bmaa002 = l_newno002

   #此段落由子樣板a13產生
      LET l_bmaa.bmaastus  = 'N'
      LET l_bmaa.bmaaownid = g_user
      LET l_bmaa.bmaaowndp = g_dept
      LET l_bmaa.bmaacrtid = g_user
      LET l_bmaa.bmaacrtdp = g_dept
      LET l_bmaa.bmaacrtdt = cl_get_current()
      LET l_bmaacrtdt  = cl_get_current()  #資料創建日
      LET l_bmaa.bmaamodid = ''
      LET l_bmaa.bmaamoddt = ''
      LET l_bmaa.bmaacnfid = ''
      LET l_bmaa.bmaacnfdt = ''

   INSERT INTO bmaa_t VALUES (l_bmaa.*) #複製單頭
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "bmaa_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   UPDATE bmaa_t SET bmaacrtdt = l_bmaacrtdt
    WHERE bmaaent = g_enterprise
      AND bmaasite= g_bmaa_m.bmaasite
      AND bmaa001 = l_newno001
      AND bmaa002 = l_newno002
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "upd bmaa_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = l_bmaa.bmaa001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "sel imaa_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
   IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
   
   IF l_imaa011 = '1' THEN  #联产品
      LET g_sql = "SELECT * FROM bmab_t ",
                  " WHERE bmabent = '" ||g_enterprise|| "' AND bmabsite = '",g_bmaa_m.bmaasite,"'",
                  "   AND bmab001 = '",g_bmaa_m.bmaa001,"'",
                  "   AND bmab002 = '",g_bmaa_m.bmaa002,"'"
      DECLARE abmm200_reproduce_bmab CURSOR FROM g_sql
      FOREACH abmm200_reproduce_bmab INTO l_bmab.*
         LET l_bmab.bmab001 = l_newno001
         LET l_bmab.bmab002 = l_newno002
         INSERT INTO bmab_t VALUES (l_bmab.*) #複製單身
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
   END IF

   IF l_imaa012='Y' THEN  #允许副产品产出
      LET g_sql = "SELECT * FROM bmac_t ",
                  " WHERE bmacent = '" ||g_enterprise|| "' AND bmacsite = '",g_bmaa_m.bmaasite,"'",
                  "   AND bmac001 = '",g_bmaa_m.bmaa001,"'",
                  "   AND bmac002 = '",g_bmaa_m.bmaa002,"'"
      DECLARE abmm200_reproduce_bmac CURSOR FROM g_sql
      FOREACH abmm200_reproduce_bmac INTO l_bmac.*
         LET l_bmac.bmac001 = l_newno001
         LET l_bmac.bmac002 = l_newno002
         INSERT INTO bmac_t VALUES (l_bmac.*) #複製單身
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
   END IF

   IF l_imaa011 = '2' THEN  #分解品
      LET g_sql = "SELECT * FROM bmad_t ",
                  " WHERE bmadent = '" ||g_enterprise|| "' AND bmadsite = '",g_bmaa_m.bmaasite,"'",
                  "   AND bmad001 = '",g_bmaa_m.bmaa001,"'",
                  "   AND bmad002 = '",g_bmaa_m.bmaa002,"'"
      DECLARE abmm200_reproduce_bmad CURSOR FROM g_sql
      FOREACH abmm200_reproduce_bmad INTO l_bmad.*
         LET l_bmad.bmad001 = l_newno001
         LET l_bmad.bmad002 = l_newno002
         INSERT INTO bmad_t VALUES (l_bmad.*) #複製單身
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
   END IF

   ################--单身复制-- (需要考虑生效日期)---begin---#################################mod 150508
   LET l_bmba005 = cl_get_current()  #记录当前日期时间
   LET l_date = l_bmba005            #记录当前日期时间
   #--------------------定义需要考虑生效日期的复制表的cursor----------------------------------begin
   #bmbb
   LET g_sql = "SELECT bmbbent,bmbbsite,bmbb001,bmbb002,bmbb003, ",
               "       bmbb004,bmbb005,bmbb007,bmbb008,bmbb009, ",
               "       bmbb010,bmbb011,bmbb012 ",
               "  FROM bmbb_t ",
               " WHERE bmbbent = '" ||g_enterprise|| "' AND bmbbsite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmbb001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmbb002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmbb003 = ? ",
               "   AND bmbb004 = ? ",
               "   AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmbb007 = ? ",
               "   AND bmbb008 = ? "
   DECLARE abmm200_reproduce_bmbb CURSOR FROM g_sql
   #bmbc
   LET g_sql = "SELECT * FROM bmbc_t ",
               " WHERE bmbcent = '" ||g_enterprise|| "' AND bmbcsite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmbc001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmbc002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmbc003 = ? ",
               "   AND bmbc004 = ? ",
               "   AND to_char(bmbc005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmbc007 = ? ",
               "   AND bmbc008 = ? "
   DECLARE abmm200_reproduce_bmbc CURSOR FROM g_sql
   #bmca
   LET g_sql = "SELECT * FROM bmca_t ",
               " WHERE bmcaent = '" ||g_enterprise|| "' AND bmcasite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmca001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmca002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmca003 = ? ",
               "   AND bmca004 = ? ",
               "   AND to_char(bmca005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmca007 = ? ",
               "   AND bmca008 = ? "
   DECLARE abmm200_reproduce_bmca CURSOR FROM g_sql
   #bmcb
   LET g_sql = "SELECT * FROM bmcb_t ",
               " WHERE bmcbent = '" ||g_enterprise|| "' AND bmcbsite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmcb001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmcb002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmcb003 = ? ",
               "   AND bmcb004 = ? ",
               "   AND to_char(bmcb005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmcb007 = ? ",
               "   AND bmcb008 = ? "
   DECLARE abmm200_reproduce_bmcb CURSOR FROM g_sql
   #bmcc
   LET g_sql = "SELECT * FROM bmcc_t ",
               " WHERE bmccent = '" ||g_enterprise|| "' AND bmccsite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmcc001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmcc002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmcc003 = ? ",
               "   AND bmcc004 = ? ",
               "   AND to_char(bmcc005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmcc007 = ? ",
               "   AND bmcc008 = ? "
   DECLARE abmm200_reproduce_bmcc CURSOR FROM g_sql
   #bmcd
   LET g_sql = "SELECT * FROM bmcd_t ",
               " WHERE bmcdent = '" ||g_enterprise|| "' AND bmcdsite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmcd001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmcd002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmcd003 = ? ",
               "   AND bmcd004 = ? ",
               "   AND to_char(bmcd005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmcd007 = ? ",
               "   AND bmcd008 = ? "
   DECLARE abmm200_reproduce_bmcd CURSOR FROM g_sql
   #bmce
   LET g_sql = "SELECT * FROM bmce_t ",
               " WHERE bmceent = '" ||g_enterprise|| "' AND bmcesite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmce001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmce002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmce003 = ? ",
               "   AND bmce004 = ? ",
               "   AND to_char(bmce005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmce007 = ? ",
               "   AND bmce008 = ? "
   DECLARE abmm200_reproduce_bmce CURSOR FROM g_sql
   #bmcf
   LET g_sql = "SELECT * FROM bmcf_t ",
               " WHERE bmcfent = '" ||g_enterprise|| "' AND bmcfsite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmcf001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmcf002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmcf003 = ? ",
               "   AND bmcf004 = ? ",
               "   AND to_char(bmcf005,'yyyy-mm-dd hh24:mi:ss')=? ",   #生效日期
               "   AND bmcf007 = ? ",
               "   AND bmcf008 = ? "
   DECLARE abmm200_reproduce_bmcf CURSOR FROM g_sql
   #bmea--单身需要排除掉已经失效，没有复制bmba部分，不复制bmea
   LET g_sql = "SELECT * FROM bmea_t ",
               " WHERE bmeaent = '" ||g_enterprise|| "' AND bmeasite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmea001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmea002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmea003 = ? ",
               "   AND bmea004 = ? ",
               "   AND bmea005 = ? ",
               "   AND bmea006 = ? "
   DECLARE abmm200_reproduce_bmea CURSOR FROM g_sql
   #bmeb--单身需要排除掉已经失效，没有复制bmba部分，不复制bmeb
   LET g_sql = "SELECT * FROM bmeb_t ",
               " WHERE bmebent = '" ||g_enterprise|| "' AND bmebsite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmeb001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmeb002 = '",g_bmaa_m.bmaa002,"'",
               "   AND bmeb003 = ? ",
               "   AND bmeb004 = ? ",
               "   AND bmeb005 = ? ",
               "   AND bmeb006 = ? "
   DECLARE abmm200_reproduce_bmeb CURSOR FROM g_sql
   #备注ooff--单身需要排除掉已经失效，没有复制bmba部分，不复制ooff
   LET g_sql = "SELECT * FROM ooff_t ",
               " WHERE ooffent = ",g_enterprise,
               "   AND ooff001 = '5' ",
               "   AND ooff002 = '",g_bmaa_m.bmaasite,"'",
               "   AND ooff003 = '",g_bmaa_m.bmaa001,"'",
               "   AND ooff004 = '",g_bmaa_m.bmaa002,"'",
               "   AND ooff005 = ? ",  #bmba003
               "   AND ooff006 = ? ",  #bmba004
               #"   AND ooff007 = ? ",  #bmba005=' '
               "   AND ooff008 = ? ",  #bmba007
               "   AND ooff009 = ? "   #bmba008
   DECLARE abmm200_reproduce_ooff CURSOR FROM g_sql
   
   #--------------------定义需要考虑生效日期的复制表的cursor----------------------------------end
   
   LET g_sql = "SELECT bmbaent,bmbasite,bmba001,bmba002,bmba003, 
                       bmba004,bmba005,bmba006,bmba007,bmba008,
                       bmba009,bmba010,bmba011,bmba012,bmba013,
                       bmba014,bmba015,bmba016,bmba017,bmba018,
                       bmba019,bmba020,bmba021,bmba022,bmba023,
                       bmba024,bmba025,bmba026,bmba027,bmba028,
                       bmba029,bmba030,bmba031,bmba032 ",
               "  FROM bmba_t ",
               " WHERE bmbaent = '" ||g_enterprise|| "' AND bmbasite = '",g_bmaa_m.bmaasite,"'",
               "   AND bmba001 = '",g_bmaa_m.bmaa001,"'",
               "   AND bmba002 = '",g_bmaa_m.bmaa002,"'"
   LET g_sql = g_sql CLIPPED,
               "   AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='", l_date,"')",
               "   AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >  '",l_date,"'"," OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )"
   DECLARE abmm200_reproduce_bmba CURSOR FROM g_sql
   FOREACH abmm200_reproduce_bmba INTO l_bmba.bmbaent,l_bmba.bmbasite,l_bmba.bmba001,l_bmba.bmba002,l_bmba.bmba003, 
                                       l_bmba.bmba004,l_bmba.bmba005,l_bmba.bmba006,l_bmba.bmba007,l_bmba.bmba008,
                                       l_bmba.bmba009,l_bmba.bmba010,l_bmba.bmba011,l_bmba.bmba012,l_bmba.bmba013,
                                       l_bmba.bmba014,l_bmba.bmba015,l_bmba.bmba016,l_bmba.bmba017,l_bmba.bmba018,
                                       l_bmba.bmba019,l_bmba.bmba020,l_bmba.bmba021,l_bmba.bmba022,l_bmba.bmba023,
                                       l_bmba.bmba024,l_bmba.bmba025,l_bmba.bmba026,l_bmba.bmba027,l_bmba.bmba028,
                                       l_bmba.bmba029,l_bmba.bmba030,l_bmba.bmba031,l_bmba.bmba032
      #记录旧值
      LET l_bmba005_t = l_bmba.bmba005
      LET l_date_t = YEAR(l_bmba005_t) USING "####",'-',MONTH(l_bmba005_t) USING "&&",'-',DAY(l_bmba005_t) USING "&&",' ',TIME(l_bmba005_t)
      #更新复制值
      LET l_bmba.bmba001 = l_newno001
      LET l_bmba.bmba002 = l_newno002
      LET l_bmba.bmba026 = ''    #ECN單號
      LET l_bmba.bmba005 = l_bmba005   #生效日期

      INSERT INTO bmba_t(bmbaent,bmbasite,bmba001,bmba002,bmba003, 
                         bmba004,bmba005,bmba006,bmba007,bmba008,
                         bmba009,bmba010,bmba011,bmba012,bmba013,
                         bmba014,bmba015,bmba016,bmba017,bmba018,
                         bmba019,bmba020,bmba021,bmba022,bmba023,
                         bmba024,bmba025,bmba026,bmba027,bmba028,
                         bmba029,bmba030,bmba031,bmba032 )
      VALUES (l_bmba.bmbaent,l_bmba.bmbasite,l_bmba.bmba001,l_bmba.bmba002,l_bmba.bmba003, 
              l_bmba.bmba004,l_bmba.bmba005,l_bmba.bmba006,l_bmba.bmba007,l_bmba.bmba008,
              l_bmba.bmba009,l_bmba.bmba010,l_bmba.bmba011,l_bmba.bmba012,l_bmba.bmba013,
              l_bmba.bmba014,l_bmba.bmba015,l_bmba.bmba016,l_bmba.bmba017,l_bmba.bmba018,
              l_bmba.bmba019,l_bmba.bmba020,l_bmba.bmba021,l_bmba.bmba022,l_bmba.bmba023,
              l_bmba.bmba024,l_bmba.bmba025,l_bmba.bmba026,l_bmba.bmba027,l_bmba.bmba028,
              l_bmba.bmba029,l_bmba.bmba030,l_bmba.bmba031,l_bmba.bmba032 )
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'Insert error!'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #-------------------需要考虑生效日期的复制表-----------------------------begim
      #bmbb
      FOREACH abmm200_reproduce_bmbb USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmbb.bmbbent,l_bmbb.bmbbsite,l_bmbb.bmbb001,l_bmbb.bmbb002,l_bmbb.bmbb003,
                                           l_bmbb.bmbb004,l_bmbb.bmbb005,l_bmbb.bmbb007,l_bmbb.bmbb008,l_bmbb.bmbb009,
                                           l_bmbb.bmbb010,l_bmbb.bmbb011,l_bmbb.bmbb012
         LET l_bmbb.bmbb001 = l_newno001
         LET l_bmbb.bmbb002 = l_newno002
         LET l_bmbb.bmbb005 = l_bmba005   #生效日期
      
         INSERT INTO bmbb_t(bmbbent,bmbbsite,bmbb001,bmbb002,bmbb003,
                            bmbb004,bmbb005,bmbb007,bmbb008,bmbb009,
                            bmbb010,bmbb011,bmbb012)
         VALUES (l_bmbb.bmbbent,l_bmbb.bmbbsite,l_bmbb.bmbb001,l_bmbb.bmbb002,l_bmbb.bmbb003,
                 l_bmbb.bmbb004,l_bmbb.bmbb005,l_bmbb.bmbb007,l_bmbb.bmbb008,l_bmbb.bmbb009,
                 l_bmbb.bmbb010,l_bmbb.bmbb011,l_bmbb.bmbb012)
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmbc
      FOREACH abmm200_reproduce_bmbc USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmbc.*
         LET l_bmbc.bmbc001 = l_newno001
         LET l_bmbc.bmbc002 = l_newno002
         LET l_bmbc.bmbc005 = l_bmba005   #生效日期
         INSERT INTO bmbc_t VALUES (l_bmbc.*) #複製單身
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmca
      FOREACH abmm200_reproduce_bmca USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmca.*
         LET l_bmca.bmca001 = l_newno001
         LET l_bmca.bmca002 = l_newno002
         LET l_bmca.bmca005 = l_bmba005   #生效日期
         INSERT INTO bmca_t VALUES (l_bmca.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmcb
      FOREACH abmm200_reproduce_bmcb USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmcb.*
         LET l_bmcb.bmcb001 = l_newno001
         LET l_bmcb.bmcb002 = l_newno002
         LET l_bmcb.bmcb005 = l_bmba005   #生效日期
         INSERT INTO bmcb_t VALUES (l_bmcb.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmcc
      FOREACH abmm200_reproduce_bmcc USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmcc.*
         LET l_bmcc.bmcc001 = l_newno001
         LET l_bmcc.bmcc002 = l_newno002
         LET l_bmcc.bmcc005 = l_bmba005   #生效日期
         INSERT INTO bmcc_t VALUES (l_bmcc.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmcd
      FOREACH abmm200_reproduce_bmcd USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmcd.*
         LET l_bmcd.bmcd001 = l_newno001
         LET l_bmcd.bmcd002 = l_newno002
         LET l_bmcd.bmcd005 = l_bmba005   #生效日期
         INSERT INTO bmcd_t VALUES (l_bmcd.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmce
      FOREACH abmm200_reproduce_bmce USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmce.*
         LET l_bmce.bmce001 = l_newno001
         LET l_bmce.bmce002 = l_newno002
         LET l_bmce.bmce005 = l_bmba005   #生效日期
         INSERT INTO bmce_t VALUES (l_bmce.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmcf
      FOREACH abmm200_reproduce_bmcf USING l_bmba.bmba003,l_bmba.bmba004,l_date_t,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmcf.*
         LET l_bmcf.bmcf001 = l_newno001
         LET l_bmcf.bmcf002 = l_newno002
         LET l_bmcf.bmcf005 = l_bmba005   #生效日期
         INSERT INTO bmcf_t VALUES (l_bmcf.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmea
      FOREACH abmm200_reproduce_bmea USING l_bmba.bmba003,l_bmba.bmba004,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmea.*
         LET l_bmea.bmea001 = l_newno001
         LET l_bmea.bmea002 = l_newno002
         INSERT INTO bmea_t VALUES (l_bmea.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #bmeb
      FOREACH abmm200_reproduce_bmeb USING l_bmba.bmba003,l_bmba.bmba004,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_bmeb.*
         LET l_bmeb.bmeb001 = l_newno001
         LET l_bmeb.bmeb002 = l_newno002
         INSERT INTO bmeb_t VALUES (l_bmeb.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
      #ooff
      FOREACH abmm200_reproduce_ooff USING l_bmba.bmba003,l_bmba.bmba004,l_bmba.bmba007,l_bmba.bmba008
                                      INTO l_ooff.*
         LET l_ooff.ooff003 = l_newno001
         LET l_ooff.ooff004 = l_newno002
         INSERT INTO ooff_t VALUES (l_ooff.*) 
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'Insert error!'
            LET g_errparam.popup = TRUE
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END FOREACH
   END FOREACH
   ################--单身复制-- (需要考虑生效日期)---begin---#################################

   #备注ooff--单身需要排除掉已经失效，没有复制bmba部分，不复制ooff
   LET g_sql = "SELECT * FROM ooff_t ",
               " WHERE ooffent = ",g_enterprise,
               #"   AND ooff001 IN ('4','5') ",
               "   AND ooff001 = '4' ",  #mod 150508
               "   AND ooff002 = '",g_bmaa_m.bmaasite,"'",
               "   AND ooff003 = '",g_bmaa_m.bmaa001,"'",
               "   AND ooff004 = '",g_bmaa_m.bmaa002,"'"
   DECLARE abmm200_reproduce_ooff_a CURSOR FROM g_sql
   FOREACH abmm200_reproduce_ooff_a INTO l_ooff.*
      LET l_ooff.ooff003 = l_newno001
      LET l_ooff.ooff004 = l_newno002
      INSERT INTO ooff_t VALUES (l_ooff.*) 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'Insert error!'
         LET g_errparam.popup = TRUE
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
   END FOREACH
   
   CALL s_transaction_end('Y','0')
   ERROR 'ROW(',l_newno001,') O.K'
   LET l_oldno001 = g_bmaa_m.bmaa001
   LET l_oldno002 = g_bmaa_m.bmaa002

   CLOSE abmm200_reproduce_bmab
   CLOSE abmm200_reproduce_bmac
   CLOSE abmm200_reproduce_bmad
   CLOSE abmm200_reproduce_bmba
   CLOSE abmm200_reproduce_bmbb
   CLOSE abmm200_reproduce_bmbc
   CLOSE abmm200_reproduce_bmca
   CLOSE abmm200_reproduce_bmcb
   CLOSE abmm200_reproduce_bmcc
   CLOSE abmm200_reproduce_bmcd
   CLOSE abmm200_reproduce_bmce
   CLOSE abmm200_reproduce_bmcf
   CLOSE abmm200_reproduce_bmea
   CLOSE abmm200_reproduce_bmeb

   LET g_state = "insert"
   LET g_bmaa001_t = l_newno001
   LET g_bmaa002_t = l_newno002
   #LET g_wc = g_wc," UNION ",
   #          " SELECT bmaaent,bmaasite,bmaa001,bmaa002  FROM bmaa_t ",
   #          "  WHERE bmaaent = '",g_enterprise,"' ",
   #          "    AND bmaasite= '",g_site,"' ",
   #          "    AND bmaa001 = '",l_newno001 CLIPPED,"' ",
   #          "    AND bmaa002 = '",l_newno002, "' "
   #mod 150316
   #LET g_wc = g_wc CLIPPED,
   #           " OR (bmaasite= '",g_site,"' AND bmaa001 = '",l_newno001 CLIPPED, "' AND bmaa002 = '",l_newno002, "') "
   LET g_wc = "(",g_wc CLIPPED,
              " OR (bmaaent = ",g_enterprise," AND bmaasite= '",g_site,"' AND bmaa001 = '",l_newno001 CLIPPED, "' AND bmaa002 = '",l_newno002, "') ",
              ")"
   #mod 150316 end

   LET g_vdate = cl_get_current()
   LET g_vdate_t = g_vdate

END FUNCTION]]>
  </point>
  <point name="function.abmm200_delete" order="27" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}

   IF g_prog='abmm210' THEN
      #本作业不可执行此功能,请与bom研发单位联系（abmm200作业可执行）！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00074'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF

   IF g_bmaa_m.bmaasite IS NULL OR g_bmaa_m.bmaa001 IS NULL OR g_bmaa_m.bmaa002 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF

   CALL s_transaction_begin()

   OPEN abmm200_cl USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN abmm200_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE abmm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   FETCH abmm200_cl INTO g_bmaa_m.bmaa001,g_bmaa_m.bmaa001_imaal003,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001_imaal004,g_bmaa_m.bmaa001_imaa009,g_bmaa_m.bmaa001_imaa004,g_bmaa_m.bmaa001_imaa010,g_bmaa_m.bmaa001_imaa011,g_bmaa_m.bmaa003,g_bmaa_m.bmaa004,g_bmaa_m.vdate,g_bmaa_m.bmaastus,g_bmaa_m.bmaasite,g_bmaa_m.bmaaownid,g_bmaa_m.bmaaownid_desc,g_bmaa_m.bmaaowndp,g_bmaa_m.bmaaowndp_desc,g_bmaa_m.bmaacrtid,g_bmaa_m.bmaacrtid_desc,g_bmaa_m.bmaacrtdp,g_bmaa_m.bmaacrtdp_desc,g_bmaa_m.bmaacrtdt,g_bmaa_m.bmaamodid,g_bmaa_m.bmaamodid_desc,g_bmaa_m.bmaamoddt,g_bmaa_m.bmaacnfid,g_bmaa_m.bmaacnfid_desc,g_bmaa_m.bmaacnfdt # 鎖住將被更改或取消的資料
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bmaa_m.bmaasite
      LET g_errparam.popup = TRUE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   IF g_bmaa_m.bmaastus = 'Y' THEN
      #已审核，不可删除
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'apm-00034'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_bmaa_m.bmaasite
      LET g_errparam.popup = TRUE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL abmm200_show()

   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      #INITIALIZE g_doc.* TO NULL
      #LET g_doc.column1 = "bmaasite"
      #LET g_doc.value1 = g_bmaa_m.bmaasite
      #CALL cl_doc_remove()
      #刪除相關文件
      CALL g_pk_array.clear()
      LET g_pk_array[1].values = g_enterprise
      LET g_pk_array[1].column = "bmaaent"
      LET g_pk_array[2].values = g_bmaa_m.bmaasite
      LET g_pk_array[2].column = "bmaasite"
      LET g_pk_array[3].values = g_bmaa_m.bmaa001
      LET g_pk_array[3].column = "bmaa001"
      LET g_pk_array[4].values = g_bmaa_m.bmaa002
      LET g_pk_array[4].column = "bmaa002"
      CALL cl_doc_remove()


      #資料備份
      LET g_bmaasite_t = g_bmaa_m.bmaasite
      LET g_bmaa001_t = g_bmaa_m.bmaa001
      LET g_bmaa002_t = g_bmaa_m.bmaa002

      DELETE FROM bmaa_t
       WHERE bmaaent = g_enterprise AND bmaasite = g_bmaa_m.bmaasite
         AND bmaa001 = g_bmaa_m.bmaa001
         AND bmaa002 = g_bmaa_m.bmaa002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_bmaa_m.bmaasite
         LET g_errparam.popup = TRUE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

      #删除关联档
      CALL abmm200_delete_key("a",g_bmaa_m.bmaasite) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF

      CLEAR FORM
      CALL g_bmab_d.clear()
      CALL g_bmac_d.clear()
      CALL g_bmad_d.clear()
      CALL g_bmba_d1.clear()
      CALL g_bmba_d2.clear()
      CALL g_bmba_d3.clear()
      CALL g_bmbb_d.clear()

      #CALL abmm200_ui_browser_refresh()
      #CALL abmm200_ui_headershow()
      #CALL abmm200_ui_detailshow()
      #
      #IF g_browser_cnt > 0 THEN
      #   CALL abmm200_fetch('')
      #ELSE
      #   LET g_wc = " 1=1"
      #   CALL abmm200_browser_fill()
      #END IF
      #mark 在调用处用EXIT DIALOG

   END IF

   CLOSE abmm200_cl
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-D
   CALL cl_flow_notify(g_bmaa_m.bmaasite,'D')
   
   #LET g_state = "delete"
   #LET g_current_row = g_current_row + 1
   #LET g_current_idx =  g_current_idx + 1

END FUNCTION]]>
  </point>
  <point name="function.abmm200_set_entry" order="28" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}

   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmaasite,bmaa001,bmaa002",TRUE)
   END IF
   CALL cl_set_comp_entry("bmaa003",TRUE)
   CALL cl_set_comp_entry("bmaa_ooff013",TRUE)

END FUNCTION]]>
  </point>
  <point name="function.abmm200_set_no_entry" order="29" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1
   DEFINE l_cnt   LIKE type_t.num5

   IF p_cmd = 'u' AND g_bmaa_m.bmaastus='Y'THEN
      #已审核的不可再修改主件了
      CALL cl_set_comp_entry("bmaasite,bmaa001,bmaa002",FALSE)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmm200_set_entry_b" order="30" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}


   #add-point:set_entry_b段
   CALL cl_set_comp_entry("bmba012",TRUE) #主件底數
   CALL cl_set_comp_entry("bmba017",TRUE) #FAS選擇群組  141028 add
   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.abmm200_set_no_entry_b" order="31" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd       LIKE type_t.chr1
   DEFINE l_imaa004   LIKE imaa_t.imaa004  #料件類別
   DEFINE l_imaa004_2 LIKE imaa_t.imaa004  #料件類別
   {</Local define>}

   #add-point:set_no_entry_b段
   IF NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003>0 THEN #批次數量
      CALL cl_set_comp_entry("bmba012",FALSE)  #主件底數
   END IF
   #141028 add FAS群组处理
   SELECT imaa004 INTO l_imaa004 FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmaa_m.bmaa001
   IF l_imaa004 != 'T' THEN
      #若主件不是范本料件，备料中不可维护FAS群组
      CALL cl_set_comp_entry("bmba017",FALSE) #FAS選擇群組
   ELSE
      #若主件是范本料件，备料若也是范本料件，不能维护FAS群组
      SELECT imaa004 INTO l_imaa004_2 FROM imaa_t
       WHERE imaaent = g_enterprise
         AND imaa001 = g_bmba_d1[l_ac].bmba003
      IF l_imaa004_2 = 'T' THEN
         CALL cl_set_comp_entry("bmba017",FALSE) #FAS選擇群組
      END IF
   END IF
   #141028 end
   #end add-point
END FUNCTION]]>
  </point>
  <point name="function.abmm200_idx_chk" order="32" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_idx_chk()
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmba_d1.getLength() THEN
         LET g_detail_idx = g_bmba_d1.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmba_d1.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmba_d1.getLength() TO FORMONLY.cnt
   END IF

END FUNCTION]]>
  </point>
  <point name="function.abmm200_b_fill_bmba1" order="33" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_b_fill_bmba1()
   CALL g_bmba_d1.clear()    #g_bmba_d1 單頭及單身

   LET g_sql = "SELECT UNIQUE bmba009,bmba003,'','',bmba004,'',bmba007,'',bmba008,bmba011,bmba012,bmba010,bmba005,bmba006, ",
               "       bmba027,bmba028,bmba013,bmba014,bmba020,bmba017,t1.oocql004,bmba025,bmba018,'',bmba026,'',bmba019 ",
               "  FROM bmba_t",
               "  LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='1112' AND t1.oocql002=bmba017 AND t1.oocql003='"||g_dlang||"' ",
               " WHERE bmbaent=? AND bmbasite=? AND bmba001=? AND bmba002=?"
   IF NOT cl_null(g_wc2_bmba1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba1 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba2 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba3 CLIPPED
   END IF
   IF NOT cl_null(g_vdate) THEN
      #LET g_sql = g_sql CLIPPED," AND (bmba005 <='", g_vdate,"')",
      #                          " AND (bmba006 >  '",g_vdate,"'"," OR bmba006 IS NULL )"
      LET g_sql = g_sql CLIPPED," AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='", g_vdate,"')",
                                " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >  '",g_vdate,"'"," OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )"
   END IF
   #abmm210 取消参照研发中心的资料不显示出来,只有在不指定生效时间的查询状态再显示
   IF g_prog = 'abmm210' AND NOT cl_null(g_vdate) THEN
      LET g_sql = g_sql CLIPPED," AND bmba019 != '2' "
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY bmba_t.bmba009"
   PREPARE abmm200_pb1 FROM g_sql
   DECLARE b_fill_cs1 CURSOR FOR abmm200_pb1
   LET l_ac = 1
   OPEN b_fill_cs1 USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   FOREACH b_fill_cs1 INTO g_bmba_d1[l_ac].bmba009,g_bmba_d1[l_ac].bmba003,
                          g_bmba_d1[l_ac].bmba003_imaal003,g_bmba_d1[l_ac].bmba003_imaal004,
                          g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba004_oocql004,
                          g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba007_oocql004,
                          g_bmba_d1[l_ac].bmba008,g_bmba_d1[l_ac].bmba011,
                          g_bmba_d1[l_ac].bmba012,g_bmba_d1[l_ac].bmba010,
                          g_bmba_d1[l_ac].bmba005,g_bmba_d1[l_ac].bmba006,
                          g_bmba_d1[l_ac].bmba027,g_bmba_d1[l_ac].bmba028,g_bmba_d1[l_ac].bmba013,
                          g_bmba_d1[l_ac].bmba014,g_bmba_d1[l_ac].bmba020,
                          g_bmba_d1[l_ac].bmba017,g_bmba_d1[l_ac].bmba017_desc,g_bmba_d1[l_ac].bmba025,
                          g_bmba_d1[l_ac].bmba018,g_bmba_d1[l_ac].replace,
                          g_bmba_d1[l_ac].bmba026,g_bmba_d1[l_ac].bmba_ooff013,
                          g_bmba_d1[l_ac].bmba019
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      CALL abmm200_show_bmba003_desc1(l_ac,'s')
      CALL abmm200_show_bmba004_desc1(l_ac)
      CALL abmm200_show_bmba007_desc1(l_ac)
      #LET g_bmba_d1[l_ac].bmba004 = g_bmba_d1[l_ac].bmba004_oocql004
      #LET g_bmba_d1[l_ac].bmba007 = g_bmba_d1[l_ac].bmba007_oocql004
      CALL abmm200_show_bmba_desc(l_ac)  #ooff
      #检查是否有取替代料
      CALL abmm200_chk_replace()
         RETURNING g_bmba_d1[l_ac].replace
      DISPLAY BY NAME g_bmba_d1[l_ac].replace
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_bmba_d1.deleteElement(g_bmba_d1.getLength())
   LET g_rec_b_bmba1 = l_ac - 1
   LET l_ac = 1
   
   CLOSE b_fill_cs1
   FREE abmm200_pb1

END FUNCTION]]>
  </point>
  <point name="function.abmm200_b_fill_bmba2" order="34" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_b_fill_bmba2()
   CALL g_bmba_d2.clear()    #g_bmba_d2 單頭及單身

   LET g_sql = "SELECT UNIQUE bmba009,bmba003,'','',bmba004,'',bmba007,'',bmba008,bmba011,bmba012,bmba010,bmba005,bmba006, ",
               "       bmba021,bmba022,bmba023,bmba024,'','',bmba030,bmba031,bmba015,'',bmba016,'',bmba032 ",
               "  FROM bmba_t",
               " WHERE bmbaent=? AND bmbasite=? AND bmba001=? AND bmba002=?"
   IF NOT cl_null(g_wc2_bmba2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba2 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba1 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba3 CLIPPED
   END IF
   IF NOT cl_null(g_vdate) THEN
      #LET g_sql = g_sql CLIPPED," AND (bmba005 <='", g_vdate,"')",
      #                          " AND (bmba006 >  '",g_vdate,"'"," OR bmba006 IS NULL )"
      LET g_sql = g_sql CLIPPED," AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='", g_vdate,"')",
                                " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >  '",g_vdate,"'"," OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )"
   END IF
   #abmm210 取消参照研发中心的资料不显示出来,只有在不指定生效时间的查询状态再显示
   IF g_prog = 'abmm210' AND NOT cl_null(g_vdate) THEN
      LET g_sql = g_sql CLIPPED," AND bmba019 != '2' "
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY bmba_t.bmba009"
               
   PREPARE abmm200_pb2 FROM g_sql
   DECLARE b_fill_cs2 CURSOR FOR abmm200_pb2
   LET l_ac = 1
   OPEN b_fill_cs2 USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   FOREACH b_fill_cs2 INTO g_bmba_d2[l_ac].bmba009,g_bmba_d2[l_ac].bmba003,
                           g_bmba_d2[l_ac].bmba003_imaal003,g_bmba_d2[l_ac].bmba003_imaal004,
                           g_bmba_d2[l_ac].bmba004,g_bmba_d2[l_ac].bmba004_oocql004,
                           g_bmba_d2[l_ac].bmba007,g_bmba_d2[l_ac].bmba007_oocql004,
                           g_bmba_d2[l_ac].bmba008,g_bmba_d2[l_ac].bmba011,
                           g_bmba_d2[l_ac].bmba012,g_bmba_d2[l_ac].bmba010,
                           g_bmba_d2[l_ac].bmba005,g_bmba_d2[l_ac].bmba006,
                           g_bmba_d2[l_ac].bmba021,g_bmba_d2[l_ac].bmba022,
                           g_bmba_d2[l_ac].bmba023,g_bmba_d2[l_ac].bmba024,
                           g_bmba_d2[l_ac].bmba024_imaal003,g_bmba_d2[l_ac].bmba024_imaal004,
                           g_bmba_d2[l_ac].bmba030,g_bmba_d2[l_ac].bmba031,
                           g_bmba_d2[l_ac].bmba015,g_bmba_d2[l_ac].bmba015_desc,
                           g_bmba_d2[l_ac].bmba016,g_bmba_d2[l_ac].bmba016_inab003,
                           g_bmba_d2[l_ac].bmba032
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      CALL abmm200_show_bmba003_desc2(l_ac)
      CALL abmm200_show_bmba004_desc2(l_ac)
      CALL abmm200_show_bmba007_desc2(l_ac)
      CALL abmm200_show_bmba024_desc2(l_ac)
      CALL abmm200_show_bmba015_desc2(l_ac)
      CALL abmm200_show_bmba016_desc2(l_ac)
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   LET g_rec_b_bmba2 = l_ac - 1
   LET l_ac = 1
   CALL g_bmba_d2.deleteElement(g_bmba_d2.getLength())

   CLOSE b_fill_cs2
   FREE abmm200_pb2
END FUNCTION]]>
  </point>
  <point name="function.abmm200_b_fill_bmba3" order="35" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_b_fill_bmba3()
   CALL g_bmba_d3.clear() 

   LET g_sql = "SELECT UNIQUE bmba009,bmba003,'','',bmba004,'',bmba007,'',bmba008,bmba011,bmba012,bmba010,bmba005,bmba006, ",
               "       bmba029 ",
               "  FROM bmba_t  ",
               " WHERE bmbaent=? AND bmbasite=? AND bmba001=? AND bmba002=?"
   IF NOT cl_null(g_wc2_bmba3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba3 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba1) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba1 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmba2 CLIPPED
   END IF
   IF NOT cl_null(g_vdate) THEN
      #LET g_sql = g_sql CLIPPED," AND (bmba005 <='", g_vdate,"')",
      #                          " AND (bmba006 >  '",g_vdate,"'"," OR bmba006 IS NULL )"
      LET g_sql = g_sql CLIPPED," AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='", g_vdate,"')",
                                " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >  '",g_vdate,"'"," OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )"
   END IF
   #abmm210 取消参照研发中心的资料不显示出来,只有在不指定生效时间的查询状态再显示
   IF g_prog = 'abmm210' AND NOT cl_null(g_vdate) THEN
      LET g_sql = g_sql CLIPPED," AND bmba019 != '2' "
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY bmba_t.bmba009"

   PREPARE abmm200_pb3 FROM g_sql
   DECLARE b_fill_cs3 CURSOR FOR abmm200_pb3
   LET l_ac = 1
   OPEN b_fill_cs3 USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   FOREACH b_fill_cs3 INTO g_bmba_d3[l_ac].bmba009,g_bmba_d3[l_ac].bmba003,
                          g_bmba_d3[l_ac].bmba003_imaal003,g_bmba_d3[l_ac].bmba003_imaal004,
                          g_bmba_d3[l_ac].bmba004,g_bmba_d3[l_ac].bmba004_oocql004,
                          g_bmba_d3[l_ac].bmba007,g_bmba_d3[l_ac].bmba007_oocql004,
                          g_bmba_d3[l_ac].bmba008,g_bmba_d3[l_ac].bmba011,
                          g_bmba_d3[l_ac].bmba012,g_bmba_d3[l_ac].bmba010,
                          g_bmba_d3[l_ac].bmba005,g_bmba_d3[l_ac].bmba006,
                          g_bmba_d3[l_ac].bmba029

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      CALL abmm200_show_bmba003_desc3(l_ac)
      CALL abmm200_show_bmba004_desc3(l_ac)
      CALL abmm200_show_bmba007_desc3(l_ac)
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_bmba_d3.deleteElement(g_bmba_d3.getLength())
   LET g_rec_b_bmba3 = l_ac - 1
   LET l_ac = 1

   CLOSE b_fill_cs3
   FREE abmm200_pb3
END FUNCTION]]>
  </point>
  <point name="function.abmm200_b_fill_bmbb" order="36" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_b_fill_bmbb()
   CALL g_bmbb_d.clear() 

   LET g_sql = "SELECT UNIQUE bmbb009,bmbb010,bmbb011,bmbb012 ",
               "  FROM bmbb_t ",
               " WHERE bmbbent=? AND bmbbsite=? AND bmbb001=? AND bmbb002=?",
               "   AND bmbb003=? AND bmbb004=? ",
               #"   AND bmbb005=? ",
               "   AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss')=? ",
               "   AND bmbb007=? AND bmbb008=? "
   IF NOT cl_null(g_wc2_bmbb) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc2_bmbb CLIPPED
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY bmbb_t.bmbb009"

   PREPARE abmm200_pb_bmbb FROM g_sql
   DECLARE b_fill_cs_bmbb CURSOR FOR abmm200_pb_bmbb
   LET l_ac_bmbb = 1
   #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
   LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
   OPEN b_fill_cs_bmbb USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,
                         g_bmba_d3[l_ac].bmba003,g_bmba_d3[l_ac].bmba004,
                         g_bmba005_2,g_bmba_d3[l_ac].bmba007,
                         g_bmba_d3[l_ac].bmba008
   FOREACH b_fill_cs_bmbb INTO g_bmbb_d[l_ac_bmbb].bmbb009,g_bmbb_d[l_ac_bmbb].bmbb010,
                               g_bmbb_d[l_ac_bmbb].bmbb011,g_bmbb_d[l_ac_bmbb].bmbb012
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      #end add-point

      LET l_ac_bmbb = l_ac_bmbb + 1
      IF l_ac_bmbb > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_bmbb_d.deleteElement(g_bmbb_d.getLength())
   LET g_rec_b_bmbb = l_ac_bmbb - 1
   LET l_ac_bmbb = 1

   CLOSE b_fill_cs_bmbb
   FREE abmm200_pb_bmbb
END FUNCTION]]>
  </point>
  <point name="function.abmm200_b_fill_bmab" order="37" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_b_fill_bmab()
   CALL g_bmab_d.clear()    #g_bmab_d 單頭及單身

   LET g_sql = "SELECT UNIQUE bmab003,'','','','',bmab004,bmab005,bmab006 ",
               "  FROM bmab_t ",
               " WHERE bmabent=? AND bmabsite=? AND bmab001=? AND bmab002=?"
   IF NOT cl_null(g_wc2_bmab) THEN
      LET g_sql = g_sql CLIPPED,"   AND ",g_wc2_bmab CLIPPED
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY bmab_t.bmab003"
   PREPARE abmm200_bmab_pb FROM g_sql
   DECLARE b_fill_bmab_cs CURSOR FOR abmm200_bmab_pb
   LET l_ac = 1
   OPEN b_fill_bmab_cs USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   FOREACH b_fill_bmab_cs INTO g_bmab_d[l_ac].bmab003,
                               g_bmab_d[l_ac].bmab003_imaal003,g_bmab_d[l_ac].bmab003_imaal004,
                               g_bmab_d[l_ac].bmab003_imaa009,g_bmab_d[l_ac].bmab003_imaa010,
                               g_bmab_d[l_ac].bmab004,g_bmab_d[l_ac].bmab005,
                               g_bmab_d[l_ac].bmab006

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      CALL abmm200_show_bmab003_desc(l_ac)
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_bmab_d.deleteElement(g_bmab_d.getLength())
   LET g_rec_b_bmab = l_ac - 1
   LET l_ac = 1

   CLOSE b_fill_bmab_cs
   FREE abmm200_bmab_pb
END FUNCTION]]>
  </point>
  <point name="function.abmm200_b_fill_bmac" order="38" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_b_fill_bmac()
   CALL g_bmac_d.clear()    #g_bmac_d 單頭及單身

   LET g_sql = "SELECT UNIQUE bmac003,'','',bmac005,bmac006,bmac004,bmac007,bmac008 ",
               "  FROM bmac_t ",
               " WHERE bmacent=? AND bmacsite=? AND bmac001=? AND bmac002=?"
   IF NOT cl_null(g_wc2_bmac) THEN
      LET g_sql = g_sql CLIPPED,"   AND ",g_wc2_bmac CLIPPED
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY bmac_t.bmac003"
   PREPARE abmm200_bmac_pb FROM g_sql
   DECLARE b_fill_bmac_cs CURSOR FOR abmm200_bmac_pb
   LET l_ac = 1
   OPEN b_fill_bmac_cs USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   FOREACH b_fill_bmac_cs INTO g_bmac_d[l_ac].bmac003,
                               g_bmac_d[l_ac].bmac003_imaal003,g_bmac_d[l_ac].bmac003_imaal004,
                               g_bmac_d[l_ac].bmac005,g_bmac_d[l_ac].bmac006,
                               g_bmac_d[l_ac].bmac004,g_bmac_d[l_ac].bmac007,
                               g_bmac_d[l_ac].bmac008

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      CALL abmm200_show_bmac003_desc(l_ac,'s')
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_bmac_d.deleteElement(g_bmac_d.getLength())
   LET g_rec_b_bmac = l_ac - 1
   LET l_ac = 1

   CLOSE b_fill_bmac_cs
   FREE abmm200_bmac_pb
END FUNCTION]]>
  </point>
  <point name="function.abmm200_b_fill_bmad" order="39" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_b_fill_bmad()
   CALL g_bmad_d.clear()    #g_bmad_d 單頭及單身

   LET g_sql = "SELECT UNIQUE bmad003,'','','','',bmad004,bmad005,bmad006,bmad007 ",
               "  FROM bmad_t ",
               " WHERE bmadent=? AND bmadsite=? AND bmad001=? AND bmad002=?"
   IF NOT cl_null(g_wc2_bmad) THEN
      LET g_sql = g_sql CLIPPED,"   AND ",g_wc2_bmad CLIPPED
   END IF
   LET g_sql = g_sql CLIPPED," ORDER BY bmad_t.bmad003"
   PREPARE abmm200_bmad_pb FROM g_sql
   DECLARE b_fill_bmad_cs CURSOR FOR abmm200_bmad_pb
   LET l_ac = 1
   OPEN b_fill_bmad_cs USING g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002
   FOREACH b_fill_bmad_cs INTO g_bmad_d[l_ac].bmad003,
                               g_bmad_d[l_ac].bmad003_imaal003,g_bmad_d[l_ac].bmad003_imaal004,
                               g_bmad_d[l_ac].bmad003_imaa009 ,g_bmad_d[l_ac].bmad003_imaa010,
                               g_bmad_d[l_ac].bmad004,g_bmad_d[l_ac].bmad005,
                               g_bmad_d[l_ac].bmad006,g_bmad_d[l_ac].bmad007

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      CALL abmm200_show_bmad003_desc(l_ac,'s')
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

   END FOREACH
   CALL g_bmad_d.deleteElement(g_bmad_d.getLength())
   LET g_rec_b_bmad = l_ac - 1
   LET l_ac =  1

   CLOSE b_fill_bmad_cs
   FREE abmm200_bmad_pb
END FUNCTION]]>
  </point>
  <point name="function.abmm200_statechange" order="40" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_statechange()
   DEFINE lc_state LIKE type_t.chr5
   DEFINE l_action_choice  STRING
   
   ERROR ""     #清空畫面右下側ERROR區塊

   IF g_prog='abmm210' THEN
      #本作业不可执行此功能,请与bom研发单位联系（abmm200作业可执行）！
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00074'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF

   IF g_bmaa_m.bmaa001 IS NULL OR g_bmaa_m.bmaa002 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         #CASE g_bmaa_m.bmaastus
         #   WHEN "N"
         #      HIDE OPTION "unconfirmed"
         #   WHEN "X"
         #      HIDE OPTION "void"
         #   WHEN "Y"
         #      HIDE OPTION "confirm"
         #END CASE

      #add-point:stus控制
         CALL cl_set_act_visible("invalid,confirmed,open", TRUE)  #X，Y，N
         CASE g_bmaa_m.bmaastus
            WHEN 'Y' 
                 CALL cl_set_act_visible("invalid,confirmed", FALSE)
            WHEN 'X'
                 CALL cl_set_act_visible("confirmed,invalid", FALSE)
            WHEN 'N'
                 CALL cl_set_act_visible("open", FALSE)
         END CASE 
      #end add-point

      #使Y
      ON ACTION confirmed
         LET l_action_choice="confirmed"
         LET lc_state = "Y"
         EXIT MENU

      #使N
      ON ACTION open
         LET l_action_choice="open"
         LET lc_state = "N"
         EXIT MENU

      #使X
      ON ACTION invalid   #void
         LET l_action_choice="invalid "
         LET lc_state = "X"
         EXIT MENU
   END MENU
   IF INT_FLAG THEN
      LET INT_FLAG = FALSE
      RETURN
   END IF

   IF (lc_state <> "N" AND lc_state <> "X" AND lc_state <> "Y") OR cl_null(lc_state) THEN
      RETURN
   END IF

   CALL s_transaction_begin()
   
   #add-point:stus修改前
   LET l_success = TRUE
   CASE 
      WHEN l_action_choice='confirmed'  #Y
           CALL s_abmm200_confirm(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002) RETURNING l_success
           IF l_success = FALSE THEN
              CALL s_transaction_end('N','0')
              RETURN
           END IF
      WHEN l_action_choice='open'  #N
           IF g_bmaa_m.bmaastus = 'Y' THEN
              CALL s_abmm200_unconfirm(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002) RETURNING l_success
              IF l_success = FALSE THEN
                 CALL s_transaction_end('N','0')
                 RETURN
              END IF
           END IF
           IF g_bmaa_m.bmaastus = 'X' THEN
              CALL s_abmm200_valid(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002) RETURNING l_success
              IF l_success = FALSE THEN
                 CALL s_transaction_end('N','0')
                 RETURN
              END IF
           END IF
      WHEN l_action_choice='invalid'  #X
           CALL s_abmm200_void(g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002) RETURNING l_success
           IF l_success = FALSE THEN
              CALL s_transaction_end('N','0')
              RETURN
           END IF
   END CASE
   #end add-point

   UPDATE bmaa_t SET bmaastus = lc_state
    WHERE bmaaent = g_enterprise AND bmaasite = g_bmaa_m.bmaasite
      AND bmaa001 = g_bmaa_m.bmaa001 AND bmaa002 = g_bmaa_m.bmaa002
   IF SQLCA.sqlcode THEN
      LET l_success = FALSE
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CALL s_transaction_end('N','0')
   END IF

   #add-point:stus修改後
   IF l_success = FALSE THEN
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png") #void
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png") #confirm
      END CASE
   END IF 
   #end add-point

   LET g_state = "statechange"
   LET g_bmaa001_t = g_bmaa_m.bmaa001
   LET g_bmaa002_t = g_bmaa_m.bmaa002
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmab_to" order="41" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmab_to()
   LET g_bmab_d[l_ac].bmab003 = g_bmab.bmab003
   LET g_bmab_d[l_ac].bmab004 = g_bmab.bmab004
   LET g_bmab_d[l_ac].bmab005 = g_bmab.bmab005
   LET g_bmab_d[l_ac].bmab006 = g_bmab.bmab006

   CALL abmm200_show_bmab003_desc(l_ac)
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmac_to" order="42" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmac_to()
   LET g_bmac_d[l_ac].bmac003 = g_bmac.bmac003
   LET g_bmac_d[l_ac].bmac005 = g_bmac.bmac005
   LET g_bmac_d[l_ac].bmac006 = g_bmac.bmac006
   LET g_bmac_d[l_ac].bmac004 = g_bmac.bmac004
   LET g_bmac_d[l_ac].bmac007 = g_bmac.bmac007
   LET g_bmac_d[l_ac].bmac008 = g_bmac.bmac008

   CALL abmm200_show_bmac003_desc(l_ac,'s')

END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmad_to" order="43" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmad_to()
   LET g_bmad_d[l_ac].bmad003 = g_bmad.bmad003
   LET g_bmad_d[l_ac].bmad004 = g_bmad.bmad004
   LET g_bmad_d[l_ac].bmad005 = g_bmad.bmad005
   LET g_bmad_d[l_ac].bmad006 = g_bmad.bmad006
   LET g_bmad_d[l_ac].bmad007 = g_bmad.bmad007
   
   CALL abmm200_show_bmab003_desc(l_ac)
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmba_to1" order="44" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmba_to1()
   LET g_bmba_d1[l_ac].bmba009 = g_bmba.bmba009
   LET g_bmba_d1[l_ac].bmba003 = g_bmba.bmba003
   LET g_bmba_d1[l_ac].bmba004 = g_bmba.bmba004
   LET g_bmba_d1[l_ac].bmba007 = g_bmba.bmba007
   LET g_bmba_d1[l_ac].bmba008 = g_bmba.bmba008
   LET g_bmba_d1[l_ac].bmba011 = g_bmba.bmba011
   LET g_bmba_d1[l_ac].bmba012 = g_bmba.bmba012
   LET g_bmba_d1[l_ac].bmba010 = g_bmba.bmba010
   LET g_bmba_d1[l_ac].bmba005 = g_bmba.bmba005
   LET g_bmba_d1[l_ac].bmba006 = g_bmba.bmba006
   LET g_bmba_d1[l_ac].bmba027 = g_bmba.bmba027
   LET g_bmba_d1[l_ac].bmba028 = g_bmba.bmba028
   LET g_bmba_d1[l_ac].bmba013 = g_bmba.bmba013
   LET g_bmba_d1[l_ac].bmba014 = g_bmba.bmba014
   LET g_bmba_d1[l_ac].bmba020 = g_bmba.bmba020
   LET g_bmba_d1[l_ac].bmba017 = g_bmba.bmba017
   LET g_bmba_d1[l_ac].bmba025 = g_bmba.bmba025
   LET g_bmba_d1[l_ac].bmba018 = g_bmba.bmba018
   LET g_bmba_d1[l_ac].bmba026 = g_bmba.bmba026
   LET g_bmba_d1[l_ac].bmba019 = g_bmba.bmba019

   CALL abmm200_show_bmba003_desc1(l_ac,'s')
   CALL abmm200_show_bmba004_desc1(l_ac)
   CALL abmm200_show_bmba007_desc1(l_ac)
   CALL abmm200_show_bmba_desc(l_ac)
   #检查是否有取替代料
   CALL abmm200_chk_replace()
      RETURNING g_bmba_d1[l_ac].replace
   
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmba_to2" order="45" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmba_to2()
   LET g_bmba_d2[l_ac].bmba009 = g_bmba.bmba009
   LET g_bmba_d2[l_ac].bmba003 = g_bmba.bmba003
   LET g_bmba_d2[l_ac].bmba004 = g_bmba.bmba004
   LET g_bmba_d2[l_ac].bmba007 = g_bmba.bmba007
   LET g_bmba_d2[l_ac].bmba008 = g_bmba.bmba008
   LET g_bmba_d2[l_ac].bmba011 = g_bmba.bmba011
   LET g_bmba_d2[l_ac].bmba012 = g_bmba.bmba012
   LET g_bmba_d2[l_ac].bmba010 = g_bmba.bmba010
   LET g_bmba_d2[l_ac].bmba005 = g_bmba.bmba005
   LET g_bmba_d2[l_ac].bmba006 = g_bmba.bmba006
   LET g_bmba_d2[l_ac].bmba021 = g_bmba.bmba021
   LET g_bmba_d2[l_ac].bmba022 = g_bmba.bmba022
   LET g_bmba_d2[l_ac].bmba023 = g_bmba.bmba023
   LET g_bmba_d2[l_ac].bmba024 = g_bmba.bmba024
   LET g_bmba_d2[l_ac].bmba030 = g_bmba.bmba030
   LET g_bmba_d2[l_ac].bmba031 = g_bmba.bmba031
   LET g_bmba_d2[l_ac].bmba015 = g_bmba.bmba015
   LET g_bmba_d2[l_ac].bmba016 = g_bmba.bmba016
   LET g_bmba_d2[l_ac].bmba032 = g_bmba.bmba032

   CALL abmm200_show_bmba003_desc2(l_ac)
   CALL abmm200_show_bmba004_desc2(l_ac)
   CALL abmm200_show_bmba007_desc2(l_ac)
   CALL abmm200_show_bmba024_desc2(l_ac)
   CALL abmm200_show_bmba015_desc2(l_ac)
   CALL abmm200_show_bmba016_desc2(l_ac)
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmba_to3" order="46" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmba_to3()
   LET g_bmba_d3[l_ac].bmba009 = g_bmba.bmba009
   LET g_bmba_d3[l_ac].bmba003 = g_bmba.bmba003
   LET g_bmba_d3[l_ac].bmba004 = g_bmba.bmba004
   LET g_bmba_d3[l_ac].bmba007 = g_bmba.bmba007
   LET g_bmba_d3[l_ac].bmba008 = g_bmba.bmba008
   LET g_bmba_d3[l_ac].bmba011 = g_bmba.bmba011
   LET g_bmba_d3[l_ac].bmba012 = g_bmba.bmba012
   LET g_bmba_d3[l_ac].bmba010 = g_bmba.bmba010
   LET g_bmba_d3[l_ac].bmba005 = g_bmba.bmba005
   LET g_bmba_d3[l_ac].bmba006 = g_bmba.bmba006
   LET g_bmba_d3[l_ac].bmba029 = g_bmba.bmba029

   CALL abmm200_show_bmba003_desc3(l_ac)
   CALL abmm200_show_bmba004_desc3(l_ac)
   CALL abmm200_show_bmba007_desc3(l_ac)
END FUNCTION]]>
  </point>
  <point name="function.abmm200_bmbb_to" order="47" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_bmbb_to()
   LET g_bmbb_d[l_ac_bmbb].bmbb009 = g_bmbb.bmbb009
   LET g_bmbb_d[l_ac_bmbb].bmbb010 = g_bmbb.bmbb010
   LET g_bmbb_d[l_ac_bmbb].bmbb011 = g_bmbb.bmbb011
   LET g_bmbb_d[l_ac_bmbb].bmbb012 = g_bmbb.bmbb012
END FUNCTION]]>
  </point>
  <point name="function.abmm200_chk_replace" order="48" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_chk_replace()
DEFINE r_return    LIKE type_t.chr1  #是否有取替代料
DEFINE l_cnt1      LIKE type_t.num5
DEFINE l_cnt2      LIKE type_t.num5

   SELECT COUNT(*) INTO l_cnt1 FROM bmea_t
    WHERE bmeaent = g_enterprise
      AND bmeasite= g_bmaa_m.bmaasite
      AND bmea001 = g_bmaa_m.bmaa001         #主件
      AND bmea002 = g_bmaa_m.bmaa002         #特性
      AND bmea003 = g_bmba_d1[l_ac].bmba003  #元件编号
   SELECT COUNT(*) INTO l_cnt2 FROM bmea_t
    WHERE bmeaent = g_enterprise
      AND bmeasite= g_bmaa_m.bmaasite
      AND bmea001 = 'ALL'                    #主件
      AND bmea003 = g_bmba_d1[l_ac].bmba003  #元件编号
   IF l_cnt1 > 0 OR l_cnt2 > 0 THEN
      LET r_return = 'Y'
   ELSE
      LET r_return = 'N'
   END IF
   
   RETURN r_return
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_ooff_key" order="49" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_update_ooff_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         #bom单头备注
         UPDATE ooff_t SET (ooff002,ooff003,ooff004) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE ooffent = g_enterprise AND ooff001 = '4'
            AND ooff002 = g_bmaasite_t
            AND ooff003 = g_bmaa001_t
            AND ooff004 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF

         #bom单身备注
         UPDATE ooff_t SET (ooff002,ooff003,ooff004) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE ooffent = g_enterprise AND ooff001 = '5'
            AND ooff002 = g_bmaasite_t
            AND ooff003 = g_bmaa001_t
            AND ooff004 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #bom单身备注
         LET g_bmba005 = YEAR(g_bmba_d1[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[l_ac].bmba005)
         LET g_bmba005_t = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE ooff_t SET (ooff005,ooff006,ooff007,ooff008,ooff009) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,' ', #mod 150210 g_bmba005->' '
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE ooffent = g_enterprise AND ooff001 = '5'
            AND ooff002 = g_bmaa_m.bmaasite
            AND ooff003 = g_bmaa_m.bmaa001
            AND ooff004 = g_bmaa_m.bmaa002
            AND ooff005 = g_bmba_d1_t.bmba003
            AND ooff006 = g_bmba_d1_t.bmba004
            #AND ooff007 = g_bmba005_t
            AND ooff007 = ' '  #mod 150210
            AND ooff008 = g_bmba_d1_t.bmba007
            AND ooff009 = g_bmba_d1_t.bmba008 
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF 
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE ooff_t SET (ooff005,ooff006,ooff007,ooff008,ooff009) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,' ', #mod 150210 g_bmba005->' ' 
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE ooffent = g_enterprise AND ooff001 = '5'
               AND ooff002!= g_bmaa_m.bmaasite
               #mark 141231
               #AND ooff002 IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                  where ooefent = g_enterprise
               #                        #满足aimi150中的产品分类页签
               #                    and (ooef001 IN (select unique imda001 from imda_t 
               #                                      where imdaent = g_enterprise
               #                                        and imdastus= 'Y'             #有效的
               #                                        and imda005 = 'Y'             #BOM引入
               #                                        and imda003 = '1'             #自动引入
               #                                        #and imda002 = l_imaa009)      #产品分类
               #                                        and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                       OR 
               #                        #满足aimi150中的料件页签
               #                         ooef001 IN (select unique imdb001 from imdb_t 
               #                                      where imdbent = g_enterprise
               #                                        and imdbstus= 'Y'             #有效的
               #                                        and imdb005 = 'Y'             #BOM引入
               #                                        and imdb003 = '1'             #自动引入
               #                                        #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                        and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                    )
               #                         )
               #                 )
               #mark 141231 end
               AND ooff003 = g_bmaa_m.bmaa001
               AND ooff004 = g_bmaa_m.bmaa002
               AND ooff005 = g_bmba_d1_t.bmba003
               AND ooff006 = g_bmba_d1_t.bmba004
               #AND ooff007 = g_bmba005_t
               AND ooff007 = ' '   #mod 150210
               AND ooff008 = g_bmba_d1_t.bmba007
               AND ooff009 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE ooff_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmbb_key" order="50" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_update_bmbb_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmbb_t SET (bmbbsite,bmbb001,bmbb002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmbbent = g_enterprise AND bmbbsite = g_bmaasite_t
            AND bmbb001 = g_bmaa001_t
            AND bmbb002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmbb_t SET (bmbb003,bmbb004,bmbb005,bmbb007,bmbb008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmbbent = g_enterprise
            AND bmbbsite= g_bmaa_m.bmaasite
            AND bmbb001 = g_bmaa_m.bmaa001
            AND bmbb002 = g_bmaa_m.bmaa002
            AND bmbb003 = g_bmba_d1_t.bmba003
            AND bmbb004 = g_bmba_d1_t.bmba004
            #AND bmbb005 = g_bmba_d1_t.bmba005
            AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmbb007 = g_bmba_d1_t.bmba007
            AND bmbb008 = g_bmba_d1_t.bmba008 
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF 
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            #LET g_bmba005_2 = g_bmba_d1_t.bmba005
            LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
            UPDATE bmbb_t SET (bmbb003,bmbb004,bmbb005,bmbb007,bmbb008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmbbent = g_enterprise
               AND bmbbsite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmbbsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmbb001 = g_bmaa_m.bmaa001
               AND bmbb002 = g_bmaa_m.bmaa002
               AND bmbb003 = g_bmba_d1_t.bmba003
               AND bmbb004 = g_bmba_d1_t.bmba004
               #AND bmbb005 = g_bmba_d1_t.bmba005
               AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmbb007 = g_bmba_d1_t.bmba007
               AND bmbb008 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmbb_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmba_key" order="51" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_update_bmba_key()
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE
   
   UPDATE bmba_t SET bmbasite= g_bmaa_m.bmaasite,
                     bmba001 = g_bmaa_m.bmaa001,
                     bmba002 = g_bmaa_m.bmaa002
    WHERE bmbaent = g_enterprise AND bmbasite = g_bmaasite_t
      AND bmba001 = g_bmaa001_t
      AND bmba002 = g_bmaa002_t
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmba_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmad_key" order="52" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_update_bmad_key()
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE
   
   UPDATE bmad_t SET bmadsite= g_bmaa_m.bmaasite,
                     bmad001 = g_bmaa_m.bmaa001,
                     bmad002 = g_bmaa_m.bmaa002
    WHERE bmadent = g_enterprise AND bmadsite = g_bmaasite_t
      AND bmad001 = g_bmaa001_t
      AND bmad002 = g_bmaa002_t
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmad_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmac_key" order="53" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_update_bmac_key()
DEFINE r_success    LIKE type_t.num5

   LET r_success = TRUE

   UPDATE bmac_t SET bmacsite= g_bmaa_m.bmaasite,
                     bmac001 = g_bmaa_m.bmaa001,
                     bmac002 = g_bmaa_m.bmaa002
    WHERE bmacent = g_enterprise AND bmacsite = g_bmaasite_t
      AND bmac001 = g_bmaa001_t
      AND bmac002 = g_bmaa002_t
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmac_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      LET r_success = FALSE
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmab_key" order="54" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_update_bmab_key()
DEFINE r_success    LIKE type_t.num5
DEFINE l_sql        STRING

   LET r_success = TRUE
   
   UPDATE bmab_t SET bmabsite= g_bmaa_m.bmaasite,
                     bmab001 = g_bmaa_m.bmaa001,
                     bmab002 = g_bmaa_m.bmaa002
    WHERE bmabent = g_enterprise
      AND bmabsite = g_bmaasite_t
      AND bmab001 = g_bmaa001_t
      AND bmab002 = g_bmaa002_t
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmab_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaa001_desc" order="55" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaa001_desc(p_type)
DEFINE p_type LIKE type_t.chr1   #i:input   s:show

   IF cl_null(g_bmaa_m.bmaa001) THEN
      LET g_bmaa_m.bmaa001_imaal003 = ''
      LET g_bmaa_m.bmaa001_imaal004 = ''
      DISPLAY BY NAME g_bmaa_m.bmaa001_imaal003
      DISPLAY BY NAME g_bmaa_m.bmaa001_imaal004
      LET g_bmaa_m.bmaa001_imaa009 = ''
      LET g_bmaa_m.bmaa001_imaa004 = ''
      LET g_bmaa_m.bmaa001_imaa010 = ''
      LET g_bmaa_m.bmaa001_imaa011 = ''
      DISPLAY BY NAME g_bmaa_m.bmaa001_imaa009
      DISPLAY BY NAME g_bmaa_m.bmaa001_imaa004
      DISPLAY BY NAME g_bmaa_m.bmaa001_imaa010
      DISPLAY BY NAME g_bmaa_m.bmaa001_imaa011
      LET g_bmaa_m.imaa009_desc = ''
      DISPLAY BY NAME g_bmaa_m.imaa009_desc
      LET g_bmaa_m.imaa010_desc = ''
      DISPLAY BY NAME g_bmaa_m.imaa010_desc
      LET g_bmaa_m.bmaa004 = ''    
      DISPLAY BY NAME g_bmaa_m.bmaa004
      LET g_bmaa_m.bmaa004_desc = ''
      DISPLAY BY NAME g_bmaa_m.bmaa004_desc
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaa001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaa001_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmaa_m.bmaa001_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaal003
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaal004

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaa001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaa009,imaa004,imaa010,imaa011 FROM imaa_t WHERE imaaent='"||g_enterprise||"' AND imaa001=? ","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaa001_imaa009 = '', g_rtn_fields[1] , ''
   LET g_bmaa_m.bmaa001_imaa004 = '', g_rtn_fields[2] , ''
   LET g_bmaa_m.bmaa001_imaa010 = '', g_rtn_fields[3] , ''
   LET g_bmaa_m.bmaa001_imaa011 = '', g_rtn_fields[4] , ''
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa009
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa004
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa010
   DISPLAY BY NAME g_bmaa_m.bmaa001_imaa011

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaa001_imaa009
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmaa_m.imaa009_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.imaa009_desc

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaa001_imaa010
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='210' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmaa_m.imaa010_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.imaa010_desc

   #自动带值部分
   IF p_type='i' THEN
      #生产单位
      IF cl_null(g_bmaa001_t) OR g_bmaa_m.bmaa001 != g_bmaa001_t THEN
         LET g_bmaa_m.bmaa004 = ''
         SELECT imae016 INTO g_bmaa_m.bmaa004
           FROM imae_t
          WHERE imaeent = g_enterprise
            AND imaesite= g_bmaa_m.bmaasite
            AND imae001 = g_bmaa_m.bmaa001      
         DISPLAY BY NAME g_bmaa_m.bmaa004
      END IF
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaa004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaa004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.bmaa004_desc

END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaa_desc" order="56" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaa_desc()
   IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001) THEN
      RETURN
   END IF
   IF cl_null(g_bmaa_m.bmaa002) THEN
      LET g_bmaa_m.bmaa002 = ' '
   END IF

   CALL s_aooi360_sel('4',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,'','','','','','','','4')
      RETURNING l_success,g_bmaa_m.bmaa_ooff013
   DISPLAY BY NAME g_bmaa_m.bmaa_ooff013
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba_desc" order="57" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba_desc(p_ac)
   DEFINE p_ac        LIKE type_t.num5
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_bmba004   LIKE bmba_t.bmba004
   DEFINE l_bmba007   LIKE bmba_t.bmba007
   DEFINE l_bmba008   LIKE bmba_t.bmba008

   IF cl_null(g_bmaa_m.bmaasite) OR cl_null(g_bmaa_m.bmaa001)
     OR cl_null(g_bmba_d1[p_ac].bmba003) OR cl_null(g_bmba_d1[p_ac].bmba005) THEN
      RETURN
   END IF
   
   IF cl_null(g_bmaa_m.bmaa002) THEN
      LET g_bmaa_m.bmaa002 = ' '
   END IF
   IF cl_null(g_bmba_d1[p_ac].bmba004) THEN
      LET l_bmba004 = ' '
   ELSE
      LET l_bmba004 = g_bmba_d1[p_ac].bmba004
   END IF
   IF cl_null(g_bmba_d1[p_ac].bmba007) THEN
      LET l_bmba007 = ' '
   ELSE
      LET l_bmba007 = g_bmba_d1[p_ac].bmba007
   END IF
   IF cl_null(g_bmba_d1[p_ac].bmba008) THEN
      LET l_bmba008 = ' '
   ELSE
      LET l_bmba008 = g_bmba_d1[p_ac].bmba008
   END IF

   #bom单身备注
   LET g_bmba005 = YEAR(g_bmba_d1[p_ac].bmba005) USING "####",'-',MONTH(g_bmba_d1[p_ac].bmba005) USING "&&",'-',DAY(g_bmba_d1[p_ac].bmba005) USING "&&",' ',TIME(g_bmba_d1[p_ac].bmba005)
   #CALL s_aooi360_sel('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[p_ac].bmba003,l_bmba004,g_bmba005,l_bmba007,l_bmba008,'','','4') #mark 150210
   #CALL s_aooi360_sel('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[p_ac].bmba003,l_bmba004,g_bmba_d1[p_ac].bmba005,l_bmba007,l_bmba008,'','','4')
   CALL s_aooi360_sel('5',g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1[p_ac].bmba003,l_bmba004,' ',l_bmba007,l_bmba008,'','','4') #add 150210
      RETURNING l_success,g_bmba_d1[p_ac].bmba_ooff013
   DISPLAY BY NAME g_bmba_d1[l_ac].bmba_ooff013
   
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaaownid_desc" order="58" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaaownid_desc()
   IF cl_null(g_bmaa_m.bmaaownid) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaaownid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaaownid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.bmaaownid_desc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaaowndp_desc" order="59" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaaowndp_desc()
   IF cl_null(g_bmaa_m.bmaaowndp) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaaowndp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaaowndp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.bmaaowndp_desc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaacrtid_desc" order="60" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaacrtid_desc()
   IF cl_null(g_bmaa_m.bmaacrtid) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaacrtid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaacrtid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.bmaacrtid_desc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaacrtdp_desc" order="61" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaacrtdp_desc()
   IF cl_null(g_bmaa_m.bmaacrtdp) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaacrtdp
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaacrtdp_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.bmaacrtdp_desc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaamodid_desc" order="62" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaamodid_desc()
   IF cl_null(g_bmaa_m.bmaamodid) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaamodid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaamodid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.bmaamodid_desc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmaacnfid_desc" order="63" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmaacnfid_desc()
   IF cl_null(g_bmaa_m.bmaacnfid) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa_m.bmaacnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_bmaa_m.bmaacnfid_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmaa_m.bmaacnfid_desc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmab003_desc" order="64" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmab003_desc(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmab_d[p_ac].bmab003) THEN
      LET g_bmab_d[p_ac].bmab003_imaal003 = ''
      LET g_bmab_d[p_ac].bmab003_imaal004 = ''
      DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaal003
      DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaal004
      LET g_bmab_d[p_ac].bmab003_imaa009 = ''
      LET g_bmab_d[p_ac].bmab003_imaa010 = ''
      DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaa009
      DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaa010
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmab_d[p_ac].bmab003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmab_d[p_ac].bmab003_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmab_d[p_ac].bmab003_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaal003
   DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaal004
       
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmab_d[p_ac].bmab003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaa009,imaa010 FROM imaa_t WHERE imaaent='"||g_enterprise||"' AND imaa001=? ","") RETURNING g_rtn_fields
   LET g_bmab_d[p_ac].bmab003_imaa009 = '', g_rtn_fields[1] , ''
   LET g_bmab_d[p_ac].bmab003_imaa010 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaa009
   DISPLAY BY NAME g_bmab_d[p_ac].bmab003_imaa010
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmac003_desc" order="65" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmac003_desc(p_ac,p_cmd)
   DEFINE p_ac      LIKE type_t.num5
   DEFINE p_cmd     LIKE type_t.chr1   #i:input  s:show
   DEFINE l_imae081 LIKE imae_t.imae081
   
   IF cl_null(g_bmac_d[p_ac].bmac003) THEN
      LET g_bmac_d[p_ac].bmac003_imaal003 = ''
      LET g_bmac_d[p_ac].bmac003_imaal004 = ''
      DISPLAY BY NAME g_bmac_d[p_ac].bmac003_imaal003
      DISPLAY BY NAME g_bmac_d[p_ac].bmac003_imaal004
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmac_d[p_ac].bmac003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmac_d[p_ac].bmac003_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmac_d[p_ac].bmac003_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmac_d[p_ac].bmac003_imaal003
   DISPLAY BY NAME g_bmac_d[p_ac].bmac003_imaal004
   
   #自动带值
   IF p_cmd = 'i' THEN 
      SELECT imae081 INTO l_imae081
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_bmaa_m.bmaasite
         AND imae001 = g_bmac_d[p_ac].bmac003  
      #发料单位
      IF cl_null(g_bmac_d_t.bmac003) OR g_bmac_d[p_ac].bmac003 != g_bmac_d_t.bmac003 THEN
         LET g_bmac_d[p_ac].bmac004 = l_imae081
      END IF
      
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmad003_desc" order="66" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmad003_desc(p_ac,p_cmd)
   DEFINE p_ac     LIKE type_t.num5
   DEFINE p_cmd     LIKE type_t.chr1   #i:input  s:show
   DEFINE l_imae081 LIKE imae_t.imae081

   IF cl_null(g_bmad_d[p_ac].bmad003) THEN
      LET g_bmad_d[p_ac].bmad003_imaal003 = ''
      LET g_bmad_d[p_ac].bmad003_imaal004 = ''
      DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaal003
      DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaal004
      LET g_bmad_d[p_ac].bmad003_imaa009 = ''
      LET g_bmad_d[p_ac].bmad003_imaa010 = ''
      DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaa009
      DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaa010
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmad_d[p_ac].bmad003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmad_d[p_ac].bmad003_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmad_d[p_ac].bmad003_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaal003
   DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaal004
    
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmad_d[p_ac].bmad003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaa009,imaa010 FROM imaa_t WHERE imaaent='"||g_enterprise||"' AND imaa001=? ","") RETURNING g_rtn_fields
   LET g_bmad_d[p_ac].bmad003_imaa009 = '', g_rtn_fields[1] , ''
   LET g_bmad_d[p_ac].bmad003_imaa010 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaa009
   DISPLAY BY NAME g_bmad_d[p_ac].bmad003_imaa010
   
   #自动带值
   IF p_cmd = 'i' THEN 
      SELECT imae081 INTO l_imae081
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_bmaa_m.bmaasite
         AND imae001 = g_bmad_d[p_ac].bmad003  
      #发料单位
      IF cl_null(g_bmad_d_t.bmad003) OR g_bmad_d[p_ac].bmad003 != g_bmad_d[p_ac].bmad003 THEN
         LET g_bmad_d[p_ac].bmad005 = l_imae081
      END IF
      
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba003_desc1" order="67" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba003_desc1(p_ac,p_cmd)
   DEFINE p_ac     LIKE type_t.num5
   DEFINE p_cmd    LIKE type_t.chr1   #i:input  s:show
   DEFINE l_imae021   LIKE imae_t.imae021  #工单展开选项
   DEFINE l_imae081   LIKE imae_t.imae081  #发料单位
   DEFINE l_imae091   LIKE imae_t.imae091  #倒扣料


   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d1[p_ac].bmba003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d1[p_ac].bmba003_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmba_d1[p_ac].bmba003_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmba_d1[p_ac].bmba003_imaal003
   DISPLAY BY NAME g_bmba_d1[p_ac].bmba003_imaal004
   
   #自动带值
   IF p_cmd = 'i' THEN 
      SELECT imae081,imae021,imae091
        INTO l_imae081,l_imae021,l_imae091
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_bmaa_m.bmaasite
         AND imae001 = g_bmba_d1[p_ac].bmba003  
      #发料单位
      IF cl_null(g_bmba_d1_t.bmba003) OR g_bmba_d1[p_ac].bmba003 != g_bmba_d1_t.bmba003 THEN
         LET g_bmba_d1[p_ac].bmba010 = l_imae081
      END IF
      
      #工单展开选项
      IF cl_null(g_bmba_d1_t.bmba003) OR g_bmba_d1[p_ac].bmba003 != g_bmba_d1_t.bmba003 THEN
         LET g_bmba_d2[p_ac].bmba021 = l_imae021
      END IF
      
      #倒扣料
      IF cl_null(g_bmba_d1_t.bmba003) OR g_bmba_d1[p_ac].bmba003 != g_bmba_d1_t.bmba003 THEN
         LET g_bmba_d2[p_ac].bmba030 = l_imae091
      END IF
      
   END IF
   
   
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba003_desc3" order="68" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba003_desc3(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d3[p_ac].bmba003) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d3[p_ac].bmba003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d3[p_ac].bmba003_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmba_d3[p_ac].bmba003_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmba_d3[p_ac].bmba003_imaal003
   DISPLAY BY NAME g_bmba_d3[p_ac].bmba003_imaal004
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba003_desc2" order="69" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba003_desc2(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d2[p_ac].bmba003) THEN
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d2[p_ac].bmba003
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d2[p_ac].bmba003_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmba_d2[p_ac].bmba003_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmba_d2[p_ac].bmba003_imaal003
   DISPLAY BY NAME g_bmba_d2[p_ac].bmba003_imaal004
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba007_desc1" order="70" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba007_desc1(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d1[p_ac].bmba007) THEN
      LET g_bmba_d1[p_ac].bmba007_oocql004 = ''
      DISPLAY g_bmba_d1[p_ac].bmba007_oocql004 to bmba007
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d1[p_ac].bmba007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d1[p_ac].bmba007_oocql004 = '', g_rtn_fields[1] , ''
  #DISPLAY BY NAME g_bmba_d1[p_ac].bmba007_oocql004
   DISPLAY g_bmba_d1[p_ac].bmba007_oocql004 to bmba007
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba004_desc1" order="71" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba004_desc1(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d1[p_ac].bmba004) THEN
      LET g_bmba_d1[p_ac].bmba004_oocql004 = ''
      DISPLAY g_bmba_d1[p_ac].bmba004_oocql004 to bmba004
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d1[p_ac].bmba004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d1[p_ac].bmba004_oocql004 = '', g_rtn_fields[1] , ''
  #DISPLAY BY NAME g_bmba_d1[p_ac].bmba004_oocql004
   DISPLAY g_bmba_d1[p_ac].bmba004_oocql004 to bmba004

END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba004_desc2" order="72" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba004_desc2(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d2[p_ac].bmba004) THEN
      LET g_bmba_d2[p_ac].bmba004_oocql004 = ''
      DISPLAY g_bmba_d2[p_ac].bmba004_oocql004 to bmba004_2
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d2[p_ac].bmba004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d2[p_ac].bmba004_oocql004 = '', g_rtn_fields[1] , ''
  #DISPLAY BY NAME g_bmba_d2[p_ac].bmba004_oocql004
   DISPLAY g_bmba_d2[p_ac].bmba004_oocql004 to bmba004_2
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba007_desc3" order="73" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba007_desc3(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d3[p_ac].bmba007) THEN
      LET g_bmba_d3[p_ac].bmba007_oocql004 = ''
      DISPLAY g_bmba_d3[p_ac].bmba007_oocql004 to bmba007_3
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d3[p_ac].bmba007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d3[p_ac].bmba007_oocql004 = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_bmba_d3[p_ac].bmba007_oocql004
   DISPLAY g_bmba_d3[p_ac].bmba007_oocql004 to bmba007_3
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba004_desc3" order="74" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba004_desc3(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d3[p_ac].bmba004) THEN
      LET g_bmba_d3[p_ac].bmba004_oocql004 = ''
      DISPLAY g_bmba_d3[p_ac].bmba004_oocql004 to bmba004_3
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d3[p_ac].bmba004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d3[p_ac].bmba004_oocql004 = '', g_rtn_fields[1] , ''
   #DISPLAY BY NAME g_bmba_d3[p_ac].bmba004_oocql004
   DISPLAY g_bmba_d3[p_ac].bmba004_oocql004 to bmba004_3
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba007_desc2" order="75" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba007_desc2(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d2[p_ac].bmba007) THEN
      LET g_bmba_d2[p_ac].bmba007_oocql004 = ''
      DISPLAY g_bmba_d2[p_ac].bmba007_oocql004 to bmba007_2
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d2[p_ac].bmba007
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d2[p_ac].bmba007_oocql004 = '', g_rtn_fields[1] , ''
  #DISPLAY BY NAME g_bmba_d2[p_ac].bmba007_oocql004
   DISPLAY g_bmba_d2[p_ac].bmba007_oocql004 to bmba007_2
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba024_desc2" order="76" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba024_desc2(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d2[p_ac].bmba024) THEN
      LET g_bmba_d2[p_ac].bmba024_imaal003 = ''
      LET g_bmba_d2[p_ac].bmba024_imaal004 = ''
      DISPLAY BY NAME g_bmba_d2[p_ac].bmba024_imaal003
      DISPLAY BY NAME g_bmba_d2[p_ac].bmba024_imaal004
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d2[p_ac].bmba024
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba_d2[p_ac].bmba024_imaal003 = '', g_rtn_fields[1] , ''
   LET g_bmba_d2[p_ac].bmba024_imaal004 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_bmba_d2[p_ac].bmba024_imaal003
   DISPLAY BY NAME g_bmba_d2[p_ac].bmba024_imaal004
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba016_desc2" order="77" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba016_desc2(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d2[p_ac].bmba016) THEN
      LET g_bmba_d2[p_ac].bmba016_inab003 = ''
      DISPLAY BY NAME g_bmba_d2[p_ac].bmba016_inab003
      RETURN
   END IF

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmba_d2[p_ac].bmba015
   LET g_ref_fields[2] = g_bmba_d2[p_ac].bmba016
   LET g_ref_fields[3] = g_bmaa_m.bmaasite
   CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inab001=? AND inab002=? AND inabsite=? ","") RETURNING g_rtn_fields
   IF cl_null(g_rtn_fields[1]) THEN
      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_bmba_d2[p_ac].bmba015
      LET g_ref_fields[2] = g_bmba_d2[p_ac].bmba016
      CALL ap_ref_array2(g_ref_fields,"SELECT inab003 FROM inab_t WHERE inabent='"||g_enterprise||"' AND inab001=? AND inab002=? ","") RETURNING g_rtn_fields
   END IF
   LET g_bmba_d2[p_ac].bmba016_inab003 = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmba_d2[p_ac].bmba016_inab003
END FUNCTION]]>
  </point>
  <point name="function.abmm200_show_bmba015_desc2" order="78" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_show_bmba015_desc2(p_ac)
   DEFINE p_ac     LIKE type_t.num5

   IF cl_null(g_bmba_d2[p_ac].bmba015) THEN
      LET g_bmba_d2[p_ac].bmba015_desc = ''
      DISPLAY BY NAME g_bmba_d2[p_ac].bmba015_desc
      RETURN
   END IF

   CALL s_desc_get_stock_desc('',g_bmba_d2[p_ac].bmba015) RETURNING g_bmba_d2[p_ac].bmba015_desc
   DISPLAY BY NAME g_bmba_d2[p_ac].bmba015_desc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_chk_bmaa001" order="79" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_chk_bmaa001(p_bmaa001)
   DEFINE p_bmaa001   LIKE bmaa_t.bmaa001
   DEFINE r_success   LIKE type_t.num5


   LET r_success = TRUE
   
   IF cl_null(p_bmaa001) THEN
      RETURN r_success
   END IF
   
   #检查料件是否有效存在
   CALL s_aimm200_chk_item(p_bmaa001) RETURNING r_success
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   #主件料號需透過控制組限制可輸入範圍
   CALL s_control_chk_item(p_bmaa001,g_user,g_dept,'') RETURNING r_success
   IF NOT r_success THEN
      RETURN r_success
   END IF
   
   #工程料號控制 检查生命周期
   CALL abmm200_chk_item_lifecycle(p_bmaa001) RETURNING r_success
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_chg_bmaa003" order="80" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_chg_bmaa003()
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_cnt       LIKE type_t.num5
   DEFINE l_imaa009   LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   IF cl_null(g_bmaa_m.bmaa003) OR g_bmaa_m.bmaa003 <= 0 THEN
      RETURN r_success
   END IF
   
   #检查單身的主件底數設為與此欄位相同
   SELECT COUNT(*) INTO l_cnt FROM bmba_t
    WHERE bmbaent = g_enterprise
      AND bmbasite= g_bmaa_m.bmaasite
      AND bmba001 = g_bmaa_m.bmaa001
      AND bmba002 = g_bmaa_m.bmaa002
      AND bmba012 != g_bmaa_m.bmaa003
   IF l_cnt > 0 THEN
      #單頭批次數量與單身主件底數不一致，是否需要更新主件底數？
      IF NOT cl_ask_confirm('abm-00061') THEN
         LET r_success = FALSE
         RETURN r_success
      ELSE
         UPDATE bmba_t SET bmba012 = g_bmaa_m.bmaa003
          WHERE bmbaent = g_enterprise
            AND bmbasite= g_bmaa_m.bmaasite
            AND bmba001 = g_bmaa_m.bmaa001
            AND bmba002 = g_bmaa_m.bmaa002
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = 'UPDATE bmba012'
            LET g_errparam.popup = TRUE
            CALL cl_err()

            LET r_success = FALSE
            RETURN r_success
         END IF
         CALL abmm200_b_fill_bmba1()
         CALL abmm200_b_fill_bmba2()
         CALL abmm200_b_fill_bmba3()

         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmba_t SET bmba012 = g_bmaa_m.bmaa003
             WHERE bmbaent = g_enterprise
               AND bmbasite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmbasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmba001 = g_bmaa_m.bmaa001
               AND bmba002 = g_bmaa_m.bmaa002
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = 'UPDATE bmba012'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET r_success = FALSE
               RETURN r_success
            END IF
         END IF
         
      END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_chk_item_lifecycle" order="81" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+
PRIVATE FUNCTION abmm200_chk_item_lifecycle(p_item)
   DEFINE p_item      LIKE bmaa_t.bmaa001
   DEFINE r_success   LIKE type_t.num5
   DEFINE l_imaa038   LIKE imaa_t.imaa038  #工程料件
   DEFINE l_imaa010   LIKE imaa_t.imaa010  #生命周期
   DEFINE l_oocq004   LIKE oocq_t.oocq004  #是否可使用工程料號
   DEFINE l_oocq009   LIKE oocq_t.oocq009  #料件失效 #add 150209

   LET r_success = TRUE
   
   IF cl_null(p_item) THEN
      RETURN r_success
   END IF
  
   #檢查生命週期檔(aimi012)，確認是否可使用工程料號(oocq004='Y')
   #可使用工程料號的，才可輸入料件基本資料為工程料號的資料(imaa038='Y')
   SELECT imaa038,imaa010 INTO l_imaa038,l_imaa010  #工程料件,生命週期狀態
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = p_item
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'aim-00001'
      LET g_errparam.extend = p_item
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'aim-00001'
      LET g_errparam.extend = p_item
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   IF l_imaa038 = 'Y' THEN  #工程料件
      SELECT oocq004 INTO l_oocq004 
        FROM oocq_t
       WHERE oocqent = g_enterprise
         AND oocq001 = '210'
         AND oocq002 = l_imaa010
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_bmaa_m.bmaa001  #p_item
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      #是否可使用工程料號
      IF l_oocq004 = 'N' THEN
         #%1此料為工程料，主件料號的生命週期狀態%2不可使用工程料號！
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00254'  #'abm-00010'
         LET g_errparam.replace[1] = p_item
         LET g_errparam.replace[2] = g_bmaa_m.bmaa001_imaa010
         LET g_errparam.extend = ''  #p_item
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      #CALL s_azzi650_chk_exist('210',l_imaa010) RETURNING r_success
      #IF r_success = FALSE THEN
      #   RETURN r_success
      #END IF
   END IF
   
   #add 150209
   #检查生命周期是否料件失效
   SELECT oocq009 INTO l_oocq009 
     FROM oocq_t
    WHERE oocqent = g_enterprise
      AND oocq001 = '210'
      AND oocq002 = l_imaa010
   IF l_oocq009 != 'N' THEN  #料件失效  (aimi012中可以维护成各种字符，这里认为非N的都是Y)
      #l_imaa010状态生命周期设置料件失效，不可使用此生命周期状态的料件p_item
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00250'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      LET g_errparam.replace[1] = l_imaa010
      LET g_errparam.replace[2] = p_item
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF
   #add 150209 end
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_get_bmba018" order="82" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#检查是否有插件位置资料
PRIVATE FUNCTION abmm200_get_bmba018(p_bmaasite,p_bmaa001,p_bmaa002,p_bmba003,p_bmba004,p_bmba005,p_bmba007,p_bmba008)
   DEFINE p_bmaasite  LIKE bmaa_t.bmaasite
   DEFINE p_bmaa001   LIKE bmaa_t.bmaa001
   DEFINE p_bmaa002   LIKE bmaa_t.bmaa002
   DEFINE p_bmba003   LIKE bmba_t.bmba003
   DEFINE p_bmba004   LIKE bmba_t.bmba004
   DEFINE p_bmba005   LIKE bmba_t.bmba005
   DEFINE p_bmba007   LIKE bmba_t.bmba007
   DEFINE p_bmba008   LIKE bmba_t.bmba008
   DEFINE r_bmba018   LIKE bmba_t.bmba018  #插件位置否
   DEFINE l_cnt       LIKE type_t.num5     #
   
   #是否有维护插件位置
   #LET g_bmba005_2 = p_bmba005
   LET g_bmba005_2 = YEAR(p_bmba005) USING "####",'-',MONTH(p_bmba005) USING "&&",'-',DAY(p_bmba005) USING "&&",' ',TIME(p_bmba005)
   SELECT COUNT(*) INTO l_cnt
     FROM bmbc_t
    WHERE bmbcent = g_enterprise
      AND bmbcsite= p_bmaasite
      AND bmbc001 = p_bmaa001
      AND bmbc002 = p_bmaa002
      AND bmbc003 = p_bmba003
      AND bmbc004 = p_bmba004
      #AND bmbc005 = p_bmba005
      AND to_char(bmbc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
      AND bmbc007 = p_bmba007
      AND bmbc008 = p_bmba008
   IF l_cnt = 0 THEN
      LET r_bmba018 = 'N'
   ELSE
      LET r_bmba018 = 'Y'
   END IF
   
   RETURN r_bmba018
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmbc_key" order="83" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+插件位置档
PRIVATE FUNCTION abmm200_update_bmbc_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmbc_t SET (bmbcsite,bmbc001,bmbc002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmbcent = g_enterprise AND bmbcsite = g_bmaasite_t
            AND bmbc001 = g_bmaa001_t
            AND bmbc002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmbc_t SET (bmbc003,bmbc004,bmbc005,bmbc007,bmbc008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmbcent = g_enterprise
            AND bmbcsite= g_bmaa_m.bmaasite
            AND bmbc001 = g_bmaa_m.bmaa001
            AND bmbc002 = g_bmaa_m.bmaa002
            AND bmbc003 = g_bmba_d1_t.bmba003
            AND bmbc004 = g_bmba_d1_t.bmba004
            #AND bmbc005 = g_bmba_d1_t.bmba005
            AND to_char(bmbc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmbc007 = g_bmba_d1_t.bmba007
            AND bmbc008 = g_bmba_d1_t.bmba008  
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            #LET g_bmba005_2 = g_bmba_d1_t.bmba005
            LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
            UPDATE bmbc_t SET (bmbc003,bmbc004,bmbc005,bmbc007,bmbc008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmbcent = g_enterprise
               AND bmbcsite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmbcsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmbc001 = g_bmaa_m.bmaa001
               AND bmbc002 = g_bmaa_m.bmaa002
               AND bmbc003 = g_bmba_d1_t.bmba003
               AND bmbc004 = g_bmba_d1_t.bmba004
               #AND bmbc005 = g_bmba_d1_t.bmba005
               AND to_char(bmbc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmbc007 = g_bmba_d1_t.bmba007
               AND bmbc008 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmbc_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_def_bmbb009" order="84" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ 產起始量預設值
PRIVATE FUNCTION abmm200_def_bmbb009()
DEFINE l_cnt        LIKE type_t.num5
DEFINE i            LIKE type_t.num5
DEFINE l_imae016    LIKE imae_t.imae016
DEFINE l_ooca002    LIKE ooca_t.ooca002
DEFINE l_bmbb010    LIKE bmbb_t.bmbb010
DEFINE l_str        STRING
DEFINE l_num        LIKE bmbb_t.bmbb009  #累加基数

   IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) THEN
      RETURN
   END IF

   #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
   LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
   SELECT COUNT(*),MAX(bmbb010) INTO l_cnt,l_bmbb010
     FROM bmbb_t
    WHERE bmbbent = g_enterprise
      AND bmbbsite= g_bmaa_m.bmaasite
      AND bmbb001 = g_bmaa_m.bmaa001
      AND bmbb002 = g_bmaa_m.bmaa002
      AND bmbb003 = g_bmba_d3[l_ac].bmba003
      AND bmbb004 = g_bmba_d3[l_ac].bmba004
      #AND bmbb005 = g_bmba_d3[l_ac].bmba005
      AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
      AND bmbb007 = g_bmba_d3[l_ac].bmba007
      AND bmbb008 = g_bmba_d3[l_ac].bmba008
   IF l_cnt = 0 THEN
      LET g_bmbb_d[l_ac_bmbb].bmbb009 = 0
   ELSE    
      SELECT imae016 INTO l_imae016
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_bmaa_m.bmaasite
         AND imae001 = g_bmaa_m.bmaa001
      IF cl_null(l_imae016) THEN
         LET l_ooca002 = 0
         LET l_num = 1
      ELSE
         SELECT ooca002 INTO l_ooca002 #单位小数位数
           FROM ooca_t
          WHERE oocaent = g_enterprise
            AND ooca001 = l_imae016
         IF cl_null(l_ooca002) OR l_ooca002=0 THEN
            LET l_ooca002 = 0
            LET l_num = 1
         END IF
      END IF
      IF l_ooca002 = 1 THEN
         LET l_num = 0.1
      END IF
      IF l_ooca002 = 2 THEN
         LET l_num = 0.01
      END IF
      IF l_ooca002 > 2 THEN
         LET l_str = '0'
         FOR i=1 TO l_ooca002 -2
             LET l_str = '0',l_str
         END FOR
         LET l_str = '0.',l_str,'1'
         LET l_num = l_str
      END IF
      IF NOT cl_null(l_bmbb010) THEN
         LET g_bmbb_d[l_ac_bmbb].bmbb009 = l_bmbb010 + l_num
      END IF
   END IF
   #DISPLAY g_bmbb_d[l_ac_bmbb].bmbb009 TO s_bmbb[l_ac_bmbb].bmbb009
END FUNCTION]]>
  </point>
  <point name="function.abmm200_chk_ssqty" order="85" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#+ 检查生產起始量和截止量是否在其他笔数量的数值中间
PRIVATE FUNCTION abmm200_chk_ssqty(p_cmd,p_type,p_qty)
DEFINE p_cmd       LIKE type_t.chr1
DEFINE p_type      LIKE type_t.chr1   #1:bmbb009  2:bmbb010
DEFINE p_qty       LIKE bmbb_t.bmbb009
DEFINE r_success   LIKE type_t.num5
DEFINE l_cnt       LIKE type_t.num5
DEFINE l_sql       STRING
DEFINE l_bmbb009   LIKE bmbb_t.bmbb009
DEFINE l_bmbb010   LIKE bmbb_t.bmbb010

   LET r_success = TRUE
   #LET g_bmba005_2 = g_bmba_d3[l_ac].bmba005
   LET g_bmba005_2 = YEAR(g_bmba_d3[l_ac].bmba005) USING "####",'-',MONTH(g_bmba_d3[l_ac].bmba005) USING "&&",'-',DAY(g_bmba_d3[l_ac].bmba005) USING "&&",' ',TIME(g_bmba_d3[l_ac].bmba005)
   LET l_sql = " SELECT bmbb009,bmbb010 ",
               "   FROM bmbb_t",
               "  WHERE bmbbent = '",g_enterprise,"' ",
               "    AND bmbbsite= '",g_bmaa_m.bmaasite,"' ",
               "    AND bmbb001 = '",g_bmaa_m.bmaa001,"' ",
               "    AND bmbb002 = '",g_bmaa_m.bmaa002,"' ",
               "    AND bmbb003 = '",g_bmba_d3[l_ac].bmba003,"' ",
               "    AND bmbb004 = '",g_bmba_d3[l_ac].bmba004,"' ",
               #"    AND bmbb005 = '",g_bmba_d3[l_ac].bmba005,"' ",
               "    AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba005_2,"' ",
               "    AND bmbb007 = '",g_bmba_d3[l_ac].bmba007,"' ",
               "    AND bmbb008 = '",g_bmba_d3[l_ac].bmba008,"' "
   IF p_cmd = 'u' THEN
      LET l_sql = l_sql CLIPPED,"    AND bmbb009 <> '",g_bmbb_d_t.bmbb009,"' "
   END IF
   PREPARE abmm200_chk_ssqty_pb FROM l_sql
   DECLARE abmm200_chk_ssqty_cs CURSOR FOR abmm200_chk_ssqty_pb
   FOREACH abmm200_chk_ssqty_cs INTO l_bmbb009,l_bmbb010
      #abm-00025:輸入的資料不可存在其他筆資料的生產起始量和生產截止量中間數值！
      
      #--当笔输入的值不能再其他笔起止数量范围内
      #当笔输入的值不能在其他笔数量范围内
      IF NOT cl_null(l_bmbb010) AND (p_qty >= l_bmbb009 AND p_qty <= l_bmbb010) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00025'
         LET g_errparam.extend = p_qty
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         EXIT FOREACH
      END IF 
      #当笔输入的值不能在其他笔无穷大范围内
      IF cl_null(l_bmbb010) AND p_qty >= l_bmbb009 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00025'
         LET g_errparam.extend = p_qty
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         EXIT FOREACH
      END IF
      
      CASE p_type
         WHEN '1'   #bmbb009
              #--当笔输入的范围，不能包含到其他笔的起止数量
              IF p_qty <= l_bmbb009 AND NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb010) AND g_bmbb_d[l_ac_bmbb].bmbb010 >= l_bmbb010 THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'abm-00025'
                 LET g_errparam.extend = p_qty
                 LET g_errparam.popup = TRUE
                 CALL cl_err()

                 LET r_success = FALSE
                 EXIT FOREACH
              END IF
         WHEN '2'   #bmbb010
              #--当笔输入的范围，不能包含到其他笔的起止数量
              IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) AND g_bmbb_d[l_ac_bmbb].bmbb009 <= l_bmbb009 AND p_qty >= l_bmbb010 THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'abm-00025'
                 LET g_errparam.extend = p_qty
                 LET g_errparam.popup = TRUE
                 CALL cl_err()

                 LET r_success = FALSE
                 EXIT FOREACH
              END IF
              #当笔输入无穷大的，需检查当笔输入的起始数量，不可小于其他笔截止数量
              IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) AND cl_null(p_qty) AND g_bmbb_d[l_ac_bmbb].bmbb009 <= l_bmbb010 THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'abm-00025'
                 LET g_errparam.extend = p_qty
                 LET g_errparam.popup = TRUE
                 CALL cl_err()

                 LET r_success = FALSE
                 EXIT FOREACH
              END IF
              #当笔输入无穷大的，需检查其他笔没有无穷大的（不可出现两个无穷大的）
              IF NOT cl_null(g_bmbb_d[l_ac_bmbb].bmbb009) AND cl_null(p_qty) AND cl_null(l_bmbb010) THEN
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.code = 'abm-00025'
                 LET g_errparam.extend = p_qty
                 LET g_errparam.popup = TRUE
                 CALL cl_err()

                 LET r_success = FALSE
                 EXIT FOREACH
              END IF
      END CASE
   END FOREACH

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_key" order="86" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#修改到key值资料需同时修改key值以下关联表的key值资料
PRIVATE FUNCTION abmm200_update_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.chr1

   LET r_success = TRUE

   #若key欄位有變更，变更关键值
   CASE p_type
        WHEN "a"
             IF g_bmaa_m.bmaasite != g_bmaasite_t OR g_bmaa_m.bmaa001 != g_bmaa001_t OR g_bmaa_m.bmaa002 != g_bmaa002_t THEN
                #更新單身key值
                CALL abmm200_update_bmab_key() RETURNING r_success
                IF r_success = FALSE THEN
                   RETURN r_success
                END IF
                CALL abmm200_update_bmac_key() RETURNING r_success
                IF r_success = FALSE THEN
                   RETURN r_success
                END IF
                CALL abmm200_update_bmad_key() RETURNING  r_success
                IF r_success = FALSE THEN
                   RETURN r_success
                END IF
           
                CALL abmm200_update_bmba_key() RETURNING  r_success
                IF r_success = FALSE THEN
                   RETURN r_success
                END IF
             END IF
        WHEN "b"
             #和"a"公用的，都移到end case外
   END CASE

   #单头单身共用部分
   #注：此处单身key修改导致的更新需要更新已拋转的资料（必定是已审核的资料）
   #    单头key不允许修改，所以不会更新已拋转的资料。若已审核的资料，单头key可以被修改
   #    1.权限太大，不应该
   #    2.site不可随意更改，应只由ALL拋转的（这里site不开档栏位）
   #    3.bmaa001若修改，新的bmaa001和旧的bmaa001可拋转的据点不一定一样
   #   也不能直接删除旧的bmaa001拋转的，再新增新的bmaa001拋转的，因为各据点有可能有自己修改的资料会被覆盖
   #   总结：只单身修改允许修改到key，修改到key需要修改已拋转的关联资料

   #损耗率
   CALL abmm200_update_bmbb_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   #备注
   CALL abmm200_update_ooff_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   #插件位置
   CALL abmm200_update_bmbc_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   #特征管理
   CALL abmm200_update_bmca_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   CALL abmm200_update_bmcb_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   CALL abmm200_update_bmcc_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   CALL abmm200_update_bmcd_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   CALL abmm200_update_bmce_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   CALL abmm200_update_bmcf_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   #取替代资讯
   CALL abmm200_update_bmea_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF
   CALL abmm200_update_bmeb_key(p_type) RETURNING  r_success
   IF r_success = FALSE THEN
      RETURN r_success
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_delete_key" order="87" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#删除资料需同时删除key值以下关联的资料
PRIVATE FUNCTION abmm200_delete_key(p_type,p_site)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE p_site       LIKE bmaa_t.bmaasite
DEFINE r_success    LIKE type_t.chr1
DEFINE l_imaa009    LIKE imaa_t.imaa009

   IF cl_null(p_site) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "sub-00001"
      LET g_errparam.extend = ""
      LET g_errparam.popup = TRUE
      CALL cl_err()
      LET r_success = FALSE
      RETURN r_success
   END IF

   #产品分类
   LET l_imaa009=''
   SELECT imaa009 INTO l_imaa009 FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmaa_m.bmaa001
                   
   LET r_success = TRUE
   CASE p_type
        WHEN "a"
             #画面上有显示的表没放进来
             #单头备注 ooff012不管什么值都需删掉
             #CALL s_aooi360_del('4',p_site,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4')
             #   RETURNING r_success
             #IF NOT r_success THEN
             #   RETURN r_success
             #END IF
             DELETE FROM ooff_t 
              WHERE ooffent = g_enterprise
                AND ooff001 = '4'
                AND ooff002 = p_site
                AND ooff003 = g_bmaa_m.bmaa001
                AND ooff004 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE ooff_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             
             #单身备注 ooff012不管什么值都需删掉
             #CALL s_aooi360_del('5',p_site,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,' ',' ',' ',' ',' ',' ',' ','4')
             #   RETURNING r_success
             #IF NOT r_success THEN
             #   RETURN r_success
             #END IF
             DELETE FROM ooff_t 
              WHERE ooffent = g_enterprise
                AND ooff001 = '5'
                AND ooff002 = p_site
                AND ooff003 = g_bmaa_m.bmaa001
                AND ooff004 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE ooff_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF

             #联产品
             DELETE FROM bmab_t
              WHERE bmabent = g_enterprise
                AND bmabsite= p_site
                AND bmab001 = g_bmaa_m.bmaa001
                AND bmab002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmab_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF

             #副产品
             DELETE FROM bmac_t
              WHERE bmacent = g_enterprise
                AND bmacsite= p_site
                AND bmac001 = g_bmaa_m.bmaa001
                AND bmac002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmac_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF

             #多产出主件
             DELETE FROM bmad_t
              WHERE bmadent = g_enterprise AND bmadsite = g_bmaa_m.bmaasite
                AND bmad001 = g_bmaa_m.bmaa001
                AND bmad002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmad_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF

             #单身
             DELETE FROM bmba_t
              WHERE bmbaent = g_enterprise
                AND bmbasite= p_site
                AND bmba001 = g_bmaa_m.bmaa001
                AND bmba002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmba_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF

             #单身损耗
             DELETE FROM bmbb_t
              WHERE bmbbent = g_enterprise
                AND bmbbsite= p_site
                AND bmbb001 = g_bmaa_m.bmaa001
                AND bmbb002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmbb_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF

             #插件位置
             DELETE FROM bmbc_t
              WHERE bmbcent = g_enterprise
                AND bmbcsite= p_site
                AND bmbc001 = g_bmaa_m.bmaa001
                AND bmbc002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmbc_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             
             #特徵管理
             DELETE FROM bmca_t
              WHERE bmcaent = g_enterprise
                AND bmcasite= p_site
                AND bmca001 = g_bmaa_m.bmaa001
                AND bmca002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmca_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcb_t
              WHERE bmcbent = g_enterprise
                AND bmcbsite= p_site
                AND bmcb001 = g_bmaa_m.bmaa001
                AND bmcb002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcb_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcc_t
              WHERE bmccent = g_enterprise
                AND bmccsite= p_site
                AND bmcc001 = g_bmaa_m.bmaa001
                AND bmcc002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcc_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcd_t
              WHERE bmcdent = g_enterprise
                AND bmcdsite= p_site
                AND bmcd001 = g_bmaa_m.bmaa001
                AND bmcd002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcd_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmce_t
              WHERE bmceent = g_enterprise
                AND bmcesite= p_site
                AND bmce001 = g_bmaa_m.bmaa001
                AND bmce002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmce_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcf_t
              WHERE bmcfent = g_enterprise
                AND bmcfsite= p_site
                AND bmcf001 = g_bmaa_m.bmaa001
                AND bmcf002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcf_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             
             #取替代資訊
             DELETE FROM bmea_t
              WHERE bmeaent = g_enterprise
                AND bmeasite= p_site
                AND bmea001 = g_bmaa_m.bmaa001
                AND bmea002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmea_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmeb_t
              WHERE bmebent = g_enterprise
                AND bmebsite= p_site
                AND bmeb001 = g_bmaa_m.bmaa001
                AND bmeb002 = g_bmaa_m.bmaa002
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmeb_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
        WHEN "b"
             #损耗档
             #LET g_bmba005_2 = g_bmba_d1_t.bmba005
             LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
             DELETE FROM bmbb_t
              WHERE bmbbent = g_enterprise
                AND bmbbsite= p_site
                AND bmbb001 = g_bmaa_m.bmaa001
                AND bmbb002 = g_bmaa_m.bmaa002
                AND bmbb003 = g_bmba_d1_t.bmba003
                AND bmbb004 = g_bmba_d1_t.bmba004
                #AND bmbb005 = g_bmba_d1_t.bmba005
                AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmbb007 = g_bmba_d1_t.bmba007
                AND bmbb008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmbb_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             #损耗档--已拋转资料
             IF g_bmaa_m.bmaastus='Y' AND p_site='ALL' THEN
                DELETE FROM bmbb_t
                 WHERE bmbbent = g_enterprise
                   AND bmbbsite!= p_site
                   #mark 141231
                   #AND bmbbsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmbb001 = g_bmaa_m.bmaa001
                   AND bmbb002 = g_bmaa_m.bmaa002
                   AND bmbb003 = g_bmba_d1_t.bmba003
                   AND bmbb004 = g_bmba_d1_t.bmba004
                   #AND bmbb005 = g_bmba_d1_t.bmba005
                   AND to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmbb007 = g_bmba_d1_t.bmba007
                   AND bmbb008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmbb_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
             END IF
             #单身备注 ooff012不管什么值都需要删掉
             #LET g_bmba005 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
             #CALL s_aooi360_del('5',p_site,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmba_d1_t.bmba003,g_bmba_d1_t.bmba004,g_bmba005,g_bmba_d1_t.bmba007,g_bmba_d1_t.bmba008,' ',' ','4')
             #   RETURNING r_success
             #IF NOT r_success THEN
             #   RETURN r_success
             #END IF
             LET g_bmba005_t = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
             DELETE FROM ooff_t 
              WHERE ooffent = g_enterprise
                AND ooff001 = '5'
                AND ooff002 = p_site
                AND ooff003 = g_bmaa_m.bmaa001
                AND ooff004 = g_bmaa_m.bmaa002
                AND ooff005 = g_bmba_d1_t.bmba003
                AND ooff006 = g_bmba_d1_t.bmba004
                #AND ooff007 = g_bmba005_t
                AND ooff007 = ' ' #mod 150210
                AND ooff008 = g_bmba_d1_t.bmba007
                AND ooff009 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE ooff_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             #备注档--已拋转资料
             IF g_bmaa_m.bmaastus='Y' AND p_site='ALL' THEN
                DELETE FROM ooff_t 
                 WHERE ooffent = g_enterprise
                   AND ooff001 = '5'
                   AND ooff002!= p_site
                   #mark 141231
                   #AND ooff002 IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND ooff003 = g_bmaa_m.bmaa001
                   AND ooff004 = g_bmaa_m.bmaa002
                   AND ooff005 = g_bmba_d1_t.bmba003
                   AND ooff006 = g_bmba_d1_t.bmba004
                   #AND ooff007 = g_bmba005_t
                   AND ooff007 = ' '  #mod 150210
                   AND ooff008 = g_bmba_d1_t.bmba007
                   AND ooff009 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE ooff_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
             END IF
  
             #插件档
             DELETE FROM bmbc_t
              WHERE bmbcent = g_enterprise
                AND bmbcsite= p_site
                AND bmbc001 = g_bmaa_m.bmaa001
                AND bmbc002 = g_bmaa_m.bmaa002
                AND bmbc003 = g_bmba_d1_t.bmba003
                AND bmbc004 = g_bmba_d1_t.bmba004
                #AND bmbc005 = g_bmba_d1_t.bmba005
                AND to_char(bmbc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmbc007 = g_bmba_d1_t.bmba007
                AND bmbc008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmbc_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             #插件档--已拋转资料
             IF g_bmaa_m.bmaastus='Y' AND p_site='ALL' THEN
                DELETE FROM bmbc_t
                 WHERE bmbcent = g_enterprise
                   AND bmbcsite!= p_site
                   #mark 141231
                   #AND bmbcsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmbc001 = g_bmaa_m.bmaa001
                   AND bmbc002 = g_bmaa_m.bmaa002
                   AND bmbc003 = g_bmba_d1_t.bmba003
                   AND bmbc004 = g_bmba_d1_t.bmba004
                   #AND bmbc005 = g_bmba_d1_t.bmba005
                   AND to_char(bmbc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmbc007 = g_bmba_d1_t.bmba007
                   AND bmbc008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmbc_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
             END IF
             
             #特征管理
             DELETE FROM bmca_t
              WHERE bmcaent = g_enterprise
                AND bmcasite= p_site
                AND bmca001 = g_bmaa_m.bmaa001
                AND bmca002 = g_bmaa_m.bmaa002
                AND bmca003 = g_bmba_d1_t.bmba003
                AND bmca004 = g_bmba_d1_t.bmba004
                #AND bmca005 = g_bmba_d1_t.bmba005
                AND to_char(bmca005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmca007 = g_bmba_d1_t.bmba007
                AND bmca008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmca_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcb_t
              WHERE bmcbent = g_enterprise
                AND bmcbsite= p_site
                AND bmcb001 = g_bmaa_m.bmaa001
                AND bmcb002 = g_bmaa_m.bmaa002
                AND bmcb003 = g_bmba_d1_t.bmba003
                AND bmcb004 = g_bmba_d1_t.bmba004
                #AND bmcb005 = g_bmba_d1_t.bmba005
                AND to_char(bmcb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmcb007 = g_bmba_d1_t.bmba007
                AND bmcb008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcb_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcc_t
              WHERE bmccent = g_enterprise
                AND bmccsite= p_site
                AND bmcc001 = g_bmaa_m.bmaa001
                AND bmcc002 = g_bmaa_m.bmaa002
                AND bmcc003 = g_bmba_d1_t.bmba003
                AND bmcc004 = g_bmba_d1_t.bmba004
                #AND bmcc005 = g_bmba_d1_t.bmba005
                AND to_char(bmcc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmcc007 = g_bmba_d1_t.bmba007
                AND bmcc008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcc_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcd_t
              WHERE bmcdent = g_enterprise
                AND bmcdsite= p_site
                AND bmcd001 = g_bmaa_m.bmaa001
                AND bmcd002 = g_bmaa_m.bmaa002
                AND bmcd003 = g_bmba_d1_t.bmba003
                AND bmcd004 = g_bmba_d1_t.bmba004
                #AND bmcd005 = g_bmba_d1_t.bmba005
                AND to_char(bmcd005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmcd007 = g_bmba_d1_t.bmba007
                AND bmcd008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcd_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmce_t
              WHERE bmceent = g_enterprise
                AND bmcesite= p_site
                AND bmce001 = g_bmaa_m.bmaa001
                AND bmce002 = g_bmaa_m.bmaa002
                AND bmce003 = g_bmba_d1_t.bmba003
                AND bmce004 = g_bmba_d1_t.bmba004
                #AND bmce005 = g_bmba_d1_t.bmba005
                AND to_char(bmce005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmce007 = g_bmba_d1_t.bmba007
                AND bmce008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmce_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmcf_t
              WHERE bmcfent = g_enterprise
                AND bmcfsite= p_site
                AND bmcf001 = g_bmaa_m.bmaa001
                AND bmcf002 = g_bmaa_m.bmaa002
                AND bmcf003 = g_bmba_d1_t.bmba003
                AND bmcf004 = g_bmba_d1_t.bmba004
                #AND bmcf005 = g_bmba_d1_t.bmba005
                AND to_char(bmcf005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                AND bmcf007 = g_bmba_d1_t.bmba007
                AND bmcf008 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmcf_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             #特征管理--已拋转资料
             IF g_bmaa_m.bmaastus='Y' AND p_site='ALL' THEN
                DELETE FROM bmca_t
                 WHERE bmcaent = g_enterprise
                   AND bmcasite!= p_site
                   #mark 141231
                   #AND bmcasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmca001 = g_bmaa_m.bmaa001
                   AND bmca002 = g_bmaa_m.bmaa002
                   AND bmca003 = g_bmba_d1_t.bmba003
                   AND bmca004 = g_bmba_d1_t.bmba004
                   #AND bmca005 = g_bmba_d1_t.bmba005
                   AND to_char(bmca005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmca007 = g_bmba_d1_t.bmba007
                   AND bmca008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmca_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
                DELETE FROM bmcb_t
                 WHERE bmcbent = g_enterprise
                   AND bmcbsite!= p_site
                   #mark 141231
                   #AND bmcbsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmcb001 = g_bmaa_m.bmaa001
                   AND bmcb002 = g_bmaa_m.bmaa002
                   AND bmcb003 = g_bmba_d1_t.bmba003
                   AND bmcb004 = g_bmba_d1_t.bmba004
                   #AND bmcb005 = g_bmba_d1_t.bmba005
                   AND to_char(bmcb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmcb007 = g_bmba_d1_t.bmba007
                   AND bmcb008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmcb_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
                DELETE FROM bmcc_t
                 WHERE bmccent = g_enterprise
                   AND bmccsite!= p_site
                   #mark 141231
                   #AND bmccsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmcc001 = g_bmaa_m.bmaa001
                   AND bmcc002 = g_bmaa_m.bmaa002
                   AND bmcc003 = g_bmba_d1_t.bmba003
                   AND bmcc004 = g_bmba_d1_t.bmba004
                   #AND bmcc005 = g_bmba_d1_t.bmba005
                   AND to_char(bmcc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmcc007 = g_bmba_d1_t.bmba007
                   AND bmcc008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmcc_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()

                   LET r_success = FALSE
                   RETURN r_success
                END IF
                DELETE FROM bmcd_t
                 WHERE bmcdent = g_enterprise
                   AND bmcdsite!= p_site
                   #mark 141231
                   #AND bmcdsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmcd001 = g_bmaa_m.bmaa001
                   AND bmcd002 = g_bmaa_m.bmaa002
                   AND bmcd003 = g_bmba_d1_t.bmba003
                   AND bmcd004 = g_bmba_d1_t.bmba004
                   #AND bmcd005 = g_bmba_d1_t.bmba005
                   AND to_char(bmcd005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmcd007 = g_bmba_d1_t.bmba007
                   AND bmcd008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmcd_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
                DELETE FROM bmce_t
                 WHERE bmceent = g_enterprise
                   AND bmcesite!= p_site
                   #mark 141231
                   #AND bmcesite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmce001 = g_bmaa_m.bmaa001
                   AND bmce002 = g_bmaa_m.bmaa002
                   AND bmce003 = g_bmba_d1_t.bmba003
                   AND bmce004 = g_bmba_d1_t.bmba004
                   #AND bmce005 = g_bmba_d1_t.bmba005
                   AND to_char(bmce005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmce007 = g_bmba_d1_t.bmba007
                   AND bmce008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmce_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
                DELETE FROM bmcf_t
                 WHERE bmcfent = g_enterprise
                   AND bmcfsite!= p_site
                   #mark 141231
                   #AND bmcfsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmcf001 = g_bmaa_m.bmaa001
                   AND bmcf002 = g_bmaa_m.bmaa002
                   AND bmcf003 = g_bmba_d1_t.bmba003
                   AND bmcf004 = g_bmba_d1_t.bmba004
                   #AND bmcf005 = g_bmba_d1_t.bmba005
                   AND to_char(bmcf005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
                   AND bmcf007 = g_bmba_d1_t.bmba007
                   AND bmcf008 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmcf_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
             END IF
             
             #取替代资讯
             DELETE FROM bmea_t
              WHERE bmeaent = g_enterprise
                AND bmeasite= p_site
                AND bmea001 = g_bmaa_m.bmaa001
                AND bmea002 = g_bmaa_m.bmaa002
                AND bmea003 = g_bmba_d1_t.bmba003
                AND bmea004 = g_bmba_d1_t.bmba004
                AND bmea005 = g_bmba_d1_t.bmba007
                AND bmea006 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmea_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             DELETE FROM bmeb_t
              WHERE bmebent = g_enterprise
                AND bmebsite= p_site
                AND bmeb001 = g_bmaa_m.bmaa001
                AND bmeb002 = g_bmaa_m.bmaa002
                AND bmeb003 = g_bmba_d1_t.bmba003
                AND bmeb004 = g_bmba_d1_t.bmba004
                AND bmeb005 = g_bmba_d1_t.bmba007
                AND bmeb006 = g_bmba_d1_t.bmba008
             IF SQLCA.sqlcode THEN
                INITIALIZE g_errparam TO NULL
                LET g_errparam.code = SQLCA.sqlcode
                LET g_errparam.extend = "DELETE bmeb_t"
                LET g_errparam.popup = TRUE
                CALL cl_err()
                LET r_success = FALSE
                RETURN r_success
             END IF
             #取替代资讯--已拋转资料
             IF g_bmaa_m.bmaastus='Y' AND p_site='ALL' THEN
                DELETE FROM bmea_t
                 WHERE bmeaent = g_enterprise
                   AND bmeasite!= p_site
                   #mark 141231
                   #AND bmeasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                     )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmea001 = g_bmaa_m.bmaa001
                   AND bmea002 = g_bmaa_m.bmaa002
                   AND bmea003 = g_bmba_d1_t.bmba003
                   AND bmea004 = g_bmba_d1_t.bmba004
                   AND bmea005 = g_bmba_d1_t.bmba007
                   AND bmea006 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmea_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
                DELETE FROM bmeb_t
                 WHERE bmebent = g_enterprise
                   AND bmebsite!= p_site
                   #mark 141231
                   #AND bmebsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
                   #                   where ooefent = g_enterprise
                   #                         #满足aimi150中的产品分类页签
                   #                     and (ooef001 IN (select unique imda001 from imda_t 
                   #                                       where imdaent = g_enterprise
                   #                                         and imdastus= 'Y'             #有效的
                   #                                         and imda005 = 'Y'             #BOM引入
                   #                                         and imda003 = '1'             #自动引入
                   #                                         #and imda002 = l_imaa009)      #产品分类
                   #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
                   #                        OR 
                   #                         #满足aimi150中的料件页签
                   #                          ooef001 IN (select unique imdb001 from imdb_t 
                   #                                       where imdbent = g_enterprise
                   #                                         and imdbstus= 'Y'             #有效的
                   #                                         and imdb005 = 'Y'             #BOM引入
                   #                                         and imdb003 = '1'             #自动引入
                   #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
                   #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
                   #                                      )
                   #                          )
                   #                  )
                   #mark 141231 end
                   AND bmeb001 = g_bmaa_m.bmaa001
                   AND bmeb002 = g_bmaa_m.bmaa002
                   AND bmeb003 = g_bmba_d1_t.bmba003
                   AND bmeb004 = g_bmba_d1_t.bmba004
                   AND bmeb005 = g_bmba_d1_t.bmba007
                   AND bmeb006 = g_bmba_d1_t.bmba008
                IF SQLCA.sqlcode THEN
                   INITIALIZE g_errparam TO NULL
                   LET g_errparam.code = SQLCA.sqlcode
                   LET g_errparam.extend = "DELETE bmeb_t"
                   LET g_errparam.popup = TRUE
                   CALL cl_err()
                   LET r_success = FALSE
                   RETURN r_success
                END IF
             END IF
   END CASE

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmca_key" order="88" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmca_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmca_t SET (bmcasite,bmca001,bmca002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmcaent = g_enterprise AND bmcasite = g_bmaasite_t
            AND bmca001 = g_bmaa001_t
            AND bmca002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmca_t SET (bmca003,bmca004,bmca005,bmca007,bmca008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmcaent = g_enterprise
            AND bmcasite= g_bmaa_m.bmaasite
            AND bmca001 = g_bmaa_m.bmaa001
            AND bmca002 = g_bmaa_m.bmaa002
            AND bmca003 = g_bmba_d1_t.bmba003
            AND bmca004 = g_bmba_d1_t.bmba004
            #AND bmca005 = g_bmba_d1_t.bmba005
            AND to_char(bmca005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmca007 = g_bmba_d1_t.bmba007
            AND bmca008 = g_bmba_d1_t.bmba008 
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF 
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmca_t SET (bmca003,bmca004,bmca005,bmca007,bmca008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmcaent = g_enterprise
               AND bmcasite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmcasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmca001 = g_bmaa_m.bmaa001
               AND bmca002 = g_bmaa_m.bmaa002
               AND bmca003 = g_bmba_d1_t.bmba003
               AND bmca004 = g_bmba_d1_t.bmba004
               #AND bmca005 = g_bmba_d1_t.bmba005
               AND to_char(bmca005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmca007 = g_bmba_d1_t.bmba007
               AND bmca008 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmca_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmcb_key" order="89" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmcb_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmcb_t SET (bmcbsite,bmcb001,bmcb002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmcbent = g_enterprise AND bmcbsite = g_bmaasite_t
            AND bmcb001 = g_bmaa001_t
            AND bmcb002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmcb_t SET (bmcb003,bmcb004,bmcb005,bmcb007,bmcb008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmcbent = g_enterprise
            AND bmcbsite= g_bmaa_m.bmaasite
            AND bmcb001 = g_bmaa_m.bmaa001
            AND bmcb002 = g_bmaa_m.bmaa002
            AND bmcb003 = g_bmba_d1_t.bmba003
            AND bmcb004 = g_bmba_d1_t.bmba004
            #AND bmcb005 = g_bmba_d1_t.bmba005
            AND to_char(bmcb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmcb007 = g_bmba_d1_t.bmba007
            AND bmcb008 = g_bmba_d1_t.bmba008  
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmcb_t SET (bmcb003,bmcb004,bmcb005,bmcb007,bmcb008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmcbent = g_enterprise
               AND bmcbsite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmcbsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmcb001 = g_bmaa_m.bmaa001
               AND bmcb002 = g_bmaa_m.bmaa002
               AND bmcb003 = g_bmba_d1_t.bmba003
               AND bmcb004 = g_bmba_d1_t.bmba004
               #AND bmcb005 = g_bmba_d1_t.bmba005
               AND to_char(bmcb005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmcb007 = g_bmba_d1_t.bmba007
               AND bmcb008 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmcb_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()
   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmcc_key" order="90" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmcc_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmcc_t SET (bmccsite,bmcc001,bmcc002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmccent = g_enterprise AND bmccsite = g_bmaasite_t
            AND bmcc001 = g_bmaa001_t
            AND bmcc002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmcc_t SET (bmcc003,bmcc004,bmcc005,bmcc007,bmcc008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmccent = g_enterprise
            AND bmccsite= g_bmaa_m.bmaasite
            AND bmcc001 = g_bmaa_m.bmaa001
            AND bmcc002 = g_bmaa_m.bmaa002
            AND bmcc003 = g_bmba_d1_t.bmba003
            AND bmcc004 = g_bmba_d1_t.bmba004
            #AND bmcc005 = g_bmba_d1_t.bmba005
            AND to_char(bmcc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmcc007 = g_bmba_d1_t.bmba007
            AND bmcc008 = g_bmba_d1_t.bmba008  
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmcc_t SET (bmcc003,bmcc004,bmcc005,bmcc007,bmcc008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmccent = g_enterprise
               AND bmccsite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmccsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmcc001 = g_bmaa_m.bmaa001
               AND bmcc002 = g_bmaa_m.bmaa002
               AND bmcc003 = g_bmba_d1_t.bmba003
               AND bmcc004 = g_bmba_d1_t.bmba004
               #AND bmcc005 = g_bmba_d1_t.bmba005
               AND to_char(bmcc005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmcc007 = g_bmba_d1_t.bmba007
               AND bmcc008 = g_bmba_d1_t.bmba008  
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmcc_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmcd_key" order="91" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmcd_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmcd_t SET (bmcdsite,bmcd001,bmcd002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmcdent = g_enterprise AND bmcdsite = g_bmaasite_t
            AND bmcd001 = g_bmaa001_t
            AND bmcd002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmcd_t SET (bmcd003,bmcd004,bmcd005,bmcd007,bmcd008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmcdent = g_enterprise
            AND bmcdsite= g_bmaa_m.bmaasite
            AND bmcd001 = g_bmaa_m.bmaa001
            AND bmcd002 = g_bmaa_m.bmaa002
            AND bmcd003 = g_bmba_d1_t.bmba003
            AND bmcd004 = g_bmba_d1_t.bmba004
            #AND bmcd005 = g_bmba_d1_t.bmba005
            AND to_char(bmcd005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmcd007 = g_bmba_d1_t.bmba007
            AND bmcd008 = g_bmba_d1_t.bmba008  
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmcd_t SET (bmcd003,bmcd004,bmcd005,bmcd007,bmcd008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmcdent = g_enterprise
               AND bmcdsite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmcdsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmcd001 = g_bmaa_m.bmaa001
               AND bmcd002 = g_bmaa_m.bmaa002
               AND bmcd003 = g_bmba_d1_t.bmba003
               AND bmcd004 = g_bmba_d1_t.bmba004
               #AND bmcd005 = g_bmba_d1_t.bmba005
               AND to_char(bmcd005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmcd007 = g_bmba_d1_t.bmba007
               AND bmcd008 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmcd_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmce_key" order="92" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmce_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmce_t SET (bmcesite,bmce001,bmce002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmceent = g_enterprise AND bmcesite = g_bmaasite_t
            AND bmce001 = g_bmaa001_t
            AND bmce002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmce_t SET (bmce003,bmce004,bmce005,bmce007,bmce008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmceent = g_enterprise
            AND bmcesite= g_bmaa_m.bmaasite
            AND bmce001 = g_bmaa_m.bmaa001
            AND bmce002 = g_bmaa_m.bmaa002
            AND bmce003 = g_bmba_d1_t.bmba003
            AND bmce004 = g_bmba_d1_t.bmba004
            #AND bmce005 = g_bmba_d1_t.bmba005
            AND to_char(bmce005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmce007 = g_bmba_d1_t.bmba007
            AND bmce008 = g_bmba_d1_t.bmba008  
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmce_t SET (bmce003,bmce004,bmce005,bmce007,bmce008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmceent = g_enterprise
               AND bmcesite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmcesite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmce001 = g_bmaa_m.bmaa001
               AND bmce002 = g_bmaa_m.bmaa002
               AND bmce003 = g_bmba_d1_t.bmba003
               AND bmce004 = g_bmba_d1_t.bmba004
               #AND bmce005 = g_bmba_d1_t.bmba005
               AND to_char(bmce005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmce007 = g_bmba_d1_t.bmba007
               AND bmce008 = g_bmba_d1_t.bmba008  
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmce_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmcf_key" order="93" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmcf_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmcf_t SET (bmcfsite,bmcf001,bmcf002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmcfent = g_enterprise AND bmcfsite = g_bmaasite_t
            AND bmcf001 = g_bmaa001_t
            AND bmcf002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         #LET g_bmba005_2 = g_bmba_d1_t.bmba005
         LET g_bmba005_2 = YEAR(g_bmba_d1_t.bmba005) USING "####",'-',MONTH(g_bmba_d1_t.bmba005) USING "&&",'-',DAY(g_bmba_d1_t.bmba005) USING "&&",' ',TIME(g_bmba_d1_t.bmba005)
         UPDATE bmcf_t SET (bmcf003,bmcf004,bmcf005,bmcf007,bmcf008) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmcfent = g_enterprise
            AND bmcfsite= g_bmaa_m.bmaasite
            AND bmcf001 = g_bmaa_m.bmaa001
            AND bmcf002 = g_bmaa_m.bmaa002
            AND bmcf003 = g_bmba_d1_t.bmba003
            AND bmcf004 = g_bmba_d1_t.bmba004
            #AND bmcf005 = g_bmba_d1_t.bmba005
            AND to_char(bmcf005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
            AND bmcf007 = g_bmba_d1_t.bmba007
            AND bmcf008 = g_bmba_d1_t.bmba008  
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmcf_t SET (bmcf003,bmcf004,bmcf005,bmcf007,bmcf008) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,g_bmba_d1[l_ac].bmba005,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmcfent = g_enterprise
               AND bmcfsite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmcfsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmcf001 = g_bmaa_m.bmaa001
               AND bmcf002 = g_bmaa_m.bmaa002
               AND bmcf003 = g_bmba_d1_t.bmba003
               AND bmcf004 = g_bmba_d1_t.bmba004
               #AND bmcf005 = g_bmba_d1_t.bmba005
               AND to_char(bmcf005,'yyyy-mm-dd hh24:mi:ss') = g_bmba005_2
               AND bmcf007 = g_bmba_d1_t.bmba007
               AND bmcf008 = g_bmba_d1_t.bmba008  
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmcf_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmea_key" order="94" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmea_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmea_t SET (bmeasite,bmea001,bmea002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmeaent = g_enterprise AND bmeasite = g_bmaasite_t
            AND bmea001 = g_bmaa001_t
            AND bmea002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         UPDATE bmea_t SET (bmea003,bmea004,bmea005,bmea006) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmeaent = g_enterprise
            AND bmeasite= g_bmaa_m.bmaasite
            AND bmea001 = g_bmaa_m.bmaa001
            AND bmea002 = g_bmaa_m.bmaa002
            AND bmea003 = g_bmba_d1_t.bmba003
            AND bmea004 = g_bmba_d1_t.bmba004
            AND bmea005 = g_bmba_d1_t.bmba007
            AND bmea006 = g_bmba_d1_t.bmba008 
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmea_t SET (bmea003,bmea004,bmea005,bmea006) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmeaent = g_enterprise
               AND bmeasite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmeasite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001    #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmea001 = g_bmaa_m.bmaa001
               AND bmea002 = g_bmaa_m.bmaa002
               AND bmea003 = g_bmba_d1_t.bmba003
               AND bmea004 = g_bmba_d1_t.bmba004
               AND bmea005 = g_bmba_d1_t.bmba007
               AND bmea006 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
            
   END CASE 
   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmea_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_update_bmeb_key" order="95" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_update_bmeb_key(p_type)
DEFINE p_type       LIKE type_t.chr1   #a:bmaa修改引起（预留）   b:bmba 第一个单身修改引起
DEFINE r_success    LIKE type_t.num5
DEFINE l_imaa009    LIKE imaa_t.imaa009  #产品分类

   LET r_success = TRUE
   
   CASE p_type
      WHEN "a"   #bmaa修改引起  预留，暂定单头key值不可修改
         UPDATE bmeb_t SET (bmebsite,bmeb001,bmeb002) 
                         = (g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002)
          WHERE bmebent = g_enterprise AND bmebsite = g_bmaasite_t
            AND bmeb001 = g_bmaa001_t
            AND bmeb002 = g_bmaa002_t
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
      WHEN "b"   #bmba修改引起
         UPDATE bmeb_t SET (bmeb003,bmeb004,bmeb005,bmeb006) 
                         = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,
                            g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
          WHERE bmebent = g_enterprise AND bmebsite = g_bmaa_m.bmaasite
            AND bmeb001 = g_bmaa_m.bmaa001
            AND bmeb002 = g_bmaa_m.bmaa002
            AND bmeb003 = g_bmba_d1_t.bmba003
            AND bmeb004 = g_bmba_d1_t.bmba004
            AND bmeb005 = g_bmba_d1_t.bmba007
            AND bmeb006 = g_bmba_d1_t.bmba008 
         IF SQLCA.sqlcode THEN
            LET r_success = FALSE
         END IF
         #更新已拋转资料
         IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
            #产品分类
            LET l_imaa009=''
            SELECT imaa009 INTO l_imaa009 FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmaa_m.bmaa001
            UPDATE bmeb_t SET (bmeb003,bmeb004,bmeb005,bmeb006) 
                            = (g_bmba_d1[l_ac].bmba003,g_bmba_d1[l_ac].bmba004,
                               g_bmba_d1[l_ac].bmba007,g_bmba_d1[l_ac].bmba008)
             WHERE bmebent = g_enterprise
               AND bmebsite!= g_bmaa_m.bmaasite
               #mark 141231
               #AND bmebsite IN (select unique ooef001 from ooef_t    #可拋转的营运据点
               #                   where ooefent = g_enterprise
               #                         #满足aimi150中的产品分类页签
               #                     and (ooef001 IN (select unique imda001 from imda_t 
               #                                       where imdaent = g_enterprise
               #                                         and imdastus= 'Y'             #有效的
               #                                         and imda005 = 'Y'             #BOM引入
               #                                         and imda003 = '1'             #自动引入
               #                                         #and imda002 = l_imaa009)      #产品分类
               #                                         and (imda002 = 'ALL' OR imda002 = l_imaa009))      #产品分类 #mod 141230
               #                        OR 
               #                         #满足aimi150中的料件页签
               #                          ooef001 IN (select unique imdb001 from imdb_t 
               #                                       where imdbent = g_enterprise
               #                                         and imdbstus= 'Y'             #有效的
               #                                         and imdb005 = 'Y'             #BOM引入
               #                                         and imdb003 = '1'             #自动引入
               #                                         #and imdb002 = g_bmaa_m.bmaa001   #料件编号
               #                                         and g_bmaa_m.bmaa001 LIKE replace(replace(imdb002,'*','%'),'?','_')    #料件编号 #mod 141230
               #                                     )
               #                          )
               #                  )
               #mark 141231 end
               AND bmeb001 = g_bmaa_m.bmaa001
               AND bmeb002 = g_bmaa_m.bmaa002
               AND bmeb003 = g_bmba_d1_t.bmba003
               AND bmeb004 = g_bmba_d1_t.bmba004
               AND bmeb005 = g_bmba_d1_t.bmba007
               AND bmeb006 = g_bmba_d1_t.bmba008 
            IF SQLCA.sqlcode THEN
               LET r_success = FALSE
            END IF
         END IF
            
   END CASE 

   IF NOT r_success THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "UPDATE bmeb_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

   END IF

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_modify_chk_allow" order="96" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#確認後能不能直接修改BOM要看aimi012的設定：有維護各個生命週期要不要做ECN
PRIVATE FUNCTION abmm200_modify_chk_allow()
DEFINE l_imaa010    LIKE imaa_t.imaa010
DEFINE l_oocq007    LIKE oocq_t.oocq007
DEFINE r_success    LIKE type_t.num5
   
   LET r_success = TRUE
   IF cl_null(g_bmaa_m.bmaastus) OR cl_null(g_bmaa_m.bmaa001) OR g_bmaa_m.bmaastus!='Y' THEN
      RETURN r_success
   END IF

   SELECT imaa010 INTO l_imaa010
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmaa_m.bmaa001
   IF NOT cl_null(l_imaa010) THEN  #工程料件
      SELECT oocq007 INTO l_oocq007 
        FROM oocq_t
       WHERE oocqent = g_enterprise
         AND oocq001 = '210'
         AND oocq002 = l_imaa010
      IF l_oocq007 = 'Y' THEN  #研发中心需ECN
         #此料件设置不能直接修改BOM，需做ECN变更,请确认aimi012的设定：有维护各个生命周期要不要做ECN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = "abm-00075"
         LET g_errparam.extend = g_bmaa_m.bmaa001
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
      END IF
   END IF
   
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_chk_imaa011_imaa012" order="97" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmm200_chk_imaa011_imaa012()
   DEFINE r_success        LIKE type_t.num5
   DEFINE l_imaa011        LIKE imaa_t.imaa011  #产出类型
   DEFINE l_imaa012        LIKE imaa_t.imaa012  #允许副产品产出
   DEFINE l_today          LIKE bmab_t.bmab005
   DEFINE l_cnt            LIKE type_t.num5
   
   LET r_success = TRUE
   
   #联产品，多产出主件，副产品 处理
   SELECT imaa011,imaa012 INTO l_imaa011,l_imaa012 FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmaa_m.bmaa001
   IF cl_null(l_imaa011) THEN LET l_imaa011='0' END IF #一般
   IF cl_null(l_imaa012) THEN LET l_imaa012='N' END IF
   CASE l_imaa011
      WHEN '1' #联产品
           ##联产品页签自动新增一笔跟主件料号一样的数据
           #SELECT COUNT(*) INTO l_cnt FROM bmab_t
           # WHERE bmabent = g_enterprise
           #   AND bmabsite= g_bmaa_m.bmaasite
           #   AND bmab001 = g_bmaa_m.bmaa001
           #   AND bmab002 = g_bmaa_m.bmaa002
           #   AND bmab003 = g_bmaa_m.bmaa001
           #IF SQLCA.sqlcode THEN
           #   INITIALIZE g_errparam TO NULL
           #   LET g_errparam.code = SQLCA.sqlcode
           #   LET g_errparam.extend = 'sel bmab'
           #   LET g_errparam.popup = TRUE
           #   CALL cl_err()
           #
           #   LET r_success = FALSE
           #   RETURN r_success
           #END IF
           #IF l_cnt = 0 THEN
           #   LET l_today = cl_get_current()
           #   INSERT INTO bmab_t(bmabent,bmabsite,bmab001,bmab002,bmab003,bmab004,bmab005,bmab006)
           #     VALUES(g_enterprise,g_bmaa_m.bmaasite,g_bmaa_m.bmaa001,g_bmaa_m.bmaa002,g_bmaa_m.bmaa001,100,l_today,'')
           #   IF SQLCA.sqlcode THEN
           #      INITIALIZE g_errparam TO NULL
           #      LET g_errparam.code = SQLCA.sqlcode
           #      LET g_errparam.extend = 'ins bmab'
           #      LET g_errparam.popup = TRUE
           #      CALL cl_err()
           #
           #      LET r_success = FALSE
           #      RETURN r_success
           #   END IF
           #   CALL abmm200_b_fill_bmab()
           #END IF
           #mark 141107 BOM的聯產品料號不要自動產生
           #多产出主件页签中的是不应该有资料
           DELETE FROM bmad_t
            WHERE bmadent = g_enterprise
              AND bmadsite= g_bmaa_m.bmaasite
              AND bmad001 = g_bmaa_m.bmaa001
              AND bmad002 = g_bmaa_m.bmaa002
           IF SQLCA.sqlcode THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = SQLCA.sqlcode
              LET g_errparam.extend = 'del bmad'
              LET g_errparam.popup = TRUE
              CALL cl_err()

              LET r_success = FALSE
              RETURN r_success
           END IF
           CALL abmm200_b_fill_bmad()
      WHEN '2' #分解品
           #联产品页签是不应该有资料
           DELETE FROM bmab_t
            WHERE bmabent = g_enterprise
              AND bmabsite= g_bmaa_m.bmaasite
              AND bmab001 = g_bmaa_m.bmaa001
              AND bmab002 = g_bmaa_m.bmaa002
           IF SQLCA.sqlcode THEN
              INITIALIZE g_errparam TO NULL
              LET g_errparam.code = SQLCA.sqlcode
              LET g_errparam.extend = 'del bmab'
              LET g_errparam.popup = TRUE
              CALL cl_err()

              LET r_success = FALSE
              RETURN r_success
           END IF
           CALL abmm200_b_fill_bmab()
   END CASE
   IF l_imaa012='N' THEN  #允许副产品产出
      #副产品页签是不应该有资料
      DELETE FROM bmac_t
       WHERE bmacent = g_enterprise
         AND bmacsite= g_bmaa_m.bmaasite
         AND bmac001 = g_bmaa_m.bmaa001
         AND bmac002 = g_bmaa_m.bmaa002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'del bmac'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         LET r_success = FALSE
         RETURN r_success
      END IF
      CALL abmm200_b_fill_bmac()
   END IF
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_find_new_expand" order="98" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#新增后切换到新增的笔数
#根据元件查找存在于根目录的主件，并展开到元件
PRIVATE FUNCTION abmm200_find_new_expand(p_bmaa001,p_level)
   DEFINE p_bmaa001     LIKE bmaa_t.bmaa001   #作为元件
   DEFINE p_level       LIKE type_t.num5    #防止回路
   DEFINE r_find        LIKE type_t.chr1      #是否找到与根目录相匹配的了
   DEFINE l_find        LIKE type_t.chr1
   DEFINE l_level       LIKE type_t.num5    #防止回路
   DEFINE l_sql         STRING
   DEFINE l_bmaa001     LIKE bmaa_t.bmaa001  #主件
   DEFINE l_find_new    DYNAMIC ARRAY OF RECORD    #新增资料展开节点
                        #bmaa001    LIKE bmaa_t.bmaa001,   #根节点
                        mum        LIKE bmaa_t.bmaa001,   #母节点
                        son        LIKE bmaa_t.bmaa001    #子节点
                        END RECORD
   DEFINE l_isfind      LIKE type_t.chr1     #是否找到新增的那笔资料
   DEFINE l_i,l_row     LIKE type_t.num5
   DEFINE li_idx        LIKE type_t.num5
   
   LET r_find = 'N'
   
   IF p_level > 100 THEN
      IF g_xh='N' THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'abm-00202'
         LET g_errparam.extend = ''
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET g_xh='Y'
      END IF
      RETURN r_find
   END IF
   
   #查找在根目录的主件,将有此元件的资料都展开
   LET l_sql = " SELECT unique bmaa001 FROM bmba_t,bmaa_t ",
               "  WHERE bmaaent=bmbaent AND bmaasite=bmbasite ",
               "    AND bmaa001=bmba001 AND bmaa002 = bmba002 ",
               "    AND bmaaent = ",g_enterprise,
               "    AND bmaasite= '",g_site,"' ",
               "    AND bmaa002 = '",g_bmaa002_t,"' ",
               "    AND bmba003 = '",p_bmaa001,"' "
   PREPARE abmm200_find_new_expand_p1 FROM l_sql
   DECLARE abmm200_find_new_expand_c1 CURSOR FOR abmm200_find_new_expand_p1
   LET l_row = 0
   FOREACH abmm200_find_new_expand_c1 INTO l_bmaa001
       LET l_row = l_row + 1
       
       LET l_find_new[l_row].mum = l_bmaa001
       LET l_find_new[l_row].son = p_bmaa001
   END FOREACH
   
   IF l_row > 0 THEN
      FOR l_i = 1 TO l_row
          #检查是不是在根目录中
          LET l_isfind = 'N'
          FOR li_idx = 1 TO g_browser.getLength()
             IF g_browser[li_idx].b_bmaa001 = l_find_new[l_i].mum AND g_browser[li_idx].b_bmaa002 = g_bmaa002_t THEN
                LET l_isfind = 'Y'
                #EXIT FOR
                #在根目录中展开
                CALL abmm200_browser_expand(li_idx)
                LET g_browser[li_idx].b_isExp = 1
                LET g_browser[li_idx].b_exp  = TRUE
                LET r_find = 'Y'
                DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
                   BEFORE DISPLAY
                      EXIT DISPLAY
                END DISPLAY
             END IF
          END FOR
          
          IF l_isfind = 'Y' THEN
             ##在根目录中展开
             #CALL abmm200_browser_expand(li_idx)
             #LET g_browser[li_idx].b_isExp = 1
             #LET r_find = 'Y'
          ELSE
             #继续往上找
             LET l_level = p_level + 1
             CALL abmm200_find_new_expand(l_find_new[l_i].mum,l_level) RETURNING l_find
             #往上找完回来后若上面有找到，本次循环中子件不为新增主件的继续展开，直到为新增主件为止
             #IF l_find = 'Y' AND l_find_new[l_i].son != g_bmaa001_t THEN
             IF l_find = 'Y' THEN
                FOR li_idx = 1 TO g_browser.getLength()
                   IF g_browser[li_idx].b_bmaa001 = l_find_new[l_i].mum AND g_browser[li_idx].b_bmaa002 = g_bmaa002_t THEN
                      #EXIT FOR
                      #在根目录中展开
                      CALL abmm200_browser_expand(li_idx)
                      LET g_browser[li_idx].b_isExp = 1
                      LET g_browser[li_idx].b_exp  = TRUE
                      LET r_find = 'Y'
                      DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
                         BEFORE DISPLAY
                            EXIT DISPLAY
                      END DISPLAY
                   END IF
                END FOR
             END IF
          END IF
      END FOR
   END IF
   
   RETURN r_find
END FUNCTION]]>
  </point>
  <point name="function.abmm200_split" order="99" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#插入开窗多选插入动作
#add 150420
PRIVATE FUNCTION abmm200_split()
   DEFINE l_string  STRING
   DEFINE tok       base.StringTokenizer 
   DEFINE l_idx     INTEGER 
   
   LET l_string = g_qryparam.return1
   CALL g_imaa_r.clear()
   
   LET tok = base.StringTokenizer.create(l_string,'|')
   LET l_idx = 0
   WHILE tok.hasMoreTokens()
      LET l_idx = l_idx + 1
      LET g_imaa_r[l_idx].imaa001=tok.nextToken()
   END WHILE
   
END FUNCTION]]>
  </point>
  <point name="function.abmm200_ins_bmba" order="100" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#多选插入bmba
#add 150420
PRIVATE FUNCTION abmm200_ins_bmba()
   DEFINE r_success        LIKE type_t.num5
   #DEFINE l_bmba           RECORD LIKE bmba_t.*
   #DEFINE l_bmba2          RECORD LIKE bmba_t.*
   DEFINE l_bmba           type_g_bmba
   DEFINE l_bmba2          type_g_bmba
   DEFINE l_i              LIKE type_t.num10
   DEFINE l_bmba009        LIKE bmba_t.bmba009
   DEFINE l_ln             LIKE type_t.num5     #间隔项次
   DEFINE l_imae021   LIKE imae_t.imae021  #工单展开选项
   DEFINE l_imae081   LIKE imae_t.imae081  #发料单位
   DEFINE l_imae091   LIKE imae_t.imae091  #倒扣料
   
   LET r_success = TRUE
   
   #项次
   SELECT MAX(bmba009) INTO l_bmba009
     FROM bmba_t
    WHERE bmbaent = g_enterprise
      AND bmbasite= g_bmaa_m.bmaasite
      AND bmba001 = g_bmaa_m.bmaa001
      AND bmba002 = g_bmaa_m.bmaa002
   IF l_bmba009 IS NULL THEN
      LET l_bmba009 = 0
   END IF
   CALL cl_get_para(g_enterprise,g_site,'E-BAS-0008') RETURNING l_ln
   IF cl_null(l_ln) OR l_ln=0 THEN LET l_ln = 1 END IF
   
   INITIALIZE l_bmba.* TO NULL
   LET l_bmba.bmbaent = g_enterprise
   LET l_bmba.bmbasite= g_bmaa_m.bmaasite
   LET l_bmba.bmba001 = g_bmaa_m.bmaa001
   LET l_bmba.bmba002 = g_bmaa_m.bmaa002
   LET l_bmba.bmba004 = ' '   #部位
   LET l_bmba.bmba007 = ' '   #作业
   LET l_bmba.bmba008 = ' '   #作业序
   LET l_bmba.bmba005 = cl_get_current()  #生效日期
   LET l_bmba.bmba011 = 1                 #组成用量
   IF g_bmaa_m.bmaastus = 'Y' AND NOT cl_null(g_bmaa_m.bmaa003) AND g_bmaa_m.bmaa003 > 0 THEN
      LET l_bmba.bmba011 = ''             #组成用量
   END IF
   IF cl_null(g_bmaa_m.bmaa003) OR g_bmaa_m.bmaa003<=0 THEN
      LET l_bmba.bmba012 = 1                 #底数
   ELSE
      LET l_bmba.bmba012 = g_bmaa_m.bmaa003  #底数
   END IF
   LET l_bmba.bmba013 = '1'               #必要
   LET l_bmba.bmba014 = 'N'               #特征
   LET l_bmba.bmba018 = 'N'               #插件位置
   LET l_bmba.bmba019 = '1'               #参数研发中心
   LET l_bmba.bmba020 = 'N'               #可选件
   LET l_bmba.bmba022 = 'N'               #代买料
   LET l_bmba.bmba023 = 0                 #元件投料时距
   LET l_bmba.bmba025 = 'N'               #附属零件
   LET l_bmba.bmba027 = 'N'               #公式用量
   LET l_bmba.bmba028 = ''                #公式
   LET l_bmba.bmba029 = '1'              #损耗率形态
   LET l_bmba.bmba031 = 'N'              #客供料
   
   
   #add 150527 记录入数组 便于commit后翻出来处理插件位置，因commit之前打开的维护插件位置的作业打开是空的
   CALL g_bmba_key.clear()
   LET g_bmba_key[1].bmaasite = l_bmba.bmbasite
   LET g_bmba_key[1].bmaa001  = l_bmba.bmba001
   LET g_bmba_key[1].bmaa002  = l_bmba.bmba002
   LET g_bmba_key[1].bmba003  = g_imaa_r[1].imaa001
   LET g_bmba_key[1].bmba004  = l_bmba.bmba004
   LET g_bmba_key[1].bmba005  = l_bmba.bmba005
   LET g_bmba_key[1].bmba007  = l_bmba.bmba007
   LET g_bmba_key[1].bmba008  = l_bmba.bmba008
   #add 150527 end
   
   FOR l_i = 2 TO g_imaa_r.getLength()
      INITIALIZE l_bmba2.* TO NULL
      LET l_bmba2.* = l_bmba.*
      LET l_bmba2.bmba003 = g_imaa_r[l_i].imaa001  #元件料号
      
      #AFTER FIELD bmba003中检查逻辑，其他合并到开窗中
      #檢查生命週期
      CALL abmm200_chk_item_lifecycle(l_bmba2.bmba003) RETURNING r_success
      IF r_success = FALSE THEN
         RETURN r_success
      END IF

      
      SELECT imae081,imae021,imae091
        INTO l_imae081,l_imae021,l_imae091
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite= g_bmaa_m.bmaasite
         AND imae001 = l_bmba2.bmba003  
      IF cl_null(l_imae021) THEN LET l_imae021 = '1' END IF
      IF cl_null(l_imae091) THEN LET l_imae091 = 'N' END IF
      LET l_bmba2.bmba010 = l_imae081    #发料单位
      LET l_bmba2.bmba021 = l_imae021    #工单展开选项
      LET l_bmba2.bmba030 = l_imae091    #倒扣料

      #项次
      LET l_bmba2.bmba009 = l_bmba009 + l_ln
      LET l_bmba009 = l_bmba2.bmba009
      
      INSERT INTO bmba_t(bmbaent,bmbasite,bmba001,bmba002,bmba003, 
                         bmba004,bmba005,bmba006,bmba007,bmba008,
                         bmba009,bmba010,bmba011,bmba012,bmba013,
                         bmba014,bmba015,bmba016,bmba017,bmba018,
                         bmba019,bmba020,bmba021,bmba022,bmba023,
                         bmba024,bmba025,bmba026,bmba027,bmba028,
                         bmba029,bmba030,bmba031,bmba032 )
      VALUES (l_bmba2.bmbaent,l_bmba2.bmbasite,l_bmba2.bmba001,l_bmba2.bmba002,l_bmba2.bmba003, 
              l_bmba2.bmba004,l_bmba2.bmba005,l_bmba2.bmba006,l_bmba2.bmba007,l_bmba2.bmba008,
              l_bmba2.bmba009,l_bmba2.bmba010,l_bmba2.bmba011,l_bmba2.bmba012,l_bmba2.bmba013,
              l_bmba2.bmba014,l_bmba2.bmba015,l_bmba2.bmba016,l_bmba2.bmba017,l_bmba2.bmba018,
              l_bmba2.bmba019,l_bmba2.bmba020,l_bmba2.bmba021,l_bmba2.bmba022,l_bmba2.bmba023,
              l_bmba2.bmba024,l_bmba2.bmba025,l_bmba2.bmba026,l_bmba2.bmba027,l_bmba2.bmba028,
              l_bmba2.bmba029,l_bmba2.bmba030,l_bmba2.bmba031,l_bmba2.bmba032 )
      IF SQLCA.sqlcode  THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "INSERT bmba_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
         LET r_success = FALSE
         RETURN r_success
      END IF
      
      #add 150527
      LET g_bmba_key[l_i].bmaasite = l_bmba2.bmbasite
      LET g_bmba_key[l_i].bmaa001  = l_bmba2.bmba001
      LET g_bmba_key[l_i].bmaa002  = l_bmba2.bmba002
      LET g_bmba_key[l_i].bmba003  = l_bmba2.bmba003
      LET g_bmba_key[l_i].bmba004  = l_bmba2.bmba004
      LET g_bmba_key[l_i].bmba005  = l_bmba2.bmba005
      LET g_bmba_key[l_i].bmba007  = l_bmba2.bmba007
      LET g_bmba_key[l_i].bmba008  = l_bmba2.bmba008
      #add 150527 end
      
      #拋转已拋转过的bom
      IF g_bmaa_m.bmaastus='Y' AND g_bmaa_m.bmaasite='ALL' THEN
         CALL s_abmm200_carry_bmba(l_bmba2.*) RETURNING l_success
         IF NOT l_success THEN
            LET r_success = FALSE
            RETURN r_success
         END IF
      END IF
   END FOR
               

   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmm200_open_abmm202" order="101" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#打开维护插件位置的作业
#add 150527
PRIVATE FUNCTION abmm200_open_abmm202(p_bmaasite,p_bmaa001,p_bmaa002,p_bmba003,p_bmba004,p_bmba005,p_bmba007,p_bmba008)
   DEFINE p_bmaasite  LIKE bmaa_t.bmaasite
   DEFINE p_bmaa001   LIKE bmaa_t.bmaa001
   DEFINE p_bmaa002   LIKE bmaa_t.bmaa002
   DEFINE p_bmba003   LIKE bmba_t.bmba003
   DEFINE p_bmba004   LIKE bmba_t.bmba004
   DEFINE p_bmba005   LIKE bmba_t.bmba005
   DEFINE p_bmba007   LIKE bmba_t.bmba007
   DEFINE p_bmba008   LIKE bmba_t.bmba008
   
   INITIALIZE la_param.* TO NULL
   CASE g_prog
      WHEN "abmm200"
           LET la_param.prog = "abmm202"
      WHEN "abmm210"
           LET la_param.prog = "abmm212"
   END CASE
   LET g_bmba005_2 = YEAR(p_bmba005) USING "####",'-',MONTH(p_bmba005) USING "&&",'-',DAY(p_bmba005) USING "&&",' ',TIME(p_bmba005)
   #LET la_param.param[1] = p_bmaasite  #azzi910中
   LET la_param.param[1] = p_bmaa001
   LET la_param.param[2] = p_bmaa002
   LET la_param.param[3] = p_bmba003
   LET la_param.param[4] = p_bmba004
   LET la_param.param[5] = g_bmba005_2  #p_bmba005
   LET la_param.param[6] = p_bmba007
   LET la_param.param[7] = p_bmba008
   LET ls_js = util.JSON.stringify(la_param)
   DISPLAY ls_js
   CALL cl_cmdrun_wait(ls_js)
   

END FUNCTION]]>
  </point>
  <point name="function.abmm200_open_abmm202_2" order="102" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#根据imaa036设置打开维护插件位置的作业
PRIVATE FUNCTION abmm200_open_abmm202_2(p_bmaasite,p_bmaa001,p_bmaa002,p_bmba003,p_bmba004,p_bmba005,p_bmba007,p_bmba008)
   DEFINE p_bmaasite  LIKE bmaa_t.bmaasite
   DEFINE p_bmaa001   LIKE bmaa_t.bmaa001
   DEFINE p_bmaa002   LIKE bmaa_t.bmaa002
   DEFINE p_bmba003   LIKE bmba_t.bmba003
   DEFINE p_bmba004   LIKE bmba_t.bmba004
   DEFINE p_bmba005   LIKE bmba_t.bmba005
   DEFINE p_bmba007   LIKE bmba_t.bmba007
   DEFINE p_bmba008   LIKE bmba_t.bmba008
   DEFINE l_imaa036        LIKE imaa_t.imaa036  #是否自动弹出插件位置
   
   SELECT imaa036 INTO l_imaa036 FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = p_bmba003
   IF cl_null(l_imaa036) THEN LET l_imaa036 = 'N' END IF
   IF l_imaa036 = 'Y' THEN
      #打开维护插件位置的作业
      CALL abmm200_open_abmm202(p_bmaasite,p_bmaa001,p_bmaa002,p_bmba003,p_bmba004,p_bmba005,p_bmba007,p_bmba008)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmm200_get_bmba005_str" order="103" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#画面QBE条件>=150601 改成认识的格式
#add 150608
PRIVATE FUNCTION abmm200_get_bmba005_str(p_bmba005)
   DEFINE p_bmba005    STRING
   DEFINE r_bmba005    STRING
   DEFINE l_post1      LIKE type_t.num5  #=号位置
   DEFINE l_post2      LIKE type_t.num5  #>号位置
   DEFINE l_post3      LIKE type_t.num5  #<号位置
   DEFINE l_post       LIKE type_t.num5  #最后一个符号的位置
   DEFINE l_length     LIKE type_t.num5  #字符串长度
   DEFINE l_str0       STRING            #保留符号
   DEFINE l_str        STRING            #日期原始字符串
   
   #去除前后空格
   LET p_bmba005= p_bmba005.trim()
   LET r_bmba005= p_bmba005
   #获取符号位置
   LET l_post1  = p_bmba005.getIndexOf("=",1)
   LET l_post2  = p_bmba005.getIndexOf(">",1)
   LET l_post3  = p_bmba005.getIndexOf("<",1)
   IF l_post1 > l_post2 THEN
      LET l_post = l_post1
   ELSE
      LET l_post = l_post2
   END IF
   IF l_post3 > l_post THEN
      LET l_post = l_post3
   END IF
   #取得日期数字
   LET l_length = p_bmba005.getLength()
   LET l_str    = p_bmba005.subString(l_post+1,l_length)  #日期数值
   LET l_str0   = p_bmba005.subString(1,l_post)           #保留符号
   #判断字符串长度做不同处理：一般为6个长度（20150601）或8个长度（150601）
   CASE l_str.getLength()
      WHEN 6   #150601
           LET r_bmba005=l_str0 CLIPPED,'20',l_str.subString(1,2),'-',l_str.subString(3,4),'-',l_str.subString(5,6),' 00:00:00'   
      WHEN 8   #20150601
           LET r_bmba005=l_str0 CLIPPED,l_str.subString(1,4),'-',l_str.subString(5,6),'-',l_str.subString(7,8),' 00:00:00'
   END CASE
  
   RETURN r_bmba005
END FUNCTION]]>
  </point>
  <point name="function.abmm200_get_bmba005_str2" order="104" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#wc中，QBE条件bmba005>='150601' 改成认识的格式bmba005>=TO_DATE('2015-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS')
#add 150608
PRIVATE FUNCTION abmm200_get_bmba005_str2(p_wc)
   DEFINE p_wc         STRING
   DEFINE r_wc         STRING
   DEFINE l_post1      LIKE type_t.num5  #=号位置
   DEFINE l_post2      LIKE type_t.num5  #>号位置
   DEFINE l_post3      LIKE type_t.num5  #<号位置
   DEFINE l_post       LIKE type_t.num5  #最后一个符号的位置
   DEFINE l_length     LIKE type_t.num5  #字符串长度
   DEFINE l_strb       STRING            #保留符号-前
   DEFINE l_stra       STRING            #保留符号-后
   DEFINE l_str        STRING            #日期原始字符串
   
   LET r_wc= p_wc
   #获取bmba005的位置
   LET l_post  = p_wc.getIndexOf("bmba005",1)
   LET l_length= p_wc.getLength()
   LET l_str   = p_wc.subString(l_post+7,l_length)  #>='150601'或>='20150101'等
   LET l_strb  = p_wc.subString(1,l_post+6)   #保留符号:"bmba005"
   #获取符号位置
   LET l_post1  = l_str.getIndexOf("='",1)
   LET l_post2  = l_str.getIndexOf(">'",1)
   LET l_post3  = l_str.getIndexOf("<'",1)
   #判断要从哪个位置开始取得日期
   IF l_post1 > l_post2 THEN
      LET l_post = l_post1
   ELSE
      LET l_post = l_post2
   END IF
   IF l_post3 > l_post THEN
      LET l_post = l_post3
   END IF
   #取得日期数字
   LET l_strb  = l_strb,l_str.subString(1,l_post) #保留符号:"bmba005>="
   LET l_length= l_str.getLength()
   LET l_stra  = l_str.subString(l_post+2,l_length)  #保留符号:"150601'"
   #获取日期后面引号的位置,再分别获得日期原始字符串，及保留符号-后
   LET l_post  = l_stra.getIndexOf("'",1)
   LET l_length= l_stra.getLength()
   LET l_str   = l_stra.subString(1,l_post-1)  #日期原始字符串:"150601"或"20150601"
   #取得保留符号-后
   IF l_length > l_post THEN
      LET l_stra = l_stra.subString(l_post+1,l_length)
   ELSE
      LET l_stra = ''
   END IF
   #处理日期原始字符串
   #判断字符串长度做不同处理：一般为6个长度（20150601）或8个长度（150601）-->2015-01-01 00:00:00
   CASE l_str.getLength()
      WHEN 6   #150601
           LET l_str='20',l_str.subString(1,2),'-',l_str.subString(3,4),'-',l_str.subString(5,6),' 00:00:00'   
      WHEN 8   #20150601
           LET l_str=l_str.subString(1,4),'-',l_str.subString(5,6),'-',l_str.subString(7,8),' 00:00:00'
   END CASE
   #bmba005>=TO_DATE('2015-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS')
   LET l_str = "TO_DATE('",l_str,"','YYYY-MM-DD HH24:MI:SS')"
   LET r_wc  = l_strb,l_str,l_stra
   
   RETURN r_wc
END FUNCTION]]>
  </point>
  <point name="function.abmm200_crt_table" order="105" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#增加临时表
#add 150609
PRIVATE FUNCTION abmm200_crt_table()

   ##用来过渡画面查询条件获取的资料，提高效能
   #DROP TABLE browser_temp;
   #CREATE TEMP TABLE browser_temp(
   #         bmaa001    LIKE bmaa_t.bmaa001,
   #         bmaa002    LIKE bmaa_t.bmaa002,
   #         bmaasite   LIKE bmaa_t.bmaasite
   #);
   #IF SQLCA.sqlcode THEN
   #   INITIALIZE g_errparam TO NULL
   #   LET g_errparam.code = SQLCA.sqlcode
   #   LET g_errparam.extend = 'create table browser_temp'
   #   LET g_errparam.popup = TRUE
   #   CALL cl_err()
   #END IF
END FUNCTION]]>
  </point>
  <point name="function.abmm200_chk_hasF" order="106" ver="10" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
#检查是否有父节点
#add 150609
PRIVATE FUNCTION abmm200_chk_hasF(p_bmaa001,p_bmaa002)
   DEFINE p_bmaa001    LIKE bmaa_t.bmaa001
   DEFINE p_bmaa002    LIKE bmaa_t.bmaa002
   DEFINE li_cnt   INTEGER
   DEFINE l_sql STRING

   LET li_cnt = 0

   LET l_sql = " SELECT COUNT(*)",
               " FROM bmba_t ",
               " WHERE bmba003 = '",p_bmaa001,"' ",
               "   AND bmba002 = '",p_bmaa002,"' ",
               "   AND bmbaent = '",g_enterprise,"' ",
               "   AND bmbasite = '",g_site,"' "
   IF NOT cl_null(g_wc2_bmba1) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba1 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba2) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba2 CLIPPED
   END IF
   IF NOT cl_null(g_wc2_bmba3) THEN
      LET l_sql = l_sql CLIPPED," AND ",g_wc2_bmba3 CLIPPED
   END IF
   IF NOT cl_null(g_vdate) THEN
      LET l_sql = l_sql CLIPPED," AND (to_char(bmba005,'yyyy-mm-dd hh24:mi:ss') <='", g_vdate,"')",
                                " AND (to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') >  '",g_vdate,"'"," OR to_char(bmba006,'yyyy-mm-dd hh24:mi:ss') IS NULL )"
   END IF
   #abmm210 取消参照研发中心的资料不显示出来,只有在不指定生效时间的查询状态再显示
   IF g_prog = 'abmm210' AND NOT cl_null(g_vdate) THEN
      LET l_sql = l_sql CLIPPED," AND bmba019 != '2' "
   END IF
   PREPARE abmm200_chk_hasF_p FROM l_sql
   EXECUTE abmm200_chk_hasF_p INTO li_cnt

   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
END FUNCTION]]>
  </point>
  <point name="free_style.variable" order="" ver="12" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[{<Module define>}

#單頭 type 宣告
 type type_g_bmaa_m        RECORD
   bmaa001          LIKE bmaa_t.bmaa001,
   bmaa001_imaal003 LIKE imaal_t.imaal003,
   bmaa002          LIKE bmaa_t.bmaa002,
   bmaa001_imaal004 LIKE imaal_t.imaal004,
   bmaa001_imaa009  LIKE imaa_t.imaa009,
   imaa009_desc     LIKE type_t.chr80,
   bmaa001_imaa004  LIKE imaa_t.imaa004,
   bmaa001_imaa010  LIKE imaa_t.imaa010,
   imaa010_desc     LIKE type_t.chr80,
   bmaa001_imaa011  LIKE imaa_t.imaa011,
   bmaa003          LIKE bmaa_t.bmaa003,
   bmaa004          LIKE bmaa_t.bmaa004,
   bmaa004_desc     LIKE type_t.chr80,
   vdate            LIKE type_t.dat,
   bmaastus         LIKE bmaa_t.bmaastus,
   bmaasite         LIKE bmaa_t.bmaasite,
   bmaa_ooff013     LIKE ooff_t.ooff013,
   bmaaownid        LIKE bmaa_t.bmaaownid,
   bmaaownid_desc   LIKE type_t.chr80,
   bmaaowndp        LIKE bmaa_t.bmaaowndp,
   bmaaowndp_desc   LIKE type_t.chr80,
   bmaacrtid        LIKE bmaa_t.bmaacrtid,
   bmaacrtid_desc   LIKE type_t.chr80,
   bmaacrtdp        LIKE bmaa_t.bmaacrtdp,
   bmaacrtdp_desc   LIKE type_t.chr80,
   bmaacrtdt        DATETIME YEAR TO SECOND,
   bmaamodid        LIKE bmaa_t.bmaamodid,
   bmaamodid_desc   LIKE type_t.chr80,
   bmaamoddt        DATETIME YEAR TO SECOND,
   bmaacnfid        LIKE bmaa_t.bmaacnfid,
   bmaacnfid_desc   LIKE type_t.chr80,
   bmaacnfdt        DATETIME YEAR TO SECOND
       END RECORD

 TYPE type_g_bmab_d       RECORD
   bmab003          LIKE bmab_t.bmab003, 
   bmab003_imaal003 LIKE imaal_t.imaal003, 
   bmab003_imaal004 LIKE imaal_t.imaal004, 
   bmab003_imaa009  LIKE imaa_t.imaa009, 
   bmab003_imaa010  LIKE imaa_t.imaa010, 
   bmab004          LIKE bmab_t.bmab004, 
   bmab005          LIKE bmab_t.bmab005, 
   bmab006          LIKE bmab_t.bmab006
       END RECORD

 TYPE type_g_bmac_d       RECORD
   bmac003          LIKE bmac_t.bmac003, 
   bmac003_imaal003 LIKE imaal_t.imaal003, 
   bmac003_imaal004 LIKE imaal_t.imaal004, 
   bmac005          LIKE bmac_t.bmac005, 
   bmac006          LIKE bmac_t.bmac006,
   bmac004          LIKE bmac_t.bmac004, 
   bmac007          LIKE bmac_t.bmac007, 
   bmac008          LIKE bmac_t.bmac008
       END RECORD

 TYPE type_g_bmad_d       RECORD
   bmad003          LIKE bmad_t.bmad003, 
   bmad003_imaal003 LIKE imaal_t.imaal003, 
   bmad003_imaal004 LIKE imaal_t.imaal004, 
   bmad003_imaa009  LIKE imaa_t.imaa009, 
   bmad003_imaa010  LIKE imaa_t.imaa010, 
   bmad004          LIKE bmad_t.bmad004, 
   bmad005          LIKE bmad_t.bmad005, 
   bmad006          LIKE bmad_t.bmad006,
   bmad007          LIKE bmad_t.bmad007
       END RECORD
       
#單身 type 宣告
 TYPE type_g_bmba_d1       RECORD
   bmba009          LIKE bmba_t.bmba009, 
   bmba003          LIKE bmba_t.bmba003, 
   bmba003_imaal003 LIKE imaal_t.imaal003, 
   bmba003_imaal004 LIKE imaal_t.imaal004, 
   bmba004          LIKE bmba_t.bmba004, 
   bmba004_oocql004 LIKE oocql_t.oocql004, 
   bmba007          LIKE bmba_t.bmba007, 
   bmba007_oocql004 LIKE oocql_t.oocql004, 
   bmba008          LIKE bmba_t.bmba008, 
   bmba011          LIKE bmba_t.bmba011, 
   bmba012          LIKE bmba_t.bmba012, 
   bmba010          LIKE bmba_t.bmba010, 
   bmba005          DATETIME YEAR TO SECOND,   #LIKE bmba_t.bmba005, 
   bmba006          DATETIME YEAR TO SECOND,   #LIKE bmba_t.bmba006, 
   bmba027          LIKE bmba_t.bmba027, 
   bmba028          LIKE bmba_t.bmba028, 
   bmba013          LIKE bmba_t.bmba013, 
   bmba014          LIKE bmba_t.bmba014, 
   bmba020          LIKE bmba_t.bmba020, 
   bmba017          LIKE bmba_t.bmba017, 
   bmba017_desc     LIKE type_t.chr500, 
   bmba025          LIKE bmba_t.bmba025, 
   bmba018          LIKE bmba_t.bmba018, 
   replace          LIKE type_t.chr1,
   bmba026          LIKE bmba_t.bmba026, 
   bmba_ooff013     LIKE ooff_t.ooff013,
   bmba019          LIKE bmba_t.bmba019
       END RECORD

 TYPE type_g_bmba_d2       RECORD
   bmba009          LIKE bmba_t.bmba009, 
   bmba003          LIKE bmba_t.bmba003, 
   bmba003_imaal003 LIKE imaal_t.imaal003, 
   bmba003_imaal004 LIKE imaal_t.imaal004, 
   bmba004          LIKE bmba_t.bmba004, 
   bmba004_oocql004 LIKE oocql_t.oocql004,
   bmba007          LIKE bmba_t.bmba007, 
   bmba007_oocql004 LIKE oocql_t.oocql004, 
   bmba008          LIKE bmba_t.bmba008,
   bmba011          LIKE bmba_t.bmba011,  
   bmba012          LIKE bmba_t.bmba012, 
   bmba010          LIKE bmba_t.bmba010,
   bmba005          DATETIME YEAR TO SECOND,    #LIKE bmba_t.bmba005, 
   bmba006          DATETIME YEAR TO SECOND,    #LIKE bmba_t.bmba006,
   bmba021          LIKE bmba_t.bmba021, 
   bmba022          LIKE bmba_t.bmba022, 
   bmba023          LIKE bmba_t.bmba023, 
   bmba024          LIKE bmba_t.bmba024, 
   bmba024_imaal003 LIKE imaal_t.imaal003,
   bmba024_imaal004 LIKE imaal_t.imaal004,
   bmba030          LIKE bmba_t.bmba030,
   bmba031          LIKE bmba_t.bmba031,
   bmba015          LIKE bmba_t.bmba015, 
   bmba015_desc     LIKE inayl_t.inayl003, 
   bmba016          LIKE bmba_t.bmba016, 
   bmba016_inab003  LIKE inab_t.inab003,
   bmba032          LIKE bmba_t.bmba032  
       END RECORD
       
 TYPE type_g_bmba_d3       RECORD
   bmba009          LIKE bmba_t.bmba009, 
   bmba003          LIKE bmba_t.bmba003, 
   bmba003_imaal003 LIKE imaal_t.imaal003, 
   bmba003_imaal004 LIKE imaal_t.imaal004, 
   bmba004          LIKE bmba_t.bmba004, 
   bmba004_oocql004 LIKE oocql_t.oocql004,
   bmba007          LIKE bmba_t.bmba007, 
   bmba007_oocql004 LIKE oocql_t.oocql004, 
   bmba008          LIKE bmba_t.bmba008,
   bmba011          LIKE bmba_t.bmba011,  
   bmba012          LIKE bmba_t.bmba012, 
   bmba010          LIKE bmba_t.bmba010,
   bmba005          DATETIME YEAR TO SECOND,  #LIKE bmba_t.bmba005, 
   bmba006          DATETIME YEAR TO SECOND,  #LIKE bmba_t.bmba006, 
   bmba029          LIKE bmba_t.bmba029
       END RECORD


 TYPE type_g_bmba       RECORD   #dt-datetime日期时间型的需要不用g_bmba RECORD LIKE bmba_t.*的形式
                 bmbaent    LIKE bmba_t.bmbaent,   #企業代碼
                 bmbasite   LIKE bmba_t.bmbasite,  #營運據點
                 bmba001    LIKE bmba_t.bmba001,   #主件料號
                 bmba002    LIKE bmba_t.bmba002,   #特性
                 bmba003    LIKE bmba_t.bmba003,   #元件料號
                 bmba004    LIKE bmba_t.bmba004,   #部位編號
                 bmba005    DATETIME YEAR TO SECOND,  #datetime生效日期時間
                 bmba006    DATETIME YEAR TO SECOND,  #datetime失效日期時間
                 bmba007    LIKE bmba_t.bmba007,   #作業編號
                 bmba008    LIKE bmba_t.bmba008,   #製程段號
                 bmba009    LIKE bmba_t.bmba009,   #項次
                 bmba010    LIKE bmba_t.bmba010,   #發料單位
                 bmba011    LIKE bmba_t.bmba011,   #組成用量
                 bmba012    LIKE bmba_t.bmba012,   #主件底數
                 bmba013    LIKE bmba_t.bmba013,   #必要
                 bmba014    LIKE bmba_t.bmba014,   #特徵管理
                 bmba015    LIKE bmba_t.bmba015,   #指定發料庫位
                 bmba016    LIKE bmba_t.bmba016,   #指定發料儲位
                 bmba017    LIKE bmba_t.bmba017,   #FAS選擇群組
                 bmba018    LIKE bmba_t.bmba018,   #插件位置
                 bmba019    LIKE bmba_t.bmba019,   #參照研發中心
                 bmba020    LIKE bmba_t.bmba020,   #可選件
                 bmba021    LIKE bmba_t.bmba021,   #工單展開選項
                 bmba022    LIKE bmba_t.bmba022,   #代買料
                 bmba023    LIKE bmba_t.bmba023,   #元件投料時距
                 bmba024    LIKE bmba_t.bmba024,   #主要替代料
                 bmba025    LIKE bmba_t.bmba025,   #附屬零件
                 bmba026    LIKE bmba_t.bmba026,   #ECN單號
                 bmba027    LIKE bmba_t.bmba027,   #用量是否使用公式
                 bmba028    LIKE bmba_t.bmba028,   #用量公式
                 bmba029    LIKE bmba_t.bmba029,   #損耗率型態
                 bmba030    LIKE bmba_t.bmba030,   #倒扣料
                 bmba031    LIKE bmba_t.bmba031,   #客供料
                 bmba032    LIKE bmba_t.bmba032    #指定库存管理特征
       END RECORD

 TYPE type_g_bmbb_d       RECORD
   bmbb009          LIKE bmbb_t.bmbb009,
   bmbb010          LIKE bmbb_t.bmbb010,
   bmbb011          LIKE bmbb_t.bmbb011,
   bmbb012          LIKE bmbb_t.bmbb012
       END RECORD

 TYPE type_g_bmbb       RECORD   #dt-datetime日期时间型的需要不用g_bmbb RECORD LIKE bmbb_t.*的形式
                 bmbbent    LIKE bmbb_t.bmbbent,   #企業代碼
                 bmbbsite   LIKE bmbb_t.bmbbsite,  #營運據點
                 bmbb001    LIKE bmbb_t.bmbb001,   #主件料號
                 bmbb002    LIKE bmbb_t.bmbb002,   #特性
                 bmbb003    LIKE bmbb_t.bmbb003,   #元件料號
                 bmbb004    LIKE bmbb_t.bmbb004,   #部位編號
                 bmbb005    DATETIME YEAR TO SECOND,   #datetime生效日期时间
                 bmbb007    LIKE bmbb_t.bmbb007,   #作業編號
                 bmbb008    LIKE bmbb_t.bmbb008,   #製程段號
                 bmbb009    LIKE bmbb_t.bmbb009,   #起始生產數量
                 bmbb010    LIKE bmbb_t.bmbb010,   #截止生產數量
                 bmbb011    LIKE bmbb_t.bmbb011,   #變動損耗率
                 bmbb012    LIKE bmbb_t.bmbb012    #固定損耗率
       END RECORD

#模組變數(Module Variables)
DEFINE g_bmaa_m          type_g_bmaa_m
DEFINE g_bmaa_m_t        type_g_bmaa_m

DEFINE g_bmaasite_t     LIKE bmaa_t.bmaasite
DEFINE g_bmaa001_t     LIKE bmaa_t.bmaa001
DEFINE g_bmaa002_t     LIKE bmaa_t.bmaa002

DEFINE g_bmab_d          DYNAMIC ARRAY OF type_g_bmab_d
DEFINE g_bmab_d_t        type_g_bmab_d
DEFINE g_bmac_d          DYNAMIC ARRAY OF type_g_bmac_d
DEFINE g_bmac_d_t        type_g_bmac_d
DEFINE g_bmad_d          DYNAMIC ARRAY OF type_g_bmad_d
DEFINE g_bmad_d_t        type_g_bmad_d
DEFINE g_bmba_d1         DYNAMIC ARRAY OF type_g_bmba_d1
DEFINE g_bmba_d1_t       type_g_bmba_d1
DEFINE g_bmba_d2         DYNAMIC ARRAY OF type_g_bmba_d2
DEFINE g_bmba_d2_t       type_g_bmba_d2
DEFINE g_bmba_d3         DYNAMIC ARRAY OF type_g_bmba_d3
DEFINE g_bmba_d3_t       type_g_bmba_d3
DEFINE g_bmbb_d          DYNAMIC ARRAY OF type_g_bmbb_d
DEFINE g_bmbb_d_t        type_g_bmbb_d

DEFINE g_bmab       RECORD LIKE bmab_t.*
DEFINE g_bmac       RECORD LIKE bmac_t.*
DEFINE g_bmad       RECORD LIKE bmad_t.*
#DEFINE g_bmba       RECORD LIKE bmba_t.*  #为日期时间型考虑
#DEFINE g_bmbb       RECORD LIKE bmbb_t.*  #为日期时间型考虑
DEFINE g_bmba       type_g_bmba
DEFINE g_bmbb       type_g_bmbb
DEFINE g_bmba005      LIKE ooff_t.ooff007   #日期值字符串处理       #固定格式写法 不会随环境变动而改变 防止异常问题发生 一劳永逸
DEFINE g_bmba005_t    LIKE ooff_t.ooff007   #日期值字符串处理--旧值 #固定格式写法 不会随环境变动而改变 防止异常问题发生 一劳永逸
DEFINE g_bmba005_2    LIKE ooff_t.ooff007   #日期值字符串处理
#DEFINE g_today_dt     DATETIME YEAR TO SECOND  #datetime
DEFINE g_today_dt     LIKE ooff_t.ooff007

DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       b_show          LIKE type_t.chr100,     #外顯欄位
       b_pid           LIKE type_t.chr100,     #父節點id
       b_id            LIKE type_t.chr100,     #本身節點id
       b_exp           LIKE type_t.chr100,     #是否展開
       b_hasC          LIKE type_t.num5,       #是否有子節點
       b_isExp         LIKE type_t.num5,       #是否已展開
       b_expcode       LIKE type_t.num5,       #展開值
       #以下为tree自定義欄位
       b_bmaa001 LIKE bmaa_t.bmaa001,
       b_bmaa002 LIKE bmaa_t.bmaa002,
       b_bmaa001_imaal003  LIKE imaal_t.imaal003,
       b_bmaa001_imaal004  LIKE imaal_t.imaal004,
       b_bmaasite LIKE bmaa_t.bmaasite
       END RECORD
#無單頭append欄位定義
#無單身append欄位定義


DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num5
DEFINE g_rec_b_bmab          LIKE type_t.num5
DEFINE g_rec_b_bmac          LIKE type_t.num5
DEFINE g_rec_b_bmad          LIKE type_t.num5
DEFINE g_rec_b_bmba1         LIKE type_t.num5
DEFINE g_rec_b_bmba2         LIKE type_t.num5
DEFINE g_rec_b_bmba3         LIKE type_t.num5
DEFINE g_rec_b_bmbb          LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE l_ac_bmbb             LIKE type_t.num5
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog

DEFINE g_pagestart           LIKE type_t.num5
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁

DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數 
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_idx         LIKE type_t.num10             #右侧显示资料对应笔数
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數

DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位

DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_state               STRING                        #判断前一个动作

#查询类
DEFINE g_wc                  STRING                        #单头的
DEFINE g_wc2                 STRING                        #所有单身的
#DEFINE g_wc_vdate            STRING                        #单头vdate日期栏位所使用的g_wc
DEFINE g_wc2_bmaa             STRING                        #单头主档table所使用的g_wc
DEFINE g_wc2_bmab             STRING                        #單头第1個table所使用的g_wc
DEFINE g_wc2_bmac             STRING                        #單头第2個table所使用的g_wc
DEFINE g_wc2_bmad             STRING                        #單头第3個table所使用的g_wc
DEFINE g_wc2_bmba1            STRING                        #第1個單身table所使用的g_wc
DEFINE g_wc2_bmba2            STRING                        #第2個單身table所使用的g_wc
DEFINE g_wc2_bmba3            STRING                        #第3個單身table所使用的g_wc
DEFINE g_wc2_bmbb             STRING                        #單头第3個table所使用的g_wc

DEFINE g_wc2_extend          STRING

DEFINE l_success      LIKE type_t.num5
DEFINE l_success_tot  LIKE type_t.num5

#DEFINE g_vdate            LIKE type_t.dat
DEFINE g_vdate             LIKE type_t.chr20
#DEFINE g_vdate            DATETIME YEAR TO SECOND  #datetime
DEFINE g_vdate_t           LIKE type_t.chr20  #旧值，判断是否自动预设或手工下条件，便于判断单身异动完后是否需要刷新
{</Module define>}]]>
  </point>
  <point name="global.import" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[IMPORT util]]>
  </point>
  <point name="global.memo" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.variable" order="" ver="12" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_root_search         BOOLEAN
DEFINE g_searchtype          LIKE type_t.chr200   #上推、下展、全部

DEFINE la_param  RECORD
         prog   STRING,
         param  DYNAMIC ARRAY OF STRING
                END RECORD
DEFINE ls_js  STRING
DEFINE g_xh   LIKE type_t.chr1  #循环报错提示管控
#add 150420
DEFINE g_imaa_r DYNAMIC ARRAY OF RECORD 
                imaa001   LIKE imaa_t.imaa001
                END RECORD
#add 150420 end
#add 150527
DEFINE g_bmba_key DYNAMIC ARRAY OF RECORD 
                  bmaasite  LIKE bmaa_t.bmaasite,
                  bmaa001   LIKE bmaa_t.bmaa001,
                  bmaa002   LIKE bmaa_t.bmaa002,
                  bmba003   LIKE bmba_t.bmba003,
                  bmba004   LIKE bmba_t.bmba004,
                  bmba005   LIKE bmba_t.bmba005,
                  bmba007   LIKE bmba_t.bmba007,
                  bmba008   LIKE bmba_t.bmba008
                  END RECORD
#add 150527 end]]>
  </point>
  <point name="main.exit" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #DROP TABLE browser_temp;  #add 150609]]>
  </point>
  <point name="main.init" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #abmm200只处理ALL的资料
   IF g_prog = 'abmm200' THEN
      LET g_site = 'ALL'
   END IF
   LET g_today_dt = cl_get_current()
   
   #CALL abmm200_crt_table()  #add 150609]]>
  </point>
  <section id="abmm200.description" ver="43" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:12,PR版次:12) Build-000759
#+ 
#+ Filename...: abmm200
#+ Description: 集團研發產品結構維護作業
#+ Creator....: 00768(2013-09-16 16:54:24)
#+ Modifier...: 00768(2015-01-22 09:58:59) -SD/PR-
]]>
  </section>
  <section id="abmm200.global" ver="4" status="" src="s" readonly="">
    <![CDATA[#應用 i00 樣板自動產生(Version:3)
{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
]]>
  </section>
  <section id="abmm200.main" ver="1" status="" src="m" readonly="">
    <![CDATA[#+ 作業開始
MAIN
   #add-point:main段define
{<point name="main.define"/>}
   #end add-point    
 
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
{<point name="main.init"/>}
   #end add-point
 
   #add-point:SQL_define
{<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE abmm200_cl CURSOR FROM g_forupd_sql 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
{<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmm200 WITH FORM cl_ap_formpath("abm",g_code)
   
      #程式初始化
      CALL abmm200_init()
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #進入選單 Menu (='N')
      CALL abmm200_ui_dialog()
   
      #畫面關閉
      CLOSE WINDOW w_abmm200
   END IF
 
   #add-point:作業離開前
{<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
 
END MAIN
]]>
  </section>
  <section id="abmm200.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
</add_points>
