<add_points prog="abmt500" std_prog="abmt500" erpver="1.0" module="ABM" ver="1" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status="" />
    <free_style value="N" status="" />
  </other>
  <point name="function.abmt500_bmka001_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="1" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_bmka001_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmka_m.bmka001
   CALL ap_ref_array2(g_ref_fields,"SELECT bmjal003 FROM bmjal_t WHERE bmjalent='"||g_enterprise||"' AND bmjal001=? AND bmjal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmka_m.bmka001_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmka_m.bmka001_desc
END FUNCTION]]>
</point>
  <point name="function.abmt500_bmka002_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="2" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_bmka002_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmka_m.bmka002
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_bmka_m.bmka002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmka_m.bmka002_desc
END FUNCTION]]>
</point>
  <point name="function.abmt500_bmka003_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="3" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_bmka003_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmka_m.bmka003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmka_m.bmka003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmka_m.bmka003_desc
END FUNCTION]]>
</point>
  <point name="function.abmt500_bmka005_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="4" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_bmka005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmka_m.bmka005
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmka_m.imaal003 = g_rtn_fields[1]
   LET g_bmka_m.imaal004 = g_rtn_fields[2]  
   DISPLAY BY NAME g_bmka_m.imaal003,g_bmka_m.imaal004,g_bmka_m.bmka011
END FUNCTION]]>
</point>
  <point name="function.abmt500_gen" cite_std="N" status="" ver="1" src="s" new="Y" order="5" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_gen()
DEFINE l_sql      STRING
DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   DELETE FROM bmkb_t WHERE bmkbent = g_enterprise AND bmkbdocno = g_bmka_m.bmkadocno
   DELETE FROM bmkc_t WHERE bmkcent = g_enterprise AND bmkcdocno = g_bmka_m.bmkadocno
   DELETE FROM bmkd_t WHERE bmkdent = g_enterprise AND bmkddocno = g_bmka_m.bmkadocno 
   
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"','",g_site,"','",g_bmka_m.bmkadocno,"',bmjbseq,bmjbseq1,bmjb002,bmjb003,'N','' ",
               "  FROM bmjb_t ",
               " WHERE bmjbent = '",g_enterprise,"'",
               "   AND bmjb001 = '",g_bmka_m.bmka001,"'"
   LET l_sql = "INSERT INTO bmkb_t ",l_sql
   PREPARE ins_bmkb FROM l_sql
   EXECUTE ins_bmkb 
   IF SQLCA.sqlcode THEN 
      LET r_success = FALSE
   END IF
   
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"','",g_site,"','",g_bmka_m.bmkadocno,"',bmjcseq,bmjc002,'',0,'' ",
               "  FROM bmjc_t ",
               " WHERE bmjcent = '",g_enterprise,"'",
               "   AND bmjc001 = '",g_bmka_m.bmka001,"'"
   LET l_sql = "INSERT INTO bmkc_t ",l_sql
   PREPARE ins_bmkc FROM l_sql
   EXECUTE ins_bmkc  
   IF SQLCA.sqlcode THEN 
      LET r_success = FALSE
   END IF   
   
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"','",g_site,"','",g_bmka_m.bmkadocno,"',bmjdseq,bmjdseq1,bmjd002,bmjd003,'N','' ",
               "  FROM bmjd_t ",
               " WHERE bmjdent = '",g_enterprise,"'",
               "   AND bmjd001 = '",g_bmka_m.bmka001,"'"
   LET l_sql = "INSERT INTO bmkd_t ",l_sql
   PREPARE ins_bmkd FROM l_sql
   EXECUTE ins_bmkd
   IF SQLCA.sqlcode THEN 
      LET r_success = FALSE
   END IF
   RETURN r_success  
END FUNCTION]]>
</point>
  <point name="function.abmt500_oocql004_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="6" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_oocql004_desc(p_oocql001,p_oocql002)
DEFINE p_oocql001   LIKE oocql_t.oocql001,
       p_oocql002   LIKE oocql_t.oocql002,
       r_oocql004   LIKE oocql_t.oocql004
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocql001
   LET g_ref_fields[2] = p_oocql002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_oocql004 = g_rtn_fields[1]
   RETURN r_oocql004
END FUNCTION]]>
</point>
  <point name="function.abmt500_bmka009_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="7" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_bmka009_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmka_m.bmka009
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal003 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmka_m.bmka009_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_bmka_m.bmka009_desc
END FUNCTION]]>
</point>
  <point name="function.abmt500_imaa005_exists" cite_std="N" status="" ver="1" src="s" new="Y" order="8" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_imaa005_exists()
DEFINE l_imaa005  LIKE imaa_t.imaa005
   IF NOT cl_null(g_bmka_m.bmka005) THEN
      SELECT imaa005 INTO l_imaa005 FROM imaa_t
       WHERE imaaent = g_enterprise AND imaa001 = g_bmka_m.bmka005
      IF cl_null(l_imaa005) THEN
         RETURN FALSE
      END IF
   ELSE
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
</point>
  <point name="function.abmt500_bmkadocno_desc" cite_std="N" status="" ver="1" src="s" new="Y" order="9" mark_hard="N">
<![CDATA[
PRIVATE FUNCTION abmt500_bmkadocno_desc(p_flag,p_bmkadocno)
DEFINE p_flag      LIKE type_t.chr1 
DEFINE p_bmkadocno LIKE bmka_t.bmkadocno
DEFINE l_ooba002   LIKE ooba_t.ooba002
DEFINE l_success   LIKE type_t.num5
DEFINE r_bmkadocno_desc LIKE oobxl_t.oobxl003

   IF p_flag = '2' THEN  
      Call s_aooi200_get_slip(p_bmkadocno) returning l_success,l_ooba002
   ELSE
      LET l_ooba002 = p_bmkadocno   
   END IF
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_ooba002
   CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001= ? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_bmkadocno_desc = '', g_rtn_fields[1] , ''
   RETURN r_bmkadocno_desc
END FUNCTION]]>
</point>
  <point name="construct.c.bmka001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmja001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka001  #顯示到畫面上
            NEXT FIELD bmka001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmka002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka002  #顯示到畫面上
            NEXT FIELD bmka002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmka003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka003  #顯示到畫面上
            NEXT FIELD bmka003                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmka005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka005  #顯示到畫面上
            NEXT FIELD bmka005                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmka007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka007  #顯示到畫面上
            NEXT FIELD bmka007                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmka009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka009  #顯示到畫面上
            NEXT FIELD bmka009                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmka011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "210"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka011  #顯示到畫面上
            NEXT FIELD bmka011                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmka012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "210"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmka012  #顯示到畫面上
            NEXT FIELD bmka012                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmkacnfid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkacnfid  #顯示到畫面上
            NEXT FIELD bmkacnfid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmkacrtdp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkacrtdp  #顯示到畫面上
            NEXT FIELD bmkacrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmkacrtid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkacrtid  #顯示到畫面上
            NEXT FIELD bmkacrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmkadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmkadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkadocno  #顯示到畫面上
            NEXT FIELD bmkadocno                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmkamodid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkamodid  #顯示到畫面上
            NEXT FIELD bmkamodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmkaowndp" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkaowndp  #顯示到畫面上
            NEXT FIELD bmkaowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.bmkaownid" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkaownid  #顯示到畫面上
            NEXT FIELD bmkaownid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.bmkb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1117"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkb001  #顯示到畫面上
            NEXT FIELD bmkb001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page1.bmkb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1118"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkb002  #顯示到畫面上
            NEXT FIELD bmkb002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.bmkc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1121"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkc002  #顯示到畫面上
            NEXT FIELD bmkc002                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.bmkd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1119" 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkd001  #顯示到畫面上
            NEXT FIELD bmkd001                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page3.bmkd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1120" 
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmkd002  #顯示到畫面上
            NEXT FIELD bmkd002                     #返回原欄位
    

]]>
</point>
  <point name="delete.head.a_delete" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      IF NOT s_aooi200_del_docno(g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[DEFINE g_ooef                RECORD LIKE ooef_t.*]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   SELECT * INTO g_ooef.* FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site]]>
</point>
  <point name="input.a.bmka001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF NOT cl_null(g_bmka_m.bmka001) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmka_m.bmka001
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_bmja001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmka_m.bmka001 = g_bmka_m_t.bmka001
                  NEXT FIELD CURRENT
               END IF
               IF p_cmd = 'u' AND (g_bmka_m_o.bmka001 <> g_bmka_m.bmka001 OR cl_null(g_bmka_m_o.bmka001)) THEN 
                  CALL abmt500_gen() RETURNING l_success
               END IF
            END IF ]]>
</point>
  <point name="input.a.bmka002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka002_desc()            
            IF NOT cl_null(g_bmka_m.bmka002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmka_m.bmka002
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  SELECT ooag003 INTO g_bmka_m.bmka003
                    FROM ooag_t
                   WHERE ooagent = g_enterprise
                     AND ooag001 = g_bmka_m.bmka002
                  CALL abmt500_bmka003_desc()   
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmka_m.bmka002 = g_bmka_m_t.bmka002
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
</point>
  <point name="input.a.bmka003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka003_desc()
            IF NOT cl_null(g_bmka_m.bmka003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmka_m.bmka003
               LET g_chkparam.arg2 = g_bmka_m.bmkadocdt
               
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmka_m.bmka003 = g_bmka_m_t.bmka003
                  NEXT FIELD CURRENT
               END IF
            

            END IF 


]]>
</point>
  <point name="input.a.bmka005" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka005_desc()
            IF NOT cl_null(g_bmka_m.bmka005) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmka_m.bmka005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaa001") THEN
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_bmka_m.bmka005
                  CALL ap_ref_array2(g_ref_fields,"SELECT imaa010 FROM imaa_t WHERE imaaent='"||g_enterprise||"' AND imaa001=? ","") RETURNING g_rtn_fields
                  LET g_bmka_m.bmka011 = g_rtn_fields[1]   
                  DISPLAY BY NAME g_bmka_m.bmka011
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmka_m.bmka005 = g_bmka_m_t.bmka005
                  NEXT FIELD CURRENT
               END IF
            END IF 
            IF g_bmka_m.bmka005 <> g_bmka_m_o.bmka005 OR cl_null(g_bmka_m_o.bmka005) THEN 
               LET g_bmka_m.bmka006 = ' '
               DISPLAY BY NAME g_bmka_m.bmka006
            END IF
            LET g_bmka_m_o.bmka005 = g_bmka_m.bmka006 
            CALL abmt500_set_entry(p_cmd)
            CALL abmt500_set_no_entry(p_cmd)
]]>
</point>
  <point name="input.a.bmka006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.a.bmka007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('221',g_bmka_m.bmka007) RETURNING g_bmka_m.bmka007_desc
            DISPLAY BY NAME g_bmka_m.bmka007_desc
            IF NOT cl_null(g_bmka_m.bmka007) THEN 
               IF NOT s_azzi650_chk_exist('221',g_bmka_m.bmka007) THEN
                  LET g_bmka_m.bmka007 = g_bmka_m_t.bmka007
                  NEXT FIELD CURRENT
               END IF        
            END IF             ]]>
</point>
  <point name="input.a.bmka009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka009_desc()
            IF NOT cl_null(g_bmka_m.bmka009) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmka_m.bmka009
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaa001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmka_m.bmka009 = g_bmka_m_t.bmka009
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

            
 ]]>
</point>
  <point name="input.a.bmka011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('210',g_bmka_m.bmka011) RETURNING g_bmka_m.bmka011_desc
            DISPLAY BY NAME g_bmka_m.bmka011_desc
            IF NOT cl_null(g_bmka_m.bmka011) THEN 
               IF NOT s_azzi650_chk_exist('210',g_bmka_m.bmka011) THEN
                  LET g_bmka_m.bmka011 = g_bmka_m_t.bmka011
                  NEXT FIELD CURRENT
               END IF        
            END IF ]]>
</point>
  <point name="input.a.bmka012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('210',g_bmka_m.bmka012) RETURNING g_bmka_m.bmka012_desc
            DISPLAY BY NAME g_bmka_m.bmka012_desc
            IF NOT cl_null(g_bmka_m.bmka012) THEN 
               IF NOT s_azzi650_chk_exist('210',g_bmka_m.bmka012) THEN
                  LET g_bmka_m.bmka012 = g_bmka_m_t.bmka012
                  NEXT FIELD CURRENT
               END IF        
            END IF]]>
</point>
  <point name="input.a.bmkadocdt" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_bmka_m.bmkadocdt) THEN 
               NEXT FIELD CURRENT
            END IF]]>
</point>
  <point name="input.a.bmkadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmkadocno_desc('1',g_bmka_m.bmkadocno) RETURNING g_bmka_m.oobxl003
            DISPLAY BY NAME g_bmka_m.oobxl003            
            IF NOT cl_null(g_bmka_m.bmkadocno) THEN 
               CALL s_aooi200_chk_slip(g_site,g_ooef.ooef004,g_bmka_m.bmkadocno,g_prog) RETURNING g_success
               IF NOT g_success THEN
                  LET g_bmka_m.bmkadocno = g_bmka_m_t.bmkadocno              
                  NEXT FIELD CURRENT
               END IF
            ELSE
               NEXT FIELD CURRENT            
            END IF


]]>
</point>
  <point name="input.a.page1.bmkb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1117',g_bmkb_d[l_ac].bmkb001) RETURNING g_bmkb_d[l_ac].bmkb001_desc 
            DISPLAY BY NAME g_bmkb_d[l_ac].bmkb001_desc
            IF NOT cl_null(g_bmkb_d[l_ac].bmkb001) THEN 
               IF NOT s_azzi650_chk_exist('1117',g_bmkb_d[l_ac].bmkb001) THEN
                  LET g_bmkb_d[l_ac].bmkb001 = g_bmkb_d_t.bmkb001
                  NEXT FIELD CURRENT
               END IF        
            END IF
]]>
</point>
  <point name="input.a.page1.bmkb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1118',g_bmkb_d[l_ac].bmkb002) RETURNING g_bmkb_d[l_ac].bmkb002_desc 
            DISPLAY BY NAME g_bmkb_d[l_ac].bmkb002_desc
            IF NOT cl_null(g_bmkb_d[l_ac].bmkb002) THEN 
               IF NOT s_azzi650_chk_exist('1118',g_bmkb_d[l_ac].bmkb002) THEN
                  LET g_bmkb_d[l_ac].bmkb002 = g_bmkb_d_t.bmkb002
                  NEXT FIELD CURRENT
               END IF        
            END IF
]]>
</point>
  <point name="input.a.page1.bmkbseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_bmka_m.bmkadocno IS NOT NULL AND g_bmkb_d[g_detail_idx].bmkbseq IS NOT NULL AND g_bmkb_d[g_detail_idx].bmkbseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmka_m.bmkadocno != g_bmkadocno_t OR g_bmkb_d[g_detail_idx].bmkbseq != g_bmkb_d_t.bmkbseq OR g_bmkb_d[g_detail_idx].bmkbseq1 != g_bmkb_d_t.bmkbseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmkb_t WHERE "||"bmkbent = '" ||g_enterprise|| "' AND "||"bmkbdocno = '"||g_bmka_m.bmkadocno ||"' AND "|| "bmkbseq = '"||g_bmkb_d[g_detail_idx].bmkbseq ||"' AND "|| "bmkbseq1 = '"||g_bmkb_d[g_detail_idx].bmkbseq1 ||"'",'std-00004',0) THEN 
                     LET g_bmkb_d[l_ac].bmkbseq = g_bmkb_d_t.bmkbseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF NOT cl_null(g_bmkb_d[l_ac].bmkbseq) THEN 
            
            END IF ]]>
</point>
  <point name="input.a.page1.bmkbseq1" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_bmka_m.bmkadocno IS NOT NULL AND g_bmkb_d[g_detail_idx].bmkbseq IS NOT NULL AND g_bmkb_d[g_detail_idx].bmkbseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmka_m.bmkadocno != g_bmkadocno_t OR g_bmkb_d[g_detail_idx].bmkbseq != g_bmkb_d_t.bmkbseq OR g_bmkb_d[g_detail_idx].bmkbseq1 != g_bmkb_d_t.bmkbseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmkb_t WHERE "||"bmkbent = '" ||g_enterprise|| "' AND "||"bmkbdocno = '"||g_bmka_m.bmkadocno ||"' AND "|| "bmkbseq = '"||g_bmkb_d[g_detail_idx].bmkbseq ||"' AND "|| "bmkbseq1 = '"||g_bmkb_d[g_detail_idx].bmkbseq1 ||"'",'std-00004',0) THEN 
                     LET g_bmkb_d[l_ac].bmkbseq1 = g_bmkb_d_t.bmkbseq1
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_bmkb_d[l_ac].bmkbseq1) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page2.bmkc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1121',g_bmkb2_d[l_ac].bmkc002) RETURNING g_bmkb2_d[l_ac].bmkc002_desc 
            DISPLAY BY NAME g_bmkb2_d[l_ac].bmkc002_desc
            IF NOT cl_null(g_bmkb_d[l_ac].bmkb002) THEN 
               IF NOT s_azzi650_chk_exist('1121',g_bmkb2_d[l_ac].bmkc002) THEN
                  LET g_bmkb2_d[l_ac].bmkc002 = g_bmkb2_d_t.bmkc002
                  NEXT FIELD CURRENT
               END IF        
            END IF
]]>
</point>
  <point name="input.a.page2.bmkcseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_bmka_m.bmkadocno IS NOT NULL AND g_bmkb2_d[g_detail_idx].bmkcseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmka_m.bmkadocno != g_bmkadocno_t OR g_bmkb2_d[g_detail_idx].bmkcseq != g_bmkb2_d_t.bmkcseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmkc_t WHERE "||"bmkcent = '" ||g_enterprise|| "' AND "||"bmkcdocno = '"||g_bmka_m.bmkadocno ||"' AND "|| "bmkcseq = '"||g_bmkb2_d[g_detail_idx].bmkcseq ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_bmkb2_d[l_ac].bmkcseq) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page3.bmkd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1119',g_bmkb3_d[l_ac].bmkd001) RETURNING g_bmkb3_d[l_ac].bmkd001_desc 
            DISPLAY BY NAME g_bmkb3_d[l_ac].bmkd001_desc
            IF NOT cl_null(g_bmkb3_d[l_ac].bmkd001) THEN 
               IF NOT s_azzi650_chk_exist('1119',g_bmkb3_d[l_ac].bmkd001) THEN
                  LET g_bmkb3_d[l_ac].bmkd001 = g_bmkb3_d_t.bmkd001
                  NEXT FIELD CURRENT
               END IF        
            END IF]]>
</point>
  <point name="input.a.page3.bmkd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1120',g_bmkb3_d[l_ac].bmkd002) RETURNING g_bmkb3_d[l_ac].bmkd002_desc 
            DISPLAY BY NAME g_bmkb3_d[l_ac].bmkd002_desc
            IF NOT cl_null(g_bmkb3_d[l_ac].bmkd002) THEN 
               IF NOT s_azzi650_chk_exist('1120',g_bmkb3_d[l_ac].bmkd002) THEN
                  LET g_bmkb3_d[l_ac].bmkd002 = g_bmkb3_d_t.bmkd002
                  NEXT FIELD CURRENT
               END IF        
            END IF
]]>
</point>
  <point name="input.a.page3.bmkdseq" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_bmka_m.bmkadocno IS NOT NULL AND g_bmkb3_d[g_detail_idx].bmkdseq IS NOT NULL AND g_bmkb3_d[g_detail_idx].bmkdseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmka_m.bmkadocno != g_bmkadocno_t OR g_bmkb3_d[g_detail_idx].bmkdseq != g_bmkb3_d_t.bmkdseq OR g_bmkb3_d[g_detail_idx].bmkdseq1 != g_bmkb3_d_t.bmkdseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmkd_t WHERE "||"bmkdent = '" ||g_enterprise|| "' AND "||"bmkddocno = '"||g_bmka_m.bmkadocno ||"' AND "|| "bmkdseq = '"||g_bmkb3_d[g_detail_idx].bmkdseq ||"' AND "|| "bmkdseq1 = '"||g_bmkb3_d[g_detail_idx].bmkdseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_bmkb3_d[l_ac].bmkdseq) THEN 
            END IF 

]]>
</point>
  <point name="input.a.page3.bmkdseq1" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_bmka_m.bmkadocno IS NOT NULL AND g_bmkb3_d[g_detail_idx].bmkdseq IS NOT NULL AND g_bmkb3_d[g_detail_idx].bmkdseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmka_m.bmkadocno != g_bmkadocno_t OR g_bmkb3_d[g_detail_idx].bmkdseq != g_bmkb3_d_t.bmkdseq OR g_bmkb3_d[g_detail_idx].bmkdseq1 != g_bmkb3_d_t.bmkdseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmkd_t WHERE "||"bmkdent = '" ||g_enterprise|| "' AND "||"bmkddocno = '"||g_bmka_m.bmkadocno ||"' AND "|| "bmkdseq = '"||g_bmkb3_d[g_detail_idx].bmkdseq ||"' AND "|| "bmkdseq1 = '"||g_bmkb3_d[g_detail_idx].bmkdseq1 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


            IF NOT cl_null(g_bmkb3_d[l_ac].bmkdseq1) THEN 
            END IF 

]]>
</point>
  <point name="input.b.bmka002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka002_desc()]]>
</point>
  <point name="input.b.bmka003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka003_desc()]]>
</point>
  <point name="input.b.bmka005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka005_desc()]]>
</point>
  <point name="input.b.bmka006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF abmt500_imaa005_exists() THEN
               IF cl_null(g_bmka_m.bmka006) THEN
                  CALL s_feature_single(g_bmka_m.bmka005,g_bmka_m.bmka006,g_bmka_m.bmkasite,'') RETURNING l_success,g_bmka_m.bmka006
                  DISPLAY BY NAME g_bmka_m.bmka006
                  CALL s_transaction_begin()
               END IF             
            END IF]]>
</point>
  <point name="input.b.bmka007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('221',g_bmka_m.bmka007) RETURNING g_bmka_m.bmka007_desc
            DISPLAY BY NAME g_bmka_m.bmka007_desc]]>
</point>
  <point name="input.b.bmka009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmka009_desc()]]>
</point>
  <point name="input.b.bmka011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('210',g_bmka_m.bmka011) RETURNING g_bmka_m.bmka011_desc
            DISPLAY BY NAME g_bmka_m.bmka011_desc]]>
</point>
  <point name="input.b.bmka012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('210',g_bmka_m.bmka012) RETURNING g_bmka_m.bmka012_desc
            DISPLAY BY NAME g_bmka_m.bmka012_desc]]>
</point>
  <point name="input.b.bmkadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_bmkadocno_desc('1',g_bmka_m.bmkadocno) RETURNING g_bmka_m.oobxl003
            DISPLAY BY NAME g_bmka_m.oobxl003]]>
</point>
  <point name="input.b.page1.bmkb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1117',g_bmkb_d[l_ac].bmkb001) RETURNING g_bmkb_d[l_ac].bmkb001_desc 
            DISPLAY BY NAME g_bmkb_d[l_ac].bmkb001_desc]]>
</point>
  <point name="input.b.page1.bmkb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1118',g_bmkb_d[l_ac].bmkb002) RETURNING g_bmkb_d[l_ac].bmkb002_desc 
            DISPLAY BY NAME g_bmkb_d[l_ac].bmkb002_desc]]>
</point>
  <point name="input.b.page2.bmkc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1121',g_bmkb2_d[l_ac].bmkc002) RETURNING g_bmkb2_d[l_ac].bmkc002_desc 
            DISPLAY BY NAME g_bmkb2_d[l_ac].bmkc002_desc]]>
</point>
  <point name="input.b.page3.bmkd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1119',g_bmkb3_d[l_ac].bmkd001) RETURNING g_bmkb3_d[l_ac].bmkd001_desc 
            DISPLAY BY NAME g_bmkb3_d[l_ac].bmkd001_desc]]>
</point>
  <point name="input.b.page3.bmkd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_oocql004_desc('1120',g_bmkb3_d[l_ac].bmkd002) RETURNING g_bmkb3_d[l_ac].bmkd002_desc 
            DISPLAY BY NAME g_bmkb3_d[l_ac].bmkd002_desc]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_bmkb_d[l_ac].bmkbseq) THEN 
               SELECT MAX(bmkbseq) INTO g_bmkb_d[l_ac].bmkbseq
                 FROM bmkb_t
                WHERE bmkbent = g_enterprise
                  AND bmkbdocno = g_bmka_m.bmkadocno
               IF NOT cl_null(g_bmkb_d[l_ac].bmkbseq) THEN 
                  LET g_bmkb_d[l_ac].bmkbseq = g_bmkb_d[l_ac].bmkbseq + 1
               ELSE
                  LET g_bmkb_d[l_ac].bmkbseq = 1               
               END IF
            END IF
            LET g_bmkb_d[l_ac].bmkbsite = g_bmka_m.bmkasite
            LET g_bmkb_d_t.* = g_bmkb_d[l_ac].*     #新輸入資料
            LET g_bmkb_d_o.* = g_bmkb_d[l_ac].*     #新輸入資料  ]]>
</point>
  <point name="input.body2.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_bmkb2_d[l_ac].bmkcseq) THEN 
               SELECT MAX(bmkcseq) INTO g_bmkb2_d[l_ac].bmkcseq
                 FROM bmkc_t
                WHERE bmkcent = g_enterprise
                  AND bmkcdocno = g_bmka_m.bmkadocno
               IF NOT cl_null(g_bmkb2_d[l_ac].bmkcseq) THEN 
                  LET g_bmkb2_d[l_ac].bmkcseq = g_bmkb2_d[l_ac].bmkcseq + 1
               ELSE
                  LET g_bmkb2_d[l_ac].bmkcseq = 1               
               END IF
            END IF
            LET g_bmkb2_d[l_ac].bmkcsite = g_bmka_m.bmkasite
            LET g_bmkb2_d_t.* = g_bmkb2_d[l_ac].*     #新輸入資料
            LET g_bmkb2_d_o.* = g_bmkb2_d[l_ac].*     #新輸入資料 ]]>
</point>
  <point name="input.body3.before_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            IF cl_null(g_bmkb3_d[l_ac].bmkdseq) THEN 
               SELECT MAX(bmkdseq) INTO g_bmkb3_d[l_ac].bmkdseq
                 FROM bmkd_t
                WHERE bmkdent = g_enterprise
                  AND bmkddocno = g_bmka_m.bmkadocno
               IF NOT cl_null(g_bmkb3_d[l_ac].bmkdseq) THEN 
                  LET g_bmkb3_d[l_ac].bmkdseq = g_bmkb3_d[l_ac].bmkdseq + 1
               ELSE
                  LET g_bmkb3_d[l_ac].bmkdseq = 1               
               END IF
            END IF
            LET g_bmkb3_d[l_ac].bmkdsite = g_bmka_m.bmkasite
            LET g_bmkb3_d_t.* = g_bmkb3_d[l_ac].*     #新輸入資料
            LET g_bmkb3_d_o.* = g_bmkb3_d[l_ac].*     #新輸入資料  ]]>
</point>
  <point name="input.c.bmka001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_bmja001()                                #呼叫開窗

            LET g_bmka_m.bmka001 = g_qryparam.return1              

            DISPLAY g_bmka_m.bmka001 TO bmka001              #

            NEXT FIELD bmka001                          #返回原欄位

]]>
</point>
  <point name="input.c.bmka002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_bmka_m.bmka002 = g_qryparam.return1              

            DISPLAY g_bmka_m.bmka002 TO bmka002              #

            NEXT FIELD bmka002                          #返回原欄位

]]>
</point>
  <point name="input.c.bmka003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka003             #給予default值
            LET g_qryparam.default2 = "" #g_bmka_m.ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooeg001()                                #呼叫開窗

            LET g_bmka_m.bmka003 = g_qryparam.return1              
            #LET g_bmka_m.ooeg001 = g_qryparam.return2 
            DISPLAY g_bmka_m.bmka003 TO bmka003              #
            #DISPLAY g_bmka_m.ooeg001 TO ooeg001 #部門編號
            NEXT FIELD bmka003                          #返回原欄位

]]>
</point>
  <point name="input.c.bmka005" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka005             #給予default值
            LET g_qryparam.default2 = "" #g_bmka_m.imaal003 #品名
            LET g_qryparam.default3 = "" #g_bmka_m.imaal004 #規格
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaa001()                                #呼叫開窗

            LET g_bmka_m.bmka005 = g_qryparam.return1              
            #LET g_bmka_m.imaal003 = g_qryparam.return2 
            #LET g_bmka_m.imaal004 = g_qryparam.return3 
            DISPLAY g_bmka_m.bmka005 TO bmka005              #
            #DISPLAY g_bmka_m.imaal003 TO imaal003 #品名
            #DISPLAY g_bmka_m.imaal004 TO imaal004 #規格
            NEXT FIELD bmka005                          #返回原欄位

]]>
</point>
  <point name="input.c.bmka006" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL s_feature_single(g_bmka_m.bmka005,g_bmka_m.bmka006,g_bmka_m.bmkasite,'') RETURNING l_success,g_bmka_m.bmka006
            DISPLAY BY NAME g_bmka_m.bmka006]]>
</point>
  <point name="input.c.bmka007" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka007             #給予default值
            LET g_qryparam.default2 = "" #g_bmka_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "221" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmka_m.bmka007 = g_qryparam.return1              
            #LET g_bmka_m.oocq002 = g_qryparam.return2 
            DISPLAY g_bmka_m.bmka007 TO bmka007              #
            #DISPLAY g_bmka_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmka007                          #返回原欄位

]]>
</point>
  <point name="input.c.bmka009" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_3()                                #呼叫開窗

            LET g_bmka_m.bmka009 = g_qryparam.return1              

            DISPLAY g_bmka_m.bmka009 TO bmka009              #

            NEXT FIELD bmka009                          #返回原欄位

]]>
</point>
  <point name="input.c.bmka011" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka011             #給予default值
            LET g_qryparam.default2 = "" #g_bmka_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "210" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmka_m.bmka011 = g_qryparam.return1              
            #LET g_bmka_m.oocq002 = g_qryparam.return2 
            DISPLAY g_bmka_m.bmka011 TO bmka011              #
            #DISPLAY g_bmka_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmka011                          #返回原欄位

]]>
</point>
  <point name="input.c.bmka012" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmka012             #給予default值
            LET g_qryparam.default2 = "" #g_bmka_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "210" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmka_m.bmka012 = g_qryparam.return1              
            #LET g_bmka_m.oocq002 = g_qryparam.return2 
            DISPLAY g_bmka_m.bmka012 TO bmka012              #
            #DISPLAY g_bmka_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmka012                          #返回原欄位

]]>
</point>
  <point name="input.c.bmkadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmka_m.bmkadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef.ooef004
            LET g_qryparam.arg2 = "abmt500" #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_bmka_m.bmkadocno = g_qryparam.return1              

            DISPLAY g_bmka_m.bmkadocno TO bmkadocno              #

            NEXT FIELD bmkadocno                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.bmkb001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmkb_d[l_ac].bmkb001             #給予default值
            LET g_qryparam.default2 = "" #g_bmkb_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1117" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmkb_d[l_ac].bmkb001 = g_qryparam.return1              
            #LET g_bmkb_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmkb_d[l_ac].bmkb001 TO bmkb001              #
            #DISPLAY g_bmkb_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmkb001                          #返回原欄位

]]>
</point>
  <point name="input.c.page1.bmkb002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmkb_d[l_ac].bmkb002             #給予default值
            LET g_qryparam.default2 = "" #g_bmkb_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1118" #
            LET g_qryparam.where = " oocq004 = '",g_bmkb_d[l_ac].bmkb001,"'"
            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmkb_d[l_ac].bmkb002 = g_qryparam.return1              
            #LET g_bmkb_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmkb_d[l_ac].bmkb002 TO bmkb002              #
            #DISPLAY g_bmkb_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmkb002                          #返回原欄位

]]>
</point>
  <point name="input.c.page2.bmkc002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmkb2_d[l_ac].bmkc002             #給予default值
            LET g_qryparam.default2 = "" #g_bmkb2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1121" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmkb2_d[l_ac].bmkc002 = g_qryparam.return1              
            #LET g_bmkb2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmkb2_d[l_ac].bmkc002 TO bmkc002              #
            #DISPLAY g_bmkb2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmkc002                          #返回原欄位

]]>
</point>
  <point name="input.c.page3.bmkd001" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmkb3_d[l_ac].bmkd001             #給予default值
            LET g_qryparam.default2 = "" #g_bmkb3_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1119" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmkb3_d[l_ac].bmkd001 = g_qryparam.return1              
            #LET g_bmkb3_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmkb3_d[l_ac].bmkd001 TO bmkd001              #
            #DISPLAY g_bmkb3_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmkd001                          #返回原欄位

]]>
</point>
  <point name="input.c.page3.bmkd002" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmkb3_d[l_ac].bmkd002             #給予default值
            LET g_qryparam.default2 = "" #g_bmkb3_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1120" #
            LET g_qryparam.where = " oocq004 = '",g_bmkb3_d[l_ac].bmkd001,"'"
            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmkb3_d[l_ac].bmkd002 = g_qryparam.return1              
            #LET g_bmkb3_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmkb3_d[l_ac].bmkd002 TO bmkd002              #
            #DISPLAY g_bmkb3_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmkd002                          #返回原欄位

]]>
</point>
  <point name="input.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE  l_success             LIKE type_t.num5]]>
</point>
  <point name="input.g.bmkadocno" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmkb003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_set_entry_b(l_cmd)
            CALL abmt500_set_no_entry_b(l_cmd)   ]]>
</point>
  <point name="input.g.page3.bmkd003" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_set_entry_b(l_cmd)
            CALL abmt500_set_no_entry_b(l_cmd) ]]>
</point>
  <point name="input.head.a_insert" cite_std="N" status="u" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_transaction_end('Y','0')
               CALL s_transaction_begin()
               IF NOT cl_null(g_bmka_m.bmka001) AND (g_bmka_m.bmka001 <> g_bmka_m_o.bmka001 OR cl_null(g_bmka_m_o.bmka001))THEN
                  IF cl_ask_confirm('abm-00110') THEN   #詢問是否自動產生單身
                     LET l_success = ''
                     CALL abmt500_gen()  #自動產生單身
                          RETURNING l_success
                     IF NOT l_success THEN
                        CALL s_transaction_end('N','0')
                     END IF
                     LET p_cmd = 'u'                
                  END IF
               END IF ]]>
</point>
  <point name="input.head.b_insert" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[               CALL s_aooi200_gen_docno(g_site,g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt,g_prog)
                    RETURNING l_success,g_bmka_m.bmkadocno
               IF NOT l_success THEN
                  CALL cl_err(g_bmka_m.bmkadocno,'apm-00003',1)
                  NEXT FIELD bmkadocno
               END IF
               DISPLAY BY NAME g_bmka_m.bmkadocno]]>
</point>
  <point name="input.m.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[            CALL abmt500_set_entry(p_cmd)
            CALL abmt500_set_no_entry(p_cmd)]]>
</point>
  <point name="insert.default" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_bmka_m.bmkadocdt = g_today
      LET g_bmka_m.bmkasite = g_site
      LET g_bmka_m.bmka002 = g_user
      LET g_bmka_m.bmka003 = g_dept
      CALL abmt500_bmka002_desc()
      CALL abmt500_bmka003_desc()
      LET g_bmka_m_t.* = g_bmka_m.*
      LET g_bmka_m_o.* = g_bmka_m.*]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[      LET g_bmka_m_t.* = g_bmka_m.*
      LET g_bmka_m_o.* = g_bmka_m.*]]>
</point>
  <point name="reproduce.head.b_input" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   LET g_bmka_m.bmkadocdt = g_today
   LET g_bmka_m.bmka002 = g_user
   LET g_bmka_m.bmka003 = g_dept
   CALL abmt500_bmka002_desc()
   CALL abmt500_bmka003_desc()   
   LET g_bmka_m_t.* = g_bmka_m.*
   LET g_bmka_m_o.* = g_bmka_m.*]]>
</point>
  <point name="set_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("bmka006",TRUE)]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL cl_set_comp_entry("bmkbseq,bmkb001,bmkbseq1,bmkb002",TRUE)
   CALL cl_set_comp_entry("bmkcseq,bmkc001",TRUE)
   CALL cl_set_comp_entry("bmkdseq,bmkd001,bmkdseq1,bmkd002",TRUE)
   CALL cl_set_comp_required("bmkb004,bmkd004",FALSE)]]>
</point>
  <point name="set_no_entry.after_control" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF NOT abmt500_imaa005_exists() THEN 
      CALL cl_set_comp_entry("bmka006",FALSE)
      LET g_bmka_m.bmka006 = ' '
   END IF]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_bmjb004   LIKE bmjb_t.bmjb004
   DEFINE l_bmjd004   LIKE bmjd_t.bmjd004
   DEFINE l_cnt       LIKE type_t.num5]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   IF p_cmd = 'u' THEN 
      CALL cl_set_comp_entry("bmkbseq,bmkb001,bmkbseq1",FALSE)
      LET l_bmjb004 = ''
      SELECT bmjb004 INTO l_bmjb004 
        FROM bmjb_t
       WHERE bmjbent = g_enterprise
         AND bmjb001 = g_bmka_m.bmka001
         AND bmjbseq = g_bmkb_d[l_ac].bmkbseq
         AND bmjbseq1 = g_bmkb_d[l_ac].bmkbseq1
      IF NOT cl_null(l_bmjb004) THEN 
         CALL cl_set_comp_entry("bmkb002",FALSE)
         IF g_bmkb_d[l_ac].bmkb003 = 'Y' AND l_bmjb004 = '2' THEN 
            CALL cl_set_comp_required("bmkb004",TRUE)
         END IF
      END IF
         
      CALL cl_set_comp_entry("bmkcseq",FALSE)
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt 
        FROM bmjc_t
       WHERE bmjcent = g_enterprise
         AND bmjc001 = g_bmka_m.bmka001
         AND bmjcseq = g_bmkb2_d[l_ac].bmkcseq
      IF l_cnt > 0 THEN 
         CALL cl_set_comp_entry("bmkc001",FALSE)
      END IF

      CALL cl_set_comp_entry("bmkdseq,bmkd001,bmkdseq1",FALSE)
      LET l_bmjd004 = ''
      SELECT bmjd004 INTO l_bmjd004 
        FROM bmjd_t
       WHERE bmjdent = g_enterprise
         AND bmjd001 = g_bmka_m.bmka001
         AND bmjdseq = g_bmkb3_d[l_ac].bmkdseq
         AND bmjdseq1 = g_bmkb3_d[l_ac].bmkdseq1
      IF NOT cl_null(l_bmjd004) THEN 
         CALL cl_set_comp_entry("bmkd002",FALSE)
         IF g_bmkb3_d[l_ac].bmkd003 = 'Y' AND l_bmjd004 = '2' THEN
            CALL cl_set_comp_required("bmkd004",TRUE)
         END IF   
      END IF
   END IF]]>
</point>
  <point name="show.head.reference" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL abmt500_bmkadocno_desc('2',g_bmka_m.bmkadocno) RETURNING g_bmka_m.oobxl003
   DISPLAY BY NAME g_bmka_m.oobxl003    
   CALL abmt500_bmka005_desc()]]>
</point>
  <point name="statechange.after" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL s_transaction_end('Y','0')]]>
</point>
  <point name="statechange.b_update" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   CALL s_transaction_begin()
   IF lc_state = 'N' THEN 
      IF NOT cl_ask_confirm('aim-00110') THEN
         RETURN
      ELSE
         CALL s_abmt500_unconfirm(g_bmka_m.bmkadocno) RETURNING l_success
         IF l_success = FALSE THEN 
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END IF
   IF lc_state = 'Y' THEN
      IF NOT cl_ask_confirm('aim-00108') THEN
         RETURN
      ELSE   
         CALL s_abmt500_confirm(g_bmka_m.bmkadocno) RETURNING l_success
         IF l_success = FALSE THEN 
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF
   END IF   ]]>
</point>
  <point name="statechange.before_menu" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[         CASE g_bmka_m.bmkastus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
               HIDE OPTION "confirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
               HIDE OPTION "invalid"
         END CASE]]>
</point>
  <point name="statechange.define" cite_std="N" status="" ver="1" src="s" new="N" mark_hard="N">
<![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.after_refresh_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.default.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action_default" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.page1.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body3.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body3.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body3.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.action.filter" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.related_document" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.agendum" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.dialog.followup" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_foreach" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_count" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.before_prepare" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.open" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_headershow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_detailshow.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_browser_refresh.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.head.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkadocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkadocno" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.oobxl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.oobxl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.oobxl003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmkadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmkastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmka004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmka006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmka008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmkasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmka010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmka013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmka013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.bmka013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkacrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkamoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkacnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.bmkacnfid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.bmkacnfdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmkbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmkbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bmkbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmkb001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmkb001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmkbseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmkbseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bmkbseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmkb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmkb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmkb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmkb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bmkb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmkb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmkb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bmkb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page1.bmkbsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page1.bmkbsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page1.bmkbsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body2.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.bmkcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.bmkcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.bmkcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.bmkc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.bmkc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.bmkc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.bmkc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.bmkc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.bmkc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.bmkc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.bmkc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.bmkc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.bmkc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.bmkc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page2.bmkcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page2.bmkcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page2.bmkcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.body3.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.bmkdseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.bmkdseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.bmkdseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.bmkd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.bmkd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.bmkdseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.bmkdseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.bmkdseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.bmkd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.bmkd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.bmkd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.bmkd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.bmkd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.bmkd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.bmkd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.bmkd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.b.page3.bmkdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.a.page3.bmkdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="construct.c.page3.bmkdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.after_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.cs_ctrl" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.add_cs" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter.b_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="filter_parser.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fetch.action_control" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   CALL cl_set_act_visible("modify,modify_detail,delete",TRUE)
   IF g_bmka_m.bmkastus <> 'N' THEN 
      CALL cl_set_act_visible("modify,modify_detail,delete",FALSE)
   END IF]]>
</point>
  <point name="fetch.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_show" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.b_fk_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.m_fk_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.body.a_fk_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.define_sql3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_define_sql3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.other_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_set_entry" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmkadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmkadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmka001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmkastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.bmkastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmkastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmka004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.bmka004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka007" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmka008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.bmka008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmkasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.bmkasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmkasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka009" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmka010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.bmka010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka011" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka012" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.bmka013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.bmka013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.bmka013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.bmkadocdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.bmkastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.bmka004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.imaal003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.imaal004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.bmka008" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.bmkasite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.bmka010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.bmka013" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.head.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.d.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmkbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmkbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmkb001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmkbseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmkbseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmkb002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmkb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bmkb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmkb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bmkb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmkb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.bmkbsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.bmkbsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.bmkbsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmkbseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmkbseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmkb003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmkb004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.bmkbsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.bmkcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.bmkcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.bmkc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page2.bmkc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.bmkc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.bmkc002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.bmkc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page2.bmkc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.bmkc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.bmkc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page2.bmkc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.bmkc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page2.bmkcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page2.bmkcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page2.bmkcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.bmkcseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.bmkc001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.bmkc003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.bmkc004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page2.bmkcsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.insert.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.bmkdseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.bmkdseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.bmkd001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.bmkdseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.bmkdseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.bmkd002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.bmkd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.bmkd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.bmkd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.bmkd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.bmkd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page3.bmkdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page3.bmkdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page3.bmkdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.bmkdseq" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.bmkdseq1" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.bmkd003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.bmkd004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page3.bmkdsite" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body3.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.accept" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.follow_pic" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.body.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.body2.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.body3.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="reproduce.after_reproduce" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table1.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table2.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table3.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table3.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_reproduce.body.table3.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.before_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.befroe.related_document_remove" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.head.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.b_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.m_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.body.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.lang.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body2.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.body3.fill_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill3.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="browser_fill.other_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.before_insert3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.after_insert3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.before_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.after_update3" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry.field_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.unconfirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.invalid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.confirmed" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.more_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="statechange.a_update" cite_std="N" status="u" ver="" src="s" new="Y">
<![CDATA[   CALL cl_set_act_visible("modify,modify_detail,delete",TRUE)
   IF g_bmka_m.bmkastus <> 'N' THEN 
      CALL cl_set_act_visible("modify,modify_detail,delete",FALSE)
   END IF]]>
</point>
  <point name="idx_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="idx_chk.other" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill2.after_fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.before_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="fill_chk.other_chk" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_pk_array.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="abmt500.b_fill" ver="2" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION abmt500_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_bmkb_d.clear()    #g_bmkb_d 單頭及單身 
   CALL g_bmkb2_d.clear()
   CALL g_bmkb3_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF abmt500_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE bmkbseq,bmkb001,bmkbseq1,bmkb002,bmkb003,bmkb004,bmkbsite ,t1.oocql004 , 
          t2.oocql004 FROM bmkb_t",   
                  " INNER JOIN bmka_t ON bmkadocno = bmkbdocno ",
 
                  #"",
                  
                  "",
                                 " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='1117' AND t1.oocql002=bmkb001 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='1118' AND t2.oocql002=bmkb002 AND t2.oocql003='"||g_dlang||"' ",
 
                  " WHERE bmkbent=? AND bmkbdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmkb_t.bmkbseq,bmkb_t.bmkbseq1"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmt500_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR abmt500_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_bmka_m.bmkadocno
                                               
      FOREACH b_fill_cs INTO g_bmkb_d[l_ac].bmkbseq,g_bmkb_d[l_ac].bmkb001,g_bmkb_d[l_ac].bmkbseq1,g_bmkb_d[l_ac].bmkb002, 
          g_bmkb_d[l_ac].bmkb003,g_bmkb_d[l_ac].bmkb004,g_bmkb_d[l_ac].bmkbsite,g_bmkb_d[l_ac].bmkb001_desc, 
          g_bmkb_d[l_ac].bmkb002_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF abmt500_fill_chk(2) THEN
      LET g_sql = "SELECT  UNIQUE bmkcseq,bmkc001,bmkc002,bmkc003,bmkc004,bmkcsite ,t3.oocql004 FROM bmkc_t", 
             
                  " INNER JOIN bmka_t ON bmkadocno = bmkcdocno ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='1121' AND t3.oocql002=bmkc002 AND t3.oocql003='"||g_dlang||"' ",
 
                  " WHERE bmkcent=? AND bmkcdocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body2.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table2) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmkc_t.bmkcseq"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql2"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmt500_pb2 FROM g_sql
      DECLARE b_fill_cs2 CURSOR FOR abmt500_pb2
      
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_bmka_m.bmkadocno
                                               
      FOREACH b_fill_cs2 INTO g_bmkb2_d[l_ac].bmkcseq,g_bmkb2_d[l_ac].bmkc001,g_bmkb2_d[l_ac].bmkc002, 
          g_bmkb2_d[l_ac].bmkc003,g_bmkb2_d[l_ac].bmkc004,g_bmkb2_d[l_ac].bmkcsite,g_bmkb2_d[l_ac].bmkc002_desc 

         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF abmt500_fill_chk(3) THEN
      LET g_sql = "SELECT  UNIQUE bmkdseq,bmkd001,bmkdseq1,bmkd002,bmkd003,bmkd004,bmkdsite ,t4.oocql004 , 
          t5.oocql004 FROM bmkd_t",   
                  " INNER JOIN bmka_t ON bmkadocno = bmkddocno ",
 
                  "",
                  
                                 " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='1119' AND t4.oocql002=bmkd001 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='1120' AND t5.oocql002=bmkd002 AND t5.oocql003='"||g_dlang||"' ",
 
                  " WHERE bmkdent=? AND bmkddocno=?"   
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body3.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table3) THEN
         LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
      END IF
      
      #子單身的WC
      
      
      LET g_sql = g_sql, " ORDER BY bmkd_t.bmkdseq,bmkd_t.bmkdseq1"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql3"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE abmt500_pb3 FROM g_sql
      DECLARE b_fill_cs3 CURSOR FOR abmt500_pb3
      
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_bmka_m.bmkadocno
                                               
      FOREACH b_fill_cs3 INTO g_bmkb3_d[l_ac].bmkdseq,g_bmkb3_d[l_ac].bmkd001,g_bmkb3_d[l_ac].bmkdseq1, 
          g_bmkb3_d[l_ac].bmkd002,g_bmkb3_d[l_ac].bmkd003,g_bmkb3_d[l_ac].bmkd004,g_bmkb3_d[l_ac].bmkdsite, 
          g_bmkb3_d[l_ac].bmkd001_desc,g_bmkb3_d[l_ac].bmkd002_desc
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            CALL cl_err( '', 9035, 0 )
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_bmkb_d.deleteElement(g_bmkb_d.getLength())
   CALL g_bmkb2_d.deleteElement(g_bmkb2_d.getLength())
   CALL g_bmkb3_d.deleteElement(g_bmkb3_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abmt500_pb
   FREE abmt500_pb2
 
   FREE abmt500_pb3
 
 
   
END FUNCTION
]]>
</section>
  <section id="abmt500.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION abmt500_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL abmt500_detail_show()
   
END FUNCTION
]]>
</section>
  <section id="abmt500.browser_fill" ver="3" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abmt500_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmka_m.* TO NULL
   CALL g_bmkb_d.clear()        
   CALL g_bmkb2_d.clear() 
   CALL g_bmkb3_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "bmkadocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE bmkadocno ",
                      " FROM bmka_t ",
                      " ",
                      " LEFT JOIN bmkb_t ON bmkbent = bmkaent AND bmkadocno = bmkbdocno ",
                      " LEFT JOIN bmkc_t ON bmkcent = bmkaent AND bmkadocno = bmkcdocno", 
 
                      " LEFT JOIN bmkd_t ON bmkdent = bmkaent AND bmkadocno = bmkddocno", 
 
 
 
                      " ", 
                      " ", 
                      " WHERE bmkaent = '" ||g_enterprise|| "' AND bmkbent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("bmka_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE bmkadocno ",
                      " FROM bmka_t ", 
                      "  ",
                      "  ",
                      " WHERE bmkaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("bmka_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照bmkadocno,bmkadocdt,bmka001,'',bmka002,'',bmka003,'',bmka009,'',bmkacrtid,'',bmkacrtdt,bmkamodid,'',bmkamoddt Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT bmkastus,bmkadocno,bmkadocdt,bmka001,'',bmka002,'',bmka003,'',bmka009, 
       '',bmkacrtid,'',bmkacrtdt,bmkamodid,'',bmkamoddt,t1.bmjal003 ,t2.ooag011 ,t3.ooefl003 ,t4.pmaal003 , 
       t5.ooag011 ,t6.ooag011 ",
               " FROM bmka_t ",
               "  ",
               "  LEFT JOIN bmkb_t ON bmkbent = bmkaent AND bmkadocno = bmkbdocno ",
               "  LEFT JOIN bmkc_t ON bmkcent = bmkaent AND bmkadocno = bmkcdocno",
 
               "  LEFT JOIN bmkd_t ON bmkdent = bmkaent AND bmkadocno = bmkddocno",
 
 
 
               "  ",
               "  ",
                              " LEFT JOIN bmjal_t t1 ON t1.bmjalent='"||g_enterprise||"' AND t1.bmjal001=bmka001 AND t1.bmjal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=bmka002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=bmka003 AND t3.ooefl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=bmka009 AND t4.pmaal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=bmkacrtid  ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=bmkamodid  ",
 
               " WHERE bmkaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("bmka_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_bmkadocno,g_browser[g_cnt].b_bmkadocdt, 
       g_browser[g_cnt].b_bmka001,g_browser[g_cnt].b_bmka001_desc,g_browser[g_cnt].b_bmka002,g_browser[g_cnt].b_bmka002_desc, 
       g_browser[g_cnt].b_bmka003,g_browser[g_cnt].b_bmka003_desc,g_browser[g_cnt].b_bmka009,g_browser[g_cnt].b_bmka009_desc, 
       g_browser[g_cnt].b_bmkacrtid,g_browser[g_cnt].b_bmkacrtid_desc,g_browser[g_cnt].b_bmkacrtdt,g_browser[g_cnt].b_bmkamodid, 
       g_browser[g_cnt].b_bmkamodid_desc,g_browser[g_cnt].b_bmkamoddt,g_browser[g_cnt].b_bmka001_desc, 
       g_browser[g_cnt].b_bmka002_desc,g_browser[g_cnt].b_bmka003_desc,g_browser[g_cnt].b_bmka009_desc, 
       g_browser[g_cnt].b_bmkacrtid_desc,g_browser[g_cnt].b_bmkamodid_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="abmt500.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION abmt500_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY bmkadocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL abmt500_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="abmt500.construct" ver="5" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION abmt500_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmka_m.* TO NULL
   CALL g_bmkb_d.clear()        
   CALL g_bmkb2_d.clear() 
   CALL g_bmkb3_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bmkadocno,oobxl003,bmkadocdt,bmka001,bmka002,bmka003,bmkastus,bmka004, 
          bmka005,imaal003,imaal004,bmka006,bmka007,bmka008,bmkasite,bmka009,bmka010,bmka011,bmka012, 
          bmka013,bmkaownid,bmkaowndp,bmkacrtid,bmkacrtdp,bmkacrtdt,bmkamodid,bmkamoddt,bmkacnfid,bmkacnfdt 

 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<bmkacrtdt>>----
         AFTER FIELD bmkacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmkamoddt>>----
         AFTER FIELD bmkamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmkacnfdt>>----
         AFTER FIELD bmkacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmkapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.bmkadocno
         ON ACTION controlp INFIELD bmkadocno
            #add-point:ON ACTION controlp INFIELD bmkadocno
            {<point name="construct.c.bmkadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkadocno
            #add-point:BEFORE FIELD bmkadocno
            {<point name="construct.b.bmkadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkadocno
            
            #add-point:AFTER FIELD bmkadocno
            {<point name="construct.a.bmkadocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD oobxl003
            #add-point:BEFORE FIELD oobxl003
            {<point name="construct.b.oobxl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD oobxl003
            
            #add-point:AFTER FIELD oobxl003
            {<point name="construct.a.oobxl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.oobxl003
         ON ACTION controlp INFIELD oobxl003
            #add-point:ON ACTION controlp INFIELD oobxl003
            {<point name="construct.c.oobxl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkadocdt
            #add-point:BEFORE FIELD bmkadocdt
            {<point name="construct.b.bmkadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkadocdt
            
            #add-point:AFTER FIELD bmkadocdt
            {<point name="construct.a.bmkadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmkadocdt
         ON ACTION controlp INFIELD bmkadocdt
            #add-point:ON ACTION controlp INFIELD bmkadocdt
            {<point name="construct.c.bmkadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmka001
         ON ACTION controlp INFIELD bmka001
            #add-point:ON ACTION controlp INFIELD bmka001
            {<point name="construct.c.bmka001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka001
            #add-point:BEFORE FIELD bmka001
            {<point name="construct.b.bmka001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka001
            
            #add-point:AFTER FIELD bmka001
            {<point name="construct.a.bmka001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka002
         ON ACTION controlp INFIELD bmka002
            #add-point:ON ACTION controlp INFIELD bmka002
            {<point name="construct.c.bmka002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka002
            #add-point:BEFORE FIELD bmka002
            {<point name="construct.b.bmka002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka002
            
            #add-point:AFTER FIELD bmka002
            {<point name="construct.a.bmka002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka003
         ON ACTION controlp INFIELD bmka003
            #add-point:ON ACTION controlp INFIELD bmka003
            {<point name="construct.c.bmka003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka003
            #add-point:BEFORE FIELD bmka003
            {<point name="construct.b.bmka003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka003
            
            #add-point:AFTER FIELD bmka003
            {<point name="construct.a.bmka003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkastus
            #add-point:BEFORE FIELD bmkastus
            {<point name="construct.b.bmkastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkastus
            
            #add-point:AFTER FIELD bmkastus
            {<point name="construct.a.bmkastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmkastus
         ON ACTION controlp INFIELD bmkastus
            #add-point:ON ACTION controlp INFIELD bmkastus
            {<point name="construct.c.bmkastus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka004
            #add-point:BEFORE FIELD bmka004
            {<point name="construct.b.bmka004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka004
            
            #add-point:AFTER FIELD bmka004
            {<point name="construct.a.bmka004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka004
         ON ACTION controlp INFIELD bmka004
            #add-point:ON ACTION controlp INFIELD bmka004
            {<point name="construct.c.bmka004" />}
            #END add-point
 
         #Ctrlp:construct.c.bmka005
         ON ACTION controlp INFIELD bmka005
            #add-point:ON ACTION controlp INFIELD bmka005
            {<point name="construct.c.bmka005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka005
            #add-point:BEFORE FIELD bmka005
            {<point name="construct.b.bmka005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka005
            
            #add-point:AFTER FIELD bmka005
            {<point name="construct.a.bmka005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="construct.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="construct.a.imaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="construct.c.imaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="construct.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="construct.a.imaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="construct.c.imaal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka006
            #add-point:BEFORE FIELD bmka006
            {<point name="construct.b.bmka006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka006
            
            #add-point:AFTER FIELD bmka006
            {<point name="construct.a.bmka006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka006
         ON ACTION controlp INFIELD bmka006
            #add-point:ON ACTION controlp INFIELD bmka006
            {<point name="construct.c.bmka006" />}
            #END add-point
 
         #Ctrlp:construct.c.bmka007
         ON ACTION controlp INFIELD bmka007
            #add-point:ON ACTION controlp INFIELD bmka007
            {<point name="construct.c.bmka007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka007
            #add-point:BEFORE FIELD bmka007
            {<point name="construct.b.bmka007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka007
            
            #add-point:AFTER FIELD bmka007
            {<point name="construct.a.bmka007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka008
            #add-point:BEFORE FIELD bmka008
            {<point name="construct.b.bmka008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka008
            
            #add-point:AFTER FIELD bmka008
            {<point name="construct.a.bmka008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka008
         ON ACTION controlp INFIELD bmka008
            #add-point:ON ACTION controlp INFIELD bmka008
            {<point name="construct.c.bmka008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkasite
            #add-point:BEFORE FIELD bmkasite
            {<point name="construct.b.bmkasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkasite
            
            #add-point:AFTER FIELD bmkasite
            {<point name="construct.a.bmkasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmkasite
         ON ACTION controlp INFIELD bmkasite
            #add-point:ON ACTION controlp INFIELD bmkasite
            {<point name="construct.c.bmkasite" />}
            #END add-point
 
         #Ctrlp:construct.c.bmka009
         ON ACTION controlp INFIELD bmka009
            #add-point:ON ACTION controlp INFIELD bmka009
            {<point name="construct.c.bmka009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka009
            #add-point:BEFORE FIELD bmka009
            {<point name="construct.b.bmka009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka009
            
            #add-point:AFTER FIELD bmka009
            {<point name="construct.a.bmka009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka010
            #add-point:BEFORE FIELD bmka010
            {<point name="construct.b.bmka010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka010
            
            #add-point:AFTER FIELD bmka010
            {<point name="construct.a.bmka010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka010
         ON ACTION controlp INFIELD bmka010
            #add-point:ON ACTION controlp INFIELD bmka010
            {<point name="construct.c.bmka010" />}
            #END add-point
 
         #Ctrlp:construct.c.bmka011
         ON ACTION controlp INFIELD bmka011
            #add-point:ON ACTION controlp INFIELD bmka011
            {<point name="construct.c.bmka011" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka011
            #add-point:BEFORE FIELD bmka011
            {<point name="construct.b.bmka011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka011
            
            #add-point:AFTER FIELD bmka011
            {<point name="construct.a.bmka011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka012
         ON ACTION controlp INFIELD bmka012
            #add-point:ON ACTION controlp INFIELD bmka012
            {<point name="construct.c.bmka012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka012
            #add-point:BEFORE FIELD bmka012
            {<point name="construct.b.bmka012" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka012
            
            #add-point:AFTER FIELD bmka012
            {<point name="construct.a.bmka012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka013
            #add-point:BEFORE FIELD bmka013
            {<point name="construct.b.bmka013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka013
            
            #add-point:AFTER FIELD bmka013
            {<point name="construct.a.bmka013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmka013
         ON ACTION controlp INFIELD bmka013
            #add-point:ON ACTION controlp INFIELD bmka013
            {<point name="construct.c.bmka013" />}
            #END add-point
 
         #Ctrlp:construct.c.bmkaownid
         ON ACTION controlp INFIELD bmkaownid
            #add-point:ON ACTION controlp INFIELD bmkaownid
            {<point name="construct.c.bmkaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkaownid
            #add-point:BEFORE FIELD bmkaownid
            {<point name="construct.b.bmkaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkaownid
            
            #add-point:AFTER FIELD bmkaownid
            {<point name="construct.a.bmkaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmkaowndp
         ON ACTION controlp INFIELD bmkaowndp
            #add-point:ON ACTION controlp INFIELD bmkaowndp
            {<point name="construct.c.bmkaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkaowndp
            #add-point:BEFORE FIELD bmkaowndp
            {<point name="construct.b.bmkaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkaowndp
            
            #add-point:AFTER FIELD bmkaowndp
            {<point name="construct.a.bmkaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmkacrtid
         ON ACTION controlp INFIELD bmkacrtid
            #add-point:ON ACTION controlp INFIELD bmkacrtid
            {<point name="construct.c.bmkacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkacrtid
            #add-point:BEFORE FIELD bmkacrtid
            {<point name="construct.b.bmkacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkacrtid
            
            #add-point:AFTER FIELD bmkacrtid
            {<point name="construct.a.bmkacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmkacrtdp
         ON ACTION controlp INFIELD bmkacrtdp
            #add-point:ON ACTION controlp INFIELD bmkacrtdp
            {<point name="construct.c.bmkacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkacrtdp
            #add-point:BEFORE FIELD bmkacrtdp
            {<point name="construct.b.bmkacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkacrtdp
            
            #add-point:AFTER FIELD bmkacrtdp
            {<point name="construct.a.bmkacrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkacrtdt
            #add-point:BEFORE FIELD bmkacrtdt
            {<point name="construct.b.bmkacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmkamodid
         ON ACTION controlp INFIELD bmkamodid
            #add-point:ON ACTION controlp INFIELD bmkamodid
            {<point name="construct.c.bmkamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkamodid
            #add-point:BEFORE FIELD bmkamodid
            {<point name="construct.b.bmkamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkamodid
            
            #add-point:AFTER FIELD bmkamodid
            {<point name="construct.a.bmkamodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkamoddt
            #add-point:BEFORE FIELD bmkamoddt
            {<point name="construct.b.bmkamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmkacnfid
         ON ACTION controlp INFIELD bmkacnfid
            #add-point:ON ACTION controlp INFIELD bmkacnfid
            {<point name="construct.c.bmkacnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkacnfid
            #add-point:BEFORE FIELD bmkacnfid
            {<point name="construct.b.bmkacnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkacnfid
            
            #add-point:AFTER FIELD bmkacnfid
            {<point name="construct.a.bmkacnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkacnfdt
            #add-point:BEFORE FIELD bmkacnfdt
            {<point name="construct.b.bmkacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON bmkbseq,bmkb001,bmkbseq1,bmkb002,bmkb003,bmkb004,bmkbsite
           FROM s_detail1[1].bmkbseq,s_detail1[1].bmkb001,s_detail1[1].bmkbseq1,s_detail1[1].bmkb002, 
               s_detail1[1].bmkb003,s_detail1[1].bmkb004,s_detail1[1].bmkbsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #此段落由子樣板a01產生
         BEFORE FIELD bmkbseq
            #add-point:BEFORE FIELD bmkbseq
            {<point name="construct.b.page1.bmkbseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkbseq
            
            #add-point:AFTER FIELD bmkbseq
            {<point name="construct.a.page1.bmkbseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmkbseq
         ON ACTION controlp INFIELD bmkbseq
            #add-point:ON ACTION controlp INFIELD bmkbseq
            {<point name="construct.c.page1.bmkbseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.bmkb001
         ON ACTION controlp INFIELD bmkb001
            #add-point:ON ACTION controlp INFIELD bmkb001
            {<point name="construct.c.page1.bmkb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb001
            #add-point:BEFORE FIELD bmkb001
            {<point name="construct.b.page1.bmkb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb001
            
            #add-point:AFTER FIELD bmkb001
            {<point name="construct.a.page1.bmkb001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkbseq1
            #add-point:BEFORE FIELD bmkbseq1
            {<point name="construct.b.page1.bmkbseq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkbseq1
            
            #add-point:AFTER FIELD bmkbseq1
            {<point name="construct.a.page1.bmkbseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmkbseq1
         ON ACTION controlp INFIELD bmkbseq1
            #add-point:ON ACTION controlp INFIELD bmkbseq1
            {<point name="construct.c.page1.bmkbseq1" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.bmkb002
         ON ACTION controlp INFIELD bmkb002
            #add-point:ON ACTION controlp INFIELD bmkb002
            {<point name="construct.c.page1.bmkb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb002
            #add-point:BEFORE FIELD bmkb002
            {<point name="construct.b.page1.bmkb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb002
            
            #add-point:AFTER FIELD bmkb002
            {<point name="construct.a.page1.bmkb002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb003
            #add-point:BEFORE FIELD bmkb003
            {<point name="construct.b.page1.bmkb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb003
            
            #add-point:AFTER FIELD bmkb003
            {<point name="construct.a.page1.bmkb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmkb003
         ON ACTION controlp INFIELD bmkb003
            #add-point:ON ACTION controlp INFIELD bmkb003
            {<point name="construct.c.page1.bmkb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb004
            #add-point:BEFORE FIELD bmkb004
            {<point name="construct.b.page1.bmkb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb004
            
            #add-point:AFTER FIELD bmkb004
            {<point name="construct.a.page1.bmkb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmkb004
         ON ACTION controlp INFIELD bmkb004
            #add-point:ON ACTION controlp INFIELD bmkb004
            {<point name="construct.c.page1.bmkb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkbsite
            #add-point:BEFORE FIELD bmkbsite
            {<point name="construct.b.page1.bmkbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkbsite
            
            #add-point:AFTER FIELD bmkbsite
            {<point name="construct.a.page1.bmkbsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmkbsite
         ON ACTION controlp INFIELD bmkbsite
            #add-point:ON ACTION controlp INFIELD bmkbsite
            {<point name="construct.c.page1.bmkbsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON bmkcseq,bmkc001,bmkc002,bmkc003,bmkc004,bmkcsite
           FROM s_detail2[1].bmkcseq,s_detail2[1].bmkc001,s_detail2[1].bmkc002,s_detail2[1].bmkc003, 
               s_detail2[1].bmkc004,s_detail2[1].bmkcsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD bmkcseq
            #add-point:BEFORE FIELD bmkcseq
            {<point name="construct.b.page2.bmkcseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkcseq
            
            #add-point:AFTER FIELD bmkcseq
            {<point name="construct.a.page2.bmkcseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmkcseq
         ON ACTION controlp INFIELD bmkcseq
            #add-point:ON ACTION controlp INFIELD bmkcseq
            {<point name="construct.c.page2.bmkcseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc001
            #add-point:BEFORE FIELD bmkc001
            {<point name="construct.b.page2.bmkc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc001
            
            #add-point:AFTER FIELD bmkc001
            {<point name="construct.a.page2.bmkc001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmkc001
         ON ACTION controlp INFIELD bmkc001
            #add-point:ON ACTION controlp INFIELD bmkc001
            {<point name="construct.c.page2.bmkc001" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.bmkc002
         ON ACTION controlp INFIELD bmkc002
            #add-point:ON ACTION controlp INFIELD bmkc002
            {<point name="construct.c.page2.bmkc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc002
            #add-point:BEFORE FIELD bmkc002
            {<point name="construct.b.page2.bmkc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc002
            
            #add-point:AFTER FIELD bmkc002
            {<point name="construct.a.page2.bmkc002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc003
            #add-point:BEFORE FIELD bmkc003
            {<point name="construct.b.page2.bmkc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc003
            
            #add-point:AFTER FIELD bmkc003
            {<point name="construct.a.page2.bmkc003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmkc003
         ON ACTION controlp INFIELD bmkc003
            #add-point:ON ACTION controlp INFIELD bmkc003
            {<point name="construct.c.page2.bmkc003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc004
            #add-point:BEFORE FIELD bmkc004
            {<point name="construct.b.page2.bmkc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc004
            
            #add-point:AFTER FIELD bmkc004
            {<point name="construct.a.page2.bmkc004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmkc004
         ON ACTION controlp INFIELD bmkc004
            #add-point:ON ACTION controlp INFIELD bmkc004
            {<point name="construct.c.page2.bmkc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkcsite
            #add-point:BEFORE FIELD bmkcsite
            {<point name="construct.b.page2.bmkcsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkcsite
            
            #add-point:AFTER FIELD bmkcsite
            {<point name="construct.a.page2.bmkcsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmkcsite
         ON ACTION controlp INFIELD bmkcsite
            #add-point:ON ACTION controlp INFIELD bmkcsite
            {<point name="construct.c.page2.bmkcsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON bmkdseq,bmkd001,bmkdseq1,bmkd002,bmkd003,bmkd004,bmkdsite
           FROM s_detail3[1].bmkdseq,s_detail3[1].bmkd001,s_detail3[1].bmkdseq1,s_detail3[1].bmkd002, 
               s_detail3[1].bmkd003,s_detail3[1].bmkd004,s_detail3[1].bmkdsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD bmkdseq
            #add-point:BEFORE FIELD bmkdseq
            {<point name="construct.b.page3.bmkdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkdseq
            
            #add-point:AFTER FIELD bmkdseq
            {<point name="construct.a.page3.bmkdseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmkdseq
         ON ACTION controlp INFIELD bmkdseq
            #add-point:ON ACTION controlp INFIELD bmkdseq
            {<point name="construct.c.page3.bmkdseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.bmkd001
         ON ACTION controlp INFIELD bmkd001
            #add-point:ON ACTION controlp INFIELD bmkd001
            {<point name="construct.c.page3.bmkd001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd001
            #add-point:BEFORE FIELD bmkd001
            {<point name="construct.b.page3.bmkd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd001
            
            #add-point:AFTER FIELD bmkd001
            {<point name="construct.a.page3.bmkd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkdseq1
            #add-point:BEFORE FIELD bmkdseq1
            {<point name="construct.b.page3.bmkdseq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkdseq1
            
            #add-point:AFTER FIELD bmkdseq1
            {<point name="construct.a.page3.bmkdseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmkdseq1
         ON ACTION controlp INFIELD bmkdseq1
            #add-point:ON ACTION controlp INFIELD bmkdseq1
            {<point name="construct.c.page3.bmkdseq1" />}
            #END add-point
 
         #Ctrlp:construct.c.page3.bmkd002
         ON ACTION controlp INFIELD bmkd002
            #add-point:ON ACTION controlp INFIELD bmkd002
            {<point name="construct.c.page3.bmkd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd002
            #add-point:BEFORE FIELD bmkd002
            {<point name="construct.b.page3.bmkd002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd002
            
            #add-point:AFTER FIELD bmkd002
            {<point name="construct.a.page3.bmkd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd003
            #add-point:BEFORE FIELD bmkd003
            {<point name="construct.b.page3.bmkd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd003
            
            #add-point:AFTER FIELD bmkd003
            {<point name="construct.a.page3.bmkd003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmkd003
         ON ACTION controlp INFIELD bmkd003
            #add-point:ON ACTION controlp INFIELD bmkd003
            {<point name="construct.c.page3.bmkd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd004
            #add-point:BEFORE FIELD bmkd004
            {<point name="construct.b.page3.bmkd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd004
            
            #add-point:AFTER FIELD bmkd004
            {<point name="construct.a.page3.bmkd004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmkd004
         ON ACTION controlp INFIELD bmkd004
            #add-point:ON ACTION controlp INFIELD bmkd004
            {<point name="construct.c.page3.bmkd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkdsite
            #add-point:BEFORE FIELD bmkdsite
            {<point name="construct.b.page3.bmkdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkdsite
            
            #add-point:AFTER FIELD bmkdsite
            {<point name="construct.a.page3.bmkdsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmkdsite
         ON ACTION controlp INFIELD bmkdsite
            #add-point:ON ACTION controlp INFIELD bmkdsite
            {<point name="construct.c.page3.bmkdsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
</section>
  <section id="abmt500.default_search" ver="1" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION abmt500_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bmkadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="abmt500.delete" ver="3" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION abmt500_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_bmka_m.bmkadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL abmt500_show()
   
   CALL s_transaction_begin()
 
   OPEN abmt500_cl USING g_enterprise,g_bmka_m.bmkadocno
   IF STATUS THEN
      CALL cl_err("OPEN abmt500_cl:", STATUS, 1)
      CLOSE abmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt500_master_referesh USING g_bmka_m.bmkadocno INTO g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt, 
       g_bmka_m.bmka001,g_bmka_m.bmka002,g_bmka_m.bmka003,g_bmka_m.bmkastus,g_bmka_m.bmka004,g_bmka_m.bmka005, 
       g_bmka_m.bmka006,g_bmka_m.bmka007,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010, 
       g_bmka_m.bmka011,g_bmka_m.bmka012,g_bmka_m.bmka013,g_bmka_m.bmkaownid,g_bmka_m.bmkaowndp,g_bmka_m.bmkacrtid, 
       g_bmka_m.bmkacrtdp,g_bmka_m.bmkacrtdt,g_bmka_m.bmkamodid,g_bmka_m.bmkamoddt,g_bmka_m.bmkacnfid, 
       g_bmka_m.bmkacnfdt,g_bmka_m.bmka001_desc,g_bmka_m.bmka002_desc,g_bmka_m.bmka003_desc,g_bmka_m.bmka007_desc, 
       g_bmka_m.bmka009_desc,g_bmka_m.bmka011_desc,g_bmka_m.bmka012_desc,g_bmka_m.bmkaownid_desc,g_bmka_m.bmkaowndp_desc, 
       g_bmka_m.bmkacrtid_desc,g_bmka_m.bmkacrtdp_desc,g_bmka_m.bmkamodid_desc,g_bmka_m.bmkacnfid_desc 

 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmka_m.bmkadocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL abmt500_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_bmkadocno_t = g_bmka_m.bmkadocno
 
 
      DELETE FROM bmka_t
       WHERE bmkaent = g_enterprise AND bmkadocno = g_bmka_m.bmkadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_bmka_m.bmkadocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM bmkb_t
       WHERE bmkbent = g_enterprise AND bmkbdocno = g_bmka_m.bmkadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkb_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM bmkc_t
       WHERE bmkcent = g_enterprise AND
             bmkcdocno = g_bmka_m.bmkadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkc_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM bmkd_t
       WHERE bmkdent = g_enterprise AND
             bmkddocno = g_bmka_m.bmkadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkd_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
 
 
 
                                                               
      CLEAR FORM
      CALL g_bmkb_d.clear() 
      CALL g_bmkb2_d.clear()       
      CALL g_bmkb3_d.clear()       
 
     
      #CALL abmt500_ui_browser_refresh()  
      CALL abmt500_ui_headershow()  
      CALL abmt500_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL abmt500_browser_fill("")
         CALL abmt500_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL abmt500_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE abmt500_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_bmka_m.bmkadocno,'D')
    
END FUNCTION
]]>
</section>
  <section id="abmt500.delete_b" ver="1" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION abmt500_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM bmkb_t
       WHERE bmkbent = g_enterprise AND
         bmkbdocno = ps_keys_bak[1] AND bmkbseq = ps_keys_bak[2] AND bmkbseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM bmkc_t
       WHERE bmkcent = g_enterprise AND
         bmkcdocno = ps_keys_bak[1] AND bmkcseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM bmkd_t
       WHERE bmkdent = g_enterprise AND
         bmkddocno = ps_keys_bak[1] AND bmkdseq = ps_keys_bak[2] AND bmkdseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="abmt500.description" ver="1" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000066
#+ 
#+ Filename...: abmt500
#+ Description: ECR申請作業
#+ Creator....: 02295(2014/07/03)
#+ Modifier...: 02295(2014/07/04)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="abmt500.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION abmt500_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bmkb_t.*
   DEFINE l_detail2    RECORD LIKE bmkc_t.*
 
   DEFINE l_detail3    RECORD LIKE bmkd_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abmt500_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE abmt500_detail AS ",
                "SELECT * FROM bmkb_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt500_detail SELECT * FROM bmkb_t 
                                         WHERE bmkbent = g_enterprise AND bmkbdocno = g_bmkadocno_t
 
   
   #將key修正為調整後   
   UPDATE abmt500_detail 
      #更新key欄位
      SET bmkbdocno = g_bmka_m.bmkadocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO bmkb_t SELECT * FROM abmt500_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt500_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmt500_detail AS ",
      "SELECT * FROM bmkc_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt500_detail SELECT * FROM bmkc_t
                                         WHERE bmkcent = g_enterprise AND bmkcdocno = g_bmkadocno_t
 
 
   #將key修正為調整後   
   UPDATE abmt500_detail SET bmkcdocno = g_bmka_m.bmkadocno
 
  
   #將資料塞回原table   
   INSERT INTO bmkc_t SELECT * FROM abmt500_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt500_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmt500_detail AS ",
      "SELECT * FROM bmkd_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt500_detail SELECT * FROM bmkd_t
                                         WHERE bmkdent = g_enterprise AND bmkddocno = g_bmkadocno_t
 
 
   #將key修正為調整後   
   UPDATE abmt500_detail SET bmkddocno = g_bmka_m.bmkadocno
 
  
   #將資料塞回原table   
   INSERT INTO bmkd_t SELECT * FROM abmt500_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt500_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bmkadocno_t = g_bmka_m.bmkadocno
 
   
   DROP TABLE abmt500_detail
   
END FUNCTION
]]>
</section>
  <section id="abmt500.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION abmt500_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="abmt500.fetch" ver="3" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abmt500_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bmka_m.bmkadocno = g_browser[g_current_idx].b_bmkadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE abmt500_master_referesh USING g_bmka_m.bmkadocno INTO g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt, 
       g_bmka_m.bmka001,g_bmka_m.bmka002,g_bmka_m.bmka003,g_bmka_m.bmkastus,g_bmka_m.bmka004,g_bmka_m.bmka005, 
       g_bmka_m.bmka006,g_bmka_m.bmka007,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010, 
       g_bmka_m.bmka011,g_bmka_m.bmka012,g_bmka_m.bmka013,g_bmka_m.bmkaownid,g_bmka_m.bmkaowndp,g_bmka_m.bmkacrtid, 
       g_bmka_m.bmkacrtdp,g_bmka_m.bmkacrtdt,g_bmka_m.bmkamodid,g_bmka_m.bmkamoddt,g_bmka_m.bmkacnfid, 
       g_bmka_m.bmkacnfdt,g_bmka_m.bmka001_desc,g_bmka_m.bmka002_desc,g_bmka_m.bmka003_desc,g_bmka_m.bmka007_desc, 
       g_bmka_m.bmka009_desc,g_bmka_m.bmka011_desc,g_bmka_m.bmka012_desc,g_bmka_m.bmkaownid_desc,g_bmka_m.bmkaowndp_desc, 
       g_bmka_m.bmkacrtid_desc,g_bmka_m.bmkacrtdp_desc,g_bmka_m.bmkamodid_desc,g_bmka_m.bmkacnfid_desc 

   IF SQLCA.sqlcode THEN
      CALL cl_err("bmka_t",SQLCA.sqlcode,1)
      INITIALIZE g_bmka_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_bmka_m_t.* = g_bmka_m.*
   LET g_bmka_m_o.* = g_bmka_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL abmt500_show()
 
   
 
END FUNCTION
]]>
</section>
  <section id="abmt500.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION abmt500_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
   IF ps_idx = 3 AND
      ((NOT cl_null(g_wc2_table3) AND g_wc2_table3.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
 
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="abmt500.filter" ver="2" status="" src="s">
<![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION abmt500_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON bmkadocno,bmkadocdt,bmka001,bmka002,bmka003,bmka009,bmkacrtid,bmkacrtdt, 
          bmkamodid,bmkamoddt
                          FROM s_browse[1].b_bmkadocno,s_browse[1].b_bmkadocdt,s_browse[1].b_bmka001, 
                              s_browse[1].b_bmka002,s_browse[1].b_bmka003,s_browse[1].b_bmka009,s_browse[1].b_bmkacrtid, 
                              s_browse[1].b_bmkacrtdt,s_browse[1].b_bmkamodid,s_browse[1].b_bmkamoddt 

 
         BEFORE CONSTRUCT
               DISPLAY abmt500_filter_parser('bmkadocno') TO s_browse[1].b_bmkadocno
            DISPLAY abmt500_filter_parser('bmkadocdt') TO s_browse[1].b_bmkadocdt
            DISPLAY abmt500_filter_parser('bmka001') TO s_browse[1].b_bmka001
            DISPLAY abmt500_filter_parser('bmka002') TO s_browse[1].b_bmka002
            DISPLAY abmt500_filter_parser('bmka003') TO s_browse[1].b_bmka003
            DISPLAY abmt500_filter_parser('bmka009') TO s_browse[1].b_bmka009
            DISPLAY abmt500_filter_parser('bmkacrtid') TO s_browse[1].b_bmkacrtid
            DISPLAY abmt500_filter_parser('bmkacrtdt') TO s_browse[1].b_bmkacrtdt
            DISPLAY abmt500_filter_parser('bmkamodid') TO s_browse[1].b_bmkamodid
            DISPLAY abmt500_filter_parser('bmkamoddt') TO s_browse[1].b_bmkamoddt
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL abmt500_filter_show('bmkadocno')
   CALL abmt500_filter_show('bmkadocdt')
   CALL abmt500_filter_show('bmka001')
   CALL abmt500_filter_show('bmka002')
   CALL abmt500_filter_show('bmka003')
   CALL abmt500_filter_show('bmka009')
   CALL abmt500_filter_show('bmkacrtid')
   CALL abmt500_filter_show('bmkacrtdt')
   CALL abmt500_filter_show('bmkamodid')
   CALL abmt500_filter_show('bmkamoddt')
 
END FUNCTION
]]>
</section>
  <section id="abmt500.filter_parser" ver="1" status="" src="s">
<![CDATA[#+ filter過濾功能
PRIVATE FUNCTION abmt500_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
</section>
  <section id="abmt500.filter_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION abmt500_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = abmt500_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
</section>
  <section id="abmt500.global" ver="6" status="" src="s">
<![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_bmka_m        RECORD
       bmkadocno LIKE bmka_t.bmkadocno, 
   oobxl003 LIKE type_t.chr80, 
   bmkadocdt LIKE bmka_t.bmkadocdt, 
   bmka001 LIKE bmka_t.bmka001, 
   bmka001_desc LIKE type_t.chr80, 
   bmka002 LIKE bmka_t.bmka002, 
   bmka002_desc LIKE type_t.chr80, 
   bmka003 LIKE bmka_t.bmka003, 
   bmka003_desc LIKE type_t.chr80, 
   bmkastus LIKE bmka_t.bmkastus, 
   bmka004 LIKE bmka_t.bmka004, 
   bmka005 LIKE bmka_t.bmka005, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   bmka006 LIKE bmka_t.bmka006, 
   bmka007 LIKE bmka_t.bmka007, 
   bmka007_desc LIKE type_t.chr80, 
   bmka008 LIKE bmka_t.bmka008, 
   bmkasite LIKE bmka_t.bmkasite, 
   bmka009 LIKE bmka_t.bmka009, 
   bmka009_desc LIKE type_t.chr80, 
   bmka010 LIKE bmka_t.bmka010, 
   bmka011 LIKE bmka_t.bmka011, 
   bmka011_desc LIKE type_t.chr80, 
   bmka012 LIKE bmka_t.bmka012, 
   bmka012_desc LIKE type_t.chr80, 
   bmka013 LIKE bmka_t.bmka013, 
   bmkaownid LIKE bmka_t.bmkaownid, 
   bmkaownid_desc LIKE type_t.chr80, 
   bmkaowndp LIKE bmka_t.bmkaowndp, 
   bmkaowndp_desc LIKE type_t.chr80, 
   bmkacrtid LIKE bmka_t.bmkacrtid, 
   bmkacrtid_desc LIKE type_t.chr80, 
   bmkacrtdp LIKE bmka_t.bmkacrtdp, 
   bmkacrtdp_desc LIKE type_t.chr80, 
   bmkacrtdt DATETIME YEAR TO SECOND, 
   bmkamodid LIKE bmka_t.bmkamodid, 
   bmkamodid_desc LIKE type_t.chr80, 
   bmkamoddt DATETIME YEAR TO SECOND, 
   bmkacnfid LIKE bmka_t.bmkacnfid, 
   bmkacnfid_desc LIKE type_t.chr80, 
   bmkacnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bmkb_d        RECORD
       bmkbseq LIKE bmkb_t.bmkbseq, 
   bmkb001 LIKE bmkb_t.bmkb001, 
   bmkb001_desc LIKE type_t.chr500, 
   bmkbseq1 LIKE bmkb_t.bmkbseq1, 
   bmkb002 LIKE bmkb_t.bmkb002, 
   bmkb002_desc LIKE type_t.chr500, 
   bmkb003 LIKE bmkb_t.bmkb003, 
   bmkb004 LIKE bmkb_t.bmkb004, 
   bmkbsite LIKE bmkb_t.bmkbsite
       END RECORD
PRIVATE TYPE type_g_bmkb2_d RECORD
       bmkcseq LIKE bmkc_t.bmkcseq, 
   bmkc001 LIKE bmkc_t.bmkc001, 
   bmkc002 LIKE bmkc_t.bmkc002, 
   bmkc002_desc LIKE type_t.chr500, 
   bmkc003 LIKE bmkc_t.bmkc003, 
   bmkc004 LIKE bmkc_t.bmkc004, 
   bmkcsite LIKE bmkc_t.bmkcsite
       END RECORD
PRIVATE TYPE type_g_bmkb3_d RECORD
       bmkdseq LIKE bmkd_t.bmkdseq, 
   bmkd001 LIKE bmkd_t.bmkd001, 
   bmkd001_desc LIKE type_t.chr500, 
   bmkdseq1 LIKE bmkd_t.bmkdseq1, 
   bmkd002 LIKE bmkd_t.bmkd002, 
   bmkd002_desc LIKE type_t.chr500, 
   bmkd003 LIKE bmkd_t.bmkd003, 
   bmkd004 LIKE bmkd_t.bmkd004, 
   bmkdsite LIKE bmkd_t.bmkdsite
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_bmka_m          type_g_bmka_m
DEFINE g_bmka_m_t        type_g_bmka_m
DEFINE g_bmka_m_o        type_g_bmka_m
 
   DEFINE g_bmkadocno_t LIKE bmka_t.bmkadocno
 
 
DEFINE g_bmkb_d          DYNAMIC ARRAY OF type_g_bmkb_d
DEFINE g_bmkb_d_t        type_g_bmkb_d
DEFINE g_bmkb_d_o        type_g_bmkb_d
DEFINE g_bmkb2_d   DYNAMIC ARRAY OF type_g_bmkb2_d
DEFINE g_bmkb2_d_t type_g_bmkb2_d
DEFINE g_bmkb2_d_o type_g_bmkb2_d
DEFINE g_bmkb3_d   DYNAMIC ARRAY OF type_g_bmkb3_d
DEFINE g_bmkb3_d_t type_g_bmkb3_d
DEFINE g_bmkb3_d_o type_g_bmkb3_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmkadocno LIKE bmka_t.bmkadocno,
      b_bmkadocdt LIKE bmka_t.bmkadocdt,
      b_bmka001 LIKE bmka_t.bmka001,
   b_bmka001_desc LIKE type_t.chr80,
      b_bmka002 LIKE bmka_t.bmka002,
   b_bmka002_desc LIKE type_t.chr80,
      b_bmka003 LIKE bmka_t.bmka003,
   b_bmka003_desc LIKE type_t.chr80,
      b_bmka009 LIKE bmka_t.bmka009,
   b_bmka009_desc LIKE type_t.chr80,
      b_bmkacrtid LIKE bmka_t.bmkacrtid,
   b_bmkacrtid_desc LIKE type_t.chr80,
      b_bmkacrtdt LIKE bmka_t.bmkacrtdt,
      b_bmkamodid LIKE bmka_t.bmkamodid,
   b_bmkamodid_desc LIKE type_t.chr80,
      b_bmkamoddt LIKE bmka_t.bmkamoddt
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_bmkadocno LIKE bmka_t.bmkadocno,
      b_bmkadocdt LIKE bmka_t.bmkadocdt,
      b_bmka001 LIKE bmka_t.bmka001,
   b_bmka001_desc LIKE type_t.chr80,
      b_bmka002 LIKE bmka_t.bmka002,
   b_bmka002_desc LIKE type_t.chr80,
      b_bmka003 LIKE bmka_t.bmka003,
   b_bmka003_desc LIKE type_t.chr80,
      b_bmka009 LIKE bmka_t.bmka009,
   b_bmka009_desc LIKE type_t.chr80,
      b_bmkacrtid LIKE bmka_t.bmkacrtid,
   b_bmkacrtid_desc LIKE type_t.chr80,
      b_bmkacrtdt LIKE bmka_t.bmkacrtdt,
      b_bmkamodid LIKE bmka_t.bmkamodid,
   b_bmkamodid_desc LIKE type_t.chr80,
      b_bmkamoddt LIKE bmka_t.bmkamoddt
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="abmt500.idx_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION abmt500_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmkb_d.getLength() THEN
         LET g_detail_idx = g_bmkb_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmkb_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmkb_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_bmkb2_d.getLength() THEN
         LET g_detail_idx = g_bmkb2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmkb2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmkb2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_bmkb3_d.getLength() THEN
         LET g_detail_idx = g_bmkb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmkb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmkb3_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="abmt500.init" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abmt500_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('bmkastus','13','N,X,Y')
 
      CALL cl_set_combo_scc('bmkc001','5446') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL abmt500_default_search()
    
END FUNCTION
]]>
</section>
  <section id="abmt500.input" ver="3" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION abmt500_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT bmkbseq,bmkb001,bmkbseq1,bmkb002,bmkb003,bmkb004,bmkbsite FROM bmkb_t  
       WHERE bmkbent=? AND bmkbdocno=? AND bmkbseq=? AND bmkbseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt500_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmkcseq,bmkc001,bmkc002,bmkc003,bmkc004,bmkcsite FROM bmkc_t WHERE bmkcent=?  
       AND bmkcdocno=? AND bmkcseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt500_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmkdseq,bmkd001,bmkdseq1,bmkd002,bmkd003,bmkd004,bmkdsite FROM bmkd_t  
       WHERE bmkdent=? AND bmkddocno=? AND bmkdseq=? AND bmkdseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt500_bcl3 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abmt500_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL abmt500_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt,g_bmka_m.bmka001,g_bmka_m.bmka002,g_bmka_m.bmka003, 
       g_bmka_m.bmkastus,g_bmka_m.bmka004,g_bmka_m.bmka005,g_bmka_m.imaal003,g_bmka_m.imaal004,g_bmka_m.bmka006, 
       g_bmka_m.bmka007,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010,g_bmka_m.bmka011, 
       g_bmka_m.bmka012,g_bmka_m.bmka013
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
</section>
  <section id="abmt500.input.body" ver="3" status="" src="s">
<![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmkb_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmkb_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt500_b_fill()
            LET g_rec_b = g_bmkb_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt500_cl USING g_enterprise,g_bmka_m.bmkadocno
            IF STATUS THEN
               CALL cl_err("OPEN abmt500_cl:", STATUS, 1)
               CLOSE abmt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmkb_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmkb_d[l_ac].bmkbseq IS NOT NULL
               AND g_bmkb_d[l_ac].bmkbseq1 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bmkb_d_t.* = g_bmkb_d[l_ac].*  #BACKUP
               LET g_bmkb_d_o.* = g_bmkb_d[l_ac].*  #BACKUP
               CALL abmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL abmt500_set_no_entry_b(l_cmd)
               IF NOT abmt500_lock_b("bmkb_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt500_bcl INTO g_bmkb_d[l_ac].bmkbseq,g_bmkb_d[l_ac].bmkb001,g_bmkb_d[l_ac].bmkbseq1, 
                      g_bmkb_d[l_ac].bmkb002,g_bmkb_d[l_ac].bmkb003,g_bmkb_d[l_ac].bmkb004,g_bmkb_d[l_ac].bmkbsite 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_bmkb_d_t.bmkbseq,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmkb_d[l_ac].* TO NULL 
            INITIALIZE g_bmkb_d_t.* TO NULL 
            INITIALIZE g_bmkb_d_o.* TO NULL 
                  LET g_bmkb_d[l_ac].bmkb003 = "N"
 
            LET g_bmkb_d_t.* = g_bmkb_d[l_ac].*     #新輸入資料
            LET g_bmkb_d_o.* = g_bmkb_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmkb_d[li_reproduce_target].* = g_bmkb_d[li_reproduce].*
 
               LET g_bmkb_d[li_reproduce_target].bmkbseq = NULL
               LET g_bmkb_d[li_reproduce_target].bmkbseq1 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmkb_t 
             WHERE bmkbent = g_enterprise AND bmkbdocno = g_bmka_m.bmkadocno
 
               AND bmkbseq = g_bmkb_d[l_ac].bmkbseq
               AND bmkbseq1 = g_bmkb_d[l_ac].bmkbseq1
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys[2] = g_bmkb_d[g_detail_idx].bmkbseq
               LET gs_keys[3] = g_bmkb_d[g_detail_idx].bmkbseq1
               CALL abmt500_insert_b('bmkb_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmkb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmkb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmkb_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmkb_d.deleteElement(l_ac)
               NEXT FIELD bmkbseq
            END IF
         
            IF g_bmkb_d[l_ac].bmkbseq IS NOT NULL
               AND g_bmkb_d_t.bmkbseq1 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM bmkb_t
                WHERE bmkbent = g_enterprise AND bmkbdocno = g_bmka_m.bmkadocno AND
 
                      bmkbseq = g_bmkb_d_t.bmkbseq
                  AND bmkbseq1 = g_bmkb_d_t.bmkbseq1
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmkb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmt500_bcl
               LET l_count = g_bmkb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys[2] = g_bmkb_d[g_detail_idx].bmkbseq
               LET gs_keys[3] = g_bmkb_d[g_detail_idx].bmkbseq1
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL abmt500_delete_b('bmkb_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD bmkbseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmkb_d[l_ac].bmkbseq,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmkbseq
            END IF
 
 
            #add-point:AFTER FIELD bmkbseq
            {<point name="input.a.page1.bmkbseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkbseq
            #add-point:BEFORE FIELD bmkbseq
            {<point name="input.b.page1.bmkbseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkbseq
            #add-point:ON CHANGE bmkbseq
            {<point name="input.g.page1.bmkbseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb001
            
            #add-point:AFTER FIELD bmkb001
            {<point name="input.a.page1.bmkb001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb001
            #add-point:BEFORE FIELD bmkb001
            {<point name="input.b.page1.bmkb001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkb001
            #add-point:ON CHANGE bmkb001
            {<point name="input.g.page1.bmkb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkbseq1
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmkb_d[l_ac].bmkbseq1,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmkbseq1
            END IF
 
 
            #add-point:AFTER FIELD bmkbseq1
            {<point name="input.a.page1.bmkbseq1" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkbseq1
            #add-point:BEFORE FIELD bmkbseq1
            {<point name="input.b.page1.bmkbseq1" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkbseq1
            #add-point:ON CHANGE bmkbseq1
            {<point name="input.g.page1.bmkbseq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb002
            
            #add-point:AFTER FIELD bmkb002
            {<point name="input.a.page1.bmkb002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb002
            #add-point:BEFORE FIELD bmkb002
            {<point name="input.b.page1.bmkb002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkb002
            #add-point:ON CHANGE bmkb002
            {<point name="input.g.page1.bmkb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb003
            #add-point:BEFORE FIELD bmkb003
            {<point name="input.b.page1.bmkb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb003
            
            #add-point:AFTER FIELD bmkb003
            {<point name="input.a.page1.bmkb003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkb003
            #add-point:ON CHANGE bmkb003
            {<point name="input.g.page1.bmkb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkb004
            #add-point:BEFORE FIELD bmkb004
            {<point name="input.b.page1.bmkb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkb004
            
            #add-point:AFTER FIELD bmkb004
            {<point name="input.a.page1.bmkb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkb004
            #add-point:ON CHANGE bmkb004
            {<point name="input.g.page1.bmkb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkbsite
            #add-point:BEFORE FIELD bmkbsite
            {<point name="input.b.page1.bmkbsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkbsite
            
            #add-point:AFTER FIELD bmkbsite
            {<point name="input.a.page1.bmkbsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkbsite
            #add-point:ON CHANGE bmkbsite
            {<point name="input.g.page1.bmkbsite" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.bmkbseq
         ON ACTION controlp INFIELD bmkbseq
            #add-point:ON ACTION controlp INFIELD bmkbseq
            {<point name="input.c.page1.bmkbseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmkb001
         ON ACTION controlp INFIELD bmkb001
            #add-point:ON ACTION controlp INFIELD bmkb001
            {<point name="input.c.page1.bmkb001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmkbseq1
         ON ACTION controlp INFIELD bmkbseq1
            #add-point:ON ACTION controlp INFIELD bmkbseq1
            {<point name="input.c.page1.bmkbseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmkb002
         ON ACTION controlp INFIELD bmkb002
            #add-point:ON ACTION controlp INFIELD bmkb002
            {<point name="input.c.page1.bmkb002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmkb003
         ON ACTION controlp INFIELD bmkb003
            #add-point:ON ACTION controlp INFIELD bmkb003
            {<point name="input.c.page1.bmkb003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmkb004
         ON ACTION controlp INFIELD bmkb004
            #add-point:ON ACTION controlp INFIELD bmkb004
            {<point name="input.c.page1.bmkb004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmkbsite
         ON ACTION controlp INFIELD bmkbsite
            #add-point:ON ACTION controlp INFIELD bmkbsite
            {<point name="input.c.page1.bmkbsite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmkb_d[l_ac].* = g_bmkb_d_t.*
               CLOSE abmt500_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_bmkb_d[l_ac].bmkbseq,-263,1)
               LET g_bmkb_d[l_ac].* = g_bmkb_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE bmkb_t SET (bmkbdocno,bmkbseq,bmkb001,bmkbseq1,bmkb002,bmkb003,bmkb004,bmkbsite) = (g_bmka_m.bmkadocno, 
                   g_bmkb_d[l_ac].bmkbseq,g_bmkb_d[l_ac].bmkb001,g_bmkb_d[l_ac].bmkbseq1,g_bmkb_d[l_ac].bmkb002, 
                   g_bmkb_d[l_ac].bmkb003,g_bmkb_d[l_ac].bmkb004,g_bmkb_d[l_ac].bmkbsite)
                WHERE bmkbent = g_enterprise AND bmkbdocno = g_bmka_m.bmkadocno 
 
                  AND bmkbseq = g_bmkb_d_t.bmkbseq #項次   
                  AND bmkbseq1 = g_bmkb_d_t.bmkbseq1  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmkb_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmkb_d[l_ac].* = g_bmkb_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmkb_t",SQLCA.sqlcode,1)
                     LET g_bmkb_d[l_ac].* = g_bmkb_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys_bak[1] = g_bmkadocno_t
               LET gs_keys[2] = g_bmkb_d[g_detail_idx].bmkbseq
               LET gs_keys_bak[2] = g_bmkb_d_t.bmkbseq
               LET gs_keys[3] = g_bmkb_d[g_detail_idx].bmkbseq1
               LET gs_keys_bak[3] = g_bmkb_d_t.bmkbseq1
               CALL abmt500_update_b('bmkb_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_bmka_m),util.JSON.stringify(g_bmkb_d_t)
               LET g_log2 = util.JSON.stringify(g_bmka_m),util.JSON.stringify(g_bmkb_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL abmt500_unlock_b("bmkb_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_bmkb_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmkb_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_bmkb2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmkb2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt500_b_fill()
            LET g_rec_b = g_bmkb2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmkb2_d[l_ac].* TO NULL 
            INITIALIZE g_bmkb2_d_t.* TO NULL 
            INITIALIZE g_bmkb2_d_o.* TO NULL 
                  LET g_bmkb2_d[l_ac].bmkc003 = "0"
 
            LET g_bmkb2_d_t.* = g_bmkb2_d[l_ac].*     #新輸入資料
            LET g_bmkb2_d_o.* = g_bmkb2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmkb2_d[li_reproduce_target].* = g_bmkb2_d[li_reproduce].*
 
               LET g_bmkb2_d[li_reproduce_target].bmkcseq = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt500_cl USING g_enterprise,g_bmka_m.bmkadocno
            IF STATUS THEN
               CALL cl_err("OPEN abmt500_cl:", STATUS, 1)
               CLOSE abmt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmkb2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmkb2_d[l_ac].bmkcseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmkb2_d_t.* = g_bmkb2_d[l_ac].*  #BACKUP
               LET g_bmkb2_d_o.* = g_bmkb2_d[l_ac].*  #BACKUP
               CALL abmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL abmt500_set_no_entry_b(l_cmd)
               IF NOT abmt500_lock_b("bmkc_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt500_bcl2 INTO g_bmkb2_d[l_ac].bmkcseq,g_bmkb2_d[l_ac].bmkc001,g_bmkb2_d[l_ac].bmkc002, 
                      g_bmkb2_d[l_ac].bmkc003,g_bmkb2_d[l_ac].bmkc004,g_bmkb2_d[l_ac].bmkcsite
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmkb2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmkb2_d.deleteElement(l_ac)
               NEXT FIELD bmkcseq
            END IF
         
            IF g_bmkb2_d[l_ac].bmkcseq IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM bmkc_t
                WHERE bmkcent = g_enterprise AND bmkcdocno = g_bmka_m.bmkadocno AND
                      bmkcseq = g_bmkb2_d_t.bmkcseq
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmkb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmt500_bcl
               LET l_count = g_bmkb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys[2] = g_bmkb2_d[g_detail_idx].bmkcseq
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL abmt500_delete_b('bmkc_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmkc_t 
             WHERE bmkcent = g_enterprise AND bmkcdocno = g_bmka_m.bmkadocno
               AND bmkcseq = g_bmkb2_d[l_ac].bmkcseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys[2] = g_bmkb2_d[g_detail_idx].bmkcseq
               CALL abmt500_insert_b('bmkc_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmkb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmkc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmkb2_d[l_ac].* = g_bmkb2_d_t.*
               CLOSE abmt500_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_bmkb2_d[l_ac].* = g_bmkb2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE bmkc_t SET (bmkcdocno,bmkcseq,bmkc001,bmkc002,bmkc003,bmkc004,bmkcsite) = (g_bmka_m.bmkadocno, 
                   g_bmkb2_d[l_ac].bmkcseq,g_bmkb2_d[l_ac].bmkc001,g_bmkb2_d[l_ac].bmkc002,g_bmkb2_d[l_ac].bmkc003, 
                   g_bmkb2_d[l_ac].bmkc004,g_bmkb2_d[l_ac].bmkcsite) #自訂欄位頁簽
                WHERE bmkcent = g_enterprise AND bmkcdocno = g_bmka_m.bmkadocno
                  AND bmkcseq = g_bmkb2_d_t.bmkcseq #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmkc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmkb2_d[l_ac].* = g_bmkb2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmkc_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_bmkb2_d[l_ac].* = g_bmkb2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys_bak[1] = g_bmkadocno_t
               LET gs_keys[2] = g_bmkb2_d[g_detail_idx].bmkcseq
               LET gs_keys_bak[2] = g_bmkb2_d_t.bmkcseq
               CALL abmt500_update_b('bmkc_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_bmka_m),util.JSON.stringify(g_bmkb2_d_t)
               LET g_log2 = util.JSON.stringify(g_bmka_m),util.JSON.stringify(g_bmkb2_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD bmkcseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmkb2_d[l_ac].bmkcseq,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmkcseq
            END IF
 
 
            #add-point:AFTER FIELD bmkcseq
            {<point name="input.a.page2.bmkcseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkcseq
            #add-point:BEFORE FIELD bmkcseq
            {<point name="input.b.page2.bmkcseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkcseq
            #add-point:ON CHANGE bmkcseq
            {<point name="input.g.page2.bmkcseq" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc001
            #add-point:BEFORE FIELD bmkc001
            {<point name="input.b.page2.bmkc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc001
            
            #add-point:AFTER FIELD bmkc001
            {<point name="input.a.page2.bmkc001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkc001
            #add-point:ON CHANGE bmkc001
            {<point name="input.g.page2.bmkc001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc002
            
            #add-point:AFTER FIELD bmkc002
            {<point name="input.a.page2.bmkc002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc002
            #add-point:BEFORE FIELD bmkc002
            {<point name="input.b.page2.bmkc002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkc002
            #add-point:ON CHANGE bmkc002
            {<point name="input.g.page2.bmkc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc003
            #add-point:BEFORE FIELD bmkc003
            {<point name="input.b.page2.bmkc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc003
            
            #add-point:AFTER FIELD bmkc003
            {<point name="input.a.page2.bmkc003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkc003
            #add-point:ON CHANGE bmkc003
            {<point name="input.g.page2.bmkc003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkc004
            #add-point:BEFORE FIELD bmkc004
            {<point name="input.b.page2.bmkc004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkc004
            
            #add-point:AFTER FIELD bmkc004
            {<point name="input.a.page2.bmkc004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkc004
            #add-point:ON CHANGE bmkc004
            {<point name="input.g.page2.bmkc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkcsite
            #add-point:BEFORE FIELD bmkcsite
            {<point name="input.b.page2.bmkcsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkcsite
            
            #add-point:AFTER FIELD bmkcsite
            {<point name="input.a.page2.bmkcsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkcsite
            #add-point:ON CHANGE bmkcsite
            {<point name="input.g.page2.bmkcsite" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.bmkcseq
         ON ACTION controlp INFIELD bmkcseq
            #add-point:ON ACTION controlp INFIELD bmkcseq
            {<point name="input.c.page2.bmkcseq" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmkc001
         ON ACTION controlp INFIELD bmkc001
            #add-point:ON ACTION controlp INFIELD bmkc001
            {<point name="input.c.page2.bmkc001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmkc002
         ON ACTION controlp INFIELD bmkc002
            #add-point:ON ACTION controlp INFIELD bmkc002
            {<point name="input.c.page2.bmkc002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmkc003
         ON ACTION controlp INFIELD bmkc003
            #add-point:ON ACTION controlp INFIELD bmkc003
            {<point name="input.c.page2.bmkc003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmkc004
         ON ACTION controlp INFIELD bmkc004
            #add-point:ON ACTION controlp INFIELD bmkc004
            {<point name="input.c.page2.bmkc004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmkcsite
         ON ACTION controlp INFIELD bmkcsite
            #add-point:ON ACTION controlp INFIELD bmkcsite
            {<point name="input.c.page2.bmkcsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmkb2_d[l_ac].* = g_bmkb2_d_t.*
               END IF
               CLOSE abmt500_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmt500_unlock_b("bmkc_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmkb2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmkb2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_bmkb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmkb3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt500_b_fill()
            LET g_rec_b = g_bmkb3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmkb3_d[l_ac].* TO NULL 
            INITIALIZE g_bmkb3_d_t.* TO NULL 
            INITIALIZE g_bmkb3_d_o.* TO NULL 
                  LET g_bmkb3_d[l_ac].bmkd003 = "N"
 
            LET g_bmkb3_d_t.* = g_bmkb3_d[l_ac].*     #新輸入資料
            LET g_bmkb3_d_o.* = g_bmkb3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt500_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt500_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmkb3_d[li_reproduce_target].* = g_bmkb3_d[li_reproduce].*
 
               LET g_bmkb3_d[li_reproduce_target].bmkdseq = NULL
               LET g_bmkb3_d[li_reproduce_target].bmkdseq1 = NULL
            END IF
            #公用欄位給值(單身3)
            
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt500_cl USING g_enterprise,g_bmka_m.bmkadocno
            IF STATUS THEN
               CALL cl_err("OPEN abmt500_cl:", STATUS, 1)
               CLOSE abmt500_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmkb3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmkb3_d[l_ac].bmkdseq IS NOT NULL
               AND g_bmkb3_d[l_ac].bmkdseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmkb3_d_t.* = g_bmkb3_d[l_ac].*  #BACKUP
               LET g_bmkb3_d_o.* = g_bmkb3_d[l_ac].*  #BACKUP
               CALL abmt500_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL abmt500_set_no_entry_b(l_cmd)
               IF NOT abmt500_lock_b("bmkd_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt500_bcl3 INTO g_bmkb3_d[l_ac].bmkdseq,g_bmkb3_d[l_ac].bmkd001,g_bmkb3_d[l_ac].bmkdseq1, 
                      g_bmkb3_d[l_ac].bmkd002,g_bmkb3_d[l_ac].bmkd003,g_bmkb3_d[l_ac].bmkd004,g_bmkb3_d[l_ac].bmkdsite 

                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL abmt500_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_bmkb3_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_bmkb3_d.deleteElement(l_ac)
               NEXT FIELD bmkdseq
            END IF
         
            IF g_bmkb3_d[l_ac].bmkdseq IS NOT NULL
               AND g_bmkb3_d_t.bmkdseq1 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM bmkd_t
                WHERE bmkdent = g_enterprise AND bmkddocno = g_bmka_m.bmkadocno AND
                      bmkdseq = g_bmkb3_d_t.bmkdseq
                  AND bmkdseq1 = g_bmkb3_d_t.bmkdseq1
                  
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmkb_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmt500_bcl
               LET l_count = g_bmkb_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys[2] = g_bmkb3_d[g_detail_idx].bmkdseq
               LET gs_keys[3] = g_bmkb3_d[g_detail_idx].bmkdseq1
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL abmt500_delete_b('bmkd_t',gs_keys,"'3'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmkd_t 
             WHERE bmkdent = g_enterprise AND bmkddocno = g_bmka_m.bmkadocno
               AND bmkdseq = g_bmkb3_d[l_ac].bmkdseq
               AND bmkdseq1 = g_bmkb3_d[l_ac].bmkdseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys[2] = g_bmkb3_d[g_detail_idx].bmkdseq
               LET gs_keys[3] = g_bmkb3_d[g_detail_idx].bmkdseq1
               CALL abmt500_insert_b('bmkd_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_bmkb_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("bmkd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt500_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_bmkb3_d[l_ac].* = g_bmkb3_d_t.*
               CLOSE abmt500_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_bmkb3_d[l_ac].* = g_bmkb3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               UPDATE bmkd_t SET (bmkddocno,bmkdseq,bmkd001,bmkdseq1,bmkd002,bmkd003,bmkd004,bmkdsite) = (g_bmka_m.bmkadocno, 
                   g_bmkb3_d[l_ac].bmkdseq,g_bmkb3_d[l_ac].bmkd001,g_bmkb3_d[l_ac].bmkdseq1,g_bmkb3_d[l_ac].bmkd002, 
                   g_bmkb3_d[l_ac].bmkd003,g_bmkb3_d[l_ac].bmkd004,g_bmkb3_d[l_ac].bmkdsite) #自訂欄位頁簽 

                WHERE bmkdent = g_enterprise AND bmkddocno = g_bmka_m.bmkadocno
                  AND bmkdseq = g_bmkb3_d_t.bmkdseq #項次 
                  AND bmkdseq1 = g_bmkb3_d_t.bmkdseq1
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("bmkd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_bmkb3_d[l_ac].* = g_bmkb3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("bmkd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_bmkb3_d[l_ac].* = g_bmkb3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmka_m.bmkadocno
               LET gs_keys_bak[1] = g_bmkadocno_t
               LET gs_keys[2] = g_bmkb3_d[g_detail_idx].bmkdseq
               LET gs_keys_bak[2] = g_bmkb3_d_t.bmkdseq
               LET gs_keys[3] = g_bmkb3_d[g_detail_idx].bmkdseq1
               LET gs_keys_bak[3] = g_bmkb3_d_t.bmkdseq1
               CALL abmt500_update_b('bmkd_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
			   
               #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_bmka_m),util.JSON.stringify(g_bmkb3_d_t)
               LET g_log2 = util.JSON.stringify(g_bmka_m),util.JSON.stringify(g_bmkb3_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a02產生
         AFTER FIELD bmkdseq
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmkb3_d[l_ac].bmkdseq,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmkdseq
            END IF
 
 
            #add-point:AFTER FIELD bmkdseq
            {<point name="input.a.page3.bmkdseq" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkdseq
            #add-point:BEFORE FIELD bmkdseq
            {<point name="input.b.page3.bmkdseq" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkdseq
            #add-point:ON CHANGE bmkdseq
            {<point name="input.g.page3.bmkdseq" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd001
            
            #add-point:AFTER FIELD bmkd001
            {<point name="input.a.page3.bmkd001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd001
            #add-point:BEFORE FIELD bmkd001
            {<point name="input.b.page3.bmkd001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkd001
            #add-point:ON CHANGE bmkd001
            {<point name="input.g.page3.bmkd001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkdseq1
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_bmkb3_d[l_ac].bmkdseq1,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmkdseq1
            END IF
 
 
            #add-point:AFTER FIELD bmkdseq1
            {<point name="input.a.page3.bmkdseq1" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkdseq1
            #add-point:BEFORE FIELD bmkdseq1
            {<point name="input.b.page3.bmkdseq1" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkdseq1
            #add-point:ON CHANGE bmkdseq1
            {<point name="input.g.page3.bmkdseq1" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd002
            
            #add-point:AFTER FIELD bmkd002
            {<point name="input.a.page3.bmkd002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd002
            #add-point:BEFORE FIELD bmkd002
            {<point name="input.b.page3.bmkd002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmkd002
            #add-point:ON CHANGE bmkd002
            {<point name="input.g.page3.bmkd002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd003
            #add-point:BEFORE FIELD bmkd003
            {<point name="input.b.page3.bmkd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd003
            
            #add-point:AFTER FIELD bmkd003
            {<point name="input.a.page3.bmkd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkd003
            #add-point:ON CHANGE bmkd003
            {<point name="input.g.page3.bmkd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkd004
            #add-point:BEFORE FIELD bmkd004
            {<point name="input.b.page3.bmkd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkd004
            
            #add-point:AFTER FIELD bmkd004
            {<point name="input.a.page3.bmkd004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkd004
            #add-point:ON CHANGE bmkd004
            {<point name="input.g.page3.bmkd004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkdsite
            #add-point:BEFORE FIELD bmkdsite
            {<point name="input.b.page3.bmkdsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkdsite
            
            #add-point:AFTER FIELD bmkdsite
            {<point name="input.a.page3.bmkdsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkdsite
            #add-point:ON CHANGE bmkdsite
            {<point name="input.g.page3.bmkdsite" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page3.bmkdseq
         ON ACTION controlp INFIELD bmkdseq
            #add-point:ON ACTION controlp INFIELD bmkdseq
            {<point name="input.c.page3.bmkdseq" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmkd001
         ON ACTION controlp INFIELD bmkd001
            #add-point:ON ACTION controlp INFIELD bmkd001
            {<point name="input.c.page3.bmkd001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmkdseq1
         ON ACTION controlp INFIELD bmkdseq1
            #add-point:ON ACTION controlp INFIELD bmkdseq1
            {<point name="input.c.page3.bmkdseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmkd002
         ON ACTION controlp INFIELD bmkd002
            #add-point:ON ACTION controlp INFIELD bmkd002
            {<point name="input.c.page3.bmkd002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmkd003
         ON ACTION controlp INFIELD bmkd003
            #add-point:ON ACTION controlp INFIELD bmkd003
            {<point name="input.c.page3.bmkd003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmkd004
         ON ACTION controlp INFIELD bmkd004
            #add-point:ON ACTION controlp INFIELD bmkd004
            {<point name="input.c.page3.bmkd004" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmkdsite
         ON ACTION controlp INFIELD bmkdsite
            #add-point:ON ACTION controlp INFIELD bmkdsite
            {<point name="input.c.page3.bmkdsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmkb3_d[l_ac].* = g_bmkb3_d_t.*
               END IF
               CLOSE abmt500_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmt500_unlock_b("bmkd_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmkb3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmkb3_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
 
      
]]>
</section>
  <section id="abmt500.input.head" ver="4" status="" src="s">
<![CDATA[      #單頭段
      INPUT BY NAME g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt,g_bmka_m.bmka001,g_bmka_m.bmka002,g_bmka_m.bmka003, 
          g_bmka_m.bmkastus,g_bmka_m.bmka004,g_bmka_m.bmka005,g_bmka_m.imaal003,g_bmka_m.imaal004,g_bmka_m.bmka006, 
          g_bmka_m.bmka007,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010,g_bmka_m.bmka011, 
          g_bmka_m.bmka012,g_bmka_m.bmka013 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a01產生
         BEFORE FIELD bmkadocno
            #add-point:BEFORE FIELD bmkadocno
            {<point name="input.b.bmkadocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkadocno
            
            #add-point:AFTER FIELD bmkadocno
            {<point name="input.a.bmkadocno" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkadocno
            #add-point:ON CHANGE bmkadocno
            {<point name="input.g.bmkadocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkadocdt
            #add-point:BEFORE FIELD bmkadocdt
            {<point name="input.b.bmkadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkadocdt
            
            #add-point:AFTER FIELD bmkadocdt
            {<point name="input.a.bmkadocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkadocdt
            #add-point:ON CHANGE bmkadocdt
            {<point name="input.g.bmkadocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka001
            
            #add-point:AFTER FIELD bmka001
            {<point name="input.a.bmka001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka001
            #add-point:BEFORE FIELD bmka001
            {<point name="input.b.bmka001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka001
            #add-point:ON CHANGE bmka001
            {<point name="input.g.bmka001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka002
            
            #add-point:AFTER FIELD bmka002
            {<point name="input.a.bmka002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka002
            #add-point:BEFORE FIELD bmka002
            {<point name="input.b.bmka002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka002
            #add-point:ON CHANGE bmka002
            {<point name="input.g.bmka002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka003
            
            #add-point:AFTER FIELD bmka003
            {<point name="input.a.bmka003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka003
            #add-point:BEFORE FIELD bmka003
            {<point name="input.b.bmka003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka003
            #add-point:ON CHANGE bmka003
            {<point name="input.g.bmka003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkastus
            #add-point:BEFORE FIELD bmkastus
            {<point name="input.b.bmkastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkastus
            
            #add-point:AFTER FIELD bmkastus
            {<point name="input.a.bmkastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkastus
            #add-point:ON CHANGE bmkastus
            {<point name="input.g.bmkastus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka004
            #add-point:BEFORE FIELD bmka004
            {<point name="input.b.bmka004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka004
            
            #add-point:AFTER FIELD bmka004
            {<point name="input.a.bmka004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmka004
            #add-point:ON CHANGE bmka004
            {<point name="input.g.bmka004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka005
            
            #add-point:AFTER FIELD bmka005
            {<point name="input.a.bmka005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka005
            #add-point:BEFORE FIELD bmka005
            {<point name="input.b.bmka005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka005
            #add-point:ON CHANGE bmka005
            {<point name="input.g.bmka005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="input.b.imaal003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="input.a.imaal003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal003
            #add-point:ON CHANGE imaal003
            {<point name="input.g.imaal003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="input.b.imaal004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="input.a.imaal004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE imaal004
            #add-point:ON CHANGE imaal004
            {<point name="input.g.imaal004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka006
            #add-point:BEFORE FIELD bmka006
            {<point name="input.b.bmka006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka006
            
            #add-point:AFTER FIELD bmka006
            {<point name="input.a.bmka006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmka006
            #add-point:ON CHANGE bmka006
            {<point name="input.g.bmka006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka007
            
            #add-point:AFTER FIELD bmka007
            {<point name="input.a.bmka007" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka007
            #add-point:BEFORE FIELD bmka007
            {<point name="input.b.bmka007" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka007
            #add-point:ON CHANGE bmka007
            {<point name="input.g.bmka007" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka008
            #add-point:BEFORE FIELD bmka008
            {<point name="input.b.bmka008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka008
            
            #add-point:AFTER FIELD bmka008
            {<point name="input.a.bmka008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmka008
            #add-point:ON CHANGE bmka008
            {<point name="input.g.bmka008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmkasite
            #add-point:BEFORE FIELD bmkasite
            {<point name="input.b.bmkasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmkasite
            
            #add-point:AFTER FIELD bmkasite
            {<point name="input.a.bmkasite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmkasite
            #add-point:ON CHANGE bmkasite
            {<point name="input.g.bmkasite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka009
            
            #add-point:AFTER FIELD bmka009
            {<point name="input.a.bmka009" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka009
            #add-point:BEFORE FIELD bmka009
            {<point name="input.b.bmka009" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka009
            #add-point:ON CHANGE bmka009
            {<point name="input.g.bmka009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka010
            #add-point:BEFORE FIELD bmka010
            {<point name="input.b.bmka010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka010
            
            #add-point:AFTER FIELD bmka010
            {<point name="input.a.bmka010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmka010
            #add-point:ON CHANGE bmka010
            {<point name="input.g.bmka010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka011
            
            #add-point:AFTER FIELD bmka011
            {<point name="input.a.bmka011" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka011
            #add-point:BEFORE FIELD bmka011
            {<point name="input.b.bmka011" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka011
            #add-point:ON CHANGE bmka011
            {<point name="input.g.bmka011" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka012
            
            #add-point:AFTER FIELD bmka012
            {<point name="input.a.bmka012" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka012
            #add-point:BEFORE FIELD bmka012
            {<point name="input.b.bmka012" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE bmka012
            #add-point:ON CHANGE bmka012
            {<point name="input.g.bmka012" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD bmka013
            #add-point:BEFORE FIELD bmka013
            {<point name="input.b.bmka013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD bmka013
            
            #add-point:AFTER FIELD bmka013
            {<point name="input.a.bmka013" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE bmka013
            #add-point:ON CHANGE bmka013
            {<point name="input.g.bmka013" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.bmkadocno
         ON ACTION controlp INFIELD bmkadocno
            #add-point:ON ACTION controlp INFIELD bmkadocno
            {<point name="input.c.bmkadocno" />}
            #END add-point
 
         #Ctrlp:input.c.bmkadocdt
         ON ACTION controlp INFIELD bmkadocdt
            #add-point:ON ACTION controlp INFIELD bmkadocdt
            {<point name="input.c.bmkadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.bmka001
         ON ACTION controlp INFIELD bmka001
            #add-point:ON ACTION controlp INFIELD bmka001
            {<point name="input.c.bmka001" />}
            #END add-point
 
         #Ctrlp:input.c.bmka002
         ON ACTION controlp INFIELD bmka002
            #add-point:ON ACTION controlp INFIELD bmka002
            {<point name="input.c.bmka002" />}
            #END add-point
 
         #Ctrlp:input.c.bmka003
         ON ACTION controlp INFIELD bmka003
            #add-point:ON ACTION controlp INFIELD bmka003
            {<point name="input.c.bmka003" />}
            #END add-point
 
         #Ctrlp:input.c.bmkastus
         ON ACTION controlp INFIELD bmkastus
            #add-point:ON ACTION controlp INFIELD bmkastus
            {<point name="input.c.bmkastus" />}
            #END add-point
 
         #Ctrlp:input.c.bmka004
         ON ACTION controlp INFIELD bmka004
            #add-point:ON ACTION controlp INFIELD bmka004
            {<point name="input.c.bmka004" />}
            #END add-point
 
         #Ctrlp:input.c.bmka005
         ON ACTION controlp INFIELD bmka005
            #add-point:ON ACTION controlp INFIELD bmka005
            {<point name="input.c.bmka005" />}
            #END add-point
 
         #Ctrlp:input.c.imaal003
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="input.c.imaal003" />}
            #END add-point
 
         #Ctrlp:input.c.imaal004
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="input.c.imaal004" />}
            #END add-point
 
         #Ctrlp:input.c.bmka006
         ON ACTION controlp INFIELD bmka006
            #add-point:ON ACTION controlp INFIELD bmka006
            {<point name="input.c.bmka006" />}
            #END add-point
 
         #Ctrlp:input.c.bmka007
         ON ACTION controlp INFIELD bmka007
            #add-point:ON ACTION controlp INFIELD bmka007
            {<point name="input.c.bmka007" />}
            #END add-point
 
         #Ctrlp:input.c.bmka008
         ON ACTION controlp INFIELD bmka008
            #add-point:ON ACTION controlp INFIELD bmka008
            {<point name="input.c.bmka008" />}
            #END add-point
 
         #Ctrlp:input.c.bmkasite
         ON ACTION controlp INFIELD bmkasite
            #add-point:ON ACTION controlp INFIELD bmkasite
            {<point name="input.c.bmkasite" />}
            #END add-point
 
         #Ctrlp:input.c.bmka009
         ON ACTION controlp INFIELD bmka009
            #add-point:ON ACTION controlp INFIELD bmka009
            {<point name="input.c.bmka009" />}
            #END add-point
 
         #Ctrlp:input.c.bmka010
         ON ACTION controlp INFIELD bmka010
            #add-point:ON ACTION controlp INFIELD bmka010
            {<point name="input.c.bmka010" />}
            #END add-point
 
         #Ctrlp:input.c.bmka011
         ON ACTION controlp INFIELD bmka011
            #add-point:ON ACTION controlp INFIELD bmka011
            {<point name="input.c.bmka011" />}
            #END add-point
 
         #Ctrlp:input.c.bmka012
         ON ACTION controlp INFIELD bmka012
            #add-point:ON ACTION controlp INFIELD bmka012
            {<point name="input.c.bmka012" />}
            #END add-point
 
         #Ctrlp:input.c.bmka013
         ON ACTION controlp INFIELD bmka013
            #add-point:ON ACTION controlp INFIELD bmka013
            {<point name="input.c.bmka013" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_bmka_m.bmkadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO bmka_t (bmkaent,bmkadocno,bmkadocdt,bmka001,bmka002,bmka003,bmkastus,bmka004, 
                   bmka005,bmka006,bmka007,bmka008,bmkasite,bmka009,bmka010,bmka011,bmka012,bmka013, 
                   bmkaownid,bmkaowndp,bmkacrtid,bmkacrtdp,bmkacrtdt,bmkacnfid,bmkacnfdt)
               VALUES (g_enterprise,g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt,g_bmka_m.bmka001,g_bmka_m.bmka002, 
                   g_bmka_m.bmka003,g_bmka_m.bmkastus,g_bmka_m.bmka004,g_bmka_m.bmka005,g_bmka_m.bmka006, 
                   g_bmka_m.bmka007,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010, 
                   g_bmka_m.bmka011,g_bmka_m.bmka012,g_bmka_m.bmka013,g_bmka_m.bmkaownid,g_bmka_m.bmkaowndp, 
                   g_bmka_m.bmkacrtid,g_bmka_m.bmkacrtdp,g_bmka_m.bmkacrtdt,g_bmka_m.bmkacnfid,g_bmka_m.bmkacnfdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_bmka_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abmt500_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE bmka_t SET (bmkadocno,bmkadocdt,bmka001,bmka002,bmka003,bmkastus,bmka004,bmka005, 
                   bmka006,bmka007,bmka008,bmkasite,bmka009,bmka010,bmka011,bmka012,bmka013,bmkaownid, 
                   bmkaowndp,bmkacrtid,bmkacrtdp,bmkacrtdt,bmkacnfid,bmkacnfdt) = (g_bmka_m.bmkadocno, 
                   g_bmka_m.bmkadocdt,g_bmka_m.bmka001,g_bmka_m.bmka002,g_bmka_m.bmka003,g_bmka_m.bmkastus, 
                   g_bmka_m.bmka004,g_bmka_m.bmka005,g_bmka_m.bmka006,g_bmka_m.bmka007,g_bmka_m.bmka008, 
                   g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010,g_bmka_m.bmka011,g_bmka_m.bmka012, 
                   g_bmka_m.bmka013,g_bmka_m.bmkaownid,g_bmka_m.bmkaowndp,g_bmka_m.bmkacrtid,g_bmka_m.bmkacrtdp, 
                   g_bmka_m.bmkacrtdt,g_bmka_m.bmkacnfid,g_bmka_m.bmkacnfdt)
                WHERE bmkaent = g_enterprise AND bmkadocno = g_bmkadocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("bmka_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_bmka_m_t)
               LET g_log2 = util.JSON.stringify(g_bmka_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_bmkadocno_t = g_bmka_m.bmkadocno
 
            #controlp
            
      END INPUT
   
]]>
</section>
  <section id="abmt500.input.other" ver="1" status="" src="s">
<![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD bmkadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bmkbseq
               WHEN "s_detail2"
                  NEXT FIELD bmkcseq
               WHEN "s_detail3"
                  NEXT FIELD bmkdseq
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
</section>
  <section id="abmt500.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION abmt500_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_bmkb_d.clear()   
   CALL g_bmkb2_d.clear()  
   CALL g_bmkb3_d.clear()  
 
 
   INITIALIZE g_bmka_m.* LIKE bmka_t.*             #DEFAULT 設定
   
   LET g_bmkadocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_bmka_m.bmkaownid = g_user
      LET g_bmka_m.bmkaowndp = g_dept
      LET g_bmka_m.bmkacrtid = g_user
      LET g_bmka_m.bmkacrtdp = g_dept 
      LET g_bmka_m.bmkacrtdt = cl_get_current()
      LET g_bmka_m.bmkamodid = ""
      LET g_bmka_m.bmkamoddt = ""
      LET g_bmka_m.bmkastus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_bmka_m.bmkastus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL abmt500_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmka_m.* = g_bmka_m_t.*
         CALL abmt500_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_bmkb_d.clear()
      CALL g_bmkb2_d.clear()
      CALL g_bmkb3_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_bmkadocno_t = g_bmka_m.bmkadocno
 
   
   LET g_wc = "(",g_wc,  
              " OR ( bmkaent = '" ||g_enterprise|| "' AND",
              " bmkadocno = '", g_bmka_m.bmkadocno CLIPPED, "' "
 
              , ")) "
   
   CLOSE abmt500_cl
   
END FUNCTION
]]>
</section>
  <section id="abmt500.insert_b" ver="1" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION abmt500_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO bmkb_t
                  (bmkbent,
                   bmkbdocno,
                   bmkbseq,bmkbseq1
                   ,bmkb001,bmkb002,bmkb003,bmkb004,bmkbsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmkb_d[g_detail_idx].bmkb001,g_bmkb_d[g_detail_idx].bmkb002,g_bmkb_d[g_detail_idx].bmkb003, 
                       g_bmkb_d[g_detail_idx].bmkb004,g_bmkb_d[g_detail_idx].bmkbsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkb_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO bmkc_t
                  (bmkcent,
                   bmkcdocno,
                   bmkcseq
                   ,bmkc001,bmkc002,bmkc003,bmkc004,bmkcsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_bmkb2_d[g_detail_idx].bmkc001,g_bmkb2_d[g_detail_idx].bmkc002,g_bmkb2_d[g_detail_idx].bmkc003, 
                       g_bmkb2_d[g_detail_idx].bmkc004,g_bmkb2_d[g_detail_idx].bmkcsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO bmkd_t
                  (bmkdent,
                   bmkddocno,
                   bmkdseq,bmkdseq1
                   ,bmkd001,bmkd002,bmkd003,bmkd004,bmkdsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmkb3_d[g_detail_idx].bmkd001,g_bmkb3_d[g_detail_idx].bmkd002,g_bmkb3_d[g_detail_idx].bmkd003, 
                       g_bmkb3_d[g_detail_idx].bmkd004,g_bmkb3_d[g_detail_idx].bmkdsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("bmkd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
</section>
  <section id="abmt500.lock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION abmt500_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL abmt500_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bmkb_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN abmt500_bcl USING g_enterprise,
                                       g_bmka_m.bmkadocno,g_bmkb_d[g_detail_idx].bmkbseq,g_bmkb_d[g_detail_idx].bmkbseq1  
                                               
      IF SQLCA.sqlcode THEN
         CALL cl_err("abmt500_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "bmkc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmt500_bcl2 USING g_enterprise,
                                             g_bmka_m.bmkadocno,g_bmkb2_d[g_detail_idx].bmkcseq
      IF SQLCA.sqlcode THEN
         CALL cl_err("abmt500_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "bmkd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmt500_bcl3 USING g_enterprise,
                                             g_bmka_m.bmkadocno,g_bmkb3_d[g_detail_idx].bmkdseq,g_bmkb3_d[g_detail_idx].bmkdseq1 

      IF SQLCA.sqlcode THEN
         CALL cl_err("abmt500_bcl3",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="abmt500.main" ver="6" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT bmkadocno,'',bmkadocdt,bmka001,'',bmka002,'',bmka003,'',bmkastus,bmka004, 
       bmka005,'','',bmka006,bmka007,'',bmka008,bmkasite,bmka009,'',bmka010,bmka011,'',bmka012,'',bmka013, 
       bmkaownid,'',bmkaowndp,'',bmkacrtid,'',bmkacrtdp,'',bmkacrtdt,bmkamodid,'',bmkamoddt,bmkacnfid, 
       '',bmkacnfdt", 
                      " FROM bmka_t",
                      " WHERE bmkaent= ? AND bmkadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt500_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE bmkadocno,bmkadocdt,bmka001,bmka002,bmka003,bmkastus,bmka004,bmka005, 
       bmka006,bmka007,bmka008,bmkasite,bmka009,bmka010,bmka011,bmka012,bmka013,bmkaownid,bmkaowndp, 
       bmkacrtid,bmkacrtdp,bmkacrtdt,bmkamodid,bmkamoddt,bmkacnfid,bmkacnfdt,t1.bmjal003 ,t2.ooag011 , 
       t3.ooefl003 ,t4.oocql004 ,t5.pmaal003 ,t6.oocql004 ,t7.oocql004 ,t8.ooag011 ,t9.ooefl003 ,t10.ooag011 , 
       t11.ooefl003 ,t12.ooag011 ,t13.ooag011",
               " FROM bmka_t",
                              " LEFT JOIN bmjal_t t1 ON t1.bmjalent='"||g_enterprise||"' AND t1.bmjal001=bmka001 AND t1.bmjal002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=bmka002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=bmka003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t4 ON t4.oocqlent='"||g_enterprise||"' AND t4.oocql001='221' AND t4.oocql002=bmka007 AND t4.oocql003='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t5 ON t5.pmaalent='"||g_enterprise||"' AND t5.pmaal001=bmka009 AND t5.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='210' AND t6.oocql002=bmka011 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='210' AND t7.oocql002=bmka012 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=bmkaownid  ",
               " LEFT JOIN ooefl_t t9 ON t9.ooeflent='"||g_enterprise||"' AND t9.ooefl001=bmkaowndp AND t9.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=bmkacrtid  ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=bmkacrtdp AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent='"||g_enterprise||"' AND t12.ooag001=bmkamodid  ",
               " LEFT JOIN ooag_t t13 ON t13.ooagent='"||g_enterprise||"' AND t13.ooag001=bmkacnfid  ",
 
               " WHERE bmkaent = '" ||g_enterprise|| "' AND bmkadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE abmt500_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmt500 WITH FORM cl_ap_formpath("abm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abmt500_init()   
 
      #進入選單 Menu (="N")
      CALL abmt500_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abmt500
      
   END IF 
   
   CLOSE abmt500_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="abmt500.modify" ver="3" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION abmt500_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_bmka_m.bmkadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_bmkadocno_t = g_bmka_m.bmkadocno
 
   CALL s_transaction_begin()
   
   OPEN abmt500_cl USING g_enterprise,g_bmka_m.bmkadocno
   IF STATUS THEN
      CALL cl_err("OPEN abmt500_cl:", STATUS, 1)
      CLOSE abmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt500_master_referesh USING g_bmka_m.bmkadocno INTO g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt, 
       g_bmka_m.bmka001,g_bmka_m.bmka002,g_bmka_m.bmka003,g_bmka_m.bmkastus,g_bmka_m.bmka004,g_bmka_m.bmka005, 
       g_bmka_m.bmka006,g_bmka_m.bmka007,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010, 
       g_bmka_m.bmka011,g_bmka_m.bmka012,g_bmka_m.bmka013,g_bmka_m.bmkaownid,g_bmka_m.bmkaowndp,g_bmka_m.bmkacrtid, 
       g_bmka_m.bmkacrtdp,g_bmka_m.bmkacrtdt,g_bmka_m.bmkamodid,g_bmka_m.bmkamoddt,g_bmka_m.bmkacnfid, 
       g_bmka_m.bmkacnfdt,g_bmka_m.bmka001_desc,g_bmka_m.bmka002_desc,g_bmka_m.bmka003_desc,g_bmka_m.bmka007_desc, 
       g_bmka_m.bmka009_desc,g_bmka_m.bmka011_desc,g_bmka_m.bmka012_desc,g_bmka_m.bmkaownid_desc,g_bmka_m.bmkaowndp_desc, 
       g_bmka_m.bmkacrtid_desc,g_bmka_m.bmkacrtdp_desc,g_bmka_m.bmkamodid_desc,g_bmka_m.bmkacnfid_desc 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_bmka_m.bmkadocno,SQLCA.sqlcode,0)
      CLOSE abmt500_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL abmt500_show()
   WHILE TRUE
      LET g_bmkadocno_t = g_bmka_m.bmkadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_bmka_m.bmkamodid = g_user 
LET g_bmka_m.bmkamoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL abmt500_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmka_m.* = g_bmka_m_t.*
         CALL abmt500_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE bmka_t SET (bmkamodid,bmkamoddt) = (g_bmka_m.bmkamodid,g_bmka_m.bmkamoddt)
       WHERE bmkaent = g_enterprise AND bmkadocno = g_bmkadocno_t
 
                  
      #若單頭key欄位有變更
      IF g_bmka_m.bmkadocno != g_bmkadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE bmkb_t SET bmkbdocno = g_bmka_m.bmkadocno
 
          WHERE bmkbent = g_enterprise AND bmkbdocno = g_bmkadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmkb_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmkb_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE bmkc_t
            SET bmkcdocno = g_bmka_m.bmkadocno
 
          WHERE bmkcent = g_enterprise AND
                bmkcdocno = g_bmkadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmkc_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmkc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE bmkd_t
            SET bmkddocno = g_bmka_m.bmkadocno
 
          WHERE bmkdent = g_enterprise AND
                bmkddocno = g_bmkadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("bmkd_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("bmkd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_bmka_m.bmkadocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE abmt500_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_bmka_m.bmkadocno,'U')
 
END FUNCTION   
]]>
</section>
  <section id="abmt500.other_dialog" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="abmt500.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="abmt500.query" ver="2" status="" src="s">
<![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abmt500_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bmkb_d.clear()
   CALL g_bmkb2_d.clear()
   CALL g_bmkb3_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL abmt500_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL abmt500_browser_fill("")
      CALL abmt500_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL abmt500_filter_show('bmkadocno')
   CALL abmt500_filter_show('bmkadocdt')
   CALL abmt500_filter_show('bmka001')
   CALL abmt500_filter_show('bmka002')
   CALL abmt500_filter_show('bmka003')
   CALL abmt500_filter_show('bmka009')
   CALL abmt500_filter_show('bmkacrtid')
   CALL abmt500_filter_show('bmkacrtdt')
   CALL abmt500_filter_show('bmkamodid')
   CALL abmt500_filter_show('bmkamoddt')
   CALL abmt500_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL abmt500_fetch("F") 
   END IF
 
END FUNCTION
]]>
</section>
  <section id="abmt500.reproduce" ver="2" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION abmt500_reproduce()
   DEFINE l_newno     LIKE bmka_t.bmkadocno 
   DEFINE l_oldno     LIKE bmka_t.bmkadocno 
 
   DEFINE l_master    RECORD LIKE bmka_t.*
   DEFINE l_detail    RECORD LIKE bmkb_t.*
   DEFINE l_detail2    RECORD LIKE bmkc_t.*
 
   DEFINE l_detail3    RECORD LIKE bmkd_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_bmka_m.bmkadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_bmkadocno_t = g_bmka_m.bmkadocno
 
    
   LET g_bmka_m.bmkadocno = ""
 
    
   CALL abmt500_set_entry('a')
   CALL abmt500_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_bmka_m.bmkaownid = g_user
      LET g_bmka_m.bmkaowndp = g_dept
      LET g_bmka_m.bmkacrtid = g_user
      LET g_bmka_m.bmkacrtdp = g_dept 
      LET g_bmka_m.bmkacrtdt = cl_get_current()
      LET g_bmka_m.bmkamodid = ""
      LET g_bmka_m.bmkamoddt = ""
      LET g_bmka_m.bmkastus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL abmt500_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " bmkadocno = '", g_bmka_m.bmkadocno CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="abmt500.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION abmt500_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmkadocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="abmt500.set_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION abmt500_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
</section>
  <section id="abmt500.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION abmt500_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("bmkadocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="abmt500.set_no_entry_b" ver="1" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION abmt500_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
</section>
  <section id="abmt500.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION abmt500_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmka_m.bmkadocno
   LET g_pk_array[1].column = 'bmkadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="abmt500.show" ver="5" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abmt500_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL abmt500_b_fill() #單身填充
      CALL abmt500_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_bmka_m.bmkaownid_desc = cl_get_username(g_bmka_m.bmkaownid)
      #LET g_bmka_m.bmkaowndp_desc = cl_get_deptname(g_bmka_m.bmkaowndp)
      #LET g_bmka_m.bmkacrtid_desc = cl_get_username(g_bmka_m.bmkacrtid)
      #LET g_bmka_m.bmkacrtdp_desc = cl_get_deptname(g_bmka_m.bmkacrtdp)
      #LET g_bmka_m.bmkamodid_desc = cl_get_username(g_bmka_m.bmkamodid)
      #LET g_bmka_m.bmkacnfid_desc = cl_get_deptname(g_bmka_m.bmkacnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL abmt500_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmka_m.bmkadocno,g_bmka_m.oobxl003,g_bmka_m.bmkadocdt,g_bmka_m.bmka001,g_bmka_m.bmka001_desc, 
       g_bmka_m.bmka002,g_bmka_m.bmka002_desc,g_bmka_m.bmka003,g_bmka_m.bmka003_desc,g_bmka_m.bmkastus, 
       g_bmka_m.bmka004,g_bmka_m.bmka005,g_bmka_m.imaal003,g_bmka_m.imaal004,g_bmka_m.bmka006,g_bmka_m.bmka007, 
       g_bmka_m.bmka007_desc,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka009_desc, 
       g_bmka_m.bmka010,g_bmka_m.bmka011,g_bmka_m.bmka011_desc,g_bmka_m.bmka012,g_bmka_m.bmka012_desc, 
       g_bmka_m.bmka013,g_bmka_m.bmkaownid,g_bmka_m.bmkaownid_desc,g_bmka_m.bmkaowndp,g_bmka_m.bmkaowndp_desc, 
       g_bmka_m.bmkacrtid,g_bmka_m.bmkacrtid_desc,g_bmka_m.bmkacrtdp,g_bmka_m.bmkacrtdp_desc,g_bmka_m.bmkacrtdt, 
       g_bmka_m.bmkamodid,g_bmka_m.bmkamodid_desc,g_bmka_m.bmkamoddt,g_bmka_m.bmkacnfid,g_bmka_m.bmkacnfid_desc, 
       g_bmka_m.bmkacnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_bmka_m.bmkastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmkb_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_bmkb2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_bmkb3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL abmt500_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="abmt500.signature" ver="1" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="abmt500.state_change" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION abmt500_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_bmka_m.bmkadocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_bmka_m.bmkastus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE bmka_t SET bmkastus = lc_state 
    WHERE bmkaent = g_enterprise AND bmkadocno = g_bmka_m.bmkadocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_bmka_m.bmkastus = lc_state
      DISPLAY BY NAME g_bmka_m.bmkastus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
</section>
  <section id="abmt500.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abmt500_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmkadocno = g_bmka_m.bmkadocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="abmt500.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION abmt500_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
</section>
  <section id="abmt500.ui_dialog" ver="1" status="" src="s">
<![CDATA[#+ 功能選單
PRIVATE FUNCTION abmt500_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL abmt500_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL abmt500_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_bmkadocno = g_bmkadocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL abmt500_fetch('') # reload data
               LET l_ac = 1
               CALL abmt500_ui_detailshow() #Setting the current row 
      
               CALL abmt500_idx_chk()
               #NEXT FIELD bmkbseq
         
         END DISPLAY
        
         DISPLAY ARRAY g_bmkb_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL abmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL abmt500_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         DISPLAY ARRAY g_bmkb2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL abmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL abmt500_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         DISPLAY ARRAY g_bmkb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL abmt500_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               CALL abmt500_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmt500_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abmt500_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL abmt500_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL abmt500_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL abmt500_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL abmt500_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL abmt500_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL abmt500_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL abmt500_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt500_idx_chk()
            
         ON ACTION previous
            CALL abmt500_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt500_idx_chk()
            
         ON ACTION jump
            CALL abmt500_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt500_idx_chk()
            
         ON ACTION next
            CALL abmt500_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt500_idx_chk()
            
         ON ACTION last
            CALL abmt500_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt500_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD bmkbseq
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abmt500_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abmt500_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abmt500_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmt500_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL abmt500_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abmt500_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL abmt500_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abmt500_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abmt500_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_bmka_m.bmkadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
</section>
  <section id="abmt500.ui_headershow" ver="3" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION abmt500_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_bmka_m.bmkadocno = g_browser[g_current_idx].b_bmkadocno   
 
   EXECUTE abmt500_master_referesh USING g_bmka_m.bmkadocno INTO g_bmka_m.bmkadocno,g_bmka_m.bmkadocdt, 
       g_bmka_m.bmka001,g_bmka_m.bmka002,g_bmka_m.bmka003,g_bmka_m.bmkastus,g_bmka_m.bmka004,g_bmka_m.bmka005, 
       g_bmka_m.bmka006,g_bmka_m.bmka007,g_bmka_m.bmka008,g_bmka_m.bmkasite,g_bmka_m.bmka009,g_bmka_m.bmka010, 
       g_bmka_m.bmka011,g_bmka_m.bmka012,g_bmka_m.bmka013,g_bmka_m.bmkaownid,g_bmka_m.bmkaowndp,g_bmka_m.bmkacrtid, 
       g_bmka_m.bmkacrtdp,g_bmka_m.bmkacrtdt,g_bmka_m.bmkamodid,g_bmka_m.bmkamoddt,g_bmka_m.bmkacnfid, 
       g_bmka_m.bmkacnfdt,g_bmka_m.bmka001_desc,g_bmka_m.bmka002_desc,g_bmka_m.bmka003_desc,g_bmka_m.bmka007_desc, 
       g_bmka_m.bmka009_desc,g_bmka_m.bmka011_desc,g_bmka_m.bmka012_desc,g_bmka_m.bmkaownid_desc,g_bmka_m.bmkaowndp_desc, 
       g_bmka_m.bmkacrtid_desc,g_bmka_m.bmkacrtdp_desc,g_bmka_m.bmkamodid_desc,g_bmka_m.bmkacnfid_desc 

   CALL abmt500_show()
   
END FUNCTION
]]>
</section>
  <section id="abmt500.unlock_b" ver="1" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abmt500_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt500_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt500_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt500_bcl3
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
</section>
  <section id="abmt500.update_b" ver="1" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION abmt500_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmkb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE bmkb_t 
         SET (bmkbdocno,
              bmkbseq,bmkbseq1
              ,bmkb001,bmkb002,bmkb003,bmkb004,bmkbsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmkb_d[g_detail_idx].bmkb001,g_bmkb_d[g_detail_idx].bmkb002,g_bmkb_d[g_detail_idx].bmkb003, 
                  g_bmkb_d[g_detail_idx].bmkb004,g_bmkb_d[g_detail_idx].bmkbsite) 
         WHERE bmkbent = g_enterprise AND bmkbdocno = ps_keys_bak[1] AND bmkbseq = ps_keys_bak[2] AND bmkbseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmkb_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmkb_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmkc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE bmkc_t 
         SET (bmkcdocno,
              bmkcseq
              ,bmkc001,bmkc002,bmkc003,bmkc004,bmkcsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_bmkb2_d[g_detail_idx].bmkc001,g_bmkb2_d[g_detail_idx].bmkc002,g_bmkb2_d[g_detail_idx].bmkc003, 
                  g_bmkb2_d[g_detail_idx].bmkc004,g_bmkb2_d[g_detail_idx].bmkcsite) 
         WHERE bmkcent = g_enterprise AND bmkcdocno = ps_keys_bak[1] AND bmkcseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmkc_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmkc_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmkd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point     
      UPDATE bmkd_t 
         SET (bmkddocno,
              bmkdseq,bmkdseq1
              ,bmkd001,bmkd002,bmkd003,bmkd004,bmkdsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmkb3_d[g_detail_idx].bmkd001,g_bmkb3_d[g_detail_idx].bmkd002,g_bmkb3_d[g_detail_idx].bmkd003, 
                  g_bmkb3_d[g_detail_idx].bmkd004,g_bmkb3_d[g_detail_idx].bmkdsite) 
         WHERE bmkdent = g_enterprise AND bmkddocno = ps_keys_bak[1] AND bmkdseq = ps_keys_bak[2] AND bmkdseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("bmkd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("bmkd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
 
   
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
</add_points>