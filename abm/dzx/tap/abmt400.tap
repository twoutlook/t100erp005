<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="abmt400" std_prog="abmt400" erpver="1.0" module="ABM" ver="10" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="function.abmt400_bmiadocno_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmiadocno_desc(p_flag,p_bmiadocno)
DEFINE p_flag      LIKE type_t.chr1 
DEFINE p_bmiadocno LIKE bmia_t.bmiadocno
DEFINE l_ooba002   LIKE ooba_t.ooba002
DEFINE l_success   LIKE type_t.num5
DEFINE r_bmiadocno_desc LIKE type_t.chr80

   IF p_flag = '2' THEN  
      Call s_aooi200_get_slip(p_bmiadocno) returning l_success,l_ooba002
   ELSE
      LET l_ooba002 = p_bmiadocno   
   END IF
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = l_ooba002
   CALL ap_ref_array2(g_ref_fields,"SELECT oobxl003 FROM oobxl_t WHERE oobxlent='"||g_enterprise||"' AND oobxl001= ? AND oobxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_bmiadocno_desc = '', g_rtn_fields[1] , ''
   RETURN r_bmiadocno_desc
END FUNCTION]]>
  </point>
  <point name="function.abmt400_oofa011_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_oofa011_desc(p_oofa003)
DEFINE p_oofa003   LIKE oofa_t.oofa003
DEFINE r_oofa011   LIKE oofa_t.oofa011
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oofa003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET r_oofa011 = '', g_rtn_fields[1] , ''
   RETURN r_oofa011
END FUNCTION]]>
  </point>
  <point name="function.abmt400_ooefl003_desc" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_ooefl003_desc(p_ooefl001)
DEFINE p_ooefl001  LIKE ooefl_t.ooefl001
DEFINE r_ooefl003  LIKE ooefl_t.ooefl003
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_ooefl001
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_ooefl003 = '', g_rtn_fields[1] , ''
   RETURN r_ooefl003
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmia007_desc" order="4" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmia007_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmia_m.bmia007
   CALL ap_ref_array2(g_ref_fields,"SELECT pmaal004 FROM pmaal_t WHERE pmaalent='"||g_enterprise||"' AND pmaal001=? AND pmaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmia_m.bmia007_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmia_m.bmia007_desc
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmia005_desc" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmia005_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmia_m.bmia005
   CALL ap_ref_array2(g_ref_fields,"SELECT bmhel003 FROM bmhel_t WHERE bmhelent='"||g_enterprise||"' AND bmhel001=? AND bmhel002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmia_m.bmia005_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmia_m.bmia005_desc
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmhd_chk" order="6" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmhd_chk()
DEFINE l_imaa009  LIKE imaa_t.imaa009
DEFINE l_bmhe002  LIKE bmhe_t.bmhe002
DEFINE l_cnt      LIKE type_t.num5
DEFINE r_success  LIKE type_t.num5
DEFINE l_sql      STRING

   LET r_success = TRUE
   IF NOT cl_null(g_bmia_m.bmia004) AND NOT cl_null(g_bmia_m.bmia005) THEN 
      
      ##判断是否有维护适用范围页签
      LET l_cnt = 0
      SELECT COUNT(*) INTO l_cnt 
        FROM bmhd_t
       WHERE bmhdent = g_enterprise 
         AND bmhd001 = g_bmia_m.bmia005
      IF l_cnt = 0 THEN 
         LET r_success = TRUE
         RETURN r_success
      END IF      
      
      SELECT imaa009 INTO l_imaa009 FROM imaa_t
       WHERE imaaent = g_enterprise AND imaa001 = g_bmia_m.bmia004
       
       
      SELECT bmhe002 INTO l_bmhe002 FROM bmhe_t
       WHERE bmheent = g_enterprise AND bmhe001 = g_bmia_m.bmia005 

      LET l_cnt = 0
      
      LET l_sql = " SELECT COUNT(*) ",
                  "   FROM bmhd_t ",
                  "  WHERE bmhdent = '",g_enterprise,"'",
                  "    AND bmhd001 = '",g_bmia_m.bmia005,"'",
                  "    AND EXISTS (SELECT DISTINCT rtax001 FROM rtax_t ",
                  "   WHERE rtaxent = bmhdent AND rtax001 = bmhd003 ",
                  "   START WITH rtax001 = '",l_imaa009,"'",
                  "   CONNECT BY rtax001 = PRIOR rtax003 AND rtax001 <> rtax003 ",
                  "   UNION ",
                  "    SELECT rtax006 FROM rtax_t WHERE rtaxent = bmhdent AND rtax006 = bmhd003 AND rtax001 = '",l_imaa009,"')"
      PREPARE rtax_cnt FROM l_sql
      EXECUTE rtax_cnt INTO l_cnt         
      IF l_bmhe002 = '1' THEN 
         IF l_cnt > 0 THEN 
            LET r_success = TRUE
            RETURN r_success
         END IF         
      END IF
      IF l_bmhe002 = '2' THEN 
         IF l_cnt = 0 THEN 
            LET r_success = TRUE
            RETURN r_success
         END IF         
      END IF
      LET r_success = FALSE      
   END IF
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmt400_oocql004_desc" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_oocql004_desc(p_oocql001,p_oocql002)
DEFINE p_oocql001  LIKE oocql_t.oocql001
DEFINE p_oocql002  LIKE oocql_t.oocql002
DEFINE r_oocql004  LIKE oocql_t.oocql004
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocql001
   LET g_ref_fields[2] = p_oocql002
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001=? AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_oocql004 = '', g_rtn_fields[1] , ''
   RETURN r_oocql004
END FUNCTION]]>
  </point>
  <point name="function.abmt400_imaa005_exists" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_imaa005_exists()
DEFINE l_imaa005  LIKE imaa_t.imaa005
   IF NOT cl_null(g_bmia_m.bmia004) THEN
      SELECT imaa005 INTO l_imaa005 FROM imaa_t
       WHERE imaaent = g_enterprise AND imaa001 =  g_bmia_m.bmia004
      IF cl_null(l_imaa005) THEN
         RETURN FALSE
      END IF
   ELSE
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.abmt400_imaal_desc" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_imaal_desc(p_imaal001)
DEFINE p_imaal001  LIKE imaal_t.imaal001
DEFINE r_imaal003  LIKE imaal_t.imaal003,
       r_imaal004  LIKE imaal_t.imaal004
       
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_imaal001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_imaal003 = '', g_rtn_fields[1] , ''
   LET r_imaal004 = '', g_rtn_fields[2] , ''
   RETURN r_imaal003,r_imaal004
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmia012_def" order="10" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmia012_def(p_bmia004,p_bmia006)
DEFINE p_bmia004   LIKE bmia_t.bmia004,
       p_bmia006   LIKE bmia_t.bmia006,
       l_success   LIKE type_t.num5     
   
   LET g_bmia_m.bmia012 = ' '
   IF NOT cl_null(p_bmia004) AND p_bmia006 IS NOT NULL THEN
      CALL s_apmi070_get_pmao004(g_bmia_m.bmia007,p_bmia004,p_bmia006) RETURNING l_success,g_bmia_m.bmia012
   END IF
   IF g_bmia_m.bmia012 IS NULL THEN LET g_bmia_m.bmia012= ' ' END IF
   DISPLAY BY NAME g_bmia_m.bmia012
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmib004_ref" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmib004_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmib_d[l_ac].bmib001
   CALL ap_ref_array2(g_ref_fields,"SELECT oocq014 FROM oocq_t WHERE oocqent='"||g_enterprise||"' AND oocq001='1115' AND oocq002=? ","") RETURNING g_rtn_fields
   LET g_bmib_d[l_ac].bmib004 = g_rtn_fields[1]
   DISPLAY BY NAME g_bmib_d[l_ac].bmib004  
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmibseq_exists" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmibseq_exists()
DEFINE l_cnt      LIKE type_t.num5
DEFINE r_success  LIKE type_t.num5 
   LET l_cnt = 0 
   SELECT COUNT(*) INTO l_cnt 
     FROM bmib_t
    WHERE bmibent = g_enterprise
      AND bmibdocno = g_bmia_m.bmiadocno 
      AND bmibseq = g_bmib_d[l_ac].bmibseq
   IF l_cnt > 0 THEN 
      LET r_success = FALSE  
   ELSE
      LET r_success = TRUE    
   END IF
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmibseq1_ref" order="13" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmibseq1_ref()
   IF cl_null(g_bmib_d[l_ac].bmibseq1) THEN 
      SELECT MAX(bmibseq1) INTO g_bmib_d[l_ac].bmibseq1
        FROM bmib_t
       WHERE bmibent = g_enterprise
         AND bmibdocno = g_bmia_m.bmiadocno
         AND bmibseq = g_bmib_d[l_ac].bmibseq
      IF cl_null(g_bmib_d[l_ac].bmibseq1) THEN 
         LET g_bmib_d[l_ac].bmibseq1 = 1
      ELSE
         LET g_bmib_d[l_ac].bmibseq1 = g_bmib_d[l_ac].bmibseq1 + 1
      END IF         
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt400_pass" order="14" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_pass()
   IF g_bmib_d[l_ac].bmib005 = 'Y' OR (g_bmib_d[l_ac].bmib005 = 'N' AND NOT cl_null(g_bmib_d[l_ac].bmib006)) THEN 
      LET g_bmib_d[l_ac].bmib007 = g_user
      LET g_bmib_d[l_ac].bmib008 = g_dept
      LET g_bmib_d[l_ac].bmib009 = cl_get_current()
      CALL abmt400_oofa011_desc(g_bmib_d[l_ac].bmib007) RETURNING g_bmib_d[l_ac].bmib007_desc
      CALL abmt400_ooefl003_desc(g_bmib_d[l_ac].bmib008) RETURNING g_bmib_d[l_ac].bmib008_desc
   ELSE
      LET g_bmib_d[l_ac].bmib007 = ''
      LET g_bmib_d[l_ac].bmib008 = ''
      LET g_bmib_d[l_ac].bmib009 = ''
      LET g_bmib_d[l_ac].bmib007_desc = ''
      LET g_bmib_d[l_ac].bmib008_desc = ''       
   END IF
   DISPLAY BY NAME g_bmib_d[l_ac].bmib007,g_bmib_d[l_ac].bmib008,g_bmib_d[l_ac].bmib009,
                   g_bmib_d[l_ac].bmib007_desc,g_bmib_d[l_ac].bmib008_desc
END FUNCTION]]>
  </point>
  <point name="function.abmt400_oocal003_desc" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_oocal003_desc(p_oocal001)
DEFINE p_oocal001  LIKE oocal_t.oocal001
DEFINE r_oocal003  LIKE oocal_t.oocal003
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_oocal001
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET r_oocal003 = '', g_rtn_fields[1] , ''
   RETURN r_oocal003
END FUNCTION]]>
  </point>
  <point name="function.abmt400_gen" order="16" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_gen()
DEFINE l_sql      STRING
DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   DELETE FROM bmib_t WHERE bmibent = g_enterprise AND bmibdocno = g_bmia_m.bmiadocno
   DELETE FROM bmic_t WHERE bmicent = g_enterprise AND bmicdocno = g_bmia_m.bmiadocno
   DELETE FROM bmid_t WHERE bmident = g_enterprise AND bmiddocno = g_bmia_m.bmiadocno   
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"','",g_site,"','",g_bmia_m.bmiadocno,"',bmhaseq,bmha002,bmhaseq1,bmha003,bmha004,bmha005,'N','','','','' ",
               "  FROM bmha_t ",
               " WHERE bmhaent = '",g_enterprise,"'",
               "   AND bmha001 = '",g_bmia_m.bmia005,"'"
   LET l_sql = "INSERT INTO bmib_t(bmibent,bmibsite,bmibdocno,bmibseq,bmib001,bmibseq1,bmib002,bmib003,bmib004,bmib005,bmib006,bmib007,bmib008,bmib009) ",l_sql
   PREPARE ins_bmib FROM l_sql
   EXECUTE ins_bmib 
   IF SQLCA.sqlcode THEN 
      LET r_success = FALSE
   END IF
   
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"','",g_site,"','",g_bmia_m.bmiadocno,"',bmhb002,bmhb003,bmhb004,bmhb005,bmhb006 ",
               "  FROM bmhb_t ",
               " WHERE bmhbent = '",g_enterprise,"'",
               "   AND bmhb001 = '",g_bmia_m.bmia005,"'"
   LET l_sql = "INSERT INTO bmic_t(bmicent,bmicsite,bmicdocno,bmic001,bmic002,bmic003,bmic004,bmic005) ",l_sql
   PREPARE ins_bmic FROM l_sql
   EXECUTE ins_bmic  
   IF SQLCA.sqlcode THEN 
      LET r_success = FALSE
   END IF   
   
   LET l_sql = "SELECT DISTINCT '",g_enterprise,"','",g_site,"','",g_bmia_m.bmiadocno,"',bmhcseq,bmhc002,bmhc003,bmhc004,bmhc005, ",
               "                 bmhc006,bmhc007,bmhc008,bmhc009,bmhc010,bmhc011,bmhc012,bmhc013,bmhc014,bmhc015,bmhc016,bmhc017 ",
               "  FROM bmhc_t ",
               " WHERE bmhcent = '",g_enterprise,"'",
               "   AND bmhc001 = '",g_bmia_m.bmia005,"'"
   LET l_sql = "INSERT INTO bmid_t(bmident,bmidsite,bmiddocno,bmidseq,bmid001,bmid002,bmid003,bmid004,bmid005,bmid006,",
               "                   bmid007,bmid008,bmid009,bmid010,bmid011,bmid012,bmid013,bmid014,bmid015,bmid016) ",l_sql
   PREPARE ins_bmid FROM l_sql
   EXECUTE ins_bmid
   IF SQLCA.sqlcode THEN 
      LET r_success = FALSE
   END IF
   RETURN r_success   
END FUNCTION]]>
  </point>
  <point name="function.abmt400_all_pass" order="17" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_all_pass()
DEFINE l_bmib009   DATETIME YEAR TO SECOND

   LET l_bmib009 = cl_get_current()
   
   UPDATE bmib_t
      SET bmib005 = 'Y',
          bmib007 = g_user,
          bmib008 = g_dept,
          bmib009 = l_bmib009
    WHERE bmibent = g_enterprise
      AND bmibdocno = g_bmia_m.bmiadocno
      AND bmib004 = 'Y'
      AND bmib005 = 'N'
      AND bmib006 IS NULL
   CALL abmt400_b_fill()      
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmid005_chk" order="18" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmid005_chk()
DEFINE l_sql      STRING
DEFINE l_n        LIKE type_t.num5

   IF NOT cl_null(g_bmib4_d[l_ac].bmid004) AND NOT cl_null(g_bmib4_d[l_ac].bmid005) THEN
      IF g_bmib4_d[l_ac].bmid004 = '1' THEN
         LET l_sql = "SELECT COUNT(*) FROM qcac_t WHERE qcacent=",g_enterprise," AND qcac002=?"
         IF NOT ap_chk_isExist(g_bmib4_d[l_ac].bmid005,l_sql,'aqc-00021',1) THEN
            RETURN FALSE
         END IF
         LET l_sql = l_sql," AND qcacstus='Y'"
         IF NOT ap_chk_isExist(g_bmib4_d[l_ac].bmid005,l_sql,'aqc-00022',1) THEN
            RETURN FALSE
         END IF
      END IF
      IF g_bmib4_d[l_ac].bmid004 = '2' THEN
         LET l_sql = "SELECT COUNT(*) FROM qcag_t WHERE qcagent=",g_enterprise," AND qcag003=?"
         IF NOT ap_chk_isExist(g_bmib4_d[l_ac].bmid005,l_sql,'aqc-00023',1) THEN
            RETURN FALSE
         END IF
         LET l_sql = l_sql," AND qcagstus='Y'"
         IF NOT ap_chk_isExist(g_bmib4_d[l_ac].bmid005,l_sql,'aqc-00024',1) THEN
            RETURN FALSE
         END IF
      END IF
      IF g_bmib4_d[l_ac].bmid004 = '5' THEN 
         IF g_bmib4_d[l_ac].bmid005 < 0 OR g_bmib4_d[l_ac].bmid005 > 100 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'aqc-00057'
            LET g_errparam.extend = ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
      END IF
      IF g_bmib4_d[l_ac].bmid004 = '6' THEN 
         LET l_n = 0 
         SELECT COUNT(*) INTO l_n FROM qcah_t 
          WHERE qcahent = g_enterprise AND qcah001 = g_qcam001
            AND qcah002 =  g_bmib4_d[l_ac].bmid005
          IF l_n = 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'aqc-00058'
             LET g_errparam.extend = g_bmib4_d[l_ac].bmid005
             LET g_errparam.popup = TRUE
             CALL cl_err()

             RETURN FALSE
          END IF
          
          LET l_n = 0 
         SELECT COUNT(*) INTO l_n FROM qcah_t 
          WHERE qcahent = g_enterprise AND qcah001 = g_qcam001
            AND qcah002 =  g_bmib4_d[l_ac].bmid005 AND qcahstus = 'Y'
          IF l_n = 0 THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = 'aqc-00059'
             LET g_errparam.extend = g_bmib4_d[l_ac].bmid005
             LET g_errparam.popup = TRUE
             CALL cl_err()

             RETURN FALSE
          END IF
      END IF
   END IF
   RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.abmt400_bmia011_desc" order="19" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmt400_bmia011_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmia_m.bmia011
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa001=? ","") RETURNING g_rtn_fields
   LET g_bmia_m.bmia011_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmia_m.bmia011_desc
END FUNCTION]]>
  </point>
  <point name="browser_fill.after" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL abmt400_fetch("")]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL abmt400_bmiadocno_desc('2',g_browser[g_cnt].b_bmiadocno) RETURNING g_browser[g_cnt].b_bmiadocno_desc
      DISPLAY BY NAME g_browser[g_cnt].b_bmiadocno_desc]]>
  </point>
  <point name="construct.a.bmia011" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="construct.c.bmia002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia002  #顯示到畫面上
            NEXT FIELD bmia002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia003  #顯示到畫面上
            NEXT FIELD bmia003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia004  #顯示到畫面上
            NEXT FIELD bmia004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia005" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmhe001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia005  #顯示到畫面上
            NEXT FIELD bmia005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia007  #顯示到畫面上
            NEXT FIELD bmia007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia008  #顯示到畫面上
            NEXT FIELD bmia008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia010" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia010  #顯示到畫面上
            NEXT FIELD bmia010                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia011" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaj002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia011  #顯示到畫面上
            NEXT FIELD bmia011                     #返回原欄位]]>
  </point>
  <point name="construct.c.bmia012" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmao004_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia012  #顯示到畫面上
            NEXT FIELD bmia012                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1116"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia013  #顯示到畫面上
            NEXT FIELD bmia013                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "210"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia014  #顯示到畫面上
            NEXT FIELD bmia014                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmia015" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmia015()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmia015  #顯示到畫面上
            NEXT FIELD bmia015                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiacnfid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiacnfid  #顯示到畫面上
            NEXT FIELD bmiacnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiacrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiacrtdp  #顯示到畫面上
            NEXT FIELD bmiacrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiacrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiacrtid  #顯示到畫面上
            NEXT FIELD bmiacrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiadocno" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmiadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiadocno  #顯示到畫面上
            NEXT FIELD bmiadocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiamodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiamodid  #顯示到畫面上
            NEXT FIELD bmiamodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiaowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiaowndp  #顯示到畫面上
            NEXT FIELD bmiaowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiaownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiaownid  #顯示到畫面上
            NEXT FIELD bmiaownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmiapstid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmiapstid  #顯示到畫面上
            NEXT FIELD bmiapstid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmib001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1115"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmib001  #顯示到畫面上
            NEXT FIELD bmib001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmib002" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmha003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmib002  #顯示到畫面上
            NEXT FIELD bmib002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmib003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooef001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmib003  #顯示到畫面上
            NEXT FIELD bmib003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmib007" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmib007  #顯示到畫面上
            NEXT FIELD bmib007                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.bmib008" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmib008  #顯示到畫面上
            NEXT FIELD bmib008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmic001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "270"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmic001  #顯示到畫面上
            NEXT FIELD bmic001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmic002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "271"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmic002  #顯示到畫面上
            NEXT FIELD bmic002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmic004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmic004  #顯示到畫面上
            NEXT FIELD bmic004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.bmic005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "272"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmic005  #顯示到畫面上
            NEXT FIELD bmic005                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.bmid001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "1051"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmid001  #顯示到畫面上
            NEXT FIELD bmid001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page4.bmid013" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmid013  #顯示到畫面上
            NEXT FIELD bmid013                     #返回原欄位
    

]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt) THEN
         CALL s_transaction_end('N','0')
         RETURN
      END IF]]>
  </point>
  <point name="fetch.action_control" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
   ]]>
  </point>
  <point name="global.variable" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE g_ooef                RECORD LIKE ooef_t.*
DEFINE g_qcam001         LIKE qcam_t.qcam001]]>
  </point>
  <point name="init.init" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc_part('bmia001','2014','1,2') 
   CALL cl_set_combo_scc_part('b_bmia001','2014','1,2') 
   CALL cl_get_para(g_enterprise,g_site,'S-MFG-0046') RETURNING g_qcam001
   SELECT * INTO g_ooef.* FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_site
   IF cl_get_para(g_enterprise,g_site,'S-BAS-0036') = 'N' THEN
      CALL cl_set_comp_visible("bmia006,bmia006_desc",FALSE)
   END IF]]>
  </point>
  <point name="input.a.bmia001" order="" ver="10" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmia_m.bmia007) AND NOT cl_null(g_bmia_m.bmia001) AND g_bmia_m.bmia007 <> 'ALL' THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmia_m.bmia007
                 
               #呼叫檢查存在並帶值的library
               IF g_bmia_m.bmia001 = '1' THEN 
                  IF cl_chk_exist("v_pmaa001_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmia_m.bmia007 = ''
                     NEXT FIELD bmia007
                  END IF
               ELSE
                  LET g_chkparam.arg2 = g_site 
                  IF cl_chk_exist("v_pmaa001_3") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmia_m.bmia007 = ''
                     NEXT FIELD bmia007
                  END IF
               END IF               
            END IF ]]>
  </point>
  <point name="input.a.bmia002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oofa011_desc(g_bmia_m.bmia002) RETURNING g_bmia_m.bmia002_desc
            DISPLAY BY NAME g_bmia_m.bmia002_desc
            IF NOT cl_null(g_bmia_m.bmia002) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmia_m.bmia002
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  SELECT ooag003 INTO g_bmia_m.bmia003
                    FROM ooag_t
                   WHERE ooagent = g_enterprise
                     AND ooag001 = g_bmia_m.bmia002
                  CALL abmt400_ooefl003_desc(g_bmia_m.bmia003) RETURNING g_bmia_m.bmia003_desc
                  DISPLAY BY NAME g_bmia_m.bmia003_desc    
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmia_m.bmia002 = g_bmia_m_t.bmia002
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
  </point>
  <point name="input.a.bmia003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_ooefl003_desc(g_bmia_m.bmia003) RETURNING g_bmia_m.bmia003_desc
            DISPLAY BY NAME g_bmia_m.bmia003_desc            
            IF NOT cl_null(g_bmia_m.bmia003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmia_m.bmia003
               LET g_chkparam.arg2 = g_bmia_m.bmiadocdt
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmia_m.bmia003 = g_bmia_m_t.bmia003
                  NEXT FIELD CURRENT
               END IF
            

            END IF 



]]>
  </point>
  <point name="input.a.bmia004" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_imaal_desc(g_bmia_m.bmia004) RETURNING g_bmia_m.imaal003a,g_bmia_m.imaal004a
            DISPLAY BY NAME g_bmia_m.imaal003a,g_bmia_m.imaal004a 
            IF NOT cl_null(g_bmia_m.bmia004) THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_bmia_m.bmia004
               IF cl_chk_exist("v_imaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmia_m.bmia004 = g_bmia_m_t.bmia004
                  NEXT FIELD CURRENT
               END IF
            END IF     
            IF g_bmia_m.bmia004 <> g_bmia_m_o.bmia004 OR cl_null(g_bmia_m_o.bmia004) THEN 
               LET g_bmia_m.bmia006 = ' '
               DISPLAY BY NAME g_bmia_m.bmia006
               CALL abmt400_bmia012_def(g_bmia_m.bmia004,g_bmia_m.bmia006) 
            END IF
            LET g_bmia_m_o.bmia004 = g_bmia_m.bmia004
            CALL abmt400_set_entry(p_cmd)
            CALL abmt400_set_no_entry(p_cmd)            ]]>
  </point>
  <point name="input.a.bmia005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmia005_desc()
            IF NOT cl_null(g_bmia_m.bmia005) THEN 
               #此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmia_m.bmia005
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_bmhe001") THEN
                  IF NOT abmt400_bmhd_chk() THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00108'
                     LET g_errparam.extend = g_bmia_m.bmia005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmia_m.bmia005 = g_bmia_m_t.bmia005
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmia_m.bmia005 = g_bmia_m_t.bmia005
                  NEXT FIELD CURRENT
               END IF
               IF p_cmd = 'u' AND (g_bmia_m_o.bmia005 <> g_bmia_m.bmia005 OR cl_null(g_bmia_m_o.bmia005)) THEN 
                  IF cl_ask_confirm('abm-00109') THEN   #詢問是否重新產生單身
                     CALL abmt400_gen() RETURNING l_success
                     CALL abmt400_b_fill()
                  ELSE
                     LET g_bmia_m.bmia005 = g_bmia_m_t.bmia005
                     NEXT FIELD CURRENT                 
                  END IF
               END IF               
            END IF 
            LET g_bmia_m_o.bmia005 = g_bmia_m.bmia005]]>
  </point>
  <point name="input.a.bmia006" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_feature_description(g_bmia_m.bmia004,g_bmia_m.bmia006) RETURNING l_success,g_bmia_m.bmia006_desc
            DISPLAY BY NAME g_bmia_m.bmia006_desc
            IF g_bmia_m.bmia006 IS NOT NULL THEN 
               IF NOT s_feature_check(g_bmia_m.bmia004,g_bmia_m.bmia006) THEN 
                  LET g_bmia_m.bmia006 = g_bmia_m_t.bmia006
                  NEXT FIELD CURRENT
               END IF
               
               IF p_cmd = 'a' OR (p_cmd = 'u' AND (g_bmia_m_o.bmia006 <> g_bmia_m.bmia006 OR cl_null(g_bmia_m_o.bmia006))) THEN 
                  CALL abmt400_bmia012_def(g_bmia_m.bmia004,g_bmia_m.bmia006) 
               END IF          
            END IF
            LET g_bmia_m_o.bmia006 = g_bmia_m.bmia006 ]]>
  </point>
  <point name="input.a.bmia007" order="" ver="10" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmia007_desc()
            IF NOT cl_null(g_bmia_m.bmia007) AND g_bmia_m.bmia007 <> 'ALL' THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmia_m.bmia007
                  
               #呼叫檢查存在並帶值的library
               IF g_bmia_m.bmia001 = '1' THEN 
                  IF cl_chk_exist("v_pmaa001_1") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmia_m.bmia007 = g_bmia_m_t.bmia007
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  LET g_chkparam.arg2 = g_site
                  IF cl_chk_exist("v_pmaa001_3") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmia_m.bmia007 = g_bmia_m_t.bmia007
                     NEXT FIELD CURRENT
                  END IF
               END IF  
            ELSE
               LET g_bmia_m.bmia007 = 'ALL'            
            END IF
            CALL abmt400_set_entry(p_cmd)  
            CALL abmt400_set_no_entry(p_cmd)            ]]>
  </point>
  <point name="input.a.bmia008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('221',g_bmia_m.bmia008) RETURNING g_bmia_m.bmia008_desc
            DISPLAY BY NAME g_bmia_m.bmia008_desc
            IF NOT cl_null(g_bmia_m.bmia008) THEN 
               IF NOT s_azzi650_chk_exist('221',g_bmia_m.bmia008) THEN
                  LET g_bmia_m.bmia008 = g_bmia_m_t.bmia008
                  NEXT FIELD CURRENT
               END IF 
            ELSE
               LET g_bmia_m.bmia008 = ' '            
            END IF 
]]>
  </point>
  <point name="input.a.bmia009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_bmia_m.bmia009) THEN 
               LET g_bmia_m.bmia009 = ' '
            END IF ]]>
  </point>
  <point name="input.a.bmia010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_imaal_desc(g_bmia_m.bmia010) RETURNING g_bmia_m.imaal003b,g_bmia_m.imaal004b
            DISPLAY BY NAME g_bmia_m.imaal003b,g_bmia_m.imaal004b
            IF NOT cl_null(g_bmia_m.bmia010) AND g_bmia_m.bmia010 <> 'ALL' THEN 
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               LET g_chkparam.arg1 = g_bmia_m.bmia010
               IF cl_chk_exist("v_imaa001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmia_m.bmia010 = g_bmia_m_t.bmia010
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_bmia_m.bmia010 = 'ALL'   
            END IF              ]]>
  </point>
  <point name="input.a.bmia011" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmia011_desc()           
            IF NOT cl_null(g_bmia_m.bmia011) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmia_m.bmia007
               LET g_chkparam.arg2 = g_bmia_m.bmia011   
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmaj002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmia_m.bmia011 = g_bmia_m_t.bmia011
                  NEXT FIELD CURRENT
               END IF  
            END IF ]]>
  </point>
  <point name="input.a.bmia012" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmia_m.bmia012) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmia_m.bmia007
               LET g_chkparam.arg2 = g_bmia_m.bmia004
               LET g_chkparam.arg3 = g_bmia_m.bmia006
               LET g_chkparam.arg4 = g_bmia_m.bmia012
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pmao004_2") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmia_m.bmia012 = g_bmia_m_t.bmia012
                  NEXT FIELD CURRENT
               END IF
            ELSE
               LET g_bmia_m.bmia012 = ' '
            END IF 

]]>
  </point>
  <point name="input.a.bmia013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('1116',g_bmia_m.bmia013) RETURNING g_bmia_m.bmia013_desc
            DISPLAY BY NAME g_bmia_m.bmia013_desc
            IF NOT cl_null(g_bmia_m.bmia013) THEN 
               IF NOT s_azzi650_chk_exist('1116',g_bmia_m.bmia013) THEN
                  LET g_bmia_m.bmia013 = g_bmia_m_t.bmia013
                  NEXT FIELD CURRENT
               END IF                
            END IF 
            CALL abmt400_set_entry(p_cmd)
            CALL abmt400_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.a.bmia014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('210',g_bmia_m.bmia014) RETURNING g_bmia_m.bmia014_desc
            DISPLAY BY NAME g_bmia_m.bmia014_desc
            IF NOT cl_null(g_bmia_m.bmia014) THEN 
               IF NOT s_azzi650_chk_exist('210',g_bmia_m.bmia014) THEN
                  LET g_bmia_m.bmia014 = g_bmia_m_t.bmia014
                  NEXT FIELD CURRENT
               END IF                
            END IF 
]]>
  </point>
  <point name="input.a.bmia017" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmia_m.bmia017) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.bmia019" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmia_m.bmia019) AND NOT cl_null(g_bmia_m.bmia020) THEN 
               IF g_bmia_m.bmia019 > g_bmia_m.bmia020 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00116'
                  LET g_errparam.extend = g_bmia_m.bmia019
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmia_m.bmia019 = g_bmia_m_t.bmia019
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.bmia020" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmia_m.bmia019) AND NOT cl_null(g_bmia_m.bmia020) THEN 
               IF g_bmia_m.bmia019 > g_bmia_m.bmia020 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'agl-00117'
                  LET g_errparam.extend = g_bmia_m.bmia020
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmia_m.bmia020 = g_bmia_m_t.bmia020
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.bmiadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmiadocno_desc('1',g_bmia_m.bmiadocno) RETURNING g_bmia_m.bmiadocno_desc
            DISPLAY BY NAME g_bmia_m.bmiadocno_desc
            IF NOT cl_null(g_bmia_m.bmiadocno) THEN 
               CALL s_aooi200_chk_slip(g_site,g_ooef.ooef004,g_bmia_m.bmiadocno,g_prog) RETURNING g_success
               IF NOT g_success THEN
                  LET g_bmia_m.bmiadocno = g_bmia_m_t.bmiadocno              
                  NEXT FIELD CURRENT
               END IF
            ELSE
               NEXT FIELD CURRENT            
            END IF ]]>
  </point>
  <point name="input.a.page1.bmib001" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('1115',g_bmib_d[l_ac].bmib001) RETURNING g_bmib_d[l_ac].bmib001_desc
            DISPLAY BY NAME g_bmib_d[l_ac].bmib001_desc
            IF NOT cl_null(g_bmib_d[l_ac].bmib001) THEN 
               IF NOT s_azzi650_chk_exist('1115',g_bmib_d[l_ac].bmib001) THEN
                  LET g_bmib_d[l_ac].bmib001 = g_bmib_d_t.bmib001
                  NEXT FIELD CURRENT
               END IF 
               IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq IS NOT NULL AND g_bmib_d[g_detail_idx].bmib001 IS NOT NULL THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib_d[g_detail_idx].bmibseq != g_bmib_d_t.bmibseq OR g_bmib_d[g_detail_idx].bmib001 != g_bmib_d_t.bmib001)) THEN 
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmib_t WHERE "||"bmibent = '" ||g_enterprise|| "' AND "||"bmibdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmibseq <> '"||g_bmib_d[g_detail_idx].bmibseq ||"' AND "|| "bmib001 = '"||g_bmib_d[g_detail_idx].bmib001 ||"'",'std-00004',0) THEN 
                        LET g_bmib_d[l_ac].bmib001 = g_bmib_d_t.bmib001
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF                
               CALL abmt400_bmib004_ref()                
            END IF 
]]>
  </point>
  <point name="input.a.page1.bmib002" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq IS NOT NULL AND g_bmib_d[g_detail_idx].bmib002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib_d[g_detail_idx].bmibseq != g_bmib_d_t.bmibseq OR g_bmib_d[g_detail_idx].bmib002 != g_bmib_d_t.bmib002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmib_t WHERE "||"bmibent = '" ||g_enterprise|| "' AND "||"bmibdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmibseq = '"||g_bmib_d[g_detail_idx].bmibseq ||"' AND "|| "bmib002 = '"||g_bmib_d[g_detail_idx].bmib002 ||"'",'std-00004',0) THEN 
                     LET g_bmib_d[l_ac].bmib002 = g_bmib_d_t.bmib002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page1.bmib003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_ooefl003_desc(g_bmib_d[l_ac].bmib003) RETURNING g_bmib_d[l_ac].bmib003_desc
            DISPLAY BY NAME g_bmib_d[l_ac].bmib003_desc           
            IF NOT cl_null(g_bmib_d[l_ac].bmib003) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmib_d[l_ac].bmib003
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooef001_14") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmib_d[l_ac].bmib003 = g_bmib_d_t.bmib003
                  NEXT FIELD CURRENT
               END IF
            END IF ]]>
  </point>
  <point name="input.a.page1.bmib006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_pass()]]>
  </point>
  <point name="input.a.page1.bmib007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.bmib008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.page1.bmibseq" order="" ver="3" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib_d[g_detail_idx].bmibseq != g_bmib_d_t.bmibseq OR g_bmib_d[g_detail_idx].bmibseq1 != g_bmib_d_t.bmibseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmib_t WHERE "||"bmibent = '" ||g_enterprise|| "' AND "||"bmibdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmibseq = '"||g_bmib_d[g_detail_idx].bmibseq ||"' AND "|| "bmibseq1 = '"||g_bmib_d[g_detail_idx].bmibseq1 ||"'",'std-00004',0) THEN 
                     LET g_bmib_d[l_ac].bmibseq = g_bmib_d_t.bmibseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmib_d[l_ac].bmibseq) THEN 
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_bmib_d[l_ac].bmibseq <> g_bmib_d_o.bmibseq OR cl_null(g_bmib_d_o.bmibseq))) THEN 
                  IF NOT abmt400_bmibseq_exists() THEN 
                     SELECT DISTINCT bmib001 INTO g_bmib_d[l_ac].bmib001
                       FROM bmib_t
                      WHERE bmibent = g_enterprise
                        AND bmibdocno = g_bmia_m.bmiadocno 
                        AND bmibseq = g_bmib_d[l_ac].bmibseq
                  ELSE
                     LET g_bmib_d[l_ac].bmib001 = ''
                     LET g_bmib_d[l_ac].bmibseq1 = ''                     
                  END IF
                  CALL abmt400_oocql004_desc('1115',g_bmib_d[l_ac].bmib001) RETURNING g_bmib_d[l_ac].bmib001_desc
                  DISPLAY BY NAME g_bmib_d[l_ac].bmib001_desc
                  CALL abmt400_bmibseq1_ref()
               END IF
            END IF
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq IS NOT NULL AND g_bmib_d[g_detail_idx].bmib001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib_d[g_detail_idx].bmibseq != g_bmib_d_t.bmibseq OR g_bmib_d[g_detail_idx].bmib001 != g_bmib_d_t.bmib001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmib_t WHERE "||"bmibent = '" ||g_enterprise|| "' AND "||"bmibdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmibseq <> '"||g_bmib_d[g_detail_idx].bmibseq ||"' AND "|| "bmib001 = '"||g_bmib_d[g_detail_idx].bmib001 ||"'",'std-00004',0) THEN 
                     LET g_bmib_d[l_ac].bmibseq = g_bmib_d_t.bmibseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF 
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq IS NOT NULL AND g_bmib_d[g_detail_idx].bmib002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib_d[g_detail_idx].bmibseq != g_bmib_d_t.bmibseq OR g_bmib_d[g_detail_idx].bmib002 != g_bmib_d_t.bmib002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmib_t WHERE "||"bmibent = '" ||g_enterprise|| "' AND "||"bmibdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmibseq = '"||g_bmib_d[g_detail_idx].bmibseq ||"' AND "|| "bmib002 = '"||g_bmib_d[g_detail_idx].bmib002 ||"'",'std-00004',0) THEN 
                     LET g_bmib_d[l_ac].bmibseq = g_bmib_d_t.bmibseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF            
            LET g_bmib_d_o.bmibseq = g_bmib_d[l_ac].bmibseq
            CALL abmt400_set_entry_b(l_cmd)
            CALL abmt400_set_no_entry_b(l_cmd)
]]>
  </point>
  <point name="input.a.page1.bmibseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq IS NOT NULL AND g_bmib_d[g_detail_idx].bmibseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib_d[g_detail_idx].bmibseq != g_bmib_d_t.bmibseq OR g_bmib_d[g_detail_idx].bmibseq1 != g_bmib_d_t.bmibseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmib_t WHERE "||"bmibent = '" ||g_enterprise|| "' AND "||"bmibdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmibseq = '"||g_bmib_d[g_detail_idx].bmibseq ||"' AND "|| "bmibseq1 = '"||g_bmib_d[g_detail_idx].bmibseq1 ||"'",'std-00004',0) THEN 
                     LET g_bmib_d[l_ac].bmibseq1 = g_bmib_d_t.bmibseq1
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.bmic001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('270',g_bmib2_d[l_ac].bmic001) RETURNING g_bmib2_d[l_ac].bmic001_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic001_desc
            IF NOT cl_null(g_bmib2_d[l_ac].bmic001) THEN 
               IF NOT s_azzi650_chk_exist('270',g_bmib2_d[l_ac].bmic001) THEN
                  LET g_bmib2_d[l_ac].bmic001 = g_bmib2_d_t.bmic001
                  NEXT FIELD CURRENT
               END IF               
            END IF  

            #此段落由子樣板a05產生
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib2_d[g_detail_idx].bmic001 IS NOT NULL AND g_bmib2_d[g_detail_idx].bmic002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib2_d[g_detail_idx].bmic001 != g_bmib2_d_t.bmic001 OR g_bmib2_d[g_detail_idx].bmic002 != g_bmib2_d_t.bmic002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmic_t WHERE "||"bmicent = '" ||g_enterprise|| "' AND "||"bmicdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmic001 = '"||g_bmib2_d[g_detail_idx].bmic001 ||"' AND "|| "bmic002 = '"||g_bmib2_d[g_detail_idx].bmic002 ||"'",'std-00004',0) THEN 
                     LET g_bmib2_d[l_ac].bmic001 = g_bmib2_d_t.bmic001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.bmic002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('271',g_bmib2_d[l_ac].bmic002) RETURNING g_bmib2_d[l_ac].bmic002_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic002_desc
            IF NOT cl_null(g_bmib2_d[l_ac].bmic002) THEN 
               IF NOT s_azzi650_chk_exist('271',g_bmib2_d[l_ac].bmic002) THEN
                  LET g_bmib2_d[l_ac].bmic002 = g_bmib2_d_t.bmic002
                  NEXT FIELD CURRENT
               END IF               
            END IF

            #此段落由子樣板a05產生
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib2_d[g_detail_idx].bmic001 IS NOT NULL AND g_bmib2_d[g_detail_idx].bmic002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib2_d[g_detail_idx].bmic001 != g_bmib2_d_t.bmic001 OR g_bmib2_d[g_detail_idx].bmic002 != g_bmib2_d_t.bmic002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmic_t WHERE "||"bmicent = '" ||g_enterprise|| "' AND "||"bmicdocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmic001 = '"||g_bmib2_d[g_detail_idx].bmic001 ||"' AND "|| "bmic002 = '"||g_bmib2_d[g_detail_idx].bmic002 ||"'",'std-00004',0) THEN 
                     LET g_bmib2_d[l_ac].bmic002 = g_bmib2_d_t.bmic002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.bmic003" order="" ver="2" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmib2_d[l_ac].bmic003) THEN 
            END IF 

]]>
  </point>
  <point name="input.a.page2.bmic004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocal003_desc(g_bmib2_d[l_ac].bmic004) RETURNING g_bmib2_d[l_ac].bmic004_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic004_desc            
            IF NOT cl_null(g_bmib2_d[l_ac].bmic004) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmib2_d[l_ac].bmic004
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmib2_d[l_ac].bmic004 = g_bmib2_d_t.bmic004
                  NEXT FIELD CURRENT
               END IF
            END IF 


]]>
  </point>
  <point name="input.a.page2.bmic005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('272',g_bmib2_d[l_ac].bmic005) RETURNING g_bmib2_d[l_ac].bmic005_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic005_desc
            IF NOT cl_null(g_bmib2_d[l_ac].bmic005) THEN 
               IF NOT s_azzi650_chk_exist('272',g_bmib2_d[l_ac].bmic005) THEN
                  LET g_bmib2_d[l_ac].bmic005 = g_bmib2_d_t.bmic005
                  NEXT FIELD CURRENT
               END IF               
            END IF
]]>
  </point>
  <point name="input.a.page3.bmie001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib3_d[g_detail_idx].bmie001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib3_d[g_detail_idx].bmie001 != g_bmib3_d_t.bmie001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmie_t WHERE "||"bmieent = '" ||g_enterprise|| "' AND "||"bmiedocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmie001 = '"||g_bmib3_d[g_detail_idx].bmie001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page4.bmid001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('1051',g_bmib4_d[l_ac].bmid001) RETURNING g_bmib4_d[l_ac].bmid001_desc
            DISPLAY BY NAME g_bmib4_d[l_ac].bmid001_desc
            IF NOT cl_null(g_bmib4_d[l_ac].bmid001) THEN 
               IF NOT s_azzi650_chk_exist('1051',g_bmib4_d[l_ac].bmid001) THEN
                  LET g_bmib4_d[l_ac].bmid001 = g_bmib4_d_t.bmid001
                  NEXT FIELD CURRENT
               END IF               
            END IF
]]>
  </point>
  <point name="input.a.page4.bmid004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_set_entry_b(l_cmd)           
            CALL abmt400_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page4.bmid005" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmib4_d[l_ac].bmid005) THEN 
               IF NOT abmt400_bmid005_chk() THEN 
                  LET g_bmib4_d[l_ac].bmid005 = g_bmib4_d_t.bmid005
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page4.bmid008" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmib4_d[l_ac].bmid008) AND NOT cl_null(g_bmib4_d[l_ac].bmid012) THEN 
               IF g_bmib4_d[l_ac].bmid008 < g_bmib4_d[l_ac].bmid012 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00099'
                  LET g_errparam.extend = g_bmib4_d[l_ac].bmid008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmib4_d[l_ac].bmid008 = g_bmib4_d_t.bmid008
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page4.bmid009" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmib4_d[l_ac].bmid009) AND NOT cl_null(g_bmib4_d[l_ac].bmid011) THEN 
               IF g_bmib4_d[l_ac].bmid009 < g_bmib4_d[l_ac].bmid011 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00100'
                  LET g_errparam.extend = g_bmib4_d[l_ac].bmid009
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmib4_d[l_ac].bmid009 = g_bmib4_d_t.bmid009
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_bmib4_d[l_ac].bmid009) AND NOT cl_null(g_bmib4_d[l_ac].bmid008) THEN 
               IF g_bmib4_d[l_ac].bmid009 > g_bmib4_d[l_ac].bmid008 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00101'
                  LET g_errparam.extend = g_bmib4_d[l_ac].bmid009
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmib4_d[l_ac].bmid009 = g_bmib4_d_t.bmid009
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL abmt400_set_entry_b(l_cmd)
            CALL abmt400_set_no_entry_b(l_cmd)            ]]>
  </point>
  <point name="input.a.page4.bmid011" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmib4_d[l_ac].bmid009) AND NOT cl_null(g_bmib4_d[l_ac].bmid011) THEN 
               IF g_bmib4_d[l_ac].bmid009 < g_bmib4_d[l_ac].bmid011 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00100'
                  LET g_errparam.extend = g_bmib4_d[l_ac].bmid011
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmib4_d[l_ac].bmid011 = g_bmib4_d_t.bmid011
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_bmib4_d[l_ac].bmid012) AND NOT cl_null(g_bmib4_d[l_ac].bmid011) THEN 
               IF g_bmib4_d[l_ac].bmid011 < g_bmib4_d[l_ac].bmid012 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00102'
                  LET g_errparam.extend = g_bmib4_d[l_ac].bmid011
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmib4_d[l_ac].bmid011 = g_bmib4_d_t.bmid011
                  NEXT FIELD CURRENT
               END IF
            END IF
            CALL abmt400_set_entry_b(l_cmd)
            CALL abmt400_set_no_entry_b(l_cmd)            ]]>
  </point>
  <point name="input.a.page4.bmid012" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmib4_d[l_ac].bmid008) AND NOT cl_null(g_bmib4_d[l_ac].bmid012) THEN 
               IF g_bmib4_d[l_ac].bmid008 < g_bmib4_d[l_ac].bmid012 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'abm-00100'
                  LET g_errparam.extend = g_bmib4_d[l_ac].bmid012
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
                  LET g_bmib4_d[l_ac].bmid012 = g_bmib4_d_t.bmid012
                  NEXT FIELD CURRENT
               END IF
            END IF]]>
  </point>
  <point name="input.a.page4.bmid013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocal003_desc(g_bmib4_d[l_ac].bmid013) RETURNING g_bmib4_d[l_ac].bmid013_desc
            DISPLAY BY NAME g_bmib4_d[l_ac].bmid013_desc            
            IF NOT cl_null(g_bmib4_d[l_ac].bmid013) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmib4_d[l_ac].bmid013
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  LET g_bmib4_d[l_ac].bmid013 = g_bmib4_d_t.bmid013
                  NEXT FIELD CURRENT
               END IF
            

            END IF 


]]>
  </point>
  <point name="input.a.page4.bmidseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmia_m.bmiadocno IS NOT NULL AND g_bmib4_d[g_detail_idx].bmidseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmia_m.bmiadocno != g_bmiadocno_t OR g_bmib4_d[g_detail_idx].bmidseq != g_bmib4_d_t.bmidseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmid_t WHERE "||"bmident = '" ||g_enterprise|| "' AND "||"bmiddocno = '"||g_bmia_m.bmiadocno ||"' AND "|| "bmidseq = '"||g_bmib4_d[g_detail_idx].bmidseq ||"'",'std-00004',0) THEN 
                     LET g_bmib4_d[l_ac].bmidseq = g_bmib4_d_t.bmidseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.b.bmia002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oofa011_desc(g_bmia_m.bmia002) RETURNING g_bmia_m.bmia002_desc
            DISPLAY BY NAME g_bmia_m.bmia002_desc]]>
  </point>
  <point name="input.b.bmia003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_ooefl003_desc(g_bmia_m.bmia003) RETURNING g_bmia_m.bmia003_desc
            DISPLAY BY NAME g_bmia_m.bmia003_desc]]>
  </point>
  <point name="input.b.bmia004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_imaal_desc(g_bmia_m.bmia004) RETURNING g_bmia_m.imaal003a,g_bmia_m.imaal004a
            DISPLAY BY NAME g_bmia_m.imaal003a,g_bmia_m.imaal004a]]>
  </point>
  <point name="input.b.bmia005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmia005_desc()]]>
  </point>
  <point name="input.b.bmia006" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF abmt400_imaa005_exists() THEN
               IF cl_null(g_bmia_m.bmia006) THEN
                  CALL s_feature_single(g_bmia_m.bmia004,g_bmia_m.bmia006,g_bmia_m.bmiasite,'') RETURNING l_success,g_bmia_m.bmia006
                  DISPLAY BY NAME g_bmia_m.bmia006
                  CALL s_transaction_begin()
               END IF  
               CALL s_feature_description(g_bmia_m.bmia004,g_bmia_m.bmia006) RETURNING l_success,g_bmia_m.bmia006_desc
               DISPLAY BY NAME g_bmia_m.bmia006_desc               
            END IF]]>
  </point>
  <point name="input.b.bmia007" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmia007_desc()]]>
  </point>
  <point name="input.b.bmia008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('221',g_bmia_m.bmia008) RETURNING g_bmia_m.bmia008_desc
            DISPLAY BY NAME g_bmia_m.bmia008_desc]]>
  </point>
  <point name="input.b.bmia010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_imaal_desc(g_bmia_m.bmia010) RETURNING g_bmia_m.imaal003b,g_bmia_m.imaal004b
            DISPLAY BY NAME g_bmia_m.imaal003b,g_bmia_m.imaal004b]]>
  </point>
  <point name="input.b.bmia011" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmia011_desc()]]>
  </point>
  <point name="input.b.bmia013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('116',g_bmia_m.bmia013) RETURNING g_bmia_m.bmia013_desc
            DISPLAY BY NAME g_bmia_m.bmia013_desc]]>
  </point>
  <point name="input.b.bmia014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('210',g_bmia_m.bmia014) RETURNING g_bmia_m.bmia014_desc
            DISPLAY BY NAME g_bmia_m.bmia014_desc]]>
  </point>
  <point name="input.b.bmiadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmiadocno_desc('1',g_bmia_m.bmiadocno) RETURNING g_bmia_m.bmiadocno_desc
            DISPLAY BY NAME g_bmia_m.bmiadocno_desc]]>
  </point>
  <point name="input.b.page1.bmib001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('1115',g_bmib_d[l_ac].bmib001) RETURNING g_bmib_d[l_ac].bmib001_desc
            DISPLAY BY NAME g_bmib_d[l_ac].bmib001_desc]]>
  </point>
  <point name="input.b.page1.bmib003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_ooefl003_desc(g_bmib_d[l_ac].bmib003) RETURNING g_bmib_d[l_ac].bmib003_desc
            DISPLAY BY NAME g_bmib_d[l_ac].bmib003_desc]]>
  </point>
  <point name="input.b.page1.bmibseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_bmibseq1_ref()]]>
  </point>
  <point name="input.b.page2.bmic001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('270',g_bmib2_d[l_ac].bmic001) RETURNING g_bmib2_d[l_ac].bmic001_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic001_desc]]>
  </point>
  <point name="input.b.page2.bmic002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('271',g_bmib2_d[l_ac].bmic002) RETURNING g_bmib2_d[l_ac].bmic002_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic002_desc]]>
  </point>
  <point name="input.b.page2.bmic004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocal003_desc(g_bmib2_d[l_ac].bmic004) RETURNING g_bmib2_d[l_ac].bmic004_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic004_desc]]>
  </point>
  <point name="input.b.page2.bmic005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('272',g_bmib2_d[l_ac].bmic005) RETURNING g_bmib2_d[l_ac].bmic005_desc
            DISPLAY BY NAME g_bmib2_d[l_ac].bmic005_desc]]>
  </point>
  <point name="input.b.page4.bmid001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocql004_desc('1051',g_bmib4_d[l_ac].bmid001) RETURNING g_bmib4_d[l_ac].bmid001_desc
            DISPLAY BY NAME g_bmib4_d[l_ac].bmid001_desc]]>
  </point>
  <point name="input.b.page4.bmid013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_oocal003_desc(g_bmib4_d[l_ac].bmid013) RETURNING g_bmib4_d[l_ac].bmid013_desc
            DISPLAY BY NAME g_bmib4_d[l_ac].bmid013_desc]]>
  </point>
  <point name="input.b.page4.bmidseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_bmib4_d[l_ac].bmidseq) THEN 
               SELECT MAX(bmidseq) INTO g_bmib4_d[l_ac].bmidseq
                 FROM bmid_t
                WHERE bmident = g_enterprise
                  AND bmiddocno = g_bmia_m.bmiadocno
               IF cl_null(g_bmib4_d[l_ac].bmidseq) THEN 
                  LET g_bmib4_d[l_ac].bmidseq = 1
               ELSE 
                  LET g_bmib4_d[l_ac].bmidseq = g_bmib4_d[l_ac].bmidseq + 1               
               END IF
            END IF]]>
  </point>
  <point name="input.before_input" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.body.a_update" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_bmib_d[l_ac].bmibsite = g_bmia_m.bmiasite
            LET g_bmib_d_t.* = g_bmib_d[l_ac].*
            LET g_bmib_d_o.* = g_bmib_d[l_ac].*]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_bmib2_d[l_ac].bmicsite = g_bmia_m.bmiasite
            LET g_bmib2_d_t.* = g_bmib2_d[l_ac].*]]>
  </point>
  <point name="input.body3.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_bmib3_d[l_ac].bmiesite = g_bmia_m.bmiasite
            LET g_bmib3_d_t.* = g_bmib3_d[l_ac].*]]>
  </point>
  <point name="input.body4.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_bmib4_d[l_ac].bmidseq) THEN 
               SELECT MAX(bmidseq) INTO g_bmib4_d[l_ac].bmidseq
                 FROM bmid_t
                WHERE bmident = g_enterprise
                  AND bmiddocno = g_bmia_m.bmiadocno
               IF cl_null(g_bmib4_d[l_ac].bmidseq) THEN 
                  LET g_bmib4_d[l_ac].bmidseq = 1
               ELSE 
                  LET g_bmib4_d[l_ac].bmidseq = g_bmib4_d[l_ac].bmidseq + 1               
               END IF
            END IF
            LET g_bmib4_d[l_ac].bmidsite = g_bmia_m.bmiasite
            LET g_bmib4_d_t.* = g_bmib4_d[l_ac].*]]>
  </point>
  <point name="input.c.bmia002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia002             #給予default值

            #給予arg
                        
            CALL q_ooag001()                                #呼叫開窗

            LET g_bmia_m.bmia002 = g_qryparam.return1              

            DISPLAY g_bmia_m.bmia002 TO bmia002              #

            NEXT FIELD bmia002                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia003             #給予default值
            #給予arg
            LET g_qryparam.arg1 = g_bmia_m.bmiadocdt

            
            CALL q_ooeg001()                                #呼叫開窗

            LET g_bmia_m.bmia003 = g_qryparam.return1              

            DISPLAY g_bmia_m.bmia003 TO bmia003              #

            NEXT FIELD bmia003                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia004             #給予default值
            LET g_qryparam.default2 = "" #g_bmia_m.imaal003 #品名
            LET g_qryparam.default3 = "" #g_bmia_m.imaal004 #規格
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaa001()                                #呼叫開窗

            LET g_bmia_m.bmia004 = g_qryparam.return1              
            #LET g_bmia_m.imaal003 = g_qryparam.return2 
            #LET g_bmia_m.imaal004 = g_qryparam.return3 
            DISPLAY g_bmia_m.bmia004 TO bmia004              #
            #DISPLAY g_bmia_m.imaal003 TO imaal003 #品名
            #DISPLAY g_bmia_m.imaal004 TO imaal004 #規格
            NEXT FIELD bmia004                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia005" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia005             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_bmhe001()                                #呼叫開窗

            LET g_bmia_m.bmia005 = g_qryparam.return1              

            DISPLAY g_bmia_m.bmia005 TO bmia005              #

            NEXT FIELD bmia005                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia006" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_feature_single(g_bmia_m.bmia004,g_bmia_m.bmia006,g_site,'') RETURNING l_success,g_bmia_m.bmia006
            DISPLAY BY NAME g_bmia_m.bmia006               #顯示到畫面上
            NEXT FIELD CURRENT]]>
  </point>
  <point name="input.c.bmia007" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia007             #給予default值

            #給予arg
            
            IF g_bmia_m.bmia001 = '1' THEN 
               CALL q_pmaa001_3()
            ELSE
               LET g_qryparam.arg1 = g_site
               CALL q_pmaa001_6()                                #呼叫開窗
            END IF
            LET g_bmia_m.bmia007 = g_qryparam.return1              

            DISPLAY g_bmia_m.bmia007 TO bmia007              #

            NEXT FIELD bmia007                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia008" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia008             #給予default值
            LET g_qryparam.default2 = "" #g_bmia_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "221" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmia_m.bmia008 = g_qryparam.return1              
            #LET g_bmia_m.oocq002 = g_qryparam.return2 
            DISPLAY g_bmia_m.bmia008 TO bmia008              #
            #DISPLAY g_bmia_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmia008                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia010" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia010             #給予default值
            LET g_qryparam.default2 = "" #g_bmia_m.imaal003 #品名
            LET g_qryparam.default3 = "" #g_bmia_m.imaal004 #規格
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_imaa001()                                #呼叫開窗

            LET g_bmia_m.bmia010 = g_qryparam.return1              
            #LET g_bmia_m.imaal003 = g_qryparam.return2 
            #LET g_bmia_m.imaal004 = g_qryparam.return3 
            DISPLAY g_bmia_m.bmia010 TO bmia010              #
            #DISPLAY g_bmia_m.imaal003 TO imaal003 #品名
            #DISPLAY g_bmia_m.imaal004 TO imaal004 #規格
            NEXT FIELD bmia010                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_bmia_m.bmia007

            
            CALL q_pmaj002()                                #呼叫開窗

            LET g_bmia_m.bmia011 = g_qryparam.return1              

            DISPLAY g_bmia_m.bmia011 TO bmia011              #

            NEXT FIELD bmia011                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia012             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_bmia_m.bmia007
            LET g_qryparam.arg2 = g_bmia_m.bmia004
            LET g_qryparam.arg3 = g_bmia_m.bmia006
            
            CALL q_pmao004_1()                                #呼叫開窗

            LET g_bmia_m.bmia012 = g_qryparam.return1              

            DISPLAY g_bmia_m.bmia012 TO bmia012              #

            NEXT FIELD bmia012                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia013             #給予default值
            LET g_qryparam.default2 = "" #g_bmia_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1116" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmia_m.bmia013 = g_qryparam.return1              
            #LET g_bmia_m.oocq002 = g_qryparam.return2 
            DISPLAY g_bmia_m.bmia013 TO bmia013              #
            #DISPLAY g_bmia_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmia013                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmia014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmia014             #給予default值
            LET g_qryparam.default2 = "" #g_bmia_m.oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "210" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmia_m.bmia014 = g_qryparam.return1              
            #LET g_bmia_m.oocq002 = g_qryparam.return2 
            DISPLAY g_bmia_m.bmia014 TO bmia014              #
            #DISPLAY g_bmia_m.oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmia014                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmiadocno" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmia_m.bmiadocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef.ooef004
            LET g_qryparam.arg2 = "abmt400" #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_bmia_m.bmiadocno = g_qryparam.return1              

            DISPLAY g_bmia_m.bmiadocno TO bmiadocno              #

            NEXT FIELD bmiadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmib001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib_d[l_ac].bmib001             #給予default值
            LET g_qryparam.default2 = "" #g_bmib_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1115" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmib_d[l_ac].bmib001 = g_qryparam.return1              
            #LET g_bmib_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmib_d[l_ac].bmib001 TO bmib001              #
            #DISPLAY g_bmib_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmib001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmib002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib_d[l_ac].bmib002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_bmia_m.bmia005

            
            CALL q_bmha003()                                #呼叫開窗

            LET g_bmib_d[l_ac].bmib002 = g_qryparam.return1              

            DISPLAY g_bmib_d[l_ac].bmib002 TO bmib002              #

            NEXT FIELD bmib002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmib003" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib_d[l_ac].bmib003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooef001_9()                                #呼叫開窗

            LET g_bmib_d[l_ac].bmib003 = g_qryparam.return1              

            DISPLAY g_bmib_d[l_ac].bmib003 TO bmib003              #

            NEXT FIELD bmib003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmib007" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib_d[l_ac].bmib007             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_bmib_d[l_ac].bmib007 = g_qryparam.return1              

            DISPLAY g_bmib_d[l_ac].bmib007 TO bmib007              #

            NEXT FIELD bmib007                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmib008" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib_d[l_ac].bmib008             #給予default值
            LET g_qryparam.default2 = "" #g_bmib_d[l_ac].ooeg001 #部門編號
            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooeg001()                                #呼叫開窗

            LET g_bmib_d[l_ac].bmib008 = g_qryparam.return1              
            #LET g_bmib_d[l_ac].ooeg001 = g_qryparam.return2 
            DISPLAY g_bmib_d[l_ac].bmib008 TO bmib008              #
            #DISPLAY g_bmib_d[l_ac].ooeg001 TO ooeg001 #部門編號
            NEXT FIELD bmib008                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmic001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib2_d[l_ac].bmic001             #給予default值
            LET g_qryparam.default2 = "" #g_bmib2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "270" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmib2_d[l_ac].bmic001 = g_qryparam.return1              
            #LET g_bmib2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmib2_d[l_ac].bmic001 TO bmic001              #
            #DISPLAY g_bmib2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmic001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmic002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib2_d[l_ac].bmic002             #給予default值
            LET g_qryparam.default2 = "" #g_bmib2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "271" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmib2_d[l_ac].bmic002 = g_qryparam.return1              
            #LET g_bmib2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmib2_d[l_ac].bmic002 TO bmic002              #
            #DISPLAY g_bmib2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmic002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmic004" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib2_d[l_ac].bmic004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_bmib2_d[l_ac].bmic004 = g_qryparam.return1              

            DISPLAY g_bmib2_d[l_ac].bmic004 TO bmic004              #

            NEXT FIELD bmic004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmic005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib2_d[l_ac].bmic005             #給予default值
            LET g_qryparam.default2 = "" #g_bmib2_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "272" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmib2_d[l_ac].bmic005 = g_qryparam.return1              
            #LET g_bmib2_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmib2_d[l_ac].bmic005 TO bmic005              #
            #DISPLAY g_bmib2_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmic005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.bmid001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib4_d[l_ac].bmid001             #給予default值
            LET g_qryparam.default2 = "" #g_bmib4_d[l_ac].oocq002 #應用分類碼
            #給予arg
            LET g_qryparam.arg1 = "1051" #

            
            CALL q_oocq002()                                #呼叫開窗

            LET g_bmib4_d[l_ac].bmid001 = g_qryparam.return1              
            #LET g_bmib4_d[l_ac].oocq002 = g_qryparam.return2 
            DISPLAY g_bmib4_d[l_ac].bmid001 TO bmid001              #
            #DISPLAY g_bmib4_d[l_ac].oocq002 TO oocq002 #應用分類碼
            NEXT FIELD bmid001                          #返回原欄位

]]>
  </point>
  <point name="input.c.page4.bmid005" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
		    	LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bmib4_d[l_ac].bmid005            #給予default值
            CASE WHEN g_bmib4_d[l_ac].bmid004 = '1' 
                    CALL q_qcac002()
                 WHEN g_bmib4_d[l_ac].bmid004 = '2'
                    CALL q_qcag003()
                 WHEN g_bmib4_d[l_ac].bmid004 = '6'
                    LET g_qryparam.where = " qcah001 = '",g_qcam001,"'"
                    CALL q_qcah002()
            END CASE
            LET g_bmib4_d[l_ac].bmid005 = g_qryparam.return1              #將開窗取得的值回傳到變數
            DISPLAY g_bmib4_d[l_ac].bmid005 TO bmid005              #顯示到畫面上
            NEXT FIELD bmid005                          #返回原欄位]]>
  </point>
  <point name="input.c.page4.bmid013" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmib4_d[l_ac].bmid013             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooca001_1()                                #呼叫開窗

            LET g_bmib4_d[l_ac].bmid013 = g_qryparam.return1              

            DISPLAY g_bmib4_d[l_ac].bmid013 TO bmid013              #

            NEXT FIELD bmid013                          #返回原欄位

]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5]]>
  </point>
  <point name="input.g.page1.bmib005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_pass()]]>
  </point>
  <point name="input.head.a_insert" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_transaction_end('Y','0')
               CALL s_transaction_begin()
               IF NOT cl_null(g_bmia_m.bmia005) THEN
                  LET l_success = ''
                  CALL abmt400_gen()  #自動產生單身
                       RETURNING l_success
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                  END IF
                  LET p_cmd = 'u'                
               END IF                    ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_site,g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_prog)
                    RETURNING l_success,g_bmia_m.bmiadocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_bmia_m.bmiadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD bmiadocno
               END IF
               DISPLAY BY NAME g_bmia_m.bmiadocno]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt400_set_entry(p_cmd)
            CALL abmt400_set_no_entry(p_cmd)]]>
  </point>
  <point name="insert.default" order="" ver="10" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_bmia_m.bmiadocdt = g_today
      LET g_bmia_m.bmiasite = g_site
      LET g_bmia_m.bmia002 = g_user
      LET g_bmia_m.bmia003 = g_dept
      CALL abmt400_oofa011_desc(g_bmia_m.bmia002) RETURNING g_bmia_m.bmia002_desc
      DISPLAY BY NAME g_bmia_m.bmia002_desc   
      CALL abmt400_ooefl003_desc(g_bmia_m.bmia003) RETURNING g_bmia_m.bmia003_desc
      DISPLAY BY NAME g_bmia_m.bmia003_desc 
      LET g_bmia_m.bmia010 = 'ALL'
      LET g_bmia_m.bmia008 = ' '
      LET g_bmia_m.bmia009 = ' '
      LET g_bmia_m.bmia012 = ' '
      LET g_bmia_m.bmia019 = g_today
      LET g_bmia_m.bmia020 = g_today]]>
  </point>
  <point name="menu.all_pass" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL abmt400_all_pass()]]>
  </point>
  <point name="menu.output" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               #CALL abmr400_g01("bmiaent ="|| g_enterprise ||" AND bmiadocno ='"|| g_bmia_m.bmiadocno||"'")
               LET g_rep_wc = "bmiaent ="|| g_enterprise ||" AND bmiadocno ='"|| g_bmia_m.bmiadocno||"'"]]>
  </point>
  <point name="modify.before_input" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_bmia_m.bmiastus MATCHES "[DR]" THEN 
         LET g_bmia_m.bmiastus = "N"
      END IF
]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_bmia_m.bmiadocdt = g_today
   LET g_bmia_m.bmiasite = g_site
   LET g_bmia_m.bmia002 = g_user
   LET g_bmia_m.bmia003 = g_dept
   CALL abmt400_oofa011_desc(g_bmia_m.bmia002) RETURNING g_bmia_m.bmia002_desc
   DISPLAY BY NAME g_bmia_m.bmia002_desc   
   CALL abmt400_ooefl003_desc(g_bmia_m.bmia003) RETURNING g_bmia_m.bmia003_desc
   DISPLAY BY NAME g_bmia_m.bmia003_desc 
   LET g_bmia_m_t.* = g_bmia_m.*
   LET g_bmia_m_o.* = g_bmia_m.*]]>
  </point>
  <point name="send.before_cli" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #確認前檢核段
   IF NOT s_abmt400_conf_chk(g_bmia_m.bmiadocno) THEN
      CLOSE abmt400_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_bmia_m.bmiastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_act_no_visible_b.set_act_no_visible_b" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_bmia_m.bmiastus = 'N' THEN 
      CALL cl_set_act_visible("all_pass",TRUE)
   END IF
     
   IF g_bmia_m.bmiastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF]]>
  </point>
  <point name="set_act_visible_b.set_act_visible_b" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("all_pass",FALSE)
   CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)]]>
  </point>
  <point name="set_entry.after_control" order="" ver="10" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_required("bmia015",FALSE)
   CALL cl_set_comp_entry("bmia017",TRUE)
   CALL cl_set_comp_entry("bmia006",TRUE)
   CALL cl_set_comp_entry("bmia011,bmia012",TRUE)]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("bmiadocdt",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("bmib001",TRUE)
   CALL cl_set_comp_required("bmid008",FALSE)
   CALL cl_set_comp_entry("bmid005,bmid010",TRUE)]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="10" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   SELECT oocq014,oocq016 INTO l_oocq014,l_oocq016 FROM oocq_t 
    WHERE oocqent = g_enterprise AND oocq001 = '1116' AND oocq002 = g_bmia_m.bmia013
   IF l_oocq014 = 'Y' THEN
      CALL cl_set_comp_required("bmia015",TRUE)
   END IF
   IF l_oocq016 = 'N' THEN
      CALL cl_set_comp_entry("bmia017",FALSE)
   END IF
   IF NOT abmt400_imaa005_exists() THEN 
      CALL cl_set_comp_entry("bmia006",FALSE)
      LET g_bmia_m.bmia006 = ' '
   END IF
   IF g_bmia_m.bmia007 = 'ALL' THEN
      CALL cl_set_comp_entry("bmia011,bmia012",FALSE)
      LET g_bmia_m.bmia012 = ' '
   END IF]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_oocq014  LIKE oocq_t.oocq014
   DEFINE l_oocq016  LIKE oocq_t.oocq016]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("bmiadocdt",FALSE)]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT abmt400_bmibseq_exists() THEN 
      CALL cl_set_comp_entry("bmib001",FALSE)
   END IF
   IF g_bmib4_d[l_ac].bmid004 = '4' THEN 
      CALL cl_set_comp_required("bmid008",TRUE)
   END IF
   IF g_bmib4_d[l_ac].bmid004 NOT MATCHES '[1256]' THEN 
       CALL cl_set_comp_entry("bmid005",FALSE)
       LET g_bmib4_d[l_ac].bmid005 = ''
   END IF
   IF NOT cl_null(g_bmib4_d[l_ac].bmid009) OR NOT cl_null(g_bmib4_d[l_ac].bmid011) THEN 
       CALL cl_set_comp_entry("bmid010",FALSE)
       LET g_bmib4_d[l_ac].bmid010 = ''       
   END IF   ]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL abmt400_oocql004_desc('1115',g_bmib_d[l_ac].bmib001) RETURNING g_bmib_d[l_ac].bmib001_desc
      DISPLAY BY NAME g_bmib_d[l_ac].bmib001_desc
      
      CALL abmt400_ooefl003_desc(g_bmib_d[l_ac].bmib003) RETURNING g_bmib_d[l_ac].bmib003_desc
      DISPLAY BY NAME g_bmib_d[l_ac].bmib003_desc 
      
      CALL abmt400_oofa011_desc(g_bmib_d[l_ac].bmib007) RETURNING g_bmib_d[l_ac].bmib007_desc
      DISPLAY BY NAME g_bmib_d[l_ac].bmib007_desc
      
      CALL abmt400_ooefl003_desc(g_bmib_d[l_ac].bmib008) RETURNING g_bmib_d[l_ac].bmib008_desc
      DISPLAY BY NAME g_bmib_d[l_ac].bmib008_desc]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL abmt400_oocql004_desc('270',g_bmib2_d[l_ac].bmic001) RETURNING g_bmib2_d[l_ac].bmic001_desc
      DISPLAY BY NAME g_bmib2_d[l_ac].bmic001_desc
      
      CALL abmt400_oocql004_desc('271',g_bmib2_d[l_ac].bmic002) RETURNING g_bmib2_d[l_ac].bmic002_desc
      DISPLAY BY NAME g_bmib2_d[l_ac].bmic002_desc
      
      CALL abmt400_oocal003_desc(g_bmib2_d[l_ac].bmic004) RETURNING g_bmib2_d[l_ac].bmic004_desc
      DISPLAY BY NAME g_bmib2_d[l_ac].bmic004_desc 
      
      CALL abmt400_oocql004_desc('272',g_bmib2_d[l_ac].bmic005) RETURNING g_bmib2_d[l_ac].bmic005_desc
      DISPLAY BY NAME g_bmib2_d[l_ac].bmic005_desc]]>
  </point>
  <point name="show.body4.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL abmt400_oocql004_desc('1051',g_bmib4_d[l_ac].bmid001) RETURNING g_bmib4_d[l_ac].bmid001_desc
      DISPLAY BY NAME g_bmib4_d[l_ac].bmid001_desc
      
      CALL abmt400_oocal003_desc(g_bmib4_d[l_ac].bmid013) RETURNING g_bmib4_d[l_ac].bmid013_desc
      DISPLAY BY NAME g_bmib4_d[l_ac].bmid013_desc]]>
  </point>
  <point name="show.define" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <point name="show.head.reference" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_bmia_m.bmiadocno) THEN 
      CALL abmt400_bmiadocno_desc('2',g_bmia_m.bmiadocno) RETURNING g_bmia_m.bmiadocno_desc
      DISPLAY BY NAME g_bmia_m.bmiadocno_desc
   END IF
    CALL s_feature_description(g_bmia_m.bmia004,g_bmia_m.bmia006) RETURNING l_success,g_bmia_m.bmia006_desc
    DISPLAY BY NAME g_bmia_m.bmia006_desc   
#   CALL abmt400_oofa011_desc(g_bmia_m.bmia002) RETURNING g_bmia_m.bmia002_desc
#   DISPLAY BY NAME g_bmia_m.bmia002_desc
   
#   CALL abmt400_ooefl003_desc(g_bmia_m.bmia003) RETURNING g_bmia_m.bmia003_desc
#   DISPLAY BY NAME g_bmia_m.bmia003_desc
#   
#   CALL abmt400_bmia007_desc()
   
   CALL abmt400_imaal_desc(g_bmia_m.bmia004) RETURNING g_bmia_m.imaal003a,g_bmia_m.imaal004a
   DISPLAY BY NAME g_bmia_m.imaal003a,g_bmia_m.imaal004a 
   
#   CALL abmt400_bmia005_desc()
   
#   CALL abmt400_oocql004_desc('221',g_bmia_m.bmia008) RETURNING g_bmia_m.bmia008_desc
#   DISPLAY BY NAME g_bmia_m.bmia008_desc
   
   CALL abmt400_imaal_desc(g_bmia_m.bmia010) RETURNING g_bmia_m.imaal003b,g_bmia_m.imaal004b
   DISPLAY BY NAME g_bmia_m.imaal003b,g_bmia_m.imaal004b
   
#   CALL abmt400_oofa011_desc(g_bmia_m.bmia011) RETURNING g_bmia_m.bmia011_desc
#   DISPLAY BY NAME g_bmia_m.bmia011_desc   
   
#   CALL abmt400_oocql004_desc('1116',g_bmia_m.bmia013) RETURNING g_bmia_m.bmia013_desc
#   DISPLAY BY NAME g_bmia_m.bmia013_desc
#   
#   CALL abmt400_oocql004_desc('210',g_bmia_m.bmia014) RETURNING g_bmia_m.bmia014_desc
#   DISPLAY BY NAME g_bmia_m.bmia014_desc

#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_bmia_m.bmiaownid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_bmia_m.bmiaownid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_bmia_m.bmiaownid_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_bmia_m.bmiaowndp
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#   LET g_bmia_m.bmiaowndp_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_bmia_m.bmiaowndp_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_bmia_m.bmiacrtid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_bmia_m.bmiacrtid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_bmia_m.bmiacrtid_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_bmia_m.bmiacrtdp
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#   LET g_bmia_m.bmiacrtdp_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_bmia_m.bmiacrtdp_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_bmia_m.bmiamodid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_bmia_m.bmiamodid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_bmia_m.bmiamodid_desc
#
#   INITIALIZE g_ref_fields TO NULL
#   LET g_ref_fields[1] = g_bmia_m.bmiacnfid
#   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#   LET g_bmia_m.bmiacnfid_desc = '', g_rtn_fields[1] , ''
#   DISPLAY BY NAME g_bmia_m.bmiacnfid_desc
#]]>
  </point>
  <point name="statechange.a_update" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("all_pass",FALSE)
   IF g_bmia_m.bmiastus = 'N' THEN 
      CALL cl_set_act_visible("all_pass",TRUE)
   END IF
   CALL cl_set_act_visible("modify,delete,modify_detail",TRUE)
   IF g_bmia_m.bmiastus = 'X' OR g_bmia_m.bmiastus = '4' OR g_bmia_m.bmiastus = 'Y' THEN 
      CALL cl_set_act_visible("modify,delete,modify_detail",FALSE)
   END IF   ]]>
  </point>
  <point name="statechange.b_update" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_transaction_begin()
   IF lc_state = 'N' THEN
      IF NOT cl_ask_confirm('aim-00110') THEN
         RETURN
      ELSE  
         CALL s_abmt400_unconf(g_bmia_m.bmiadocno) RETURNING l_success
         IF NOT l_success THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_transaction_end('Y','0')
         END IF
      END IF         
   END IF
   IF lc_state = 'Y' THEN
      IF NOT cl_ask_confirm('aim-00108') THEN
         RETURN
      ELSE
         IF s_abmt400_conf_chk(g_bmia_m.bmiadocno) THEN
            CALL s_abmt400_conf(g_bmia_m.bmiadocno) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
         ELSE
            CALL s_transaction_end('N','0')
            RETURN
         END IF
      END IF         
   END IF
   IF lc_state = 'X' THEN
      IF NOT cl_ask_confirm('aim-00109') THEN
         RETURN
      ELSE
         CALL s_abmt400_invalid(g_bmia_m.bmiadocno) RETURNING l_success
         IF NOT l_success THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_transaction_end('Y','0')
         END IF
      END IF         
   END IF
   IF lc_state = '4' THEN
      IF NOT cl_ask_confirm('abm-00113') THEN
         RETURN
      ELSE
         CALL s_abmt400_update(g_bmia_m.bmiadocno) RETURNING l_success
         IF NOT l_success THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_transaction_end('Y','0')
         END IF  
      END IF         
   END IF   ]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_bmia_m.bmiastus = 'X' OR g_bmia_m.bmiastus = '4' THEN 
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#         CASE g_bmia_m.bmiastus
#            WHEN "N"
#               HIDE OPTION "unconfirmed"
#               HIDE OPTION "item_updated"
#            WHEN "X"
#               HIDE OPTION "invalid"
#               HIDE OPTION "unconfirmed"
#               HIDE OPTION "confirmed"
#               HIDE OPTION "item_updated"
#            WHEN "Y"
#               HIDE OPTION "confirmed"
#               HIDE OPTION "invalid"
#            WHEN "4"
#               HIDE OPTION "item_updated"
#               HIDE OPTION "invalid"
#               HIDE OPTION "unconfirmed"
#               HIDE OPTION "confirmed"
#         END CASE
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE g_bmia_m.bmiastus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold,item_updated",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
            #R(拒絕)、D(抽單)、W(送簽)、A(核准)隱藏item_updated(已更新)欄位
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold,item_updated",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold,item_updated",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold,item_updated",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold,item_updated",FALSE)

      END CASE
         ]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success LIKE type_t.num5]]>
  </point>
  <section id="abmt400.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION abmt400_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.b_fill" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION abmt400_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_bmib_d.clear()    #g_bmib_d 單頭及單身 
   CALL g_bmib2_d.clear()
   CALL g_bmib3_d.clear()
   CALL g_bmib4_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF abmt400_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE bmibseq,bmib001,bmibseq1,bmib002,bmib003,bmib004,bmib005,bmib006, 
             bmib007,bmib008,bmib009,bmibsite ,t1.oocql004 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 FROM bmib_t", 
                
                     " INNER JOIN bmia_t ON bmiadocno = bmibdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='1115' AND t1.oocql002=bmib001 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=bmib003 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=bmib007  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=bmib008 AND t4.ooefl002='"||g_dlang||"' ",
 
                     " WHERE bmibent=? AND bmibdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY bmib_t.bmibseq,bmib_t.bmibseq1"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abmt400_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR abmt400_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_bmia_m.bmiadocno
                                               
      FOREACH b_fill_cs INTO g_bmib_d[l_ac].bmibseq,g_bmib_d[l_ac].bmib001,g_bmib_d[l_ac].bmibseq1,g_bmib_d[l_ac].bmib002, 
          g_bmib_d[l_ac].bmib003,g_bmib_d[l_ac].bmib004,g_bmib_d[l_ac].bmib005,g_bmib_d[l_ac].bmib006, 
          g_bmib_d[l_ac].bmib007,g_bmib_d[l_ac].bmib008,g_bmib_d[l_ac].bmib009,g_bmib_d[l_ac].bmibsite, 
          g_bmib_d[l_ac].bmib001_desc,g_bmib_d[l_ac].bmib003_desc,g_bmib_d[l_ac].bmib007_desc,g_bmib_d[l_ac].bmib008_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF abmt400_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE bmic001,bmic002,bmic003,bmic004,bmic005,bmicsite ,t5.oocql004 , 
             t6.oocql004 ,t7.oocal003 ,t8.oocql004 FROM bmic_t",   
                     " INNER JOIN bmia_t ON bmiadocno = bmicdocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t5 ON t5.oocqlent='"||g_enterprise||"' AND t5.oocql001='270' AND t5.oocql002=bmic001 AND t5.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='271' AND t6.oocql002=bmic002 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t7 ON t7.oocalent='"||g_enterprise||"' AND t7.oocal001=bmic004 AND t7.oocal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='272' AND t8.oocql002=bmic005 AND t8.oocql003='"||g_dlang||"' ",
 
                     " WHERE bmicent=? AND bmicdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY bmic_t.bmic001,bmic_t.bmic002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abmt400_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR abmt400_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise,g_bmia_m.bmiadocno
                                               
      FOREACH b_fill_cs2 INTO g_bmib2_d[l_ac].bmic001,g_bmib2_d[l_ac].bmic002,g_bmib2_d[l_ac].bmic003, 
          g_bmib2_d[l_ac].bmic004,g_bmib2_d[l_ac].bmic005,g_bmib2_d[l_ac].bmicsite,g_bmib2_d[l_ac].bmic001_desc, 
          g_bmib2_d[l_ac].bmic002_desc,g_bmib2_d[l_ac].bmic004_desc,g_bmib2_d[l_ac].bmic005_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF abmt400_fill_chk(3) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE bmie001,bmie002,bmie003,bmiesite  FROM bmie_t",   
                     " INNER JOIN bmia_t ON bmiadocno = bmiedocno ",
 
                     "",
                     
                     
                     " WHERE bmieent=? AND bmiedocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body3.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table3) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table3 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY bmie_t.bmie001"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql3"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abmt400_pb3 FROM g_sql
         DECLARE b_fill_cs3 CURSOR FOR abmt400_pb3
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs3 USING g_enterprise,g_bmia_m.bmiadocno
                                               
      FOREACH b_fill_cs3 INTO g_bmib3_d[l_ac].bmie001,g_bmib3_d[l_ac].bmie002,g_bmib3_d[l_ac].bmie003, 
          g_bmib3_d[l_ac].bmiesite
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill3.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
   #判斷是否填充
   IF abmt400_fill_chk(4) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE bmidseq,bmid016,bmid001,bmid002,bmid004,bmid003,bmid005,bmid008, 
             bmid009,bmid010,bmid011,bmid012,bmid013,bmid014,bmid015,bmidsite ,t9.oocql004 ,t10.oocal003 FROM bmid_t", 
                
                     " INNER JOIN bmia_t ON bmiadocno = bmiddocno ",
 
                     "",
                     
                                    " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='1051' AND t9.oocql002=bmid001 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocal_t t10 ON t10.oocalent='"||g_enterprise||"' AND t10.oocal001=bmid013 AND t10.oocal002='"||g_dlang||"' ",
 
                     " WHERE bmident=? AND bmiddocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body4.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table4) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table4 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY bmid_t.bmidseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql4"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abmt400_pb4 FROM g_sql
         DECLARE b_fill_cs4 CURSOR FOR abmt400_pb4
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs4 USING g_enterprise,g_bmia_m.bmiadocno
                                               
      FOREACH b_fill_cs4 INTO g_bmib4_d[l_ac].bmidseq,g_bmib4_d[l_ac].bmid016,g_bmib4_d[l_ac].bmid001, 
          g_bmib4_d[l_ac].bmid002,g_bmib4_d[l_ac].bmid004,g_bmib4_d[l_ac].bmid003,g_bmib4_d[l_ac].bmid005, 
          g_bmib4_d[l_ac].bmid008,g_bmib4_d[l_ac].bmid009,g_bmib4_d[l_ac].bmid010,g_bmib4_d[l_ac].bmid011, 
          g_bmib4_d[l_ac].bmid012,g_bmib4_d[l_ac].bmid013,g_bmib4_d[l_ac].bmid014,g_bmib4_d[l_ac].bmid015, 
          g_bmib4_d[l_ac].bmidsite,g_bmib4_d[l_ac].bmid001_desc,g_bmib4_d[l_ac].bmid013_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill4.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_bmib_d.deleteElement(g_bmib_d.getLength())
   CALL g_bmib2_d.deleteElement(g_bmib2_d.getLength())
   CALL g_bmib3_d.deleteElement(g_bmib3_d.getLength())
   CALL g_bmib4_d.deleteElement(g_bmib4_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abmt400_pb
   FREE abmt400_pb2
 
   FREE abmt400_pb3
 
   FREE abmt400_pb4
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_bmib_d.getLength()
      LET g_bmib_d_mask_o[l_ac].* =  g_bmib_d[l_ac].*
      CALL abmt400_bmib_t_mask()
      LET g_bmib_d_mask_n[l_ac].* =  g_bmib_d[l_ac].*
   END FOR
   
   LET g_bmib2_d_mask_o.* =  g_bmib2_d.*
   FOR l_ac = 1 TO g_bmib2_d.getLength()
      LET g_bmib2_d_mask_o[l_ac].* =  g_bmib2_d[l_ac].*
      CALL abmt400_bmic_t_mask()
      LET g_bmib2_d_mask_n[l_ac].* =  g_bmib2_d[l_ac].*
   END FOR
   LET g_bmib3_d_mask_o.* =  g_bmib3_d.*
   FOR l_ac = 1 TO g_bmib3_d.getLength()
      LET g_bmib3_d_mask_o[l_ac].* =  g_bmib3_d[l_ac].*
      CALL abmt400_bmie_t_mask()
      LET g_bmib3_d_mask_n[l_ac].* =  g_bmib3_d[l_ac].*
   END FOR
   LET g_bmib4_d_mask_o.* =  g_bmib4_d.*
   FOR l_ac = 1 TO g_bmib4_d.getLength()
      LET g_bmib4_d_mask_o[l_ac].* =  g_bmib4_d[l_ac].*
      CALL abmt400_bmid_t_mask()
      LET g_bmib4_d_mask_n[l_ac].* =  g_bmib4_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.b_fill2" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION abmt400_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL abmt400_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.browser_fill" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abmt400_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE bmiadocno ",
                      " FROM bmia_t ",
                      " ",
                      " LEFT JOIN bmib_t ON bmibent = bmiaent AND bmiadocno = bmibdocno ", "  ",
                      #add-point:browser_fill段sql(bmib_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN bmic_t ON bmicent = bmiaent AND bmiadocno = bmicdocno", "  ",
                      #add-point:browser_fill段sql(bmic_t1)
                      {<point name="browser_fill.cnt.join.bmic_t1"/>}
                      #end add-point
 
                      " LEFT JOIN bmie_t ON bmieent = bmiaent AND bmiadocno = bmiedocno", "  ",
                      #add-point:browser_fill段sql(bmie_t1)
                      {<point name="browser_fill.cnt.join.bmie_t1"/>}
                      #end add-point
 
                      " LEFT JOIN bmid_t ON bmident = bmiaent AND bmiadocno = bmiddocno", "  ",
                      #add-point:browser_fill段sql(bmid_t1)
                      {<point name="browser_fill.cnt.join.bmid_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE bmiaent = '" ||g_enterprise|| "' AND bmibent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("bmia_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE bmiadocno ",
                      " FROM bmia_t ", 
                      "  ",
                      "  ",
                      " WHERE bmiaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("bmia_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_bmia_m.* TO NULL
      CALL g_bmib_d.clear()        
      CALL g_bmib2_d.clear() 
      CALL g_bmib3_d.clear() 
      CALL g_bmib4_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.bmiadocno,t0.bmiadocdt,t0.bmia001,t0.bmia004,t0.bmia007,t0.bmiacrtid,t0.bmiacrtdt,t0.bmiamodid,t0.bmiamoddt Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.bmiastus,t0.bmiadocno,t0.bmiadocdt,t0.bmia001,t0.bmia004,t0.bmia007, 
       t0.bmiacrtid,t0.bmiacrtdt,t0.bmiamodid,t0.bmiamoddt,t1.oobxl003 ,t2.pmaal004 ,t3.ooag011 ,t4.ooag011 ", 

               " FROM bmia_t t0",
               "  ",
               "  LEFT JOIN bmib_t ON bmibent = bmiaent AND bmiadocno = bmibdocno ", "  ", 
               #add-point:browser_fill段sql(bmib_t1)
               {<point name="browser_fill.join.bmib_t1"/>}
               #end add-point
               "  LEFT JOIN bmic_t ON bmicent = bmiaent AND bmiadocno = bmicdocno", "  ", 
               #add-point:browser_fill段sql(bmic_t1)
               {<point name="browser_fill.join.bmic_t1"/>}
               #end add-point
 
               "  LEFT JOIN bmie_t ON bmieent = bmiaent AND bmiadocno = bmiedocno", "  ", 
               #add-point:browser_fill段sql(bmie_t1)
               {<point name="browser_fill.join.bmie_t1"/>}
               #end add-point
 
               "  LEFT JOIN bmid_t ON bmident = bmiaent AND bmiadocno = bmiddocno", "  ", 
               #add-point:browser_fill段sql(bmid_t1)
               {<point name="browser_fill.join.bmid_t1"/>}
               #end add-point
 
 
 
               "  ",
                              " LEFT JOIN oobxl_t t1 ON t1.oobxlent='"||g_enterprise||"' AND t1.oobxl001=t0.bmiadocno AND t1.oobxl002='"||g_lang||"' ",
               " LEFT JOIN pmaal_t t2 ON t2.pmaalent='"||g_enterprise||"' AND t2.pmaal001=t0.bmia007 AND t2.pmaal002='"||g_lang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.bmiacrtid  ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.bmiamodid  ",
 
               " WHERE t0.bmiaent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("bmia_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY bmiadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"bmia_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_bmiadocno,g_browser[g_cnt].b_bmiadocdt, 
       g_browser[g_cnt].b_bmia001,g_browser[g_cnt].b_bmia004,g_browser[g_cnt].b_bmia007,g_browser[g_cnt].b_bmiacrtid, 
       g_browser[g_cnt].b_bmiacrtdt,g_browser[g_cnt].b_bmiamodid,g_browser[g_cnt].b_bmiamoddt,g_browser[g_cnt].b_bmiadocno_desc, 
       g_browser[g_cnt].b_bmia007_desc,g_browser[g_cnt].b_bmiacrtid_desc,g_browser[g_cnt].b_bmiamodid_desc 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL abmt400_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "4"
            LET g_browser[g_cnt].b_statepic = "stus/16/item_updated.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_bmiadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.construct" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION abmt400_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmia_m.* TO NULL
   CALL g_bmib_d.clear()        
   CALL g_bmib2_d.clear() 
   CALL g_bmib3_d.clear() 
   CALL g_bmib4_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
   INITIALIZE g_wc2_table3 TO NULL
 
   INITIALIZE g_wc2_table4 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bmiadocno,bmiadocdt,bmia002,bmia001,bmia003,bmia007,bmiastus,bmia004, 
          bmia005,bmia006,bmia006_desc,bmia008,bmia009,bmia010,bmia011,bmia012,bmiasite,bmia013,bmia015, 
          bmia019,bmia020,bmia014,bmia016,bmia017,bmia018,bmiaownid,bmiaowndp,bmiacrtid,bmiacrtdp,bmiacrtdt, 
          bmiamodid,bmiamoddt,bmiacnfid,bmiacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<bmiacrtdt>>----
         AFTER FIELD bmiacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<bmiamoddt>>----
         AFTER FIELD bmiamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmiacnfdt>>----
         AFTER FIELD bmiacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmiapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.bmiadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiadocno
            #add-point:ON ACTION controlp INFIELD bmiadocno
            {<point name="construct.c.bmiadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiadocno
            #add-point:BEFORE FIELD bmiadocno
            {<point name="construct.b.bmiadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiadocno
            
            #add-point:AFTER FIELD bmiadocno
            {<point name="construct.a.bmiadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiadocdt
            #add-point:BEFORE FIELD bmiadocdt
            {<point name="construct.b.bmiadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiadocdt
            
            #add-point:AFTER FIELD bmiadocdt
            {<point name="construct.a.bmiadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmiadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiadocdt
            #add-point:ON ACTION controlp INFIELD bmiadocdt
            {<point name="construct.c.bmiadocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmia002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia002
            #add-point:ON ACTION controlp INFIELD bmia002
            {<point name="construct.c.bmia002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia002
            #add-point:BEFORE FIELD bmia002
            {<point name="construct.b.bmia002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia002
            
            #add-point:AFTER FIELD bmia002
            {<point name="construct.a.bmia002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia001
            #add-point:BEFORE FIELD bmia001
            {<point name="construct.b.bmia001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia001
            
            #add-point:AFTER FIELD bmia001
            {<point name="construct.a.bmia001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia001
            #add-point:ON ACTION controlp INFIELD bmia001
            {<point name="construct.c.bmia001" />}
            #END add-point
 
         #Ctrlp:construct.c.bmia003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia003
            #add-point:ON ACTION controlp INFIELD bmia003
            {<point name="construct.c.bmia003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia003
            #add-point:BEFORE FIELD bmia003
            {<point name="construct.b.bmia003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia003
            
            #add-point:AFTER FIELD bmia003
            {<point name="construct.a.bmia003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia007
            #add-point:ON ACTION controlp INFIELD bmia007
            {<point name="construct.c.bmia007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia007
            #add-point:BEFORE FIELD bmia007
            {<point name="construct.b.bmia007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia007
            
            #add-point:AFTER FIELD bmia007
            {<point name="construct.a.bmia007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiastus
            #add-point:BEFORE FIELD bmiastus
            {<point name="construct.b.bmiastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiastus
            
            #add-point:AFTER FIELD bmiastus
            {<point name="construct.a.bmiastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmiastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiastus
            #add-point:ON ACTION controlp INFIELD bmiastus
            {<point name="construct.c.bmiastus" />}
            #END add-point
 
         #Ctrlp:construct.c.bmia004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia004
            #add-point:ON ACTION controlp INFIELD bmia004
            {<point name="construct.c.bmia004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia004
            #add-point:BEFORE FIELD bmia004
            {<point name="construct.b.bmia004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia004
            
            #add-point:AFTER FIELD bmia004
            {<point name="construct.a.bmia004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia005
            #add-point:ON ACTION controlp INFIELD bmia005
            {<point name="construct.c.bmia005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia005
            #add-point:BEFORE FIELD bmia005
            {<point name="construct.b.bmia005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia005
            
            #add-point:AFTER FIELD bmia005
            {<point name="construct.a.bmia005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia006
            #add-point:BEFORE FIELD bmia006
            {<point name="construct.b.bmia006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia006
            
            #add-point:AFTER FIELD bmia006
            {<point name="construct.a.bmia006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia006
            #add-point:ON ACTION controlp INFIELD bmia006
            {<point name="construct.c.bmia006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia006_desc
            #add-point:BEFORE FIELD bmia006_desc
            {<point name="construct.b.bmia006_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia006_desc
            
            #add-point:AFTER FIELD bmia006_desc
            {<point name="construct.a.bmia006_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia006_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia006_desc
            #add-point:ON ACTION controlp INFIELD bmia006_desc
            {<point name="construct.c.bmia006_desc" />}
            #END add-point
 
         #Ctrlp:construct.c.bmia008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia008
            #add-point:ON ACTION controlp INFIELD bmia008
            {<point name="construct.c.bmia008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia008
            #add-point:BEFORE FIELD bmia008
            {<point name="construct.b.bmia008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia008
            
            #add-point:AFTER FIELD bmia008
            {<point name="construct.a.bmia008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia009
            #add-point:BEFORE FIELD bmia009
            {<point name="construct.b.bmia009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia009
            
            #add-point:AFTER FIELD bmia009
            {<point name="construct.a.bmia009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia009
            #add-point:ON ACTION controlp INFIELD bmia009
            {<point name="construct.c.bmia009" />}
            #END add-point
 
         #Ctrlp:construct.c.bmia010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia010
            #add-point:ON ACTION controlp INFIELD bmia010
            {<point name="construct.c.bmia010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia010
            #add-point:BEFORE FIELD bmia010
            {<point name="construct.b.bmia010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia010
            
            #add-point:AFTER FIELD bmia010
            {<point name="construct.a.bmia010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia011
            #add-point:ON ACTION controlp INFIELD bmia011
            {<point name="construct.c.bmia011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia011
            #add-point:BEFORE FIELD bmia011
            {<point name="construct.b.bmia011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia011
            
            #add-point:AFTER FIELD bmia011
            {<point name="construct.a.bmia011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia012
            #add-point:ON ACTION controlp INFIELD bmia012
            {<point name="construct.c.bmia012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia012
            #add-point:BEFORE FIELD bmia012
            {<point name="construct.b.bmia012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia012
            
            #add-point:AFTER FIELD bmia012
            {<point name="construct.a.bmia012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiasite
            #add-point:BEFORE FIELD bmiasite
            {<point name="construct.b.bmiasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiasite
            
            #add-point:AFTER FIELD bmiasite
            {<point name="construct.a.bmiasite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmiasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiasite
            #add-point:ON ACTION controlp INFIELD bmiasite
            {<point name="construct.c.bmiasite" />}
            #END add-point
 
         #Ctrlp:construct.c.bmia013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia013
            #add-point:ON ACTION controlp INFIELD bmia013
            {<point name="construct.c.bmia013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia013
            #add-point:BEFORE FIELD bmia013
            {<point name="construct.b.bmia013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia013
            
            #add-point:AFTER FIELD bmia013
            {<point name="construct.a.bmia013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia015
            #add-point:ON ACTION controlp INFIELD bmia015
            {<point name="construct.c.bmia015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia015
            #add-point:BEFORE FIELD bmia015
            {<point name="construct.b.bmia015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia015
            
            #add-point:AFTER FIELD bmia015
            {<point name="construct.a.bmia015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia019
            #add-point:BEFORE FIELD bmia019
            {<point name="construct.b.bmia019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia019
            
            #add-point:AFTER FIELD bmia019
            {<point name="construct.a.bmia019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia019
            #add-point:ON ACTION controlp INFIELD bmia019
            {<point name="construct.c.bmia019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia020
            #add-point:BEFORE FIELD bmia020
            {<point name="construct.b.bmia020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia020
            
            #add-point:AFTER FIELD bmia020
            {<point name="construct.a.bmia020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia020
            #add-point:ON ACTION controlp INFIELD bmia020
            {<point name="construct.c.bmia020" />}
            #END add-point
 
         #Ctrlp:construct.c.bmia014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia014
            #add-point:ON ACTION controlp INFIELD bmia014
            {<point name="construct.c.bmia014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia014
            #add-point:BEFORE FIELD bmia014
            {<point name="construct.b.bmia014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia014
            
            #add-point:AFTER FIELD bmia014
            {<point name="construct.a.bmia014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia016
            #add-point:BEFORE FIELD bmia016
            {<point name="construct.b.bmia016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia016
            
            #add-point:AFTER FIELD bmia016
            {<point name="construct.a.bmia016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia016
            #add-point:ON ACTION controlp INFIELD bmia016
            {<point name="construct.c.bmia016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia017
            #add-point:BEFORE FIELD bmia017
            {<point name="construct.b.bmia017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia017
            
            #add-point:AFTER FIELD bmia017
            {<point name="construct.a.bmia017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia017
            #add-point:ON ACTION controlp INFIELD bmia017
            {<point name="construct.c.bmia017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia018
            #add-point:BEFORE FIELD bmia018
            {<point name="construct.b.bmia018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia018
            
            #add-point:AFTER FIELD bmia018
            {<point name="construct.a.bmia018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmia018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia018
            #add-point:ON ACTION controlp INFIELD bmia018
            {<point name="construct.c.bmia018" />}
            #END add-point
 
         #Ctrlp:construct.c.bmiaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiaownid
            #add-point:ON ACTION controlp INFIELD bmiaownid
            {<point name="construct.c.bmiaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiaownid
            #add-point:BEFORE FIELD bmiaownid
            {<point name="construct.b.bmiaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiaownid
            
            #add-point:AFTER FIELD bmiaownid
            {<point name="construct.a.bmiaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmiaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiaowndp
            #add-point:ON ACTION controlp INFIELD bmiaowndp
            {<point name="construct.c.bmiaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiaowndp
            #add-point:BEFORE FIELD bmiaowndp
            {<point name="construct.b.bmiaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiaowndp
            
            #add-point:AFTER FIELD bmiaowndp
            {<point name="construct.a.bmiaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmiacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiacrtid
            #add-point:ON ACTION controlp INFIELD bmiacrtid
            {<point name="construct.c.bmiacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiacrtid
            #add-point:BEFORE FIELD bmiacrtid
            {<point name="construct.b.bmiacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiacrtid
            
            #add-point:AFTER FIELD bmiacrtid
            {<point name="construct.a.bmiacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmiacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiacrtdp
            #add-point:ON ACTION controlp INFIELD bmiacrtdp
            {<point name="construct.c.bmiacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiacrtdp
            #add-point:BEFORE FIELD bmiacrtdp
            {<point name="construct.b.bmiacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiacrtdp
            
            #add-point:AFTER FIELD bmiacrtdp
            {<point name="construct.a.bmiacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiacrtdt
            #add-point:BEFORE FIELD bmiacrtdt
            {<point name="construct.b.bmiacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmiamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiamodid
            #add-point:ON ACTION controlp INFIELD bmiamodid
            {<point name="construct.c.bmiamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiamodid
            #add-point:BEFORE FIELD bmiamodid
            {<point name="construct.b.bmiamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiamodid
            
            #add-point:AFTER FIELD bmiamodid
            {<point name="construct.a.bmiamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiamoddt
            #add-point:BEFORE FIELD bmiamoddt
            {<point name="construct.b.bmiamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmiacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiacnfid
            #add-point:ON ACTION controlp INFIELD bmiacnfid
            {<point name="construct.c.bmiacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiacnfid
            #add-point:BEFORE FIELD bmiacnfid
            {<point name="construct.b.bmiacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiacnfid
            
            #add-point:AFTER FIELD bmiacnfid
            {<point name="construct.a.bmiacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiacnfdt
            #add-point:BEFORE FIELD bmiacnfdt
            {<point name="construct.b.bmiacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON bmibseq,bmib001,bmibseq1,bmib002,bmib003,bmib004,bmib005,bmib006,bmib007, 
          bmib008,bmib009,bmibsite
           FROM s_detail1[1].bmibseq,s_detail1[1].bmib001,s_detail1[1].bmibseq1,s_detail1[1].bmib002, 
               s_detail1[1].bmib003,s_detail1[1].bmib004,s_detail1[1].bmib005,s_detail1[1].bmib006,s_detail1[1].bmib007, 
               s_detail1[1].bmib008,s_detail1[1].bmib009,s_detail1[1].bmibsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmibseq
            #add-point:BEFORE FIELD bmibseq
            {<point name="construct.b.page1.bmibseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmibseq
            
            #add-point:AFTER FIELD bmibseq
            {<point name="construct.a.page1.bmibseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmibseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmibseq
            #add-point:ON ACTION controlp INFIELD bmibseq
            {<point name="construct.c.page1.bmibseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.bmib001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib001
            #add-point:ON ACTION controlp INFIELD bmib001
            {<point name="construct.c.page1.bmib001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib001
            #add-point:BEFORE FIELD bmib001
            {<point name="construct.b.page1.bmib001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib001
            
            #add-point:AFTER FIELD bmib001
            {<point name="construct.a.page1.bmib001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmibseq1
            #add-point:BEFORE FIELD bmibseq1
            {<point name="construct.b.page1.bmibseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmibseq1
            
            #add-point:AFTER FIELD bmibseq1
            {<point name="construct.a.page1.bmibseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmibseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmibseq1
            #add-point:ON ACTION controlp INFIELD bmibseq1
            {<point name="construct.c.page1.bmibseq1" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.bmib002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib002
            #add-point:ON ACTION controlp INFIELD bmib002
            {<point name="construct.c.page1.bmib002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib002
            #add-point:BEFORE FIELD bmib002
            {<point name="construct.b.page1.bmib002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib002
            
            #add-point:AFTER FIELD bmib002
            {<point name="construct.a.page1.bmib002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmib003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib003
            #add-point:ON ACTION controlp INFIELD bmib003
            {<point name="construct.c.page1.bmib003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib003
            #add-point:BEFORE FIELD bmib003
            {<point name="construct.b.page1.bmib003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib003
            
            #add-point:AFTER FIELD bmib003
            {<point name="construct.a.page1.bmib003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib004
            #add-point:BEFORE FIELD bmib004
            {<point name="construct.b.page1.bmib004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib004
            
            #add-point:AFTER FIELD bmib004
            {<point name="construct.a.page1.bmib004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmib004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib004
            #add-point:ON ACTION controlp INFIELD bmib004
            {<point name="construct.c.page1.bmib004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib005
            #add-point:BEFORE FIELD bmib005
            {<point name="construct.b.page1.bmib005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib005
            
            #add-point:AFTER FIELD bmib005
            {<point name="construct.a.page1.bmib005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmib005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib005
            #add-point:ON ACTION controlp INFIELD bmib005
            {<point name="construct.c.page1.bmib005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib006
            #add-point:BEFORE FIELD bmib006
            {<point name="construct.b.page1.bmib006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib006
            
            #add-point:AFTER FIELD bmib006
            {<point name="construct.a.page1.bmib006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmib006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib006
            #add-point:ON ACTION controlp INFIELD bmib006
            {<point name="construct.c.page1.bmib006" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.bmib007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib007
            #add-point:ON ACTION controlp INFIELD bmib007
            {<point name="construct.c.page1.bmib007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib007
            #add-point:BEFORE FIELD bmib007
            {<point name="construct.b.page1.bmib007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib007
            
            #add-point:AFTER FIELD bmib007
            {<point name="construct.a.page1.bmib007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmib008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib008
            #add-point:ON ACTION controlp INFIELD bmib008
            {<point name="construct.c.page1.bmib008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib008
            #add-point:BEFORE FIELD bmib008
            {<point name="construct.b.page1.bmib008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib008
            
            #add-point:AFTER FIELD bmib008
            {<point name="construct.a.page1.bmib008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib009
            #add-point:BEFORE FIELD bmib009
            {<point name="construct.b.page1.bmib009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib009
            
            #add-point:AFTER FIELD bmib009
            {<point name="construct.a.page1.bmib009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmib009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib009
            #add-point:ON ACTION controlp INFIELD bmib009
            {<point name="construct.c.page1.bmib009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmibsite
            #add-point:BEFORE FIELD bmibsite
            {<point name="construct.b.page1.bmibsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmibsite
            
            #add-point:AFTER FIELD bmibsite
            {<point name="construct.a.page1.bmibsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmibsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmibsite
            #add-point:ON ACTION controlp INFIELD bmibsite
            {<point name="construct.c.page1.bmibsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON bmic001,bmic002,bmic003,bmic004,bmic005,bmicsite
           FROM s_detail2[1].bmic001,s_detail2[1].bmic002,s_detail2[1].bmic003,s_detail2[1].bmic004, 
               s_detail2[1].bmic005,s_detail2[1].bmicsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #Ctrlp:construct.c.page2.bmic001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic001
            #add-point:ON ACTION controlp INFIELD bmic001
            {<point name="construct.c.page2.bmic001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic001
            #add-point:BEFORE FIELD bmic001
            {<point name="construct.b.page2.bmic001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic001
            
            #add-point:AFTER FIELD bmic001
            {<point name="construct.a.page2.bmic001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmic002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic002
            #add-point:ON ACTION controlp INFIELD bmic002
            {<point name="construct.c.page2.bmic002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic002
            #add-point:BEFORE FIELD bmic002
            {<point name="construct.b.page2.bmic002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic002
            
            #add-point:AFTER FIELD bmic002
            {<point name="construct.a.page2.bmic002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic003
            #add-point:BEFORE FIELD bmic003
            {<point name="construct.b.page2.bmic003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic003
            
            #add-point:AFTER FIELD bmic003
            {<point name="construct.a.page2.bmic003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmic003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic003
            #add-point:ON ACTION controlp INFIELD bmic003
            {<point name="construct.c.page2.bmic003" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.bmic004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic004
            #add-point:ON ACTION controlp INFIELD bmic004
            {<point name="construct.c.page2.bmic004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic004
            #add-point:BEFORE FIELD bmic004
            {<point name="construct.b.page2.bmic004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic004
            
            #add-point:AFTER FIELD bmic004
            {<point name="construct.a.page2.bmic004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmic005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic005
            #add-point:ON ACTION controlp INFIELD bmic005
            {<point name="construct.c.page2.bmic005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic005
            #add-point:BEFORE FIELD bmic005
            {<point name="construct.b.page2.bmic005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic005
            
            #add-point:AFTER FIELD bmic005
            {<point name="construct.a.page2.bmic005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmicsite
            #add-point:BEFORE FIELD bmicsite
            {<point name="construct.b.page2.bmicsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmicsite
            
            #add-point:AFTER FIELD bmicsite
            {<point name="construct.a.page2.bmicsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmicsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmicsite
            #add-point:ON ACTION controlp INFIELD bmicsite
            {<point name="construct.c.page2.bmicsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table3 ON bmie001,bmie002,bmie003,bmiesite
           FROM s_detail3[1].bmie001,s_detail3[1].bmie002,s_detail3[1].bmie003,s_detail3[1].bmiesite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 3)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmie001
            #add-point:BEFORE FIELD bmie001
            {<point name="construct.b.page3.bmie001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmie001
            
            #add-point:AFTER FIELD bmie001
            {<point name="construct.a.page3.bmie001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmie001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmie001
            #add-point:ON ACTION controlp INFIELD bmie001
            {<point name="construct.c.page3.bmie001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmie002
            #add-point:BEFORE FIELD bmie002
            {<point name="construct.b.page3.bmie002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmie002
            
            #add-point:AFTER FIELD bmie002
            {<point name="construct.a.page3.bmie002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmie002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmie002
            #add-point:ON ACTION controlp INFIELD bmie002
            {<point name="construct.c.page3.bmie002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmie003
            #add-point:BEFORE FIELD bmie003
            {<point name="construct.b.page3.bmie003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmie003
            
            #add-point:AFTER FIELD bmie003
            {<point name="construct.a.page3.bmie003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmie003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmie003
            #add-point:ON ACTION controlp INFIELD bmie003
            {<point name="construct.c.page3.bmie003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiesite
            #add-point:BEFORE FIELD bmiesite
            {<point name="construct.b.page3.bmiesite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiesite
            
            #add-point:AFTER FIELD bmiesite
            {<point name="construct.a.page3.bmiesite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page3.bmiesite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiesite
            #add-point:ON ACTION controlp INFIELD bmiesite
            {<point name="construct.c.page3.bmiesite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table4 ON bmidseq,bmid016,bmid001,bmid002,bmid004,bmid003,bmid005,bmid008,bmid009, 
          bmid010,bmid011,bmid012,bmid013,bmid014,bmid015,bmidsite
           FROM s_detail4[1].bmidseq,s_detail4[1].bmid016,s_detail4[1].bmid001,s_detail4[1].bmid002, 
               s_detail4[1].bmid004,s_detail4[1].bmid003,s_detail4[1].bmid005,s_detail4[1].bmid008,s_detail4[1].bmid009, 
               s_detail4[1].bmid010,s_detail4[1].bmid011,s_detail4[1].bmid012,s_detail4[1].bmid013,s_detail4[1].bmid014, 
               s_detail4[1].bmid015,s_detail4[1].bmidsite
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 4)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmidseq
            #add-point:BEFORE FIELD bmidseq
            {<point name="construct.b.page4.bmidseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmidseq
            
            #add-point:AFTER FIELD bmidseq
            {<point name="construct.a.page4.bmidseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmidseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmidseq
            #add-point:ON ACTION controlp INFIELD bmidseq
            {<point name="construct.c.page4.bmidseq" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid016
            #add-point:BEFORE FIELD bmid016
            {<point name="construct.b.page4.bmid016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid016
            
            #add-point:AFTER FIELD bmid016
            {<point name="construct.a.page4.bmid016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid016
            #add-point:ON ACTION controlp INFIELD bmid016
            {<point name="construct.c.page4.bmid016" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.bmid001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid001
            #add-point:ON ACTION controlp INFIELD bmid001
            {<point name="construct.c.page4.bmid001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid001
            #add-point:BEFORE FIELD bmid001
            {<point name="construct.b.page4.bmid001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid001
            
            #add-point:AFTER FIELD bmid001
            {<point name="construct.a.page4.bmid001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid002
            #add-point:BEFORE FIELD bmid002
            {<point name="construct.b.page4.bmid002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid002
            
            #add-point:AFTER FIELD bmid002
            {<point name="construct.a.page4.bmid002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid002
            #add-point:ON ACTION controlp INFIELD bmid002
            {<point name="construct.c.page4.bmid002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid004
            #add-point:BEFORE FIELD bmid004
            {<point name="construct.b.page4.bmid004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid004
            
            #add-point:AFTER FIELD bmid004
            {<point name="construct.a.page4.bmid004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid004
            #add-point:ON ACTION controlp INFIELD bmid004
            {<point name="construct.c.page4.bmid004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid003
            #add-point:BEFORE FIELD bmid003
            {<point name="construct.b.page4.bmid003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid003
            
            #add-point:AFTER FIELD bmid003
            {<point name="construct.a.page4.bmid003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid003
            #add-point:ON ACTION controlp INFIELD bmid003
            {<point name="construct.c.page4.bmid003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid005
            #add-point:BEFORE FIELD bmid005
            {<point name="construct.b.page4.bmid005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid005
            
            #add-point:AFTER FIELD bmid005
            {<point name="construct.a.page4.bmid005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid005
            #add-point:ON ACTION controlp INFIELD bmid005
            {<point name="construct.c.page4.bmid005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid008
            #add-point:BEFORE FIELD bmid008
            {<point name="construct.b.page4.bmid008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid008
            
            #add-point:AFTER FIELD bmid008
            {<point name="construct.a.page4.bmid008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid008
            #add-point:ON ACTION controlp INFIELD bmid008
            {<point name="construct.c.page4.bmid008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid009
            #add-point:BEFORE FIELD bmid009
            {<point name="construct.b.page4.bmid009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid009
            
            #add-point:AFTER FIELD bmid009
            {<point name="construct.a.page4.bmid009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid009
            #add-point:ON ACTION controlp INFIELD bmid009
            {<point name="construct.c.page4.bmid009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid010
            #add-point:BEFORE FIELD bmid010
            {<point name="construct.b.page4.bmid010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid010
            
            #add-point:AFTER FIELD bmid010
            {<point name="construct.a.page4.bmid010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid010
            #add-point:ON ACTION controlp INFIELD bmid010
            {<point name="construct.c.page4.bmid010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid011
            #add-point:BEFORE FIELD bmid011
            {<point name="construct.b.page4.bmid011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid011
            
            #add-point:AFTER FIELD bmid011
            {<point name="construct.a.page4.bmid011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid011
            #add-point:ON ACTION controlp INFIELD bmid011
            {<point name="construct.c.page4.bmid011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid012
            #add-point:BEFORE FIELD bmid012
            {<point name="construct.b.page4.bmid012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid012
            
            #add-point:AFTER FIELD bmid012
            {<point name="construct.a.page4.bmid012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid012
            #add-point:ON ACTION controlp INFIELD bmid012
            {<point name="construct.c.page4.bmid012" />}
            #END add-point
 
         #Ctrlp:construct.c.page4.bmid013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid013
            #add-point:ON ACTION controlp INFIELD bmid013
            {<point name="construct.c.page4.bmid013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid013
            #add-point:BEFORE FIELD bmid013
            {<point name="construct.b.page4.bmid013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid013
            
            #add-point:AFTER FIELD bmid013
            {<point name="construct.a.page4.bmid013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid014
            #add-point:BEFORE FIELD bmid014
            {<point name="construct.b.page4.bmid014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid014
            
            #add-point:AFTER FIELD bmid014
            {<point name="construct.a.page4.bmid014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid014
            #add-point:ON ACTION controlp INFIELD bmid014
            {<point name="construct.c.page4.bmid014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid015
            #add-point:BEFORE FIELD bmid015
            {<point name="construct.b.page4.bmid015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid015
            
            #add-point:AFTER FIELD bmid015
            {<point name="construct.a.page4.bmid015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmid015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid015
            #add-point:ON ACTION controlp INFIELD bmid015
            {<point name="construct.c.page4.bmid015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmidsite
            #add-point:BEFORE FIELD bmidsite
            {<point name="construct.b.page4.bmidsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmidsite
            
            #add-point:AFTER FIELD bmidsite
            {<point name="construct.a.page4.bmidsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page4.bmidsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmidsite
            #add-point:ON ACTION controlp INFIELD bmidsite
            {<point name="construct.c.page4.bmidsite" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
            INITIALIZE g_wc2_table3 TO NULL
 
            INITIALIZE g_wc2_table4 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "bmia_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "bmib_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "bmic_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "bmie_t" 
                     LET g_wc2_table3 = la_wc[li_idx].wc
 
                  WHEN la_wc[li_idx].tableid = "bmid_t" 
                     LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
   IF g_wc2_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
   END IF
 
   IF g_wc2_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.default_search" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION abmt400_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bmiadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
         INITIALIZE g_wc2_table3 TO NULL
 
         INITIALIZE g_wc2_table4 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "bmia_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmib_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmic_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "bmie_t" 
                  LET g_wc2_table3 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "bmid_t" 
                  LET g_wc2_table4 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
            OR NOT cl_null(g_wc2_table3)
 
            OR NOT cl_null(g_wc2_table4)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
            IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
            END IF
 
            IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.delete" ver="22" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION abmt400_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_bmia_m.bmiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmt400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE abmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt400_master_referesh USING g_bmia_m.bmiadocno INTO g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
       g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004, 
       g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020, 
       g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp, 
       g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt, 
       g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt,g_bmia_m.bmiadocno_desc,g_bmia_m.bmia002_desc,g_bmia_m.bmia003_desc, 
       g_bmia_m.bmia007_desc,g_bmia_m.bmia005_desc,g_bmia_m.bmia008_desc,g_bmia_m.bmia011_desc,g_bmia_m.bmia013_desc, 
       g_bmia_m.bmia014_desc,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid_desc, 
       g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiacnfid_desc
   
   #檢查是否允許此動作
   IF NOT abmt400_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_bmia_m_mask_o.* =  g_bmia_m.*
   CALL abmt400_bmia_t_mask()
   LET g_bmia_m_mask_n.* =  g_bmia_m.*
   
   CALL abmt400_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL abmt400_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
 
      DELETE FROM bmia_t
       WHERE bmiaent = g_enterprise AND bmiadocno = g_bmia_m.bmiadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_bmia_m.bmiadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM bmib_t
       WHERE bmibent = g_enterprise AND bmibdocno = g_bmia_m.bmiadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmib_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM bmic_t
       WHERE bmicent = g_enterprise AND
             bmicdocno = g_bmia_m.bmiadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmic_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM bmie_t
       WHERE bmieent = g_enterprise AND
             bmiedocno = g_bmia_m.bmiadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete3"/>}
      #end add-point
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM bmid_t
       WHERE bmident = g_enterprise AND
             bmiddocno = g_bmia_m.bmiadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmid_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete4"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE abmt400_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_bmib_d.clear() 
      CALL g_bmib2_d.clear()       
      CALL g_bmib3_d.clear()       
      CALL g_bmib4_d.clear()       
 
     
      CALL abmt400_ui_browser_refresh()  
      #CALL abmt400_ui_headershow()  
      #CALL abmt400_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL abmt400_browser_fill("")
         CALL abmt400_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
      
 
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE abmt400_cl
 
   #功能已完成,通報訊息中心
   CALL abmt400_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="abmt400.delete_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION abmt400_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM bmib_t
       WHERE bmibent = g_enterprise AND
         bmibdocno = ps_keys_bak[1] AND bmibseq = ps_keys_bak[2] AND bmibseq1 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bmib_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM bmic_t
       WHERE bmicent = g_enterprise AND
             bmicdocno = ps_keys_bak[1] AND bmic001 = ps_keys_bak[2] AND bmic002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmic_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_bmib2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point    
      DELETE FROM bmie_t
       WHERE bmieent = g_enterprise AND
             bmiedocno = ps_keys_bak[1] AND bmie001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_bmib3_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point    
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point    
      DELETE FROM bmid_t
       WHERE bmident = g_enterprise AND
             bmiddocno = ps_keys_bak[1] AND bmidseq = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmid_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_bmib4_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:10,PR版次:10) Build-000200
#+ 
#+ Filename...: abmt400
#+ Description: 料件承認申請作業
#+ Creator....: 02295(2014-06-12 16:11:31)
#+ Modifier...: 02295(2014-11-21 10:38:05) -SD/PR-
]]>
  </section>
  <section id="abmt400.detail_reproduce" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION abmt400_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bmib_t.*
   DEFINE l_detail2    RECORD LIKE bmic_t.*
 
   DEFINE l_detail3    RECORD LIKE bmie_t.*
 
   DEFINE l_detail4    RECORD LIKE bmid_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abmt400_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE abmt400_detail AS ",
                "SELECT * FROM bmib_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt400_detail SELECT * FROM bmib_t 
                                         WHERE bmibent = g_enterprise AND bmibdocno = g_bmiadocno_t
 
   
   #將key修正為調整後   
   UPDATE abmt400_detail 
      #更新key欄位
      SET bmibdocno = g_bmia_m.bmiadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO bmib_t SELECT * FROM abmt400_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt400_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmt400_detail AS ",
      "SELECT * FROM bmic_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt400_detail SELECT * FROM bmic_t
                                         WHERE bmicent = g_enterprise AND bmicdocno = g_bmiadocno_t
 
 
   #將key修正為調整後   
   UPDATE abmt400_detail SET bmicdocno = g_bmia_m.bmiadocno
 
  
   #將資料塞回原table   
   INSERT INTO bmic_t SELECT * FROM abmt400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table3.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmt400_detail AS ",
      "SELECT * FROM bmie_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt400_detail SELECT * FROM bmie_t
                                         WHERE bmieent = g_enterprise AND bmiedocno = g_bmiadocno_t
 
 
   #將key修正為調整後   
   UPDATE abmt400_detail SET bmiedocno = g_bmia_m.bmiadocno
 
  
   #將資料塞回原table   
   INSERT INTO bmie_t SELECT * FROM abmt400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table3.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table3.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table4.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmt400_detail AS ",
      "SELECT * FROM bmid_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt400_detail SELECT * FROM bmid_t
                                         WHERE bmident = g_enterprise AND bmiddocno = g_bmiadocno_t
 
 
   #將key修正為調整後   
   UPDATE abmt400_detail SET bmiddocno = g_bmia_m.bmiadocno
 
  
   #將資料塞回原table   
   INSERT INTO bmid_t SELECT * FROM abmt400_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table4.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt400_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table4.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.detail_show" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION abmt400_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.fetch" ver="17" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abmt400_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bmia_m.bmiadocno = g_browser[g_current_idx].b_bmiadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE abmt400_master_referesh USING g_bmia_m.bmiadocno INTO g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
       g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004, 
       g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020, 
       g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp, 
       g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt, 
       g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt,g_bmia_m.bmiadocno_desc,g_bmia_m.bmia002_desc,g_bmia_m.bmia003_desc, 
       g_bmia_m.bmia007_desc,g_bmia_m.bmia005_desc,g_bmia_m.bmia008_desc,g_bmia_m.bmia011_desc,g_bmia_m.bmia013_desc, 
       g_bmia_m.bmia014_desc,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid_desc, 
       g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiacnfid_desc
   
   #遮罩相關處理
   LET g_bmia_m_mask_o.* =  g_bmia_m.*
   CALL abmt400_bmia_t_mask()
   LET g_bmia_m_mask_n.* =  g_bmia_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt400_set_act_visible()   
   CALL abmt400_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_bmia_m_t.* = g_bmia_m.*
   LET g_bmia_m_o.* = g_bmia_m.*
   
   LET g_data_owner = g_bmia_m.bmiaownid      
   LET g_data_dept  = g_bmia_m.bmiaowndp
   
   #重新顯示   
   CALL abmt400_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.fill_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION abmt400_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1')  AND 
      (cl_null(g_wc2_table3) OR g_wc2_table3.trim() = '1=1')  AND 
      (cl_null(g_wc2_table4) OR g_wc2_table4.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.filter" ver="6" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION abmt400_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON bmiadocno,bmiadocdt,bmia001,bmia004,bmia007,bmiacrtid,bmiacrtdt,bmiamodid, 
          bmiamoddt
                          FROM s_browse[1].b_bmiadocno,s_browse[1].b_bmiadocdt,s_browse[1].b_bmia001, 
                              s_browse[1].b_bmia004,s_browse[1].b_bmia007,s_browse[1].b_bmiacrtid,s_browse[1].b_bmiacrtdt, 
                              s_browse[1].b_bmiamodid,s_browse[1].b_bmiamoddt
 
         BEFORE CONSTRUCT
               DISPLAY abmt400_filter_parser('bmiadocno') TO s_browse[1].b_bmiadocno
            DISPLAY abmt400_filter_parser('bmiadocdt') TO s_browse[1].b_bmiadocdt
            DISPLAY abmt400_filter_parser('bmia001') TO s_browse[1].b_bmia001
            DISPLAY abmt400_filter_parser('bmia004') TO s_browse[1].b_bmia004
            DISPLAY abmt400_filter_parser('bmia007') TO s_browse[1].b_bmia007
            DISPLAY abmt400_filter_parser('bmiacrtid') TO s_browse[1].b_bmiacrtid
            DISPLAY abmt400_filter_parser('bmiacrtdt') TO s_browse[1].b_bmiacrtdt
            DISPLAY abmt400_filter_parser('bmiamodid') TO s_browse[1].b_bmiamodid
            DISPLAY abmt400_filter_parser('bmiamoddt') TO s_browse[1].b_bmiamoddt
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL abmt400_filter_show('bmiadocno')
   CALL abmt400_filter_show('bmiadocdt')
   CALL abmt400_filter_show('bmia001')
   CALL abmt400_filter_show('bmia004')
   CALL abmt400_filter_show('bmia007')
   CALL abmt400_filter_show('bmiacrtid')
   CALL abmt400_filter_show('bmiacrtdt')
   CALL abmt400_filter_show('bmiamodid')
   CALL abmt400_filter_show('bmiamoddt')
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.filter_parser" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION abmt400_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION abmt400_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = abmt400_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.global" ver="20" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_bmia_m        RECORD
       bmiadocno LIKE bmia_t.bmiadocno, 
   bmiadocdt LIKE bmia_t.bmiadocdt, 
   bmia002 LIKE bmia_t.bmia002, 
   bmia002_desc LIKE type_t.chr80, 
   bmiadocno_desc LIKE type_t.chr80, 
   bmia001 LIKE bmia_t.bmia001, 
   bmia003 LIKE bmia_t.bmia003, 
   bmia003_desc LIKE type_t.chr80, 
   bmia007 LIKE bmia_t.bmia007, 
   bmia007_desc LIKE type_t.chr80, 
   bmiastus LIKE bmia_t.bmiastus, 
   bmia004 LIKE bmia_t.bmia004, 
   imaal003a LIKE type_t.chr500, 
   imaal004a LIKE type_t.chr500, 
   bmia005 LIKE bmia_t.bmia005, 
   bmia005_desc LIKE type_t.chr80, 
   bmia006 LIKE bmia_t.bmia006, 
   bmia006_desc LIKE type_t.chr80, 
   bmia008 LIKE bmia_t.bmia008, 
   bmia008_desc LIKE type_t.chr80, 
   bmia009 LIKE bmia_t.bmia009, 
   bmia010 LIKE bmia_t.bmia010, 
   imaal003b LIKE type_t.chr500, 
   imaal004b LIKE type_t.chr500, 
   bmia011 LIKE bmia_t.bmia011, 
   bmia011_desc LIKE type_t.chr80, 
   bmia012 LIKE bmia_t.bmia012, 
   bmiasite LIKE bmia_t.bmiasite, 
   bmia013 LIKE bmia_t.bmia013, 
   bmia013_desc LIKE type_t.chr80, 
   bmia015 LIKE bmia_t.bmia015, 
   bmia019 LIKE bmia_t.bmia019, 
   bmia020 LIKE bmia_t.bmia020, 
   bmia014 LIKE bmia_t.bmia014, 
   bmia014_desc LIKE type_t.chr80, 
   bmia016 LIKE bmia_t.bmia016, 
   bmia017 LIKE bmia_t.bmia017, 
   bmia018 LIKE bmia_t.bmia018, 
   bmiaownid LIKE bmia_t.bmiaownid, 
   bmiaownid_desc LIKE type_t.chr80, 
   bmiaowndp LIKE bmia_t.bmiaowndp, 
   bmiaowndp_desc LIKE type_t.chr80, 
   bmiacrtid LIKE bmia_t.bmiacrtid, 
   bmiacrtid_desc LIKE type_t.chr80, 
   bmiacrtdp LIKE bmia_t.bmiacrtdp, 
   bmiacrtdp_desc LIKE type_t.chr80, 
   bmiacrtdt LIKE bmia_t.bmiacrtdt, 
   bmiamodid LIKE bmia_t.bmiamodid, 
   bmiamodid_desc LIKE type_t.chr80, 
   bmiamoddt LIKE bmia_t.bmiamoddt, 
   bmiacnfid LIKE bmia_t.bmiacnfid, 
   bmiacnfid_desc LIKE type_t.chr80, 
   bmiacnfdt LIKE bmia_t.bmiacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bmib_d        RECORD
       bmibseq LIKE bmib_t.bmibseq, 
   bmib001 LIKE bmib_t.bmib001, 
   bmib001_desc LIKE type_t.chr500, 
   bmibseq1 LIKE bmib_t.bmibseq1, 
   bmib002 LIKE bmib_t.bmib002, 
   bmib003 LIKE bmib_t.bmib003, 
   bmib003_desc LIKE type_t.chr500, 
   bmib004 LIKE bmib_t.bmib004, 
   bmib005 LIKE bmib_t.bmib005, 
   bmib006 LIKE bmib_t.bmib006, 
   bmib007 LIKE bmib_t.bmib007, 
   bmib007_desc LIKE type_t.chr500, 
   bmib008 LIKE bmib_t.bmib008, 
   bmib008_desc LIKE type_t.chr500, 
   bmib009 LIKE bmib_t.bmib009, 
   bmibsite LIKE bmib_t.bmibsite
       END RECORD
PRIVATE TYPE type_g_bmib2_d RECORD
       bmic001 LIKE bmic_t.bmic001, 
   bmic001_desc LIKE type_t.chr500, 
   bmic002 LIKE bmic_t.bmic002, 
   bmic002_desc LIKE type_t.chr500, 
   bmic003 LIKE bmic_t.bmic003, 
   bmic004 LIKE bmic_t.bmic004, 
   bmic004_desc LIKE type_t.chr500, 
   bmic005 LIKE bmic_t.bmic005, 
   bmic005_desc LIKE type_t.chr500, 
   bmicsite LIKE bmic_t.bmicsite
       END RECORD
PRIVATE TYPE type_g_bmib3_d RECORD
       bmie001 LIKE bmie_t.bmie001, 
   bmie002 LIKE bmie_t.bmie002, 
   bmie003 LIKE bmie_t.bmie003, 
   bmiesite LIKE bmie_t.bmiesite
       END RECORD
PRIVATE TYPE type_g_bmib4_d RECORD
       bmidseq LIKE bmid_t.bmidseq, 
   bmid016 LIKE bmid_t.bmid016, 
   bmid001 LIKE bmid_t.bmid001, 
   bmid001_desc LIKE type_t.chr500, 
   bmid002 LIKE bmid_t.bmid002, 
   bmid004 LIKE bmid_t.bmid004, 
   bmid003 LIKE bmid_t.bmid003, 
   bmid005 LIKE bmid_t.bmid005, 
   bmid008 LIKE bmid_t.bmid008, 
   bmid009 LIKE bmid_t.bmid009, 
   bmid010 LIKE bmid_t.bmid010, 
   bmid011 LIKE bmid_t.bmid011, 
   bmid012 LIKE bmid_t.bmid012, 
   bmid013 LIKE bmid_t.bmid013, 
   bmid013_desc LIKE type_t.chr500, 
   bmid014 LIKE bmid_t.bmid014, 
   bmid015 LIKE bmid_t.bmid015, 
   bmidsite LIKE bmid_t.bmidsite
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_bmiadocno LIKE bmia_t.bmiadocno,
   b_bmiadocno_desc LIKE type_t.chr80,
      b_bmiadocdt LIKE bmia_t.bmiadocdt,
      b_bmia001 LIKE bmia_t.bmia001,
      b_bmia004 LIKE bmia_t.bmia004,
      b_bmia007 LIKE bmia_t.bmia007,
   b_bmia007_desc LIKE type_t.chr80,
      b_bmiacrtid LIKE bmia_t.bmiacrtid,
   b_bmiacrtid_desc LIKE type_t.chr80,
      b_bmiacrtdt LIKE bmia_t.bmiacrtdt,
      b_bmiamodid LIKE bmia_t.bmiamodid,
   b_bmiamodid_desc LIKE type_t.chr80,
      b_bmiamoddt LIKE bmia_t.bmiamoddt
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_bmia_m          type_g_bmia_m
DEFINE g_bmia_m_t        type_g_bmia_m
DEFINE g_bmia_m_o        type_g_bmia_m
DEFINE g_bmia_m_mask_o   type_g_bmia_m #轉換遮罩前資料
DEFINE g_bmia_m_mask_n   type_g_bmia_m #轉換遮罩後資料
 
   DEFINE g_bmiadocno_t LIKE bmia_t.bmiadocno
 
 
DEFINE g_bmib_d          DYNAMIC ARRAY OF type_g_bmib_d
DEFINE g_bmib_d_t        type_g_bmib_d
DEFINE g_bmib_d_o        type_g_bmib_d
DEFINE g_bmib_d_mask_o   DYNAMIC ARRAY OF type_g_bmib_d #轉換遮罩前資料
DEFINE g_bmib_d_mask_n   DYNAMIC ARRAY OF type_g_bmib_d #轉換遮罩後資料
DEFINE g_bmib2_d          DYNAMIC ARRAY OF type_g_bmib2_d
DEFINE g_bmib2_d_t        type_g_bmib2_d
DEFINE g_bmib2_d_o        type_g_bmib2_d
DEFINE g_bmib2_d_mask_o   DYNAMIC ARRAY OF type_g_bmib2_d #轉換遮罩前資料
DEFINE g_bmib2_d_mask_n   DYNAMIC ARRAY OF type_g_bmib2_d #轉換遮罩後資料
DEFINE g_bmib3_d          DYNAMIC ARRAY OF type_g_bmib3_d
DEFINE g_bmib3_d_t        type_g_bmib3_d
DEFINE g_bmib3_d_o        type_g_bmib3_d
DEFINE g_bmib3_d_mask_o   DYNAMIC ARRAY OF type_g_bmib3_d #轉換遮罩前資料
DEFINE g_bmib3_d_mask_n   DYNAMIC ARRAY OF type_g_bmib3_d #轉換遮罩後資料
DEFINE g_bmib4_d          DYNAMIC ARRAY OF type_g_bmib4_d
DEFINE g_bmib4_d_t        type_g_bmib4_d
DEFINE g_bmib4_d_o        type_g_bmib4_d
DEFINE g_bmib4_d_mask_o   DYNAMIC ARRAY OF type_g_bmib4_d #轉換遮罩前資料
DEFINE g_bmib4_d_mask_n   DYNAMIC ARRAY OF type_g_bmib4_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
DEFINE g_wc2_table3   STRING
 
DEFINE g_wc2_table4   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="abmt400.idx_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION abmt400_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmib_d.getLength() THEN
         LET g_detail_idx = g_bmib_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmib_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmib_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_bmib2_d.getLength() THEN
         LET g_detail_idx = g_bmib2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmib2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmib2_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_bmib3_d.getLength() THEN
         LET g_detail_idx = g_bmib3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmib3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmib3_d.getLength() TO FORMONLY.cnt
   END IF
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_bmib4_d.getLength() THEN
         LET g_detail_idx = g_bmib4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmib4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmib4_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.init" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abmt400_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('bmiastus','13','N,Y,4,A,D,R,W,X')
 
      CALL cl_set_combo_scc('bmia001','2014') 
   CALL cl_set_combo_scc('bmie001','1006') 
   CALL cl_set_combo_scc('bmid016','5056') 
   CALL cl_set_combo_scc('bmid004','5058') 
   CALL cl_set_combo_scc('bmid003','5057') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL abmt400_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="abmt400.input" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION abmt400_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia002_desc,g_bmia_m.bmiadocno_desc, 
       g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia003_desc,g_bmia_m.bmia007,g_bmia_m.bmia007_desc, 
       g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.imaal003a,g_bmia_m.imaal004a,g_bmia_m.bmia005,g_bmia_m.bmia005_desc, 
       g_bmia_m.bmia006,g_bmia_m.bmia006_desc,g_bmia_m.bmia008,g_bmia_m.bmia008_desc,g_bmia_m.bmia009, 
       g_bmia_m.bmia010,g_bmia_m.imaal003b,g_bmia_m.imaal004b,g_bmia_m.bmia011,g_bmia_m.bmia011_desc, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia013_desc,g_bmia_m.bmia015,g_bmia_m.bmia019, 
       g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia014_desc,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018, 
       g_bmia_m.bmiaownid,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid, 
       g_bmia_m.bmiacrtid_desc,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid, 
       g_bmia_m.bmiamodid_desc,g_bmia_m.bmiamoddt,g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfid_desc,g_bmia_m.bmiacnfdt 

   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT bmibseq,bmib001,bmibseq1,bmib002,bmib003,bmib004,bmib005,bmib006,bmib007, 
       bmib008,bmib009,bmibsite FROM bmib_t WHERE bmibent=? AND bmibdocno=? AND bmibseq=? AND bmibseq1=?  
       FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt400_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmic001,bmic002,bmic003,bmic004,bmic005,bmicsite FROM bmic_t WHERE bmicent=?  
       AND bmicdocno=? AND bmic001=? AND bmic002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt400_bcl2 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql3" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmie001,bmie002,bmie003,bmiesite FROM bmie_t WHERE bmieent=? AND bmiedocno=?  
       AND bmie001=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql3"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt400_bcl3 CURSOR FROM g_forupd_sql
 
   #add-point:input段define_sql
   {<point name="input.define_sql4" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmidseq,bmid016,bmid001,bmid002,bmid004,bmid003,bmid005,bmid008,bmid009, 
       bmid010,bmid011,bmid012,bmid013,bmid014,bmid015,bmidsite FROM bmid_t WHERE bmident=? AND bmiddocno=?  
       AND bmidseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql4"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt400_bcl4 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abmt400_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL abmt400_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003, 
       g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008, 
       g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011,g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013, 
       g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017, 
       g_bmia_m.bmia018
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="abmt400.input.body" ver="22" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmib_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmib_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_bmib_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmib_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmib_d[l_ac].bmibseq IS NOT NULL
               AND g_bmib_d[l_ac].bmibseq1 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bmib_d_t.* = g_bmib_d[l_ac].*  #BACKUP
               LET g_bmib_d_o.* = g_bmib_d[l_ac].*  #BACKUP
               CALL abmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL abmt400_set_no_entry_b(l_cmd)
               IF NOT abmt400_lock_b("bmib_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt400_bcl INTO g_bmib_d[l_ac].bmibseq,g_bmib_d[l_ac].bmib001,g_bmib_d[l_ac].bmibseq1, 
                      g_bmib_d[l_ac].bmib002,g_bmib_d[l_ac].bmib003,g_bmib_d[l_ac].bmib004,g_bmib_d[l_ac].bmib005, 
                      g_bmib_d[l_ac].bmib006,g_bmib_d[l_ac].bmib007,g_bmib_d[l_ac].bmib008,g_bmib_d[l_ac].bmib009, 
                      g_bmib_d[l_ac].bmibsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_bmib_d_t.bmibseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmib_d_mask_o[l_ac].* =  g_bmib_d[l_ac].*
                  CALL abmt400_bmib_t_mask()
                  LET g_bmib_d_mask_n[l_ac].* =  g_bmib_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL abmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmib_d[l_ac].* TO NULL 
            INITIALIZE g_bmib_d_t.* TO NULL 
            INITIALIZE g_bmib_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_bmib_d[l_ac].bmib005 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_bmib_d_t.* = g_bmib_d[l_ac].*     #新輸入資料
            LET g_bmib_d_o.* = g_bmib_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmib_d[li_reproduce_target].* = g_bmib_d[li_reproduce].*
 
               LET g_bmib_d[li_reproduce_target].bmibseq = NULL
               LET g_bmib_d[li_reproduce_target].bmibseq1 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmib_t 
             WHERE bmibent = g_enterprise AND bmibdocno = g_bmia_m.bmiadocno
 
               AND bmibseq = g_bmib_d[l_ac].bmibseq
               AND bmibseq1 = g_bmib_d[l_ac].bmibseq1
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys[2] = g_bmib_d[g_detail_idx].bmibseq
               LET gs_keys[3] = g_bmib_d[g_detail_idx].bmibseq1
               CALL abmt400_insert_b('bmib_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_bmib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmib_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_bmia_m.bmiadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_bmib_d_t.bmibseq
               LET gs_keys[gs_keys.getLength()+1] = g_bmib_d_t.bmibseq1
 
            
               #刪除同層單身
               IF NOT abmt400_delete_b('bmib_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT abmt400_key_delete_b(gs_keys,'bmib_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE abmt400_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_bmib_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_bmib_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmibseq
            #add-point:BEFORE FIELD bmibseq
            {<point name="input.b.page1.bmibseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmibseq
            
            #add-point:AFTER FIELD bmibseq
            {<point name="input.a.page1.bmibseq" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmibseq
            #add-point:ON CHANGE bmibseq
            {<point name="input.g.page1.bmibseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib001
            
            #add-point:AFTER FIELD bmib001
            {<point name="input.a.page1.bmib001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib001
            #add-point:BEFORE FIELD bmib001
            {<point name="input.b.page1.bmib001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib001
            #add-point:ON CHANGE bmib001
            {<point name="input.g.page1.bmib001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmibseq1
            #add-point:BEFORE FIELD bmibseq1
            {<point name="input.b.page1.bmibseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmibseq1
            
            #add-point:AFTER FIELD bmibseq1
            {<point name="input.a.page1.bmibseq1" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmibseq1
            #add-point:ON CHANGE bmibseq1
            {<point name="input.g.page1.bmibseq1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib002
            #add-point:BEFORE FIELD bmib002
            {<point name="input.b.page1.bmib002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib002
            
            #add-point:AFTER FIELD bmib002
            {<point name="input.a.page1.bmib002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib002
            #add-point:ON CHANGE bmib002
            {<point name="input.g.page1.bmib002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib003
            
            #add-point:AFTER FIELD bmib003
            {<point name="input.a.page1.bmib003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib003
            #add-point:BEFORE FIELD bmib003
            {<point name="input.b.page1.bmib003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib003
            #add-point:ON CHANGE bmib003
            {<point name="input.g.page1.bmib003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib004
            #add-point:BEFORE FIELD bmib004
            {<point name="input.b.page1.bmib004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib004
            
            #add-point:AFTER FIELD bmib004
            {<point name="input.a.page1.bmib004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib004
            #add-point:ON CHANGE bmib004
            {<point name="input.g.page1.bmib004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib005
            #add-point:BEFORE FIELD bmib005
            {<point name="input.b.page1.bmib005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib005
            
            #add-point:AFTER FIELD bmib005
            {<point name="input.a.page1.bmib005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib005
            #add-point:ON CHANGE bmib005
            {<point name="input.g.page1.bmib005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib006
            #add-point:BEFORE FIELD bmib006
            {<point name="input.b.page1.bmib006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib006
            
            #add-point:AFTER FIELD bmib006
            {<point name="input.a.page1.bmib006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib006
            #add-point:ON CHANGE bmib006
            {<point name="input.g.page1.bmib006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib007
            
            #add-point:AFTER FIELD bmib007
            {<point name="input.a.page1.bmib007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib007
            #add-point:BEFORE FIELD bmib007
            {<point name="input.b.page1.bmib007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib007
            #add-point:ON CHANGE bmib007
            {<point name="input.g.page1.bmib007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib008
            
            #add-point:AFTER FIELD bmib008
            {<point name="input.a.page1.bmib008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib008
            #add-point:BEFORE FIELD bmib008
            {<point name="input.b.page1.bmib008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib008
            #add-point:ON CHANGE bmib008
            {<point name="input.g.page1.bmib008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmib009
            #add-point:BEFORE FIELD bmib009
            {<point name="input.b.page1.bmib009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmib009
            
            #add-point:AFTER FIELD bmib009
            {<point name="input.a.page1.bmib009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmib009
            #add-point:ON CHANGE bmib009
            {<point name="input.g.page1.bmib009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmibsite
            #add-point:BEFORE FIELD bmibsite
            {<point name="input.b.page1.bmibsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmibsite
            
            #add-point:AFTER FIELD bmibsite
            {<point name="input.a.page1.bmibsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmibsite
            #add-point:ON CHANGE bmibsite
            {<point name="input.g.page1.bmibsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.bmibseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmibseq
            #add-point:ON ACTION controlp INFIELD bmibseq
            {<point name="input.c.page1.bmibseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib001
            #add-point:ON ACTION controlp INFIELD bmib001
            {<point name="input.c.page1.bmib001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmibseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmibseq1
            #add-point:ON ACTION controlp INFIELD bmibseq1
            {<point name="input.c.page1.bmibseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib002
            #add-point:ON ACTION controlp INFIELD bmib002
            {<point name="input.c.page1.bmib002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib003
            #add-point:ON ACTION controlp INFIELD bmib003
            {<point name="input.c.page1.bmib003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib004
            #add-point:ON ACTION controlp INFIELD bmib004
            {<point name="input.c.page1.bmib004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib005
            #add-point:ON ACTION controlp INFIELD bmib005
            {<point name="input.c.page1.bmib005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib006
            #add-point:ON ACTION controlp INFIELD bmib006
            {<point name="input.c.page1.bmib006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib007
            #add-point:ON ACTION controlp INFIELD bmib007
            {<point name="input.c.page1.bmib007" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib008
            #add-point:ON ACTION controlp INFIELD bmib008
            {<point name="input.c.page1.bmib008" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmib009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmib009
            #add-point:ON ACTION controlp INFIELD bmib009
            {<point name="input.c.page1.bmib009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmibsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmibsite
            #add-point:ON ACTION controlp INFIELD bmibsite
            {<point name="input.c.page1.bmibsite" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_bmib_d[l_ac].* = g_bmib_d_t.*
               CLOSE abmt400_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_bmib_d[l_ac].bmibseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmib_d[l_ac].* = g_bmib_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL abmt400_bmib_t_mask_restore('restore_mask_o')
      
               UPDATE bmib_t SET (bmibdocno,bmibseq,bmib001,bmibseq1,bmib002,bmib003,bmib004,bmib005, 
                   bmib006,bmib007,bmib008,bmib009,bmibsite) = (g_bmia_m.bmiadocno,g_bmib_d[l_ac].bmibseq, 
                   g_bmib_d[l_ac].bmib001,g_bmib_d[l_ac].bmibseq1,g_bmib_d[l_ac].bmib002,g_bmib_d[l_ac].bmib003, 
                   g_bmib_d[l_ac].bmib004,g_bmib_d[l_ac].bmib005,g_bmib_d[l_ac].bmib006,g_bmib_d[l_ac].bmib007, 
                   g_bmib_d[l_ac].bmib008,g_bmib_d[l_ac].bmib009,g_bmib_d[l_ac].bmibsite)
                WHERE bmibent = g_enterprise AND bmibdocno = g_bmia_m.bmiadocno 
 
                  AND bmibseq = g_bmib_d_t.bmibseq #項次   
                  AND bmibseq1 = g_bmib_d_t.bmibseq1  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmib_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmib_d[l_ac].* = g_bmib_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmib_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_bmib_d[l_ac].* = g_bmib_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys_bak[1] = g_bmiadocno_t
               LET gs_keys[2] = g_bmib_d[g_detail_idx].bmibseq
               LET gs_keys_bak[2] = g_bmib_d_t.bmibseq
               LET gs_keys[3] = g_bmib_d[g_detail_idx].bmibseq1
               LET gs_keys_bak[3] = g_bmib_d_t.bmibseq1
               CALL abmt400_update_b('bmib_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL abmt400_bmib_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_bmib_d[g_detail_idx].bmibseq = g_bmib_d_t.bmibseq 
                  AND g_bmib_d[g_detail_idx].bmibseq1 = g_bmib_d_t.bmibseq1 
 
                  ) THEN
                  LET gs_keys[01] = g_bmia_m.bmiadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_bmib_d_t.bmibseq
                  LET gs_keys[gs_keys.getLength()+1] = g_bmib_d_t.bmibseq1
 
                  CALL abmt400_key_update_b(gs_keys,'bmib_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib_d_t)
               LET g_log2 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL abmt400_unlock_b("bmib_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_bmib_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmib_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_bmib2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmib2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_bmib2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmib2_d[l_ac].* TO NULL 
            INITIALIZE g_bmib2_d_t.* TO NULL 
            INITIALIZE g_bmib2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
            
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_bmib2_d_t.* = g_bmib2_d[l_ac].*     #新輸入資料
            LET g_bmib2_d_o.* = g_bmib2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmib2_d[li_reproduce_target].* = g_bmib2_d[li_reproduce].*
 
               LET g_bmib2_d[li_reproduce_target].bmic001 = NULL
               LET g_bmib2_d[li_reproduce_target].bmic002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmib2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmib2_d[l_ac].bmic001 IS NOT NULL
               AND g_bmib2_d[l_ac].bmic002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmib2_d_t.* = g_bmib2_d[l_ac].*  #BACKUP
               LET g_bmib2_d_o.* = g_bmib2_d[l_ac].*  #BACKUP
               CALL abmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL abmt400_set_no_entry_b(l_cmd)
               IF NOT abmt400_lock_b("bmic_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt400_bcl2 INTO g_bmib2_d[l_ac].bmic001,g_bmib2_d[l_ac].bmic002,g_bmib2_d[l_ac].bmic003, 
                      g_bmib2_d[l_ac].bmic004,g_bmib2_d[l_ac].bmic005,g_bmib2_d[l_ac].bmicsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmib2_d_mask_o[l_ac].* =  g_bmib2_d[l_ac].*
                  CALL abmt400_bmic_t_mask()
                  LET g_bmib2_d_mask_n[l_ac].* =  g_bmib2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL abmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_bmia_m.bmiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_bmib2_d_t.bmic001
               LET gs_keys[gs_keys.getLength()+1] = g_bmib2_d_t.bmic002
            
               #刪除同層單身
               IF NOT abmt400_delete_b('bmic_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT abmt400_key_delete_b(gs_keys,'bmic_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE abmt400_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_bmib_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_bmib2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmic_t 
             WHERE bmicent = g_enterprise AND bmicdocno = g_bmia_m.bmiadocno
               AND bmic001 = g_bmib2_d[l_ac].bmic001
               AND bmic002 = g_bmib2_d[l_ac].bmic002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys[2] = g_bmib2_d[g_detail_idx].bmic001
               LET gs_keys[3] = g_bmib2_d[g_detail_idx].bmic002
               CALL abmt400_insert_b('bmic_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_bmib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmic_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_bmib2_d[l_ac].* = g_bmib2_d_t.*
               CLOSE abmt400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmib2_d[l_ac].* = g_bmib2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL abmt400_bmic_t_mask_restore('restore_mask_o')
                              
               UPDATE bmic_t SET (bmicdocno,bmic001,bmic002,bmic003,bmic004,bmic005,bmicsite) = (g_bmia_m.bmiadocno, 
                   g_bmib2_d[l_ac].bmic001,g_bmib2_d[l_ac].bmic002,g_bmib2_d[l_ac].bmic003,g_bmib2_d[l_ac].bmic004, 
                   g_bmib2_d[l_ac].bmic005,g_bmib2_d[l_ac].bmicsite) #自訂欄位頁簽
                WHERE bmicent = g_enterprise AND bmicdocno = g_bmia_m.bmiadocno
                  AND bmic001 = g_bmib2_d_t.bmic001 #項次 
                  AND bmic002 = g_bmib2_d_t.bmic002
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmic_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmib2_d[l_ac].* = g_bmib2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmic_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmib2_d[l_ac].* = g_bmib2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys_bak[1] = g_bmiadocno_t
               LET gs_keys[2] = g_bmib2_d[g_detail_idx].bmic001
               LET gs_keys_bak[2] = g_bmib2_d_t.bmic001
               LET gs_keys[3] = g_bmib2_d[g_detail_idx].bmic002
               LET gs_keys_bak[3] = g_bmib2_d_t.bmic002
               CALL abmt400_update_b('bmic_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL abmt400_bmic_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_bmib2_d[g_detail_idx].bmic001 = g_bmib2_d_t.bmic001 
                  AND g_bmib2_d[g_detail_idx].bmic002 = g_bmib2_d_t.bmic002 
                  ) THEN
                  LET gs_keys[01] = g_bmia_m.bmiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_bmib2_d_t.bmic001
                  LET gs_keys[gs_keys.getLength()+1] = g_bmib2_d_t.bmic002
                  CALL abmt400_key_update_b(gs_keys,'bmic_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib2_d_t)
               LET g_log2 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic001
            
            #add-point:AFTER FIELD bmic001
            {<point name="input.a.page2.bmic001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic001
            #add-point:BEFORE FIELD bmic001
            {<point name="input.b.page2.bmic001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmic001
            #add-point:ON CHANGE bmic001
            {<point name="input.g.page2.bmic001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic002
            
            #add-point:AFTER FIELD bmic002
            {<point name="input.a.page2.bmic002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic002
            #add-point:BEFORE FIELD bmic002
            {<point name="input.b.page2.bmic002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmic002
            #add-point:ON CHANGE bmic002
            {<point name="input.g.page2.bmic002" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic003
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmib2_d[l_ac].bmic003,"0","1","","","azz-00079",1) THEN
               NEXT FIELD bmic003
            END IF 
 
 
            #add-point:AFTER FIELD bmic003
            {<point name="input.a.page2.bmic003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic003
            #add-point:BEFORE FIELD bmic003
            {<point name="input.b.page2.bmic003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmic003
            #add-point:ON CHANGE bmic003
            {<point name="input.g.page2.bmic003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic004
            
            #add-point:AFTER FIELD bmic004
            {<point name="input.a.page2.bmic004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic004
            #add-point:BEFORE FIELD bmic004
            {<point name="input.b.page2.bmic004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmic004
            #add-point:ON CHANGE bmic004
            {<point name="input.g.page2.bmic004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmic005
            
            #add-point:AFTER FIELD bmic005
            {<point name="input.a.page2.bmic005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmic005
            #add-point:BEFORE FIELD bmic005
            {<point name="input.b.page2.bmic005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmic005
            #add-point:ON CHANGE bmic005
            {<point name="input.g.page2.bmic005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmicsite
            #add-point:BEFORE FIELD bmicsite
            {<point name="input.b.page2.bmicsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmicsite
            
            #add-point:AFTER FIELD bmicsite
            {<point name="input.a.page2.bmicsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmicsite
            #add-point:ON CHANGE bmicsite
            {<point name="input.g.page2.bmicsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.bmic001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic001
            #add-point:ON ACTION controlp INFIELD bmic001
            {<point name="input.c.page2.bmic001" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmic002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic002
            #add-point:ON ACTION controlp INFIELD bmic002
            {<point name="input.c.page2.bmic002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmic003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic003
            #add-point:ON ACTION controlp INFIELD bmic003
            {<point name="input.c.page2.bmic003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmic004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic004
            #add-point:ON ACTION controlp INFIELD bmic004
            {<point name="input.c.page2.bmic004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmic005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmic005
            #add-point:ON ACTION controlp INFIELD bmic005
            {<point name="input.c.page2.bmic005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmicsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmicsite
            #add-point:ON ACTION controlp INFIELD bmicsite
            {<point name="input.c.page2.bmicsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmib2_d[l_ac].* = g_bmib2_d_t.*
               END IF
               CLOSE abmt400_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmt400_unlock_b("bmic_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmib2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmib2_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_bmib3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_3)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body3.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmib3_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_bmib3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body3.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmib3_d[l_ac].* TO NULL 
            INITIALIZE g_bmib3_d_t.* TO NULL 
            INITIALIZE g_bmib3_d_o.* TO NULL 
            #公用欄位給值(單身3)
            
            #自定義預設值(單身3)
            
            #add-point:modify段before備份
            {<point name="input.body3.insert.before_bak"/>}
            #end add-point
            LET g_bmib3_d_t.* = g_bmib3_d[l_ac].*     #新輸入資料
            LET g_bmib3_d_o.* = g_bmib3_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body3.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmib3_d[li_reproduce_target].* = g_bmib3_d[li_reproduce].*
 
               LET g_bmib3_d[li_reproduce_target].bmie001 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body3.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 3
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmib3_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmib3_d[l_ac].bmie001 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmib3_d_t.* = g_bmib3_d[l_ac].*  #BACKUP
               LET g_bmib3_d_o.* = g_bmib3_d[l_ac].*  #BACKUP
               CALL abmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body3.after_set_entry_b"/>}
               #end add-point  
               CALL abmt400_set_no_entry_b(l_cmd)
               IF NOT abmt400_lock_b("bmie_t","'3'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt400_bcl3 INTO g_bmib3_d[l_ac].bmie001,g_bmib3_d[l_ac].bmie002,g_bmib3_d[l_ac].bmie003, 
                      g_bmib3_d[l_ac].bmiesite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmib3_d_mask_o[l_ac].* =  g_bmib3_d[l_ac].*
                  CALL abmt400_bmie_t_mask()
                  LET g_bmib3_d_mask_n[l_ac].* =  g_bmib3_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL abmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body3.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_bmia_m.bmiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_bmib3_d_t.bmie001
            
               #刪除同層單身
               IF NOT abmt400_delete_b('bmie_t',gs_keys,"'3'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT abmt400_key_delete_b(gs_keys,'bmie_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE abmt400_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身3刪除後
               {<point name="input.body3.a_delete"/>}
               #end add-point
               LET l_count = g_bmib_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body3.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_bmib3_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身3新增前
            {<point name="input.body3.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmie_t 
             WHERE bmieent = g_enterprise AND bmiedocno = g_bmia_m.bmiadocno
               AND bmie001 = g_bmib3_d[l_ac].bmie001
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys[2] = g_bmib3_d[g_detail_idx].bmie001
               CALL abmt400_insert_b('bmie_t',gs_keys,"'3'")
                           
               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_bmib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmie_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_bmib3_d[l_ac].* = g_bmib3_d_t.*
               CLOSE abmt400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmib3_d[l_ac].* = g_bmib3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身3)
               
               
               #將遮罩欄位還原
               CALL abmt400_bmie_t_mask_restore('restore_mask_o')
                              
               UPDATE bmie_t SET (bmiedocno,bmie001,bmie002,bmie003,bmiesite) = (g_bmia_m.bmiadocno, 
                   g_bmib3_d[l_ac].bmie001,g_bmib3_d[l_ac].bmie002,g_bmib3_d[l_ac].bmie003,g_bmib3_d[l_ac].bmiesite)  
                   #自訂欄位頁簽
                WHERE bmieent = g_enterprise AND bmiedocno = g_bmia_m.bmiadocno
                  AND bmie001 = g_bmib3_d_t.bmie001 #項次 
                  
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmie_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmib3_d[l_ac].* = g_bmib3_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmie_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmib3_d[l_ac].* = g_bmib3_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys_bak[1] = g_bmiadocno_t
               LET gs_keys[2] = g_bmib3_d[g_detail_idx].bmie001
               LET gs_keys_bak[2] = g_bmib3_d_t.bmie001
               CALL abmt400_update_b('bmie_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL abmt400_bmie_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_bmib3_d[g_detail_idx].bmie001 = g_bmib3_d_t.bmie001 
                  ) THEN
                  LET gs_keys[01] = g_bmia_m.bmiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_bmib3_d_t.bmie001
                  CALL abmt400_key_update_b(gs_keys,'bmie_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib3_d_t)
               LET g_log2 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib3_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmie001
            #add-point:BEFORE FIELD bmie001
            {<point name="input.b.page3.bmie001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmie001
            
            #add-point:AFTER FIELD bmie001
            {<point name="input.a.page3.bmie001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmie001
            #add-point:ON CHANGE bmie001
            {<point name="input.g.page3.bmie001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmie002
            #add-point:BEFORE FIELD bmie002
            {<point name="input.b.page3.bmie002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmie002
            
            #add-point:AFTER FIELD bmie002
            {<point name="input.a.page3.bmie002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmie002
            #add-point:ON CHANGE bmie002
            {<point name="input.g.page3.bmie002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmie003
            #add-point:BEFORE FIELD bmie003
            {<point name="input.b.page3.bmie003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmie003
            
            #add-point:AFTER FIELD bmie003
            {<point name="input.a.page3.bmie003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmie003
            #add-point:ON CHANGE bmie003
            {<point name="input.g.page3.bmie003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiesite
            #add-point:BEFORE FIELD bmiesite
            {<point name="input.b.page3.bmiesite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiesite
            
            #add-point:AFTER FIELD bmiesite
            {<point name="input.a.page3.bmiesite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmiesite
            #add-point:ON CHANGE bmiesite
            {<point name="input.g.page3.bmiesite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page3.bmie001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmie001
            #add-point:ON ACTION controlp INFIELD bmie001
            {<point name="input.c.page3.bmie001" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmie002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmie002
            #add-point:ON ACTION controlp INFIELD bmie002
            {<point name="input.c.page3.bmie002" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmie003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmie003
            #add-point:ON ACTION controlp INFIELD bmie003
            {<point name="input.c.page3.bmie003" />}
            #END add-point
 
         #Ctrlp:input.c.page3.bmiesite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiesite
            #add-point:ON ACTION controlp INFIELD bmiesite
            {<point name="input.c.page3.bmiesite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page3 after_row
            {<point name="input.body3.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmib3_d[l_ac].* = g_bmib3_d_t.*
               END IF
               CLOSE abmt400_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmt400_unlock_b("bmie_t","'3'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page3 after_row2
            {<point name="input.body3.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body3.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmib3_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmib3_d.getLength()+1
 
      END INPUT
      INPUT ARRAY g_bmib4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_4)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body4.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmib4_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt400_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_bmib4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body4.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmib4_d[l_ac].* TO NULL 
            INITIALIZE g_bmib4_d_t.* TO NULL 
            INITIALIZE g_bmib4_d_o.* TO NULL 
            #公用欄位給值(單身4)
            
            #自定義預設值(單身4)
                  LET g_bmib4_d[l_ac].bmid016 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body4.insert.before_bak"/>}
            #end add-point
            LET g_bmib4_d_t.* = g_bmib4_d[l_ac].*     #新輸入資料
            LET g_bmib4_d_o.* = g_bmib4_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt400_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body4.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt400_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmib4_d[li_reproduce_target].* = g_bmib4_d[li_reproduce].*
 
               LET g_bmib4_d[li_reproduce_target].bmidseq = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body4.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 4
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmib4_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmib4_d[l_ac].bmidseq IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmib4_d_t.* = g_bmib4_d[l_ac].*  #BACKUP
               LET g_bmib4_d_o.* = g_bmib4_d[l_ac].*  #BACKUP
               CALL abmt400_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body4.after_set_entry_b"/>}
               #end add-point  
               CALL abmt400_set_no_entry_b(l_cmd)
               IF NOT abmt400_lock_b("bmid_t","'4'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt400_bcl4 INTO g_bmib4_d[l_ac].bmidseq,g_bmib4_d[l_ac].bmid016,g_bmib4_d[l_ac].bmid001, 
                      g_bmib4_d[l_ac].bmid002,g_bmib4_d[l_ac].bmid004,g_bmib4_d[l_ac].bmid003,g_bmib4_d[l_ac].bmid005, 
                      g_bmib4_d[l_ac].bmid008,g_bmib4_d[l_ac].bmid009,g_bmib4_d[l_ac].bmid010,g_bmib4_d[l_ac].bmid011, 
                      g_bmib4_d[l_ac].bmid012,g_bmib4_d[l_ac].bmid013,g_bmib4_d[l_ac].bmid014,g_bmib4_d[l_ac].bmid015, 
                      g_bmib4_d[l_ac].bmidsite
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmib4_d_mask_o[l_ac].* =  g_bmib4_d[l_ac].*
                  CALL abmt400_bmid_t_mask()
                  LET g_bmib4_d_mask_n[l_ac].* =  g_bmib4_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL abmt400_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body4.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_bmia_m.bmiadocno
               LET gs_keys[gs_keys.getLength()+1] = g_bmib4_d_t.bmidseq
            
               #刪除同層單身
               IF NOT abmt400_delete_b('bmid_t',gs_keys,"'4'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT abmt400_key_delete_b(gs_keys,'bmid_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt400_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE abmt400_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身4刪除後
               {<point name="input.body4.a_delete"/>}
               #end add-point
               LET l_count = g_bmib_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body4.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_bmib4_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身4新增前
            {<point name="input.body4.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmid_t 
             WHERE bmident = g_enterprise AND bmiddocno = g_bmia_m.bmiadocno
               AND bmidseq = g_bmib4_d[l_ac].bmidseq
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys[2] = g_bmib4_d[g_detail_idx].bmidseq
               CALL abmt400_insert_b('bmid_t',gs_keys,"'4'")
                           
               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_bmib_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmid_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt400_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_bmib4_d[l_ac].* = g_bmib4_d_t.*
               CLOSE abmt400_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmib4_d[l_ac].* = g_bmib4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身4)
               
               
               #將遮罩欄位還原
               CALL abmt400_bmid_t_mask_restore('restore_mask_o')
                              
               UPDATE bmid_t SET (bmiddocno,bmidseq,bmid016,bmid001,bmid002,bmid004,bmid003,bmid005, 
                   bmid008,bmid009,bmid010,bmid011,bmid012,bmid013,bmid014,bmid015,bmidsite) = (g_bmia_m.bmiadocno, 
                   g_bmib4_d[l_ac].bmidseq,g_bmib4_d[l_ac].bmid016,g_bmib4_d[l_ac].bmid001,g_bmib4_d[l_ac].bmid002, 
                   g_bmib4_d[l_ac].bmid004,g_bmib4_d[l_ac].bmid003,g_bmib4_d[l_ac].bmid005,g_bmib4_d[l_ac].bmid008, 
                   g_bmib4_d[l_ac].bmid009,g_bmib4_d[l_ac].bmid010,g_bmib4_d[l_ac].bmid011,g_bmib4_d[l_ac].bmid012, 
                   g_bmib4_d[l_ac].bmid013,g_bmib4_d[l_ac].bmid014,g_bmib4_d[l_ac].bmid015,g_bmib4_d[l_ac].bmidsite)  
                   #自訂欄位頁簽
                WHERE bmident = g_enterprise AND bmiddocno = g_bmia_m.bmiadocno
                  AND bmidseq = g_bmib4_d_t.bmidseq #項次 
                  
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmid_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmib4_d[l_ac].* = g_bmib4_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmid_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmib4_d[l_ac].* = g_bmib4_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmia_m.bmiadocno
               LET gs_keys_bak[1] = g_bmiadocno_t
               LET gs_keys[2] = g_bmib4_d[g_detail_idx].bmidseq
               LET gs_keys_bak[2] = g_bmib4_d_t.bmidseq
               CALL abmt400_update_b('bmid_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL abmt400_bmid_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_bmib4_d[g_detail_idx].bmidseq = g_bmib4_d_t.bmidseq 
                  ) THEN
                  LET gs_keys[01] = g_bmia_m.bmiadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_bmib4_d_t.bmidseq
                  CALL abmt400_key_update_b(gs_keys,'bmid_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib4_d_t)
               LET g_log2 = util.JSON.stringify(g_bmia_m),util.JSON.stringify(g_bmib4_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmidseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmib4_d[l_ac].bmidseq,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD bmidseq
            END IF 
 
 
            #add-point:AFTER FIELD bmidseq
            {<point name="input.a.page4.bmidseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmidseq
            #add-point:BEFORE FIELD bmidseq
            {<point name="input.b.page4.bmidseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmidseq
            #add-point:ON CHANGE bmidseq
            {<point name="input.g.page4.bmidseq" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid016
            #add-point:BEFORE FIELD bmid016
            {<point name="input.b.page4.bmid016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid016
            
            #add-point:AFTER FIELD bmid016
            {<point name="input.a.page4.bmid016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid016
            #add-point:ON CHANGE bmid016
            {<point name="input.g.page4.bmid016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid001
            
            #add-point:AFTER FIELD bmid001
            {<point name="input.a.page4.bmid001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid001
            #add-point:BEFORE FIELD bmid001
            {<point name="input.b.page4.bmid001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid001
            #add-point:ON CHANGE bmid001
            {<point name="input.g.page4.bmid001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid002
            #add-point:BEFORE FIELD bmid002
            {<point name="input.b.page4.bmid002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid002
            
            #add-point:AFTER FIELD bmid002
            {<point name="input.a.page4.bmid002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid002
            #add-point:ON CHANGE bmid002
            {<point name="input.g.page4.bmid002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid004
            #add-point:BEFORE FIELD bmid004
            {<point name="input.b.page4.bmid004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid004
            
            #add-point:AFTER FIELD bmid004
            {<point name="input.a.page4.bmid004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid004
            #add-point:ON CHANGE bmid004
            {<point name="input.g.page4.bmid004" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid003
            #add-point:BEFORE FIELD bmid003
            {<point name="input.b.page4.bmid003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid003
            
            #add-point:AFTER FIELD bmid003
            {<point name="input.a.page4.bmid003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid003
            #add-point:ON CHANGE bmid003
            {<point name="input.g.page4.bmid003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid005
            #add-point:BEFORE FIELD bmid005
            {<point name="input.b.page4.bmid005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid005
            
            #add-point:AFTER FIELD bmid005
            {<point name="input.a.page4.bmid005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid005
            #add-point:ON CHANGE bmid005
            {<point name="input.g.page4.bmid005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid008
            #add-point:BEFORE FIELD bmid008
            {<point name="input.b.page4.bmid008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid008
            
            #add-point:AFTER FIELD bmid008
            {<point name="input.a.page4.bmid008" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid008
            #add-point:ON CHANGE bmid008
            {<point name="input.g.page4.bmid008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid009
            #add-point:BEFORE FIELD bmid009
            {<point name="input.b.page4.bmid009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid009
            
            #add-point:AFTER FIELD bmid009
            {<point name="input.a.page4.bmid009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid009
            #add-point:ON CHANGE bmid009
            {<point name="input.g.page4.bmid009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid010
            #add-point:BEFORE FIELD bmid010
            {<point name="input.b.page4.bmid010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid010
            
            #add-point:AFTER FIELD bmid010
            {<point name="input.a.page4.bmid010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid010
            #add-point:ON CHANGE bmid010
            {<point name="input.g.page4.bmid010" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid011
            #add-point:BEFORE FIELD bmid011
            {<point name="input.b.page4.bmid011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid011
            
            #add-point:AFTER FIELD bmid011
            {<point name="input.a.page4.bmid011" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid011
            #add-point:ON CHANGE bmid011
            {<point name="input.g.page4.bmid011" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid012
            #add-point:BEFORE FIELD bmid012
            {<point name="input.b.page4.bmid012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid012
            
            #add-point:AFTER FIELD bmid012
            {<point name="input.a.page4.bmid012" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid012
            #add-point:ON CHANGE bmid012
            {<point name="input.g.page4.bmid012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid013
            
            #add-point:AFTER FIELD bmid013
            {<point name="input.a.page4.bmid013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid013
            #add-point:BEFORE FIELD bmid013
            {<point name="input.b.page4.bmid013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid013
            #add-point:ON CHANGE bmid013
            {<point name="input.g.page4.bmid013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid014
            #add-point:BEFORE FIELD bmid014
            {<point name="input.b.page4.bmid014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid014
            
            #add-point:AFTER FIELD bmid014
            {<point name="input.a.page4.bmid014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid014
            #add-point:ON CHANGE bmid014
            {<point name="input.g.page4.bmid014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmid015
            #add-point:BEFORE FIELD bmid015
            {<point name="input.b.page4.bmid015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmid015
            
            #add-point:AFTER FIELD bmid015
            {<point name="input.a.page4.bmid015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmid015
            #add-point:ON CHANGE bmid015
            {<point name="input.g.page4.bmid015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmidsite
            #add-point:BEFORE FIELD bmidsite
            {<point name="input.b.page4.bmidsite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmidsite
            
            #add-point:AFTER FIELD bmidsite
            {<point name="input.a.page4.bmidsite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmidsite
            #add-point:ON CHANGE bmidsite
            {<point name="input.g.page4.bmidsite" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page4.bmidseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmidseq
            #add-point:ON ACTION controlp INFIELD bmidseq
            {<point name="input.c.page4.bmidseq" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid016
            #add-point:ON ACTION controlp INFIELD bmid016
            {<point name="input.c.page4.bmid016" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid001
            #add-point:ON ACTION controlp INFIELD bmid001
            {<point name="input.c.page4.bmid001" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid002
            #add-point:ON ACTION controlp INFIELD bmid002
            {<point name="input.c.page4.bmid002" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid004
            #add-point:ON ACTION controlp INFIELD bmid004
            {<point name="input.c.page4.bmid004" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid003
            #add-point:ON ACTION controlp INFIELD bmid003
            {<point name="input.c.page4.bmid003" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid005
            #add-point:ON ACTION controlp INFIELD bmid005
            {<point name="input.c.page4.bmid005" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid008
            #add-point:ON ACTION controlp INFIELD bmid008
            {<point name="input.c.page4.bmid008" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid009
            #add-point:ON ACTION controlp INFIELD bmid009
            {<point name="input.c.page4.bmid009" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid010
            #add-point:ON ACTION controlp INFIELD bmid010
            {<point name="input.c.page4.bmid010" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid011
            #add-point:ON ACTION controlp INFIELD bmid011
            {<point name="input.c.page4.bmid011" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid012
            #add-point:ON ACTION controlp INFIELD bmid012
            {<point name="input.c.page4.bmid012" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid013
            #add-point:ON ACTION controlp INFIELD bmid013
            {<point name="input.c.page4.bmid013" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid014
            #add-point:ON ACTION controlp INFIELD bmid014
            {<point name="input.c.page4.bmid014" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmid015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmid015
            #add-point:ON ACTION controlp INFIELD bmid015
            {<point name="input.c.page4.bmid015" />}
            #END add-point
 
         #Ctrlp:input.c.page4.bmidsite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmidsite
            #add-point:ON ACTION controlp INFIELD bmidsite
            {<point name="input.c.page4.bmidsite" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page4 after_row
            {<point name="input.body4.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmib4_d[l_ac].* = g_bmib4_d_t.*
               END IF
               CLOSE abmt400_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmt400_unlock_b("bmid_t","'4'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page4 after_row2
            {<point name="input.body4.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body4.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmib4_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmib4_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="abmt400.input.head" ver="25" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003, 
          g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008, 
          g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011,g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013, 
          g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017, 
          g_bmia_m.bmia018 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt400_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt400_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL abmt400_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL abmt400_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiadocno
            
            #add-point:AFTER FIELD bmiadocno
            {<point name="input.a.bmiadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiadocno
            #add-point:BEFORE FIELD bmiadocno
            {<point name="input.b.bmiadocno" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmiadocno
            #add-point:ON CHANGE bmiadocno
            {<point name="input.g.bmiadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiadocdt
            #add-point:BEFORE FIELD bmiadocdt
            {<point name="input.b.bmiadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiadocdt
            
            #add-point:AFTER FIELD bmiadocdt
            {<point name="input.a.bmiadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmiadocdt
            #add-point:ON CHANGE bmiadocdt
            {<point name="input.g.bmiadocdt" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia002
            
            #add-point:AFTER FIELD bmia002
            {<point name="input.a.bmia002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia002
            #add-point:BEFORE FIELD bmia002
            {<point name="input.b.bmia002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia002
            #add-point:ON CHANGE bmia002
            {<point name="input.g.bmia002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia001
            #add-point:BEFORE FIELD bmia001
            {<point name="input.b.bmia001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia001
            
            #add-point:AFTER FIELD bmia001
            {<point name="input.a.bmia001" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia001
            #add-point:ON CHANGE bmia001
            {<point name="input.g.bmia001" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia003
            
            #add-point:AFTER FIELD bmia003
            {<point name="input.a.bmia003" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia003
            #add-point:BEFORE FIELD bmia003
            {<point name="input.b.bmia003" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia003
            #add-point:ON CHANGE bmia003
            {<point name="input.g.bmia003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia007
            
            #add-point:AFTER FIELD bmia007
            {<point name="input.a.bmia007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia007
            #add-point:BEFORE FIELD bmia007
            {<point name="input.b.bmia007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia007
            #add-point:ON CHANGE bmia007
            {<point name="input.g.bmia007" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiastus
            #add-point:BEFORE FIELD bmiastus
            {<point name="input.b.bmiastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiastus
            
            #add-point:AFTER FIELD bmiastus
            {<point name="input.a.bmiastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmiastus
            #add-point:ON CHANGE bmiastus
            {<point name="input.g.bmiastus" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia004
            
            #add-point:AFTER FIELD bmia004
            {<point name="input.a.bmia004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia004
            #add-point:BEFORE FIELD bmia004
            {<point name="input.b.bmia004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia004
            #add-point:ON CHANGE bmia004
            {<point name="input.g.bmia004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia005
            
            #add-point:AFTER FIELD bmia005
            {<point name="input.a.bmia005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia005
            #add-point:BEFORE FIELD bmia005
            {<point name="input.b.bmia005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia005
            #add-point:ON CHANGE bmia005
            {<point name="input.g.bmia005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia006
            
            #add-point:AFTER FIELD bmia006
            {<point name="input.a.bmia006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia006
            #add-point:BEFORE FIELD bmia006
            {<point name="input.b.bmia006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia006
            #add-point:ON CHANGE bmia006
            {<point name="input.g.bmia006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia008
            
            #add-point:AFTER FIELD bmia008
            {<point name="input.a.bmia008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia008
            #add-point:BEFORE FIELD bmia008
            {<point name="input.b.bmia008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia008
            #add-point:ON CHANGE bmia008
            {<point name="input.g.bmia008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia009
            #add-point:BEFORE FIELD bmia009
            {<point name="input.b.bmia009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia009
            
            #add-point:AFTER FIELD bmia009
            {<point name="input.a.bmia009" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia009
            #add-point:ON CHANGE bmia009
            {<point name="input.g.bmia009" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia010
            
            #add-point:AFTER FIELD bmia010
            {<point name="input.a.bmia010" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia010
            #add-point:BEFORE FIELD bmia010
            {<point name="input.b.bmia010" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia010
            #add-point:ON CHANGE bmia010
            {<point name="input.g.bmia010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia011
            
            #add-point:AFTER FIELD bmia011
            {<point name="input.a.bmia011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia011
            #add-point:BEFORE FIELD bmia011
            {<point name="input.b.bmia011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia011
            #add-point:ON CHANGE bmia011
            {<point name="input.g.bmia011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia012
            
            #add-point:AFTER FIELD bmia012
            {<point name="input.a.bmia012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia012
            #add-point:BEFORE FIELD bmia012
            {<point name="input.b.bmia012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia012
            #add-point:ON CHANGE bmia012
            {<point name="input.g.bmia012" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmiasite
            #add-point:BEFORE FIELD bmiasite
            {<point name="input.b.bmiasite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmiasite
            
            #add-point:AFTER FIELD bmiasite
            {<point name="input.a.bmiasite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmiasite
            #add-point:ON CHANGE bmiasite
            {<point name="input.g.bmiasite" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia013
            
            #add-point:AFTER FIELD bmia013
            {<point name="input.a.bmia013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia013
            #add-point:BEFORE FIELD bmia013
            {<point name="input.b.bmia013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia013
            #add-point:ON CHANGE bmia013
            {<point name="input.g.bmia013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia015
            #add-point:BEFORE FIELD bmia015
            {<point name="input.b.bmia015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia015
            
            #add-point:AFTER FIELD bmia015
            {<point name="input.a.bmia015" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia015
            #add-point:ON CHANGE bmia015
            {<point name="input.g.bmia015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia019
            #add-point:BEFORE FIELD bmia019
            {<point name="input.b.bmia019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia019
            
            #add-point:AFTER FIELD bmia019
            {<point name="input.a.bmia019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia019
            #add-point:ON CHANGE bmia019
            {<point name="input.g.bmia019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia020
            #add-point:BEFORE FIELD bmia020
            {<point name="input.b.bmia020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia020
            
            #add-point:AFTER FIELD bmia020
            {<point name="input.a.bmia020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia020
            #add-point:ON CHANGE bmia020
            {<point name="input.g.bmia020" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia014
            
            #add-point:AFTER FIELD bmia014
            {<point name="input.a.bmia014" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia014
            #add-point:BEFORE FIELD bmia014
            {<point name="input.b.bmia014" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia014
            #add-point:ON CHANGE bmia014
            {<point name="input.g.bmia014" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia016
            #add-point:BEFORE FIELD bmia016
            {<point name="input.b.bmia016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia016
            
            #add-point:AFTER FIELD bmia016
            {<point name="input.a.bmia016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia016
            #add-point:ON CHANGE bmia016
            {<point name="input.g.bmia016" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia017
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmia_m.bmia017,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD bmia017
            END IF 
 
 
            #add-point:AFTER FIELD bmia017
            {<point name="input.a.bmia017" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia017
            #add-point:BEFORE FIELD bmia017
            {<point name="input.b.bmia017" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia017
            #add-point:ON CHANGE bmia017
            {<point name="input.g.bmia017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmia018
            #add-point:BEFORE FIELD bmia018
            {<point name="input.b.bmia018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmia018
            
            #add-point:AFTER FIELD bmia018
            {<point name="input.a.bmia018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmia018
            #add-point:ON CHANGE bmia018
            {<point name="input.g.bmia018" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.bmiadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiadocno
            #add-point:ON ACTION controlp INFIELD bmiadocno
            {<point name="input.c.bmiadocno" />}
            #END add-point
 
         #Ctrlp:input.c.bmiadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiadocdt
            #add-point:ON ACTION controlp INFIELD bmiadocdt
            {<point name="input.c.bmiadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.bmia002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia002
            #add-point:ON ACTION controlp INFIELD bmia002
            {<point name="input.c.bmia002" />}
            #END add-point
 
         #Ctrlp:input.c.bmia001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia001
            #add-point:ON ACTION controlp INFIELD bmia001
            {<point name="input.c.bmia001" />}
            #END add-point
 
         #Ctrlp:input.c.bmia003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia003
            #add-point:ON ACTION controlp INFIELD bmia003
            {<point name="input.c.bmia003" />}
            #END add-point
 
         #Ctrlp:input.c.bmia007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia007
            #add-point:ON ACTION controlp INFIELD bmia007
            {<point name="input.c.bmia007" />}
            #END add-point
 
         #Ctrlp:input.c.bmiastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiastus
            #add-point:ON ACTION controlp INFIELD bmiastus
            {<point name="input.c.bmiastus" />}
            #END add-point
 
         #Ctrlp:input.c.bmia004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia004
            #add-point:ON ACTION controlp INFIELD bmia004
            {<point name="input.c.bmia004" />}
            #END add-point
 
         #Ctrlp:input.c.bmia005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia005
            #add-point:ON ACTION controlp INFIELD bmia005
            {<point name="input.c.bmia005" />}
            #END add-point
 
         #Ctrlp:input.c.bmia006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia006
            #add-point:ON ACTION controlp INFIELD bmia006
            {<point name="input.c.bmia006" />}
            #END add-point
 
         #Ctrlp:input.c.bmia008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia008
            #add-point:ON ACTION controlp INFIELD bmia008
            {<point name="input.c.bmia008" />}
            #END add-point
 
         #Ctrlp:input.c.bmia009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia009
            #add-point:ON ACTION controlp INFIELD bmia009
            {<point name="input.c.bmia009" />}
            #END add-point
 
         #Ctrlp:input.c.bmia010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia010
            #add-point:ON ACTION controlp INFIELD bmia010
            {<point name="input.c.bmia010" />}
            #END add-point
 
         #Ctrlp:input.c.bmia011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia011
            #add-point:ON ACTION controlp INFIELD bmia011
            {<point name="input.c.bmia011" />}
            #END add-point
 
         #Ctrlp:input.c.bmia012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia012
            #add-point:ON ACTION controlp INFIELD bmia012
            {<point name="input.c.bmia012" />}
            #END add-point
 
         #Ctrlp:input.c.bmiasite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmiasite
            #add-point:ON ACTION controlp INFIELD bmiasite
            {<point name="input.c.bmiasite" />}
            #END add-point
 
         #Ctrlp:input.c.bmia013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia013
            #add-point:ON ACTION controlp INFIELD bmia013
            {<point name="input.c.bmia013" />}
            #END add-point
 
         #Ctrlp:input.c.bmia015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia015
            #add-point:ON ACTION controlp INFIELD bmia015
            {<point name="input.c.bmia015" />}
            #END add-point
 
         #Ctrlp:input.c.bmia019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia019
            #add-point:ON ACTION controlp INFIELD bmia019
            {<point name="input.c.bmia019" />}
            #END add-point
 
         #Ctrlp:input.c.bmia020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia020
            #add-point:ON ACTION controlp INFIELD bmia020
            {<point name="input.c.bmia020" />}
            #END add-point
 
         #Ctrlp:input.c.bmia014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia014
            #add-point:ON ACTION controlp INFIELD bmia014
            {<point name="input.c.bmia014" />}
            #END add-point
 
         #Ctrlp:input.c.bmia016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia016
            #add-point:ON ACTION controlp INFIELD bmia016
            {<point name="input.c.bmia016" />}
            #END add-point
 
         #Ctrlp:input.c.bmia017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia017
            #add-point:ON ACTION controlp INFIELD bmia017
            {<point name="input.c.bmia017" />}
            #END add-point
 
         #Ctrlp:input.c.bmia018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmia018
            #add-point:ON ACTION controlp INFIELD bmia018
            {<point name="input.c.bmia018" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_bmia_m.bmiadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO bmia_t (bmiaent,bmiadocno,bmiadocdt,bmia002,bmia001,bmia003,bmia007,bmiastus, 
                   bmia004,bmia005,bmia006,bmia008,bmia009,bmia010,bmia011,bmia012,bmiasite,bmia013, 
                   bmia015,bmia019,bmia020,bmia014,bmia016,bmia017,bmia018,bmiaownid,bmiaowndp,bmiacrtid, 
                   bmiacrtdp,bmiacrtdt,bmiamodid,bmiamoddt,bmiacnfid,bmiacnfdt)
               VALUES (g_enterprise,g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia001, 
                   g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.bmia005, 
                   g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
                   g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019, 
                   g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018, 
                   g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp,g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt, 
                   g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt,g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_bmia_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abmt400_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL abmt400_b_fill()
                  CALL abmt400_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL abmt400_bmia_t_mask_restore('restore_mask_o')
               
               UPDATE bmia_t SET (bmiadocno,bmiadocdt,bmia002,bmia001,bmia003,bmia007,bmiastus,bmia004, 
                   bmia005,bmia006,bmia008,bmia009,bmia010,bmia011,bmia012,bmiasite,bmia013,bmia015, 
                   bmia019,bmia020,bmia014,bmia016,bmia017,bmia018,bmiaownid,bmiaowndp,bmiacrtid,bmiacrtdp, 
                   bmiacrtdt,bmiamodid,bmiamoddt,bmiacnfid,bmiacnfdt) = (g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
                   g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus, 
                   g_bmia_m.bmia004,g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009, 
                   g_bmia_m.bmia010,g_bmia_m.bmia011,g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013, 
                   g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia016, 
                   g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp,g_bmia_m.bmiacrtid, 
                   g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt,g_bmia_m.bmiacnfid, 
                   g_bmia_m.bmiacnfdt)
                WHERE bmiaent = g_enterprise AND bmiadocno = g_bmiadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "bmia_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL abmt400_bmia_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_bmia_m_t)
               LET g_log2 = util.JSON.stringify(g_bmia_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="abmt400.input.other" ver="7" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail3",g_detail_idx)
         CALL DIALOG.setCurrentRow("s_detail4",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD bmiadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bmibseq
               WHEN "s_detail2"
                  NEXT FIELD bmic001
               WHEN "s_detail3"
                  NEXT FIELD bmie001
               WHEN "s_detail4"
                  NEXT FIELD bmidseq
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.insert" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION abmt400_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_bmib_d.clear()   
   CALL g_bmib2_d.clear()  
   CALL g_bmib3_d.clear()  
   CALL g_bmib4_d.clear()  
 
 
   INITIALIZE g_bmia_m.* LIKE bmia_t.*             #DEFAULT 設定
   
   LET g_bmiadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_bmia_m.bmiaownid = g_user
      LET g_bmia_m.bmiaowndp = g_dept
      LET g_bmia_m.bmiacrtid = g_user
      LET g_bmia_m.bmiacrtdp = g_dept 
      LET g_bmia_m.bmiacrtdt = cl_get_current()
      LET g_bmia_m.bmiamodid = g_user
      LET g_bmia_m.bmiamoddt = cl_get_current()
      LET g_bmia_m.bmiastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_bmia_m.bmia001 = "1"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_bmia_m_t.* = g_bmia_m.*
      LET g_bmia_m_o.* = g_bmia_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_bmia_m.bmiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "4"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/item_updated.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL abmt400_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_bmia_m.* TO NULL
         INITIALIZE g_bmib_d TO NULL
         INITIALIZE g_bmib2_d TO NULL
         INITIALIZE g_bmib3_d TO NULL
         INITIALIZE g_bmib4_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL abmt400_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_bmib_d.clear()
      #CALL g_bmib2_d.clear()
      #CALL g_bmib3_d.clear()
      #CALL g_bmib4_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt400_set_act_visible()   
   CALL abmt400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " bmiaent = '" ||g_enterprise|| "' AND",
                      " bmiadocno = '", g_bmia_m.bmiadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abmt400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE abmt400_cl
   
   CALL abmt400_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE abmt400_master_referesh USING g_bmia_m.bmiadocno INTO g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
       g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004, 
       g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020, 
       g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp, 
       g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt, 
       g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt,g_bmia_m.bmiadocno_desc,g_bmia_m.bmia002_desc,g_bmia_m.bmia003_desc, 
       g_bmia_m.bmia007_desc,g_bmia_m.bmia005_desc,g_bmia_m.bmia008_desc,g_bmia_m.bmia011_desc,g_bmia_m.bmia013_desc, 
       g_bmia_m.bmia014_desc,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid_desc, 
       g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiacnfid_desc
   
   #遮罩相關處理
   LET g_bmia_m_mask_o.* =  g_bmia_m.*
   CALL abmt400_bmia_t_mask()
   LET g_bmia_m_mask_n.* =  g_bmia_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia002_desc,g_bmia_m.bmiadocno_desc, 
       g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia003_desc,g_bmia_m.bmia007,g_bmia_m.bmia007_desc, 
       g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.imaal003a,g_bmia_m.imaal004a,g_bmia_m.bmia005,g_bmia_m.bmia005_desc, 
       g_bmia_m.bmia006,g_bmia_m.bmia006_desc,g_bmia_m.bmia008,g_bmia_m.bmia008_desc,g_bmia_m.bmia009, 
       g_bmia_m.bmia010,g_bmia_m.imaal003b,g_bmia_m.imaal004b,g_bmia_m.bmia011,g_bmia_m.bmia011_desc, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia013_desc,g_bmia_m.bmia015,g_bmia_m.bmia019, 
       g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia014_desc,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018, 
       g_bmia_m.bmiaownid,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid, 
       g_bmia_m.bmiacrtid_desc,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid, 
       g_bmia_m.bmiamodid_desc,g_bmia_m.bmiamoddt,g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfid_desc,g_bmia_m.bmiacnfdt 

   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL abmt400_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.insert_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION abmt400_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO bmib_t
                  (bmibent,
                   bmibdocno,
                   bmibseq,bmibseq1
                   ,bmib001,bmib002,bmib003,bmib004,bmib005,bmib006,bmib007,bmib008,bmib009,bmibsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmib_d[g_detail_idx].bmib001,g_bmib_d[g_detail_idx].bmib002,g_bmib_d[g_detail_idx].bmib003, 
                       g_bmib_d[g_detail_idx].bmib004,g_bmib_d[g_detail_idx].bmib005,g_bmib_d[g_detail_idx].bmib006, 
                       g_bmib_d[g_detail_idx].bmib007,g_bmib_d[g_detail_idx].bmib008,g_bmib_d[g_detail_idx].bmib009, 
                       g_bmib_d[g_detail_idx].bmibsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmib_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bmib_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO bmic_t
                  (bmicent,
                   bmicdocno,
                   bmic001,bmic002
                   ,bmic003,bmic004,bmic005,bmicsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmib2_d[g_detail_idx].bmic003,g_bmib2_d[g_detail_idx].bmic004,g_bmib2_d[g_detail_idx].bmic005, 
                       g_bmib2_d[g_detail_idx].bmicsite)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmic_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_bmib2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert3" mark="Y"/>}
      #end add-point 
      INSERT INTO bmie_t
                  (bmieent,
                   bmiedocno,
                   bmie001
                   ,bmie002,bmie003,bmiesite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_bmib3_d[g_detail_idx].bmie002,g_bmib3_d[g_detail_idx].bmie003,g_bmib3_d[g_detail_idx].bmiesite) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmie_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'3'" THEN 
         CALL g_bmib3_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert3"/>}
      #end add-point
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert4" mark="Y"/>}
      #end add-point 
      INSERT INTO bmid_t
                  (bmident,
                   bmiddocno,
                   bmidseq
                   ,bmid016,bmid001,bmid002,bmid004,bmid003,bmid005,bmid008,bmid009,bmid010,bmid011,bmid012,bmid013,bmid014,bmid015,bmidsite) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_bmib4_d[g_detail_idx].bmid016,g_bmib4_d[g_detail_idx].bmid001,g_bmib4_d[g_detail_idx].bmid002, 
                       g_bmib4_d[g_detail_idx].bmid004,g_bmib4_d[g_detail_idx].bmid003,g_bmib4_d[g_detail_idx].bmid005, 
                       g_bmib4_d[g_detail_idx].bmid008,g_bmib4_d[g_detail_idx].bmid009,g_bmib4_d[g_detail_idx].bmid010, 
                       g_bmib4_d[g_detail_idx].bmid011,g_bmib4_d[g_detail_idx].bmid012,g_bmib4_d[g_detail_idx].bmid013, 
                       g_bmib4_d[g_detail_idx].bmid014,g_bmib4_d[g_detail_idx].bmid015,g_bmib4_d[g_detail_idx].bmidsite) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmid_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'4'" THEN 
         CALL g_bmib4_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert4"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.key_delete_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION abmt400_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION abmt400_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.lock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION abmt400_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL abmt400_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bmib_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN abmt400_bcl USING g_enterprise,
                                       g_bmia_m.bmiadocno,g_bmib_d[g_detail_idx].bmibseq,g_bmib_d[g_detail_idx].bmibseq1  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abmt400_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "bmic_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmt400_bcl2 USING g_enterprise,
                                             g_bmia_m.bmiadocno,g_bmib2_d[g_detail_idx].bmic001,g_bmib2_d[g_detail_idx].bmic002 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abmt400_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "bmie_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmt400_bcl3 USING g_enterprise,
                                             g_bmia_m.bmiadocno,g_bmib3_d[g_detail_idx].bmie001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abmt400_bcl3" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "bmid_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmt400_bcl4 USING g_enterprise,
                                             g_bmia_m.bmiadocno,g_bmib4_d[g_detail_idx].bmidseq
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abmt400_bcl4" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.main" ver="16" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT bmiadocno,bmiadocdt,bmia002,'','',bmia001,bmia003,'',bmia007,'',bmiastus, 
       bmia004,'','',bmia005,'',bmia006,'',bmia008,'',bmia009,bmia010,'','',bmia011,'',bmia012,bmiasite, 
       bmia013,'',bmia015,bmia019,bmia020,bmia014,'',bmia016,bmia017,bmia018,bmiaownid,'',bmiaowndp, 
       '',bmiacrtid,'',bmiacrtdp,'',bmiacrtdt,bmiamodid,'',bmiamoddt,bmiacnfid,'',bmiacnfdt", 
                      " FROM bmia_t",
                      " WHERE bmiaent= ? AND bmiadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt400_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.bmiadocno,t0.bmiadocdt,t0.bmia002,t0.bmia001,t0.bmia003,t0.bmia007, 
       t0.bmiastus,t0.bmia004,t0.bmia005,t0.bmia006,t0.bmia008,t0.bmia009,t0.bmia010,t0.bmia011,t0.bmia012, 
       t0.bmiasite,t0.bmia013,t0.bmia015,t0.bmia019,t0.bmia020,t0.bmia014,t0.bmia016,t0.bmia017,t0.bmia018, 
       t0.bmiaownid,t0.bmiaowndp,t0.bmiacrtid,t0.bmiacrtdp,t0.bmiacrtdt,t0.bmiamodid,t0.bmiamoddt,t0.bmiacnfid, 
       t0.bmiacnfdt,t1.oobxl003 ,t2.ooag011 ,t3.ooefl003 ,t4.pmaal004 ,t5.bmhel003 ,t6.oocql004 ,t7.oofa011 , 
       t8.oocql004 ,t9.oocql004 ,t10.ooag011 ,t11.ooefl003 ,t12.ooag011 ,t13.ooefl003 ,t14.ooag011 , 
       t15.ooag011",
               " FROM bmia_t t0",
                              " LEFT JOIN oobxl_t t1 ON t1.oobxlent='"||g_enterprise||"' AND t1.oobxl001=t0.bmiadocno AND t1.oobxl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.bmia002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.bmia003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN pmaal_t t4 ON t4.pmaalent='"||g_enterprise||"' AND t4.pmaal001=t0.bmia007 AND t4.pmaal002='"||g_dlang||"' ",
               " LEFT JOIN bmhel_t t5 ON t5.bmhelent='"||g_enterprise||"' AND t5.bmhel001=t0.bmia005 AND t5.bmhel002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='221' AND t6.oocql002=t0.bmia008 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t7 ON t7.oofaent='"||g_enterprise||"' AND t7.oofa001=t0.bmia011  ",
               " LEFT JOIN oocql_t t8 ON t8.oocqlent='"||g_enterprise||"' AND t8.oocql001='1116' AND t8.oocql002=t0.bmia013 AND t8.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t9 ON t9.oocqlent='"||g_enterprise||"' AND t9.oocql001='210' AND t9.oocql002=t0.bmia014 AND t9.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t10 ON t10.ooagent='"||g_enterprise||"' AND t10.ooag001=t0.bmiaownid  ",
               " LEFT JOIN ooefl_t t11 ON t11.ooeflent='"||g_enterprise||"' AND t11.ooefl001=t0.bmiaowndp AND t11.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t12 ON t12.ooagent='"||g_enterprise||"' AND t12.ooag001=t0.bmiacrtid  ",
               " LEFT JOIN ooefl_t t13 ON t13.ooeflent='"||g_enterprise||"' AND t13.ooefl001=t0.bmiacrtdp AND t13.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t14 ON t14.ooagent='"||g_enterprise||"' AND t14.ooag001=t0.bmiamodid  ",
               " LEFT JOIN ooag_t t15 ON t15.ooagent='"||g_enterprise||"' AND t15.ooag001=t0.bmiacnfid  ",
 
               " WHERE t0.bmiaent = '" ||g_enterprise|| "' AND t0.bmiadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE abmt400_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmt400 WITH FORM cl_ap_formpath("abm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abmt400_init()   
 
      #進入選單 Menu (="N")
      CALL abmt400_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abmt400
      
   END IF 
   
   CLOSE abmt400_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="abmt400.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/abm/abmt400_mask.4gl"
]]>
  </section>
  <section id="abmt400.modify" ver="18" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION abmt400_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
   DEFINE l_wc2_table3   STRING
 
   DEFINE l_wc2_table4   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_bmia_m_t.* = g_bmia_m.*
   LET g_bmia_m_o.* = g_bmia_m.*
   
   IF g_bmia_m.bmiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
   CALL s_transaction_begin()
   
   OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmt400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE abmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt400_master_referesh USING g_bmia_m.bmiadocno INTO g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
       g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004, 
       g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020, 
       g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp, 
       g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt, 
       g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt,g_bmia_m.bmiadocno_desc,g_bmia_m.bmia002_desc,g_bmia_m.bmia003_desc, 
       g_bmia_m.bmia007_desc,g_bmia_m.bmia005_desc,g_bmia_m.bmia008_desc,g_bmia_m.bmia011_desc,g_bmia_m.bmia013_desc, 
       g_bmia_m.bmia014_desc,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid_desc, 
       g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiacnfid_desc
   
   #檢查是否允許此動作
   IF NOT abmt400_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_bmia_m_mask_o.* =  g_bmia_m.*
   CALL abmt400_bmia_t_mask()
   LET g_bmia_m_mask_n.* =  g_bmia_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
   #LET l_wc2_table3 = g_wc2_table3
   #LET l_wc2_table3 = " 1=1"
 
   #LET l_wc2_table4 = g_wc2_table4
   #LET l_wc2_table4 = " 1=1"
 
 
 
   
   CALL abmt400_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
   #LET  g_wc2_table3 = l_wc2_table3 
 
   #LET  g_wc2_table4 = l_wc2_table4 
 
 
 
    
   WHILE TRUE
      LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_bmia_m.bmiamodid = g_user 
LET g_bmia_m.bmiamoddt = cl_get_current()
LET g_bmia_m.bmiamodid_desc = cl_get_username(g_bmia_m.bmiamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL abmt400_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE bmia_t SET (bmiamodid,bmiamoddt) = (g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt)
          WHERE bmiaent = g_enterprise AND bmiadocno = g_bmiadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmia_m.* = g_bmia_m_t.*
         CALL abmt400_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_bmia_m.bmiadocno != g_bmiadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE bmib_t SET bmibdocno = g_bmia_m.bmiadocno
 
          WHERE bmibent = g_enterprise AND bmibdocno = g_bmiadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmib_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmib_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE bmic_t
            SET bmicdocno = g_bmia_m.bmiadocno
 
          WHERE bmicent = g_enterprise AND
                bmicdocno = g_bmiadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmic_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmic_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         
         UPDATE bmie_t
            SET bmiedocno = g_bmia_m.bmiadocno
 
          WHERE bmieent = g_enterprise AND
                bmiedocno = g_bmiadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmie_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmie_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point
 
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         
         UPDATE bmid_t
            SET bmiddocno = g_bmia_m.bmiadocno
 
          WHERE bmident = g_enterprise AND
                bmiddocno = g_bmiadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmid_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmid_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt400_set_act_visible()   
   CALL abmt400_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " bmiaent = '" ||g_enterprise|| "' AND",
                      " bmiadocno = '", g_bmia_m.bmiadocno, "' "
 
   #填到對應位置
   CALL abmt400_browser_fill("")
 
   CLOSE abmt400_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL abmt400_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="abmt400.msgcentre_notify" ver="2" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION abmt400_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL abmt400_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_bmia_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt400.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="abmt400.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="abmt400.query" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abmt400_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bmib_d.clear()
   CALL g_bmib2_d.clear()
   CALL g_bmib3_d.clear()
   CALL g_bmib4_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL abmt400_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL abmt400_browser_fill("")
      CALL abmt400_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL abmt400_filter_show('bmiadocno')
   CALL abmt400_filter_show('bmiadocdt')
   CALL abmt400_filter_show('bmia001')
   CALL abmt400_filter_show('bmia004')
   CALL abmt400_filter_show('bmia007')
   CALL abmt400_filter_show('bmiacrtid')
   CALL abmt400_filter_show('bmiacrtdt')
   CALL abmt400_filter_show('bmiamodid')
   CALL abmt400_filter_show('bmiamoddt')
   CALL abmt400_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL abmt400_fetch("F") 
      #顯示單身筆數
      CALL abmt400_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.reproduce" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION abmt400_reproduce()
   DEFINE l_newno     LIKE bmia_t.bmiadocno 
   DEFINE l_oldno     LIKE bmia_t.bmiadocno 
 
   DEFINE l_master    RECORD LIKE bmia_t.*
   DEFINE l_detail    RECORD LIKE bmib_t.*
   DEFINE l_detail2    RECORD LIKE bmic_t.*
 
   DEFINE l_detail3    RECORD LIKE bmie_t.*
 
   DEFINE l_detail4    RECORD LIKE bmid_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_bmia_m.bmiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
    
   LET g_bmia_m.bmiadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_bmia_m.bmiaownid = g_user
      LET g_bmia_m.bmiaowndp = g_dept
      LET g_bmia_m.bmiacrtid = g_user
      LET g_bmia_m.bmiacrtdp = g_dept 
      LET g_bmia_m.bmiacrtdt = cl_get_current()
      LET g_bmia_m.bmiamodid = g_user
      LET g_bmia_m.bmiamoddt = cl_get_current()
      LET g_bmia_m.bmiastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_bmia_m.bmiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "4"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/item_updated.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
      LET g_bmia_m.bmiadocno_desc = ''
   DISPLAY BY NAME g_bmia_m.bmiadocno_desc
 
   
   CALL abmt400_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_bmia_m.* TO NULL
      INITIALIZE g_bmib_d TO NULL
      INITIALIZE g_bmib2_d TO NULL
      INITIALIZE g_bmib3_d TO NULL
      INITIALIZE g_bmib4_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL abmt400_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt400_set_act_visible()   
   CALL abmt400_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_bmiadocno_t = g_bmia_m.bmiadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " bmiaent = '" ||g_enterprise|| "' AND",
                      " bmiadocno = '", g_bmia_m.bmiadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abmt400_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL abmt400_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL abmt400_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION abmt400_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION abmt400_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION abmt400_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION abmt400_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION abmt400_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("bmiadocno,bmiadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmiadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION abmt400_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_no_entry" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION abmt400_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("bmiadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("bmiadocno,bmiadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_no_entry_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION abmt400_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="abmt400.set_pk_array" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION abmt400_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmia_m.bmiadocno
   LET g_pk_array[1].column = 'bmiadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt400.show" ver="15" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abmt400_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL abmt400_b_fill() #單身填充
      CALL abmt400_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL abmt400_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_bmia_m_mask_o.* =  g_bmia_m.*
   CALL abmt400_bmia_t_mask()
   LET g_bmia_m_mask_n.* =  g_bmia_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia002_desc,g_bmia_m.bmiadocno_desc, 
       g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia003_desc,g_bmia_m.bmia007,g_bmia_m.bmia007_desc, 
       g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.imaal003a,g_bmia_m.imaal004a,g_bmia_m.bmia005,g_bmia_m.bmia005_desc, 
       g_bmia_m.bmia006,g_bmia_m.bmia006_desc,g_bmia_m.bmia008,g_bmia_m.bmia008_desc,g_bmia_m.bmia009, 
       g_bmia_m.bmia010,g_bmia_m.imaal003b,g_bmia_m.imaal004b,g_bmia_m.bmia011,g_bmia_m.bmia011_desc, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia013_desc,g_bmia_m.bmia015,g_bmia_m.bmia019, 
       g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia014_desc,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018, 
       g_bmia_m.bmiaownid,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid, 
       g_bmia_m.bmiacrtid_desc,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid, 
       g_bmia_m.bmiamodid_desc,g_bmia_m.bmiamoddt,g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfid_desc,g_bmia_m.bmiacnfdt 

   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_bmia_m.bmiastus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "4"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/item_updated.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmib_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_bmib2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_bmib3_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body3.reference"/>}
      #end add-point
   END FOR
   FOR l_ac = 1 TO g_bmib4_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body4.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL abmt400_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.signature" ver="5" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION abmt400_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
   LET g_wc2_table3 = " 1=1"
   LET g_wc2_table4 = " 1=1"
 
 
   CALL abmt400_show()
   CALL abmt400_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_bmia_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_bmib_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_bmib2_d))
   CALL cl_bpm_set_detail_data("s_detail3", util.JSONArray.fromFGL(g_bmib3_d))
   CALL cl_bpm_set_detail_data("s_detail4", util.JSONArray.fromFGL(g_bmib4_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL abmt400_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL abmt400_ui_headershow()
   CALL abmt400_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION abmt400_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL abmt400_ui_headershow()  
   CALL abmt400_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="abmt400.state_change" ver="11" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION abmt400_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_bmia_m.bmiadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN abmt400_cl USING g_enterprise,g_bmia_m.bmiadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmt400_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE abmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE abmt400_master_referesh USING g_bmia_m.bmiadocno INTO g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
       g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004, 
       g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020, 
       g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp, 
       g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt, 
       g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt,g_bmia_m.bmiadocno_desc,g_bmia_m.bmia002_desc,g_bmia_m.bmia003_desc, 
       g_bmia_m.bmia007_desc,g_bmia_m.bmia005_desc,g_bmia_m.bmia008_desc,g_bmia_m.bmia011_desc,g_bmia_m.bmia013_desc, 
       g_bmia_m.bmia014_desc,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid_desc, 
       g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiacnfid_desc
 
   #檢查是否允許此動作
   IF NOT abmt400_action_chk() THEN
      CLOSE abmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia002_desc,g_bmia_m.bmiadocno_desc, 
       g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia003_desc,g_bmia_m.bmia007,g_bmia_m.bmia007_desc, 
       g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.imaal003a,g_bmia_m.imaal004a,g_bmia_m.bmia005,g_bmia_m.bmia005_desc, 
       g_bmia_m.bmia006,g_bmia_m.bmia006_desc,g_bmia_m.bmia008,g_bmia_m.bmia008_desc,g_bmia_m.bmia009, 
       g_bmia_m.bmia010,g_bmia_m.imaal003b,g_bmia_m.imaal004b,g_bmia_m.bmia011,g_bmia_m.bmia011_desc, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia013_desc,g_bmia_m.bmia015,g_bmia_m.bmia019, 
       g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia014_desc,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018, 
       g_bmia_m.bmiaownid,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid, 
       g_bmia_m.bmiacrtid_desc,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid, 
       g_bmia_m.bmiamodid_desc,g_bmia_m.bmiamoddt,g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfid_desc,g_bmia_m.bmiacnfdt 

 
   CASE g_bmia_m.bmiastus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "4"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/item_updated.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_bmia_m.bmiastus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "4"
               HIDE OPTION "item_updated"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT abmt400_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE abmt400_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT abmt400_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE abmt400_cl
            RETURN
         END IF
 
 
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION item_updated
         IF cl_auth_chk_act("item_updated") THEN
            LET lc_state = "4"
            #add-point:action控制
            {<point name="statechange.item_updated"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "4"
      AND lc_state <> "A"
      AND lc_state <> "D"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "X"
      ) OR 
      g_bmia_m.bmiastus = lc_state OR cl_null(lc_state) THEN
      CLOSE abmt400_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_bmia_m.bmiamodid = g_user
   LET g_bmia_m.bmiamoddt = cl_get_current()
   LET g_bmia_m.bmiastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE bmia_t 
      SET (bmiastus,bmiamodid,bmiamoddt) 
        = (g_bmia_m.bmiastus,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt)     
    WHERE bmiaent = g_enterprise AND bmiadocno = g_bmia_m.bmiadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "4"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/item_updated.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE abmt400_master_referesh USING g_bmia_m.bmiadocno INTO g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
          g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004, 
          g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
          g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020, 
          g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp, 
          g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt, 
          g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt,g_bmia_m.bmiadocno_desc,g_bmia_m.bmia002_desc,g_bmia_m.bmia003_desc, 
          g_bmia_m.bmia007_desc,g_bmia_m.bmia005_desc,g_bmia_m.bmia008_desc,g_bmia_m.bmia011_desc,g_bmia_m.bmia013_desc, 
          g_bmia_m.bmia014_desc,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid_desc, 
          g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt,g_bmia_m.bmia002,g_bmia_m.bmia002_desc,g_bmia_m.bmiadocno_desc, 
          g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia003_desc,g_bmia_m.bmia007,g_bmia_m.bmia007_desc, 
          g_bmia_m.bmiastus,g_bmia_m.bmia004,g_bmia_m.imaal003a,g_bmia_m.imaal004a,g_bmia_m.bmia005, 
          g_bmia_m.bmia005_desc,g_bmia_m.bmia006,g_bmia_m.bmia006_desc,g_bmia_m.bmia008,g_bmia_m.bmia008_desc, 
          g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.imaal003b,g_bmia_m.imaal004b,g_bmia_m.bmia011,g_bmia_m.bmia011_desc, 
          g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia013_desc,g_bmia_m.bmia015, 
          g_bmia_m.bmia019,g_bmia_m.bmia020,g_bmia_m.bmia014,g_bmia_m.bmia014_desc,g_bmia_m.bmia016, 
          g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp, 
          g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtid_desc,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdp_desc, 
          g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiamoddt,g_bmia_m.bmiacnfid, 
          g_bmia_m.bmiacnfid_desc,g_bmia_m.bmiacnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE abmt400_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL abmt400_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt400.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION abmt400_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="abmt400.ui_browser_refresh" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abmt400_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmiadocno = g_bmia_m.bmiadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION abmt400_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="abmt400.ui_dialog" ver="21" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION abmt400_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL abmt400_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_bmia_m.* TO NULL
         CALL g_bmib_d.clear()
         CALL g_bmib2_d.clear()
         CALL g_bmib3_d.clear()
         CALL g_bmib4_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL abmt400_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL abmt400_fetch('') # reload data
               LET l_ac = 1
               CALL abmt400_ui_detailshow() #Setting the current row 
         
               CALL abmt400_idx_chk()
               #NEXT FIELD bmibseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_bmib_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL abmt400_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL abmt400_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_bmib2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL abmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL abmt400_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_bmib3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL abmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_detail_idx = l_ac
               
               #add-point:page3, before row動作
               {<point name="ui_dialog.body3.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail3")
               LET g_current_page = 3
               #顯示單身筆數
               CALL abmt400_idx_chk()
               #add-point:page3自定義行為
               {<point name="ui_dialog.body3.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_3)
            
         
            #add-point:page3自定義行為
            {<point name="ui_dialog.body3.action"/>}
            #end add-point
         
         END DISPLAY
         #第一階單身段落
         DISPLAY ARRAY g_bmib4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL abmt400_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_detail_idx = l_ac
               
               #add-point:page4, before row動作
               {<point name="ui_dialog.body4.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail4")
               LET g_current_page = 4
               #顯示單身筆數
               CALL abmt400_idx_chk()
               #add-point:page4自定義行為
               {<point name="ui_dialog.body4.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_4)
            
         
            #add-point:page4自定義行為
            {<point name="ui_dialog.body4.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL abmt400_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmt400_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abmt400_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL abmt400_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL abmt400_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL abmt400_set_act_visible()   
            CALL abmt400_set_act_no_visible()
            IF NOT (g_bmia_m.bmiadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " bmiaent = '" ||g_enterprise|| "' AND",
                                  " bmiadocno = '", g_bmia_m.bmiadocno, "' "
 
               #填到對應位置
               CALL abmt400_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "bmia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmib_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "bmie_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "bmid_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL abmt400_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
               INITIALIZE g_wc2_table3 TO NULL
 
               INITIALIZE g_wc2_table4 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "bmia_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmib_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmic_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "bmie_t" 
                        LET g_wc2_table3 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "bmid_t" 
                        LET g_wc2_table4 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
                  OR NOT cl_null(g_wc2_table3)
 
                  OR NOT cl_null(g_wc2_table4)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
                  IF g_wc2_table3 <> " 1=1" AND NOT cl_null(g_wc2_table3) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table3
                  END IF
 
                  IF g_wc2_table4 <> " 1=1" AND NOT cl_null(g_wc2_table4) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table4
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL abmt400_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL abmt400_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL abmt400_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL abmt400_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt400_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL abmt400_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt400_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL abmt400_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt400_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL abmt400_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt400_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL abmt400_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt400_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_bmib_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_bmib2_d)
                  LET g_export_id[2]   = "s_detail2"
                  LET g_export_node[3] = base.typeInfo.create(g_bmib3_d)
                  LET g_export_id[3]   = "s_detail3"
                  LET g_export_node[4] = base.typeInfo.create(g_bmib4_d)
                  LET g_export_id[4]   = "s_detail4"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD bmibseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abmt400_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmt400_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abmt400_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
               CALL g_curr_diag.setCurrentRow("s_detail3",1)
               CALL g_curr_diag.setCurrentRow("s_detail4",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/abm/abmt400_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL abmt400_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION all_pass
            LET g_action_choice="all_pass"
            IF cl_auth_chk_act("all_pass") THEN
               
               #add-point:ON ACTION all_pass
               {<point name="menu.all_pass" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abmt400_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abmt400_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL abmt400_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abmt400_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abmt400_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_bmia_m.bmiadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="abmt400.ui_headershow" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION abmt400_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_bmia_m.bmiadocno = g_browser[g_current_idx].b_bmiadocno   
 
   EXECUTE abmt400_master_referesh USING g_bmia_m.bmiadocno INTO g_bmia_m.bmiadocno,g_bmia_m.bmiadocdt, 
       g_bmia_m.bmia002,g_bmia_m.bmia001,g_bmia_m.bmia003,g_bmia_m.bmia007,g_bmia_m.bmiastus,g_bmia_m.bmia004, 
       g_bmia_m.bmia005,g_bmia_m.bmia006,g_bmia_m.bmia008,g_bmia_m.bmia009,g_bmia_m.bmia010,g_bmia_m.bmia011, 
       g_bmia_m.bmia012,g_bmia_m.bmiasite,g_bmia_m.bmia013,g_bmia_m.bmia015,g_bmia_m.bmia019,g_bmia_m.bmia020, 
       g_bmia_m.bmia014,g_bmia_m.bmia016,g_bmia_m.bmia017,g_bmia_m.bmia018,g_bmia_m.bmiaownid,g_bmia_m.bmiaowndp, 
       g_bmia_m.bmiacrtid,g_bmia_m.bmiacrtdp,g_bmia_m.bmiacrtdt,g_bmia_m.bmiamodid,g_bmia_m.bmiamoddt, 
       g_bmia_m.bmiacnfid,g_bmia_m.bmiacnfdt,g_bmia_m.bmiadocno_desc,g_bmia_m.bmia002_desc,g_bmia_m.bmia003_desc, 
       g_bmia_m.bmia007_desc,g_bmia_m.bmia005_desc,g_bmia_m.bmia008_desc,g_bmia_m.bmia011_desc,g_bmia_m.bmia013_desc, 
       g_bmia_m.bmia014_desc,g_bmia_m.bmiaownid_desc,g_bmia_m.bmiaowndp_desc,g_bmia_m.bmiacrtid_desc, 
       g_bmia_m.bmiacrtdp_desc,g_bmia_m.bmiamodid_desc,g_bmia_m.bmiacnfid_desc
   CALL abmt400_bmia_t_mask()
   CALL abmt400_show()
      
END FUNCTION
]]>
  </section>
  <section id="abmt400.unlock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abmt400_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt400_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt400_bcl2
   END IF
 
   LET ls_group = "'3',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt400_bcl3
   END IF
 
   LET ls_group = "'4',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt400_bcl4
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="abmt400.update_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION abmt400_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmib_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL abmt400_bmib_t_mask_restore('restore_mask_o')
               
      UPDATE bmib_t 
         SET (bmibdocno,
              bmibseq,bmibseq1
              ,bmib001,bmib002,bmib003,bmib004,bmib005,bmib006,bmib007,bmib008,bmib009,bmibsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmib_d[g_detail_idx].bmib001,g_bmib_d[g_detail_idx].bmib002,g_bmib_d[g_detail_idx].bmib003, 
                  g_bmib_d[g_detail_idx].bmib004,g_bmib_d[g_detail_idx].bmib005,g_bmib_d[g_detail_idx].bmib006, 
                  g_bmib_d[g_detail_idx].bmib007,g_bmib_d[g_detail_idx].bmib008,g_bmib_d[g_detail_idx].bmib009, 
                  g_bmib_d[g_detail_idx].bmibsite) 
         WHERE bmibent = g_enterprise AND bmibdocno = ps_keys_bak[1] AND bmibseq = ps_keys_bak[2] AND bmibseq1 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmib_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmib_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL abmt400_bmib_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmic_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL abmt400_bmic_t_mask_restore('restore_mask_o')
               
      UPDATE bmic_t 
         SET (bmicdocno,
              bmic001,bmic002
              ,bmic003,bmic004,bmic005,bmicsite) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmib2_d[g_detail_idx].bmic003,g_bmib2_d[g_detail_idx].bmic004,g_bmib2_d[g_detail_idx].bmic005, 
                  g_bmib2_d[g_detail_idx].bmicsite) 
         WHERE bmicent = g_enterprise AND bmicdocno = ps_keys_bak[1] AND bmic001 = ps_keys_bak[2] AND bmic002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmic_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmic_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL abmt400_bmic_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmie_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update3" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL abmt400_bmie_t_mask_restore('restore_mask_o')
               
      UPDATE bmie_t 
         SET (bmiedocno,
              bmie001
              ,bmie002,bmie003,bmiesite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_bmib3_d[g_detail_idx].bmie002,g_bmib3_d[g_detail_idx].bmie003,g_bmib3_d[g_detail_idx].bmiesite)  

         WHERE bmieent = g_enterprise AND bmiedocno = ps_keys_bak[1] AND bmie001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmie_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmie_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL abmt400_bmie_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update3"/>}
      #end add-point  
   END IF
 
   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmid_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update4" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL abmt400_bmid_t_mask_restore('restore_mask_o')
               
      UPDATE bmid_t 
         SET (bmiddocno,
              bmidseq
              ,bmid016,bmid001,bmid002,bmid004,bmid003,bmid005,bmid008,bmid009,bmid010,bmid011,bmid012,bmid013,bmid014,bmid015,bmidsite) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_bmib4_d[g_detail_idx].bmid016,g_bmib4_d[g_detail_idx].bmid001,g_bmib4_d[g_detail_idx].bmid002, 
                  g_bmib4_d[g_detail_idx].bmid004,g_bmib4_d[g_detail_idx].bmid003,g_bmib4_d[g_detail_idx].bmid005, 
                  g_bmib4_d[g_detail_idx].bmid008,g_bmib4_d[g_detail_idx].bmid009,g_bmib4_d[g_detail_idx].bmid010, 
                  g_bmib4_d[g_detail_idx].bmid011,g_bmib4_d[g_detail_idx].bmid012,g_bmib4_d[g_detail_idx].bmid013, 
                  g_bmib4_d[g_detail_idx].bmid014,g_bmib4_d[g_detail_idx].bmid015,g_bmib4_d[g_detail_idx].bmidsite)  

         WHERE bmident = g_enterprise AND bmiddocno = ps_keys_bak[1] AND bmidseq = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmid_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmid_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL abmt400_bmid_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update4"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
