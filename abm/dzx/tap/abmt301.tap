<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="abmt301" std_prog="abmt301" erpver="1.0" module="ABM" ver="13" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status="u"/>
    <free_style value="N" status="u"/>
    <start_arg value="" status="u"/>
  </other>
  <point name="construct.c.bmfacnfid" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfacnfid  #顯示到畫面上

            NEXT FIELD bmfacnfid                     #返回原欄位

]]>
  </point>
  <point name="input.a.page2.bmfb015" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_bmfb_desc()
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb015) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmfp2_d[l_ac].bmfb015

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_bmze001") THEN
                  LET g_bmfp2_d[l_ac].bmfb015 = g_bmfp2_d_t.bmfb015
                  CALL abmt301_bmfb_desc()
                  NEXT FIELD bmfb015
               END IF
            END IF
            
]]>
  </point>
  <point name="input.a.page2.bmfb009" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_bmfb_desc()
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb009) THEN
               CALL s_azzi650_chk_exist('221',g_bmfp2_d[l_ac].bmfb009) RETURNING l_success
               IF NOT l_success THEN
                  LET g_bmfp2_d[l_ac].bmfb009 = g_bmfp2_d_t.bmfb009
                  CALL abmt301_bmfb_desc()
                  NEXT FIELD bmfb009
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.bmfb008" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_bmfb_desc()
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb008) THEN
               CALL s_azzi650_chk_exist('215',g_bmfp2_d[l_ac].bmfb008) RETURNING l_success
               IF NOT l_success THEN
                  LET g_bmfp2_d[l_ac].bmfb008 = g_bmfp2_d_t.bmfb008
                  CALL abmt301_bmfb_desc()
                  NEXT FIELD bmfb008
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.bmfpdocno" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmfa_m.bmfadocno) AND NOT cl_null(g_bmfp_d[l_ac].bmfpdocno) AND NOT cl_null(g_bmfp_d[l_ac].bmfp002) AND NOT cl_null(g_bmfp_d[l_ac].bmfp003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmfa_m.bmfadocno != g_bmfadocno_t OR g_bmfp_d[l_ac].bmfpdocno != g_bmfp_d_t.bmfpdocno OR g_bmfp_d[l_ac].bmfp002 != g_bmfp_d_t.bmfp002 OR g_bmfp_d[l_ac].bmfp003 != g_bmfp_d_t.bmfp003))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmfp_t WHERE "||"bmfpent = '" ||g_enterprise|| "' AND bmfpsite = '" ||g_site|| "' AND "||"bmfpdocno = '"||g_bmfa_m.bmfadocno ||"' AND "|| "bmfp002 = '"||g_bmfp_d[l_ac].bmfpdocno ||"' AND "|| "bmfp003 = '"||g_bmfp_d[l_ac].bmfp002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.bmfp005" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_bmfp_desc()
            IF NOT cl_null(g_bmfp_d[l_ac].bmfp005) THEN
               CALL s_azzi650_chk_exist('210',g_bmfp_d[l_ac].bmfp005) RETURNING l_success
               IF NOT l_success THEN
                  LET g_bmfp_d[l_ac].bmfp005 = g_bmfp_d_t.bmfp005
                  CALL abmt301_bmfp_desc()
                  NEXT FIELD bmfp005
               END IF
            END IF
            ]]>
  </point>
  <point name="input.a.page1.bmfp004" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           ]]>
  </point>
  <point name="input.a.bmfa007" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_desc()
            IF NOT cl_null(g_bmfa_m.bmfa007) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmfa_m.bmfa007
               LET g_chkparam.arg2 = g_bmfa_m.bmfadocdt

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooeg001_3") THEN
                  LET g_bmfa_m.bmfa007 = g_bmfa_m_t.bmfa007
                  CALL abmt301_desc()
                  NEXT FIELD bmfa007
               END IF
            END IF
            
]]>
  </point>
  <point name="input.a.bmfa006" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_desc()
            IF NOT cl_null(g_bmfa_m.bmfa006) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmfa_m.bmfa006

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooag001") THEN
                  LET g_bmfa_m.bmfa006 = g_bmfa_m_t.bmfa006
                  CALL abmt301_desc()
                  NEXT FIELD bmfa006
               END IF
               SELECT ooag003 INTO g_bmfa_m.bmfa007
                 FROM ooag_t
                WHERE ooagent = g_enterprise
                  AND ooag001 = g_bmfa_m.bmfa006
            END IF
            
]]>
  </point>
  <point name="function.abmt301_desc" order="1" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#單頭參考欄位顯示
PRIVATE FUNCTION abmt301_desc()
   LET g_ref_fields[1] = g_bmfa_m.bmfa006
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_bmfa_m.bmfa006_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_bmfa_m.bmfa006_desc
  
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfa_m.bmfa007
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfa_m.bmfa007_desc = g_rtn_fields[1] 
   DISPLAY BY NAME g_bmfa_m.bmfa007_desc
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfadocno" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#單別檢查
PRIVATE FUNCTION abmt301_chk_bmfadocno()
DEFINE l_n      LIKE type_t.num5

   LET g_errno = ""
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM oobl_t
    WHERE oobl001 IN (SELECT ooef004 FROM ooef_t
                       WHERE ooef001 = g_site
                         AND ooefent = g_enterprise )
      AND oobl002 = g_bmfa_m.bmfadocno
      AND ooblent = g_enterprise
      AND oobl003 = g_prog
    IF l_n = 0 THEN
       LET g_errno = 'abm-00066'
    END IF
   

END FUNCTION]]>
  </point>
  <point name="function.abmt301_browser_desc" order="3" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#查詢方案參考欄位顯示
PRIVATE FUNCTION abmt301_browser_desc()
   SELECT ooag011 INTO g_browser[g_cnt].b_ooag011
     FROM ooag_t 
    WHERE ooagent= g_enterprise
      AND ooag001= g_browser[g_cnt].b_bmfa006
      
   SELECT ooefl003 INTO g_browser[g_cnt].b_ooefl003
     FROM ooefl_t 
    WHERE ooeflent= g_enterprise
      AND ooefl001= g_browser[g_cnt].b_bmfa007
      AND ooefl002= g_dlang
      
   IF NOT cl_null(g_browser[g_cnt].b_bmfadocno) THEN  
     CALL s_aooi360_sel('6',g_browser[g_cnt].b_bmfadocno,'','','','','','','','','','1')  RETURNING l_success,g_browser[g_cnt].b_ooff013
     DISPLAY BY NAME g_browser[g_cnt].b_ooff013
  END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_def_bmfg003" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#生產起始量預設值
PRIVATE FUNCTION abmt301_def_bmfg003()
DEFINE l_n          LIKE type_t.num5
DEFINE i            LIKE type_t.num5
DEFINE l_imae016    LIKE imae_t.imae016
DEFINE l_ooca002    LIKE ooca_t.ooca002
DEFINE l_bmfg004    LIKE bmfg_t.bmfg004
DEFINE l_str        STRING
DEFINE l_num        LIKE bmfg_t.bmfg004
            
   LET l_n = 0
   SELECT COUNT(*) INTO l_n 
     FROM bmfg_t
    WHERE bmfgent = g_enterprise
      AND bmfgsite = g_site
      AND bmfgdocno = g_bmfa_m.bmfadocno
      AND bmfg002 = g_bmfp2_d[l_ac].bmfb002
   IF l_n = 0 THEN
      LET g_bmfb3_d[l_ac1].bmfg003 = 0
   ELSE
      SELECT imae016 INTO l_imae016
        FROM imae_t
       WHERE imaeent = g_enterprise
         AND imaesite = g_site
         AND imae001 = g_bmfp_d[l_ac].bmfp002
      IF cl_null(l_imae016) THEN
         LET l_ooca002 = 0
         LET l_num = 0
      ELSE
         SELECT ooca002 INTO l_ooca002
           FROM ooca_t
          WHERE oocaent = g_enterprise
            AND ooca001 = l_imae016
         IF cl_null(l_ooca002) THEN
            LET l_ooca002 = 0
            LET l_num = 0
         END IF
      END IF
      IF l_ooca002 = 1 THEN
         LET l_num = 0.1
      END IF
      IF l_ooca002 = 2 THEN
         LET l_num = 0.01
      END IF
      IF l_ooca002 > 2 THEN
         LET l_str = '0'
         FOR i=1 TO l_ooca002 -2
             LET l_str = '0',l_str
         END FOR
         LET l_str = '0.',l_str,'1'
         LET l_num = l_str
      END IF
      SELECT MAX(bmfg004) INTO l_bmfg004
        FROM bmfg_t 
       WHERE bmfgent = g_enterprise
         AND bmfgsite = g_site
         AND bmfgdocno = g_bmfa_m.bmfadocno
         AND bmfg002 = g_bmfp2_d[l_ac].bmfb002
      IF NOT cl_null(l_bmfg004) THEN
         IF l_num = 0 THEN
            LET g_bmfb3_d[l_ac1].bmfg003 = l_bmfg004 + l_num +1
         ELSE
            LET g_bmfb3_d[l_ac1].bmfg003 = l_bmfg004 + l_num
         END IF
      END IF
   END IF
   DISPLAY g_bmfb3_d[l_ac1].bmfg003 TO s_detail3[l_ac1].bmfg003
END FUNCTION]]>
  </point>
  <point name="function.abmt301_bmfc_desc" order="5" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取替代單身參考欄位帶值
PRIVATE FUNCTION abmt301_bmfc_desc()
   SELECT imaal003,imaal004 
     INTO g_bmfb4_d[l_ac1].bmfc005_desc,g_bmfb4_d[l_ac1].bmfc005_desc1
     FROM imaal_t
    WHERE imaal001 = g_bmfb4_d[l_ac1].bmfc005
      AND imaalent = g_enterprise
      AND imaal002 = g_dlang
   DISPLAY BY NAME g_bmfb4_d[l_ac1].bmfc005_desc,g_bmfb4_d[l_ac1].bmfc005_desc1
            
   #显示产品特征说明               
   CALL s_feature_description(g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc015)
      RETURNING l_success,g_bmfb4_d[l_ac1].bmfc015_desc
   IF l_success THEN
      DISPLAY BY NAME g_bmfb4_d[l_ac1].bmfc015_desc
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfc005" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取替代單身料號檢查
PRIVATE FUNCTION abmt301_chk_bmfc005()
DEFINE l_oocq004        LIKE oocq_t.oocq004
DEFINE l_n              LIKE type_t.num5

   LET g_errno = ""
   IF NOT cl_null(g_bmfp_d[l_ac].bmfp002) THEN
      SELECT oocq004 INTO l_oocq004
        FROM oocq_t
       WHERE oocq001 = '210'
         AND oocq002 = g_bmfp_d[l_ac].bmfp002
         AND oocqent = g_enterprise
         AND oocqstus = 'Y'
   END IF
   IF l_oocq004 = 'N' THEN
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM imaa_t
       WHERE imaa001 = g_bmfb4_d[l_ac1].bmfc005
         AND imaaent = g_enterprise
         AND imaastus = 'Y'
         AND imaa038 = 'Y'
      IF l_n > 0 THEN
         LET g_errno = 'abm-00010'
         RETURN
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_def_bmfc004" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取替代變更方式，料號帶值
PRIVATE FUNCTION abmt301_def_bmfc004()
   IF g_bmfb4_d[l_ac1].bmfc004 = '1' OR g_bmfb4_d[l_ac1].bmfc004 = '4' THEN
      SELECT TRUNC(bmfa005) INTO g_bmfb4_d[l_ac1].bmfc006
        FROM bmfa_t
       WHERE bmfaent = g_enterprise
         AND bmfasite = g_site
         AND bmfadocno = g_bmfa_m.bmfadocno
      LET g_bmfb4_d[l_ac1].bmfc008 = 1
      LET g_bmfb4_d[l_ac1].bmfc009 = 1
      IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc005) THEN
        SELECT imae081 INTO g_bmfb4_d[l_ac1].bmfc010
          FROM imae_t
         WHERE imaeent = g_enterprise
           AND imaesite = g_site
           AND imae001 = g_bmfb4_d[l_ac1].bmfc005  
      END IF
      LET g_bmfb4_d[l_ac1].bmfc011 = 'N'
      LET g_bmfb4_d[l_ac1].bmfc012 = 99
      LET g_bmfb4_d[l_ac1].bmfc013 = '1'
      LET g_bmfb4_d[l_ac1].bmfc014 = 100
   ELSE   
      LET g_bmfb4_d[l_ac1].bmfc011 = ""  
      LET g_bmfb4_d[l_ac1].bmfc012 = ""
      LET g_bmfb4_d[l_ac1].bmfc013 = ""
      LET g_bmfb4_d[l_ac1].bmfc014 = ""      
      IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc005) THEN
         SELECT bmea009,bmea011,bmea012,bmea013,bmae014,bmae015,bmae016,bmae017 
           INTO g_bmfb4_d[l_ac1].bmfc006,g_bmfb4_d[l_ac1].bmfc008,g_bmfb4_d[l_ac1].bmfc009,g_bmfb4_d[l_ac1].bmfc010,g_bmfb4_d[l_ac1].bmfc011,g_bmfb4_d[l_ac1].bmfc012,g_bmfb4_d[l_ac1].bmfc013,g_bmfb4_d[l_ac1].bmfc014
           FROM bmea_t
          WHERE bmeaent = g_enterprise
            AND bmeasite = g_site
            AND bmea001 = g_bmfp_d[l_ac].bmfp002
            AND bmea002 = g_bmfp_d[l_ac].bmfp003
            AND bmea003 = g_bmfb4_d[l_ac1].bmfc005 
         IF g_bmfb4_d[l_ac1].bmfc004 = '2' OR g_bmfb4_d[l_ac1].bmfc004 = '5' THEN
           SELECT bmea010 INTO g_bmfb4_d[l_ac1].bmfc007
             FROM bmea_t
            WHERE bmeaent = g_enterprise
              AND bmeasite = g_site
              AND bmea001 = g_bmfp_d[l_ac].bmfp002
              AND bmea002 = g_bmfp_d[l_ac].bmfp003
              AND bmea003 = g_bmfb4_d[l_ac1].bmfc005 
           END IF
      END IF
      IF g_bmfb4_d[l_ac1].bmfc004 = '3' OR g_bmfb4_d[l_ac1].bmfc004 = '6' THEN
         SELECT TRUNC(bmfa005) INTO g_bmfb4_d[l_ac1].bmfc007
           FROM bmfa_t
          WHERE bmfaent = g_enterprise
            AND bmfasite = g_site
            AND bmfadocno = g_bmfa_m.bmfadocno
      END IF
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_set_entry_bmfc" order="8" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#bmfc_t栏位可录
PRIVATE FUNCTION abmt301_set_entry_bmfc()
   CALL cl_set_comp_entry("bmfc014",TRUE)
   CALL cl_set_comp_entry("bmfc015",TRUE)
END FUNCTION]]>
  </point>
  <point name="function.abmt301_set_no_entry_bmfc" order="9" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#bmfc_t栏位不可录
PRIVATE FUNCTION abmt301_set_no_entry_bmfc()
   DEFINE l_imaa005   LIKE imaa_t.imaa005  #141020 add zhangllc
   
   IF g_bmfb4_d[l_ac1].bmfc013 = '2'  THEN
      LET g_bmfb4_d[l_ac1].bmfc014 = 100
      CALL cl_set_comp_entry("bmfc014",FALSE)
   END IF
   #141020 add zhangllc
   IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc005) THEN
      SELECT imaa005 INTO l_imaa005  #特征类别
        FROM imaa_t
       WHERE imaaent  = g_enterprise
         AND imaa001  = g_bmfb4_d[l_ac1].bmfc005
      IF cl_null(l_imaa005) THEN
         CALL cl_set_comp_entry("bmfc015",FALSE)  #产品特征
      END IF
   END IF
   #141020 add zhangllc--end
END FUNCTION]]>
  </point>
  <point name="function.abmt301_b_fill_1" order="10" ver="7" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#損耗率+取替代單身填充
PRIVATE FUNCTION abmt301_b_fill_1()
   CALL g_bmfb3_d.clear()
   CALL g_bmfb4_d.clear()

   IF cl_null(l_ac) OR l_ac = 0 THEN
      RETURN
   END IF
   IF cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
      CALL g_bmfp2_d.deleteElement(l_ac)
      RETURN
   END IF
   LET g_sql = "SELECT UNIQUE bmfg003,bmfg004,bmfg005,bmfg006 ",
               "  FROM bmfg_t", 
               " WHERE bmfgent=? AND bmfgsite=? AND bmfgdocno=? AND bmfg002=? "
 
   IF NOT cl_null(g_wc_table3) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table3 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY bmfg_t.bmfg003"
   
   PREPARE abmt301_pb5 FROM g_sql
   DECLARE b_fill_cs5 CURSOR FOR abmt301_pb5
 
   LET l_ac1 = 1
 
   OPEN b_fill_cs5 USING g_enterprise,g_site,g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002

                                            
   FOREACH b_fill_cs5 INTO g_bmfb3_d[l_ac1].bmfg003,g_bmfb3_d[l_ac1].bmfg004,g_bmfb3_d[l_ac1].bmfg005,g_bmfb3_d[l_ac1].bmfg006 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
 
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
   
   LET g_sql = "SELECT UNIQUE bmfc003,bmfc004,bmfc005,'','',bmfc015,'',bmfc006,bmfc007,bmfc008,bmfc009,bmfc010,bmfc011,bmfc012,bmfc013,bmfc014 ",
               "  FROM bmfc_t", 
               " WHERE bmfcent=? AND bmfcsite=? AND bmfcdocno=? AND bmfc002=? "
 
   IF NOT cl_null(g_wc_table4) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table4 CLIPPED
   END IF
 
   LET g_sql = g_sql, " ORDER BY bmfc_t.bmfc003"
   
   PREPARE abmt301_pb6 FROM g_sql
   DECLARE b_fill_cs6 CURSOR FOR abmt301_pb6

   LET l_ac1 = 1
 
   OPEN b_fill_cs6 USING g_enterprise,g_site,g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002

                                            
   FOREACH b_fill_cs6 INTO g_bmfb4_d[l_ac1].bmfc003,g_bmfb4_d[l_ac1].bmfc004,
                           g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc005_desc,g_bmfb4_d[l_ac1].bmfc005_desc1,
                           g_bmfb4_d[l_ac1].bmfc015,g_bmfb4_d[l_ac1].bmfc015_desc,
                           g_bmfb4_d[l_ac1].bmfc006,g_bmfb4_d[l_ac1].bmfc007,g_bmfb4_d[l_ac1].bmfc008,g_bmfb4_d[l_ac1].bmfc009,g_bmfb4_d[l_ac1].bmfc010,
                           g_bmfb4_d[l_ac1].bmfc011,g_bmfb4_d[l_ac1].bmfc012,g_bmfb4_d[l_ac1].bmfc013,g_bmfb4_d[l_ac1].bmfc014
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      CALL abmt301_bmfc_desc()
      LET l_ac1 = l_ac1 + 1
      IF l_ac1 > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
   END FOREACH
   
   CALL g_bmfb3_d.deleteElement(g_bmfb3_d.getLength())

   CALL g_bmfb4_d.deleteElement(g_bmfb4_d.getLength())
   
   FREE abmt301_pb5
   FREE abmt301_pb6
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfg003" order="11" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#生產起始量檢查
PRIVATE FUNCTION abmt301_chk_bmfg003(p_qty,p_type,p_cmd)
DEFINE l_n         LIKE type_t.num5
DEFINE l_sql       STRING
DEFINE p_qty       LIKE bmfg_t.bmfg003
DEFINE p_type      LIKE type_t.chr1     #1.bmfg003 2.bmfg004
DEFINE p_cmd       LIKE type_t.chr1
DEFINE l_bmfg003   LIKE bmfg_t.bmfg003
DEFINE l_bmfg004   LIKE bmfg_t.bmfg004

   LET g_errno = ""
   IF p_cmd = 'a' THEN
      LET l_sql = " SELECT bmfg003,bmfg004 ",
                  "   FROM bmfg_t",
                  "  WHERE bmfgent = '",g_enterprise,"' ",
                  "    AND bmfgsite = '",g_site,"' ",
                  "    AND bmfgdocno = '",g_bmfa_m.bmfadocno,"' ",
                  "    AND bmfg002 = '",g_bmfp2_d[l_ac].bmfb002,"' "
   ELSE 
      LET l_sql = " SELECT bmfg003,bmfg004 ",
                  "   FROM bmfg_t",
                  "  WHERE bmfgent = '",g_enterprise,"' ",
                  "    AND bmfgsite = '",g_site,"' ",
                  "    AND bmfgdocno = '",g_bmfa_m.bmfadocno,"' ",
                  "    AND bmfg002 = '",g_bmfp2_d[l_ac].bmfb002,"' ",
                  "    AND bmfg003 <> '",g_bmfb3_d_t.bmfg003,"' "
   END IF
   PREPARE abmt301_chk_bmfg003_pb FROM l_sql
   DECLARE abmt301_chk_bmfg003_cs CURSOR FOR abmt301_chk_bmfg003_pb
   FOREACH abmt301_chk_bmfg003_cs INTO l_bmfg003,l_bmfg004
      #--当笔输入的值不能再其他笔起止数量范围内
      #当笔输入的值不能在其他笔数量范围内
      IF NOT cl_null(l_bmfg004) AND (p_qty >= l_bmfg003 AND p_qty <= l_bmfg004) THEN
         LET g_errno = 'abm-00025'
         RETURN
      END IF
      #当笔输入的值不能在其他笔无穷大范围内
      IF cl_null(l_bmfg004) AND p_qty >= l_bmfg003 THEN
         LET g_errno = 'abm-00025'
         RETURN
      END IF
      CASE p_type
         WHEN '1'   #bmfg003
              #--当笔输入的范围，不能包含到其他笔的起止数量
              IF p_qty <= l_bmfg003 AND NOT cl_null(g_bmfb3_d[l_ac1].bmfg004) AND g_bmfb3_d[l_ac1].bmfg004 >= l_bmfg004 THEN
                 LET g_errno = 'abm-00025'
                 RETURN
              END IF
         WHEN '2'   #bmfg004
              #--当笔输入的范围，不能包含到其他笔的起止数量
              IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) AND g_bmfb3_d[l_ac1].bmfg003 <= l_bmfg003 AND p_qty >= l_bmfg004 THEN
                 LET g_errno = 'abm-00025'
                 RETURN
              END IF
              #当笔输入无穷大的，需检查当笔输入的起始数量，不可小于其他笔截止数量
              IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) AND cl_null(p_qty) AND g_bmfb3_d[l_ac1].bmfg003 <= l_bmfg004 THEN
                 LET g_errno = 'abm-00025'
                 RETURN
              END IF
              #当笔输入无穷大的，需检查其他笔没有无穷大的（不可出现两个无穷大的）
              IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) AND cl_null(p_qty) AND cl_null(l_bmfg004) THEN
                 LET g_errno = 'abm-00025'
                 RETURN
              END IF
      END CASE
   END FOREACH
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfc010" order="12" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#取替代單身單位檢查
PRIVATE FUNCTION abmt301_chk_bmfc010()
DEFINE l_imaa006               LIKE imaa_t.imaa006
DEFINE r_success               LIKE type_t.num5
DEFINE r_rate                  LIKE type_t.num26_10

     
    LET g_errno = ''  
    LET r_rate = ''
    LET l_imaa006 = '' 
    IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc005) THEN
       SELECT imaa006 INTO l_imaa006
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = g_bmfb4_d[l_ac1].bmfc005
        IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc010) AND NOT cl_null(l_imaa006) THEN
           CALL s_aimi190_get_convert(g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc010,l_imaa006) RETURNING r_success,r_rate
           IF NOT r_success THEN
              RETURN FALSE
           END IF           
        END IF
        IF cl_null(l_imaa006) THEN
           LET g_errno = 'abm-00021'
           RETURN FALSE
        END IF
    END IF
    RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.abmt301_bmfp_desc" order="13" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#多主件單身參考欄位顯示
PRIVATE FUNCTION abmt301_bmfp_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp_d[l_ac].bmfp002
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfp_d[l_ac].bmfp002_desc = '', g_rtn_fields[1] , ''
   LET g_bmfp_d[l_ac].bmfp002_desc1 = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_bmfp_d[l_ac].bmfp002_desc
   DISPLAY BY NAME g_bmfp_d[l_ac].bmfp002_desc1
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp_d[l_ac].bmfp004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '210' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfp_d[l_ac].bmfp004_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_bmfp_d[l_ac].bmfp004_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp_d[l_ac].bmfp005
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '210' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfp_d[l_ac].bmfp005_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_bmfp_d[l_ac].bmfp005_desc
END FUNCTION]]>
  </point>
  <point name="function.abmt301_bmfb_desc" order="14" ver="2" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#下階料件單身參考欄位顯示
PRIVATE FUNCTION abmt301_bmfb_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp2_d[l_ac].bmfb005
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfp2_d[l_ac].bmfb005_desc =  g_rtn_fields[1] 
   LET g_bmfp2_d[l_ac].bmfb005_desc1 =  g_rtn_fields[2] 
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb005_desc
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb005_desc1

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp2_d[l_ac].bmfb006
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfp2_d[l_ac].bmfb006_desc = g_rtn_fields[1] 
   LET g_bmfp2_d[l_ac].bmfb006_desc1 = g_rtn_fields[2] 
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb006_desc
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb006_desc1
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp2_d[l_ac].bmfb008
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '215' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfp2_d[l_ac].bmfb008_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb008_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp2_d[l_ac].bmfb009
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001 = '221' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmfp2_d[l_ac].bmfb009_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb009_desc
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmfp2_d[l_ac].bmfb015
   CALL ap_ref_array2(g_ref_fields,"SELECT bmze002 FROM bmze_t WHERE bmzeent='"||g_enterprise||"' AND bmze001 =? ","") RETURNING g_rtn_fields
   LET g_bmfp2_d[l_ac].bmfb015_desc =  g_rtn_fields[1]
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb015_desc
   
   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
      CALL s_aooi360_sel('7',g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002,'','','','','','','','','1') RETURNING l_success,g_bmfp2_d[l_ac].ooff013
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmaa" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#檢查主件料號+版本是否存在bmaa_t且為確認的資料
PRIVATE FUNCTION abmt301_chk_bmaa()
DEFINE l_stus       LIKE bmaa_t.bmaastus

   LET g_errno = ""
   IF cl_null(g_bmfp_d[l_ac].bmfp002) THEN RETURN END IF
   IF g_bmfp_d[l_ac].bmfp003 IS NULL THEN RETURN END IF
   
   LET l_stus = ""
   SELECT bmaastus INTO l_stus FROM bmaa_t
    WHERE bmaa001 = g_bmfp_d[l_ac].bmfp002
      AND bmaa002 = g_bmfp_d[l_ac].bmfp003
      AND bmaaent = g_enterprise
      AND bmaasite = g_site
   
   CASE
      WHEN SQLCA.sqlcode = 100  LET g_errno = 'aim-00126'
      WHEN l_stus <> 'Y'        LET g_errno = 'aim-00127'
      OTHERWISE                 LET g_errno = SQLCA.sqlcode USING '------'
   END CASE
END FUNCTION]]>
  </point>
  <point name="function.abmt301_def_bmfp" order="16" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#主件料號帶出舊生命週期和舊版本
PRIVATE FUNCTION abmt301_def_bmfp()
   SELECT imaa010,imaa002 INTO g_bmfp_d[l_ac].bmfp004,g_bmfp_d[l_ac].bmfp006
     FROM imaa_t
    WHERE imaa001 = g_bmfp_d[l_ac].bmfp002
      AND imaaent = g_enterprise
   DISPLAY BY NAME g_bmfp_d[l_ac].bmfp004
   DISPLAY BY NAME g_bmfp_d[l_ac].bmfp006
   CALL abmt301_bmfp_desc()
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfb005" order="17" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#元件料號邏輯檢查
PRIVATE FUNCTION abmt301_chk_bmfb005(p_bmfb005)
DEFINE p_bmfb005    LIKE bmfb_t.bmfb005
DEFINE l_n          LIKE type_t.num5     
DEFINE l_sql        STRING
DEFINE l_bmfp004    LIKE bmfp_t.bmfp004
DEFINE l_bmfp005    LIKE bmfp_t.bmfp005         
DEFINE l_oocq004    LIKE oocq_t.oocq004             
                                        
   LET g_errno = "" 
   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM bmfp_t
    WHERE bmfpent = g_enterprise  
      AND bmfpsite = g_site
      AND bmfpdocno = g_bmfa_m.bmfadocno
      AND bmfp002 = p_bmfb005  
   IF l_n > 0 THEN
      LET g_errno = 'abm-00008'                      
      RETURN    
   END IF    
   LET l_sql = "SELECT bmfp004,bmfp005 ",
               "  FROM bmfp_t ",
               " WHERE bmfpent = '",g_enterprise,"'",  
               "   AND bmfpsite = '",g_site,"'",
               "   AND bmfpdocno = '",g_bmfa_m.bmfadocno,"'"  
   DECLARE abmt301_sel_bmfp_pr CURSOR FROM l_sql
   FOREACH abmt301_sel_bmfp_pr INTO l_bmfp004,l_bmfp005                      
      IF NOT cl_null(l_bmfp005) THEN            
         SELECT oocq004 INTO l_oocq004                 
           FROM oocq_t                                 
          WHERE oocq001 = '210'                        
            AND oocq002 = l_bmfp005             
            AND oocqent = g_enterprise                 
            AND oocqstus = 'Y'                         
      ELSE                                             
         SELECT oocq004 INTO l_oocq004                 
           FROM oocq_t                                 
          WHERE oocq001 = '210'                        
            AND oocq002 = l_bmfp004            
            AND oocqent = g_enterprise                 
            AND oocqstus = 'Y'                         
      END IF                                           
      IF l_oocq004 = 'N' THEN                          
         LET l_n = 0                                   
         SELECT COUNT(*) INTO l_n                      
           FROM imaa_t                                 
          WHERE imaa001 =p_bmfb005      
            AND imaaent = g_enterprise                 
            AND imaastus = 'Y'                         
            AND imaa038 = 'Y'                          
         IF l_n > 0 THEN                               
            LET g_errno = 'abm-00010' 
            RETURN                                     
         END IF                                        
      END IF  
   END FOREACH
END FUNCTION]]>
  </point>
  <point name="function.abmt301_check_bmfb" order="18" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#元件料號+部位+作業+製程序唯一檢查
PRIVATE FUNCTION abmt301_check_bmfb(p_cmd,p_bmfb005,p_bmfb006,p_bmfb008,p_bmfb009,p_bmfb010)
DEFINE p_cmd             LIKE type_t.chr1
DEFINE p_bmfb005         LIKE bmfb_t.bmfb005
DEFINE p_bmfb006         LIKE bmfb_t.bmfb006
DEFINE p_bmfb008         LIKE bmfb_t.bmfb008
DEFINE p_bmfb009         LIKE bmfb_t.bmfb009
DEFINE p_bmfb010         LIKE bmfb_t.bmfb010
DEFINE l_n               LIKE type_t.num5
DEFINE l_sql             STRING
DEFINE l_sql1            STRING
   
   LET g_errno = ""
   IF cl_null(p_bmfb005) AND cl_null(p_bmfb006) THEN
      RETURN
   END IF
   IF cl_null(p_bmfb008) OR cl_null(p_bmfb009) OR cl_null(p_bmfb010) THEN
      RETURN
   END IF
   IF g_bmfp2_d[l_ac].bmfb003 = '3' OR g_bmfp2_d[l_ac].bmfb003 = '4' THEN
      RETURN
   END IF
   LET l_sql = " SELECT COUNT(*) FROM bmfb_t ",
               "  WHERE bmfbdocno = '",g_bmfa_m.bmfadocno,"'",
               "    AND bmfbsite = '",g_site,"'",
               "    AND bmfbent = '",g_enterprise,"'"
   LET l_sql1 = " SELECT COUNT(*) FROM bmba_t,bmfp_t ",
               "  WHERE bmbasite = bmfpsite ",
               "    AND bmbaent = bmfpent ",
               "    AND bmfpdocno = '",g_bmfa_m.bmfadocno,"'",
               "    AND bmbasite = '",g_site,"'",
               "    AND bmbaent = '",g_enterprise,"'",
               "    AND bmba001 = bmfp002 ",
               "    AND bmba002 = bmfp003 "
   IF g_bmfp2_d[l_ac].bmfb003 = '1' OR (g_bmfp2_d[l_ac].bmfb003 = '2' AND cl_null(p_bmfb006)) THEN
      LET l_sql = l_sql CLIPPED,
                  " AND ((bmfb005 = '",p_bmfb005,"' AND bmfb006 IS NULL) ",
                  "     OR (bmfb006 = '",p_bmfb005,"' AND bmfb006 IS NOT NULL)) "
   END IF
   IF g_bmfp2_d[l_ac].bmfb003 = '1' THEN
       LET l_sql1 = l_sql1 CLIPPED," AND bmba003 = '",p_bmfb005,"' "
   END IF
   IF g_bmfp2_d[l_ac].bmfb003 = '2' AND NOT cl_null(p_bmfb006) THEN
      LET l_sql = l_sql CLIPPED,
                  " AND ((bmfb005 = '",p_bmfb006,"' AND bmfb006 IS NULL) ",
                  "     OR (bmfb006 = '",p_bmfb006,"' AND bmfb006 IS NOT NULL)) "
      LET l_sql1 = l_sql1 CLIPPED," AND bmba003 = '",p_bmfb006,"' "
   END IF
   IF p_bmfb008 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND bmfb008 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND bmfb008 = '",p_bmfb008,"'"
      LET l_sql1 = l_sql1 CLIPPED, " AND bmba004 = '",p_bmfb008,"' "
   END IF
   IF p_bmfb009 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND bmfb009 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND bmfb009 = '",p_bmfb009,"'"
      LET l_sql1 = l_sql1 CLIPPED, " AND bmba007 = '",p_bmfb009,"' "
   END IF
   IF p_bmfb010 IS NULL THEN
      LET l_sql = l_sql CLIPPED," AND bmfb010 IS NULL "
   ELSE
      LET l_sql = l_sql CLIPPED," AND bmfb010 = '",p_bmfb010,"'"
      LET l_sql1 = l_sql1 CLIPPED, " AND bmba008 = '",p_bmfb010,"' "
   END IF
   IF p_cmd = 'u' THEN
      LET l_sql = l_sql CLIPPED," AND bmfb002 <> ",g_bmfp2_d[l_ac].bmfb002
   END IF
   LET l_n = 0
   PREPARE abmt301_sel_bmfb_pr FROM l_sql
   EXECUTE abmt301_sel_bmfb_pr INTO l_n
   IF l_n > 0 THEN
      LET g_errno = 'abm-00013'
      RETURN
   END IF
   LET l_n = 0
   PREPARE abmt301_sel_bmba_pr FROM l_sql1
   EXECUTE abmt301_sel_bmba_pr INTO l_n
   IF l_n > 0 THEN
      LET g_errno = 'abm-00013'
      RETURN
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfb005_1" order="19" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#元件料號邏輯檢查
PRIVATE FUNCTION abmt301_chk_bmfb005_1()
DEFINE l_n          LIKE type_t.num5     
DEFINE l_sql        STRING
DEFINE l_bmfp002    LIKE bmfp_t.bmfp002
DEFINE l_bmfp003    LIKE bmfp_t.bmfp003             
DEFINE g_show_msg      DYNAMIC ARRAY OF RECORD    #程式變數(Program Variables)
       e               LIKE gzze_t.gzze001,       #错误代码
       err             LIKE gzze_t.gzze003,       #错误信息
       bmfp002         LIKE bmfp_t.bmfp002,       #主件料號
       bmfp003         LIKE bmfp_t.bmfp003        #特性/版本
                       END RECORD
DEFINE l_msg           STRING
DEFINE l_msg2          STRING
DEFINE ls_gaq03        STRING
DEFINE g_i             LIKE type_t.num5     
DEFINE r_ret           LIKE type_t.num5
DEFINE l_date          DATETIME YEAR TO SECOND
                   
   LET l_date = g_bmfa_m.bmfa005                   
   LET r_ret = TRUE
   LET g_i = 1
   LET l_sql = "SELECT bmfp002,bmfp003 ",
               "  FROM bmfp_t ",
               " WHERE bmfpent = '",g_enterprise,"'",  
               "   AND bmfpsite = '",g_site,"'",
               "   AND bmfpdocno = '",g_bmfa_m.bmfadocno,"'"  
   DECLARE abmt301_sel_bmfp_pr2 CURSOR FROM l_sql
   FOREACH abmt301_sel_bmfp_pr2 INTO l_bmfp002,l_bmfp003                      
      LET l_n = 0
      SELECT COUNT(*) INTO l_n
        FROM bmba_t
       WHERE bmbaent = g_enterprise
         AND bmbasite = g_site
         AND bmba001 = l_bmfp002
         AND bmba002 = l_bmfp003 
         AND bmba003 = g_bmfp2_d[l_ac].bmfb005
         AND bmba005 <= l_date
         AND (bmba006 > l_date OR bmba006 IS NULL)
         AND bmba019 <> '2'
      IF l_n = 0 THEN
         LET r_ret = FALSE
         LET g_show_msg[g_i].e = "abm-000047"
         LET g_show_msg[g_i].err = cl_getmsg("abm-00047",g_lang)
         LET g_show_msg[g_i].bmfp002 = l_bmfp002
         LET g_show_msg[g_i].bmfp003 = l_bmfp003
         LET g_i = g_i + 1
      END IF
   END FOREACH 
   IF NOT r_ret THEN      
      LET ls_gaq03 = cl_getmsg("lib-00045",g_lang)
      LET l_msg2 = ls_gaq03 CLIPPED
      
      LET ls_gaq03 = cl_getmsg("lib-00046",g_lang)
      LET l_msg2 = ls_gaq03 CLIPPED,"|",ls_gaq03 CLIPPED
      
      LET ls_gaq03 = cl_get_feldname("bmfp002",g_dlang)
      LET l_msg2 = l_msg2.trim(),"|",ls_gaq03 CLIPPED
      
      LET ls_gaq03 = cl_get_feldname("bmfp003",g_dlang)
      LET l_msg2 = l_msg2.trim(),"|",ls_gaq03 CLIPPED
      
      LET l_msg = cl_getmsg("abm-00047",g_lang)
      CALL cl_show_array(base.TypeInfo.create(g_show_msg),l_msg,l_msg2)
   END IF
   RETURN r_ret
END FUNCTION]]>
  </point>
  <point name="function.abmt301_def_bmfb003" order="20" ver="13" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[#下階料單身欄位預設
PRIVATE FUNCTION abmt301_def_bmfb003()
   IF g_bmfp2_d[l_ac].bmfb003 = '1' THEN
#      IF cl_null(g_bmfp2_d[l_ac].bmfb007) THEN
#         LET g_bmfp2_d[l_ac].bmfb007 = '1'
#      END IF
      IF cl_null(g_bmfp2_d[l_ac].bmfb011) THEN
         LET g_bmfp2_d[l_ac].bmfb011 = 1
      END IF
      IF cl_null(g_bmfp2_d[l_ac].bmfb012) THEN
         LET g_bmfp2_d[l_ac].bmfb012 = 1
      END IF
      IF NOT cl_null(g_bmfp2_d[l_ac].bmfb005) THEN
         IF cl_null(g_bmfp2_d[l_ac].bmfb013) THEN
            SELECT imaa006 INTO g_bmfp2_d[l_ac].bmfb013
              FROM imaa_t
             WHERE imaaent = g_enterprise
               AND imaa001 = g_bmfp2_d[l_ac].bmfb005
         END IF   
      END IF
      IF cl_null(g_bmfp2_d[l_ac].bmfb016) THEN
         SELECT imae023 INTO g_bmfp2_d[l_ac].bmfb016
           FROM imae_t 
          WHERE imaeent = g_enterprise
            AND imaesite = g_site_t
            AND imae001 = g_bmfp2_d[l_ac].bmfb005            
         #LET g_bmfp2_d[l_ac].bmfb016 = '1'
      END IF
      IF cl_null(g_bmfp2_d[l_ac].bmfb017) THEN
         LET g_bmfp2_d[l_ac].bmfb017 = 'N'
      END IF
      IF cl_null(g_bmfp2_d[l_ac].bmfb018) THEN
          LET g_bmfp2_d[l_ac].bmfb018 = 'N'
      END IF
      IF cl_null(g_bmfp2_d[l_ac].bmfb019) THEN
         LET g_bmfp2_d[l_ac].bmfb019 = 'N'
      END IF
   ELSE
      LET g_bmfp2_d[l_ac].bmfb007 = ""
   END IF
   IF g_bmfp2_d[l_ac].bmfb003 = '2' THEN
      LET g_bmfp2_d[l_ac].bmfb016 = ""
      LET g_bmfp2_d[l_ac].bmfb017 = ""
      LET g_bmfp2_d[l_ac].bmfb018 = ""
      LET g_bmfp2_d[l_ac].bmfb019 = ""
      LET g_bmfp2_d[l_ac].bmfb020 = ""
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_set_no_required_b" order="21" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#單身欄位必輸關閉設定
PRIVATE FUNCTION abmt301_set_no_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1 

   CALL cl_set_comp_required("bmfb011",FALSE)
   CALL cl_set_comp_required("bmfb012",FALSE)
   CALL cl_set_comp_required("bmfb013",FALSE)
   CALL cl_set_comp_required("bmfb014",FALSE)
   CALL cl_set_comp_required("bmfb015",FALSE)
   CALL cl_set_comp_required("bmfb016",FALSE)
   CALL cl_set_comp_required("bmfb017",FALSE)
   CALL cl_set_comp_required("bmfb018",FALSE)
   CALL cl_set_comp_required("bmfb019",FALSE)
END FUNCTION]]>
  </point>
  <point name="function.abmt301_set_required_b" order="22" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#單身欄位必輸設定
PRIVATE FUNCTION abmt301_set_required_b(p_cmd)
DEFINE p_cmd   LIKE type_t.chr1 

   IF g_bmfp2_d[l_ac].bmfb003 = '1' THEN
      CALL cl_set_comp_required("bmfb011",TRUE)
      CALL cl_set_comp_required("bmfb012",TRUE)
      CALL cl_set_comp_required("bmfb013",TRUE)
      CALL cl_set_comp_required("bmfb014",TRUE)
      CALL cl_set_comp_required("bmfb016",TRUE)
      CALL cl_set_comp_required("bmfb017",TRUE)
      CALL cl_set_comp_required("bmfb018",TRUE)
      CALL cl_set_comp_required("bmfb019",TRUE)
   END IF
   IF g_bmfp2_d[l_ac].bmfb014 = 'Y' THEN
      CALL cl_set_comp_required("bmfb015",TRUE)
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmt301_def_bmfb020" order="23" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#插件位置賦值
PRIVATE FUNCTION abmt301_def_bmfb020()
DEFINE l_n            LIKE type_t.num5

   LET l_n = 0
   SELECT COUNT(*) INTO l_n
     FROM bmfh_t
    WHERE bmfhsite = g_site
      AND bmfhent = g_enterprise
      AND bmfhdocno = g_bmfa_m.bmfadocno
      AND bmfh002 = g_bmfp2_d[l_ac].bmfb002
   IF l_n > 0 THEN
      LET g_bmfp2_d[l_ac].bmfb020 = 'Y'
   ELSE
      LET g_bmfp2_d[l_ac].bmfb020 = 'N'
   END IF 
   DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb020
END FUNCTION]]>
  </point>
  <point name="function.abmt301_set_required_bmfc" order="24" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#bmfc_t欄位必錄設置
PRIVATE FUNCTION abmt301_set_required_bmfc()
  
  IF g_bmfb4_d[l_ac].bmfc004 = '1' OR g_bmfb4_d[l_ac].bmfc004 = '4' THEN
      CALL cl_set_comp_required("bmfc006",TRUE)
      CALL cl_set_comp_required("bmfc008",TRUE)
      CALL cl_set_comp_required("bmfc009",TRUE)
      CALL cl_set_comp_required("bmfc010",TRUE)
   END IF
   IF g_bmfb4_d[l_ac].bmfc004 = '1' THEN
      CALL cl_set_comp_required("bmfc011",TRUE)
      CALL cl_set_comp_required("bmfc012",TRUE)
      CALL cl_set_comp_required("bmfc013",TRUE)
      CALL cl_set_comp_required("bmfc014",TRUE)
   END IF
   
END FUNCTION]]>
  </point>
  <point name="function.abmt301_set_no_required_bmfc" order="25" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#bmfc_t欄位非必錄設置
PRIVATE FUNCTION abmt301_set_no_required_bmfc()
   CALL cl_set_comp_required("bmfc006",FALSE) 
   CALL cl_set_comp_required("bmfc008",FALSE) 
   CALL cl_set_comp_required("bmfc009",FALSE)
   CALL cl_set_comp_required("bmfc010",FALSE)  
   CALL cl_set_comp_required("bmfc011",FALSE)    
   CALL cl_set_comp_required("bmfc012",FALSE) 
   CALL cl_set_comp_required("bmfc013",FALSE) 
   CALL cl_set_comp_required("bmfc014",FALSE)
   
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfb013" order="26" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#用量單位檢查
PRIVATE FUNCTION abmt301_chk_bmfb013()
DEFINE l_imaa006               LIKE imaa_t.imaa006
DEFINE r_success               LIKE type_t.num5
DEFINE r_rate                  LIKE type_t.num26_10

     
    LET g_errno = ''  
    LET r_rate = ''
    LET l_imaa006 = '' 
    IF NOT cl_null(g_bmfp2_d[l_ac].bmfb006) THEN
       SELECT imaa006 INTO l_imaa006
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = g_bmfp2_d[l_ac].bmfb006
        IF NOT cl_null(g_bmfp2_d[l_ac].bmfb013) AND NOT cl_null(l_imaa006) THEN
           CALL s_aimi190_get_convert(g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb013,l_imaa006) RETURNING r_success,r_rate 
           IF NOT r_success THEN
              RETURN FALSE
           END IF
        END IF
        IF cl_null(l_imaa006) THEN
           LET g_errno = 'abm-00021'
           RETURN FALSE
        END IF
    ELSE
       SELECT imaa006 INTO l_imaa006
         FROM imaa_t
        WHERE imaaent = g_enterprise
          AND imaa001 = g_bmfp2_d[l_ac].bmfb005
        IF NOT cl_null(g_bmfp2_d[l_ac].bmfb013) AND NOT cl_null(l_imaa006) THEN
           CALL s_aimi190_get_convert(g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb013,l_imaa006) RETURNING r_success,r_rate 
           IF NOT r_success THEN
              RETURN FALSE
           END IF
        END IF
        IF cl_null(l_imaa006) THEN
           LET g_errno = 'abm-00021'
           RETURN FALSE
        END IF
    END IF
    RETURN TRUE
END FUNCTION]]>
  </point>
  <point name="function.abmt301_chk_bmfc005_bmfc004" order="27" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[################################################################################
# Descriptions...: 取替代料检查
# Memo...........:
# Usage..........: CALL abmt301_chk_bmfc005_bmfc004()
# Input parameter: 无
# Return code....: 无
# Date & Author..: 2014/02/11 By xumm
# Modify.........:
################################################################################
PRIVATE FUNCTION abmt301_chk_bmfc005_bmfc004()
DEFINE  l_num           LIKE type_t.num5
DEFINE  l_n             LIKE type_t.num5
DEFINE  l_sql1          STRING

   LET g_errno = ''
   LET l_num = 0
   SELECT COUNT(*) INTO l_num
     FROM bmfp_t
    WHERE bmfpent = g_enterprise
      AND bmfpsite = g_site
      AND bmfpdocno = g_bmfa_m.bmfadocno
   LET l_sql1 = " SELECT bmfp002, bmfp003 FROM bmfp_t WHERE bmfpent = '",g_enterprise,"' AND bmfpsite = '",g_site,"' AND bmfpdocno = '",g_bmfa_m.bmfadocno,"') ",
                " AND bmea003 = '",g_bmfp2_d[l_ac].bmfb005,"' "
   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb008) THEN
      LET l_sql1 = l_sql1 CLIPPED," AND bmea004 = '",g_bmfp2_d[l_ac].bmfb008,"'"
   END IF
   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb009) THEN
      LET l_sql1 = l_sql1 CLIPPED," AND bmea005 = '",g_bmfp2_d[l_ac].bmfb009,"'"
   END IF
   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb010) THEN
      LET l_sql1 = l_sql1 CLIPPED," AND bmea006 = '",g_bmfp2_d[l_ac].bmfb010,"'"
   END IF
   LET l_sql1 = " SELECT COUNT(*) FROM bmea_t WHERE bmeaent = '",g_enterprise,"' AND bmeasite = '",g_site,"'  AND bmea008 = '",g_bmfb4_d[l_ac1].bmfc005,"' AND bmea008 IN (SELECT bmea008 FROM (SELECT DISTINCT bmea008,COUNT(*) FROM bmea_t WHERE bmeaent = '",g_enterprise,"' AND bmeasite = '",g_site,"' ",
                " AND (bmea001, bmea002) IN (",l_sql1 CLIPPED," AND bmea007 = '2' GROUP BY bmea008 HAVING COUNT(*) >= '",l_num,"'))"
   LET l_n = 0
   PREPARE abmt301_sel_bmea008_pr FROM l_sql1
   EXECUTE abmt301_sel_bmea008_pr INTO l_n    
   IF l_n = 0 THEN
      LET g_errno = 'abm-00093'
   END IF
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL abmt301_bmfp_desc()]]>
  </point>
  <point name="b_fill.sql2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[     ]]>
  </point>
  <point name="b_fill2.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CALL abmt301_bmfb_desc()]]>
  </point>
  <point name="browser_fill.after" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL abmt301_fetch("")]]>
  </point>
  <point name="browser_fill.before_count" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_wc3 <> " 1=1" THEN
      #联动的单身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE bmfadocno ",
                      "   FROM bmfa_t ",
                      "   LEFT JOIN bmfp_t ON bmfpent = bmfaent AND bmfpsite = bmfasite AND bmfadocno = bmfpdocno ",
                      "   LEFT JOIN bmfb_t ON bmfbent = bmfaent AND bmfbsite = bmfasite AND bmfadocno = bmfbdocno",
                      "   LEFT JOIN bmfg_t ON bmfgent = bmfbent AND bmfgsite = bmfbsite AND bmfgdocno = bmfbdocno AND bmfg002 = bmfb002 ",
                      "   LEFT JOIN bmfc_t ON bmfcent = bmfbent AND bmfcsite = bmfbsite AND bmfcdocno = bmfbdocno AND bmfc002 = bmfb002 ",
                      "  WHERE bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, " AND ", l_wc3
 
   ELSE
      IF g_wc2 <> " 1=1" THEN
         #單身有輸入搜尋條件
         LET l_sub_sql = " SELECT UNIQUE bmfadocno ",
                         "   FROM bmfa_t ",
                         "   LEFT JOIN bmfp_t ON bmfpent = bmfaent AND bmfpsite = bmfasite AND bmfadocno = bmfpdocno ",
                         "   LEFT JOIN bmfb_t ON bmfbent = bmfaent AND bmfbsite = bmfasite AND bmfadocno = bmfbdocno",
                         "  WHERE bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2
      ELSE
         LET l_sub_sql = " SELECT UNIQUE bmfadocno ",
                         "   FROM bmfa_t ",
                         "  WHERE bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND ",l_wc CLIPPED  
      END IF
   END IF
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"    ]]>
  </point>
  <point name="browser_fill.before_foreach" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_bmfb3_d.clear()
   CALL g_bmfb4_d.clear()
   IF cl_null(g_wc3) THEN
      LET g_wc3 = " 1=1"
   END IF   
   LET l_wc3 = g_wc3.trim() ]]>
  </point>
  <point name="browser_fill.before_prepare" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_wc3 <> " 1=1" THEN
      #联动的单身有輸入搜尋條件                      
      LET l_sql_rank = " SELECT DISTINCT bmfastus,bmfadocno,bmfadocdt,bmfa005,bmfa006,'',bmfa007,'',bmfa008,'',DENSE_RANK() OVER(ORDER BY bmfadocno ",g_order,") AS RANK ",
                      "   FROM bmfa_t ",
                      "   LEFT JOIN bmfp_t ON bmfpent = bmfaent AND bmfpsite = bmfasite AND bmfadocno = bmfpdocno",
                      "   LEFT JOIN bmfb_t ON bmfbent = bmfaent AND bmfbsite = bmfasite AND bmfadocno = bmfbdocno",
                      "   LEFT JOIN bmfg_t ON bmfgent = bmfbent AND bmfgsite = bmfbsite AND bmfgdocno = bmfbdocno AND bmfg002 = bmfb002 ",
                      "   LEFT JOIN bmfc_t ON bmfcent = bmfbent AND bmfcsite = bmfbsite AND bmfcdocno = bmfbdocno AND bmfc002 = bmfb002 ",
                      " WHERE t0.bmfaent = '" ||g_enterprise|| "' AND t0.bmfasite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2," AND ",l_wc3, cl_sql_add_filter("bmfa_t"),
                      " ORDER BY bmfadocno ",g_order   
   END IF]]>
  </point>
  <point name="browser_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_wc3             STRING]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL abmt301_browser_desc() ]]>
  </point>
  <point name="construct.a.bmfa005" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)]]>
  </point>
  <point name="construct.c.bmfa006" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfa006  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO oofa011 #全名 

            NEXT FIELD bmfa006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfa007" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfa007  #顯示到畫面上

            NEXT FIELD bmfa007                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfa008" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            IF g_prog='abmt311' THEN
               LET g_qryparam.where = " bmkasite ='",g_site,"'"
            END IF
            CALL q_bmkadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfa008  #顯示到畫面上
            NEXT FIELD bmfa008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.bmfacrtdp" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfacrtdp  #顯示到畫面上

            NEXT FIELD bmfacrtdp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfacrtid" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfacrtid  #顯示到畫面上

            NEXT FIELD bmfacrtid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfadocno" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmfa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfadocno  #顯示到畫面上

            NEXT FIELD bmfadocno                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfamodid" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfamodid  #顯示到畫面上

            NEXT FIELD bmfamodid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfaowndp" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfaowndp  #顯示到畫面上

            NEXT FIELD bmfaowndp                     #返回原欄位

]]>
  </point>
  <point name="construct.c.bmfaownid" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfaownid  #顯示到畫面上

            NEXT FIELD bmfaownid                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmfp002" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfp002  #顯示到畫面上
               #DISPLAY g_qryparam.return2 TO bmaa002 #配方版本 

            NEXT FIELD bmfp002                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmfp003" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmaa002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfp003  #顯示到畫面上
            

            NEXT FIELD bmfp003                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmfp004" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "210"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfp004  #顯示到畫面上

            NEXT FIELD bmfp004                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page1.bmfp005" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "210"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfp005  #顯示到畫面上

            NEXT FIELD bmfp005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.bmfb005" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb005  #顯示到畫面上

            NEXT FIELD bmfb005                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.bmfb006" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb006  #顯示到畫面上

            NEXT FIELD bmfb006                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.bmfb008" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "215"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb008  #顯示到畫面上

            NEXT FIELD bmfb008                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.bmfb009" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = "221"
            CALL q_oocq002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb009  #顯示到畫面上

            NEXT FIELD bmfb009                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.bmfb013" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb013  #顯示到畫面上

            NEXT FIELD bmfb013                     #返回原欄位

]]>
  </point>
  <point name="construct.c.page2.bmfb015" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmze001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfb015  #顯示到畫面上

            NEXT FIELD bmfb015                     #返回原欄位

]]>
  </point>
  <point name="cs.add_cs" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CONSTRUCT g_wc_table3 ON bmfg003,bmfg004,bmfg005,bmfg006
           FROM s_detail3[1].bmfg003,s_detail3[1].bmfg004,s_detail3[1].bmfg005,s_detail3[1].bmfg006
                      
         BEFORE CONSTRUCT
            #CALL cl_qbe_display_condition(lc_qbe_sn)

      END CONSTRUCT
      
      #zhangllc add 141020 bmfc015
      CONSTRUCT g_wc_table4 ON bmfc003,bmfc004,bmfc005,bmfc015,bmfc006,bmfc007,bmfc008,bmfc009,bmfc010,bmfc011,bmfc012,bmfc013,bmfc014
           FROM s_detail4[1].bmfc003,s_detail4[1].bmfc004,s_detail4[1].bmfc005,s_detail4[1].bmfc015,s_detail4[1].bmfc006,
                s_detail4[1].bmfc007,s_detail4[1].bmfc008,s_detail4[1].bmfc009,s_detail4[1].bmfc010,
                s_detail4[1].bmfc011,s_detail4[1].bmfc012,s_detail4[1].bmfc013,s_detail4[1].bmfc014                
         BEFORE CONSTRUCT
           # CALL cl_qbe_display_condition(lc_qbe_sn)

         ON ACTION controlp INFIELD bmfc005
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_imaf001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfc005        #顯示到畫面上
            NEXT FIELD bmfc005
            
         ON ACTION controlp INFIELD bmfc015
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_bmfc015()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfc015        #顯示到畫面上
            NEXT FIELD bmfc015
            
         ON ACTION controlp INFIELD bmfc010
            
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO bmfc010        #顯示到畫面上

            NEXT FIELD bmfc010
      END CONSTRUCT]]>
  </point>
  <point name="cs.after_construct" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_wc3 = g_wc_table3
   IF g_wc_table3 <> " 1=1" THEN
      LET g_wc3 = g_wc3 ," AND ", g_wc_table3
   END IF
   IF g_wc_table4 <> " 1=1" THEN
      LET g_wc3 = g_wc3 ," AND ", g_wc_table4
   END IF
   LET g_wc = g_wc," AND bmfa003 IS NULL "]]>
  </point>
  <point name="cs.before_construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL g_bmfb3_d.clear()
   CALL g_bmfb4_d.clear()
   INITIALIZE g_wc3 TO NULL
   INITIALIZE g_wc_table3 TO NULL
   INITIALIZE g_wc_table4 TO NULL]]>
  </point>
  <point name="default_search.after" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT cl_null(g_argv[1]) THEN
      LET g_wc = g_wc," AND bmfasite = '", g_argv[1], "' "
   ELSE
      LET g_wc = " AND 1=1"
   END IF
   LET g_wc = g_wc," AND bmfa003 IS NOT NULL "
   IF NOT cl_null(g_argv[02]) THEN
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
   END IF]]>
  </point>
  <point name="default_search.after_sql" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET ls_wc = ''
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " bmfadocno = '", g_argv[02], "' AND "
   END IF]]>
  </point>
  <point name="delete.body.a_delete2" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      DELETE FROM bmfc_t
       WHERE bmfcent = g_enterprise 
         AND bmfcsite = g_site
         AND bmfcdocno = g_bmfa_m.bmfadocno

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmfc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      DELETE FROM bmfg_t
       WHERE bmfgent = g_enterprise 
         AND bmfgsite = g_site 
         AND bmfgdocno = g_bmfa_m.bmfadocno

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmfc_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      ]]>
  </point>
  <point name="delete.head.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      IF NOT s_aooi200_del_docno(g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt) THEN CALL s_transaction_end('N','0') RETURN END IF]]>
  </point>
  <point name="fetch.action_control" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#   IF g_bmfa_m.bmfastus = 'Y' OR  g_bmfa_m.bmfastus = 'W' OR  g_bmfa_m.bmfastus = 'X' THEN
#      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
#   ELSE
#      CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)
#   END IF
   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   IF g_bmfa_m.bmfastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   
   IF g_bmfa_m.bmfastus <> 'N' THEN
      CALL cl_set_act_visible("batch", FALSE)
   ELSE
      CALL cl_set_act_visible("batch", TRUE)
   END IF]]>
  </point>
  <point name="global.variable" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[ TYPE type_g_bmfb3_d RECORD
       bmfg003 LIKE bmfg_t.bmfg003, 
       bmfg004 LIKE bmfg_t.bmfg004,
       bmfg005 LIKE bmfg_t.bmfg005, 
       bmfg006 LIKE bmfg_t.bmfg006
       END RECORD
       
 TYPE type_g_bmfb4_d RECORD
       bmfc003 LIKE bmfc_t.bmfc003, 
       bmfc004 LIKE bmfc_t.bmfc004,
       bmfc005 LIKE bmfc_t.bmfc005,
       bmfc005_desc  LIKE type_t.chr80,
       bmfc005_desc1 LIKE type_t.chr80,
       #zhangllc add 141020
       bmfc015 LIKE bmfc_t.bmfc015,
       bmfc015_desc  LIKE type_t.chr80,
       #zhangllc add 141020
       bmfc006 LIKE bmfc_t.bmfc006,
       bmfc007 LIKE bmfc_t.bmfc007, 
       bmfc008 LIKE bmfc_t.bmfc008,
       bmfc009 LIKE bmfc_t.bmfc009, 
       bmfc010 LIKE bmfc_t.bmfc010,
       bmfc011 LIKE bmfc_t.bmfc011, 
       bmfc012 LIKE bmfc_t.bmfc012,
       bmfc013 LIKE bmfc_t.bmfc013, 
       bmfc014 LIKE bmfc_t.bmfc014
       END RECORD    

DEFINE g_bmfb3_d   DYNAMIC ARRAY OF type_g_bmfb3_d
DEFINE g_bmfb3_d_t type_g_bmfb3_d
DEFINE g_bmfb4_d   DYNAMIC ARRAY OF type_g_bmfb4_d
DEFINE g_bmfb4_d_t type_g_bmfb4_d
DEFINE g_bmfb4_d_o type_g_bmfb4_d  #add 141020 zhangllc

DEFINE g_wc_table3           STRING                        #第5個單身table所使用的g_wc
DEFINE g_wc_table4           STRING                        #第6個單身table所使用的g_wc

DEFINE l_ac1                 LIKE type_t.num5
DEFINE g_rec_b1              LIKE type_t.num5 

DEFINE l_success             LIKE type_t.num5
DEFINE l_arg1                LIKE ooef_t.ooef004

DEFINE g_flag                LIKE type_t.chr1              #是否在下階料單身
DEFINE g_flag1               LIKE type_t.chr1              #是否在取替代單身

DEFINE g_wc3                 STRING                        #聯動單身的條件 
DEFINE g_site_t              LIKE bmfa_t.bmfasite]]>
  </point>
  <point name="idx_chk.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_bmfb3_d.getLength() THEN
         LET g_detail_idx = g_bmfb3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmfb3_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmfb3_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_bmfb4_d.getLength() THEN
         LET g_detail_idx = g_bmfb4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmfb4_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmfb4_d.getLength() TO FORMONLY.cnt
   END IF
]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('bmfc004','1110') 
   CALL cl_set_combo_scc('bmfc013','1105')
   LET g_flag = 'N'
   LET g_flag1 = 'N']]>
  </point>
  <point name="input.a.bmfa008" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmfa_m.bmfa008) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmfa_m.bmfa008
               #呼叫檢查存在並帶值的library
               IF g_prog='abmt311' THEN 
                  IF cl_chk_exist("v_bmkadocno_01") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmfa_m.bmfa008 = g_bmfa_m_t.bmfa008
                     NEXT FIELD CURRENT
                  END IF
               ELSE
                  IF cl_chk_exist("v_bmkadocno") THEN
                     #檢查成功時後續處理
                     #LET  = g_chkparam.return1
                     #DISPLAY BY NAME 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_bmfa_m.bmfa008 = g_bmfa_m_t.bmfa008
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 

]]>
  </point>
  <point name="input.a.bmfacrtdp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfacrtdp_desc
]]>
  </point>
  <point name="input.a.bmfacrtid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfacrtid_desc
]]>
  </point>
  <point name="input.a.bmfadocdt" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.a.bmfadocno" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF NOT cl_null(g_bmfa_m.bmfadocno) THEN
               LET l_ooef004 = ""
               SELECT ooef004 INTO l_ooef004
                 FROM ooef_t
                WHERE ooef001 = g_site_t
                  AND ooefent = g_enterprise
               CALL s_aooi200_chk_docno(g_site_t,g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_prog) RETURNING l_success
               IF NOT l_success THEN
                  LET g_bmfa_m.bmfadocno = g_bmfadocno_t
                  NEXT FIELD bmfadocno
               END IF
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND ( p_cmd = 'u' AND (g_bmfa_m.bmfadocno != g_bmfadocno_t ))) THEN 
                  IF NOT ap_chk_notDup(g_bmfa_m.bmfadocno,"SELECT COUNT(*) FROM bmfa_t WHERE "||"bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND "||"bmfadocno = '"||g_bmfa_m.bmfadocno ||"'",'std-00004',0) THEN 
                     LET g_bmfa_m.bmfadocno = g_bmfadocno_t
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.bmfamodid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfamodid_desc
]]>
  </point>
  <point name="input.a.bmfaowndp" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfaowndp_desc
]]>
  </point>
  <point name="input.a.bmfaownid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfaownid_desc
]]>
  </point>
  <point name="input.a.ooff013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmfa_m.ooff013) THEN
               CALL s_aooi360_gen('6',g_bmfa_m.bmfadocno,'','','','','','','','','','1',g_bmfa_m.ooff013) RETURNING l_success
               IF NOT l_success THEN
                  NEXT FIELD ooff013
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.bmfp002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            CALL abmt301_bmfp_desc()
            IF  NOT cl_null(g_bmfa_m.bmfadocno) AND NOT cl_null(g_bmfp_d[l_ac].bmfp002) AND NOT cl_null(g_bmfp_d[l_ac].bmfp003) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmfa_m.bmfadocno != g_bmfadocno_t OR g_bmfp_d[l_ac].bmfp002 != g_bmfp_d_t.bmfp002 OR g_bmfp_d[l_ac].bmfp003 != g_bmfp_d_t.bmfp003))) THEN 
                  IF NOT ap_chk_notDup(g_bmfp_d[l_ac].bmfp002,"SELECT COUNT(*) FROM bmfp_t WHERE "||"bmfpent = '" ||g_enterprise|| "' AND bmfpsite = '" ||g_site|| "' AND "||"bmfpdocno = '"||g_bmfa_m.bmfadocno ||"' AND "|| "bmfp002 = '"||g_bmfp_d[l_ac].bmfp002 ||"' AND "|| "bmfp003 = '"||g_bmfp_d[l_ac].bmfp003 ||"'",'std-00004',0) THEN 
                     LET g_bmfp_d[l_ac].bmfp002 = g_bmfp_d_t.bmfp002
                     CALL abmt301_bmfp_desc()
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT cl_null(g_bmfp_d[l_ac].bmfp002) THEN
               CALL abmt301_chk_bmaa()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bmfp_d[l_ac].bmfp002
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmfp_d[l_ac].bmfp002 = g_bmfp_d_t.bmfp002
                  CALL abmt301_bmfp_desc()
                  NEXT FIELD CURRENT
               END IF
            END IF
            IF NOT cl_null(g_bmfp_d[l_ac].bmfp002) THEN
               CALL abmt301_def_bmfp()
            END IF]]>
  </point>
  <point name="input.a.page1.bmfp003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF cl_null(g_bmfp_d[l_ac].bmfp003) THEN
               LET g_bmfp_d[l_ac].bmfp003 = " "
            END IF
            IF NOT cl_null(g_bmfa_m.bmfadocno) AND NOT cl_null(g_bmfp_d[l_ac].bmfp002) AND g_bmfp_d[l_ac].bmfp003 IS NOT NULL  THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmfa_m.bmfadocno != g_bmfadocno_t OR g_bmfp_d[l_ac].bmfp002 != g_bmfp_d_t.bmfp002 OR g_bmfp_d[l_ac].bmfp003 != g_bmfp_d_t.bmfp003))) THEN 
                  IF NOT ap_chk_notDup(g_bmfp_d[l_ac].bmfp003,"SELECT COUNT(*) FROM bmfp_t WHERE "||"bmfpent = '" ||g_enterprise|| "' AND bmfpsite = '" ||g_site|| "' AND "||"bmfpdocno = '"||g_bmfa_m.bmfadocno ||"' AND "|| "bmfp002 = '"||g_bmfp_d[l_ac].bmfp002 ||"' AND "|| "bmfp003 = '"||g_bmfp_d[l_ac].bmfp003 ||"'",'std-00004',0) THEN
                     LET g_bmfp_d[l_ac].bmfp003 = g_bmfp_d_t.bmfp003                  
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            CALL abmt301_chk_bmaa()
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = g_bmfp_d[l_ac].bmfp003
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bmfp_d[l_ac].bmfp003 = g_bmfp_d_t.bmfp003
               IF cl_null(g_bmfp_d[l_ac].bmfp003) THEN
                  NEXT FIELD bmfp002
               ELSE
                  NEXT FIELD CURRENT
               END IF
            END IF
            ]]>
  </point>
  <point name="input.a.page2.bmfb002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_bmfa_m.bmfadocno) AND NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( l_cmd = 'u' AND (g_bmfa_m.bmfadocno != g_bmfadocno_t OR g_bmfp2_d[l_ac].bmfb002 != g_bmfp2_d_t.bmfb002))) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmfb_t WHERE "||"bmfbent = '" ||g_enterprise|| "' AND bmfbsite = '" ||g_site|| "' AND "||"bmfbdocno = '"||g_bmfa_m.bmfadocno ||"' AND "|| "bmfb002 = '"||g_bmfp2_d[l_ac].bmfb002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.bmfb003" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' THEN
               CALL abmt301_def_bmfb003()
            END IF
            IF g_bmfp2_d[l_ac].bmfb003 = '1' AND cl_null(g_bmfp2_d[l_ac].bmfb014) THEN
               LET g_bmfp2_d[l_ac].bmfb014 = 'N'
            END IF
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb005) THEN
               IF g_bmfp2_d[l_ac].bmfb003 = '1' THEN
                  CALL abmt301_chk_bmfb005(g_bmfp2_d[l_ac].bmfb005)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfp2_d[l_ac].bmfb003 = g_bmfp2_d_t.bmfb003
                     NEXT FIELD bmfb003
                  END IF
               END IF
               IF g_bmfp2_d[l_ac].bmfb003 = '2' OR g_bmfp2_d[l_ac].bmfb003 = '3' THEN
                  CALL abmt301_chk_bmfb005_1() RETURNING l_ret
                  IF NOT l_ret THEN
                     LET g_bmfp2_d[l_ac].bmfb003 = g_bmfp2_d_t.bmfb003
                     NEXT FIELD bmfb003
                  END IF
               END IF
               #檢查料件生命週期對應的營運據點是否可以ECN
               IF g_prog = 'abmt311' THEN 
                  SELECT oocq008 INTO l_oocq008
                    FROM imaa_t,oocq_t
                   WHERE imaaent = oocqent
                     AND imaa010 = oocq002
                     AND imaa001 = g_bmfp2_d[l_ac].bmfb005
                     AND oocq001 = '210'
                  IF l_oocq008 = 'N' THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00209'
                     LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfp2_d[l_ac].bmfb003 = g_bmfp2_d_t.bmfb003
                     NEXT FIELD bmfb003
                  END IF
               END IF               
            END IF 
            CALL abmt301_set_entry_b(l_cmd)
            CALL abmt301_set_no_required_b(l_cmd)
            CALL abmt301_set_required_b(l_cmd)
            CALL abmt301_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page2.bmfb005" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_bmfb_desc()
            IF l_cmd = 'a' THEN
               CALL abmt301_def_bmfb003()
            END IF
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb005) THEN
               IF g_bmfp2_d[l_ac].bmfb003 = '1' THEN
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL

                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_bmfp2_d[l_ac].bmfb005

                  #呼叫檢查存在並帶值的library
                  IF NOT cl_chk_exist("v_imaf001_1") THEN
                     LET g_bmfp2_d[l_ac].bmfb005 = g_bmfp2_d_t.bmfb005
                     CALL abmt301_bmfb_desc()
                     NEXT FIELD bmfb005
                  END IF
                  CALL abmt301_chk_bmfb005(g_bmfp2_d[l_ac].bmfb005)
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfp2_d[l_ac].bmfb005 = g_bmfp2_d_t.bmfb005
                     CALL abmt301_bmfb_desc()
                     NEXT FIELD bmfb005
                  END IF
               END IF
               IF g_bmfp2_d[l_ac].bmfb003 = '2' OR g_bmfp2_d[l_ac].bmfb003 = '3' OR g_bmfp2_d[l_ac].bmfb003 = '4' THEN
                  IF g_prog = 'abmt311' THEN    
                     IF NOT ap_chk_isExist(g_bmfp2_d[l_ac].bmfb005,"SELECT COUNT(*) FROM imaa_t WHERE imaaent = '" ||g_enterprise||"' AND imaa001 = ? AND imaa043 = 'Y' ","abm-00119",1 ) THEN
                        LET g_bmfp2_d[l_ac].bmfb005 = g_bmfp2_d_t.bmfb005
                        NEXT FIELD bmfb005
                     END IF 
                  END IF                  
                  CALL abmt301_chk_bmfb005_1() RETURNING l_ret
                  IF NOT l_ret THEN
                     LET g_bmfp2_d[l_ac].bmfb005 = g_bmfp2_d_t.bmfb005
                     CALL abmt301_bmfb_desc()
                     NEXT FIELD bmfb005
                  END IF
               END IF
               #檢查料件生命週期對應的營運據點是否可以ECN
               IF g_prog = 'abmt311' THEN 
                  SELECT oocq008 INTO l_oocq008
                    FROM imaa_t,oocq_t
                   WHERE imaaent = oocqent
                     AND imaa010 = oocq002
                     AND imaa001 = g_bmfp2_d[l_ac].bmfb005
                     AND oocq001 = '210'
                  IF l_oocq008 = 'N' THEN 
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00209'
                     LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfp2_d[l_ac].bmfb005 = g_bmfp2_d_t.bmfb005
                     NEXT FIELD bmfb005
                  END IF
               END IF
               
               IF NOT cl_null(g_bmfp2_d[l_ac].bmfb013) AND cl_null(g_bmfp2_d[l_ac].bmfb006) THEN
                  IF NOT abmt301_chk_bmfb013() THEN
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb013
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                     END IF
                     LET g_bmfp2_d[l_ac].bmfb005 = g_bmfp2_d_t.bmfb005
                     CALL abmt301_bmfb_desc()
                     NEXT FIELD bmfb005
                  END IF
               END IF
            END IF 
       
            
]]>
  </point>
  <point name="input.a.page2.bmfb006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_bmfb_desc()
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb006) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmfp2_d[l_ac].bmfb006

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_imaf001_1") THEN
                  LET g_bmfp2_d[l_ac].bmfb006 = g_bmfp2_d_t.bmfb006
                  CALL abmt301_bmfb_desc()
                  NEXT FIELD bmfb006
               END IF
               IF NOT cl_null(g_bmfp2_d[l_ac].bmfb005) THEN
                  IF g_bmfp2_d[l_ac].bmfb006 = g_bmfp2_d[l_ac].bmfb005 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00009'
                     LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb006
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfp2_d[l_ac].bmfb006 = g_bmfp2_d_t.bmfb006
                     CALL abmt301_bmfb_desc()
                     NEXT FIELD bmfb006
                  END IF
               END IF
               CALL abmt301_chk_bmfb005(g_bmfp2_d[l_ac].bmfb006)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmfp2_d[l_ac].bmfb006 = g_bmfp2_d_t.bmfb006
                  CALL abmt301_bmfb_desc()
                  NEXT FIELD bmfb006
               END IF
               IF NOT cl_null(g_bmfp2_d[l_ac].bmfb013) THEN
                  IF NOT abmt301_chk_bmfb013() THEN
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb013
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                     END IF
                     LET g_bmfp2_d[l_ac].bmfb006 = g_bmfp2_d_t.bmfb006
                     CALL abmt301_bmfb_desc()
                     NEXT FIELD bmfb006
                  END IF
               END IF
            END IF
            CALL abmt301_set_entry_b(l_cmd)
            CALL abmt301_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page2.bmfb010" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#
#            CALL abmt301_check_bmfb('a',g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010)
#            IF NOT cl_null(g_errno) THEN
#               CALL cl_err('',g_errno,1)
#               IF g_bmfp2_d[l_ac].bmfb003 = '2' THEN
#                  NEXT FIELD bmfb006
#               ELSE 
#                  NEXT FIELD bmfb005
#               END IF
#            END IF]]>
  </point>
  <point name="input.a.page2.bmfb011" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb011) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.bmfb012" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb012) THEN 
            END IF 
]]>
  </point>
  <point name="input.a.page2.bmfb013" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb013) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmfp2_d[l_ac].bmfb013

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_ooca001") THEN
                  LET g_bmfp2_d[l_ac].bmfb013 = g_bmfp2_d_t.bmfb013
                  NEXT FIELD bmfb013
               END IF
               IF NOT abmt301_chk_bmfb013() THEN
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bmfp2_d[l_ac].bmfb013
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                  END IF
                  LET g_bmfp2_d[l_ac].bmfb013 = g_bmfp2_d_t.bmfb013
                  NEXT FIELD bmfb013 
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.bmfb014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_set_entry_b(l_cmd)
            CALL abmt301_set_no_required_b(l_cmd)
            CALL abmt301_set_required_b(l_cmd)
            CALL abmt301_set_no_entry_b(l_cmd)]]>
  </point>
  <point name="input.a.page2.bmfb017" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF g_bmfp2_d[l_ac].bmfb017 = 'Y' THEN
               IF l_cmd = 'a' THEN
                  IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
                     IF g_bmfa_m.bmfastus = 'Y' THEN
                        CALL abmt300_02('2',g_bmfa_m.bmfadocno,g_bmfp_d[l_ac].bmfp002,g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','Y')
                     ELSE
                        CALL abmt300_02('2',g_bmfa_m.bmfadocno,g_bmfp_d[l_ac].bmfp002,g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','Y')
                     END IF
                  END IF
               END IF
               IF l_cmd = 'u' AND g_bmfp2_d[l_ac].bmfb017 <> g_bmfp2_d_t.bmfb017 THEN
                  IF cl_ask_confirm('abm-00017') THEN
                     IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
                        IF g_bmfa_m.bmfastus = 'Y' THEN
                           CALL abmt300_02('2',g_bmfa_m.bmfadocno,g_bmfp_d[l_ac].bmfp002,g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','Y')
                        ELSE 
                           CALL abmt300_02('2',g_bmfa_m.bmfadocno,g_bmfp_d[l_ac].bmfp002,g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','Y')
                        END IF
                     END IF
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.bmfb020" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_def_bmfb020()]]>
  </point>
  <point name="input.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF l_flag = 'Y' THEN
      CONTINUE WHILE
   END IF

   EXIT WHILE
END WHILE]]>
  </point>
  <point name="input.after_set_entry" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1 ]]>
  </point>
  <point name="input.b.page2.bmfb020" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_def_bmfb020() ]]>
  </point>
  <point name="input.before_dialog" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         IF l_flag = 'Y' THEN
            LET l_flag = 'N'
            CALL DIALOG.setCurrentRow("s_detail2",l_ac)
            NEXT FIELD bmfb003
         END IF ]]>
  </point>
  <point name="input.before_input" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_forupd_sql = "SELECT bmfg003,bmfg004,bmfg005,bmfg006 FROM bmfg_t WHERE bmfgent=? AND bmfgsite=? AND bmfgdocno=? AND bmfg002=? AND bmfg003 = ? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmt301_bcl3 CURSOR FROM g_forupd_sql
   
   LET g_forupd_sql = "SELECT bmfc003,bmfc004,bmfc005,'','',bmfc015,'',bmfc006,bmfc007,bmfc008,bmfc009,bmfc010,bmfc011,bmfc012,bmfc013,bmfc014 FROM bmfc_t WHERE bmfcent=? AND bmfcsite=? AND bmfcdocno=? AND bmfc002=? AND bmfc003=? FOR UPDATE"
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE abmt301_bcl4 CURSOR FROM g_forupd_sql
   WHILE TRUE]]>
  </point>
  <point name="input.body.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_qryparam.state = 'i']]>
  </point>
  <point name="input.body2.a_delete" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                  DELETE FROM bmfc_t
                   WHERE bmfcent = g_enterprise 
                     AND bmfcsite = g_site 
                     AND bmfcdocno = g_bmfa_m.bmfadocno
                     AND bmfc002 = g_bmfp2_d_t.bmfb002
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmfc_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF

                  DELETE FROM bmfg_t
                   WHERE bmfgent = g_enterprise 
                     AND bmfgsite = g_site 
                     AND bmfgdocno = g_bmfa_m.bmfadocno
                     AND bmfg002 = g_bmfp2_d_t.bmfb002
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "bmfg_t"
                     LET g_errparam.popup = FALSE
                     CALL cl_err()
 
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                  END IF   
                  
                  INITIALIZE g_bmfp2_d[l_ac].* TO NULL]]>
  </point>
  <point name="input.body2.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[             ]]>
  </point>
  <point name="input.body2.after_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.body2.b_a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_check_bmfb('a',g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010)
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
               IF g_bmfp2_d[l_ac].bmfb003 = '2' THEN
                  NEXT FIELD bmfb006
               ELSE 
                  NEXT FIELD bmfb005
               END IF
            END IF]]>
  </point>
  <point name="input.body2.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL abmt301_check_bmfb('u',g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  IF g_bmfp2_d[l_ac].bmfb003 = '2' THEN
                     NEXT FIELD bmfb006
                  ELSE 
                     NEXT FIELD bmfb005
                  END IF
               END IF]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_qryparam.state = 'i'
            LET l_n1 = 0
            SELECT COUNT(*) INTO l_n1
              FROM bmfp_t
             WHERE bmfpent = g_enterprise
               AND bmfpsite = g_site
               AND bmfpdocno = g_bmfa_m.bmfadocno
            IF l_n1 = 0 THEN
               NEXT FIELD bmfp002
            END IF ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_n1 = 0
            SELECT COUNT(*) INTO l_n1
              FROM bmfp_t
             WHERE bmfpent = g_enterprise
               AND bmfpsite = g_site
               AND bmfpdocno = g_bmfa_m.bmfadocno
            IF l_n1 = 0 THEN
               NEXT FIELD bmfp002
            END IF 
            CALL abmt301_set_no_required_b(l_cmd)
            CALL abmt301_set_required_b(l_cmd)            
            LET g_bmfp2_d[l_ac].bmfb014 = ""          
            SELECT MAX(bmfb002) +1 INTO g_bmfp2_d[l_ac].bmfb002
              FROM bmfb_t
             WHERE bmfbent = g_enterprise
               AND bmfbsite = g_site
               AND bmfbdocno = g_bmfa_m.bmfadocno
            IF cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
               LET g_bmfp2_d[l_ac].bmfb002 = 1
            END IF
            CALL g_bmfb3_d.clear()
            CALL g_bmfb4_d.clear()]]>
  </point>
  <point name="input.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL abmt301_set_no_required_b(l_cmd)
            CALL abmt301_set_required_b(l_cmd)]]>
  </point>
  <point name="input.c.bmfa006" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfa_m.bmfa006             #給予default值
            LET g_qryparam.default2 = "" #g_bmfa_m.oofa011 #全名

            #給予arg

            CALL q_ooag001_2()                                #呼叫開窗

            LET g_bmfa_m.bmfa006 = g_qryparam.return1              #將開窗取得的值回傳到變數
            #LET g_bmfa_m.oofa011 = g_qryparam.return2 #全名

            DISPLAY g_bmfa_m.bmfa006 TO bmfa006              #顯示到畫面上
            #DISPLAY g_bmfa_m.oofa011 TO oofa011 #全名

            NEXT FIELD bmfa006                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmfa007" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfa_m.bmfa007             #給予default值

            #給予arg
            IF NOT cl_null(g_bmfa_m.bmfadocdt) THEN
               LET g_qryparam.arg1 = g_bmfa_m.bmfadocdt
            END IF
            CALL q_ooeg001()                                #呼叫開窗

            LET g_bmfa_m.bmfa007 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfa_m.bmfa007 TO bmfa007              #顯示到畫面上
            LET g_qryparam.arg1 = ""
            NEXT FIELD bmfa007                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmfa008" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfa_m.bmfa008             #給予default值

            IF g_prog='abmt311' THEN
               LET g_qryparam.where = " bmkasite ='",g_site,"'"
            END IF
            CALL q_bmkadocno()                                #呼叫開窗

            LET g_bmfa_m.bmfa008 = g_qryparam.return1              

            DISPLAY g_bmfa_m.bmfa008 TO bmfa008              #

            NEXT FIELD bmfa008                          #返回原欄位

]]>
  </point>
  <point name="input.c.bmfadocno" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfa_m.bmfadocno             #給予default值

            #給予arg
            SELECT ooef004 INTO l_arg1 FROM ooef_t WHERE ooef001 = g_site_t AND ooefent  = g_enterprise
            LET g_qryparam.arg1 = l_arg1 #參照表編號
            LET g_qryparam.arg2 = g_prog #單據性質

            CALL q_ooba002_1()                                #呼叫開窗

            LET g_bmfa_m.bmfadocno = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfa_m.bmfadocno TO bmfadocno              #顯示到畫面上

            NEXT FIELD bmfadocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmfp002" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp_d[l_ac].bmfp002             #給予default值

            #給予arg

            CALL q_bmaa001_1()                                #呼叫開窗

            LET g_bmfp_d[l_ac].bmfp002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            LET g_bmfp_d[l_ac].bmfp003 = g_qryparam.return2
            DISPLAY g_bmfp_d[l_ac].bmfp002 TO bmfp002               #顯示到畫面上
            DISPLAY g_bmfp_d[l_ac].bmfp003 TO bmfp003    
            NEXT FIELD bmfp002                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmfp003" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp_d[l_ac].bmfp003             #給予default值

            #給予arg
            IF NOT cl_null(g_bmfp_d[l_ac].bmfp002) THEN
               LET g_qryparam.where = " bmaa001 = '",g_bmfp_d[l_ac].bmfp002,"' "
            END IF
            CALL q_bmaa001_1()                                #呼叫開窗

            LET g_bmfp_d[l_ac].bmfp003 = g_qryparam.return2              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp_d[l_ac].bmfp003 TO bmfp003              #顯示到畫面上
            LET g_qryparam.where = ""
            NEXT FIELD bmfp003                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmfp004" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp_d[l_ac].bmfp004             #給予default值

            #給予arg

            LET g_qryparam.arg1 = "210" #應用分類

            CALL q_oocq002()                             #呼叫開窗

            LET g_bmfp_d[l_ac].bmfp004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp_d[l_ac].bmfp004 TO bmfp004              #顯示到畫面上

            NEXT FIELD bmfp004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.bmfp005" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp_d[l_ac].bmfp005             #給予default值

            #給予arg

            LET g_qryparam.arg1 = "210" #應用分類

            CALL q_oocq002()                                 #呼叫開窗

            LET g_bmfp_d[l_ac].bmfp005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp_d[l_ac].bmfp005 TO bmfp005              #顯示到畫面上

            NEXT FIELD bmfp005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmfb004" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp2_d[l_ac].bmfb004             #給予default值

            #給予arg

            CALL q_bmfb004()                                #呼叫開窗

            LET g_bmfp2_d[l_ac].bmfb004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp2_d[l_ac].bmfb004 TO bmfb004              #顯示到畫面上

            NEXT FIELD bmfb004                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmfb005" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp2_d[l_ac].bmfb005             #給予default值

            #給予arg
            LET l_date = g_bmfa_m.bmfa005
            LET l_num = 0
            SELECT COUNT(*) INTO l_num
              FROM bmfp_t 
             WHERE bmfpent = g_enterprise
               AND bmfpsite = g_site
               AND bmfpdocno = g_bmfa_m.bmfadocno
            IF g_bmfp2_d[l_ac].bmfb003 = '2' OR g_bmfp2_d[l_ac].bmfb003 = '3' OR g_bmfp2_d[l_ac].bmfb003 = '4' THEN
               LET g_qryparam.where = " bmba003 IN (SELECT bmba003 FROM (SELECT DISTINCT bmba003,COUNT(*) FROM bmba_t WHERE bmbaent = '",g_enterprise,"' AND bmbasite = '",g_site,"' ",
                                      " AND (bmba001, bmba002) IN (SELECT bmfp002, bmfp003 FROM bmfp_t WHERE bmfpent = '",g_enterprise,"' AND bmfpsite = '",g_site,"' AND bmfpdocno = '",g_bmfa_m.bmfadocno,"') ",
                                      " AND bmba005 <= to_date('",l_date,"','YYYY-MM-DD hh24:mi:ss') AND (bmba006 >= to_date('",l_date,"','YYYY-MM-DD hh24:mi:ss') OR bmba006 IS NULL) AND bmba019 <> '2' GROUP BY bmba003 HAVING COUNT(*) >= '",l_num,"'))"
               IF g_prog = 'abmt311' THEN                        
                  LET g_qryparam.where = g_qryparam.where," AND EXISTS (SELECT * FROM imaa_t WHERE imaaent = bmbaent AND imaa001 = bmba003 AND imaa043 = 'Y')"
               END IF
               CALL q_bmba003_1()
            ELSE
               CALL q_imaf001_6()                                #呼叫開窗
            END IF

            LET g_bmfp2_d[l_ac].bmfb005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp2_d[l_ac].bmfb005 TO bmfb005              #顯示到畫面上
            LET g_qryparam.where = ""
            NEXT FIELD bmfb005                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmfb006" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            IF g_bmfp2_d[l_ac].bmfb003 = '2' THEN
               LET g_qryparam.reqry = FALSE
   
               LET g_qryparam.default1 = g_bmfp2_d[l_ac].bmfb006             #給予default值
   
               #給予arg
               
               CALL q_imaf001_6()                                #呼叫開窗
   
               LET g_bmfp2_d[l_ac].bmfb006 = g_qryparam.return1              #將開窗取得的值回傳到變數
   
               DISPLAY g_bmfp2_d[l_ac].bmfb006 TO bmfb006              #顯示到畫面上
   
               NEXT FIELD bmfb006                          #返回原欄位

            END IF]]>
  </point>
  <point name="input.c.page2.bmfb008" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp2_d[l_ac].bmfb008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "215" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmfp2_d[l_ac].bmfb008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp2_d[l_ac].bmfb008 TO bmfb008              #顯示到畫面上

            NEXT FIELD bmfb008                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmfb009" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp2_d[l_ac].bmfb009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "221" #應用分類

            CALL q_oocq002()                                #呼叫開窗

            LET g_bmfp2_d[l_ac].bmfb009 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp2_d[l_ac].bmfb009 TO bmfb009              #顯示到畫面上

            NEXT FIELD bmfb009                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmfb013" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp2_d[l_ac].bmfb013             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_bmfp2_d[l_ac].bmfb013 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp2_d[l_ac].bmfb013 TO bmfb013              #顯示到畫面上

            NEXT FIELD bmfb013                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmfb015" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_bmfp2_d[l_ac].bmfb015             #給予default值

            #給予arg

            CALL q_bmze001()                                #呼叫開窗

            LET g_bmfp2_d[l_ac].bmfb015 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_bmfp2_d[l_ac].bmfb015 TO bmfb015              #顯示到畫面上

            NEXT FIELD bmfb015                          #返回原欄位

]]>
  </point>
  <point name="input.c.page2.bmfb020" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="input.c.page2.ooff013" order="" ver="9" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
               CALL aooi360_02('7',g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002,'','','','','','','','','1')
               CALL s_aooi360_sel('7',g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002,'','','','','','','','','1') RETURNING l_success,g_bmfp2_d[l_ac].ooff013
            END IF]]>
  </point>
  <point name="input.define" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE  l_ac1_t         LIKE type_t.num5
   DEFINE  l_ret           LIKE type_t.num5
   DEFINE  l_flag          LIKE type_t.chr1
   DEFINE  l_plug          LIKE type_t.num5
   DEFINE  l_n1            LIKE type_t.num5
   DEFINE  l_date          DATETIME YEAR TO SECOND
   DEFINE  l_num           LIKE type_t.num5
   DEFINE  l_ooef004       LIKE ooef_t.ooef004
   DEFINE  l_sql1          STRING
   DEFINE  l_oocq008       LIKE oocq_t.oocq008]]>
  </point>
  <point name="input.detail_input.page1.batch" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_bmfa_m.bmfadocno) AND NOT cl_null(g_bmfa_m.bmfa005) THEN
                   IF g_bmfa_m.bmfastus = 'N' THEN
                      CALL abmt301_01(g_bmfa_m.bmfadocno,g_bmfa_m.bmfa005)
                      CALL abmt301_b_fill()
                   END IF
                END IF]]>
  </point>
  <point name="input.detail_input.page2.character" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) AND g_bmfp2_d[l_ac].bmfb017 = 'Y' THEN
                   IF g_bmfa_m.bmfastus = 'Y' THEN
                      CALL abmt300_02('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','Y')
                   ELSE
                      CALL abmt300_02('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','Y')
                   END IF
                END IF
                LET g_action_choice=""]]>
  </point>
  <point name="input.detail_input.page2.plug" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
                   IF g_bmfa_m.bmfastus = 'Y' THEN
                      CALL abmt300_01('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','Y')
                   ELSE
                      CALL abmt300_01('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','Y')
                   END IF
                END IF
                LET l_plug = 0
                SELECT COUNT(*) INTO l_plug
                  FROM bmfh_t
                 WHERE bmfhsite = g_site
                   AND bmfhent = g_enterprise
                   AND bmfhdocno = g_bmfa_m.bmfadocno
                   AND bmfh002 = g_bmfp2_d[l_ac].bmfb002
                IF l_plug > 0 THEN
                   LET g_bmfp2_d[l_ac].bmfb020 = 'Y'
                ELSE
                   LET g_bmfp2_d[l_ac].bmfb020 = 'N'
                END IF
                LET g_action_choice=""]]>
  </point>
  <point name="input.g.bmfa006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[  ]]>
  </point>
  <point name="input.g.page2.bmfb003" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page2.bmfb006" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page2.bmfb014" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.g.page2.bmfb020" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #CALL abmt301_def_bmfb020()
            IF g_bmfp2_d[l_ac].bmfb020 = 'Y' THEN            
               CALL abmt300_01('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','Y')
            ELSE
               DELETE FROM bmfh_t
                WHERE bmfhent = g_enterprise
                  AND bmfhsite = g_site
                  AND bmfhdocno = g_bmfa_m.bmfadocno
                  AND bmfh002 = g_bmfp2_d[l_ac].bmfb002
            END IF]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL abmt301_01(g_bmfa_m.bmfadocno,g_bmfa_m.bmfa005)
               CALL abmt301_b_fill()]]>
  </point>
  <point name="input.head.b_insert" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL s_aooi200_gen_docno(g_site_t,g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_prog) RETURNING l_success,g_bmfa_m.bmfadocno
               IF NOT l_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'apm-00003'
                  LET g_errparam.extend = g_bmfa_m.bmfadocno
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  NEXT FIELD bmfadocno
               END IF]]>
  </point>
  <point name="input.head.m_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET g_qryparam.state = 'i']]>
  </point>
  <point name="input.more_input" order="" ver="7" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      INPUT ARRAY g_bmfb3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b1,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         
         BEFORE INPUT
            
            CALL abmt301_b_fill_1()
            LET g_rec_b1 = g_bmfb3_d.getLength()
            IF g_bmfp2_d[l_ac].bmfb003 = '3' OR g_bmfp2_d[l_ac].bmfb003 = '4' THEN
               LET l_flag = 'Y'
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00032'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               EXIT DIALOG
            END IF
            IF cl_null(g_bmfp2_d[l_ac].bmfb005) THEN
               NEXT FIELD bmfb002
            END IF
            
         BEFORE INSERT
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmfb3_d[l_ac1].* TO NULL 
            LET g_bmfb3_d_t.* = g_bmfb3_d[l_ac1].*     #新輸入資料
            CALL cl_show_fld_cont()
            IF g_bmfp2_d[l_ac].bmfb003 = '3' OR g_bmfp2_d[l_ac].bmfb003 = '4' THEN
               LET l_flag = 'Y'
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00032'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               EXIT DIALOG
            END IF
            CALL abmt301_def_bmfg003()
            
         BEFORE ROW 
            LET l_insert = FALSE
            LET p_cmd = ''
            LET l_ac1 = ARR_CURR()
            LET g_detail_idx = l_ac1
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac1 TO FORMONLY.idx
            CALL s_transaction_begin()
            OPEN abmt301_cl USING g_enterprise,g_site,g_bmfa_m.bmfadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN abmt301_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE abmt301_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            LET g_rec_b1 = g_bmfb3_d.getLength()
       
            IF g_rec_b1 >= l_ac1 AND NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) THEN 
               LET l_cmd='u'
			         LET g_bmfb3_d_t.* = g_bmfb3_d[l_ac1].*  #BACKUP
               OPEN abmt301_bcl3 USING g_enterprise,g_site,g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002,g_bmfb3_d[l_ac1].bmfg003
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "abmt301_bcl3"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt301_bcl3 INTO g_bmfb3_d[l_ac1].bmfg003,g_bmfb3_d[l_ac1].bmfg004,g_bmfb3_d[l_ac1].bmfg005,g_bmfb3_d[l_ac1].bmfg006
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
			            CALL abmt301_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            
            
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) 
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               DELETE FROM bmfg_t
                WHERE bmfgent = g_enterprise AND bmfgsite = g_site AND bmfgdocno = g_bmfa_m.bmfadocno 
                  AND bmfg002 = g_bmfp2_d[l_ac].bmfb002 AND bmfg003 = g_bmfb3_d[l_ac1].bmfg003
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmfg_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b1 = g_rec_b1-1
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmt301_bcl3
               LET l_count = g_bmfb3_d.getLength()
            END IF 

            
         AFTER DELETE 
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count 
              FROM bmfg_t 
             WHERE bmfgent = g_enterprise 
               AND bmfgsite = g_site
               AND bmfgdocno = g_bmfa_m.bmfadocno 
               AND bmfg002 = g_bmfp2_d[l_ac].bmfb002
               AND bmfg003 = g_bmfb3_d[l_ac1].bmfg003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               INSERT INTO bmfg_t(bmfgent,bmfgsite,bmfgdocno,bmfg002,bmfg003,bmfg004,bmfg005,bmfg006) 
                           VALUES(g_enterprise, g_site,g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002,g_bmfb3_d[l_ac1].bmfg003,
                                  g_bmfb3_d[l_ac1].bmfg004,g_bmfb3_d[l_ac1].bmfg005,g_bmfb3_d[l_ac1].bmfg006)
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmfg_t"
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

               END IF        
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_bmfb3_d[l_ac1].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmfg_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b1 = g_rec_b1 + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_bmfb3_d[l_ac1].* = g_bmfb3_d_t.*
               CLOSE abmt301_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bmfb3_d[l_ac1].* = g_bmfb3_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身5)
               UPDATE bmfg_t SET (bmfgdocno,bmfg003,bmfg004,bmfg005,bmfg006) = (g_bmfa_m.bmfadocno,g_bmfb3_d[l_ac1].bmfg003,g_bmfb3_d[l_ac1].bmfg004,g_bmfb3_d[l_ac1].bmfg005,g_bmfb3_d[l_ac1].bmfg006) #自訂欄位頁簽
                WHERE bmfgent = g_enterprise 
                  AND bmfgsite = g_site 
                  AND bmfgdocno = g_bmfa_m.bmfadocno
                  AND bmfg002 = g_bmfp2_d[l_ac].bmfb002
                  AND bmfg003 = g_bmfb3_d_t.bmfg003 #項次 

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
   
                  LET g_bmfb3_d[l_ac1].* = g_bmfb3_d_t.*
               END IF
 
            END IF
         
         BEFORE FIELD bmfg003
            
         AFTER FIELD bmfg003
            IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) THEN
               IF NOT ap_chk_Range(g_bmfb3_d[l_ac1].bmfg003,"0.000","1","","","azz-00079",1) THEN
                  LET g_bmfb3_d[l_ac1].bmfg003 = g_bmfb3_d_t.bmfg003
                  NEXT FIELD bmfg003
               END IF
               IF NOT cl_null(g_bmfa_m.bmfadocno) AND NOT cl_null(g_bmfp2_d[l_ac].bmfb002) AND NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) THEN 
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND g_bmfb3_d[l_ac1].bmfg003 != g_bmfb3_d_t.bmfg003) THEN 
                     IF NOT ap_chk_notDup(g_bmfb3_d[l_ac1].bmfg003,"SELECT COUNT(*) FROM bmfg_t WHERE "||"bmfgent = '" ||g_enterprise|| "' AND bmfgsite = '" ||g_site|| "' AND "||"bmfgdocno = '"||g_bmfa_m.bmfadocno ||"' AND "|| "bmfg002 = '"||g_bmfp2_d[l_ac].bmfb002 ||"' AND "|| "bmfg003 = '"||g_bmfb3_d[l_ac1].bmfg003 ||"'",'std-00004',0) THEN 
                        LET g_bmfb3_d[l_ac1].bmfg003 = g_bmfb3_d_t.bmfg003
                        NEXT FIELD bmfg003
                     END IF
                  END IF
               END IF
               IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg004) THEN
                  IF g_bmfb3_d[l_ac1].bmfg003 > g_bmfb3_d[l_ac1].bmfg004 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00026'
                     LET g_errparam.extend = g_bmfb3_d[l_ac1].bmfg003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfb3_d[l_ac1].bmfg003 = g_bmfb3_d_t.bmfg003
                     NEXT FIELD bmfg003
                  END IF
               END IF
               CALL abmt301_chk_bmfg003(g_bmfb3_d[l_ac1].bmfg003,'1',l_cmd)
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = g_bmfb3_d[l_ac1].bmfg003
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmfb3_d[l_ac1].bmfg003 = g_bmfb3_d_t.bmfg003
                  NEXT FIELD bmfg003
               END IF
            END IF
            NEXT FIELD bmfg004
            
         ON CHANGE bmfg003
         
         BEFORE FIELD bmfg004

         AFTER FIELD bmfg004
            IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg004) THEN
               IF NOT ap_chk_Range(g_bmfb3_d[l_ac1].bmfg004,"0.000","1","","","azz-00079",1) THEN
                  LET g_bmfb3_d[l_ac1].bmfg004 = g_bmfb3_d_t.bmfg004
                  NEXT FIELD bmfg004
               END IF
               IF NOT cl_null(g_bmfb3_d[l_ac1].bmfg003) THEN
                  IF g_bmfb3_d[l_ac1].bmfg003 > g_bmfb3_d[l_ac1].bmfg004 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00026'
                     LET g_errparam.extend = g_bmfb3_d[l_ac1].bmfg004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfb3_d[l_ac1].bmfg004 = g_bmfb3_d_t.bmfg004
                     NEXT FIELD bmfg004
                  END IF
               END IF
            END IF
            CALL abmt301_chk_bmfg003(g_bmfb3_d[l_ac1].bmfg004,'2',l_cmd)
            IF NOT cl_null(g_errno) THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = g_errno
               LET g_errparam.extend = g_bmfb3_d[l_ac1].bmfg004
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bmfb3_d[l_ac1].bmfg004 = g_bmfb3_d_t.bmfg004
               NEXT FIELD bmfg004
            END IF
            
         ON CHANGE bmfg004
         
         BEFORE FIELD bmfg005

         AFTER FIELD bmfg005
            IF NOT ap_chk_Range(g_bmfb3_d[l_ac1].bmfg005,"0.000","1","","","azz-00079",1) THEN
               LET g_bmfb3_d[l_ac1].bmfg005 = g_bmfb3_d_t.bmfg005
               NEXT FIELD bmfg005
            END IF
            
         ON CHANGE bmfg005
         
         BEFORE FIELD bmfg006

         AFTER FIELD bmfg006
            IF NOT ap_chk_Range(g_bmfb3_d[l_ac1].bmfg006,"0.000","1","","","azz-00079",1) THEN
               LET g_bmfb3_d[l_ac1].bmfg006 = g_bmfb3_d_t.bmfg006
               NEXT FIELD bmfg006
            END IF
            
         ON CHANGE bmfg006


         AFTER ROW
            LET l_ac1 = ARR_CURR()
            LET l_ac1_t = l_ac1
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmfb3_d[l_ac1].* = g_bmfb3_d_t.*
               END IF
               CLOSE abmt301_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            CLOSE abmt301_bcl3
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
 
      END INPUT
      
      
      INPUT ARRAY g_bmfb4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b1,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, 
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         ON ACTION client

            LET g_action_choice="client"
            IF cl_auth_chk_act("client") THEN 
                IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002)  AND g_bmfb4_d[l_ac1].bmfc011 = 'Y' THEN
                   IF g_bmfa_m.bmfastus = 'Y' THEN
                      CALL abmt300_03('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','Y')
                   ELSE
                      CALL abmt300_03('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','Y')
                   END IF
                END IF
                LET g_action_choice=""
            END IF   
               
         BEFORE INPUT
            
            CALL abmt301_b_fill_1()
            LET g_rec_b1 = g_bmfb4_d.getLength()
            IF g_bmfp2_d[l_ac].bmfb003 = '3' THEN
               LET l_flag = 'Y'
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00033'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               EXIT DIALOG
            END IF
            IF cl_null(g_bmfp2_d[l_ac].bmfb005) THEN
               NEXT FIELD bmfb002
            END IF
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmfb4_d[l_ac1].* TO NULL 
            LET g_bmfb4_d_t.* = g_bmfb4_d[l_ac1].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt301_set_entry_bmfc()
            CALL abmt301_set_no_required_bmfc()
            CALL abmt301_set_required_bmfc()
            CALL abmt301_set_no_entry_bmfc()
            LET g_bmfb4_d[l_ac1].bmfc011 = 'N'
            IF g_bmfp2_d[l_ac].bmfb003 = '3' THEN
               LET l_flag = 'Y'
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 'abm-00033'
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               EXIT DIALOG
            END IF
            SELECT MAX(bmfc003) +1 INTO g_bmfb4_d[l_ac1].bmfc003
              FROM bmfc_t
             WHERE bmfcent = g_enterprise
               AND bmfcsite = g_site
               AND bmfcdocno = g_bmfa_m.bmfadocno
               AND bmfc002 = g_bmfp2_d[l_ac].bmfb002
            IF cl_null(g_bmfb4_d[l_ac1].bmfc003) THEN
               LET g_bmfb4_d[l_ac1].bmfc003 = 1
            END IF

         BEFORE ROW 
            LET l_insert = FALSE
            LET p_cmd = ''
            LET l_ac1 = ARR_CURR()
            LET g_detail_idx = l_ac1
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac1 TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt301_cl USING g_enterprise,g_site,g_bmfa_m.bmfadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN abmt301_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE abmt301_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            LET g_rec_b1 = g_bmfb4_d.getLength()
            
            IF g_rec_b1 >= l_ac1 AND NOT cl_null(g_bmfb4_d[l_ac1].bmfc003) THEN 
               LET l_cmd='u'
			   LET g_bmfb4_d_t.* = g_bmfb4_d[l_ac1].*  #BACKUP
			   LET g_bmfb4_d_o.* = g_bmfb4_d[l_ac1].*  #BACKUP add 141020 zhangllc
			   CALL abmt301_set_entry_bmfc()
			   CALL abmt301_set_no_required_bmfc()
               CALL abmt301_set_required_bmfc()
               CALL abmt301_set_no_entry_bmfc()
               OPEN abmt301_bcl4 USING g_enterprise,g_site,g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002,g_bmfb4_d[l_ac1].bmfc003
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "abmt301_bcl4"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt301_bcl4 INTO g_bmfb4_d[l_ac1].bmfc003,g_bmfb4_d[l_ac1].bmfc004,
                                          g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc005_desc,g_bmfb4_d[l_ac1].bmfc005_desc1,
                                          g_bmfb4_d[l_ac1].bmfc015,g_bmfb4_d[l_ac1].bmfc015_desc,
                                          g_bmfb4_d[l_ac1].bmfc006,
                                          g_bmfb4_d[l_ac1].bmfc007,g_bmfb4_d[l_ac1].bmfc008,g_bmfb4_d[l_ac1].bmfc009,g_bmfb4_d[l_ac1].bmfc010,
                                          g_bmfb4_d[l_ac1].bmfc011,g_bmfb4_d[l_ac1].bmfc012,g_bmfb4_d[l_ac1].bmfc013,g_bmfb4_d[l_ac1].bmfc014 
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF
			      CALL abmt301_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            
            
         BEFORE DELETE                            #是否取消單身
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc003) 
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               DELETE FROM bmfc_t
                WHERE bmfcent = g_enterprise AND bmfcsite = g_site AND bmfcdocno = g_bmfa_m.bmfadocno 
                  AND bmfc002 = g_bmfp2_d[l_ac].bmfb002 AND bmfc003 = g_bmfb4_d[l_ac1].bmfc003
                  
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmfc_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b1 = g_rec_b1-1
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE abmt301_bcl4
               LET l_count = g_bmfb3_d.getLength()
            END IF 

            
         AFTER DELETE 
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count 
              FROM bmfc_t 
             WHERE bmfcent = g_enterprise 
               AND bmfcsite = g_site
               AND bmfcdocno = g_bmfa_m.bmfadocno 
               AND bmfc002 = g_bmfp2_d[l_ac].bmfb002
               AND bmfc003 = g_bmfb4_d[l_ac1].bmfc003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               IF cl_null(g_bmfb4_d[l_ac1].bmfc015) THEN LET g_bmfb4_d[l_ac1].bmfc015 = ' ' END IF #zhangllc add 141020
               INSERT INTO bmfc_t(bmfcent,bmfcsite,bmfcdocno,bmfc002,bmfc003,bmfc004,bmfc005,bmfc015,bmfc006,bmfc007,bmfc008,bmfc009,bmfc010,bmfc011,bmfc012,bmfc013,bmfc014) 
                           VALUES(g_enterprise, g_site,g_bmfa_m.bmfadocno,g_bmfp2_d[l_ac].bmfb002,g_bmfb4_d[l_ac1].bmfc003,
                                  g_bmfb4_d[l_ac1].bmfc004,g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc015,g_bmfb4_d[l_ac1].bmfc006,g_bmfb4_d[l_ac1].bmfc007,
                                  g_bmfb4_d[l_ac1].bmfc008,g_bmfb4_d[l_ac1].bmfc009,g_bmfb4_d[l_ac1].bmfc010,g_bmfb4_d[l_ac1].bmfc011,
                                  g_bmfb4_d[l_ac1].bmfc012,g_bmfb4_d[l_ac1].bmfc013,g_bmfb4_d[l_ac1].bmfc014)
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmfc_t"
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

               END IF        
            ELSE    
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_bmfb4_d[l_ac1].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "bmfc_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b1 = g_rec_b1 + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_bmfb4_d[l_ac1].* = g_bmfb4_d_t.*
               CLOSE abmt301_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_bmfb4_d[l_ac1].* = g_bmfb4_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身5)
               IF cl_null(g_bmfb4_d[l_ac1].bmfc015) THEN LET g_bmfb4_d[l_ac1].bmfc015 = ' ' END IF #zhangllc add 141020
               UPDATE bmfc_t SET (bmfcdocno,bmfc003,bmfc004,bmfc005,bmfc015,bmfc006,bmfc007,bmfc008,bmfc009,bmfc010,bmfc011,bmfc012,bmfc013,bmfc014) 
                               = (g_bmfa_m.bmfadocno,g_bmfb4_d[l_ac1].bmfc003,g_bmfb4_d[l_ac1].bmfc004,g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc015,g_bmfb4_d[l_ac1].bmfc006,
                                  g_bmfb4_d[l_ac1].bmfc007,g_bmfb4_d[l_ac1].bmfc008,g_bmfb4_d[l_ac1].bmfc009,g_bmfb4_d[l_ac1].bmfc010,g_bmfb4_d[l_ac1].bmfc011,g_bmfb4_d[l_ac1].bmfc012,g_bmfb4_d[l_ac1].bmfc013,g_bmfb4_d[l_ac1].bmfc014) #自訂欄位頁簽
                WHERE bmfcent = g_enterprise 
                  AND bmfcsite = g_site 
                  AND bmfcdocno = g_bmfa_m.bmfadocno
                  AND bmfc002 = g_bmfp2_d[l_ac].bmfb002
                  AND bmfc003 = g_bmfb4_d_t.bmfc003 #項次 

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()
   
                  LET g_bmfb4_d[l_ac1].* = g_bmfb4_d_t.*
               END IF
 
            END IF
         
         BEFORE FIELD bmfc003

         AFTER FIELD bmfc003
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc003) THEN
               IF NOT ap_chk_Range(g_bmfb4_d[l_ac1].bmfc003,"0","0","","","azz-00079",1) THEN
                  LET g_bmfb4_d[l_ac1].bmfc003 = g_bmfb4_d_t.bmfc003
                  NEXT FIELD bmfc003
               END IF
            END IF
            
         ON CHANGE bmfc003
            
            
         BEFORE FIELD bmfc004

         AFTER FIELD bmfc004
            CALL abmt301_set_entry_bmfc()
            CALL abmt301_set_no_required_bmfc()
            CALL abmt301_set_required_bmfc()
            CALL abmt301_set_no_entry_bmfc()
            IF l_cmd = 'a' AND NOT cl_null(g_bmfb4_d[l_ac1].bmfc004) THEN
               CALL abmt301_def_bmfc004()
            END IF
            IF (g_bmfb4_d[l_ac1].bmfc004 = '1' OR g_bmfb4_d[l_ac1].bmfc004 = '4') AND NOT cl_null(g_bmfb4_d[l_ac1].bmfc005) THEN
               IF g_bmfp2_d[l_ac].bmfb003 = '1' THEN
                  IF g_bmfp2_d[l_ac].bmfb005 = g_bmfb4_d[l_ac1].bmfc005 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00092'
                     LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfb4_d[l_ac1].bmfc004 = g_bmfb4_d_t.bmfc004
                     NEXT FIELD bmfc004
                  END IF
               END IF
            END IF
            IF g_bmfb4_d[l_ac1].bmfc004 = '2' OR g_bmfb4_d[l_ac1].bmfc004 = '3' OR g_bmfb4_d[l_ac1].bmfc004 = '5' OR g_bmfb4_d[l_ac1].bmfc004 = '6' THEN
               IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc005) THEN
                  CALL abmt301_chk_bmfc005_bmfc004()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc004
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfb4_d[l_ac1].bmfc004 = g_bmfb4_d_t.bmfc004
                     CALL abmt301_bmfc_desc()
                     NEXT FIELD bmfc004
                  END IF
               END IF
            END IF
            
         ON CHANGE bmfc004
            CALL abmt301_set_entry_bmfc()
            CALL abmt301_set_no_required_bmfc()
            CALL abmt301_set_required_bmfc()
            CALL abmt301_set_no_entry_bmfc()
            
         BEFORE FIELD bmfc005

         AFTER FIELD bmfc005
            CALL abmt301_bmfc_desc()
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc005) THEN
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_bmfb4_d[l_ac1].bmfc005

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_imaf001_1") THEN
                  LET g_bmfb4_d[l_ac1].bmfc005 = g_bmfb4_d_t.bmfc005
                  CALL abmt301_bmfc_desc()
                  NEXT FIELD bmfc005
               END IF
               IF g_bmfp2_d[l_ac].bmfb003 = '1' AND (g_bmfb4_d[l_ac1].bmfc004 = '1' OR g_bmfb4_d[l_ac1].bmfc004 = '4')  THEN
                  IF g_bmfp2_d[l_ac].bmfb005 = g_bmfb4_d[l_ac1].bmfc005 THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = 'abm-00092'
                     LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfb4_d[l_ac1].bmfc005 = g_bmfb4_d_t.bmfc005
                     CALL abmt301_bmfc_desc()
                     NEXT FIELD bmfc005
                  END IF
               END IF
               IF g_bmfb4_d[l_ac1].bmfc004 = '2' OR g_bmfb4_d[l_ac1].bmfc004 = '3' OR g_bmfb4_d[l_ac1].bmfc004 = '5' OR g_bmfb4_d[l_ac1].bmfc004 = '6' THEN
                  CALL abmt301_chk_bmfc005_bmfc004()
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_bmfb4_d[l_ac1].bmfc005 = g_bmfb4_d_t.bmfc005
                     CALL abmt301_bmfc_desc()
                     NEXT FIELD bmfc005
                  END IF
               END IF
               CALL abmt301_chk_bmfc005()
               IF NOT cl_null(g_errno) THEN
                  INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = g_errno
                     LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc005
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                  LET g_bmfb4_d[l_ac1].bmfc005 = g_bmfb4_d_t.bmfc005
                  CALL abmt301_bmfc_desc()
                  NEXT FIELD bmfc005
               END IF
               IF l_cmd = 'a' THEN
                  CALL abmt301_def_bmfc004()
               END IF
               IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc010) THEN
                  IF NOT abmt301_chk_bmfc010() THEN
                     IF NOT cl_null(g_errno) THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc010
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                     END IF
                     LET g_bmfb4_d[l_ac1].bmfc005 = g_bmfb4_d_t.bmfc005 
                     CALL abmt301_bmfc_desc()                     
                     NEXT FIELD bmfb005
                  END IF
               END IF
            END IF
            #141020 add zhangllc
            IF g_bmfb4_d[l_ac1].bmfc005 != g_bmfb4_d_o.bmfc005 THEN
               LET g_bmfb4_d[l_ac1].bmfc015 = ' '
            END IF
            CALL abmt301_set_entry_bmfc()
            CALL abmt301_set_no_entry_bmfc()
            LET g_bmfb4_d_o.bmfc005 = g_bmfb4_d[l_ac1].bmfc005
            #141020 add zhangllc--end
            
            
            
         ON CHANGE bmfc005
            #141020 add zhangllc
            CALL abmt301_set_entry_bmfc()
            CALL abmt301_set_no_entry_bmfc()
            #141020 add zhangllc--end
         
         AFTER FIELD bmfc015
            DISPLAY "" TO s_detail4[l_ac1].bmfc015_desc
            
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc015) THEN 
               #检查产品特征            
               IF NOT s_feature_check(g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc015) THEN
                  LET g_bmfb4_d[l_ac1].bmfc015 = g_bmfb4_d_t.bmfc015
                  CALL abmt301_bmfc_desc()
                  NEXT FIELD bmfc015
               END IF
            END IF
            
            #IF l_cmd = 'a' THEN
            #   CALL abmt301_def_bmfc004()
            #END IF
            
            #显示产品特征说明               
            CALL s_feature_description(g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc015)
               RETURNING l_success,g_bmfb4_d[l_ac1].bmfc015_desc
            IF l_success THEN
               DISPLAY BY NAME g_bmfb4_d[l_ac1].bmfc015_desc
            END IF
         
         BEFORE FIELD bmfc006

         AFTER FIELD bmfc006
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc006) AND NOT cl_null(g_bmfb4_d[l_ac1].bmfc007) THEN
               IF g_bmfb4_d[l_ac1].bmfc006 > g_bmfb4_d[l_ac1].bmfc007 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ais-00047'
                  LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc006
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmfb4_d[l_ac1].bmfc006 = g_bmfb4_d_t.bmfc006
                  NEXT FIELD bmfc006
               END IF 
            END IF
            
         ON CHANGE bmfc006

         BEFORE FIELD bmfc007

         AFTER FIELD bmfc007
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc006) AND NOT cl_null(g_bmfb4_d[l_ac1].bmfc007) THEN
               IF g_bmfb4_d[l_ac1].bmfc006 > g_bmfb4_d[l_ac1].bmfc007 THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'ais-00047'
                  LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc007
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_bmfb4_d[l_ac1].bmfc007 = g_bmfb4_d_t.bmfc007
                  NEXT FIELD bmfc007
               END IF 
            END IF
            
         ON CHANGE bmfc007
         
         BEFORE FIELD bmfc008

         AFTER FIELD bmfc008
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc008) THEN
               IF NOT ap_chk_Range(g_bmfb4_d[l_ac1].bmfc008,"0.000","0","","","azz-00079",1) THEN
                  LET g_bmfb4_d[l_ac1].bmfc008 = g_bmfb4_d_t.bmfc008
                  NEXT FIELD bmfc008
               END IF
            END IF
            
         ON CHANGE bmfc008
         
         BEFORE FIELD bmfc009

         AFTER FIELD bmfc009
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc009) THEN
               IF NOT ap_chk_Range(g_bmfb4_d[l_ac1].bmfc009,"0.000","0","","","azz-00079",1) THEN
                  LET g_bmfb4_d[l_ac1].bmfc009 = g_bmfb4_d_t.bmfc009
                  NEXT FIELD bmfc009
               END IF
            END IF
            
         ON CHANGE bmfc009
         
         BEFORE FIELD bmfc010

         AFTER FIELD bmfc010
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc010) THEN
               IF NOT ap_chk_isExist(g_bmfb4_d[l_ac1].bmfc010,"SELECT COUNT(*) FROM ooca_t WHERE oocaent = '" ||g_enterprise||"' AND ooca001 = ? ","aim-00004",1 ) THEN                                  
                  LET g_bmfb4_d[l_ac1].bmfc010 = g_bmfb4_d_t.bmfc010                                                                                                                       
                  NEXT FIELD bmfb010                                                                                                                                                  
               END IF                                                                                                                                                                   
               IF NOT ap_chk_isExist(g_bmfb4_d[l_ac1].bmfc010,"SELECT COUNT(*) FROM ooca_t WHERE oocaent = '" ||g_enterprise||"' AND ooca001 = ? AND oocastus = 'Y' ","aim-00005",1 ) THEN
                  LET g_bmfb4_d[l_ac1].bmfc010 = g_bmfb4_d_t.bmfc010                                                                                                                       
                  NEXT FIELD bmfb010                                                                                                                                                   
               END IF   
               IF NOT abmt301_chk_bmfc010() THEN
                  IF NOT cl_null(g_errno) THEN
                     INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = g_errno
                        LET g_errparam.extend = g_bmfb4_d[l_ac1].bmfc010
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                  END IF
                  LET g_bmfb4_d[l_ac1].bmfc010 = g_bmfb4_d_t.bmfc010                                                                                                                       
                  NEXT FIELD bmfb010  
               END IF
            END IF   
            
         ON CHANGE bmfc010
         
         BEFORE FIELD bmfc011

         AFTER FIELD bmfc011

         ON CHANGE bmfc011
         
         BEFORE FIELD bmfc012

         AFTER FIELD bmfc012
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc012) THEN
               IF NOT ap_chk_Range(g_bmfb4_d[l_ac1].bmfc012,"0","1","99","1","azz-00086",1) THEN
                  NEXT FIELD bmfc012
               END IF               
            END IF
            
            
         ON CHANGE bmfc012
         
         BEFORE FIELD bmfc013

         AFTER FIELD bmfc013
            IF g_bmfb4_d[l_ac1].bmfc013 = '2'  THEN
               LET g_bmfb4_d[l_ac1].bmfc014 = 100
            END IF
            CALL abmt301_set_entry_bmfc()
            CALL abmt301_set_no_entry_bmfc()
            
         ON CHANGE bmfc013
            CALL abmt301_set_entry_bmfc()
            CALL abmt301_set_no_entry_bmfc()
            
         BEFORE FIELD bmfc014

         AFTER FIELD bmfc014
            IF NOT cl_null(g_bmfb4_d[l_ac1].bmfc014) THEN
               IF NOT ap_chk_Range(g_bmfb4_d[l_ac1].bmfc014,"0.000","1","","","azz-00079",1) THEN
                  LET g_bmfb4_d[l_ac1].bmfc014 = g_bmfb4_d_t.bmfc014
                  NEXT FIELD bmfc014
               END IF
            END IF 
            
         ON CHANGE bmfc014
         

         ON ACTION controlp INFIELD bmfc005
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bmfb4_d[l_ac1].bmfc005
            LET l_num = 0
            SELECT COUNT(*) INTO l_num
              FROM bmfp_t
             WHERE bmfpent = g_enterprise
               AND bmfpsite = g_site
               AND bmfpdocno = g_bmfa_m.bmfadocno
            LET l_sql1 = " SELECT bmfp002, bmfp003 FROM bmfp_t WHERE bmfpent = '",g_enterprise,"' AND bmfpsite = '",g_site,"' AND bmfpdocno = '",g_bmfa_m.bmfadocno,"') ",
                         " AND bmea003 = '",g_bmfp2_d[l_ac].bmfb005,"' "
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb008) THEN
               LET l_sql1 = l_sql1 CLIPPED," AND bmea004 = '",g_bmfp2_d[l_ac].bmfb008,"'"
            END IF
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb009) THEN
               LET l_sql1 = l_sql1 CLIPPED," AND bmea005 = '",g_bmfp2_d[l_ac].bmfb009,"'"
            END IF
            IF NOT cl_null(g_bmfp2_d[l_ac].bmfb010) THEN
               LET l_sql1 = l_sql1 CLIPPED," AND bmea006 = '",g_bmfp2_d[l_ac].bmfb010,"'"
            END IF    
            IF g_bmfb4_d[l_ac1].bmfc004 = '2' OR g_bmfb4_d[l_ac1].bmfc004 = '3' THEN
               
               LET l_sql1 = " bmea008 IN (SELECT bmea008 FROM (SELECT DISTINCT bmea008,COUNT(*) FROM bmea_t WHERE bmeaent = '",g_enterprise,"' AND bmeasite = '",g_site,"' ",
                                      " AND (bmea001, bmea002) IN (",l_sql1 CLIPPED," AND bmea007 = '2' GROUP BY bmea008 HAVING COUNT(*) >= '",l_num,"'))"
               LET g_qryparam.where = l_sql1
               CALL q_bmea008_1()                                 #呼叫開窗
            END IF
            IF g_bmfb4_d[l_ac1].bmfc004 = '5' OR g_bmfb4_d[l_ac1].bmfc004 = '6' THEN
               LET l_sql1 = " bmea008 IN (SELECT bmea008 FROM (SELECT DISTINCT bmea008,COUNT(*) FROM bmea_t WHERE bmeaent = '",g_enterprise,"' AND bmeasite = '",g_site,"' ",
                                      " AND (bmea001, bmea002) IN (",l_sql1 CLIPPED," AND bmea007 = '1' GROUP BY bmea008 HAVING COUNT(*) >= '",l_num,"'))"
               LET g_qryparam.where = l_sql1
               CALL q_bmea008_1()                                 #呼叫開窗
            END IF
            IF NOT(g_bmfb4_d[l_ac1].bmfc004 = '2' OR g_bmfb4_d[l_ac1].bmfc004 = '3' OR g_bmfb4_d[l_ac1].bmfc004 = '5' OR g_bmfb4_d[l_ac1].bmfc004 = '6') THEN
               CALL q_imaf001_6()
            END IF                                      
            LET g_bmfb4_d[l_ac1].bmfc005 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_bmfb4_d[l_ac1].bmfc005 TO bmfc005              #顯示到畫面上
            LET g_qryparam.where = ""
            CALL abmt301_bmfc_desc()    
            NEXT FIELD bmfc005                                       #返回原欄位
            
            
         ON ACTION controlp INFIELD bmfc015
            CALL s_feature_single(g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc015,g_site,'')
               RETURNING l_success,g_bmfb4_d[l_ac1].bmfc015
            IF NOT l_success THEN
               LET g_bmfb4_d[l_ac1].bmfc015 = ' '
            END IF
            DISPLAY g_bmfb4_d[l_ac1].bmfc015 TO bmfc015              #顯示到畫面上
            
            #显示产品特征说明               
            CALL s_feature_description(g_bmfb4_d[l_ac1].bmfc005,g_bmfb4_d[l_ac1].bmfc015)
               RETURNING l_success,g_bmfb4_d[l_ac1].bmfc015_desc
            IF l_success THEN
               DISPLAY BY NAME g_bmfb4_d[l_ac1].bmfc015_desc
            END IF
   
            NEXT FIELD bmfc015 
            
            
         ON ACTION controlp INFIELD bmfc010
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.default1 = g_bmfb4_d[l_ac1].bmfc010
            CALL q_ooca001_1()                                       #呼叫開窗
            LET g_bmfb4_d[l_ac1].bmfc010 = g_qryparam.return1        #將開窗取得的值回傳到變數
            DISPLAY g_bmfb4_d[l_ac1].bmfc010 TO bmfc010              #顯示到畫面上
            NEXT FIELD bmfc010                                       #返回原欄位
            
         AFTER ROW
            LET l_ac1 = ARR_CURR()
            LET l_ac1_t = l_ac1
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmfb4_d[l_ac1].* = g_bmfb4_d_t.*
               END IF
               CLOSE abmt301_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            CLOSE abmt301_bcl4
            CALL s_transaction_end('Y','0')
 
         AFTER INPUT
 
      END INPUT ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL g_bmfb3_d.clear() 
      CALL g_bmfb4_d.clear() 
      LET g_bmfa_m.bmfastus = "N"
      INITIALIZE g_bmfa_m_t.* TO NULL
      LET g_bmfa_m.bmfastus = "N"
      LET g_bmfa_m.bmfadocdt = g_today
      LET g_bmfa_m.bmfa005 = cl_get_current()
      LET g_bmfa_m.bmfa006 = g_user
      LET g_bmfa_m.bmfa007 = g_dept
      CALL abmt301_desc()]]>
  </point>
  <point name="main.init" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_site_t = g_site
   IF NOT cl_null(g_argv[1]) THEN
      LET g_site = g_argv[1]
   END IF]]>
  </point>
  <point name="menu.batch" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF NOT cl_null(g_bmfa_m.bmfadocno) AND NOT cl_null(g_bmfa_m.bmfa005) THEN
                   IF g_bmfa_m.bmfastus = 'N' THEN
                      CALL abmt301_01(g_bmfa_m.bmfadocno,g_bmfa_m.bmfa005)
                      CALL abmt301_b_fill()
                   END IF
                END IF]]>
  </point>
  <point name="menu.character" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF g_flag = 'Y' THEN
                   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) AND g_bmfp2_d[l_ac].bmfb017 = 'Y' THEN
                      IF g_bmfa_m.bmfastus = 'Y' THEN
                         CALL abmt300_02('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','N')
                      ELSE
                         CALL abmt300_02('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','N')
                      END IF
                   END IF
                END IF
                LET g_action_choice=""]]>
  </point>
  <point name="menu.client" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               IF g_flag1 = 'Y' THEN
                   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002)  AND g_bmfb4_d[l_ac1].bmfc011 = 'Y' THEN
                      IF g_bmfa_m.bmfastus = 'Y' THEN
                         CALL abmt300_03('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','N')
                      ELSE
                         CALL abmt300_03('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','N')
                      END IF
                   END IF
                END IF
                LET g_action_choice=""]]>
  </point>
  <point name="menu.detail_show.page2.character" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#                IF g_flag = 'Y' THEN
                   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) AND g_bmfp2_d[l_ac].bmfb017 = 'Y' THEN
                      IF g_bmfa_m.bmfastus = 'Y' THEN
                         CALL abmt300_02('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','N')
                      ELSE
                         CALL abmt300_02('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','N')
                      END IF
                   END IF
#                END IF
                LET g_action_choice=""]]>
  </point>
  <point name="menu.detail_show.page2.plug" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#                IF g_flag = 'Y' THEN
                   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
                      IF g_bmfa_m.bmfastus = 'Y' THEN
                         CALL abmt300_01('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','N')
                      ELSE
                         CALL abmt300_01('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','N')
                      END IF
                   END IF
#                END IF
                LET g_action_choice=""]]>
  </point>
  <point name="menu.output" order="" ver="13" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[               #CALL abmr301_g01("bmfaent = "||g_enterprise||" AND bmfadocno = '"||g_bmfa_m.bmfadocno||"'")
               LET g_rep_wc = "bmfaent = "||g_enterprise||" AND bmfadocno = '"||g_bmfa_m.bmfadocno||"'" ]]>
  </point>
  <point name="menu.plug" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF g_flag = 'Y' THEN
                   IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) THEN
                      IF g_bmfa_m.bmfastus = 'Y' THEN
                         CALL abmt300_01('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','N')
                      ELSE
                         CALL abmt300_01('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','N')
                      END IF
                   END IF
                END IF
                LET g_action_choice=""]]>
  </point>
  <point name="menu.product" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF g_prog = 'abmt301' THEN
                   CALL cl_cmdrun('abmm200')
                END IF
                IF g_prog = 'abmt311' THEN
                   CALL cl_cmdrun('abmm210')
                END IF]]>
  </point>
  <point name="menu.take" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[                IF g_prog = 'abmt301' THEN
                   CALL cl_cmdrun('abmm201')
                END IF
                IF g_prog = 'abmt311' THEN
                   CALL cl_cmdrun('abmm211')
                END IF]]>
  </point>
  <point name="modify.before_input" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      #「D抽單 / R已拒絕」狀況碼更改資料後，需還原為「N未確認」
      IF g_bmfa_m.bmfastus MATCHES "[DR]" THEN 
         LET g_bmfa_m.bmfastus = "N"
      END IF
]]>
  </point>
  <point name="modify.body.a_fk_update2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         UPDATE bmfg_t
            SET bmfgdocno = g_bmfa_m.bmfadocno
          WHERE bmfgent = g_enterprise 
            AND bmfgsite = g_site
            AND bmfgdocno = g_bmfadocno_t
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = ""
            LET g_errparam.popup = TRUE
            CALL cl_err()
 
            CALL s_transaction_end('N','0')
            CONTINUE WHILE
         END IF 

         UPDATE bmfc_t
            SET bmfcdocno = g_bmfa_m.bmfadocno
          WHERE bmfcent = g_enterprise 
            AND bmfcsite = g_site
            AND bmfcdocno = g_bmfadocno_t
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = ""
            LET g_errparam.popup = TRUE
            CALL cl_err()
 
            CALL s_transaction_end('N','0')
            CONTINUE WHILE
         END IF]]>
  </point>
  <point name="send.before_send" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL s_abmt301_conf_chk(g_bmfa_m.bmfadocno,g_bmfa_m.bmfastus)
        RETURNING l_success
   IF NOT l_success THEN
      CLOSE abmt301_cl
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF
]]>
  </point>
  <point name="send.define" order="" ver="11" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_success  LIKE type_t.num5]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="9" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_bmfa_m.bmfastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF

]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("bmfadocdt",TRUE)]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("bmfb006",TRUE)
   CALL cl_set_comp_entry("bmfb007",TRUE)
   CALL cl_set_comp_entry("bmfb015",TRUE)
   CALL cl_set_comp_entry("bmfb008,bmfb009,bmfb010,bmfb020",TRUE)]]>
  </point>
  <point name="set_no_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL cl_set_comp_entry("bmfadocdt",FALSE)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="12" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_bmfp2_d[l_ac].bmfb003 <> '2' THEN
      LET g_bmfp2_d[l_ac].bmfb006 = ""
      LET g_bmfp2_d[l_ac].bmfb006_desc = ""
      CALL cl_set_comp_entry("bmfb006",FALSE)
   END IF
   IF g_bmfp2_d[l_ac].bmfb003 <> '1' THEN
      CALL cl_set_comp_entry("bmfb020",FALSE)
   END IF   
   IF g_bmfp2_d[l_ac].bmfb003 <> '2' OR cl_null(g_bmfp2_d[l_ac].bmfb006) THEN
      LET g_bmfp2_d[l_ac].bmfb007 = ""
      CALL cl_set_comp_entry("bmfb007",FALSE)
   END IF 
   IF g_bmfp2_d[l_ac].bmfb014  <> 'Y' THEN
      LET g_bmfp2_d[l_ac].bmfb015 = ""
      LET g_bmfp2_d[l_ac].bmfb015_desc = ""
      CALL cl_set_comp_entry("bmfb015",FALSE)
   END IF
   IF g_bmfp2_d[l_ac].bmfb003 <> '1' THEN
      CALL cl_set_comp_entry("bmfb008,bmfb009,bmfb010",FALSE)
   END IF   ]]>
  </point>
  <point name="show.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_ac1_t = l_ac1
   CALL abmt301_b_fill_1()
   LET l_ac1 = l_ac1_t]]>
  </point>
  <point name="show.body.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL s_desc_get_item_desc(g_bmfp_d[l_ac].bmfp002) RETURNING g_bmfp_d[l_ac].bmfp002_desc,g_bmfp_d[l_ac].bmfp002_desc1
            DISPLAY BY NAME g_bmfp_d[l_ac].bmfp002_desc,g_bmfp_d[l_ac].bmfp002_desc1
]]>
  </point>
  <point name="show.body2.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CALL s_desc_get_item_desc(g_bmfp2_d[l_ac].bmfb005) RETURNING g_bmfp2_d[l_ac].bmfb005_desc,g_bmfp2_d[l_ac].bmfb005_desc1
      DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb005_desc,g_bmfp2_d[l_ac].bmfb005_desc1
      
      CALL s_desc_get_item_desc(g_bmfp2_d[l_ac].bmfb006) RETURNING g_bmfp2_d[l_ac].bmfb006_desc,g_bmfp2_d[l_ac].bmfb006_desc1
      DISPLAY BY NAME g_bmfp2_d[l_ac].bmfb006_desc,g_bmfp2_d[l_ac].bmfb006_desc1
      ]]>
  </point>
  <point name="show.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_ac1_t   LIKE type_t.num5]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_bmfa_m.bmfamodid_desc
            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_bmfa_m.bmfacnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_bmfa_m.bmfacnfid_desc = g_rtn_fields[1]
            DISPLAY BY NAME g_bmfa_m.bmfacnfid_desc
            
            #CALL abmt301_desc()
            
           IF NOT cl_null(g_bmfa_m.bmfadocno) THEN
               CALL s_aooi360_sel('6',g_bmfa_m.bmfadocno,'','','','','','','','','','1') RETURNING l_success,g_bmfa_m.ooff013
               DISPLAY BY NAME g_bmfa_m.ooff013
            END IF
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF]]>
  </point>
  <point name="statechange.after" order="" ver="6" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("modify,delete,insert,modify_detail", TRUE)
   IF g_bmfa_m.bmfastus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF]]>
  </point>
  <point name="statechange.b_update" order="" ver="5" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF lc_state = 'N' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'abm-00027'
      LET g_errparam.extend = g_bmfa_m.bmfastus
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF
   LET l_success = TRUE
   CALL s_transaction_begin()
   IF lc_state = 'Y' THEN
      CALL s_abmt301_conf_chk(g_bmfa_m.bmfadocno,g_bmfa_m.bmfastus) RETURNING l_success
      IF NOT l_success THEN
         CALL s_transaction_end('N','0')
         RETURN
      ELSE
         IF NOT cl_ask_confirm('aim-00108') THEN
            CALL s_transaction_end('N','0')
            RETURN
         ELSE
            CALL s_abmt301_conf_upd(g_bmfa_m.bmfadocno,g_prog) RETURNING l_success
            IF NOT l_success THEN
               CALL s_transaction_end('N','0')
               RETURN
            END IF
         END IF
      END IF
   END IF ]]>
  </point>
  <point name="statechange.before" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_bmfa_m.bmfastus MATCHES '[YX]' THEN
      RETURN
   END IF]]>
  </point>
  <point name="statechange.before_menu" order="" ver="4" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#      CALL cl_set_act_visible("open,draw_out,send", FALSE)
#      IF g_bmfa_m.bmfastus = 'Y' THEN
#         CALL cl_set_act_visible("invalid,draw_out,send,rejection,signing,withdraw", FALSE)
#      END IF
      CALL cl_set_act_visible("signing,withdraw",FALSE)
      CALL cl_set_act_visible("unconfirmed,invalid,confirmed",TRUE)
      CALL cl_set_act_visible("closed",FALSE)

      CASE  g_bmfa_m.bmfastus
         WHEN "N"  
            CALL cl_set_act_visible("unconfirmed,hold",FALSE)
            #需提交至BPM時，則顯示「提交」功能並隱藏「確認」功能
            IF cl_bpm_chk() THEN
                CALL cl_set_act_visible("signing",TRUE)
                CALL cl_set_act_visible("confirmed",FALSE)
            END IF
 
         WHEN "R"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE)

         WHEN "D"   #保留修改的功能(如作廢)，隱藏其他應用功能(如: 確認、未確認、留置、過帳…)
            CALL cl_set_act_visible("confirmed,unconfirmed,hold",FALSE) 
          
         WHEN "X"
            CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)

         WHEN "Y"
            CALL cl_set_act_visible("invalid,confirmed,hold",FALSE)
         
         WHEN "W"    #只能顯示抽單;其餘應用功能皆隱藏
             CALL cl_set_act_visible("withdraw",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,confirmed,hold",FALSE)
         
         WHEN "A"     #只能顯示確認; 其餘應用功能皆隱藏
             CALL cl_set_act_visible("confirmed ",TRUE)  
             CALL cl_set_act_visible("unconfirmed,invalid,hold",FALSE)

      END CASE
      ]]>
  </point>
  <point name="statechange.more_control" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="ui_detailshow.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)
   END IF ]]>
  </point>
  <point name="ui_dialog.before_dialog2" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #若執行集團級程式，則不開放切換營運中心的功能
            IF g_prog = 'abmt301' THEN      
               CALL cl_set_act_visible("logistics", FALSE)
            ELSE
               CALL cl_set_act_visible("logistics", TRUE)
            END IF]]>
  </point>
  <point name="ui_dialog.body1.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      ]]>
  </point>
  <point name="ui_dialog.body1.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_flag = 'N'
               LET g_flag1 = 'N']]>
  </point>
  <point name="ui_dialog.body2.action" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            AFTER DISPLAY
               LET g_flag = 'N'
               LET g_flag1 = 'N']]>
  </point>
  <point name="ui_dialog.body2.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               LET g_flag = 'Y'
               LET g_flag1 = 'N'
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               CALL abmt301_b_fill_1()
               DISPLAY ARRAY g_bmfb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b1)
                  BEFORE DISPLAY
                    EXIT DISPLAY
               END DISPLAY
               DISPLAY ARRAY g_bmfb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b1)
                   BEFORE DISPLAY
                    EXIT DISPLAY
               END DISPLAY]]>
  </point>
  <point name="ui_dialog.more_displayarray" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         DISPLAY ARRAY g_bmfb3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b1)  
         
            BEFORE ROW
               CALL abmt301_idx_chk()
               LET g_flag = 'N' 
               LET g_flag1 = 'N'   
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac1 = DIALOG.getCurrentRow("s_detail3")
               CALL abmt301_idx_chk()
               LET g_current_page = 3
               
         END DISPLAY
         
         DISPLAY ARRAY g_bmfb4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b1)  
         
            BEFORE ROW
               CALL abmt301_idx_chk()
               LET g_flag = 'N' 
               LET g_flag1 = 'Y'   
               
            BEFORE DISPLAY
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               LET l_ac1 = DIALOG.getCurrentRow("s_detail3")
               CALL abmt301_idx_chk()
               LET g_current_page = 4
               
            ON ACTION client

               LET g_action_choice="client"
               IF cl_auth_chk_act("client") THEN 
#                  IF g_flag1 = 'Y' THEN
                      IF NOT cl_null(g_bmfp2_d[l_ac].bmfb002) AND g_bmfb4_d[l_ac1].bmfc011 = 'Y' THEN
                         IF g_bmfa_m.bmfastus = 'Y' THEN
                            CALL abmt300_03('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'N','N')
                         ELSE
                            CALL abmt300_03('2',g_bmfa_m.bmfadocno,'',g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010,'Y','N')
                         END IF
                      END IF
#                   END IF
                   LET g_action_choice=""
                   EXIT DIALOG
               END IF   
               
         END DISPLAY]]>
  </point>
  <section id="abmt301.action_chk" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION abmt301_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.b_fill" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION abmt301_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_bmfp_d.clear()    #g_bmfp_d 單頭及單身 
   CALL g_bmfp2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF abmt301_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE bmfp002,bmfp003,bmfp004,bmfp005,bmfp006,bmfp007 ,t1.imaal003 ,t2.oocql004 , 
             t3.oocql004 FROM bmfp_t",   
                     " INNER JOIN bmfa_t ON bmfadocno = bmfpdocno ",
 
                     #"",
                     
                     "",
                                    " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=bmfp002 AND t1.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t2 ON t2.oocqlent='"||g_enterprise||"' AND t2.oocql001='210' AND t2.oocql002=bmfp004 AND t2.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t3 ON t3.oocqlent='"||g_enterprise||"' AND t3.oocql001='210' AND t3.oocql002=bmfp005 AND t3.oocql003='"||g_dlang||"' ",
 
                     " WHERE bmfpent=? AND bmfpsite=? AND bmfpdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY bmfp_t.bmfp002,bmfp_t.bmfp003"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abmt301_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR abmt301_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise, g_site,g_bmfa_m.bmfadocno
                                               
      FOREACH b_fill_cs INTO g_bmfp_d[l_ac].bmfp002,g_bmfp_d[l_ac].bmfp003,g_bmfp_d[l_ac].bmfp004,g_bmfp_d[l_ac].bmfp005, 
          g_bmfp_d[l_ac].bmfp006,g_bmfp_d[l_ac].bmfp007,g_bmfp_d[l_ac].bmfp002_desc,g_bmfp_d[l_ac].bmfp004_desc, 
          g_bmfp_d[l_ac].bmfp005_desc
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
   #判斷是否填充
   IF abmt301_fill_chk(2) THEN
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE bmfb002,bmfb003,bmfb005,bmfb006,bmfb007,bmfb008,bmfb009,bmfb010, 
             bmfb011,bmfb012,bmfb013,bmfb014,bmfb015,bmfb016,bmfb017,bmfb018,bmfb019,bmfb020 ,t4.imaal003 , 
             t5.imaal003 ,t6.oocql004 ,t7.oocql004 ,t8.bmze002 FROM bmfb_t",   
                     " INNER JOIN bmfa_t ON bmfadocno = bmfbdocno ",
 
                     "",
                     
                                    " LEFT JOIN imaal_t t4 ON t4.imaalent='"||g_enterprise||"' AND t4.imaal001=bmfb005 AND t4.imaal002='"||g_dlang||"' ",
               " LEFT JOIN imaal_t t5 ON t5.imaalent='"||g_enterprise||"' AND t5.imaal001=bmfb006 AND t5.imaal002='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t6 ON t6.oocqlent='"||g_enterprise||"' AND t6.oocql001='215' AND t6.oocql002=bmfb008 AND t6.oocql003='"||g_dlang||"' ",
               " LEFT JOIN oocql_t t7 ON t7.oocqlent='"||g_enterprise||"' AND t7.oocql001='221' AND t7.oocql002=bmfb009 AND t7.oocql003='"||g_dlang||"' ",
               " LEFT JOIN bmze_t t8 ON t8.bmzeent='"||g_enterprise||"' AND t8.bmze001=bmfb015  ",
 
                     " WHERE bmfbent=? AND bmfbsite=? AND bmfbdocno=?"   
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body2.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         #子單身的WC
         
         
         LET g_sql = g_sql, " ORDER BY bmfb_t.bmfb002"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql2"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE abmt301_pb2 FROM g_sql
         DECLARE b_fill_cs2 CURSOR FOR abmt301_pb2
      END IF
    
      LET l_ac = 1
      
      OPEN b_fill_cs2 USING g_enterprise, g_site,g_bmfa_m.bmfadocno
                                               
      FOREACH b_fill_cs2 INTO g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005, 
          g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb007,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009, 
          g_bmfp2_d[l_ac].bmfb010,g_bmfp2_d[l_ac].bmfb011,g_bmfp2_d[l_ac].bmfb012,g_bmfp2_d[l_ac].bmfb013, 
          g_bmfp2_d[l_ac].bmfb014,g_bmfp2_d[l_ac].bmfb015,g_bmfp2_d[l_ac].bmfb016,g_bmfp2_d[l_ac].bmfb017, 
          g_bmfp2_d[l_ac].bmfb018,g_bmfp2_d[l_ac].bmfb019,g_bmfp2_d[l_ac].bmfb020,g_bmfp2_d[l_ac].bmfb005_desc, 
          g_bmfp2_d[l_ac].bmfb006_desc,g_bmfp2_d[l_ac].bmfb008_desc,g_bmfp2_d[l_ac].bmfb009_desc,g_bmfp2_d[l_ac].bmfb015_desc 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill2.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = l_ac
            LET g_errparam.code   = 9035 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
         
      END FOREACH
   END IF
 
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_bmfp_d.deleteElement(g_bmfp_d.getLength())
   CALL g_bmfp2_d.deleteElement(g_bmfp2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE abmt301_pb
   FREE abmt301_pb2
 
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_bmfp_d.getLength()
      LET g_bmfp_d_mask_o[l_ac].* =  g_bmfp_d[l_ac].*
      CALL abmt301_bmfp_t_mask()
      LET g_bmfp_d_mask_n[l_ac].* =  g_bmfp_d[l_ac].*
   END FOR
   
   LET g_bmfp2_d_mask_o.* =  g_bmfp2_d.*
   FOR l_ac = 1 TO g_bmfp2_d.getLength()
      LET g_bmfp2_d_mask_o[l_ac].* =  g_bmfp2_d[l_ac].*
      CALL abmt301_bmfb_t_mask()
      LET g_bmfp2_d_mask_n[l_ac].* =  g_bmfp2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.b_fill2" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION abmt301_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
 
      
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL abmt301_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.browser_fill" ver="30" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION abmt301_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE bmfadocno ",
                      " FROM bmfa_t ",
                      " ",
                      " LEFT JOIN bmfp_t ON bmfpent = bmfaent AND bmfpsite = bmfasite AND bmfadocno = bmfpdocno ", "  ",
                      #add-point:browser_fill段sql(bmfp_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
                      " LEFT JOIN bmfb_t ON bmfbent = bmfaent AND bmfbsite = bmfasite AND bmfadocno = bmfbdocno", "  ",
                      #add-point:browser_fill段sql(bmfb_t1)
                      {<point name="browser_fill.cnt.join.bmfb_t1"/>}
                      #end add-point
 
 
 
                      " ", 
                      " ", 
                      " WHERE bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND bmfpent = '" ||g_enterprise|| "' AND bmfpsite = '" ||g_site|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("bmfa_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE bmfadocno ",
                      " FROM bmfa_t ", 
                      "  ",
                      "  ",
                      " WHERE bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("bmfa_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_bmfa_m.* TO NULL
      CALL g_bmfp_d.clear()        
      CALL g_bmfp2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.bmfadocno,t0.bmfadocdt,t0.bmfa005,t0.bmfa006,t0.bmfa007,t0.bmfa008 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.bmfastus,t0.bmfadocno,t0.bmfadocdt,t0.bmfa005,t0.bmfa006,t0.bmfa007, 
       t0.bmfa008 ",
               " FROM bmfa_t t0",
               "  ",
               "  LEFT JOIN bmfp_t ON bmfpent = bmfaent AND bmfpsite = bmfasite AND bmfadocno = bmfpdocno ", "  ", 
               #add-point:browser_fill段sql(bmfp_t1)
               {<point name="browser_fill.join.bmfp_t1"/>}
               #end add-point
               "  LEFT JOIN bmfb_t ON bmfbent = bmfaent AND bmfbsite = bmfasite AND bmfadocno = bmfbdocno", "  ", 
               #add-point:browser_fill段sql(bmfb_t1)
               {<point name="browser_fill.join.bmfb_t1"/>}
               #end add-point
 
 
 
               "  ",
               
               " WHERE t0.bmfaent = '" ||g_enterprise|| "' AND t0.bmfasite = '" ||g_site|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("bmfa_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY bmfadocno ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"bmfa_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_bmfadocno,g_browser[g_cnt].b_bmfadocdt, 
       g_browser[g_cnt].b_bmfa005,g_browser[g_cnt].b_bmfa006,g_browser[g_cnt].b_bmfa007,g_browser[g_cnt].b_bmfa008 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL abmt301_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "D"
            LET g_browser[g_cnt].b_statepic = "stus/16/withdraw.png"
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "R"
            LET g_browser[g_cnt].b_statepic = "stus/16/rejection.png"
         WHEN "W"
            LET g_browser[g_cnt].b_statepic = "stus/16/signing.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "A"
            LET g_browser[g_cnt].b_statepic = "stus/16/approved.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_bmfadocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.construct" ver="13" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION abmt301_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_bmfa_m.* TO NULL
   CALL g_bmfp_d.clear()        
   CALL g_bmfp2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
   INITIALIZE g_wc2_table2 TO NULL
 
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON bmfadocno,bmfadocdt,bmfa005,bmfa006,bmfa007,bmfa008,ooff013,bmfastus, 
          bmfacrtid,bmfacrtdp,bmfacrtdt,bmfaownid,bmfaowndp,bmfamodid,bmfamoddt,bmfacnfid,bmfacnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<bmfacrtdt>>----
         AFTER FIELD bmfacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<bmfamoddt>>----
         AFTER FIELD bmfamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmfacnfdt>>----
         AFTER FIELD bmfacnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<bmfapstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.bmfadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfadocno
            #add-point:ON ACTION controlp INFIELD bmfadocno
            {<point name="construct.c.bmfadocno" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfadocno
            #add-point:BEFORE FIELD bmfadocno
            {<point name="construct.b.bmfadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfadocno
            
            #add-point:AFTER FIELD bmfadocno
            {<point name="construct.a.bmfadocno" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfadocdt
            #add-point:BEFORE FIELD bmfadocdt
            {<point name="construct.b.bmfadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfadocdt
            
            #add-point:AFTER FIELD bmfadocdt
            {<point name="construct.a.bmfadocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfadocdt
            #add-point:ON ACTION controlp INFIELD bmfadocdt
            {<point name="construct.c.bmfadocdt" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa005
            #add-point:BEFORE FIELD bmfa005
            {<point name="construct.b.bmfa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa005
            
            #add-point:AFTER FIELD bmfa005
            {<point name="construct.a.bmfa005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa005
            #add-point:ON ACTION controlp INFIELD bmfa005
            {<point name="construct.c.bmfa005" />}
            #END add-point
 
         #Ctrlp:construct.c.bmfa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa006
            #add-point:ON ACTION controlp INFIELD bmfa006
            {<point name="construct.c.bmfa006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa006
            #add-point:BEFORE FIELD bmfa006
            {<point name="construct.b.bmfa006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa006
            
            #add-point:AFTER FIELD bmfa006
            {<point name="construct.a.bmfa006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa007
            #add-point:ON ACTION controlp INFIELD bmfa007
            {<point name="construct.c.bmfa007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa007
            #add-point:BEFORE FIELD bmfa007
            {<point name="construct.b.bmfa007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa007
            
            #add-point:AFTER FIELD bmfa007
            {<point name="construct.a.bmfa007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa008
            #add-point:ON ACTION controlp INFIELD bmfa008
            {<point name="construct.c.bmfa008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa008
            #add-point:BEFORE FIELD bmfa008
            {<point name="construct.b.bmfa008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa008
            
            #add-point:AFTER FIELD bmfa008
            {<point name="construct.a.bmfa008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
            {<point name="construct.b.ooff013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
            {<point name="construct.a.ooff013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.ooff013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
            {<point name="construct.c.ooff013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfastus
            #add-point:BEFORE FIELD bmfastus
            {<point name="construct.b.bmfastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfastus
            
            #add-point:AFTER FIELD bmfastus
            {<point name="construct.a.bmfastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfastus
            #add-point:ON ACTION controlp INFIELD bmfastus
            {<point name="construct.c.bmfastus" />}
            #END add-point
 
         #Ctrlp:construct.c.bmfacrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfacrtid
            #add-point:ON ACTION controlp INFIELD bmfacrtid
            {<point name="construct.c.bmfacrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfacrtid
            #add-point:BEFORE FIELD bmfacrtid
            {<point name="construct.b.bmfacrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfacrtid
            
            #add-point:AFTER FIELD bmfacrtid
            {<point name="construct.a.bmfacrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfacrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfacrtdp
            #add-point:ON ACTION controlp INFIELD bmfacrtdp
            {<point name="construct.c.bmfacrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfacrtdp
            #add-point:BEFORE FIELD bmfacrtdp
            {<point name="construct.b.bmfacrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfacrtdp
            
            #add-point:AFTER FIELD bmfacrtdp
            {<point name="construct.a.bmfacrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfacrtdt
            #add-point:BEFORE FIELD bmfacrtdt
            {<point name="construct.b.bmfacrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmfaownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfaownid
            #add-point:ON ACTION controlp INFIELD bmfaownid
            {<point name="construct.c.bmfaownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfaownid
            #add-point:BEFORE FIELD bmfaownid
            {<point name="construct.b.bmfaownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfaownid
            
            #add-point:AFTER FIELD bmfaownid
            {<point name="construct.a.bmfaownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfaowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfaowndp
            #add-point:ON ACTION controlp INFIELD bmfaowndp
            {<point name="construct.c.bmfaowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfaowndp
            #add-point:BEFORE FIELD bmfaowndp
            {<point name="construct.b.bmfaowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfaowndp
            
            #add-point:AFTER FIELD bmfaowndp
            {<point name="construct.a.bmfaowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.bmfamodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfamodid
            #add-point:ON ACTION controlp INFIELD bmfamodid
            {<point name="construct.c.bmfamodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfamodid
            #add-point:BEFORE FIELD bmfamodid
            {<point name="construct.b.bmfamodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfamodid
            
            #add-point:AFTER FIELD bmfamodid
            {<point name="construct.a.bmfamodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfamoddt
            #add-point:BEFORE FIELD bmfamoddt
            {<point name="construct.b.bmfamoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.bmfacnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfacnfid
            #add-point:ON ACTION controlp INFIELD bmfacnfid
            {<point name="construct.c.bmfacnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfacnfid
            #add-point:BEFORE FIELD bmfacnfid
            {<point name="construct.b.bmfacnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfacnfid
            
            #add-point:AFTER FIELD bmfacnfid
            {<point name="construct.a.bmfacnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfacnfdt
            #add-point:BEFORE FIELD bmfacnfdt
            {<point name="construct.b.bmfacnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON bmfp002,bmfp003,bmfp004,bmfp005,bmfp006,bmfp007
           FROM s_detail1[1].bmfp002,s_detail1[1].bmfp003,s_detail1[1].bmfp004,s_detail1[1].bmfp005, 
               s_detail1[1].bmfp006,s_detail1[1].bmfp007
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.bmfp002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp002
            #add-point:ON ACTION controlp INFIELD bmfp002
            {<point name="construct.c.page1.bmfp002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp002
            #add-point:BEFORE FIELD bmfp002
            {<point name="construct.b.page1.bmfp002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp002
            
            #add-point:AFTER FIELD bmfp002
            {<point name="construct.a.page1.bmfp002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmfp003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp003
            #add-point:ON ACTION controlp INFIELD bmfp003
            {<point name="construct.c.page1.bmfp003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp003
            #add-point:BEFORE FIELD bmfp003
            {<point name="construct.b.page1.bmfp003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp003
            
            #add-point:AFTER FIELD bmfp003
            {<point name="construct.a.page1.bmfp003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmfp004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp004
            #add-point:ON ACTION controlp INFIELD bmfp004
            {<point name="construct.c.page1.bmfp004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp004
            #add-point:BEFORE FIELD bmfp004
            {<point name="construct.b.page1.bmfp004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp004
            
            #add-point:AFTER FIELD bmfp004
            {<point name="construct.a.page1.bmfp004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmfp005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp005
            #add-point:ON ACTION controlp INFIELD bmfp005
            {<point name="construct.c.page1.bmfp005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp005
            #add-point:BEFORE FIELD bmfp005
            {<point name="construct.b.page1.bmfp005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp005
            
            #add-point:AFTER FIELD bmfp005
            {<point name="construct.a.page1.bmfp005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp006
            #add-point:BEFORE FIELD bmfp006
            {<point name="construct.b.page1.bmfp006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp006
            
            #add-point:AFTER FIELD bmfp006
            {<point name="construct.a.page1.bmfp006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmfp006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp006
            #add-point:ON ACTION controlp INFIELD bmfp006
            {<point name="construct.c.page1.bmfp006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp007
            #add-point:BEFORE FIELD bmfp007
            {<point name="construct.b.page1.bmfp007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp007
            
            #add-point:AFTER FIELD bmfp007
            {<point name="construct.a.page1.bmfp007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.bmfp007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp007
            #add-point:ON ACTION controlp INFIELD bmfp007
            {<point name="construct.c.page1.bmfp007" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
      CONSTRUCT g_wc2_table2 ON bmfb002,bmfb003,bmfb005,bmfb006,bmfb007,bmfb008,bmfb009,bmfb010,bmfb011, 
          bmfb012,bmfb013,bmfb014,bmfb015,bmfb016,bmfb017,bmfb018,bmfb019,bmfb020,ooff013
           FROM s_detail2[1].bmfb002,s_detail2[1].bmfb003,s_detail2[1].bmfb005,s_detail2[1].bmfb006, 
               s_detail2[1].bmfb007,s_detail2[1].bmfb008,s_detail2[1].bmfb009,s_detail2[1].bmfb010,s_detail2[1].bmfb011, 
               s_detail2[1].bmfb012,s_detail2[1].bmfb013,s_detail2[1].bmfb014,s_detail2[1].bmfb015,s_detail2[1].bmfb016, 
               s_detail2[1].bmfb017,s_detail2[1].bmfb018,s_detail2[1].bmfb019,s_detail2[1].bmfb020,s_detail2[1].ooff013 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb002
            #add-point:BEFORE FIELD bmfb002
            {<point name="construct.b.page2.bmfb002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb002
            
            #add-point:AFTER FIELD bmfb002
            {<point name="construct.a.page2.bmfb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb002
            #add-point:ON ACTION controlp INFIELD bmfb002
            {<point name="construct.c.page2.bmfb002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb003
            #add-point:BEFORE FIELD bmfb003
            {<point name="construct.b.page2.bmfb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb003
            
            #add-point:AFTER FIELD bmfb003
            {<point name="construct.a.page2.bmfb003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb003
            #add-point:ON ACTION controlp INFIELD bmfb003
            {<point name="construct.c.page2.bmfb003" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.bmfb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb005
            #add-point:ON ACTION controlp INFIELD bmfb005
            {<point name="construct.c.page2.bmfb005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb005
            #add-point:BEFORE FIELD bmfb005
            {<point name="construct.b.page2.bmfb005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb005
            
            #add-point:AFTER FIELD bmfb005
            {<point name="construct.a.page2.bmfb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb006
            #add-point:ON ACTION controlp INFIELD bmfb006
            {<point name="construct.c.page2.bmfb006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb006
            #add-point:BEFORE FIELD bmfb006
            {<point name="construct.b.page2.bmfb006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb006
            
            #add-point:AFTER FIELD bmfb006
            {<point name="construct.a.page2.bmfb006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb007
            #add-point:BEFORE FIELD bmfb007
            {<point name="construct.b.page2.bmfb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb007
            
            #add-point:AFTER FIELD bmfb007
            {<point name="construct.a.page2.bmfb007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb007
            #add-point:ON ACTION controlp INFIELD bmfb007
            {<point name="construct.c.page2.bmfb007" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.bmfb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb008
            #add-point:ON ACTION controlp INFIELD bmfb008
            {<point name="construct.c.page2.bmfb008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb008
            #add-point:BEFORE FIELD bmfb008
            {<point name="construct.b.page2.bmfb008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb008
            
            #add-point:AFTER FIELD bmfb008
            {<point name="construct.a.page2.bmfb008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb009
            #add-point:ON ACTION controlp INFIELD bmfb009
            {<point name="construct.c.page2.bmfb009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb009
            #add-point:BEFORE FIELD bmfb009
            {<point name="construct.b.page2.bmfb009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb009
            
            #add-point:AFTER FIELD bmfb009
            {<point name="construct.a.page2.bmfb009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb010
            #add-point:BEFORE FIELD bmfb010
            {<point name="construct.b.page2.bmfb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb010
            
            #add-point:AFTER FIELD bmfb010
            {<point name="construct.a.page2.bmfb010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb010
            #add-point:ON ACTION controlp INFIELD bmfb010
            {<point name="construct.c.page2.bmfb010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb011
            #add-point:BEFORE FIELD bmfb011
            {<point name="construct.b.page2.bmfb011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb011
            
            #add-point:AFTER FIELD bmfb011
            {<point name="construct.a.page2.bmfb011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb011
            #add-point:ON ACTION controlp INFIELD bmfb011
            {<point name="construct.c.page2.bmfb011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb012
            #add-point:BEFORE FIELD bmfb012
            {<point name="construct.b.page2.bmfb012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb012
            
            #add-point:AFTER FIELD bmfb012
            {<point name="construct.a.page2.bmfb012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb012
            #add-point:ON ACTION controlp INFIELD bmfb012
            {<point name="construct.c.page2.bmfb012" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.bmfb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb013
            #add-point:ON ACTION controlp INFIELD bmfb013
            {<point name="construct.c.page2.bmfb013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb013
            #add-point:BEFORE FIELD bmfb013
            {<point name="construct.b.page2.bmfb013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb013
            
            #add-point:AFTER FIELD bmfb013
            {<point name="construct.a.page2.bmfb013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb014
            #add-point:BEFORE FIELD bmfb014
            {<point name="construct.b.page2.bmfb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb014
            
            #add-point:AFTER FIELD bmfb014
            {<point name="construct.a.page2.bmfb014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb014
            #add-point:ON ACTION controlp INFIELD bmfb014
            {<point name="construct.c.page2.bmfb014" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.bmfb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb015
            #add-point:ON ACTION controlp INFIELD bmfb015
            {<point name="construct.c.page2.bmfb015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb015
            #add-point:BEFORE FIELD bmfb015
            {<point name="construct.b.page2.bmfb015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb015
            
            #add-point:AFTER FIELD bmfb015
            {<point name="construct.a.page2.bmfb015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb016
            #add-point:BEFORE FIELD bmfb016
            {<point name="construct.b.page2.bmfb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb016
            
            #add-point:AFTER FIELD bmfb016
            {<point name="construct.a.page2.bmfb016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb016
            #add-point:ON ACTION controlp INFIELD bmfb016
            {<point name="construct.c.page2.bmfb016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb017
            #add-point:BEFORE FIELD bmfb017
            {<point name="construct.b.page2.bmfb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb017
            
            #add-point:AFTER FIELD bmfb017
            {<point name="construct.a.page2.bmfb017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb017
            #add-point:ON ACTION controlp INFIELD bmfb017
            {<point name="construct.c.page2.bmfb017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb018
            #add-point:BEFORE FIELD bmfb018
            {<point name="construct.b.page2.bmfb018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb018
            
            #add-point:AFTER FIELD bmfb018
            {<point name="construct.a.page2.bmfb018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb018
            #add-point:ON ACTION controlp INFIELD bmfb018
            {<point name="construct.c.page2.bmfb018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb019
            #add-point:BEFORE FIELD bmfb019
            {<point name="construct.b.page2.bmfb019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb019
            
            #add-point:AFTER FIELD bmfb019
            {<point name="construct.a.page2.bmfb019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb019
            #add-point:ON ACTION controlp INFIELD bmfb019
            {<point name="construct.c.page2.bmfb019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb020
            #add-point:BEFORE FIELD bmfb020
            {<point name="construct.b.page2.bmfb020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb020
            
            #add-point:AFTER FIELD bmfb020
            {<point name="construct.a.page2.bmfb020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.bmfb020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb020
            #add-point:ON ACTION controlp INFIELD bmfb020
            {<point name="construct.c.page2.bmfb020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
            {<point name="construct.b.page2.ooff013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
            {<point name="construct.a.page2.ooff013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.ooff013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
            {<point name="construct.c.page2.ooff013" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
            INITIALIZE g_wc2_table2 TO NULL
 
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "bmfa_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "bmfp_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "bmfb_t" 
                     LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.default_search" ver="12" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION abmt301_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " bmfadocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
         INITIALIZE g_wc2_table2 TO NULL
 
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "bmfa_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmfp_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "bmfb_t" 
                  LET g_wc2_table2 = la_wc[li_idx].wc
 
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
            OR NOT cl_null(g_wc2_table2)
 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
            IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
            END IF
 
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.delete" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION abmt301_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_bmfa_m.bmfadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN abmt301_cl USING g_enterprise, g_site,g_bmfa_m.bmfadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmt301_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE abmt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt301_master_referesh USING g_site,g_bmfa_m.bmfadocno INTO g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt, 
       g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt,g_bmfa_m.bmfa006_desc,g_bmfa_m.bmfa007_desc, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp_desc, 
       g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfacnfid_desc
   
   #檢查是否允許此動作
   IF NOT abmt301_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_bmfa_m_mask_o.* =  g_bmfa_m.*
   CALL abmt301_bmfa_t_mask()
   LET g_bmfa_m_mask_n.* =  g_bmfa_m.*
   
   CALL abmt301_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL abmt301_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
 
      DELETE FROM bmfa_t
       WHERE bmfaent = g_enterprise AND bmfasite = g_site AND bmfadocno = g_bmfa_m.bmfadocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_bmfa_m.bmfadocno 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM bmfp_t
       WHERE bmfpent = g_enterprise AND bmfpsite = g_site AND bmfpdocno = g_bmfa_m.bmfadocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmfp_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM bmfb_t
       WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND
             bmfbdocno = g_bmfa_m.bmfadocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmfb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE abmt301_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_bmfp_d.clear() 
      CALL g_bmfp2_d.clear()       
 
     
      CALL abmt301_ui_browser_refresh()  
      #CALL abmt301_ui_headershow()  
      #CALL abmt301_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL abmt301_browser_fill("")
         CALL abmt301_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE abmt301_cl
 
   #功能已完成,通報訊息中心
   CALL abmt301_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="abmt301.delete_b" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION abmt301_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM bmfp_t
       WHERE bmfpent = g_enterprise AND bmfpsite = g_site AND
         bmfpdocno = ps_keys_bak[1] AND bmfp002 = ps_keys_bak[2] AND bmfp003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bmfp_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM bmfb_t
       WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND
             bmfbdocno = ps_keys_bak[1] AND bmfb002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmfb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_bmfp2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.description" ver="26" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:13,PR版次:13) Build-000553
#+ 
#+ Filename...: abmt301
#+ Description: 集團研發多主件ECN維護作業
#+ Creator....: 02482(2013-08-21 10:18:38)
#+ Modifier...: 01534(2015-06-26 11:24:36) -SD/PR-
]]>
  </section>
  <section id="abmt301.detail_reproduce" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION abmt301_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE bmfp_t.*
   DEFINE l_detail2    RECORD LIKE bmfb_t.*
 
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE abmt301_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE abmt301_detail AS ",
                "SELECT * FROM bmfp_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt301_detail SELECT * FROM bmfp_t 
                                         WHERE bmfpent = g_enterprise AND bmfpsite = g_site AND bmfpdocno = g_bmfadocno_t
 
   
   #將key修正為調整後   
   UPDATE abmt301_detail 
      #更新key欄位
      SET bmfpdocno = g_bmfa_m.bmfadocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO bmfp_t SELECT * FROM abmt301_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt301_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE abmt301_detail AS ",
      "SELECT * FROM bmfb_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO abmt301_detail SELECT * FROM bmfb_t
                                         WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND bmfbdocno = g_bmfadocno_t
 
 
   #將key修正為調整後   
   UPDATE abmt301_detail SET bmfbdocno = g_bmfa_m.bmfadocno
 
  
   #將資料塞回原table   
   INSERT INTO bmfb_t SELECT * FROM abmt301_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE abmt301_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.detail_show" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION abmt301_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.fetch" ver="19" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION abmt301_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_bmfa_m.bmfadocno = g_browser[g_current_idx].b_bmfadocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE abmt301_master_referesh USING g_site,g_bmfa_m.bmfadocno INTO g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt, 
       g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt,g_bmfa_m.bmfa006_desc,g_bmfa_m.bmfa007_desc, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp_desc, 
       g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfacnfid_desc
   
   #遮罩相關處理
   LET g_bmfa_m_mask_o.* =  g_bmfa_m.*
   CALL abmt301_bmfa_t_mask()
   LET g_bmfa_m_mask_n.* =  g_bmfa_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt301_set_act_visible()   
   CALL abmt301_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_bmfa_m_t.* = g_bmfa_m.*
   LET g_bmfa_m_o.* = g_bmfa_m.*
   
   LET g_data_owner = g_bmfa_m.bmfaownid      
   LET g_data_dept  = g_bmfa_m.bmfaowndp
   
   #重新顯示   
   CALL abmt301_show()
 
   #應用 a56 樣板自動產生(Version:2)
   #檢查此單據是否需顯示BPM簽核狀況按鈕 
   IF cl_bpm_chk() THEN
      CALL cl_set_act_visible("bpm_status",TRUE)
   ELSE
      CALL cl_set_act_visible("bpm_status",FALSE)
   END IF
 
 
 
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.fill_chk" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION abmt301_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.filter" ver="8" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION abmt301_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON bmfadocno,bmfadocdt,bmfa005,bmfa006,bmfa007,bmfa008
                          FROM s_browse[1].b_bmfadocno,s_browse[1].b_bmfadocdt,s_browse[1].b_bmfa005, 
                              s_browse[1].b_bmfa006,s_browse[1].b_bmfa007,s_browse[1].b_bmfa008
 
         BEFORE CONSTRUCT
               DISPLAY abmt301_filter_parser('bmfadocno') TO s_browse[1].b_bmfadocno
            DISPLAY abmt301_filter_parser('bmfadocdt') TO s_browse[1].b_bmfadocdt
            DISPLAY abmt301_filter_parser('bmfa005') TO s_browse[1].b_bmfa005
            DISPLAY abmt301_filter_parser('bmfa006') TO s_browse[1].b_bmfa006
            DISPLAY abmt301_filter_parser('bmfa007') TO s_browse[1].b_bmfa007
            DISPLAY abmt301_filter_parser('bmfa008') TO s_browse[1].b_bmfa008
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL abmt301_filter_show('bmfadocno')
   CALL abmt301_filter_show('bmfadocdt')
   CALL abmt301_filter_show('bmfa005')
   CALL abmt301_filter_show('bmfa006')
   CALL abmt301_filter_show('bmfa007')
   CALL abmt301_filter_show('bmfa008')
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.filter_parser" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION abmt301_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.filter_show" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION abmt301_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = abmt301_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.global" ver="29" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:38)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_bmfa_m        RECORD
       bmfadocno LIKE bmfa_t.bmfadocno, 
   bmfadocdt LIKE bmfa_t.bmfadocdt, 
   bmfa005 LIKE bmfa_t.bmfa005, 
   bmfa006 LIKE bmfa_t.bmfa006, 
   bmfa006_desc LIKE type_t.chr80, 
   bmfa007 LIKE bmfa_t.bmfa007, 
   bmfa007_desc LIKE type_t.chr80, 
   bmfa008 LIKE bmfa_t.bmfa008, 
   ooff013 LIKE ooff_t.ooff013, 
   bmfastus LIKE bmfa_t.bmfastus, 
   bmfacrtid LIKE bmfa_t.bmfacrtid, 
   bmfacrtid_desc LIKE type_t.chr80, 
   bmfacrtdp LIKE bmfa_t.bmfacrtdp, 
   bmfacrtdp_desc LIKE type_t.chr80, 
   bmfacrtdt LIKE bmfa_t.bmfacrtdt, 
   bmfaownid LIKE bmfa_t.bmfaownid, 
   bmfaownid_desc LIKE type_t.chr80, 
   bmfaowndp LIKE bmfa_t.bmfaowndp, 
   bmfaowndp_desc LIKE type_t.chr80, 
   bmfamodid LIKE bmfa_t.bmfamodid, 
   bmfamodid_desc LIKE type_t.chr80, 
   bmfamoddt LIKE bmfa_t.bmfamoddt, 
   bmfacnfid LIKE bmfa_t.bmfacnfid, 
   bmfacnfid_desc LIKE type_t.chr80, 
   bmfacnfdt LIKE bmfa_t.bmfacnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_bmfp_d        RECORD
       bmfp002 LIKE bmfp_t.bmfp002, 
   bmfp002_desc LIKE type_t.chr500, 
   bmfp002_desc1 LIKE type_t.chr500, 
   bmfp003 LIKE bmfp_t.bmfp003, 
   bmfp004 LIKE bmfp_t.bmfp004, 
   bmfp004_desc LIKE type_t.chr500, 
   bmfp005 LIKE bmfp_t.bmfp005, 
   bmfp005_desc LIKE type_t.chr500, 
   bmfp006 LIKE bmfp_t.bmfp006, 
   bmfp007 LIKE bmfp_t.bmfp007
       END RECORD
PRIVATE TYPE type_g_bmfp2_d RECORD
       bmfb002 LIKE bmfb_t.bmfb002, 
   bmfb003 LIKE bmfb_t.bmfb003, 
   bmfb005 LIKE bmfb_t.bmfb005, 
   bmfb005_desc LIKE type_t.chr500, 
   bmfb005_desc1 LIKE type_t.chr500, 
   bmfb006 LIKE bmfb_t.bmfb006, 
   bmfb006_desc LIKE type_t.chr500, 
   bmfb006_desc1 LIKE type_t.chr500, 
   bmfb007 LIKE bmfb_t.bmfb007, 
   bmfb008 LIKE bmfb_t.bmfb008, 
   bmfb008_desc LIKE type_t.chr500, 
   bmfb009 LIKE bmfb_t.bmfb009, 
   bmfb009_desc LIKE type_t.chr500, 
   bmfb010 LIKE bmfb_t.bmfb010, 
   bmfb011 LIKE bmfb_t.bmfb011, 
   bmfb012 LIKE bmfb_t.bmfb012, 
   bmfb013 LIKE bmfb_t.bmfb013, 
   bmfb014 LIKE bmfb_t.bmfb014, 
   bmfb015 LIKE bmfb_t.bmfb015, 
   bmfb015_desc LIKE type_t.chr500, 
   bmfb016 LIKE bmfb_t.bmfb016, 
   bmfb017 LIKE bmfb_t.bmfb017, 
   bmfb018 LIKE bmfb_t.bmfb018, 
   bmfb019 LIKE bmfb_t.bmfb019, 
   bmfb020 LIKE bmfb_t.bmfb020, 
   ooff013 LIKE type_t.chr500
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_bmfadocno LIKE bmfa_t.bmfadocno,
      b_bmfadocdt LIKE bmfa_t.bmfadocdt,
      b_bmfa005 LIKE bmfa_t.bmfa005,
      b_bmfa006 LIKE bmfa_t.bmfa006,
   b_ooag011 LIKE type_t.chr80,
      b_bmfa007 LIKE bmfa_t.bmfa007,
   b_ooefl003 LIKE type_t.chr80,
      b_bmfa008 LIKE bmfa_t.bmfa008,
   b_ooff013 LIKE type_t.chr80
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_bmfa_m          type_g_bmfa_m
DEFINE g_bmfa_m_t        type_g_bmfa_m
DEFINE g_bmfa_m_o        type_g_bmfa_m
DEFINE g_bmfa_m_mask_o   type_g_bmfa_m #轉換遮罩前資料
DEFINE g_bmfa_m_mask_n   type_g_bmfa_m #轉換遮罩後資料
 
   DEFINE g_bmfadocno_t LIKE bmfa_t.bmfadocno
 
 
DEFINE g_bmfp_d          DYNAMIC ARRAY OF type_g_bmfp_d
DEFINE g_bmfp_d_t        type_g_bmfp_d
DEFINE g_bmfp_d_o        type_g_bmfp_d
DEFINE g_bmfp_d_mask_o   DYNAMIC ARRAY OF type_g_bmfp_d #轉換遮罩前資料
DEFINE g_bmfp_d_mask_n   DYNAMIC ARRAY OF type_g_bmfp_d #轉換遮罩後資料
DEFINE g_bmfp2_d          DYNAMIC ARRAY OF type_g_bmfp2_d
DEFINE g_bmfp2_d_t        type_g_bmfp2_d
DEFINE g_bmfp2_d_o        type_g_bmfp2_d
DEFINE g_bmfp2_d_mask_o   DYNAMIC ARRAY OF type_g_bmfp2_d #轉換遮罩前資料
DEFINE g_bmfp2_d_mask_n   DYNAMIC ARRAY OF type_g_bmfp2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
DEFINE g_wc2_table2   STRING
 
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="abmt301.idx_chk" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION abmt301_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_bmfp_d.getLength() THEN
         LET g_detail_idx = g_bmfp_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmfp_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmfp_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_bmfp2_d.getLength() THEN
         LET g_detail_idx = g_bmfp2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_bmfp2_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_bmfp2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.init" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION abmt301_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('bmfastus','13','D,N,R,W,Y,A,X')
 
      CALL cl_set_combo_scc('bmfb003','1109') 
   CALL cl_set_combo_scc('bmfb007','1111') 
   CALL cl_set_combo_scc('bmfb016','1101') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL abmt301_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="abmt301.input" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION abmt301_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa006_desc, 
       g_bmfa_m.bmfa007,g_bmfa_m.bmfa007_desc,g_bmfa_m.bmfa008,g_bmfa_m.ooff013,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid, 
       g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfaowndp_desc,g_bmfa_m.bmfamodid,g_bmfa_m.bmfamodid_desc, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfid_desc,g_bmfa_m.bmfacnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT bmfp002,bmfp003,bmfp004,bmfp005,bmfp006,bmfp007 FROM bmfp_t WHERE bmfpent=?  
       AND bmfpsite=? AND bmfpdocno=? AND bmfp002=? AND bmfp003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt301_bcl CURSOR FROM g_forupd_sql
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point    
   LET g_forupd_sql = "SELECT bmfb002,bmfb003,bmfb005,bmfb006,bmfb007,bmfb008,bmfb009,bmfb010,bmfb011, 
       bmfb012,bmfb013,bmfb014,bmfb015,bmfb016,bmfb017,bmfb018,bmfb019,bmfb020 FROM bmfb_t WHERE bmfbent=?  
       AND bmfbsite=? AND bmfbdocno=? AND bmfb002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt301_bcl2 CURSOR FROM g_forupd_sql
 
 
   
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL abmt301_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL abmt301_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007, 
       g_bmfa_m.bmfa008,g_bmfa_m.ooff013,g_bmfa_m.bmfastus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="abmt301.input.body" ver="24" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_bmfp_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION batch
            LET g_action_choice="batch"
            IF cl_auth_chk_act("batch") THEN
               
               #add-point:ON ACTION batch
               {<point name="input.detail_input.page1.batch" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmfp_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt301_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_bmfp_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt301_cl USING g_enterprise, g_site,g_bmfa_m.bmfadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt301_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt301_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmfp_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmfp_d[l_ac].bmfp002 IS NOT NULL
               AND g_bmfp_d[l_ac].bmfp003 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_bmfp_d_t.* = g_bmfp_d[l_ac].*  #BACKUP
               LET g_bmfp_d_o.* = g_bmfp_d[l_ac].*  #BACKUP
               CALL abmt301_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL abmt301_set_no_entry_b(l_cmd)
               IF NOT abmt301_lock_b("bmfp_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt301_bcl INTO g_bmfp_d[l_ac].bmfp002,g_bmfp_d[l_ac].bmfp003,g_bmfp_d[l_ac].bmfp004, 
                      g_bmfp_d[l_ac].bmfp005,g_bmfp_d[l_ac].bmfp006,g_bmfp_d[l_ac].bmfp007
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_bmfp_d_t.bmfp002 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmfp_d_mask_o[l_ac].* =  g_bmfp_d[l_ac].*
                  CALL abmt301_bmfp_t_mask()
                  LET g_bmfp_d_mask_n[l_ac].* =  g_bmfp_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL abmt301_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmfp_d[l_ac].* TO NULL 
            INITIALIZE g_bmfp_d_t.* TO NULL 
            INITIALIZE g_bmfp_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
            
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_bmfp_d_t.* = g_bmfp_d[l_ac].*     #新輸入資料
            LET g_bmfp_d_o.* = g_bmfp_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt301_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt301_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmfp_d[li_reproduce_target].* = g_bmfp_d[li_reproduce].*
 
               LET g_bmfp_d[li_reproduce_target].bmfp002 = NULL
               LET g_bmfp_d[li_reproduce_target].bmfp003 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmfp_t 
             WHERE bmfpent = g_enterprise AND bmfpsite = g_site AND bmfpdocno = g_bmfa_m.bmfadocno
 
               AND bmfp002 = g_bmfp_d[l_ac].bmfp002
               AND bmfp003 = g_bmfp_d[l_ac].bmfp003
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmfa_m.bmfadocno
               LET gs_keys[2] = g_bmfp_d[g_detail_idx].bmfp002
               LET gs_keys[3] = g_bmfp_d[g_detail_idx].bmfp003
               CALL abmt301_insert_b('bmfp_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_bmfp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmfp_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt301_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_bmfa_m.bmfadocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_bmfp_d_t.bmfp002
               LET gs_keys[gs_keys.getLength()+1] = g_bmfp_d_t.bmfp003
 
            
               #刪除同層單身
               IF NOT abmt301_delete_b('bmfp_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt301_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT abmt301_key_delete_b(gs_keys,'bmfp_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt301_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE abmt301_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_bmfp_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_bmfp_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp002
            
            #add-point:AFTER FIELD bmfp002
            {<point name="input.a.page1.bmfp002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp002
            #add-point:BEFORE FIELD bmfp002
            {<point name="input.b.page1.bmfp002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfp002
            #add-point:ON CHANGE bmfp002
            {<point name="input.g.page1.bmfp002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp003
            #add-point:BEFORE FIELD bmfp003
            {<point name="input.b.page1.bmfp003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp003
            
            #add-point:AFTER FIELD bmfp003
            {<point name="input.a.page1.bmfp003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfp003
            #add-point:ON CHANGE bmfp003
            {<point name="input.g.page1.bmfp003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp004
            
            #add-point:AFTER FIELD bmfp004
            {<point name="input.a.page1.bmfp004" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp004
            #add-point:BEFORE FIELD bmfp004
            {<point name="input.b.page1.bmfp004" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfp004
            #add-point:ON CHANGE bmfp004
            {<point name="input.g.page1.bmfp004" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp005
            
            #add-point:AFTER FIELD bmfp005
            {<point name="input.a.page1.bmfp005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp005
            #add-point:BEFORE FIELD bmfp005
            {<point name="input.b.page1.bmfp005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfp005
            #add-point:ON CHANGE bmfp005
            {<point name="input.g.page1.bmfp005" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp006
            #add-point:BEFORE FIELD bmfp006
            {<point name="input.b.page1.bmfp006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp006
            
            #add-point:AFTER FIELD bmfp006
            {<point name="input.a.page1.bmfp006" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfp006
            #add-point:ON CHANGE bmfp006
            {<point name="input.g.page1.bmfp006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfp007
            #add-point:BEFORE FIELD bmfp007
            {<point name="input.b.page1.bmfp007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfp007
            
            #add-point:AFTER FIELD bmfp007
            {<point name="input.a.page1.bmfp007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfp007
            #add-point:ON CHANGE bmfp007
            {<point name="input.g.page1.bmfp007" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.bmfp002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp002
            #add-point:ON ACTION controlp INFIELD bmfp002
            {<point name="input.c.page1.bmfp002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmfp003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp003
            #add-point:ON ACTION controlp INFIELD bmfp003
            {<point name="input.c.page1.bmfp003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmfp004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp004
            #add-point:ON ACTION controlp INFIELD bmfp004
            {<point name="input.c.page1.bmfp004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmfp005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp005
            #add-point:ON ACTION controlp INFIELD bmfp005
            {<point name="input.c.page1.bmfp005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmfp006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp006
            #add-point:ON ACTION controlp INFIELD bmfp006
            {<point name="input.c.page1.bmfp006" />}
            #END add-point
 
         #Ctrlp:input.c.page1.bmfp007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfp007
            #add-point:ON ACTION controlp INFIELD bmfp007
            {<point name="input.c.page1.bmfp007" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_bmfp_d[l_ac].* = g_bmfp_d_t.*
               CLOSE abmt301_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_bmfp_d[l_ac].bmfp002 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmfp_d[l_ac].* = g_bmfp_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL abmt301_bmfp_t_mask_restore('restore_mask_o')
      
               UPDATE bmfp_t SET (bmfpdocno,bmfp002,bmfp003,bmfp004,bmfp005,bmfp006,bmfp007) = (g_bmfa_m.bmfadocno, 
                   g_bmfp_d[l_ac].bmfp002,g_bmfp_d[l_ac].bmfp003,g_bmfp_d[l_ac].bmfp004,g_bmfp_d[l_ac].bmfp005, 
                   g_bmfp_d[l_ac].bmfp006,g_bmfp_d[l_ac].bmfp007)
                WHERE bmfpent = g_enterprise AND bmfpsite = g_site AND bmfpdocno = g_bmfa_m.bmfadocno 
 
                  AND bmfp002 = g_bmfp_d_t.bmfp002 #項次   
                  AND bmfp003 = g_bmfp_d_t.bmfp003  
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmfp_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmfp_d[l_ac].* = g_bmfp_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmfp_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_bmfp_d[l_ac].* = g_bmfp_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmfa_m.bmfadocno
               LET gs_keys_bak[1] = g_bmfadocno_t
               LET gs_keys[2] = g_bmfp_d[g_detail_idx].bmfp002
               LET gs_keys_bak[2] = g_bmfp_d_t.bmfp002
               LET gs_keys[3] = g_bmfp_d[g_detail_idx].bmfp003
               LET gs_keys_bak[3] = g_bmfp_d_t.bmfp003
               CALL abmt301_update_b('bmfp_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL abmt301_bmfp_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_bmfp_d[g_detail_idx].bmfp002 = g_bmfp_d_t.bmfp002 
                  AND g_bmfp_d[g_detail_idx].bmfp003 = g_bmfp_d_t.bmfp003 
 
                  ) THEN
                  LET gs_keys[01] = g_bmfa_m.bmfadocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_bmfp_d_t.bmfp002
                  LET gs_keys[gs_keys.getLength()+1] = g_bmfp_d_t.bmfp003
 
                  CALL abmt301_key_update_b(gs_keys,'bmfp_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_bmfa_m),util.JSON.stringify(g_bmfp_d_t)
               LET g_log2 = util.JSON.stringify(g_bmfa_m),util.JSON.stringify(g_bmfp_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL abmt301_unlock_b("bmfp_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_bmfp_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmfp_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
      INPUT ARRAY g_bmfp2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION character
            LET g_action_choice="character"
            IF cl_auth_chk_act("character") THEN
               
               #add-point:ON ACTION character
               {<point name="input.detail_input.page2.character" />}
               #END add-point
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION plug
            LET g_action_choice="plug"
            IF cl_auth_chk_act("plug") THEN
               
               #add-point:ON ACTION plug
               {<point name="input.detail_input.page2.plug" />}
               #END add-point
            END IF
 
 
 
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_bmfp2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL abmt301_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_bmfp2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_bmfp2_d[l_ac].* TO NULL 
            INITIALIZE g_bmfp2_d_t.* TO NULL 
            INITIALIZE g_bmfp2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_bmfp2_d[l_ac].bmfb014 = "N"
      LET g_bmfp2_d[l_ac].bmfb016 = "1"
      LET g_bmfp2_d[l_ac].bmfb017 = "N"
      LET g_bmfp2_d[l_ac].bmfb018 = "N"
      LET g_bmfp2_d[l_ac].bmfb019 = "N"
      LET g_bmfp2_d[l_ac].bmfb020 = "N"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_bmfp2_d_t.* = g_bmfp2_d[l_ac].*     #新輸入資料
            LET g_bmfp2_d_o.* = g_bmfp2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL abmt301_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL abmt301_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_bmfp2_d[li_reproduce_target].* = g_bmfp2_d[li_reproduce].*
 
               LET g_bmfp2_d[li_reproduce_target].bmfb002 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW     
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 2
              
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN abmt301_cl USING g_enterprise, g_site,g_bmfa_m.bmfadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt301_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt301_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_bmfp2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_bmfp2_d[l_ac].bmfb002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_bmfp2_d_t.* = g_bmfp2_d[l_ac].*  #BACKUP
               LET g_bmfp2_d_o.* = g_bmfp2_d[l_ac].*  #BACKUP
               CALL abmt301_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL abmt301_set_no_entry_b(l_cmd)
               IF NOT abmt301_lock_b("bmfb_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH abmt301_bcl2 INTO g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005, 
                      g_bmfp2_d[l_ac].bmfb006,g_bmfp2_d[l_ac].bmfb007,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009, 
                      g_bmfp2_d[l_ac].bmfb010,g_bmfp2_d[l_ac].bmfb011,g_bmfp2_d[l_ac].bmfb012,g_bmfp2_d[l_ac].bmfb013, 
                      g_bmfp2_d[l_ac].bmfb014,g_bmfp2_d[l_ac].bmfb015,g_bmfp2_d[l_ac].bmfb016,g_bmfp2_d[l_ac].bmfb017, 
                      g_bmfp2_d[l_ac].bmfb018,g_bmfp2_d[l_ac].bmfb019,g_bmfp2_d[l_ac].bmfb020
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_bmfp2_d_mask_o[l_ac].* =  g_bmfp2_d[l_ac].*
                  CALL abmt301_bmfb_t_mask()
                  LET g_bmfp2_d_mask_n[l_ac].* =  g_bmfp2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL abmt301_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
                  
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_bmfa_m.bmfadocno
               LET gs_keys[gs_keys.getLength()+1] = g_bmfp2_d_t.bmfb002
            
               #刪除同層單身
               IF NOT abmt301_delete_b('bmfb_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt301_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT abmt301_key_delete_b(gs_keys,'bmfb_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE abmt301_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
               
               CALL s_transaction_end('Y','0')
               CLOSE abmt301_bcl
               LET g_rec_b = g_rec_b-1
               
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_bmfp_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_bmfp2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM bmfb_t 
             WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND bmfbdocno = g_bmfa_m.bmfadocno
               AND bmfb002 = g_bmfp2_d[l_ac].bmfb002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmfa_m.bmfadocno
               LET gs_keys[2] = g_bmfp2_d[g_detail_idx].bmfb002
               CALL abmt301_insert_b('bmfb_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_bmfp_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmfb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL abmt301_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_bmfp2_d[l_ac].* = g_bmfp2_d_t.*
               CLOSE abmt301_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_bmfp2_d[l_ac].* = g_bmfp2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL abmt301_bmfb_t_mask_restore('restore_mask_o')
                              
               UPDATE bmfb_t SET (bmfbdocno,bmfb002,bmfb003,bmfb005,bmfb006,bmfb007,bmfb008,bmfb009, 
                   bmfb010,bmfb011,bmfb012,bmfb013,bmfb014,bmfb015,bmfb016,bmfb017,bmfb018,bmfb019,bmfb020) = (g_bmfa_m.bmfadocno, 
                   g_bmfp2_d[l_ac].bmfb002,g_bmfp2_d[l_ac].bmfb003,g_bmfp2_d[l_ac].bmfb005,g_bmfp2_d[l_ac].bmfb006, 
                   g_bmfp2_d[l_ac].bmfb007,g_bmfp2_d[l_ac].bmfb008,g_bmfp2_d[l_ac].bmfb009,g_bmfp2_d[l_ac].bmfb010, 
                   g_bmfp2_d[l_ac].bmfb011,g_bmfp2_d[l_ac].bmfb012,g_bmfp2_d[l_ac].bmfb013,g_bmfp2_d[l_ac].bmfb014, 
                   g_bmfp2_d[l_ac].bmfb015,g_bmfp2_d[l_ac].bmfb016,g_bmfp2_d[l_ac].bmfb017,g_bmfp2_d[l_ac].bmfb018, 
                   g_bmfp2_d[l_ac].bmfb019,g_bmfp2_d[l_ac].bmfb020) #自訂欄位頁簽
                WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND bmfbdocno = g_bmfa_m.bmfadocno
                  AND bmfb002 = g_bmfp2_d_t.bmfb002 #項次 
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmfb_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmfp2_d[l_ac].* = g_bmfp2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "bmfb_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_bmfp2_d[l_ac].* = g_bmfp2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_bmfa_m.bmfadocno
               LET gs_keys_bak[1] = g_bmfadocno_t
               LET gs_keys[2] = g_bmfp2_d[g_detail_idx].bmfb002
               LET gs_keys_bak[2] = g_bmfp2_d_t.bmfb002
               CALL abmt301_update_b('bmfb_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL abmt301_bmfb_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT (g_bmfp2_d[g_detail_idx].bmfb002 = g_bmfp2_d_t.bmfb002 
                  ) THEN
                  LET gs_keys[01] = g_bmfa_m.bmfadocno
                  LET gs_keys[gs_keys.getLength()+1] = g_bmfp2_d_t.bmfb002
                  CALL abmt301_key_update_b(gs_keys,'bmfb_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_bmfa_m),util.JSON.stringify(g_bmfp2_d_t)
               LET g_log2 = util.JSON.stringify(g_bmfa_m),util.JSON.stringify(g_bmfp2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb002
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmfp2_d[l_ac].bmfb002,"0","0","","","azz-00079",1) THEN
               NEXT FIELD bmfb002
            END IF 
 
 
            #add-point:AFTER FIELD bmfb002
            {<point name="input.a.page2.bmfb002" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb002
            #add-point:BEFORE FIELD bmfb002
            {<point name="input.b.page2.bmfb002" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb002
            #add-point:ON CHANGE bmfb002
            {<point name="input.g.page2.bmfb002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb003
            #add-point:BEFORE FIELD bmfb003
            {<point name="input.b.page2.bmfb003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb003
            
            #add-point:AFTER FIELD bmfb003
            {<point name="input.a.page2.bmfb003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb003
            #add-point:ON CHANGE bmfb003
            {<point name="input.g.page2.bmfb003" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb005
            
            #add-point:AFTER FIELD bmfb005
            {<point name="input.a.page2.bmfb005" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb005
            #add-point:BEFORE FIELD bmfb005
            {<point name="input.b.page2.bmfb005" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb005
            #add-point:ON CHANGE bmfb005
            {<point name="input.g.page2.bmfb005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb006
            
            #add-point:AFTER FIELD bmfb006
            {<point name="input.a.page2.bmfb006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb006
            #add-point:BEFORE FIELD bmfb006
            {<point name="input.b.page2.bmfb006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb006
            #add-point:ON CHANGE bmfb006
            {<point name="input.g.page2.bmfb006" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb007
            #add-point:BEFORE FIELD bmfb007
            {<point name="input.b.page2.bmfb007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb007
            
            #add-point:AFTER FIELD bmfb007
            {<point name="input.a.page2.bmfb007" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb007
            #add-point:ON CHANGE bmfb007
            {<point name="input.g.page2.bmfb007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb008
            
            #add-point:AFTER FIELD bmfb008
            {<point name="input.a.page2.bmfb008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb008
            #add-point:BEFORE FIELD bmfb008
            {<point name="input.b.page2.bmfb008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb008
            #add-point:ON CHANGE bmfb008
            {<point name="input.g.page2.bmfb008" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb009
            
            #add-point:AFTER FIELD bmfb009
            {<point name="input.a.page2.bmfb009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb009
            #add-point:BEFORE FIELD bmfb009
            {<point name="input.b.page2.bmfb009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb009
            #add-point:ON CHANGE bmfb009
            {<point name="input.g.page2.bmfb009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb010
            #add-point:BEFORE FIELD bmfb010
            {<point name="input.b.page2.bmfb010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb010
            
            #add-point:AFTER FIELD bmfb010
            {<point name="input.a.page2.bmfb010" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb010
            #add-point:ON CHANGE bmfb010
            {<point name="input.g.page2.bmfb010" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb011
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmfp2_d[l_ac].bmfb011,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD bmfb011
            END IF 
 
 
            #add-point:AFTER FIELD bmfb011
            {<point name="input.a.page2.bmfb011" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb011
            #add-point:BEFORE FIELD bmfb011
            {<point name="input.b.page2.bmfb011" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb011
            #add-point:ON CHANGE bmfb011
            {<point name="input.g.page2.bmfb011" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb012
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_bmfp2_d[l_ac].bmfb012,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD bmfb012
            END IF 
 
 
            #add-point:AFTER FIELD bmfb012
            {<point name="input.a.page2.bmfb012" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb012
            #add-point:BEFORE FIELD bmfb012
            {<point name="input.b.page2.bmfb012" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb012
            #add-point:ON CHANGE bmfb012
            {<point name="input.g.page2.bmfb012" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb013
            
            #add-point:AFTER FIELD bmfb013
            {<point name="input.a.page2.bmfb013" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb013
            #add-point:BEFORE FIELD bmfb013
            {<point name="input.b.page2.bmfb013" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb013
            #add-point:ON CHANGE bmfb013
            {<point name="input.g.page2.bmfb013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb014
            #add-point:BEFORE FIELD bmfb014
            {<point name="input.b.page2.bmfb014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb014
            
            #add-point:AFTER FIELD bmfb014
            {<point name="input.a.page2.bmfb014" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb014
            #add-point:ON CHANGE bmfb014
            {<point name="input.g.page2.bmfb014" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb015
            
            #add-point:AFTER FIELD bmfb015
            {<point name="input.a.page2.bmfb015" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb015
            #add-point:BEFORE FIELD bmfb015
            {<point name="input.b.page2.bmfb015" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb015
            #add-point:ON CHANGE bmfb015
            {<point name="input.g.page2.bmfb015" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb016
            #add-point:BEFORE FIELD bmfb016
            {<point name="input.b.page2.bmfb016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb016
            
            #add-point:AFTER FIELD bmfb016
            {<point name="input.a.page2.bmfb016" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb016
            #add-point:ON CHANGE bmfb016
            {<point name="input.g.page2.bmfb016" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb017
            #add-point:BEFORE FIELD bmfb017
            {<point name="input.b.page2.bmfb017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb017
            
            #add-point:AFTER FIELD bmfb017
            {<point name="input.a.page2.bmfb017" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb017
            #add-point:ON CHANGE bmfb017
            {<point name="input.g.page2.bmfb017" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb018
            #add-point:BEFORE FIELD bmfb018
            {<point name="input.b.page2.bmfb018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb018
            
            #add-point:AFTER FIELD bmfb018
            {<point name="input.a.page2.bmfb018" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb018
            #add-point:ON CHANGE bmfb018
            {<point name="input.g.page2.bmfb018" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb019
            #add-point:BEFORE FIELD bmfb019
            {<point name="input.b.page2.bmfb019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb019
            
            #add-point:AFTER FIELD bmfb019
            {<point name="input.a.page2.bmfb019" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb019
            #add-point:ON CHANGE bmfb019
            {<point name="input.g.page2.bmfb019" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfb020
            #add-point:BEFORE FIELD bmfb020
            {<point name="input.b.page2.bmfb020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfb020
            
            #add-point:AFTER FIELD bmfb020
            {<point name="input.a.page2.bmfb020" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfb020
            #add-point:ON CHANGE bmfb020
            {<point name="input.g.page2.bmfb020" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
            {<point name="input.b.page2.ooff013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
            {<point name="input.a.page2.ooff013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013
            {<point name="input.g.page2.ooff013" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.bmfb002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb002
            #add-point:ON ACTION controlp INFIELD bmfb002
            {<point name="input.c.page2.bmfb002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb003
            #add-point:ON ACTION controlp INFIELD bmfb003
            {<point name="input.c.page2.bmfb003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb005
            #add-point:ON ACTION controlp INFIELD bmfb005
            {<point name="input.c.page2.bmfb005" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb006
            #add-point:ON ACTION controlp INFIELD bmfb006
            {<point name="input.c.page2.bmfb006" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb007
            #add-point:ON ACTION controlp INFIELD bmfb007
            {<point name="input.c.page2.bmfb007" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb008
            #add-point:ON ACTION controlp INFIELD bmfb008
            {<point name="input.c.page2.bmfb008" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb009
            #add-point:ON ACTION controlp INFIELD bmfb009
            {<point name="input.c.page2.bmfb009" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb010
            #add-point:ON ACTION controlp INFIELD bmfb010
            {<point name="input.c.page2.bmfb010" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb011
            #add-point:ON ACTION controlp INFIELD bmfb011
            {<point name="input.c.page2.bmfb011" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb012
            #add-point:ON ACTION controlp INFIELD bmfb012
            {<point name="input.c.page2.bmfb012" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb013
            #add-point:ON ACTION controlp INFIELD bmfb013
            {<point name="input.c.page2.bmfb013" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb014
            #add-point:ON ACTION controlp INFIELD bmfb014
            {<point name="input.c.page2.bmfb014" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb015
            #add-point:ON ACTION controlp INFIELD bmfb015
            {<point name="input.c.page2.bmfb015" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb016
            #add-point:ON ACTION controlp INFIELD bmfb016
            {<point name="input.c.page2.bmfb016" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb017
            #add-point:ON ACTION controlp INFIELD bmfb017
            {<point name="input.c.page2.bmfb017" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb018
            #add-point:ON ACTION controlp INFIELD bmfb018
            {<point name="input.c.page2.bmfb018" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb019
            #add-point:ON ACTION controlp INFIELD bmfb019
            {<point name="input.c.page2.bmfb019" />}
            #END add-point
 
         #Ctrlp:input.c.page2.bmfb020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfb020
            #add-point:ON ACTION controlp INFIELD bmfb020
            {<point name="input.c.page2.bmfb020" />}
            #END add-point
 
         #Ctrlp:input.c.page2.ooff013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
            {<point name="input.c.page2.ooff013" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2 after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_bmfp2_d[l_ac].* = g_bmfp2_d_t.*
               END IF
               CLOSE abmt301_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL abmt301_unlock_b("bmfb_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2 after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point   
    
         ON ACTION controlo
            CALL FGL_SET_ARR_CURR(g_bmfp2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_bmfp2_d.getLength()+1
 
      END INPUT
 
      
 
 
 
]]>
  </section>
  <section id="abmt301.input.head" ver="21" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007, 
          g_bmfa_m.bmfa008,g_bmfa_m.ooff013,g_bmfa_m.bmfastus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN abmt301_cl USING g_enterprise, g_site,g_bmfa_m.bmfadocno
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN abmt301_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE abmt301_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL abmt301_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL abmt301_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfadocno
            #add-point:BEFORE FIELD bmfadocno
            {<point name="input.b.bmfadocno" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfadocno
            
            #add-point:AFTER FIELD bmfadocno
            {<point name="input.a.bmfadocno" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfadocno
            #add-point:ON CHANGE bmfadocno
            {<point name="input.g.bmfadocno" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfadocdt
            #add-point:BEFORE FIELD bmfadocdt
            {<point name="input.b.bmfadocdt" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfadocdt
            
            #add-point:AFTER FIELD bmfadocdt
            {<point name="input.a.bmfadocdt" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfadocdt
            #add-point:ON CHANGE bmfadocdt
            {<point name="input.g.bmfadocdt" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa005
            #add-point:BEFORE FIELD bmfa005
            {<point name="input.b.bmfa005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa005
            
            #add-point:AFTER FIELD bmfa005
            {<point name="input.a.bmfa005" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfa005
            #add-point:ON CHANGE bmfa005
            {<point name="input.g.bmfa005" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa006
            
            #add-point:AFTER FIELD bmfa006
            {<point name="input.a.bmfa006" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa006
            #add-point:BEFORE FIELD bmfa006
            {<point name="input.b.bmfa006" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfa006
            #add-point:ON CHANGE bmfa006
            {<point name="input.g.bmfa006" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa007
            
            #add-point:AFTER FIELD bmfa007
            {<point name="input.a.bmfa007" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa007
            #add-point:BEFORE FIELD bmfa007
            {<point name="input.b.bmfa007" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfa007
            #add-point:ON CHANGE bmfa007
            {<point name="input.g.bmfa007" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfa008
            
            #add-point:AFTER FIELD bmfa008
            {<point name="input.a.bmfa008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfa008
            #add-point:BEFORE FIELD bmfa008
            {<point name="input.b.bmfa008" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfa008
            #add-point:ON CHANGE bmfa008
            {<point name="input.g.bmfa008" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD ooff013
            #add-point:BEFORE FIELD ooff013
            {<point name="input.b.ooff013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD ooff013
            
            #add-point:AFTER FIELD ooff013
            {<point name="input.a.ooff013" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE ooff013
            #add-point:ON CHANGE ooff013
            {<point name="input.g.ooff013" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD bmfastus
            #add-point:BEFORE FIELD bmfastus
            {<point name="input.b.bmfastus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD bmfastus
            
            #add-point:AFTER FIELD bmfastus
            {<point name="input.a.bmfastus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE bmfastus
            #add-point:ON CHANGE bmfastus
            {<point name="input.g.bmfastus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.bmfadocno
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfadocno
            #add-point:ON ACTION controlp INFIELD bmfadocno
            {<point name="input.c.bmfadocno" />}
            #END add-point
 
         #Ctrlp:input.c.bmfadocdt
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfadocdt
            #add-point:ON ACTION controlp INFIELD bmfadocdt
            {<point name="input.c.bmfadocdt" />}
            #END add-point
 
         #Ctrlp:input.c.bmfa005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa005
            #add-point:ON ACTION controlp INFIELD bmfa005
            {<point name="input.c.bmfa005" />}
            #END add-point
 
         #Ctrlp:input.c.bmfa006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa006
            #add-point:ON ACTION controlp INFIELD bmfa006
            {<point name="input.c.bmfa006" />}
            #END add-point
 
         #Ctrlp:input.c.bmfa007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa007
            #add-point:ON ACTION controlp INFIELD bmfa007
            {<point name="input.c.bmfa007" />}
            #END add-point
 
         #Ctrlp:input.c.bmfa008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfa008
            #add-point:ON ACTION controlp INFIELD bmfa008
            {<point name="input.c.bmfa008" />}
            #END add-point
 
         #Ctrlp:input.c.ooff013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD ooff013
            #add-point:ON ACTION controlp INFIELD ooff013
            {<point name="input.c.ooff013" />}
            #END add-point
 
         #Ctrlp:input.c.bmfastus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD bmfastus
            #add-point:ON ACTION controlp INFIELD bmfastus
            {<point name="input.c.bmfastus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_bmfa_m.bmfadocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO bmfa_t (bmfaent, bmfasite,bmfadocno,bmfadocdt,bmfa005,bmfa006,bmfa007,bmfa008, 
                   bmfastus,bmfacrtid,bmfacrtdp,bmfacrtdt,bmfaownid,bmfaowndp,bmfamodid,bmfamoddt,bmfacnfid, 
                   bmfacnfdt)
               VALUES (g_enterprise, g_site,g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006, 
                   g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid,g_bmfa_m.bmfacrtdp, 
                   g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid,g_bmfa_m.bmfamoddt, 
                   g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_bmfa_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL abmt301_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL abmt301_b_fill()
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL abmt301_bmfa_t_mask_restore('restore_mask_o')
               
               UPDATE bmfa_t SET (bmfadocno,bmfadocdt,bmfa005,bmfa006,bmfa007,bmfa008,bmfastus,bmfacrtid, 
                   bmfacrtdp,bmfacrtdt,bmfaownid,bmfaowndp,bmfamodid,bmfamoddt,bmfacnfid,bmfacnfdt) = (g_bmfa_m.bmfadocno, 
                   g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008, 
                   g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid,g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid, 
                   g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid,g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt) 

                WHERE bmfaent = g_enterprise AND bmfasite = g_site AND bmfadocno = g_bmfadocno_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "bmfa_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL abmt301_bmfa_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_bmfa_m_t)
               LET g_log2 = util.JSON.stringify(g_bmfa_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
            
      END INPUT
   
]]>
  </section>
  <section id="abmt301.input.other" ver="10" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD bmfadocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD bmfp002
               WHEN "s_detail2"
                  NEXT FIELD bmfb002
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.insert" ver="27" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION abmt301_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_bmfp_d.clear()   
   CALL g_bmfp2_d.clear()  
 
 
   INITIALIZE g_bmfa_m.* LIKE bmfa_t.*             #DEFAULT 設定
   
   LET g_bmfadocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_bmfa_m.bmfaownid = g_user
      LET g_bmfa_m.bmfaowndp = g_dept
      LET g_bmfa_m.bmfacrtid = g_user
      LET g_bmfa_m.bmfacrtdp = g_dept 
      LET g_bmfa_m.bmfacrtdt = cl_get_current()
      LET g_bmfa_m.bmfamodid = g_user
      LET g_bmfa_m.bmfamoddt = cl_get_current()
      LET g_bmfa_m.bmfastus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_bmfa_m.bmfastus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_bmfa_m_t.* = g_bmfa_m.*
      LET g_bmfa_m_o.* = g_bmfa_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_bmfa_m.bmfastus 
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL abmt301_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_bmfa_m.* TO NULL
         INITIALIZE g_bmfp_d TO NULL
         INITIALIZE g_bmfp2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL abmt301_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_bmfp_d.clear()
      #CALL g_bmfp2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt301_set_act_visible()   
   CALL abmt301_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND",
                      " bmfadocno = '", g_bmfa_m.bmfadocno, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abmt301_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE abmt301_cl
   
   CALL abmt301_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE abmt301_master_referesh USING g_site,g_bmfa_m.bmfadocno INTO g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt, 
       g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt,g_bmfa_m.bmfa006_desc,g_bmfa_m.bmfa007_desc, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp_desc, 
       g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfacnfid_desc
   
   #遮罩相關處理
   LET g_bmfa_m_mask_o.* =  g_bmfa_m.*
   CALL abmt301_bmfa_t_mask()
   LET g_bmfa_m_mask_n.* =  g_bmfa_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa006_desc, 
       g_bmfa_m.bmfa007,g_bmfa_m.bmfa007_desc,g_bmfa_m.bmfa008,g_bmfa_m.ooff013,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid, 
       g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfaowndp_desc,g_bmfa_m.bmfamodid,g_bmfa_m.bmfamodid_desc, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfid_desc,g_bmfa_m.bmfacnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL abmt301_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.insert_b" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION abmt301_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO bmfp_t
                  (bmfpent, bmfpsite,
                   bmfpdocno,
                   bmfp002,bmfp003
                   ,bmfp004,bmfp005,bmfp006,bmfp007) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_bmfp_d[g_detail_idx].bmfp004,g_bmfp_d[g_detail_idx].bmfp005,g_bmfp_d[g_detail_idx].bmfp006, 
                       g_bmfp_d[g_detail_idx].bmfp007)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmfp_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_bmfp_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO bmfb_t
                  (bmfbent, bmfbsite,
                   bmfbdocno,
                   bmfb002
                   ,bmfb003,bmfb005,bmfb006,bmfb007,bmfb008,bmfb009,bmfb010,bmfb011,bmfb012,bmfb013,bmfb014,bmfb015,bmfb016,bmfb017,bmfb018,bmfb019,bmfb020) 
            VALUES(g_enterprise, g_site,
                   ps_keys[1],ps_keys[2]
                   ,g_bmfp2_d[g_detail_idx].bmfb003,g_bmfp2_d[g_detail_idx].bmfb005,g_bmfp2_d[g_detail_idx].bmfb006, 
                       g_bmfp2_d[g_detail_idx].bmfb007,g_bmfp2_d[g_detail_idx].bmfb008,g_bmfp2_d[g_detail_idx].bmfb009, 
                       g_bmfp2_d[g_detail_idx].bmfb010,g_bmfp2_d[g_detail_idx].bmfb011,g_bmfp2_d[g_detail_idx].bmfb012, 
                       g_bmfp2_d[g_detail_idx].bmfb013,g_bmfp2_d[g_detail_idx].bmfb014,g_bmfp2_d[g_detail_idx].bmfb015, 
                       g_bmfp2_d[g_detail_idx].bmfb016,g_bmfp2_d[g_detail_idx].bmfb017,g_bmfp2_d[g_detail_idx].bmfb018, 
                       g_bmfp2_d[g_detail_idx].bmfb019,g_bmfp2_d[g_detail_idx].bmfb020)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "bmfb_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'2'" THEN 
         CALL g_bmfp2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.key_delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION abmt301_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.key_update_b" ver="2" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION abmt301_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
 
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.lock_b" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION abmt301_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL abmt301_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "bmfp_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN abmt301_bcl USING g_enterprise, g_site,
                                       g_bmfa_m.bmfadocno,g_bmfp_d[g_detail_idx].bmfp002,g_bmfp_d[g_detail_idx].bmfp003  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abmt301_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "bmfb_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN abmt301_bcl2 USING g_enterprise, g_site,
                                             g_bmfa_m.bmfadocno,g_bmfp2_d[g_detail_idx].bmfb002
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "abmt301_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.main" ver="18" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT bmfadocno,bmfadocdt,bmfa005,bmfa006,'',bmfa007,'',bmfa008,'',bmfastus, 
       bmfacrtid,'',bmfacrtdp,'',bmfacrtdt,bmfaownid,'',bmfaowndp,'',bmfamodid,'',bmfamoddt,bmfacnfid, 
       '',bmfacnfdt", 
                      " FROM bmfa_t",
                      " WHERE bmfaent= ? AND bmfasite= ? AND bmfadocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE abmt301_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.bmfadocno,t0.bmfadocdt,t0.bmfa005,t0.bmfa006,t0.bmfa007,t0.bmfa008, 
       t0.bmfastus,t0.bmfacrtid,t0.bmfacrtdp,t0.bmfacrtdt,t0.bmfaownid,t0.bmfaowndp,t0.bmfamodid,t0.bmfamoddt, 
       t0.bmfacnfid,t0.bmfacnfdt,t1.ooag011 ,t2.ooefl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 , 
       t7.ooag011 ,t8.ooag011",
               " FROM bmfa_t t0",
                              " LEFT JOIN ooag_t t1 ON t1.ooagent='"||g_enterprise||"' AND t1.ooag001=t0.bmfa006  ",
               " LEFT JOIN ooefl_t t2 ON t2.ooeflent='"||g_enterprise||"' AND t2.ooefl001=t0.bmfa007 AND t2.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=t0.bmfacrtid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=t0.bmfacrtdp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=t0.bmfaownid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=t0.bmfaowndp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.bmfamodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=t0.bmfacnfid  ",
 
               " WHERE t0.bmfaent = '" ||g_enterprise|| "' AND t0.bmfasite = ? AND t0.bmfadocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE abmt301_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmt301 WITH FORM cl_ap_formpath("abm",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL abmt301_init()   
 
      #進入選單 Menu (="N")
      CALL abmt301_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_abmt301
      
   END IF 
   
   CLOSE abmt301_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="abmt301.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/abm/abmt301_mask.4gl"
]]>
  </section>
  <section id="abmt301.modify" ver="26" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION abmt301_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
   DEFINE l_wc2_table2   STRING
 
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_bmfa_m_t.* = g_bmfa_m.*
   LET g_bmfa_m_o.* = g_bmfa_m.*
   
   IF g_bmfa_m.bmfadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
   CALL s_transaction_begin()
   
   OPEN abmt301_cl USING g_enterprise, g_site,g_bmfa_m.bmfadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmt301_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE abmt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE abmt301_master_referesh USING g_site,g_bmfa_m.bmfadocno INTO g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt, 
       g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt,g_bmfa_m.bmfa006_desc,g_bmfa_m.bmfa007_desc, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp_desc, 
       g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfacnfid_desc
   
   #檢查是否允許此動作
   IF NOT abmt301_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_bmfa_m_mask_o.* =  g_bmfa_m.*
   CALL abmt301_bmfa_t_mask()
   LET g_bmfa_m_mask_n.* =  g_bmfa_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
 
   
   CALL abmt301_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
 
    
   WHILE TRUE
      LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_bmfa_m.bmfamodid = g_user 
LET g_bmfa_m.bmfamoddt = cl_get_current()
LET g_bmfa_m.bmfamodid_desc = cl_get_username(g_bmfa_m.bmfamodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL abmt301_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE bmfa_t SET (bmfamodid,bmfamoddt) = (g_bmfa_m.bmfamodid,g_bmfa_m.bmfamoddt)
          WHERE bmfaent = g_enterprise AND bmfasite = g_site AND bmfadocno = g_bmfadocno_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_bmfa_m.* = g_bmfa_m_t.*
         CALL abmt301_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_bmfa_m.bmfadocno != g_bmfadocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE bmfp_t SET bmfpdocno = g_bmfa_m.bmfadocno
 
          WHERE bmfpent = g_enterprise AND bmfpsite = g_site AND bmfpdocno = g_bmfadocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmfp_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmfp_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         
         UPDATE bmfb_t
            SET bmfbdocno = g_bmfa_m.bmfadocno
 
          WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND
                bmfbdocno = g_bmfadocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmfb_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "bmfb_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt301_set_act_visible()   
   CALL abmt301_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND",
                      " bmfadocno = '", g_bmfa_m.bmfadocno, "' "
 
   #填到對應位置
   CALL abmt301_browser_fill("")
 
   CLOSE abmt301_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL abmt301_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="abmt301.msgcentre_notify" ver="3" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION abmt301_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL abmt301_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_bmfa_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt301.other_dialog" ver="2" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="abmt301.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="abmt301.query" ver="10" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION abmt301_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_bmfp_d.clear()
   CALL g_bmfp2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL abmt301_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL abmt301_browser_fill("")
      CALL abmt301_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL abmt301_filter_show('bmfadocno')
   CALL abmt301_filter_show('bmfadocdt')
   CALL abmt301_filter_show('bmfa005')
   CALL abmt301_filter_show('bmfa006')
   CALL abmt301_filter_show('bmfa007')
   CALL abmt301_filter_show('bmfa008')
   CALL abmt301_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL abmt301_fetch("F") 
      #顯示單身筆數
      CALL abmt301_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.reproduce" ver="25" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION abmt301_reproduce()
   DEFINE l_newno     LIKE bmfa_t.bmfadocno 
   DEFINE l_oldno     LIKE bmfa_t.bmfadocno 
 
   DEFINE l_master    RECORD LIKE bmfa_t.*
   DEFINE l_detail    RECORD LIKE bmfp_t.*
   DEFINE l_detail2    RECORD LIKE bmfb_t.*
 
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_bmfa_m.bmfadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
    
   LET g_bmfa_m.bmfadocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_bmfa_m.bmfaownid = g_user
      LET g_bmfa_m.bmfaowndp = g_dept
      LET g_bmfa_m.bmfacrtid = g_user
      LET g_bmfa_m.bmfacrtdp = g_dept 
      LET g_bmfa_m.bmfacrtdt = cl_get_current()
      LET g_bmfa_m.bmfamodid = g_user
      LET g_bmfa_m.bmfamoddt = cl_get_current()
      LET g_bmfa_m.bmfastus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_bmfa_m.bmfastus 
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL abmt301_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_bmfa_m.* TO NULL
      INITIALIZE g_bmfp_d TO NULL
      INITIALIZE g_bmfp2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL abmt301_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL abmt301_set_act_visible()   
   CALL abmt301_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_bmfadocno_t = g_bmfa_m.bmfadocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND",
                      " bmfadocno = '", g_bmfa_m.bmfadocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL abmt301_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL abmt301_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL abmt301_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION abmt301_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION abmt301_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION abmt301_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION abmt301_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_entry" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION abmt301_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("bmfadocno,bmfadocdt",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("bmfadocno",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION abmt301_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_no_entry" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION abmt301_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("bmfadocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("bmfadocno,bmfadocdt",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_no_entry_b" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION abmt301_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="abmt301.set_pk_array" ver="3" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION abmt301_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_bmfa_m.bmfadocno
   LET g_pk_array[1].column = 'bmfadocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt301.show" ver="16" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION abmt301_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL abmt301_b_fill() #單身填充
      CALL abmt301_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL abmt301_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_bmfa_m_mask_o.* =  g_bmfa_m.*
   CALL abmt301_bmfa_t_mask()
   LET g_bmfa_m_mask_n.* =  g_bmfa_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa006_desc, 
       g_bmfa_m.bmfa007,g_bmfa_m.bmfa007_desc,g_bmfa_m.bmfa008,g_bmfa_m.ooff013,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid, 
       g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfaowndp_desc,g_bmfa_m.bmfamodid,g_bmfa_m.bmfamodid_desc, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfid_desc,g_bmfa_m.bmfacnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_bmfa_m.bmfastus 
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_bmfp_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_bmfp2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL abmt301_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.signature" ver="17" status="" src="s" readonly="">
    <![CDATA[   #應用 a39 樣板自動產生(Version:7)
#+ BPM提交
PRIVATE FUNCTION abmt301_send()
   #add-point:send段define
   {<point name="send.define" edit="s"/>}
   #end add-point 
   #add-point:send段define(客製用)
   {<point name="send.define_customerization" edit="c"/>}
   #end add-point 
 
   #依據單據個數，需要指定所有單身條件為" 1=1"  (單身有幾個就要設幾個)
   LET g_wc2_table1 = " 1=1"
   LET g_wc2_table2 = " 1=1"
 
 
   CALL abmt301_show()
   CALL abmt301_set_pk_array()
   
   #add-point: 初始化的ADP
   {<point name="send.before_send" />}
   #end add-point
   
   #公用變數初始化
   CALL cl_bpm_data_init()
                  
   #依照主檔/單身個數產生 CALL cl_bpm_set_master_data() / cl_bpm_set_detail_data() 
   #單頭固定為 CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(xxxx)) 傳入參數: (1)單頭陣列  ; 回傳值: 無
   CALL cl_bpm_set_master_data(util.JSONObject.fromFGL(g_bmfa_m))
                              
   #單身固定為 CALL cl_bpm_set_detail_data(s_detailX, util.JSONArray.fromFGL(xxxx)) 傳入參數: (1)單身SR名稱  (2)單身陣列  ; 回傳值: 無
   CALL cl_bpm_set_detail_data("s_detail1", util.JSONArray.fromFGL(g_bmfp_d))
   CALL cl_bpm_set_detail_data("s_detail2", util.JSONArray.fromFGL(g_bmfp2_d))
 
 
   # cl_bpm_cli() 裡有包含以前的aws_condition()=>送簽資料檢核和更新單據狀況碼為'W'
   # cl_bpm_cli() 傳入參數:無  ;  回傳值: 0 開單失敗; 1 開單成功
 
   #add-point: 提交前的ADP
   {<point name="send.before_cli" />}
   #end add-point
 
   #開單失敗
   IF NOT cl_bpm_cli() THEN 
      RETURN FALSE
   END IF
 
   #add-point: 提交後的ADP
   {<point name="send.after_send" />}
   #end add-point
 
   #此段落不需要刪除資料,但是否需要refresh圖片樣式???
   #CALL abmt301_ui_browser_refresh()
 
   #重新指定此筆單據資料狀態圖片=>送簽中
   LET g_browser[g_current_idx].b_statepic = "stus/16/signing.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL abmt301_ui_headershow()
   CALL abmt301_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
#應用 a40 樣板自動產生(Version:4)
#+ BPM抽單
PRIVATE FUNCTION abmt301_draw_out()
   #add-point:draw段define
   {<point name="draw.define" edit="s"/>}
   #end add-point
   #add-point:draw段define
   {<point name="draw.define_customerization" edit="c"/>}
   #end add-point
 
   #抽單失敗
   IF NOT cl_bpm_draw_out() THEN 
      RETURN FALSE
   END IF    
          
   #重新指定此筆單據資料狀態圖片=>抽單
   LET g_browser[g_current_row].b_statepic = "stus/16/draw_out.png"
 
   #重新取得單頭/單身資料,DISPLAY在畫面上
   CALL abmt301_ui_headershow()  
   CALL abmt301_ui_detailshow()
 
   RETURN TRUE
   
END FUNCTION
 
 
 
]]>
  </section>
  <section id="abmt301.state_change" ver="18" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION abmt301_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_bmfa_m.bmfadocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN abmt301_cl USING g_enterprise, g_site,g_bmfa_m.bmfadocno
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN abmt301_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE abmt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE abmt301_master_referesh USING g_site,g_bmfa_m.bmfadocno INTO g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt, 
       g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt,g_bmfa_m.bmfa006_desc,g_bmfa_m.bmfa007_desc, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp_desc, 
       g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfacnfid_desc
 
   #檢查是否允許此動作
   IF NOT abmt301_action_chk() THEN
      CLOSE abmt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa006_desc, 
       g_bmfa_m.bmfa007,g_bmfa_m.bmfa007_desc,g_bmfa_m.bmfa008,g_bmfa_m.ooff013,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid, 
       g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfaowndp_desc,g_bmfa_m.bmfamodid,g_bmfa_m.bmfamodid_desc, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfid_desc,g_bmfa_m.bmfacnfdt
 
   CASE g_bmfa_m.bmfastus
      WHEN "D"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "R"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
      WHEN "W"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "A"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_bmfa_m.bmfastus
            
            WHEN "D"
               HIDE OPTION "withdraw"
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "R"
               HIDE OPTION "rejection"
            WHEN "W"
               HIDE OPTION "signing"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "A"
               HIDE OPTION "approved"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      #應用 a36 樣板自動產生(Version:4)
      #提交
      ON ACTION signing
         IF cl_auth_chk_act("signing") THEN
            IF NOT abmt301_send() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE abmt301_cl
            RETURN
         END IF
    
      #抽單
      ON ACTION withdraw
         IF cl_auth_chk_act("withdraw") THEN
            IF NOT abmt301_draw_out() THEN
               CALL s_transaction_end('N','0')
            ELSE
               CALL s_transaction_end('Y','0')
            END IF
            #因應簽核行為, 該動作完成後不再進行後續處理
            #於此處直接返回
            CLOSE abmt301_cl
            RETURN
         END IF
 
 
	  
      #ON ACTION withdraw
      #   IF cl_auth_chk_act("withdraw") THEN
      #      LET lc_state = "D"
      #      #add-point:action控制
      #      {<point name="statechange.withdraw"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION rejection
         IF cl_auth_chk_act("rejection") THEN
            LET lc_state = "R"
            #add-point:action控制
            {<point name="statechange.rejection"/>}
            #end add-point
         END IF
         EXIT MENU
      #ON ACTION signing
      #   IF cl_auth_chk_act("signing") THEN
      #      LET lc_state = "W"
      #      #add-point:action控制
      #      {<point name="statechange.signing"/>}
      #      #end add-point
      #   END IF
      #   EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION approved
         IF cl_auth_chk_act("approved") THEN
            LET lc_state = "A"
            #add-point:action控制
            {<point name="statechange.approved"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "D" 
      AND lc_state <> "N"
      AND lc_state <> "R"
      AND lc_state <> "W"
      AND lc_state <> "Y"
      AND lc_state <> "A"
      AND lc_state <> "X"
      ) OR 
      g_bmfa_m.bmfastus = lc_state OR cl_null(lc_state) THEN
      CLOSE abmt301_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_bmfa_m.bmfamodid = g_user
   LET g_bmfa_m.bmfamoddt = cl_get_current()
   LET g_bmfa_m.bmfastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE bmfa_t 
      SET (bmfastus,bmfamodid,bmfamoddt) 
        = (g_bmfa_m.bmfastus,g_bmfa_m.bmfamodid,g_bmfa_m.bmfamoddt)     
    WHERE bmfaent = g_enterprise AND bmfasite = g_site AND bmfadocno = g_bmfa_m.bmfadocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "D"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/withdraw.png")
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "R"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/rejection.png")
         WHEN "W"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/signing.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "A"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/approved.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE abmt301_master_referesh USING g_site,g_bmfa_m.bmfadocno INTO g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt, 
          g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
          g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid, 
          g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt,g_bmfa_m.bmfa006_desc,g_bmfa_m.bmfa007_desc, 
          g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp_desc, 
          g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfacnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt,g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa006_desc, 
          g_bmfa_m.bmfa007,g_bmfa_m.bmfa007_desc,g_bmfa_m.bmfa008,g_bmfa_m.ooff013,g_bmfa_m.bmfastus, 
          g_bmfa_m.bmfacrtid,g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfacrtdt, 
          g_bmfa_m.bmfaownid,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfaowndp_desc,g_bmfa_m.bmfamodid, 
          g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfid_desc,g_bmfa_m.bmfacnfdt 

   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE abmt301_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL abmt301_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="abmt301.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION abmt301_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="abmt301.ui_browser_refresh" ver="9" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION abmt301_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_bmfadocno = g_bmfa_m.bmfadocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.ui_detailshow" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION abmt301_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="abmt301.ui_dialog" ver="33" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION abmt301_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL abmt301_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_bmfa_m.* TO NULL
         CALL g_bmfp_d.clear()
         CALL g_bmfp2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL abmt301_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL abmt301_fetch('') # reload data
               LET l_ac = 1
               CALL abmt301_ui_detailshow() #Setting the current row 
         
               CALL abmt301_idx_chk()
               #NEXT FIELD bmfp002
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_bmfp_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL abmt301_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL abmt301_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
         #第一階單身段落
         DISPLAY ARRAY g_bmfp2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL abmt301_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL abmt301_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION character
            LET g_action_choice="character"
            IF cl_auth_chk_act("character") THEN
               
               #add-point:ON ACTION character
               {<point name="menu.detail_show.page2.character" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION plug
            LET g_action_choice="plug"
            IF cl_auth_chk_act("plug") THEN
               
               #add-point:ON ACTION plug
               {<point name="menu.detail_show.page2.plug" />}
               #END add-point
               
            END IF
 
 
 
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL abmt301_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL abmt301_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL abmt301_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL abmt301_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL abmt301_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL abmt301_set_act_visible()   
            CALL abmt301_set_act_no_visible()
            IF NOT (g_bmfa_m.bmfadocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " bmfaent = '" ||g_enterprise|| "' AND bmfasite = '" ||g_site|| "' AND",
                                  " bmfadocno = '", g_bmfa_m.bmfadocno, "' "
 
               #填到對應位置
               CALL abmt301_browser_fill("")
            END IF
         #應用 a32 樣板自動產生(Version:2)
         #簽核狀況
         ON ACTION bpm_status
            #查詢簽核狀況, 統一建立HyperLink
            CALL cl_bpm_status()
            #add-point:ON ACTION bpm_status
            {<point name="menu.bpm_status" />}
            #END add-point
 
 
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "bmfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmfp_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmfb_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL abmt301_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
               INITIALIZE g_wc2_table2 TO NULL
 
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "bmfa_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmfp_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "bmfb_t" 
                        LET g_wc2_table2 = la_wc[li_idx].wc
 
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
                  OR NOT cl_null(g_wc2_table2)
 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
                  IF g_wc2_table2 <> " 1=1" AND NOT cl_null(g_wc2_table2) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
                  END IF
 
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL abmt301_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL abmt301_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL abmt301_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL abmt301_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt301_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL abmt301_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt301_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL abmt301_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt301_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL abmt301_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt301_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL abmt301_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL abmt301_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_bmfp_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_bmfp2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD bmfp002
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL abmt301_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL abmt301_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION take
            LET g_action_choice="take"
            IF cl_auth_chk_act("take") THEN
               
               #add-point:ON ACTION take
               {<point name="menu.take" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL abmt301_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL abmt301_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               &include "erp/abm/abmt301_rep.4gl"
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL abmt301_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION product
            LET g_action_choice="product"
            IF cl_auth_chk_act("product") THEN
               
               #add-point:ON ACTION product
               {<point name="menu.product" />}
               #END add-point
               
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL abmt301_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL abmt301_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL abmt301_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_bmfa_m.bmfadocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="abmt301.ui_headershow" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION abmt301_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_bmfa_m.bmfadocno = g_browser[g_current_idx].b_bmfadocno   
 
   EXECUTE abmt301_master_referesh USING g_site,g_bmfa_m.bmfadocno INTO g_bmfa_m.bmfadocno,g_bmfa_m.bmfadocdt, 
       g_bmfa_m.bmfa005,g_bmfa_m.bmfa006,g_bmfa_m.bmfa007,g_bmfa_m.bmfa008,g_bmfa_m.bmfastus,g_bmfa_m.bmfacrtid, 
       g_bmfa_m.bmfacrtdp,g_bmfa_m.bmfacrtdt,g_bmfa_m.bmfaownid,g_bmfa_m.bmfaowndp,g_bmfa_m.bmfamodid, 
       g_bmfa_m.bmfamoddt,g_bmfa_m.bmfacnfid,g_bmfa_m.bmfacnfdt,g_bmfa_m.bmfa006_desc,g_bmfa_m.bmfa007_desc, 
       g_bmfa_m.bmfacrtid_desc,g_bmfa_m.bmfacrtdp_desc,g_bmfa_m.bmfaownid_desc,g_bmfa_m.bmfaowndp_desc, 
       g_bmfa_m.bmfamodid_desc,g_bmfa_m.bmfacnfid_desc
   CALL abmt301_bmfa_t_mask()
   CALL abmt301_show()
      
END FUNCTION
]]>
  </section>
  <section id="abmt301.unlock_b" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION abmt301_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt301_bcl
   END IF
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE abmt301_bcl2
   END IF
 
 
   
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="abmt301.update_b" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION abmt301_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmfp_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL abmt301_bmfp_t_mask_restore('restore_mask_o')
               
      UPDATE bmfp_t 
         SET (bmfpdocno,
              bmfp002,bmfp003
              ,bmfp004,bmfp005,bmfp006,bmfp007) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_bmfp_d[g_detail_idx].bmfp004,g_bmfp_d[g_detail_idx].bmfp005,g_bmfp_d[g_detail_idx].bmfp006, 
                  g_bmfp_d[g_detail_idx].bmfp007) 
         WHERE bmfpent = g_enterprise AND bmfpsite = g_site AND bmfpdocno = ps_keys_bak[1] AND bmfp002 = ps_keys_bak[2] AND bmfp003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmfp_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmfp_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL abmt301_bmfp_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "bmfb_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point  
      
      #將遮罩欄位還原
      CALL abmt301_bmfb_t_mask_restore('restore_mask_o')
               
      UPDATE bmfb_t 
         SET (bmfbdocno,
              bmfb002
              ,bmfb003,bmfb005,bmfb006,bmfb007,bmfb008,bmfb009,bmfb010,bmfb011,bmfb012,bmfb013,bmfb014,bmfb015,bmfb016,bmfb017,bmfb018,bmfb019,bmfb020) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_bmfp2_d[g_detail_idx].bmfb003,g_bmfp2_d[g_detail_idx].bmfb005,g_bmfp2_d[g_detail_idx].bmfb006, 
                  g_bmfp2_d[g_detail_idx].bmfb007,g_bmfp2_d[g_detail_idx].bmfb008,g_bmfp2_d[g_detail_idx].bmfb009, 
                  g_bmfp2_d[g_detail_idx].bmfb010,g_bmfp2_d[g_detail_idx].bmfb011,g_bmfp2_d[g_detail_idx].bmfb012, 
                  g_bmfp2_d[g_detail_idx].bmfb013,g_bmfp2_d[g_detail_idx].bmfb014,g_bmfp2_d[g_detail_idx].bmfb015, 
                  g_bmfp2_d[g_detail_idx].bmfb016,g_bmfp2_d[g_detail_idx].bmfb017,g_bmfp2_d[g_detail_idx].bmfb018, 
                  g_bmfp2_d[g_detail_idx].bmfb019,g_bmfp2_d[g_detail_idx].bmfb020) 
         WHERE bmfbent = g_enterprise AND bmfbsite = g_site AND bmfbdocno = ps_keys_bak[1] AND bmfb002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmfb_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "bmfb_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL abmt301_bmfb_t_mask_restore('restore_mask_n')
 
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
