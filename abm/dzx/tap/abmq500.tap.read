<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="abmq500" std_prog="abmq500" erpver="1.0" module="ABM" ver="11" env="s" zone="t10prd" booking="N" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="Q" status=""/>
    <free_style value="Y" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="input.a.page1.bmaa001" order="0" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmaa_d[g_detail_idx].bmaasite IS NOT NULL AND g_bmaa_d[g_detail_idx].bmaa001 IS NOT NULL AND g_bmaa_d[g_detail_idx].bmaa002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmaa_d[g_detail_idx].bmaasite != g_bmaa_d_t.bmaasite OR g_bmaa_d[g_detail_idx].bmaa001 != g_bmaa_d_t.bmaa001 OR g_bmaa_d[g_detail_idx].bmaa002 != g_bmaa_d_t.bmaa002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_d[g_detail_idx].bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_d[g_detail_idx].bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_d[g_detail_idx].bmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="main.define_sql" order="0" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      
   LET g_forupd_sql = ""]]>
  </point>
  <point name="input.a.page1.bmaasite" order="0" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmaa_d[g_detail_idx].bmaasite IS NOT NULL AND g_bmaa_d[g_detail_idx].bmaa001 IS NOT NULL AND g_bmaa_d[g_detail_idx].bmaa002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmaa_d[g_detail_idx].bmaasite != g_bmaa_d_t.bmaasite OR g_bmaa_d[g_detail_idx].bmaa001 != g_bmaa_d_t.bmaa001 OR g_bmaa_d[g_detail_idx].bmaa002 != g_bmaa_d_t.bmaa002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_d[g_detail_idx].bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_d[g_detail_idx].bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_d[g_detail_idx].bmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.bmaa002" order="0" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_bmaa_d[g_detail_idx].bmaasite IS NOT NULL AND g_bmaa_d[g_detail_idx].bmaa001 IS NOT NULL AND g_bmaa_d[g_detail_idx].bmaa002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_bmaa_d[g_detail_idx].bmaasite != g_bmaa_d_t.bmaasite OR g_bmaa_d[g_detail_idx].bmaa001 != g_bmaa_d_t.bmaa001 OR g_bmaa_d[g_detail_idx].bmaa002 != g_bmaa_d_t.bmaa002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM bmaa_t WHERE "||"bmaaent = '" ||g_enterprise|| "' AND "||"bmaasite = '"||g_bmaa_d[g_detail_idx].bmaasite ||"' AND "|| "bmaa001 = '"||g_bmaa_d[g_detail_idx].bmaa001 ||"' AND "|| "bmaa002 = '"||g_bmaa_d[g_detail_idx].bmaa002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="function.abmq500_init" order="1" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_init()
   #add-point:init段define

   #end add-point
   LET g_wc_filter   = " 1=1"
   LET g_wc_filter_t = " 1=1"
   LET g_error_show  = 1
#  LET g_selcolor    = "#D0E7FD"

   CALL cl_set_combo_scc('imaa004','1001')
   CALL cl_set_combo_scc('imaa011','1002')
   CALL cl_set_combo_scc('b_bmba013','1101')
   CALL cl_set_combo_scc('b_bmba029','1108')
   CALL cl_set_combo_scc('b_bmba021','4003')
   CALL cl_set_combo_scc('bmea007','1103')
   CALL cl_set_combo_scc('bmea016','1105')
   CALL cl_set_combo_scc('bmcc010','1106')
   
   #add-point:畫面資料初始化
   LET g_date = cl_get_current()
   LET g_type.a = '1'
   LET g_type.b = '1'
   DISPLAY BY NAME g_type.*   
   #end add-point
      
END FUNCTION]]>
  </point>
  <point name="function.abmq500_ui_dialog" order="2" ver="11" cite_std="N" new="Y" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_ui_dialog()
   {<Local define>}
   DEFINE li_exit   LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_result STRING
   {</Local define>}
   #add-point:ui_dialog段define
   #add--2015/06/25 By shiun--(S)
   DEFINE l_date    STRING #日期段字串
   DEFINE l_time    STRING #時間段字串
   DEFINE l_length  LIKE type_t.num5   #時間/日期總長度
   DEFINE l_n       LIKE type_t.num5   #第一個空白位置
   #add--2015/06/25 By shiun--(E)
   #end add-point


   CALL cl_set_act_visible("accept,cancel", FALSE)

   LET li_exit = FALSE
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()
   LET g_current_row = 0
   LET g_current_idx = 1
   LET g_action_choice = " "
   LET g_main_hidden = 1
   LET l_ac = 1

   #add-point:ui_dialog段before dialog

   #end add-point


   #CALL abmq500_b_fill()

   WHILE li_exit = FALSE

      CALL cl_dlg_query_bef_disp()  #相關查詢

      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         INPUT g_date,g_type.a,g_type.b  FROM bmba005,a,b ATTRIBUTE(WITHOUT DEFAULTS)
            BEFORE INPUT
            
            AFTER FIELD bmba005 
               CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
               IF NOT cl_null(ls_result) THEN
                  IF NOT cl_chk_date_symbol(ls_result) THEN
                     LET ls_result = cl_add_date_extra_cond(ls_result)
                  END IF
                  #add--2015/06/25 By shiun--(S)
                  LET l_length = LENGTH(ls_result)
                  LET l_n = ls_result.getIndexOf(' ',1)
                  LET l_date = ls_result.subString(1,l_n)
                  LET l_time = ls_result.subString(l_n+1,l_length+1)
                  LET l_time = cl_replace_str(l_time,'  ','00')
                  LET l_time = cl_replace_str(l_time,' ','00')
                  LET ls_result = l_date || l_time
                  #add--2015/06/25 By shiun--(S)
               END IF
               CALL FGL_DIALOG_SETBUFFER(ls_result)            
         END INPUT

         CONSTRUCT BY NAME g_wc ON imaa001
            ON ACTION controlp INFIELD imaa001
               INITIALIZE g_qryparam.* TO NULL
               LET g_qryparam.state = 'c'
               LET g_qryparam.reqry = FALSE
               CALL q_imaa001_9()                     #呼叫開窗
               DISPLAY g_qryparam.return1 TO imaa001  #顯示到畫面上
               NEXT FIELD imaa001                     #返回原欄位            
         END CONSTRUCT

         
         DISPLAY ARRAY g_bmaa TO s_detail2.* ATTRIBUTE(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 7
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmaa.getLength() TO FORMONLY.h_count
               LET g_bmaa_idx = l_ac
               CALL abmq500_b_fill2()
               
            ON ACTION modify_detail
               CALL cl_set_comp_visible("bapge_1", FALSE)
               CALL cl_set_comp_visible("bapge_2", FALSE)
               CALL ui.interface.refresh()
               CALL cl_set_comp_visible("bapge_2", TRUE)
               CALL cl_set_comp_visible("bapge_1", TRUE)                           

         END DISPLAY
         
         DISPLAY ARRAY g_bmba TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)

            BEFORE DISPLAY
               LET g_current_page = 1

            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmba.getLength() TO FORMONLY.h_count
               LET g_bmba_idx = l_ac
               CALL abmq500_b_fill3()

               #add-point:input段before row

               #end add-point

            #+ 此段落由子樣板qs20產生
            ON EXPAND (g_row_index)
               #樹展開

            ON COLLAPSE (g_row_index)
               #樹關閉

            #自訂ACTION(detail_show,page_1)
            ON ACTION modify_detail1
            
         END DISPLAY

         DISPLAY ARRAY g_bmab TO s_detail3.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 8
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail3")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmab.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_8)

         END DISPLAY

         DISPLAY ARRAY g_bmac TO s_detail4.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 9
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail4")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmac.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_9)

         END DISPLAY

         DISPLAY ARRAY g_bmad TO s_detail5.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 10
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail5")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmad.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_10)

         END DISPLAY

         DISPLAY ARRAY g_bmbb TO s_detail6.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 11
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail6")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmbb.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_11)

         END DISPLAY

         DISPLAY ARRAY g_bmea TO s_detail7.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 12
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail7")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmea.getLength() TO FORMONLY.h_count
               LET g_bmea_idx = l_ac
               CALL abmq500_b_fill6()
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_12)

         END DISPLAY

         DISPLAY ARRAY g_bmeb TO s_detail8.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 13
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail8")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmeb.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_13)

         END DISPLAY

         DISPLAY ARRAY g_bmbc TO s_detail9.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 14
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail9")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmbc.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_14)

         END DISPLAY

         DISPLAY ARRAY g_bmca TO s_detail10.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 2
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail10")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmca.getLength() TO FORMONLY.h_count
               LET g_bmca_idx = l_ac
               CALL abmq500_b_fill4()
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_2)

         END DISPLAY

         DISPLAY ARRAY g_bmcb TO s_detail11.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 3
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail11")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmcb.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_3)

         END DISPLAY

         DISPLAY ARRAY g_bmcc TO s_detail12.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 4
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail12")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmcc.getLength() TO FORMONLY.h_count
               LET g_bmcc_idx = l_ac
               CALL abmq500_b_fill5()
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_4)

         END DISPLAY

         DISPLAY ARRAY g_bmcd TO s_detail13.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 5
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail13")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmcd.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_5)

         END DISPLAY

         DISPLAY ARRAY g_bmce TO s_detail14.* ATTRIBUTES(COUNT=g_detail_cnt)
            BEFORE DISPLAY
               LET g_current_page = 6
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail14")
               LET l_ac = g_detail_idx
               DISPLAY g_detail_idx TO FORMONLY.h_index
               DISPLAY g_bmce.getLength() TO FORMONLY.h_count
               #add-point:input段before row

               #end add-point
            #自訂ACTION(detail_show,page_6)

         END DISPLAY

         #add-point:ui_dialog段自定義display array

         #end add-point

         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan

         BEFORE DIALOG
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before dialog

            #end add-point

         AFTER DIALOG
            #add-point:ui_dialog段 after dialog

            #end add-point

         ON ACTION exit
            LET g_action_choice="exit"
            LET INT_FLAG = FALSE
            LET li_exit = TRUE
            EXIT DIALOG

         ON ACTION close
            LET INT_FLAG=FALSE
            LET li_exit = TRUE
            EXIT DIALOG

         ON ACTION accept
            INITIALIZE g_wc_filter TO NULL
            IF cl_null(g_wc) THEN
               LET g_wc = " 1=1"
            END IF



            LET g_wc2 = " 1=1"
            #儲存WC資訊
            CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
            CALL abmq500_b_fill()


         ON ACTION agendum   # 待辦事項
            #add-point:ON ACTION agendum

            #END add-point
            CALL cl_user_overview()

         ON ACTION qbeclear   # 條件清除
            CLEAR FORM

         ON ACTION datarefresh   # 重新整理
            CALL abmq500_b_fill()

         ON ACTION datainfo

            LET g_action_choice="datainfo"
            IF cl_auth_chk_act("datainfo") THEN
               #add-point:ON ACTION datainfo

               #END add-point
               EXIT DIALOG
            END IF

         #+ 提供二次篩選的功能
         ON ACTION filter
            LET g_action_choice="filter"
            CALL abmq500_filter()
            #add-point:ON ACTION filter

            #END add-point
            #EXIT DIALOG

         ON ACTION output

            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #add-point:ON ACTION output

               #END add-point
               EXIT DIALOG
            END IF
            
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               CALL g_export_node.clear()
               LET g_main_hidden = 0
               LET g_export_node[1] = base.typeInfo.create(g_bmaa)
               LET g_export_id[1]   = "s_detail2"
               LET g_export_node[2] = base.typeInfo.create(g_bmba)
               LET g_export_id[2]   = "s_detail1"
               LET g_export_node[3] = base.typeInfo.create(g_bmab)
               LET g_export_id[3]   = "s_detail3"
               LET g_export_node[4] = base.typeInfo.create(g_bmac)
               LET g_export_id[4]   = "s_detail4"
               LET g_export_node[5] = base.typeInfo.create(g_bmad)
               LET g_export_id[5]   = "s_detail5"
               LET g_export_node[6] = base.typeInfo.create(g_bmbb)
               LET g_export_id[6]   = "s_detail6"
               LET g_export_node[7] = base.typeInfo.create(g_bmea)
               LET g_export_id[7]   = "s_detail7"
               LET g_export_node[8] = base.typeInfo.create(g_bmeb)
               LET g_export_id[8]   = "s_detail8"
               LET g_export_node[9] = base.typeInfo.create(g_bmbc)
               LET g_export_id[9]   = "s_detail9"               
               LET g_export_node[10] = base.typeInfo.create(g_bmca)
               LET g_export_id[10]   = "s_detail10"
               LET g_export_node[11] = base.typeInfo.create(g_bmcb)
               LET g_export_id[11]   = "s_detail11"
               LET g_export_node[12] = base.typeInfo.create(g_bmcc)
               LET g_export_id[12]   = "s_detail12"
               LET g_export_node[13] = base.typeInfo.create(g_bmcd)
               LET g_export_id[13]   = "s_detail13"
               LET g_export_node[14] = base.typeInfo.create(g_bmce)
               LET g_export_id[14]   = "s_detail14"                 
               CALL cl_export_to_excel_getpage()
               CALL cl_export_to_excel()
            END IF
            
         ON ACTION qbehidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("qbe",0)
               CALL gfrm_curr.setElementImage("qbehidden","16/mainhidden.png")
               LET g_worksheet_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("qbe",1)
               CALL gfrm_curr.setElementImage("qbehidden","16/worksheethidden.png")
               LET g_worksheet_hidden = 1
            END IF
            
         ON ACTION controls   #瀏覽頁折疊
            IF g_detail_hidden THEN
               CALL gfrm_curr.setElementHidden("hbox_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_detail_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("hbox_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_detail_hidden = 1
            END IF            

         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"

      END DIALOG

   END WHILE
END FUNCTION]]>
  </point>
  <point name="function.abmq500_b_fill" order="3" ver="9" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_b_fill()
   {<Local define>}
   DEFINE ls_wc           STRING
   DEFINE l_pid           LIKE type_t.chr50
   {</Local define>}
   #add-point:b_fill段define
   DEFINE l_sql           STRING
   DEFINE l_sql2          STRING
   DEFINE ls_wc2          STRING
   DEFINE l_wc            STRING
   DEFINE l_wc2           STRING
   DEFINE l_i             LIKE type_t.num5
   #end add-point

   #add-point:b_fill段sql_before

   #end add-point

   LET g_detail_idx  = 1
   LET g_bmaa_idx  = 1

   IF cl_null(g_wc_filter) THEN
      LET g_wc_filter = " 1=1"
   END IF
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF

   LET ls_wc = g_wc, " AND ", g_wc2
   
   CALL g_bmaa.clear()
   CALL g_bmab.clear()
   CALL g_bmac.clear()
   CALL g_bmad.clear()
   CALL g_bmba.clear()
   CALL g_bmbb.clear()
   CALL g_bmbc.clear()
   CALL g_bmca.clear()
   CALL g_bmcb.clear()
   CALL g_bmcc.clear()
   CALL g_bmcd.clear()
   CALL g_bmce.clear()
   CALL g_bmea.clear()
   CALL g_bmeb.clear()
   DISPLAY '' TO ooff013b

   IF g_date IS NULL THEN 
      LET g_date = g_today
      DISPLAY g_date TO date
   END IF

   LET g_cnt = l_ac
   LET l_ac = 1
   ERROR "Searching!"

   # b_fill段sql組成及FOREACH撰寫
   #+ 此段落由子樣板qs09產生
   #+ b_fill段資料取得(包含sql組成及FOREACH段撰寫)
   #add-point:b_fill段sql

   CASE g_type.a
      WHEN '1'
         LET ls_wc = cl_replace_str(g_wc,'imaa001','bmaa001')
         LET l_sql = "SELECT DISTINCT bmaa001,imaal003,imaal004,bmaa002,imaa009,'',imaa004,imaa010,'',imaa011,bmaa003,bmaa004,'','' ",
                     "  FROM bmaa_t ",
                     "       LEFT OUTER JOIN bmba_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmaa001 = bmba001 AND bmaa002 = bmba002 ",
                     "       LEFT OUTER JOIN imaa_t ON imaaent ='",g_enterprise,"' AND bmaa001 = imaa001 ",
                     "       LEFT OUTER JOIN imaal_t ON imaalent ='",g_enterprise,"' AND bmaa001 = imaal001 AND imaal002 = '",g_lang,"'",
                     " WHERE bmaaent = '",g_enterprise,"' AND bmaasite = '",g_bmaasite,"' AND ",ls_wc," AND ",g_wc_filter,
                     "  AND to_char(bmba005,'YY/MM/DD hh24:mi:ss')<='",g_date,"'",
                     "  AND (bmba006 IS NULL OR to_char(bmba006,'YY/MM/DD hh24:mi:ss')>'",g_date,"')",
                     "  AND bmaastus = 'Y' ",
                     " ORDER BY bmaa001,bmaa002"  
      WHEN '2'
         LET ls_wc = cl_replace_str(g_wc,'imaa001','bmba003')
         LET l_wc = ls_wc
         LET l_sql = "SELECT DISTINCT bmba001,bmba002,bmba003 ",
                     "  FROM bmba_t",      
                     " WHERE bmbaent = '",g_enterprise,"' AND bmbasite = '",g_bmaasite,"' AND ",ls_wc,
                     "  AND to_char(bmba005,'YY/MM/DD hh24:mi:ss')<='",g_date,"'",
                     "  AND (bmba006 IS NULL OR to_char(bmba006,'YY/MM/DD hh24:mi:ss')>'",g_date,"')"
      WHEN '3'
         LET ls_wc = cl_replace_str(g_wc,'imaa001','bmea008')
         LET l_wc = ls_wc
         LET ls_wc = ls_wc,"   AND to_char(bmea009,'YY/MM/DD hh24:mi:ss') <='",g_date,"'",
                           "   AND (bmea010 IS NULL OR to_char(bmea010,'YY/MM/DD hh24:mi:ss') >'",g_date,"')"
         LET l_sql = "SELECT DISTINCT bmba001,bmba002,bmba003 ",
                     "  FROM bmba_t,bmea_t ",
                     " WHERE bmbaent = bmeaent AND bmbasite = bmeasite AND bmba001 = bmea001 AND bmba002 = bmea002", 
                     "   AND bmba003= bmea003 AND bmba004 = bmea004 AND bmba007 = bmea005 AND bmba008 = bmea006 ",
                     "   AND bmbaent = '",g_enterprise,"' AND bmbasite = '",g_bmaasite,"' AND ",ls_wc
                     
      WHEN '4'
         LET ls_wc2 = cl_replace_str(g_wc,'imaa001','bmba003')
         LET ls_wc = cl_replace_str(g_wc,'imaa001','bmea008')
         LET l_wc = "(",ls_wc," OR ",ls_wc2,")" 
         LET ls_wc = ls_wc,"   AND to_char(bmea009,'YY/MM/DD hh24:mi:ss') <='",g_date,"'",
                           "   AND (bmea010 IS NULL OR to_char(bmea010,'YY/MM/DD hh24:mi:ss') >'",g_date,"')"
         LET l_sql = "SELECT DISTINCT bmba001,bmba002,bmba003 ",
                     "  FROM bmba_t ",
                     "       LEFT OUTER JOIN bmea_t ON bmbaent = bmeaent AND bmbasite = bmeasite AND bmba001 = bmea001 AND bmba002 = bmea002", 
                     "                             AND bmba003= bmea003 AND bmba004 = bmea004 AND bmba007 = bmea005 AND bmba008 = bmea006 ",
                     " WHERE bmbaent = '",g_enterprise,"' AND bmbasite = '",g_bmaasite,"' AND (",ls_wc," OR (",ls_wc2,"))"
   END CASE
   IF g_type.a = '1' THEN 
      LET g_sql = l_sql
   ELSE
      CASE g_type.b
         WHEN '1'
            LET l_sql2 = " SELECT DISTINCT bmba001,bmba002 FROM bmba_t ",
                         "  WHERE bmbasite = '",g_bmaasite,"'",
                         "  START WITH (bmba001,bmba002,bmba003) IN(",l_sql,")",
                         "  CONNECT BY NOCYCLE PRIOR bmba001 = bmba003 AND PRIOR bmba002 = bmba002 AND bmbasite = '",g_bmaasite,"' ORDER BY bmba001 " 
         WHEN '2'
            LET l_sql2 = " SELECT DISTINCT bmba001,bmba002 FROM bmba_t ",
                         "  WHERE bmbasite = '",g_bmaasite,"' AND LEVEL = 1",
                         "  START WITH (bmba001,bmba002,bmba003) IN(",l_sql,")",
                         "  CONNECT BY NOCYCLE PRIOR bmba001 = bmba003 AND PRIOR bmba002 = bmba002 AND bmbasite = '",g_bmaasite,"' ORDER BY bmba001 "
         WHEN '3'
            LET l_sql2 = " SELECT DISTINCT bmba001,bmba002 FROM bmba_t ",
                         "  WHERE bmbasite = '",g_bmaasite,"' AND CONNECT_BY_ISLEAF = 1 ",
                         "  START WITH (bmba001,bmba002,bmba003) IN(",l_sql,")",
                         "  CONNECT BY NOCYCLE PRIOR bmba001 = bmba003 AND PRIOR bmba002 = bmba002 AND bmbasite = '",g_bmaasite,"' ORDER BY bmba001 "        
      END CASE
      LET g_sql =  "SELECT DISTINCT bmaa001,imaal003,imaal004,bmaa002,imaa009,'',imaa004,imaa010,'',imaa011,bmaa003,bmaa004,'','' ",
                   "  FROM bmaa_t a ",
                   "       LEFT OUTER JOIN bmba_t ON a.bmaaent = bmbaent AND a.bmaasite = bmbasite AND a.bmaa001 = bmba001 AND a.bmaa002 = bmba002 ",
                   "       LEFT OUTER JOIN imaa_t ON imaaent ='",g_enterprise,"' AND a.bmaa001 = imaa001 ",
                   "       LEFT OUTER JOIN imaal_t ON imaalent ='",g_enterprise,"' AND a.bmaa001 = imaal001 AND imaal002 = '",g_lang,"' ,",
                   " (",l_sql2,") b ",
                   " WHERE a.bmaa001 = b.bmba001 AND a.bmaa002 = b.bmba002 ",
                   "   AND bmaaent = '",g_enterprise,"' AND bmaasite = '",g_bmaasite,"' AND ",g_wc_filter,
                   "   AND to_char(bmba005,'YY/MM/DD hh24:mi:ss')<='",g_date,"'",
                   "   AND (bmba006 IS NULL OR to_char(bmba006,'YY/MM/DD hh24:mi:ss')>'",g_date,"')",
                   "   AND bmaastus = 'Y' ",
                   " ORDER BY bmaa001,bmaa002"  
   END IF
   
   PREPARE bmaa_pre FROM g_sql
   DECLARE bmaa_cur CURSOR FOR bmaa_pre
   FOREACH bmaa_cur INTO g_bmaa[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_bmaa[l_ac].imaa009
      CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_bmaa[l_ac].imaa009_desc = '', g_rtn_fields[1] , ''

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_bmaa[l_ac].imaa010
      CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='210' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_bmaa[l_ac].imaa010_desc = '', g_rtn_fields[1] , ''

      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_bmaa[l_ac].bmaa004
      CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_bmaa[l_ac].bmaa004_desc = '', g_rtn_fields[1] , ''
   
      CALL s_aooi360_sel('4',g_bmaasite,g_bmaa[l_ac].bmaa001,g_bmaa[l_ac].bmaa002,'','','','','','','','4')
         RETURNING g_success,g_bmaa[l_ac].ooff013a
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

         END IF
         EXIT FOREACH
      END IF
   END FOREACH
   #end add-point
   
   CALL g_bmaa.deleteElement(g_bmaa.getLength())
   CALL g_bmab.deleteElement(g_bmab.getLength())
   CALL g_bmac.deleteElement(g_bmac.getLength())
   CALL g_bmad.deleteElement(g_bmad.getLength())
   CALL g_bmba.deleteElement(g_bmba.getLength())
   CALL g_bmbb.deleteElement(g_bmbb.getLength())
   CALL g_bmbc.deleteElement(g_bmbc.getLength())
   CALL g_bmca.deleteElement(g_bmca.getLength())
   CALL g_bmcb.deleteElement(g_bmcb.getLength())
   CALL g_bmcc.deleteElement(g_bmcc.getLength())
   CALL g_bmcd.deleteElement(g_bmcd.getLength())
   CALL g_bmce.deleteElement(g_bmce.getLength())
   CALL g_bmea.deleteElement(g_bmea.getLength())
   CALL g_bmeb.deleteElement(g_bmeb.getLength())


   LET g_error_show = 0





   #add-point:b_fill段資料填充(其他單身)

   #end add-point

   LET g_detail_cnt = l_ac - 1
   DISPLAY g_detail_cnt TO FORMONLY.h_count
   LET l_ac = g_cnt
   LET g_cnt = 0
   
   LET l_ac = 1
   IF g_bmaa.getlength() > 0 THEN
      CALL abmq500_b_fill2()
   END IF

END FUNCTION]]>
  </point>
  <point name="function.abmq500_bom_tree_fill" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_bom_tree_fill()
DEFINE li_ac           LIKE type_t.num5
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_bmba          DYNAMIC ARRAY OF RECORD #回传数组
       bmba001         LIKE bmba_t.bmba001,    #bom相关资料都可以通过回传的key值抓取
       bmba002         LIKE bmba_t.bmba002,
       bmba003         LIKE bmba_t.bmba003,
       bmba004         LIKE bmba_t.bmba004,
       bmba005         DATETIME YEAR TO SECOND,
       bmba007         LIKE bmba_t.bmba007,
       bmba008         LIKE bmba_t.bmba008
                       END RECORD                       

   IF g_bmaa[g_bmaa_idx].bmaa001 IS NULL OR g_bmaa[g_bmaa_idx].bmaa002 IS NULL THEN RETURN END IF

   CALL g_bmba.clear()
   CALL l_bmba.clear()
   CALL r_bmba.clear()
   LET l_cnt = 1
   IF NOT cl_null(g_bmaa[g_bmaa_idx].bmaa002) THEN  
      LET g_bmba[l_cnt].name = g_bmaa[g_bmaa_idx].bmaa001,'(',g_bmaa[g_bmaa_idx].bmaa002,')'
   ELSE
      LET g_bmba[l_cnt].name = g_bmaa[g_bmaa_idx].bmaa001
   END IF
   LET g_bmba[l_cnt].bmba001 = g_bmaa[g_bmaa_idx].bmaa001
   LET g_bmba[l_cnt].bmba002 = g_bmaa[g_bmaa_idx].bmaa002 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_bmaa[g_bmaa_idx].bmaa001
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_bmba[l_cnt].bmba003_desc = '', g_rtn_fields[1] , ''
   LET g_bmba[l_cnt].bmba003_desc_1 = '', g_rtn_fields[2] , ''   
   LET g_bmba[l_cnt].pid  = 0
   LET g_bmba[l_cnt].id   = l_cnt USING "<<<"
   LET g_bmba[l_cnt].exp  = TRUE
   LET g_bmba[l_cnt].isExp = TRUE
   LET g_bmba[l_cnt].expcode  = 1
   LET g_bmba[l_cnt].isnode = abmq500_chk_isnode(l_cnt)

   LET g_sql = " SELECT UNIQUE bmba003,'','','','','','',bmba003,imaal003,imaal004,bmba001,bmba002,bmba004,a.oocql004,bmba007,b.oocql004,bmba008,bmba010,bmba011,bmba012, ",
               "               bmba005,bmba006,bmba013,bmba014,bmba020,bmba017,bmba025,bmba018,bmba029,",
               "               bmba021,bmba022,bmba023,bmba024,bmba030,bmba031,bmba015,inaa002,bmba016,inab003 ",
               "   FROM bmba_t ",
               "        LEFT OUTER JOIN imaal_t ON bmbaent = imaalent AND bmba003 = imaal001 AND imaal002 = '",g_lang,"'",
               "        LEFT OUTER JOIN oocql_t a ON bmbaent = a.oocqlent AND a.oocql001 = '215' AND bmba004 = a.oocql002 AND a.oocql003 = '",g_lang,"'",
               "        LEFT OUTER JOIN oocql_t b ON bmbaent = b.oocqlent AND b.oocql001 = '221' AND bmba007 = b.oocql002 AND b.oocql003 = '",g_lang,"'",
               "        LEFT OUTER JOIN inaa_t ON bmbaent = inaaent AND bmba015 = inaa001 ",
               "        LEFT OUTER JOIN inab_t ON bmbaent = inabent AND bmba016 = inab002 ",
               "  WHERE bmbaent = '",g_enterprise,"' ",
               "    AND bmbasite= '",g_bmaasite,"' ",
               "    AND bmba001 = ?",
               "    AND bmba002 = ?",
               "    AND bmba003 = ?",
               "    AND bmba004 = ?",
               "    AND bmba005 = ?",
               "    AND bmba007 = ?",
               "    AND bmba008 = ?"
   IF NOT cl_null(g_date) THEN             
      LET g_sql = g_sql," AND (to_char(bmba005,'yy/mm/dd hh24:mi:ss') <='", g_date,"')",
                        " AND (to_char(bmba006,'yy/mm/dd hh24:mi:ss') >  '",g_date,"'",
                        "      OR to_char(bmba006,'yy/mm/dd hh24:mi:ss') IS NULL )"
   END IF 
   PREPARE bmba_pre FROM g_sql

   CASE g_type.b
      WHEN '1'
         CALL abmq500_bom(0,g_bmaa[g_bmaa_idx].bmaa001,g_bmaa[g_bmaa_idx].bmaa002,g_bmaasite,g_date,'2')
         FOR li_ac = 1 TO r_bmba.getlength()
             LET l_bmba[li_ac].* = r_bmba[li_ac].*
         END FOR
         LET g_ac = l_cnt   
         FOR li_ac = 1 TO l_bmba.getlength()
            LET g_ac = g_ac + 1
            EXECUTE bmba_pre USING l_bmba[li_ac].bmba001,l_bmba[li_ac].bmba002,l_bmba[li_ac].bmba003,
                                   l_bmba[li_ac].bmba004,l_bmba[li_ac].bmba005,l_bmba[li_ac].bmba007,
                                   l_bmba[li_ac].bmba008
                             INTO g_bmba[g_ac].*                            
            LET g_bmba[g_ac].pid  = l_cnt
            LET g_bmba[g_ac].id   = l_cnt,'.', g_ac USING "<<<"
            LET g_bmba[g_ac].exp  = TRUE
            LET g_bmba[g_ac].isExp  = TRUE
            LET g_bmba[g_ac].expcode  = 2
            LET g_bmba[g_ac].isnode = abmq500_chk_isnode(g_ac)
            IF g_bmba[g_ac].isnode THEN 
               CALL abmq500_tree_expand(g_ac)
            END IF
         END FOR         
      WHEN '2'
         CALL abmq500_bom(0,g_bmaa[g_bmaa_idx].bmaa001,g_bmaa[g_bmaa_idx].bmaa002,g_bmaasite,g_date,'2')
         FOR li_ac = 1 TO r_bmba.getlength()
             LET l_bmba[li_ac].* = r_bmba[li_ac].*
         END FOR         
         FOR li_ac = 1 TO l_bmba.getlength()
            LET l_ac = l_cnt + li_ac 
            EXECUTE bmba_pre USING l_bmba[li_ac].bmba001,l_bmba[li_ac].bmba002,l_bmba[li_ac].bmba003,
                                   l_bmba[li_ac].bmba004,l_bmba[li_ac].bmba005,l_bmba[li_ac].bmba007,
                                   l_bmba[li_ac].bmba008
                             INTO g_bmba[l_ac].*                             
            LET g_bmba[l_ac].pid  = l_cnt
            LET g_bmba[l_ac].id   = l_cnt,'.', l_ac USING "<<<"
            LET g_bmba[l_ac].exp  = FALSE
            LET g_bmba[l_ac].isExp  = TRUE
            LET g_bmba[l_ac].expcode  = 2
            LET g_bmba[l_ac].isnode = abmq500_chk_isnode(l_ac)        
         END FOR
      WHEN '3'
         CALL abmq500_bom(0,g_bmaa[g_bmaa_idx].bmaa001,g_bmaa[g_bmaa_idx].bmaa002,g_bmaasite,g_date,'3')
         FOR li_ac = 1 TO r_bmba.getlength()
             LET l_bmba[li_ac].* = r_bmba[li_ac].*
         END FOR         
         FOR li_ac = 1 TO l_bmba.getlength()
            LET l_ac = l_cnt + li_ac 
            EXECUTE bmba_pre USING l_bmba[li_ac].bmba001,l_bmba[li_ac].bmba002,l_bmba[li_ac].bmba003,
                                   l_bmba[li_ac].bmba004,l_bmba[li_ac].bmba005,l_bmba[li_ac].bmba007,
                                   l_bmba[li_ac].bmba008
                             INTO g_bmba[l_ac].*                             
            LET g_bmba[l_ac].pid  = l_cnt
            LET g_bmba[l_ac].id   = l_cnt,'.', l_ac USING "<<<"
            LET g_bmba[l_ac].exp  = FALSE
            LET g_bmba[l_ac].isExp  = TRUE
            LET g_bmba[l_ac].expcode  = 2
            LET g_bmba[l_ac].isnode = FALSE        
         END FOR
   END CASE  
   
END FUNCTION]]>
  </point>
  <point name="function.abmq500_b_fill2" order="5" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_b_fill2()
   {<Local define>}
   DEFINE li_ac           LIKE type_t.num5
   {</Local define>}
   #add-point:b_fill2段define

   #end add-point

   LET g_bmba_idx  = 1
   
   CALL g_bmab.clear()
   CALL g_bmac.clear()
   CALL g_bmad.clear()
   CALL g_bmbb.clear()
   CALL g_bmbc.clear()
   CALL g_bmca.clear()
   CALL g_bmcb.clear()
   CALL g_bmcc.clear()
   CALL g_bmcd.clear()
   CALL g_bmce.clear()
   CALL g_bmea.clear()
   CALL g_bmeb.clear()
   
   DISPLAY '' TO ooff013b
   
   LET li_ac = l_ac
   -----------------------------------------------------------------------------------------------------    
   ##ooff_t備注##
   -----------------------------------------------------------------------------------------------------   
   LET g_ooff013 = g_bmaa[g_bmaa_idx].ooff013a
   DISPLAY g_ooff013 TO ooff013b
   -----------------------------------------------------------------------------------------------------    
   ##bmba_t##
   -----------------------------------------------------------------------------------------------------
   CALL abmq500_bom_tree_fill()
   
   ----------------------------------------------------------------------------------------------------- 
   ##bmab_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmab003,imaal003,imaal004,imaa009,rtaxl003,imaa010,oocql004,bmab004,bmab005,bmab006 ",
               "  FROM bmab_t ",
               "       LEFT OUTER JOIN imaal_t ON bmabent = imaalent AND bmab003 = imaal001 AND imaal002 = '",g_lang,"'",
               "       LEFT OUTER JOIN imaa_t ON bmabent = imaaent AND bmab003 = imaa001 ",
               "       LEFT OUTER JOIN rtaxl_t ON imaaent = rtaxlent AND imaa009 = rtaxl001 AND rtaxl002 = '",g_lang,"'",
               "       LEFT OUTER JOIN oocql_t ON imaaent = oocqlent AND oocql001= '210' AND oocql002 = imaa010 AND oocql003 = '",g_lang,"'",
               " WHERE bmabent = '",g_enterprise,"'",
               "   AND bmab001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmab002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               " ORDER BY bmab003 "
   PREPARE bmab_pre FROM g_sql
   DECLARE bmab_cur CURSOR FOR bmab_pre               
   FOREACH bmab_cur INTO g_bmab[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH
   
   -----------------------------------------------------------------------------------------------------    
   ##bmac_t##
   -----------------------------------------------------------------------------------------------------
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmac003,imaal003,imaal004,bmac005,bmac006,bmac004,bmac007,bmac008 ",
               "  FROM bmac_t ",
               "       LEFT OUTER JOIN imaal_t ON bmacent = imaalent AND bmac003 = imaal001 AND imaal002 = '",g_lang,"'",
               " WHERE bmacent = '",g_enterprise,"'",
               "   AND bmac001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmac002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               " ORDER BY bmac003 "               
   PREPARE bmac_pre FROM g_sql
   DECLARE bmac_cur CURSOR FOR bmac_pre               
   FOREACH bmac_cur INTO g_bmac[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH               
   -----------------------------------------------------------------------------------------------------    
    ##bmad_t##  
   -----------------------------------------------------------------------------------------------------
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmad003,imaal003,imaal004,imaa009,rtaxl003,imaa010,oocql004,bmad004,bmad005,oocal003,bmad006,bmad007 ",
               "  FROM bmad_t ",
               "       LEFT OUTER JOIN imaal_t ON bmadent = imaalent AND bmad003 = imaal001 AND imaal002 = '",g_lang,"'",
               "       LEFT OUTER JOIN imaa_t ON bmadent = imaaent AND bmad003 = imaa001 ",
               "       LEFT OUTER JOIN rtaxl_t ON imaaent = rtaxlent AND imaa009 = rtaxl001 AND rtaxl002 = '",g_lang,"'",
               "       LEFT OUTER JOIN oocql_t ON imaaent = oocqlent AND oocql001= '210' AND oocql002 = imaa010 AND oocql003 = '",g_lang,"'",
               "       LEFT OUTER JOIN oocal_t ON bmadent = oocalent AND bmad005 = oocal001 AND oocal002 = '",g_lang,"'",
               " WHERE bmadent = '",g_enterprise,"'",
               "   AND bmad001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmad002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               " ORDER BY bmad003 "               
   PREPARE bmad_pre FROM g_sql
   DECLARE bmad_cur CURSOR FOR bmad_pre               
   FOREACH bmad_cur INTO g_bmad[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH     
   ----------------------------------------------------------------------------------------------------- 
   CALL g_bmab.deleteElement(g_bmab.getLength())
   CALL g_bmac.deleteElement(g_bmac.getLength())
   CALL g_bmad.deleteElement(g_bmad.getLength())
   CALL g_bmbb.deleteElement(g_bmbb.getLength())
   CALL g_bmbc.deleteElement(g_bmbc.getLength())
   CALL g_bmca.deleteElement(g_bmca.getLength())
   CALL g_bmcb.deleteElement(g_bmcb.getLength())
   CALL g_bmcc.deleteElement(g_bmcc.getLength())
   CALL g_bmcd.deleteElement(g_bmcd.getLength())
   CALL g_bmce.deleteElement(g_bmce.getLength())
   CALL g_bmea.deleteElement(g_bmea.getLength())
   CALL g_bmeb.deleteElement(g_bmeb.getLength())

   LET l_ac = li_ac
  
   LET l_ac = 1
   IF g_bmba.getlength() > 0 THEN    
      CALL abmq500_b_fill3()
   END IF    
END FUNCTION]]>
  </point>
  <point name="function.abmq500_detail_show" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_detail_show()
   #add-point:show段define

   #end add-point

   #add-point:detail_show段之前

   #end add-point



   #帶出公用欄位reference值page1


   #帶出公用欄位reference值page2


   #帶出公用欄位reference值page3


   #帶出公用欄位reference值page4


   #帶出公用欄位reference值page5


   #帶出公用欄位reference值page6


   #帶出公用欄位reference值page7


   #帶出公用欄位reference值page8


   #帶出公用欄位reference值page9


   #帶出公用欄位reference值page10


   #帶出公用欄位reference值page11


   #帶出公用欄位reference值page12


   #帶出公用欄位reference值page13


   #帶出公用欄位reference值page14




   #讀入ref值
   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point

   #add-point:show段單身reference

   #end add-point



   #add-point:detail_show段之後

   #end add-point

END FUNCTION]]>
  </point>
  <point name="function.abmq500_tree_expand" order="7" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_tree_expand(p_id)
DEFINE p_id            LIKE type_t.num10
DEFINE li_ac           LIKE type_t.num5
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_bmba          DYNAMIC ARRAY OF RECORD #回传数组
       bmba001         LIKE bmba_t.bmba001,    #bom相关资料都可以通过回传的key值抓取
       bmba002         LIKE bmba_t.bmba002,
       bmba003         LIKE bmba_t.bmba003,
       bmba004         LIKE bmba_t.bmba004,
       bmba005         DATETIME YEAR TO SECOND,
       bmba007         LIKE bmba_t.bmba007,
       bmba008         LIKE bmba_t.bmba008
                       END RECORD
   #若已經展開
   #IF g_bmba[p_id].isExp = 1 THEN
   #   RETURN
   #END IF
 
  CALL r_bmba.clear()
  CALL l_bmba.clear()
   
   CALL abmq500_bom(0,g_bmba[p_id].bmba003,g_bmba[p_id].bmba002,g_bmaasite,g_date,'2')
   FOR li_ac = 1 TO r_bmba.getlength()
       LET l_bmba[li_ac].* = r_bmba[li_ac].*
   END FOR      
   FOR li_ac = 1 TO l_bmba.getlength()
      LET g_ac = g_ac + 1
      EXECUTE bmba_pre USING l_bmba[li_ac].bmba001,l_bmba[li_ac].bmba002,l_bmba[li_ac].bmba003,
                             l_bmba[li_ac].bmba004,l_bmba[li_ac].bmba005,l_bmba[li_ac].bmba007,
                             l_bmba[li_ac].bmba008
                       INTO g_bmba[g_ac].*                            
      LET g_bmba[g_ac].pid  = g_bmba[p_id].id
      LET g_bmba[g_ac].id   = g_bmba[p_id].id,'.', li_ac USING "<<<"
      LET g_bmba[g_ac].exp  = TRUE
      LET g_bmba[g_ac].isExp  = TRUE
      LET g_bmba[g_ac].expcode  = g_bmba[p_id].expcode + 1
      LET g_bmba[g_ac].isnode = abmq500_chk_isnode(g_ac)
      IF g_bmba[g_ac].isnode THEN 
         CALL abmq500_tree_expand(g_ac)
      END IF
   END FOR 

END FUNCTION]]>
  </point>
  <point name="function.abmq500_desc_show" order="8" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_desc_show(pi_ac)
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   #add-point:desc_show段define

   #end add-point

   LET li_tmp = l_ac
   LET l_ac = pi_ac

   #add-point:desc處理

   #end add-point

   LET l_ac = li_tmp
END FUNCTION]]>
  </point>
  <point name="function.abmq500_chk_isnode" order="9" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_chk_isnode(pi_id)
   DEFINE pi_id    LIKE type_t.num10
   DEFINE li_cnt   LIKE type_t.num10
   #add-point:chk_isnode段define
   DEFINE l_sql    STRING
   #end add-point


   #add-point:chk_isnode段筆數計算sql組成
   LET l_sql = " SELECT COUNT(*)",
               "   FROM bmba_t ",
               "  WHERE bmba001 = '",g_bmba[pi_id].bmba003,"' ",
               "    AND bmba002 = '",g_bmba[pi_id].bmba002,"' ",
               "    AND bmbaent = '",g_enterprise,"' ",
               "    AND bmbasite = '",g_bmaasite,"' "
   IF NOT cl_null(g_date) THEN             
      LET l_sql = l_sql," AND (to_char(bmba005,'yy/mm/dd hh24:mi:ss') <='", g_date,"')",
                        " AND (to_char(bmba006,'yy/mm/dd hh24:mi:ss') >  '",g_date,"'",
                        "      OR to_char(bmba006,'yy/mm/dd hh24:mi:ss') IS NULL )"
   END IF            
   #end add-point

#   PREPARE abmq500_chk_isnode_pre FROM l_sql
#
#   CASE g_bmba[pi_id].expcode
#      WHEN -1
#         RETURN FALSE
#      WHEN 0
#         RETURN FALSE
#      WHEN 1
#         #add-point:chk_isnode段sql執行
#
#         #end add-point
#      WHEN 2
#         #add-point:chk_isnode段sql執行
#
#         #end add-point
#   END CASE
   PREPARE abmq500_chk_isnode_p FROM l_sql
   EXECUTE abmq500_chk_isnode_p INTO li_cnt
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
END FUNCTION]]>
  </point>
  <point name="function.abmq500_b_fill3" order="10" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_b_fill3()
DEFINE li_ac           LIKE type_t.num5 
DEFINE l_success       LIKE type_t.num5  #add 141020 zhangllc
   
   LET g_bmca_idx = 1
   LET g_bmcc_idx = 1
   LET g_bmea_idx = 1
   
   CALL g_bmbb.clear()
   CALL g_bmbc.clear()
   CALL g_bmca.clear()
   CALL g_bmcb.clear()
   CALL g_bmcc.clear()
   CALL g_bmcd.clear()
   CALL g_bmce.clear()
   CALL g_bmea.clear()
   CALL g_bmeb.clear()



   LET li_ac = l_ac

   ----------------------------------------------------------------------------------------------------- 
   ##bmbb_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmbb009,bmbb010,bmbb011,bmbb012 ",
               "  FROM bmbb_t ",
               " WHERE bmbbent = '",g_enterprise,"'",
               "   AND bmbb001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmbb002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmbb003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmbb004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND (to_char(bmbb005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               "   AND bmbb007 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmbb008 = '",g_bmba[g_bmba_idx].bmba008,"'",
               " ORDER BY bmbb009 "
   PREPARE bmbb_pre FROM g_sql
   DECLARE bmbb_cur CURSOR FOR bmbb_pre               
   FOREACH bmbb_cur INTO g_bmbb[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH

   ----------------------------------------------------------------------------------------------------- 
   ##bmbc_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmbc009,bmbc010,bmbc011 ",
               "  FROM bmbc_t ",
               " WHERE bmbcent = '",g_enterprise,"'",
               "   AND bmbc001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmbc002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmbc003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmbc004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND (to_char(bmbc005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               "   AND bmbc007 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmbc008 = '",g_bmba[g_bmba_idx].bmba008,"'",
               " ORDER BY bmbc009 "
   PREPARE bmbc_pre FROM g_sql
   DECLARE bmbc_cur CURSOR FOR bmbc_pre               
   FOREACH bmbc_cur INTO g_bmbc[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH

   ----------------------------------------------------------------------------------------------------- 
   ##bmca_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmca009,oocql004 ",
               "  FROM bmca_t ",
               "       LEFT OUTER JOIN oocql_t ON bmcaent = oocqlent AND oocql001 = '273' AND bmca009 = oocql002 AND oocql003 = '",g_lang,"'",
               " WHERE bmcaent = '",g_enterprise,"'",
               "   AND bmca001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmca002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmca003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmca004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND (to_char(bmca005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               "   AND bmca007 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmca008 = '",g_bmba[g_bmba_idx].bmba008,"'",
               " ORDER BY bmca009 "
   PREPARE bmca_pre FROM g_sql
   DECLARE bmca_cur CURSOR FOR bmca_pre               
   FOREACH bmca_cur INTO g_bmca[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH
   
   ----------------------------------------------------------------------------------------------------- 
   ##bmcc_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmcc009,oocql004,bmcc010 ",
               "  FROM bmcc_t ",
               "       LEFT OUTER JOIN oocql_t ON bmccent = oocqlent AND oocql001 = '273' AND bmcc009 = oocql002 AND oocql003 = '",g_lang,"'",
               " WHERE bmccent = '",g_enterprise,"'",
               "   AND bmcc001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmcc002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmcc003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmcc004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND (to_char(bmcc005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               "   AND bmcc007 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmcc008 = '",g_bmba[g_bmba_idx].bmba008,"'",
               " ORDER BY bmcc009 "
   PREPARE bmcc_pre FROM g_sql
   DECLARE bmcc_cur CURSOR FOR bmcc_pre               
   FOREACH bmcc_cur INTO g_bmcc[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH
   
   ----------------------------------------------------------------------------------------------------- 
   ##bmce_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmce009,oocql004,bmce010 ",
               "  FROM bmce_t ",
               "       LEFT OUTER JOIN oocql_t ON bmceent = oocqlent AND oocql001 = '273' AND bmce009 = oocql002 AND oocql003 = '",g_lang,"'",
               " WHERE bmceent = '",g_enterprise,"'",
               "   AND bmce001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmce002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmce003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmce004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND (to_char(bmce005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               "   AND bmce007 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmce008 = '",g_bmba[g_bmba_idx].bmba008,"'",
               " ORDER BY bmce009 "
   PREPARE bmce_pre FROM g_sql
   DECLARE bmce_cur CURSOR FOR bmce_pre               
   FOREACH bmce_cur INTO g_bmce[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH

   ----------------------------------------------------------------------------------------------------- 
   ##bmea_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmea007,bmea008,imaal003,imaal004,bmea019,'',bmea009,bmea010,bmea011,bmea012,bmea013,bmea014,bmea015,bmea016,bmea017 ",
               "  FROM bmea_t ",
               "       LEFT OUTER JOIN imaal_t ON bmeaent = imaalent AND bmea008 = imaal001 AND imaal002 = '",g_lang,"'",
               " WHERE bmeaent = '",g_enterprise,"'",
               "   AND bmea001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmea002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmea003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmea004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND bmea005 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmea006 = '",g_bmba[g_bmba_idx].bmba008,"'",
               #"   AND (to_char(bmea009,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               " ORDER BY bmea007 "
   PREPARE bmea_pre FROM g_sql
   DECLARE bmea_cur CURSOR FOR bmea_pre               
   FOREACH bmea_cur INTO g_bmea[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      
      #add 141020 zhangllc
      #显示产品特征说明               
      CALL s_feature_description(g_bmea[l_ac].bmea008,g_bmea[l_ac].bmea019)
         RETURNING l_success,g_bmea[l_ac].bmea019_desc
   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH

   
   CALL g_bmbb.deleteElement(g_bmbb.getLength())
   CALL g_bmbc.deleteElement(g_bmbc.getLength())
   CALL g_bmca.deleteElement(g_bmca.getLength())
   CALL g_bmcb.deleteElement(g_bmcb.getLength())
   CALL g_bmcc.deleteElement(g_bmcc.getLength())
   CALL g_bmcd.deleteElement(g_bmcd.getLength())
   CALL g_bmce.deleteElement(g_bmce.getLength())
   CALL g_bmea.deleteElement(g_bmea.getLength())
   CALL g_bmeb.deleteElement(g_bmeb.getLength())

   LET l_ac = li_ac
   LET l_ac = 1
   CALL abmq500_b_fill4()
   CALL abmq500_b_fill5() 
   CALL abmq500_b_fill6() 
END FUNCTION]]>
  </point>
  <point name="function.abmq500_b_fill4" order="11" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_b_fill4()
DEFINE li_ac           LIKE type_t.num5   
DEFINE l_imaa005       LIKE imaa_t.imaa005   

   CALL g_bmcb.clear()
   
   LET li_ac = l_ac
   
   SELECT imaa005 INTO l_imaa005
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmba[g_bmba_idx].bmba001    
   ----------------------------------------------------------------------------------------------------- 
   ##bmcb_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmcb010,bmcb011,a.imecl005,bmcb012,b.imecl005 ",
               "  FROM bmcb_t ",
               "       LEFT OUTER JOIN imecl_t a ON bmcbent = a.imeclent AND a.imecl001 = '",l_imaa005,"' AND bmcb011 = a.imecl003 AND a.imecl004 = '",g_lang,"'",
               "       LEFT OUTER JOIN imecl_t b ON bmcbent = b.imeclent AND b.imecl001 = '",l_imaa005,"' AND bmcb012 = b.imecl003 AND b.imecl004 = '",g_lang,"'",
               " WHERE bmcbent = '",g_enterprise,"'",
               "   AND bmcb001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmcb002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmcb003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmcb004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND (to_char(bmcb005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               "   AND bmcb007 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmcb008 = '",g_bmba[g_bmba_idx].bmba008,"'",
               "   AND bmcb009 = '",g_bmca[g_bmca_idx].bmca009,"'",
               " ORDER BY bmcb010 "
   PREPARE bmcb_pre FROM g_sql
   DECLARE bmcb_cur CURSOR FOR bmcb_pre               
   FOREACH bmcb_cur INTO g_bmcb[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH

   CALL g_bmcb.deleteElement(g_bmcb.getLength())

   LET l_ac = li_ac
END FUNCTION]]>
  </point>
  <point name="function.abmq500_b_fill5" order="12" ver="3" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_b_fill5()
DEFINE li_ac           LIKE type_t.num5   
DEFINE l_imaa005a      LIKE imaa_t.imaa005  
DEFINE l_imaa005b      LIKE imaa_t.imaa005  

   CALL g_bmcd.clear()
   
   LET li_ac = l_ac
   SELECT imaa005 INTO l_imaa005a
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmba[g_bmba_idx].bmba001 
   SELECT imaa005 INTO l_imaa005b
     FROM imaa_t
    WHERE imaaent = g_enterprise
      AND imaa001 = g_bmba[g_bmba_idx].bmba003       
   ----------------------------------------------------------------------------------------------------- 
   ##bmcd_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmcd010,a.imecl005,bmcd011,b.imecl005 ",
               "  FROM bmcd_t ",
               "       LEFT OUTER JOIN imecl_t a ON bmcdent = a.imeclent AND a.imecl001 = '",l_imaa005a,"' AND bmcd010 = a.imecl003 AND a.imecl004 = '",g_lang,"'",
               "       LEFT OUTER JOIN imecl_t b ON bmcdent = b.imeclent AND b.imecl001 = '",l_imaa005b,"' AND bmcd011 = b.imecl003 AND b.imecl004 = '",g_lang,"'",
               " WHERE bmcdent = '",g_enterprise,"'",
               "   AND bmcd001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmcd002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmcd003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmcd004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND (to_char(bmcd005,'yyyy-mm-dd hh24:mi:ss') = '",g_bmba[g_bmba_idx].bmba005,"')",
               "   AND bmcd007 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmcd008 = '",g_bmba[g_bmba_idx].bmba008,"'",
               "   AND bmcd009 = '",g_bmcc[g_bmcc_idx].bmcc009,"'",
               " ORDER BY bmcd010 "
   PREPARE bmcd_pre FROM g_sql
   DECLARE bmcd_cur CURSOR FOR bmcd_pre               
   FOREACH bmcd_cur INTO g_bmcd[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH
   
   CALL g_bmcd.deleteElement(g_bmcd.getLength())

   LET l_ac = li_ac
END FUNCTION]]>
  </point>
  <point name="function.abmq500_bom" order="13" ver="5" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
################################################################################
# Descriptions...: 展bom
# Memo...........:
# Usage..........: CALL abmq500_bom(p_level,p_bmaa001,p_bmaa002,p_site,p_date,p_type)
# Input parameter: 1.p_level            LIKE type_t.num5        #阶层     主程序调用时给'0'
#                  2.p_bmaa001          LIKE bmaa_t.bmaa001     #料号
#                  3.p_bmaa002          LIKE bmaa_t.bmaa002     #特性
#                  4.p_site             LIKE bmba_t.bmbasite    #据点
#                  5.p_date             LIKE bmba_t.bmba005     #有效日期,可以为空；p_date在所展bom的有效日期范围内才展开
#                  6.p_type             LIKE type_t.chr1        #是否展到最尾阶 ，1:代表展多阶；2：代表展单阶；3：代表展尾阶
# Return code....: 1.r_bmba             DYNAMIC ARRAY OF RECORD
#                    bmba001            LIKE bmba_t.bmba001,    #bom相关资料都可以通过回传的key值抓取
#                    bmba002            LIKE bmba_t.bmba002,
#                    bmba003            LIKE bmba_t.bmba003,
#                    bmba004            LIKE bmba_t.bmba004,
#                    bmba005            DATETIME YEAR TO SECOND,
#                    bmba007            LIKE bmba_t.bmba007,
#                    bmba008            LIKE bmba_t.bmba008
#                                       END RECORD
# Date & Author..: 14/04/25 By Andy
# Modify.........:
################################################################################
PRIVATE FUNCTION abmq500_bom(p_level,p_bmaa001,p_bmaa002,p_site,p_date,p_type)
DEFINE p_level            LIKE type_t.num5
DEFINE p_bmaa001          LIKE bmaa_t.bmaa001
DEFINE p_bmaa002          LIKE bmaa_t.bmaa002
DEFINE p_bmaa004          LIKE bmaa_t.bmaa004
DEFINE p_site             LIKE bmba_t.bmbasite
DEFINE p_date             LIKE bmba_t.bmba005
DEFINE p_type             LIKE type_t.chr1
DEFINE sr                 DYNAMIC ARRAY OF RECORD
       bmba001            LIKE bmba_t.bmba001,
       bmba002            LIKE bmba_t.bmba002,
       bmba003            LIKE bmba_t.bmba003,
       bmba004            LIKE bmba_t.bmba004,
       bmba005            DATETIME YEAR TO SECOND,
       bmba006            DATETIME YEAR TO SECOND,
       bmba007            LIKE bmba_t.bmba007,
       bmba008            LIKE bmba_t.bmba008,
       bmba009            LIKE bmba_t.bmba009
                          END RECORD
DEFINE l_ac               LIKE type_t.num5
DEFINE l_i                LIKE type_t.num5
DEFINE l_x                LIKE type_t.num5
DEFINE l_n                LIKE type_t.num5
DEFINE l_bmba005_1        LIKE ooff_t.ooff007
DEFINE l_bmaa004          LIKE bmaa_t.bmaa004
DEFINE l_imaa004          LIKE imaa_t.imaa004
DEFINE fs_insert          LIKE type_t.chr1
DEFINE l_bmba             RECORD LIKE bmba_t.*
DEFINE l_sfaa015          DATETIME YEAR TO SECOND                          
DEFINE l_sfaa015_1        LIKE type_t.chr20        #BOM有效日期
DEFINE l_sfaa015_num      LIKE type_t.num5


   WHENEVER ERROR CONTINUE
   
   IF cl_null(p_level) OR cl_null(p_bmaa001) OR p_bmaa002 IS NULL OR cl_null(p_site) THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = 'sub-00110'
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN ''
   END IF
   IF cl_null(p_bmaa002) THEN
      LET p_bmaa002 = ' '
   END IF 
   
   IF cl_null(p_type) THEN
      LET p_type = 'N'
   END IF 
   
   IF cl_null(p_date) THEN            #当p_date为null时，bom有效日期为当前日期
      LET l_sfaa015 = cl_get_current()
      LET l_sfaa015_1 = l_sfaa015
   ELSE
      LET l_sfaa015_1 = p_date
#      LET l_sfaa015_num = l_sfaa015_1[1,2]
#      IF l_sfaa015_num > 50 THEN
#         LET l_sfaa015_1 = '19',p_date,' 00:00:00'
#      ELSE
#         LET l_sfaa015_1 = '20',p_date,' 00:00:00'
#      END IF
   END IF 
   
   LET g_sql = "SELECT bmba001,bmba002,bmba003,bmba004,bmba005,bmba006,bmba007,bmba008,bmba009 FROM bmaa_t,bmba_t",
               " WHERE bmaaent=bmbaent AND bmaasite=bmbasite AND bmaa001=bmba001 AND bmaa002=bmba002",
               "   AND bmbaent='",g_enterprise,"' AND bmbasite='",g_bmaasite,"' AND bmba001='",p_bmaa001,"' AND bmba002='",p_bmaa002,"' AND bmaastus='Y'",
               "   AND to_char(bmba005,'YYYY-MM-DD hh24:mi:ss')<='",l_sfaa015_1,"' AND (bmba006 IS NULL OR to_char(bmba006,'YYYY-MM-DD hh24:mi:ss')>'",l_sfaa015_1,"')",
               " ORDER BY bmba001,bmba002,bmba009 "
   PREPARE abmq500_01_bom_pre FROM g_sql
   DECLARE abmq500_01_bom_cs CURSOR FOR abmq500_01_bom_pre
   
   IF p_level = 0 THEN
      LET g_m =1
   END IF
   LET p_level = p_level + 1
   WHILE TRUE
      LET l_ac = 1
      FOREACH abmq500_01_bom_cs INTO sr[l_ac].*
         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "FOREACH:"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            EXIT FOREACH
         END IF
         LET l_ac = l_ac + 1
      END FOREACH
      #无下阶料
      LET l_x = l_ac - 1
      IF l_x = 0 THEN
         LET fs_insert = 'N' 
      END IF 
      
      FOR l_i = 1 TO l_x
         SELECT bmaa004 INTO l_bmaa004 FROM bmaa_t WHERE bmaaent=g_enterprise AND bmaasite=g_bmaasite
            AND bmaa001=sr[l_i].bmba001 AND bmaa002=sr[l_i].bmba002
         IF cl_null(l_bmaa004) THEN
            LET l_bmaa004 = p_bmaa004
         END IF

         SELECT COUNT(*) INTO l_n FROM bmaa_t WHERE bmaaent=g_enterprise AND bmaasite=g_bmaasite
            AND bmaa001=sr[l_i].bmba003 AND bmaa002=sr[l_i].bmba002

         
         LET l_bmba005_1 = sr[l_i].bmba005
         LET g_sql="SELECT * FROM bmba_t WHERE bmbaent='",g_enterprise,"' AND bmbasite='",g_bmaasite,"'",
            "  AND bmba001='",sr[l_i].bmba001,"' AND bmba002='",sr[l_i].bmba002,"' AND bmba003='",sr[l_i].bmba003,"'",
            "  AND bmba004='",sr[l_i].bmba004,"' AND bmba007='",sr[l_i].bmba007,"' AND bmba008='",sr[l_i].bmba008,"'", 
            "  AND to_char(bmba005,'yyyy-mm-dd hh24:mi:ss')='",l_bmba005_1,"'"
         PREPARE s_asft300_02_bom_pre1 FROM g_sql
         EXECUTE s_asft300_02_bom_pre1 INTO l_bmba.*         

         #傳入參數展到尾階時，則一律展到最尾階
         IF p_type = '3' THEN
            IF l_n > 0 THEN            
               CALL abmq500_bom(p_level,l_bmba.bmba003,l_bmba.bmba002,p_site,p_date,'3')
               LET fs_insert = 'N'
            ELSE
               LET fs_insert = 'Y'
            END IF
         END IF
         
         IF p_type = '1' THEN
            IF l_n > 0 THEN
               CALL abmq500_bom(p_level,l_bmba.bmba003,l_bmba.bmba002,p_site,p_date,'1')
               LET fs_insert = 'Y'
            ELSE
               LET fs_insert = 'Y'
            END IF 
         END IF  
         IF p_type = '2' THEN
            LET fs_insert = 'Y'
         END IF              
         IF fs_insert = 'Y' THEN
            IF cl_null(g_m) OR g_m = 0 THEN
               LET g_m = 1
            END IF
            LET r_bmba[g_m].bmba001 = l_bmba.bmba001
            LET r_bmba[g_m].bmba002 = l_bmba.bmba002
            LET r_bmba[g_m].bmba003 = l_bmba.bmba003
            LET r_bmba[g_m].bmba004 = l_bmba.bmba004
            LET r_bmba[g_m].bmba005 = l_bmba005_1
            LET r_bmba[g_m].bmba007 = l_bmba.bmba007
            LET r_bmba[g_m].bmba008 = l_bmba.bmba008
          
            LET g_m = g_m + 1
         END IF
      END FOR
      EXIT WHILE
   END WHILE
   IF NOT cl_null(g_m) THEN
      CALL r_bmba.deleteElement(g_m)
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.abmq500_b_fill6" order="14" ver="6" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_b_fill6()
DEFINE li_ac           LIKE type_t.num5   
   

   CALL g_bmeb.clear()
   
   LET li_ac = l_ac

   ----------------------------------------------------------------------------------------------------- 
   ##bmeb_t##
   -----------------------------------------------------------------------------------------------------   
   LET l_ac = 1
   LET g_sql = "SELECT DISTINCT bmeb009,pmaal004 ",
               "  FROM bmeb_t ",
               "       LEFT OUTER JOIN pmaal_t a ON bmebent = pmaalent AND bmeb009 = pmaal001 AND pmaal002 = '",g_lang,"'",
               " WHERE bmebent = '",g_enterprise,"'",
               "   AND bmeb001 = '",g_bmaa[g_bmaa_idx].bmaa001,"'",
               "   AND bmeb002 = '",g_bmaa[g_bmaa_idx].bmaa002,"'",
               "   AND bmeb003 = '",g_bmba[g_bmba_idx].bmba003,"'",
               "   AND bmeb004 = '",g_bmba[g_bmba_idx].bmba004,"'",
               "   AND bmeb005 = '",g_bmba[g_bmba_idx].bmba007,"'",
               "   AND bmeb006 = '",g_bmba[g_bmba_idx].bmba008,"'",
               "   AND bmeb007 = '",g_bmea[g_bmea_idx].bmea007,"'",
               "   AND bmeb008 = '",g_bmea[g_bmea_idx].bmea008,"'",
               "   AND bmeb010 = '",g_bmea[g_bmea_idx].bmea019,"'",
               " ORDER BY bmeb009 "
   PREPARE bmeb_pre FROM g_sql
   DECLARE bmeb_cur CURSOR FOR bmeb_pre               
   FOREACH bmeb_cur INTO g_bmeb[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF   
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code =  9035
         LET g_errparam.extend =  ''
         LET g_errparam.popup = FALSE
         CALL cl_err()

         EXIT FOREACH
      END IF   
   END FOREACH

   CALL g_bmeb.deleteElement(g_bmeb.getLength())

   LET l_ac = li_ac
END FUNCTION]]>
  </point>
  <point name="function.abmq500_filter" order="15" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION abmq500_filter()
   
   
   LET INT_FLAG = 0
   LET g_qryparam.state = 'c'
   LET g_bmaa_idx  = 1

   LET g_wc_filter_t = g_wc_filter

   CALL gfrm_curr.setFieldHidden("formonly.b_statepic", TRUE)



   LET g_wc = cl_replace_str(g_wc, g_wc_filter, '')

   CALL g_bmaa.clear()
   CALL g_bmab.clear()
   CALL g_bmac.clear()
   CALL g_bmad.clear()
   CALL g_bmba.clear()
   CALL g_bmbb.clear()
   CALL g_bmbc.clear()
   CALL g_bmca.clear()
   CALL g_bmcb.clear()
   CALL g_bmcc.clear()
   CALL g_bmcd.clear()
   CALL g_bmce.clear()
   CALL g_bmea.clear()
   CALL g_bmeb.clear()
   DISPLAY ARRAY g_bmaa TO s_detail2.* ATTRIBUTE(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY
   
   DISPLAY ARRAY g_bmba TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmab TO s_detail3.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmac TO s_detail4.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmad TO s_detail5.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmbb TO s_detail6.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmea TO s_detail7.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmeb TO s_detail8.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmbc TO s_detail9.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmca TO s_detail10.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmcb TO s_detail11.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmcc TO s_detail12.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmcd TO s_detail13.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY

   DISPLAY ARRAY g_bmce TO s_detail14.* ATTRIBUTES(COUNT=g_detail_cnt)
      BEFORE DISPLAY
         EXIT DISPLAY
   END DISPLAY
   #單頭
   CONSTRUCT g_wc_filter ON bmaa001,bmaa002,imaa009,imaa004,imaa010,imaa011,bmaa003,bmaa004
                       FROM s_detail2[1].bmaa001,s_detail2[1].bmaa002,
                            s_detail2[1].imaa009,s_detail2[1].imaa004,
                            s_detail2[1].imaa010,s_detail2[1].imaa011,
                            s_detail2[1].bmaa003,s_detail2[1].bmaa004

      BEFORE CONSTRUCT

      ON ACTION controlp INFIELD bmaa001
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_imaa001_9()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO bmaa001      #顯示到畫面上
         NEXT FIELD bmaa001                         #返回原欄位

      ON ACTION controlp INFIELD imaa009
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_imaa009()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO imaa009      #顯示到畫面上
         NEXT FIELD imaa009                         #返回原欄位

      ON ACTION controlp INFIELD imaa010
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         LET g_qryparam.arg1 = "210"
         CALL q_oocq002()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO imaa010      #顯示到畫面上
         NEXT FIELD imaa010                         #返回原欄位

      ON ACTION controlp INFIELD bmaa004
         INITIALIZE g_qryparam.* TO NULL
         LET g_qryparam.state = 'c'
         LET g_qryparam.reqry = FALSE
         CALL q_ooca001_2()                           #呼叫開窗
         DISPLAY g_qryparam.return1 TO bmaa004      #顯示到畫面上
         NEXT FIELD bmaa004                         #返回原欄位

   ON ACTION accept
      ACCEPT CONSTRUCT

   ON ACTION cancel
      LET INT_FLAG = 1
      EXIT CONSTRUCT

   #交談指令共用ACTION
   &include "common_action.4gl"
      CONTINUE CONSTRUCT

   END CONSTRUCT







   IF NOT INT_FLAG THEN
      LET g_wc_filter = g_wc_filter," AND ",g_wc_filter_t
   ELSE
      LET g_wc_filter = g_wc_filter_t
   END IF
   CALL abmq500_b_fill()
END FUNCTION]]>
  </point>
  <point name="b_fill.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DEFINE l_sql           STRING
   DEFINE ls_wc2          STRING]]>
  </point>
  <point name="b_fill.sql" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_sql = "SELECT bmaa001,imaal003,imaal004,bmaa002,imaa009,imaa004,imaa010,imaa011,bmaa003,bmaa004,'' ",
               "  FROM bmaa_t",
               "       LEFT OUTER JOIN imaa_t ON bmaaent = imaaent AND bmaa001 = imaa001 ",
               "       LEFT OUTER JOIN imaal_t ON bmaaent = imaalent AND bmaa001 = imaal001 AND imaal002 = '",g_lang,"'"
   CASE g_type.a 
      WHEN '1'
         LET ls_wc = cl_replace_str(ls_wc,'imaa001','bmaa001')
         LET l_sql = l_sql," WHERE bmaaent = '",g_enterprise,"' AND bmaasite = '",g_bmaasite,"' AND ",ls_wc
      WHEN '2'
         LET ls_wc = cl_replace_str(ls_wc,'imaa001','bmba003')
         LET l_sql = l_sql," LEFT OUTER JOIN bmba_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmaa001 = bmba001 AND bmaa002 = bmba002 ",
                           " WHERE bmaaent = '",g_enterprise,"' AND bmaasite = '",g_bmaasite,"' AND ",ls_wc
      WHEN '3'
         LET ls_wc = cl_replace_str(ls_wc,'imaa001','bmea008')
         LET l_sql = l_sql," LEFT OUTER JOIN bmea_t ON bmaaent = bmeaent AND bmaasite = bmeasite AND bmaa001 = bmea001 AND bmaa002 = bmea002 ",
                           " WHERE bmaaent = '",g_enterprise,"' AND bmaasite = '",g_bmaasite,"' AND ",ls_wc         
      WHEN '4'
         LET ls_wc2 = cl_replace_str(ls_wc,'imaa001','bmba003')
         LET ls_wc = cl_replace_str(ls_wc,'imaa001','bmea008')
         LET l_sql = l_sql," LEFT OUTER JOIN bmba_t ON bmaaent = bmbaent AND bmaasite = bmbasite AND bmaa001 = bmba001 AND bmaa002 = bmba002 ",
                           " LEFT OUTER JOIN bmea_t ON bmaaent = bmeaent AND bmaasite = bmeasite AND bmaa001 = bmea001 AND bmaa002 = bmea002 ",
                           " WHERE bmaaent = '",g_enterprise,"' AND bmaasite = '",g_bmaasite,"' AND ",ls_wc," AND ",ls_wc2                           
   END CASE
   PREPARE bmaa_pre FROM l_sql
   DECLARE bmaa_cur CURSOR FOR bmaa_pre
   FOREACH bmaa_cur INTO g_detail7[l_ac].*
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      CALL s_aooi360_sel('4',g_bmaasite,g_detail7[l_ac].bmaa001,g_detail7[l_ac].bmaa002,'','','','','','','','4')
         RETURNING g_success,g_detail7[l_ac].ooff013a
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         IF g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code =  9035
            LET g_errparam.extend =  ''
            LET g_errparam.popup = TRUE
            CALL cl_err()

         END IF
         EXIT FOREACH
      END IF
   END FOREACH]]>
  </point>
  <point name="global.import" order="" ver="8" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="global.variable" order="" ver="10" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#單身 type 宣告
 TYPE type_g_bmba RECORD  
       name LIKE type_t.chr500, 
       pid LIKE type_t.chr500, 
       id LIKE type_t.chr500, 
       exp LIKE type_t.chr500, 
       isnode LIKE type_t.chr500, 
       isExp LIKE type_t.chr500, 
       expcode LIKE type_t.chr500, 
       bmba003 LIKE bmba_t.bmba003, 
       bmba003_desc LIKE type_t.chr500,
       bmba003_desc_1 LIKE type_t.chr500,        
       bmba001 LIKE bmba_t.bmba001, 
       bmba002 LIKE bmba_t.bmba002, 
       bmba004 LIKE bmba_t.bmba004, 
       bmba004_desc LIKE type_t.chr500, 
       bmba007 LIKE bmba_t.bmba007, 
       bmba007_desc LIKE type_t.chr500, 
       bmba008 LIKE bmba_t.bmba008, 
       bmba010 LIKE bmba_t.bmba010, 
       bmba011 LIKE bmba_t.bmba011,
       bmba012 LIKE bmba_t.bmba012,       
       bmba005 DATETIME YEAR TO SECOND, 
       bmba006 LIKE bmba_t.bmba006, 
       bmba013 LIKE bmba_t.bmba013, 
       bmba014 LIKE bmba_t.bmba014, 
       bmba020 LIKE bmba_t.bmba020, 
       bmba017 LIKE bmba_t.bmba017, 
       bmba025 LIKE bmba_t.bmba025, 
       bmba018 LIKE bmba_t.bmba018, 
       bmba029 LIKE bmba_t.bmba029, 
       bmba021 LIKE bmba_t.bmba021, 
       bmba022 LIKE bmba_t.bmba022, 
       bmba023 LIKE bmba_t.bmba023, 
       bmba024 LIKE bmba_t.bmba024, 
       bmba030 LIKE bmba_t.bmba030, 
       bmba031 LIKE bmba_t.bmba031, 
       bmba015 LIKE bmba_t.bmba015, 
       bmba015_desc LIKE type_t.chr500, 
       bmba016 LIKE bmba_t.bmba016, 
       bmba016_desc LIKE type_t.chr500
       END RECORD
 TYPE type_g_bmca RECORD
       bmca009 LIKE bmca_t.bmca009, 
       bmca009_desc LIKE type_t.chr500
       END RECORD
 
 TYPE type_g_bmcb RECORD
       bmcb010 LIKE bmcb_t.bmcb010, 
       bmcb011 LIKE bmcb_t.bmcb011, 
       bmcb011_desc LIKE type_t.chr500, 
       bmcb012 LIKE bmcb_t.bmcb012, 
       bmcb012_desc LIKE type_t.chr500
       END RECORD
 
 TYPE type_g_bmcc RECORD
       bmcc009 LIKE bmcc_t.bmcc009, 
       bmcc009_desc LIKE type_t.chr500, 
       bmcc010 LIKE bmcc_t.bmcc010
       END RECORD
 
 TYPE type_g_bmcd RECORD
       bmcd010 LIKE bmcd_t.bmcd010, 
       bmcd010_desc LIKE type_t.chr500, 
       bmcd011 LIKE bmcd_t.bmcd011, 
       bmcd011_desc LIKE type_t.chr500
       END RECORD
 
 TYPE type_g_bmce RECORD
       bmce009 LIKE bmce_t.bmce009, 
       bmce009_desc LIKE type_t.chr500, 
       bmce010 LIKE bmce_t.bmce010
       END RECORD
 
 TYPE type_g_bmaa RECORD
       bmaa001 LIKE bmaa_t.bmaa001, 
       bmaa001_desc LIKE type_t.chr500, 
       bmaa001_desc_1 LIKE type_t.chr500, 
       bmaa002 LIKE bmaa_t.bmaa002, 
       imaa009 LIKE imaa_t.imaa009,
       imaa009_desc LIKE type_t.chr80,       
       imaa004 LIKE imaa_t.imaa004, 
       imaa010 LIKE imaa_t.imaa010,
       imaa010_desc LIKE type_t.chr80,       
       imaa011 LIKE imaa_t.imaa011, 
       bmaa003 LIKE bmaa_t.bmaa003, 
       bmaa004 LIKE bmaa_t.bmaa004, 
       bmaa004_desc LIKE type_t.chr80,
       ooff013a LIKE type_t.chr500
       END RECORD
 
 TYPE type_g_bmab RECORD
       bmab003 LIKE bmab_t.bmab003, 
       bmab003_desc LIKE type_t.chr500, 
       bmab003_desc_1 LIKE type_t.chr500, 
       bmab003_desc_2 LIKE type_t.chr500,
       bmab003_desc_2_desc LIKE type_t.chr500,       
       bmab003_desc_3 LIKE type_t.chr500,
       bmab003_desc_3_desc LIKE type_t.chr500,       
       bmab004 LIKE bmab_t.bmab004, 
       bmab005 DATETIME YEAR TO SECOND, 
       bmab006 LIKE bmab_t.bmab006
       END RECORD
 
 TYPE type_g_bmac RECORD
       bmac003 LIKE bmac_t.bmac003, 
       bmac003_desc LIKE type_t.chr500, 
       bmac003_desc_1 LIKE type_t.chr500, 
       bmac005 LIKE bmac_t.bmac005, 
       bmac006 LIKE bmac_t.bmac006, 
       bmac004 LIKE bmac_t.bmac004, 
       bmac007 DATETIME YEAR TO SECOND, 
       bmac008 LIKE bmac_t.bmac008
       END RECORD
 
 TYPE type_g_bmad RECORD
       bmad003 LIKE bmad_t.bmad003, 
       bmad003_desc LIKE type_t.chr500, 
       bmad003_desc_1 LIKE type_t.chr500, 
       bmad003_desc_2 LIKE type_t.chr500,
       bmad003_desc_2_desc LIKE type_t.chr500,        
       bmad003_desc_3 LIKE type_t.chr500, 
       bmad003_desc_3_desc LIKE type_t.chr500,
       bmad004 LIKE bmad_t.bmad004, 
       bmad005 LIKE bmad_t.bmad005,
       bmad005_desc LIKE bmad_t.bmad005,       
       bmad006 DATETIME YEAR TO SECOND, 
       bmad007 LIKE bmad_t.bmad007
       END RECORD
 
 TYPE type_g_bmbb RECORD
       bmbb009 LIKE bmbb_t.bmbb009, 
       bmbb010 LIKE bmbb_t.bmbb010, 
       bmbb011 LIKE bmbb_t.bmbb011, 
       bmbb012 LIKE bmbb_t.bmbb012
       END RECORD
 
 TYPE type_g_bmea RECORD
       bmea007 LIKE bmea_t.bmea007,
       bmea008 LIKE bmea_t.bmea008, 
       bmea008_desc LIKE type_t.chr500, 
       bmea008_desc_1 LIKE type_t.chr500, 
       #add 141020 zhangllc--begin
       bmea019 LIKE bmea_t.bmea019, 
       bmea019_desc LIKE type_t.chr500, 
       #add 141020 zhangllc--end
       bmea009 DATETIME YEAR TO SECOND, 
       bmea010 DATETIME YEAR TO SECOND, 
       bmea011 LIKE bmea_t.bmea011, 
       bmea012 LIKE bmea_t.bmea012, 
       bmea013 LIKE bmea_t.bmea013, 
       bmea014 LIKE bmea_t.bmea014, 
       bmea015 LIKE bmea_t.bmea015, 
       bmea016 LIKE bmea_t.bmea016, 
       bmea017 LIKE bmea_t.bmea017
       END RECORD
 
 TYPE type_g_bmeb RECORD
       bmeb009 LIKE bmeb_t.bmeb009, 
       bmeb009_desc LIKE type_t.chr500
       END RECORD
 
 TYPE type_g_bmbc RECORD
       bmbc009 LIKE bmbc_t.bmbc009, 
       bmbc010 LIKE bmbc_t.bmbc010, 
       bmbc011 LIKE bmbc_t.bmbc011
       END RECORD
 
 
 
#模組變數(Module Variables)
DEFINE g_bmaa      DYNAMIC ARRAY OF type_g_bmaa
DEFINE g_bmaa_t    type_g_bmaa

DEFINE g_bmab     DYNAMIC ARRAY OF type_g_bmab
DEFINE g_bmab_t   type_g_bmab
 
DEFINE g_bmac     DYNAMIC ARRAY OF type_g_bmac
DEFINE g_bmac_t   type_g_bmac
 
DEFINE g_bmad     DYNAMIC ARRAY OF type_g_bmad
DEFINE g_bmad_t   type_g_bmad
 
DEFINE g_bmba     DYNAMIC ARRAY OF type_g_bmba
DEFINE g_bmba_t   type_g_bmba
 
DEFINE g_bmbb     DYNAMIC ARRAY OF type_g_bmbb
DEFINE g_bmbb_t   type_g_bmbb
 
DEFINE g_bmbc     DYNAMIC ARRAY OF type_g_bmbc
DEFINE g_bmbc_t   type_g_bmbc
 
DEFINE g_bmca     DYNAMIC ARRAY OF type_g_bmca
DEFINE g_bmca_t   type_g_bmca
 
DEFINE g_bmcb     DYNAMIC ARRAY OF type_g_bmcb
DEFINE g_bmcb_t   type_g_bmcb
 
DEFINE g_bmcc     DYNAMIC ARRAY OF type_g_bmcc
DEFINE g_bmcc_t   type_g_bmcc
 
DEFINE g_bmcd     DYNAMIC ARRAY OF type_g_bmcd
DEFINE g_bmcd_t   type_g_bmcd
 
DEFINE g_bmce     DYNAMIC ARRAY OF type_g_bmce
DEFINE g_bmce_t   type_g_bmce
 
DEFINE g_bmea     DYNAMIC ARRAY OF type_g_bmea
DEFINE g_bmea_t   type_g_bmea
 
DEFINE g_bmeb     DYNAMIC ARRAY OF type_g_bmeb
DEFINE g_bmeb_t   type_g_bmeb
 
 
 
DEFINE g_browser_root  DYNAMIC ARRAY OF INTEGER   #root資料所在
 
DEFINE g_wc                  STRING                        #儲存 user 的查詢條件
DEFINE g_wc_t                STRING                        #儲存 user 的查詢條件
DEFINE g_wc2                 STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
DEFINE g_sql                 STRING                        #組 sql 用 
DEFINE g_forupd_sql          STRING                        #SELECT ... FOR UPDATE  SQL    
DEFINE g_cnt                 LIKE type_t.num10              
DEFINE l_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_ac                  LIKE type_t.num5              #目前處理的ARRAY CNT
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog     
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_current_row         LIKE type_t.num5              #目前所在筆數
DEFINE g_current_idx         LIKE type_t.num5
DEFINE g_detail_cnt          LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_page                STRING                        #第幾頁
DEFINE g_ch                  base.Channel                  #外串程式用
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_error_show          LIKE type_t.num5
DEFINE g_row_index           LIKE type_t.num10 
DEFINE g_bmaa_idx            LIKE type_t.num5
DEFINE g_bmba_idx            LIKE type_t.num5
DEFINE g_bmca_idx            LIKE type_t.num5
DEFINE g_bmcc_idx            LIKE type_t.num5
DEFINE g_bmea_idx            LIKE type_t.num5

DEFINE g_detail_idx          LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_hyper_url           STRING                        #hyperlink的主要網址
 
#多table用wc
DEFINE g_wc_table           STRING
DEFINE g_wc_filter_table           STRING

#DEFINE g_date    DATETIME YEAR TO SECOND
DEFINE g_date STRING
DEFINE g_type    RECORD 
         a   LIKE type_t.chr1,
         b   LIKE type_t.chr1
             END RECORD
DEFINE g_bmaasite LIKE bmaa_t.bmaasite
DEFINE g_m          LIKE type_t.num5
DEFINE g_ooff013    LIKE ooff_t.ooff013
DEFINE r_bmba       DYNAMIC ARRAY OF RECORD #回传数组
       bmba001      LIKE bmba_t.bmba001,    #bom相关资料都可以通过回传的key值抓取
       bmba002      LIKE bmba_t.bmba002,
       bmba003      LIKE bmba_t.bmba003,
       bmba004      LIKE bmba_t.bmba004,
       bmba005      DATETIME YEAR TO SECOND,
       bmba007      LIKE bmba_t.bmba007,
       bmba008      LIKE bmba_t.bmba008
                    END RECORD
DEFINE g_detail_hidden  LIKE type_t.num5                    ]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_type.a = '1'
   LET g_type.b = '1'
   LET g_bmaasite = 'ALL']]>
  </point>
  <point name="main.exit" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   DROP TABLE abmp500_tmp;]]>
  </point>
  <point name="main.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   IF g_prog ='abmq500' THEN 
      LET g_site = 'ALL'   
   END IF
   LET g_bmaasite = g_site]]>
  </point>
  <point name="ui_dialog.construct" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         CONSTRUCT BY NAME g_wc ON imaa001
         
         END CONSTRUCT]]>
  </point>
  <point name="ui_dialog.input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[         INPUT  g_date,g_type.a,g_type.b  FROM date,a,b
            BEFORE INPUT
            
         END INPUT]]>
  </point>
  <section id="abmq500.description" ver="264" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:11,PR版次:11) Build-000364
#+ 
#+ Filename...: abmq500
#+ Description: 集團產品結構查詢作業
#+ Creator....: 02295(2014-04-23 09:11:53)
#+ Modifier...: 02295(2014-10-29 15:28:58) -SD/PR-
]]>
  </section>
  <section id="abmq500.global" ver="9" status="" src="s" readonly="">
    <![CDATA[#應用 i00 樣板自動產生(Version:3)
{<point name="global.memo" />}
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:free_style模組變數(Module Variable)
{<point name="free_style.variable"/>}
#end add-point
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
]]>
  </section>
  <section id="abmq500.main" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 作業開始
MAIN
   #add-point:main段define (標準程式用)
   {<point name="main.define" edit="s"/>}
   #end add-point    
   #add-point:main段define (客製程式用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point
 
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("abm","")
 
   #add-point:作業初始化
   {<point name="main.init"/>}
   #end add-point
 
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE abmq500_cl CURSOR FROM g_forupd_sql 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_abmq500 WITH FORM cl_ap_formpath("abm",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL abmq500_init()
 
      #進入選單 Menu (='N')
      CALL abmq500_ui_dialog()
   
      #畫面關閉
      CLOSE WINDOW w_abmq500
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
 
END MAIN
]]>
  </section>
  <section id="abmq500.other_function" ver="2" status="" src="s" readonly="">
    <![CDATA[#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point
]]>
  </section>
</add_points>
