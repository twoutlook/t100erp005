#該程式未解開Section, 採用最新樣板產出!
{<section id="apjm200.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0007(2015-09-15 17:15:10), PR版次:0007(1900-01-01 00:00:00)
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:0000(1900-01-01 00:00:00)
#+ Build......: 000419
#+ Filename...: apjm200
#+ Description: 專案主檔維護作業-多階
#+ Creator....: 01996(2013-12-20 11:42:37)
#+ Modifier...: 01996 -SD/PR- 00000
 
{</section>}
 
{<section id="apjm200.global" >}
#應用 i00 樣板自動產生(Version:9)
#add-point:填寫註解說明
#160318-00025#23  16/04/22 BY 07900   校验代码重复错误讯息的修改
#150304-00007#1   16/01/01 By xujing 单身数刷新直接展到尾阶
#160818-00017#25 2016-08-22 By 08734 删除修改未重新判断状态码
#end add-point
#add-point:填寫註解說明(客製用)

#end add-point
 
IMPORT os
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目

#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:free_style模組變數(Module Variable)
{<Module define>}

#單頭 type 宣告
 type type_g_pjba_m        RECORD
       pjba000 LIKE pjba_t.pjba000,
   pjba000_desc LIKE type_t.chr80,
   pjba001 LIKE pjba_t.pjba001,
   pjba002 LIKE pjba_t.pjba002,
   pjbal003 LIKE pjbal_t.pjbal003,
   pjbal004 LIKE pjbal_t.pjbal004,
   pjba003 LIKE pjba_t.pjba003,
   pjba003_desc LIKE type_t.chr80,
   pjba004 LIKE pjba_t.pjba004,
   pjba004_desc LIKE type_t.chr80,
   pjba005 LIKE pjba_t.pjba005,
   pjba006 LIKE pjba_t.pjba006,   
   pjbastus LIKE pjba_t.pjbastus,
   pjba007 LIKE pjba_t.pjba007,
   pjba008 LIKE pjba_t.pjba008,
   pjba009 LIKE pjba_t.pjba009,
   pjba008_desc LIKE type_t.chr80,
   pjbaownid LIKE pjba_t.pjbaownid,
   pjbaownid_desc LIKE type_t.chr80,
   pjbaowndp LIKE pjba_t.pjbaowndp,
   pjbaowndp_desc LIKE type_t.chr80,
   pjbacrtid LIKE pjba_t.pjbacrtid,
   pjbacrtid_desc LIKE type_t.chr80,
   pjbacrtdp LIKE pjba_t.pjbacrtdp,
   pjbacrtdp_desc LIKE type_t.chr80,
   pjbacrtdt DATETIME YEAR TO SECOND,
   pjbamodid LIKE pjba_t.pjbamodid,
   pjbamodid_desc LIKE type_t.chr80,
   pjbamoddt DATETIME YEAR TO SECOND,
   pjbacnfid LIKE pjba_t.pjbacnfid,
   pjbacnfid_desc LIKE type_t.chr80,
   pjbacnfdt DATETIME YEAR TO SECOND,
   pjba010 LIKE pjba_t.pjba010,
   pjba010_desc LIKE type_t.chr80,
   pjba011 LIKE pjba_t.pjba011,
   pjba012 LIKE pjba_t.pjba012,
   pjba012_desc LIKE type_t.chr80,
   pjba013 DATETIME YEAR TO SECOND,
   pjba014 LIKE pjba_t.pjba014,
   pjba014_desc LIKE type_t.chr80
                  END RECORD 
 type type_g_pjbb_m        RECORD
   pjbb002 LIKE pjbb_t.pjbb002,
   pjbbl004 LIKE pjbbl_t.pjbbl004,
   pjbbl005 LIKE pjbbl_t.pjbbl005,
   pjbb004 LIKE pjbb_t.pjbb004,
   pjbb004_desc LIKE type_t.chr80,
   pjbb003 LIKE pjbb_t.pjbb003,
   pjbb003_desc LIKE type_t.chr80,
   pjbb005 LIKE pjbb_t.pjbb005,
   pjbb006 LIKE pjbb_t.pjbb006,
   pjbb007 LIKE pjbb_t.pjbb007,
   pjbb008 LIKE pjbb_t.pjbb008,
   pjbb009 LIKE pjbb_t.pjbb009,
   pjbb010 LIKE pjbb_t.pjbb010,
   pjbb010_desc LIKE type_t.chr80,
   pjbb011 LIKE pjbb_t.pjbb011,
   pjbb011_desc LIKE type_t.chr80,
   pjbb012 LIKE pjbb_t.pjbb012,
   pjbb001 LIKE pjbb_t.pjbb001
       END RECORD

#單身 type 宣告
 TYPE type_g_pjbd_d        RECORD
       pjbd003 LIKE pjbd_t.pjbd003,
   pjbd004 LIKE pjbd_t.pjbd004,
   pjbd004_desc LIKE type_t.chr80,
   pjbd005 LIKE pjbd_t.pjbd005,
   pjbd005_desc LIKE type_t.chr80,
   pjbd005_desc1 LIKE type_t.chr80,
   pjbd010 LIKE pjbd_t.pjbd010,
   pjbd006 LIKE pjbd_t.pjbd006,
   pjbd006_desc LIKE type_t.chr80,
   pjbd007 LIKE pjbd_t.pjbd007,
   pjbd008 LIKE pjbd_t.pjbd008,
   pjbd009 LIKE pjbd_t.pjbd009,
   pjbd011 LIKE pjbd_t.pjbd011
       END RECORD
 TYPE type_g_pjbd2_d RECORD
       pjbe003 LIKE pjbe_t.pjbe003,
   pjbe003_desc LIKE type_t.chr80,
   pjbe004 LIKE pjbe_t.pjbe004,
   pjbe005 LIKE pjbe_t.pjbe005,
   pjbe006 LIKE pjbe_t.pjbe006,
   pjbe007 LIKE pjbe_t.pjbe007,
   pjbe008 LIKE pjbe_t.pjbe008,
   pjbe009 LIKE pjbe_t.pjbe009
       END RECORD

 TYPE type_g_pjbd3_d RECORD
       pjbf003 LIKE pjbf_t.pjbf003,
   pjbf003_desc LIKE type_t.chr80,
   pjbf004 LIKE pjbf_t.pjbf004,
   pjbf004_desc LIKE type_t.chr80,
   pjbf005 LIKE pjbf_t.pjbf005,
   pjbf006 LIKE pjbf_t.pjbf006,
   pjbf007 LIKE pjbf_t.pjbf007,
   pjbf008 LIKE pjbf_t.pjbf008
       END RECORD

 TYPE type_g_pjbd4_d RECORD
       pjbg003 LIKE pjbg_t.pjbg003,
   pjbg003_desc LIKE type_t.chr80,
   pjbg004 LIKE pjbg_t.pjbg004,
   pjbg005 LIKE pjbg_t.pjbg005
       END RECORD

 TYPE type_g_pjbd5_d RECORD
       pjbc002 LIKE pjbc_t.pjbc002,
   pjbc002_desc LIKE type_t.chr80,
   pjbc003 LIKE pjbc_t.pjbc003,
   pjbc003_desc LIKE type_t.chr80,
   pjbc004 LIKE pjbc_t.pjbc004,
   pjbc005 LIKE pjbc_t.pjbc005,
   pjbc006 LIKE pjbc_t.pjbc006
       END RECORD



#模組變數(Module Variables)
DEFINE g_pjba_m          type_g_pjba_m
DEFINE g_pjba_m_t        type_g_pjba_m
DEFINE g_pjba_m_o        type_g_pjba_m
DEFINE g_pjbb_m          type_g_pjbb_m
DEFINE g_pjbb_m_t        type_g_pjbb_m

DEFINE g_pjbb001_t     LIKE pjbb_t.pjbb001
DEFINE g_pjbb002_t     LIKE pjbb_t.pjbb002
DEFINE g_pjba001_t     LIKE pjba_t.pjba001


#DEFINE g_pjbb002_t        LIKE pjbb_t.pjbb002
DEFINE g_pjbb003_t        LIKE pjbb_t.pjbb003
#DEFINE g_pjbb001_t      LIKE pjbb_t.pjbb001

DEFINE g_pjbd_d          DYNAMIC ARRAY OF type_g_pjbd_d
DEFINE g_pjbd_d_t        type_g_pjbd_d
DEFINE g_pjbd2_d   DYNAMIC ARRAY OF type_g_pjbd2_d
DEFINE g_pjbd2_d_t type_g_pjbd2_d

DEFINE g_pjbd3_d   DYNAMIC ARRAY OF type_g_pjbd3_d
DEFINE g_pjbd3_d_t type_g_pjbd3_d

DEFINE g_pjbd4_d   DYNAMIC ARRAY OF type_g_pjbd4_d
DEFINE g_pjbd4_d_t type_g_pjbd4_d

DEFINE g_pjbd5_d   DYNAMIC ARRAY OF type_g_pjbd5_d
DEFINE g_pjbd5_d_t type_g_pjbd5_d

DEFINE g_browser  DYNAMIC ARRAY OF RECORD
       b_pjba001   LIKE pjba_t.pjba001
                  END RECORD

DEFINE g_tree    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_pjbb001 LIKE pjbb_t.pjbb001,
      b_pjbb002 LIKE pjbb_t.pjbb002,
      b_pjbb002_desc LIKE pjbbl_t.pjbbl004,
      b_pjbb003 LIKE pjbb_t.pjbb003,
      b_pjbb004 LIKE pjbb_t.pjbb004,
      b_pjbb004_desc LIKE oocql_t.oocql004,
      b_pjbb005 LIKE pjbb_t.pjbb005,
      b_pjbb006 LIKE pjbb_t.pjbb006,
      b_pjbb007 LIKE pjbb_t.pjbb007,
      b_pjbb008 LIKE pjbb_t.pjbb008,
      b_pjbb009 LIKE pjbb_t.pjbb009,
      b_pjbb010 LIKE pjbb_t.pjbb010,
      b_pjbb010_desc LIKE type_t.chr80,
      b_pjbb011 LIKE pjbb_t.pjbb011,
      b_pjbb011_desc LIKE type_t.chr80,
      b_pjbb012 LIKE pjbb_t.pjbb012
       END RECORD

DEFINE g_master_multi_table_t    RECORD
      pjbal001      LIKE pjbal_t.pjbal001,
      pjbal003      LIKE pjbal_t.pjbal003,
      pjbal004      LIKE pjbal_t.pjbal004,
      pjbbl001_idx2 LIKE pjbbl_t.pjbbl001,
      pjbbl002_idx2 LIKE pjbbl_t.pjbbl002,
      pjbbl004_idx2 LIKE pjbbl_t.pjbbl004,
      pjbbl005_idx2 LIKE pjbbl_t.pjbbl005
      END RECORD
#無單身append欄位定義

DEFINE g_wc                  STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc_tree             STRING
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_tree_idx         LIKE type_t.num10
DEFINE g_current_master_idx  LIKE type_t.num10
DEFINE g_jump                LIKE type_t.num10
DEFINE g_no_ask              LIKE type_t.num5
DEFINE g_rec_b               LIKE type_t.num5
DEFINE l_ac                  LIKE type_t.num5
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog

DEFINE g_pagestart           LIKE type_t.num5
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身

DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_tree_cnt            LIKE type_t.num5
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)

DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_searchtype          LIKE type_t.chr200

DEFINE g_current_master_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_tree_row            LIKE type_t.num5
DEFINE g_tree_sw             BOOLEAN
DEFINE g_current_master_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_row_index           LIKE type_t.num5
DEFINE g_root_search         BOOLEAN
DEFINE g_tree_root        DYNAMIC ARRAY OF INTEGER      #root資料所在

DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show          LIKE type_t.num5

DEFINE g_wc_table1           STRING                        #第1個單身table所使用的g_wc
DEFINE g_wc_table2    STRING                        #第2個單身table所使用的g_wc

DEFINE g_wc_table3    STRING                        #第3個單身table所使用的g_wc

DEFINE g_wc_table4    STRING                        #第4個單身table所使用的g_wc

DEFINE g_wc_table5    STRING                        #第5個單身table所使用的g_wc

DEFINE g_order               STRING

DEFINE g_copy_pjba001        LIKE pjba_t.pjba001
DEFINE g_copy_flag           LIKE type_t.chr1
DEFINE g_exp_cnt     LIKE type_t.num5
{</Module define>}
#end add-point
 
#add-point:自定義模組變數(Module Variable)

#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)

#end add-point
 
{</section>}
 
{<section id="apjm200.main" >}
#+ 作業開始
MAIN
   #add-point:main段define
   DEFINE l_success    LIKE type_t.num5   #add--2015/03/19 By shiun
   #end add-point    
   #add-point:main段define(客製用)
   
   #end add-point
 
   #定義在其他link的程式則無效
   WHENEVER ERROR CALL cl_err_msg_log
 
   #add-point:初始化前定義
   
   #end add-point
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("apj","")
 
   #add-point:作業初始化
   CALL s_aooi390_cre_tmp_table() RETURNING l_success   #add--2015/03/19 By shiun
   #end add-point
 
   #add-point:SQL_define
   LET g_forupd_sql = "SELECT pjbb002,'','',pjbb004,'',pjbb003,'',pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,'',pjbb011,'',",
                      "pjbb012,pjbb001 FROM pjbb_t WHERE pjbbent= ? AND pjbb001=? AND pjbb002=? FOR UPDATE"
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE apjm200_bcl6 CURSOR FROM g_forupd_sql 
   
   LET g_forupd_sql = "SELECT pjba000,'',pjba001,pjba002,'','',pjba003,'',pjba004,'',pjba005,pjba006,pjba007,pjba008,pjba009,'',pjbaownid,'',",
                      "pjbaowndp,'',pjbacrtid,'',pjbacrtdt,pjbacrtdp,'',pjbacrtdt,pjbamodid,'',pjbamoddt,pjbacnfid,'',pjbacnfdt,pjbastus,",
                      "pjba010,pjba011,pjba012,pjba013,pjba014 ",
                       " FROM pjba_t WHERE pjbaent = ? AND pjba001 = ? FOR UPDATE"
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)    #轉換不同資料庫語法
   DECLARE apjm200_cl CURSOR FROM g_forupd_sql 
   
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_apjm200 WITH FORM cl_ap_formpath("apj",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL apjm200_init()
 
      #進入選單 Menu (='N')
      CALL apjm200_ui_dialog()
   
      #畫面關閉
      CLOSE WINDOW w_apjm200
   END IF
 
   #add-point:作業離開前
   CALL s_aooi390_drop_tmp_table()   #add--2015/03/19 By shiun
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
 
END MAIN
 
{</section>}
 
{<section id="apjm200.other_function" readonly="Y" >}
#add-point:自定義元件(Function)
#此段落由子樣板a06產生
PRIVATE FUNCTION apjm200_pjba_t(ps_type)
 

#   DEFINE li_cnt    LIKE type_t.num10
    DEFINE ps_type   STRING  
#   DEFINE ls_sql    STRING  
#
#   IF ps_type = "s" THEN 
#            LET ls_sql = 'SELECT pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjbastus,pjba007,pjba008,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbacrtdt,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt FROM pjba_t WHERE pjbaent= ? AND pjba001=? ' 
#      DECLARE pjba_t_cl CURSOR FROM ls_sql 
#      OPEN pjba_t_cl USING g_enterprise,g_pjbb_m.pjbb001,g_pjbb_m.pjbb002
#      FETCH pjba_t_cl INTO g_pjbb_m.pjba000,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjba003,g_pjbb_m.pjba004,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfdt 
#
#      IF SQLCA.sqlcode THEN
#                  LET g_pjbb_m.pjba000 = NULL 
#         LET g_pjbb_m.pjba001 = NULL 
#         LET g_pjbb_m.pjba002 = NULL 
#         LET g_pjbb_m.pjba003 = NULL 
#         LET g_pjbb_m.pjba004 = NULL 
#         LET g_pjbb_m.pjba005 = NULL 
#         LET g_pjbb_m.pjba006 = NULL 
#         LET g_pjbb_m.pjbastus = NULL 
#         LET g_pjbb_m.pjba007 = NULL 
#         LET g_pjbb_m.pjba008 = NULL 
#         LET g_pjbb_m.pjbaownid = NULL 
#         LET g_pjbb_m.pjbaowndp = NULL 
#         LET g_pjbb_m.pjbacrtid = NULL 
#         LET g_pjbb_m.pjbacrtdp = NULL 
#         LET g_pjbb_m.pjbacrtdt = NULL 
#         LET g_pjbb_m.pjbamodid = NULL 
#         LET g_pjbb_m.pjbamoddt = NULL 
#         LET g_pjbb_m.pjbacnfid = NULL 
#         LET g_pjbb_m.pjbacnfdt  = NULL 
#
#      END IF 
#      RETURN 
#   END IF 
#
#      SELECT COUNT(*) INTO li_cnt FROM pjba_t WHERE pjbaent = g_enterprise AND pjba001 = g_pjbb001_t
#   
#   IF li_cnt = 0 AND ps_type = "u" THEN 
#            INSERT INTO pjba_t 
#      (pjbaent,pjba001,pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjbastus,pjba007,pjba008,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbacrtdt,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt )
#      VALUES (g_enterprise,g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbb_m.pjba000,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjba003,g_pjbb_m.pjba004,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfdt )
#   END IF 
#
#   IF li_cnt > 0 AND ps_type = "u" THEN 
#            UPDATE pjba_t SET 
#      (pjba001,pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjbastus,pjba007,pjba008,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbacrtdt,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt ) = 
#      (g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbb_m.pjba000,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjba003,g_pjbb_m.pjba004,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfdt ) 
#      WHERE pjbaent = g_enterprise AND pjba001 = g_pjbb001_t
#
#   END IF 
#
#   IF li_cnt > 0 AND ps_type = "d" THEN 
#            DELETE FROM pjba_t
#      WHERE pjbaent = g_enterprise AND pjba001 = g_pjbb001_t
#   END IF 
#
#   IF SQLCA.sqlcode THEN
#      CALL cl_err("",SQLCA.sqlcode,0)
#   END IF 
#


END FUNCTION

PRIVATE FUNCTION apjm200_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point

   LET g_bfill = "Y"
   LET g_searchtype = "3"
   LET g_error_show = 1
      CALL cl_set_combo_scc_part('pjbastus','50','N,X,Y')

      CALL cl_set_combo_scc('pjba007','16008')
   CALL cl_set_combo_scc('pjbb012','16003')
    CALL cl_set_combo_scc('b_pjbb012','16003')
   
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point

   CALL apjm200_default_search()

END FUNCTION

PRIVATE FUNCTION apjm200_tree_search(p_type)
   {<Local define>}
   DEFINE p_type LIKE type_t.chr10
   {</Local define>}
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point

   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00005"
      LET g_errparam.extend = "searchcol"
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN FALSE
   END IF

   IF NOT cl_null(g_searchstr) THEN
      LET g_wc_tree = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc_tree = g_wc_tree.toLowerCase()
   ELSE
      LET g_wc_tree = " 1=1 "
   END IF

   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc_tree = g_wc_tree, " ORDER BY pjbb001"
   ELSE
      LET g_wc_tree = g_wc_tree, " ORDER BY ", g_searchcol
   END IF

   CALL g_tree.clear()
   CALL apjm200_tree_fill(0,'','')
   CALL ui.Interface.refresh()
   RETURN TRUE

END FUNCTION

PRIVATE FUNCTION apjm200_ui_dialog()
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point

   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件

   CALL cl_set_act_visible("accept,cancel", FALSE)

   #temp CALL gfrm_curr.setElementImage("logo","logo/applogo.png")
   #temp CALL gfrm_curr.setElementHidden("mainlayout",1)
   #temp CALL gfrm_curr.setElementHidden("worksheet",0)
   #temp LET g_main_hidden = 1

   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point

   WHILE TRUE

      CALL apjm200_browser_fill()

      #temp CALL cl_notice()

      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

         INPUT g_searchstr,g_searchcol,g_searchtype FROM formonly.searchstr,formonly.cbo_searchcol,formonly.rdo_searchtype
            BEFORE INPUT
         END INPUT

         #左側瀏覽頁簽
         DISPLAY ARRAY g_tree TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)

            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_tree_idx = DIALOG.getCurrentRow("s_browse")
               IF g_tree_row > 1 AND g_tree_idx = 1 AND g_tree_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_tree_row)
                  LET g_tree_idx = g_tree_row
               END IF
               LET g_tree_row = g_tree_idx #目前指標
               LET g_tree_sw = TRUE

               IF g_tree_idx > g_tree.getLength() THEN
                  LET g_tree_idx = g_tree.getLength()
               END IF

               CALL apjm200_fetch2() # reload data
               #LET g_detail_idx = 1
               CALL apjm200_ui_detailshow() #Setting the current row

               CALL apjm200_idx_chk()
               #NEXT FIELD pjbd003

               ON EXPAND (g_row_index)
                  #樹展開
                  CALL apjm200_tree_expand(g_row_index)
                  LET g_tree[g_row_index].b_isExp = 1

               ON COLLAPSE (g_row_index)
                  #樹關閉

         END DISPLAY

         DISPLAY ARRAY g_pjbd_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1

            BEFORE ROW
               CALL apjm200_idx_chk()

            BEFORE DISPLAY
               LET g_current_page = 1
               CALL apjm200_idx_chk()



         END DISPLAY

         DISPLAY ARRAY g_pjbd2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL apjm200_idx_chk()

            BEFORE DISPLAY
               LET g_current_page = 2
               CALL apjm200_idx_chk()



         END DISPLAY

         DISPLAY ARRAY g_pjbd3_d TO s_detail3.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL apjm200_idx_chk()

            BEFORE DISPLAY
               LET g_current_page = 3
               CALL apjm200_idx_chk()



         END DISPLAY

         DISPLAY ARRAY g_pjbd4_d TO s_detail4.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL apjm200_idx_chk()

            BEFORE DISPLAY
               LET g_current_page = 4
               CALL apjm200_idx_chk()



         END DISPLAY

         DISPLAY ARRAY g_pjbd5_d TO s_detail5.* ATTRIBUTES(COUNT=g_rec_b)

            BEFORE ROW
               CALL apjm200_idx_chk()

            BEFORE DISPLAY
               LET g_current_page = 5
               CALL apjm200_idx_chk()



         END DISPLAY



         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_master_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_master_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
#            IF g_current_master_row > 1 AND g_current_master_idx = 1 AND g_current_master_sw = FALSE THEN
#               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
#               LET g_current_idx = g_current_row
#            END IF
            LET g_current_master_row = g_current_master_idx #目前指標
            IF g_current_master_idx = 0 THEN
               LET g_current_master_idx = 1
            END IF
            LET g_current_master_sw = TRUE

#            IF g_current_idx > g_tree.getLength() THEN
#               LET g_current_idx = g_tree.getLength()
#            END IF
             LET g_tree_idx = 1

            #有資料才進行fetch
            IF g_current_master_idx <> 0 THEN
               CALL apjm200_fetch('') # reload data
            END IF
#            IF g_copy_flag = 'Y' THEN
#               LET g_copy_pjba001 = ''
#               LET g_copy_flag = 'N'
#            END IF
            #LET g_detail_idx = 1
            CALL apjm200_ui_detailshow() #Setting the current row

            #筆數顯示
            LET g_current_page = 1
            CALL apjm200_idx_chk()
            
      
            #NEXT FIELD pjbd003

         #add-point:ui_dialog段define
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point

         #Browser用Action

         #一般搜尋
         ON ACTION searchdata
            #取得搜尋關鍵字
            INITIALIZE g_wc_tree TO NULL
            INITIALIZE g_wc_table1 TO NULL
            INITIALIZE g_wc_table2 TO NULL

            INITIALIZE g_wc_table3 TO NULL

            INITIALIZE g_wc_table4 TO NULL

            INITIALIZE g_wc_table5 TO NULL


            LET g_searchstr = GET_FLDBUF(searchstr)
            IF NOT apjm200_tree_search("normal") THEN
               CONTINUE DIALOG
            END IF
            LET g_tree_idx = 1
            IF g_browser.getLength() = 0 THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -100
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

            END IF
            LET g_action_choice = "searchdata"
            EXIT DIALOG

         #進階搜尋
         ON ACTION advancesearch


         #ACTION表單列
         ON ACTION first
            CALL apjm200_fetch('F')
            LET g_current_master_row = g_current_master_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apjm200_idx_chk()

         ON ACTION previous
            CALL apjm200_fetch('P')
            LET g_current_master_row = g_current_master_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apjm200_idx_chk()

         ON ACTION jump
            CALL apjm200_fetch('/')
            LET g_current_master_row = g_current_master_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apjm200_idx_chk()

         ON ACTION next
            CALL apjm200_fetch('N')
            LET g_current_master_row = g_current_master_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apjm200_idx_chk()

         ON ACTION last
            CALL apjm200_fetch('L')
            LET g_current_master_row = g_current_master_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL apjm200_idx_chk()

         ON ACTION close
            LET INT_FLAG=FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG

         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-r.png")
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementImage("mainhidden","small/arr-l.png")
               LET g_main_hidden = 1
            END IF

         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_worksheet_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet",0)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-l.png")
               LET g_worksheet_hidden = 0
               NEXT FIELD b_pjbb001
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet",1)
               CALL gfrm_curr.setElementImage("worksheethidden","small/arr-r.png")
               LET g_worksheet_hidden = 1
            END IF

         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("worksheet_detail",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("worksheet_detail",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden
            END IF



         ON ACTION delete

            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL apjm200_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
            END IF


         ON ACTION insert

            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN

               CALL apjm200_insert('Y')
#               IF g_copy_flag = 'Y' THEN
#                  LET g_browser[g_current_master_idx].b_pjba001 = g_pjba_m.pjba001
#                  CALL apjm200_fetch('')
#                  DISPLAY ARRAY g_tree TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
#                     BEFORE ROW
#                        EXIT DISPLAY  
#                  END DISPLAY
#                  CALL apjm200_modify('N')
#                  LET g_action_choice = "modify"
#                  
#               END IF
            END IF
            EXIT DIALOG
         ON ACTION insert_detail
            LET g_action_choice="insert_detail"
            CALL apjm200_insert('N')
            EXIT DIALOG
    
        ON ACTION modify_detail

            LET g_action_choice="modify_detail"
            CALL apjm200_modify('N')
            EXIT DIALOG

         ON ACTION modify

            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               CALL apjm200_modify('Y')
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
                EXIT DIALOG
            END IF


         ON ACTION output

            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
                EXIT DIALOG
            END IF


         ON ACTION query

            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL apjm200_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
            END IF


         ON ACTION reproduce

            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL apjm200_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
                EXIT DIALOG
            END IF


         ON ACTION statechange

            LET g_action_choice="statechange"

            CALL apjm200_statechange()
            CALL apjm200_set_act_visible()
            CALL apjm200_set_act_no_visible()
            EXIT DIALOG
    

         ON ACTION upd_1

            LET g_action_choice="upd_1"
            IF cl_auth_chk_act("upd_1") THEN
               CALL s_transaction_begin()
               CALL s_apjm200_upd_status_1(g_pjba_m.pjba001,g_pjba_m.pjbastus,g_pjbb_m.pjbb002,g_pjbb_m.pjbb012) RETURNING g_success,g_errno
               IF NOT g_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','1')
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
               EXIT DIALOG
            END IF
            
         ON ACTION upd_un1

            LET g_action_choice="upd_un1"
            IF cl_auth_chk_act("upd_un1") THEN
               CALL s_transaction_begin()
               CALL s_apjm200_upd_status_0(g_pjba_m.pjba001,g_pjba_m.pjbastus,g_pjbb_m.pjbb002,g_pjbb_m.pjbb012) RETURNING g_success,g_errno
               IF NOT g_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','1')
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
               EXIT DIALOG
            END IF
            
         ON ACTION upd_2

            LET g_action_choice="upd_2"
            IF cl_auth_chk_act("upd_2") THEN
               CALL s_transaction_begin()
               CALL s_apjm200_upd_status_2(g_pjba_m.pjba001,g_pjba_m.pjbastus,g_pjbb_m.pjbb002,g_pjbb_m.pjbb012) RETURNING g_success,g_errno
               IF NOT g_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','1')
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
               EXIT DIALOG
            END IF
            
         ON ACTION upd_un2

            LET g_action_choice="upd_un2"
            IF cl_auth_chk_act("upd_un2") THEN
               CALL s_transaction_begin()
               CALL s_apjm200_upd_status_1(g_pjba_m.pjba001,g_pjba_m.pjbastus,g_pjbb_m.pjbb002,g_pjbb_m.pjbb012) RETURNING g_success,g_errno
               IF NOT g_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','1')
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
               EXIT DIALOG
            END IF
            
         ON ACTION upd_un9

            LET g_action_choice="upd_un9"
            IF cl_auth_chk_act("upd_un9") THEN
               CALL s_transaction_begin()
               CALL s_apjm200_upd_status_0(g_pjba_m.pjba001,g_pjba_m.pjbastus,g_pjbb_m.pjbb002,g_pjbb_m.pjbb012) RETURNING g_success,g_errno
               IF NOT g_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','1')
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
               EXIT DIALOG
            END IF
            
         ON ACTION upd_9

            LET g_action_choice="upd_9"
            IF cl_auth_chk_act("upd_9") THEN
               CALL s_transaction_begin()
               CALL s_apjm200_upd_status_9(g_pjba_m.pjba001,g_pjba_m.pjbastus,g_pjbb_m.pjbb002,g_pjbb_m.pjbb012) RETURNING g_success,g_errno
               IF NOT g_success THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = g_errno
                  LET g_errparam.extend = ''
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','1')
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
               EXIT DIALOG
            END IF
         

         #主選單用ACTION
         &include "main_menu.4gl"

         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG

      END DIALOG

      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF

   END WHILE

   CALL cl_set_act_visible("accept,cancel", TRUE)

END FUNCTION

PRIVATE FUNCTION apjm200_browser_fill()
  {<Local define>}
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   {</Local define>}
   #add-point:browser_fill段define

   #end add-point    
   
   #add-point:browser_fill段動作開始前

   #end add-point    
   CLEAR FORM
   INITIALIZE g_pjba_m.* LIKE pjba_t.* 
   CALL g_browser.clear()
   CALL g_pjbd_d.clear()        
   CALL g_pjbd2_d.clear() 

   CALL g_pjbd3_d.clear() 

   CALL g_pjbd4_d.clear() 

   CALL g_pjbd5_d.clear() 
   CALL g_tree.clear()
   DISPLAY BY NAME g_pjba_m.*
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = " pjba001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE pjba001 FROM pjba_t LEFT JOIN pjbc_t ON pjbcent = pjbaent AND pjbc001 = pjba001 ",
                      "                                   LEFT JOIN pjbb_t ON pjbbent = pjbaent AND pjbb001 = pjba001 ",
                      "                                   LEFT JOIN pjbd_t ON pjbdent = pjbbent AND pjbd001 = pjbb001 AND pjbd002 = pjbb002 ",
                      "                                   LEFT JOIN pjbe_t ON pjbeent = pjbbent AND pjbe001 = pjbb001 AND pjbe002 = pjbb002 ",
                      "                                   LEFT JOIN pjbf_t ON pjbfent = pjbbent AND pjbf001 = pjbb001 AND pjbf002 = pjbb002 ",
                      "                                   LEFT JOIN pjbg_t ON pjbgent = pjbbent AND pjbg001 = pjbb001 AND pjbg002 = pjbb002 ",
                      " WHERE pjbaent = '" ||g_enterprise|| "' AND pjba000 IN (SELECT pjaa001 FROM pjaa_t WHERE pjaaent = ",g_enterprise,
                      "                                                           AND pjaa006 = '3') AND ",l_wc," AND ", l_wc2 
 
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE pjba001  FROM pjba_t ",
                      " WHERE pjbaent = '" ||g_enterprise|| "' AND pjba000 IN (SELECT pjaa001 FROM pjaa_t WHERE pjaaent = ",g_enterprise,
                      "                                                           AND pjaa006 = '3') AND ",l_wc
 
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   #該樣板不需此段落IF g_browser_cnt > g_max_browse AND g_error_show = 1THEN
   #該樣板不需此段落   CALL cl_err(g_browser_cnt,'9035',1)
   #該樣板不需此段落END IF
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.cnt   #總筆數的顯示
#   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
#   IF ps_page_action = "first" OR              
#      ps_page_action = "prev"  OR
#      ps_page_action = "next"  OR
#      ps_page_action = "last"  THEN
#      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
#   END IF
   
#   CASE ps_page_action
#      WHEN "F"
#         LET g_pagestart = 1
#
#      WHEN "P"
#         LET g_pagestart = g_pagestart - 1
#         IF g_pagestart < 1 THEN
#            LET g_pagestart = 1
#         END IF
#
#      WHEN "N"
#         LET g_pagestart = g_pagestart + 1
#         IF g_pagestart > g_browser_cnt THEN
#            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
#            WHILE g_pagestart > g_browser_cnt
#               LET g_pagestart = g_pagestart - 1
#            END WHILE
#         END IF
#
#      WHEN "L"
#         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod 1) + 1
#         WHILE g_pagestart > g_browser_cnt
#            LET g_pagestart = g_pagestart - 1
#         END WHILE
#
#      WHEN '/'
#         LET g_pagestart = g_jump
#         IF g_pagestart > g_browser_cnt THEN
#            LET g_pagestart = 1
#         END IF
#
#   END CASE
   
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照xrah001,xrah002,xrah003 Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql = " SELECT UNIQUE pjba001 FROM pjba_t LEFT JOIN pjbc_t ON pjbcent = pjbaent AND pjbc001 = pjba001 ",
                      "                                   LEFT JOIN pjbb_t ON pjbbent = pjbaent AND pjbb001 = pjba001 ",
                      "                                   LEFT JOIN pjbd_t ON pjbdent = pjbbent AND pjbd001 = pjbb001 AND pjbd002 = pjbb002 ",
                      "                                   LEFT JOIN pjbe_t ON pjbeent = pjbbent AND pjbe001 = pjbb001 AND pjbe002 = pjbb002 ",
                      "                                   LEFT JOIN pjbf_t ON pjbfent = pjbbent AND pjbf001 = pjbb001 AND pjbf002 = pjbb002 ",
                      "                                   LEFT JOIN pjbg_t ON pjbgent = pjbbent AND pjbg001 = pjbb001 AND pjbg002 = pjbb002 ",
                      " WHERE pjbaent = '" ||g_enterprise|| "' AND pjba000 IN (SELECT pjaa001 FROM pjaa_t WHERE pjaaent = ",g_enterprise,
                      "                                                           AND pjaa006 = '3') AND ",g_wc," AND ", g_wc2 
 
   ELSE
      #單身無輸入資料
      LET l_sub_sql = " SELECT UNIQUE pjba001  FROM pjba_t ",
                      " WHERE pjbaent = '" ||g_enterprise|| "' AND pjba000 IN (SELECT pjaa001 FROM pjaa_t WHERE pjaaent = ",g_enterprise,
                      "                                                           AND pjaa006 = '3') AND ",g_wc CLIPPED
                 
   END IF
   
   LET l_sql_rank = "SELECT pjba001,DENSE_RANK() OVER(ORDER BY pjba001 ",g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT pjba001 FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK<",g_pagestart+g_max_browse,
              " ORDER BY ",l_searchcol," ",g_order
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_pjba001  
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = 'foreach:'
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference

      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND g_wc THEN
      INITIALIZE g_pjba_m.* TO NULL
      INITIALIZE g_pjbb_m.* TO NULL
      CALL g_pjbd_d.clear()        
      CALL g_pjbd2_d.clear() 
    
      CALL g_pjbd3_d.clear() 
    
      CALL g_pjbd4_d.clear() 
    
      CALL g_pjbd5_d.clear() 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
#   CALL apjm200_fetch('')
   #該樣板不需此段落CALL aiti807_fetch('')
   
   FREE browse_pre 

END FUNCTION
################################################################################
#填充树
################################################################################
PRIVATE FUNCTION apjm200_tree_fill(p_level,p_pjbb002,p_pid)
   {<Local define>}
   DEFINE p_type   LIKE type_t.chr50
   DEFINE l_pid    LIKE type_t.chr50
   DEFINE l_cnt    LIKE type_t.num5
   DEFINE p_pjbb002 LIKE pjbb_t.pjbb002
   DEFINE p_level LIKE type_t.num5
   DEFINE l_i     LIKE type_t.num5
   DEFINE sr    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位
       #外顯欄位
       b_show          LIKE type_t.chr100,
       #父節點id
       b_pid           LIKE type_t.chr100,
       #本身節點id
       b_id            LIKE type_t.chr100,
       #是否展開
       b_exp           LIKE type_t.chr100,
       #是否有子節點
       b_hasC          LIKE type_t.num5,
       #是否已展開
       b_isExp         LIKE type_t.num5,
       #展開值
       b_expcode       LIKE type_t.num5,
       #tree自定義欄位
          b_pjbb001 LIKE pjbb_t.pjbb001,
      b_pjbb002 LIKE pjbb_t.pjbb002,
      b_pjbb002_desc LIKE pjbbl_t.pjbbl004,
      b_pjbb003 LIKE pjbb_t.pjbb003,
      b_pjbb004 LIKE pjbb_t.pjbb004,
      b_pjbb004_desc LIKE oocql_t.oocql004,
      b_pjbb005 LIKE pjbb_t.pjbb005,
      b_pjbb006 LIKE pjbb_t.pjbb006,
      b_pjbb007 LIKE pjbb_t.pjbb007,
      b_pjbb008 LIKE pjbb_t.pjbb008,
      b_pjbb009 LIKE pjbb_t.pjbb009,
      b_pjbb010 LIKE pjbb_t.pjbb010,
      b_pjbb010_desc LIKE type_t.chr80,
      b_pjbb011 LIKE pjbb_t.pjbb011,
      b_pjbb011_desc LIKE type_t.chr80,
      b_pjbb012 LIKE pjbb_t.pjbb012
       END RECORD
DEFINE p_pid    LIKE type_t.chr50   
#   CALL g_tree.clear()
   #先找出所有的帳別資料
#  LET g_sql = " SELECT UNIQUE pjbb001 FROM pjbb_t WHERE pjbbent = ",g_enterprise,
#              " AND pjbb001 = '",g_pjba_m.pjba001,"' ORDER BY pjbb002"
#  PREPARE master_type FROM g_sql
#  DECLARE master_typecur CURSOR FOR master_type
#
#  INITIALIZE g_tree_root TO NULL
#
#  LET l_ac = 1
#  FOREACH master_typecur INTO g_tree[l_ac].b_pjbb001
#     #確定root節點所在
#     LET g_tree_root[g_tree_root.getLength()+1] = l_ac
#     #此處為帳別部分(LV-1)
#     LET g_tree[l_ac].b_pjbb002  = g_tree[l_ac].b_pjbb001
#     LET g_tree[l_ac].b_pjbb001 = g_tree[l_ac].b_pjbb001
#     LET g_tree[l_ac].b_pid = '0' CLIPPED
#     LET g_tree[l_ac].b_id = l_ac USING "<<<"
#     LET g_tree[l_ac].b_exp = TRUE
#     LET g_tree[l_ac].b_hasC = TRUE
#     LET l_pid = g_tree[l_ac].b_id CLIPPED
#     LET l_ac = l_ac + 1

      #抓出LV2的所有資料
      IF p_level = 0 THEN
         LET g_exp_cnt = 1
         LET g_sql = " SELECT UNIQUE pjbb001,pjbb002,pjbbl004,pjbb003,pjbb004,oocql004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,ooag011,pjbb011,ooefl003,pjbb012 ",
                     " FROM pjbb_t a LEFT OUTER JOIN pjbbl_t ON a.pjbbent = pjbblent AND a.pjbb001 = pjbbl001 AND a.pjbb002 = pjbbl002 AND pjbbl003 = '",g_dlang,"'",
                     "               LEFT OUTER JOIN oocql_t ON a.pjbbent = pjbblent AND a.pjbb004 = oocql002 AND oocql001 = '8001' AND oocql003 = '",g_dlang,"'",
                     "               LEFT OUTER JOIN ooag_t ON a.pjbbent = ooagent AND a.pjbb010 = ooag001 ",
                     "               LEFT OUTER JOIN ooefl_t ON a.pjbbent = ooeflent AND a.pjbb011 = ooefl001 AND ooefl002 = '",g_dlang,"'",
                     " WHERE ",
                     " pjbb001 = ? AND pjbbent = ?",
                     " AND ",
                     " (( SELECT COUNT(*) FROM pjbb_t b WHERE a.pjbb003 = b.pjbb002 ", 
                     " AND a.pjbb001 = b.pjbb001",
                     ") = 0 OR ", 
                     " a.pjbb002 = a.pjbb003 )", 
                     " ORDER BY pjbb002"
      ELSE
         LET g_sql = " SELECT UNIQUE pjbb001,pjbb002,pjbbl004,pjbb003,pjbb004,oocql004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,ooag011,pjbb011,ooefl003,pjbb012 ",
                     " FROM pjbb_t a LEFT OUTER JOIN pjbbl_t ON a.pjbbent = pjbblent AND a.pjbb001 = pjbbl001 AND a.pjbb002 = pjbbl002 AND pjbbl003 = '",g_dlang,"'",
                     "               LEFT OUTER JOIN oocql_t ON a.pjbbent = pjbblent AND a.pjbb004 = oocql002 AND oocql001 = '8001' AND oocql003 = '",g_dlang,"'",
                     "               LEFT OUTER JOIN ooag_t ON a.pjbbent = ooagent AND a.pjbb010 = ooag001 ",
                     "               LEFT OUTER JOIN ooefl_t ON a.pjbbent = ooeflent AND a.pjbb011 = ooefl001 AND ooefl002 = '",g_dlang,"'",
                     " WHERE pjbb001 = ? AND pjbbent = ? AND a.pjbb003 = '",p_pjbb002,"' AND pjbb003 <> pjbb002",
                     " ORDER BY pjbb002"
      END IF
      
      PREPARE master_getLV2 FROM g_sql
      DECLARE master_getLV2cur CURSOR FOR master_getLV2

      #以下為一般資料root(LV-2)
      #OPEN master_getLV2cur USING g_tree[l_ac-1].b_pjbb001
      OPEN master_getLV2cur USING g_pjba_m.pjba001,g_enterprise
      #LET g_exp_cnt = 1 
      LET l_cnt = 1
     #LET g_exp_cnt = l_ac

      FOREACH master_getLV2cur INTO sr[l_cnt].b_pjbb001,sr[l_cnt].b_pjbb002,sr[l_cnt].b_pjbb002_desc,sr[l_cnt].b_pjbb003,sr[l_cnt].b_pjbb004,sr[l_cnt].b_pjbb004_desc,
                                    sr[l_cnt].b_pjbb005,sr[l_cnt].b_pjbb006,sr[l_cnt].b_pjbb007,sr[l_cnt].b_pjbb008,
                                    sr[l_cnt].b_pjbb009,sr[l_cnt].b_pjbb010,sr[l_cnt].b_pjbb010_desc,sr[l_cnt].b_pjbb011,sr[l_cnt].b_pjbb011_desc,sr[l_cnt].b_pjbb012
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.SQLCODE
            LET g_errparam.extend = ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT FOREACH
         END IF
         #去除多餘空白
         #LET g_tree[g_exp_cnt].b_pjbb002 = g_tree[g_exp_cnt].b_pjbb002 CLIPPED
        #LET g_tree[g_exp_cnt].b_pid = l_pid
        #LET g_tree[g_exp_cnt].b_id = l_pid,".",g_exp_cnt USING "<<<"  
         IF p_level = 0 THEN        
            LET sr[l_cnt].b_pid = '0'
           # LET sr[l_cnt].b_id = g_exp_cnt USING "<<<"
            LET sr[l_cnt].b_id = '0.1'
         ELSE
            #上层节点给当前父节点
            LET sr[l_cnt].b_pid  = p_pid
            #id=本身節點id(採流水號遞增)
            LET sr[l_cnt].b_id   = p_pid||"."||l_cnt
         END IF 
         LET sr[l_cnt].b_exp = FALSE
         LET sr[l_cnt].b_expcode = 2
        
         #150304-00007#1 mark
#         IF cl_null("pjbb003") THEN
#            LET g_tree[g_exp_cnt].b_hasC = FALSE
#         ELSE
#            LET g_tree[g_exp_cnt].b_hasC = TRUE
#         END IF
         #150304-00007#1 mark
         #150304-00007#1 add(s)
         LET sr[l_cnt].b_hasC = apjm200_exp_chk(sr[l_cnt].b_pjbb002)
         #150304-00007#1 add(e)
         LET l_cnt = l_cnt + 1

         IF l_cnt > g_max_rec AND g_error_show = 1 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 9035
            LET g_errparam.extend = ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT FOREACH
         END IF
      END FOREACH
#      LET l_ac = g_tree.getLength()

#      IF g_exp_cnt > g_max_rec AND g_error_show = 1 THEN
#         EXIT FOREACH
#      END IF
#   END FOREACH
     #150304-00007#1 add(s)  
     IF p_level = 0 THEN
        LET g_exp_cnt = 1
     END IF
     LET p_level = p_level + 1
     
     FOR l_i = 1 TO l_cnt - 1
         LET g_tree[g_exp_cnt].* = sr[l_i].*
         CALL apjm200_desc_show(g_exp_cnt)
         IF apjm200_exp_chk(sr[l_i].b_pjbb002) THEN
             LET g_tree[g_exp_cnt].b_isExp = TRUE
             LET g_tree[g_exp_cnt].b_exp = TRUE
            LET g_exp_cnt = g_exp_cnt + 1
            CALL apjm200_tree_fill(p_level,sr[l_i].b_pjbb002,sr[l_i].b_id)
         END IF
         LET g_exp_cnt = g_exp_cnt + 1
     END FOR
     #150304-00007#1 add(e)
   LET g_error_show = 0

#   #組合描述欄位&刪除多於資料
#   FOR l_ac = 1 TO g_tree.getLength()
#      IF cl_null(g_tree[l_ac].b_pjbb002) THEN
#         CALL g_tree.deleteElement(l_ac)
#         LET l_ac = l_ac - 1
#      ELSE
#         CALL apjm200_desc_show(l_ac)
#      END IF
#   END FOR
  #  CALL g_tree.deleteElement(g_tree.getLength())  #150304-00007#1 mark
    LET g_exp_cnt = g_tree.getLength()
    DISPLAY g_exp_cnt TO FORMONLY.b_count
#   LET g_tree_cnt = g_tree.getLength() - g_tree_root.getLength()
#   FREE master_type
   FREE master_getLV2
   
   CALL apjm200_fetch2()
END FUNCTION

PRIVATE FUNCTION apjm200_desc_show(pi_ac)
   {<Local define>}
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   {</Local define>}
   #add-point:desc_show段define
   {<point name="desc_show.define"/>}
   #end add-point

   LET li_tmp = l_ac
   LET l_ac = pi_ac


   #add-point:browser_create段desc處理
      LET g_tree[l_ac].b_show =  g_tree[l_ac].b_pjbb002


   LET l_ac = li_tmp

END FUNCTION

PRIVATE FUNCTION apjm200_find_node(pi_ac)
   {<Local define>}
   DEFINE pi_ac   LIKE type_t.num5
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_tmp  LIKE type_t.num5
   DEFINE ls_pid  STRING
   {</Local define>}
   #add-point:find_node段define
   {<point name="find_node.define"/>}
   #end add-point

   LET ls_pid = g_tree[pi_ac].b_pid

   LET g_sql = " SELECT UNIQUE '','','','FALSE','','',exp_code,pjbb001,pjbb002,pjbbl004,pjbb003,pjbb004,oocql004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012 ",
               " FROM apjm200_tmp ",
               " WHERE pjbb003 = ? AND pjbb003 <> pjbb002",
               " ORDER BY pjbb002"
   PREPARE master_getNode FROM g_sql
   DECLARE master_getNodecur CURSOR FOR master_getNode

   LET li_idx = pi_ac
   WHILE li_idx <= g_tree.getLength()
      IF g_tree[li_idx].b_expcode = -1 THEN
         OPEN master_getNodecur USING g_tree[li_idx].b_pjbb002
         FOREACH master_getNodecur INTO g_tree[g_tree.getLength()+1].*
            CALL apjm200_desc_show(g_tree.getLength())
            LET g_tree[g_tree.getLength()].b_pid = ls_pid
            LET g_tree[g_tree.getLength()].b_id = g_tree.getLength()
            LET g_tree[g_tree.getLength()].b_hasC = apjm200_chk_hasC(g_tree.getLength())
         END FOREACH
         CALL g_tree.deleteElement(li_idx)
         CALL g_tree.deleteElement(g_tree.getLength())
      ELSE
         LET li_idx = li_idx + 1
      END IF

   END WHILE

   FREE master_getNode

   RETURN g_tree.getLength()

END FUNCTION

PRIVATE FUNCTION apjm200_chk_hasC(pi_id)
   {<Local define>}
   DEFINE pi_id    INTEGER
   DEFINE li_cnt   INTEGER
   {</Local define>}
   #add-point:chk_hasC段define
   {<point name="chk_hasC.define"/>}
   #end add-point

#   LET g_sql = "SELECT COUNT(pjbb003) FROM pjbb_t ",
#               " WHERE ",
#                "pjbb003 = ? AND ",
#                "exp_code <> '-1' AND pjbb002 <> pjbb003 "
#                 ," AND ",
#                "pjbb001 = ?"
#
#   PREPARE apjm200_temp_chk FROM g_sql
#
#   LET g_sql = "SELECT COUNT(*) FROM pjbb_t ",
#               " WHERE pjbbent = '" ||g_enterprise|| "' AND ",
#               "pjbb002 <> pjbb003 AND ",
#               "pjbb003 = ? "
#                ," AND ",
#               "pjbb001 = ?"
#
#   PREPARE apjm200_master_chk FROM g_sql
#
#   CASE g_tree[pi_id].b_expcode
#      WHEN -1
#         RETURN FALSE
#      WHEN 0
#         RETURN FALSE
#      WHEN 1
#         EXECUTE apjm200_temp_chk
#           USING g_tree[pi_id].b_pjbb002
#                 ,g_tree[pi_id].b_pjbb001
#            INTO li_cnt
#         FREE apjm200_temp_chk
#      WHEN 2
#         EXECUTE apjm200_master_chk
#           USING g_tree[pi_id].b_pjbb002
#                 ,g_tree[pi_id].b_pjbb001
#            INTO li_cnt
#         FREE apjm200_master_chk
#   END CASE
#
#   IF li_cnt > 0 THEN
#      RETURN TRUE
#   ELSE
#      RETURN FALSE
#   END IF
#   
   
   LET g_sql = "SELECT COUNT(*) FROM pjbb_t ",
               " WHERE pjbbent = '" ||g_enterprise|| "'",
               "   AND pjbb001 = '",g_tree[pi_id].b_pjbb001,"'",
               "   AND pjbb002 <> pjbb003 ",
               "   AND pjbb003 = ? "
   PREPARE apjm200_master_chk1 FROM g_sql
   EXECUTE apjm200_master_chk1 USING g_tree[pi_id].b_pjbb002 INTO li_cnt
   FREE apjm200_master_chk1
   IF li_cnt > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
 
END FUNCTION

PRIVATE FUNCTION apjm200_ui_browser_refresh()
   {<Local define>}
   DEFINE l_i  LIKE type_t.num10


   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_pjba001 = g_pjba_m.pjba001
         THEN
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR

   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_master_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_master_row = g_browser_cnt
   END IF

   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示

END FUNCTION

PRIVATE FUNCTION apjm200_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point

   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point

   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail3",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail4",g_detail_idx)

      CALL g_curr_diag.setCurrentRow("s_detail5",g_detail_idx)


   END IF

   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION apjm200_construct()
   {<Local define>}
   DEFINE lc_qbe_sn   LIKE type_t.num10
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING
   {</Local define>}
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point

   #清除畫面
   CLEAR FORM
   INITIALIZE g_pjba_m.* TO NULL
   INITIALIZE g_pjbb_m.* TO NULL
   CALL g_pjbd_d.clear()
   CALL g_pjbd2_d.clear()

   CALL g_pjbd3_d.clear()

   CALL g_pjbd4_d.clear()

   CALL g_pjbd5_d.clear()



   LET g_current_master_idx = 1
   LET g_action_choice = ""

   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL

   INITIALIZE g_wc_table1 TO NULL
   INITIALIZE g_wc_table2 TO NULL

   INITIALIZE g_wc_table3 TO NULL

   INITIALIZE g_wc_table4 TO NULL

   INITIALIZE g_wc_table5 TO NULL



   LET g_qryparam.state = 'c'

   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      CONSTRUCT BY NAME g_wc ON pjba000,pjba001,pjba002,pjbal003,pjbal004,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjbastus,
                                pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbacrtdt,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt,pjba010,pjba011,pjba012,pjba013,pjba014
          BEFORE CONSTRUCT
             CALL cl_qbe_init()     
          
          ON ACTION controlp INFIELD pjbaownid
            #add-point:ON ACTION controlp INFIELD pjbaownid
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbaownid  #顯示到畫面上

            NEXT FIELD pjbaownid   

          ON ACTION controlp INFIELD pjbaowndp
            #add-point:ON ACTION controlp INFIELD pjbaowndp
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbaowndp  #顯示到畫面上

            NEXT FIELD pjbaowndp  
          ON ACTION controlp INFIELD pjbacrtid
            #add-point:ON ACTION controlp INFIELD pjbacrtid
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbacrtid  #顯示到畫面上

            NEXT FIELD pjbacrtid 
          ON ACTION controlp INFIELD pjbacrtdp
            #add-point:ON ACTION controlp INFIELD pjbacrtdp
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbacrtdp  #顯示到畫面上

            NEXT FIELD pjbacrtdp 
          ON ACTION controlp INFIELD pjbamodid
            #add-point:ON ACTION controlp INFIELD pjbamodid
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbamodid  #顯示到畫面上

            NEXT FIELD pjbamodid 
          ON ACTION controlp INFIELD pjbacnfid
            #add-point:ON ACTION controlp INFIELD pjbacnfid
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbacnfid  #顯示到畫面上

            NEXT FIELD pjbacnfid 
          ON ACTION controlp INFIELD pjba000
            #add-point:ON ACTION controlp INFIELD pjba000
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pjaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjba000  #顯示到畫面上

            NEXT FIELD pjba000
         ON ACTION controlp INFIELD pjba001
            #add-point:ON ACTION controlp INFIELD pjba001
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjba001 #顯示到畫面上
            NEXT FIELD pjba001
            
         ON ACTION controlp INFIELD pjba003
            #add-point:ON ACTION controlp INFIELD pjba003
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pjba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjba003 #顯示到畫面上
            NEXT FIELD pjba003
            
         ON ACTION controlp INFIELD pjba004
            #add-point:ON ACTION controlp INFIELD pjba003
            #此段落由子樣板a08產生
               #開窗c段
			   INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			   LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = g_site
            CALL q_ooaj002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjba004 #顯示到畫面上
            NEXT FIELD pjba004
         ON ACTION controlp INFIELD pjba008
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = 4
            CALL q_ooal002_0()
            DISPLAY g_qryparam.return1 TO pjba008 #顯示到畫面上
            NEXT FIELD pjba008
            
         ON ACTION controlp INFIELD pjba010
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = 8006
            CALL q_oocq002()
            DISPLAY g_qryparam.return1 TO pjba010 #顯示到畫面上
            NEXT FIELD pjba010
          ON ACTION controlp INFIELD pjba012
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
            CALL q_ooag001()
            DISPLAY g_qryparam.return1 TO pjba012 #顯示到畫面上
            NEXT FIELD pjba012
          ON ACTION controlp INFIELD pjba014
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
		   	LET g_qryparam.reqry = FALSE
		   	LET g_qryparam.arg1 = 8007
            CALL q_oocq002()
            DISPLAY g_qryparam.return1 TO pjba014 #顯示到畫面上
            NEXT FIELD pjba014
      END CONSTRUCT
      
      #單頭
      CONSTRUCT BY NAME g_wc2 ON pjbb002,pjbbl004,pjbbl005,pjbb004,pjbb003,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,pjbb001

         BEFORE CONSTRUCT
            CALL cl_qbe_init()
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}


         ON ACTION controlp INFIELD pjbb002
            #add-point:ON ACTION controlp INFIELD pjbb002
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_pjbb002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbb002  #顯示到畫面上

            NEXT FIELD pjbb002                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbb002
            #add-point:BEFORE FIELD pjbb002
            {<point name="construct.b.pjbb002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb002

            #add-point:AFTER FIELD pjbb002
            {<point name="construct.a.pjbb002" />}
            #END add-point


         #----<<pjbbl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbbl004
            #add-point:BEFORE FIELD pjbbl004
            {<point name="construct.b.pjbbl004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbbl004

            #add-point:AFTER FIELD pjbbl004
            {<point name="construct.a.pjbbl004" />}
            #END add-point


         #Ctrlp:construct.c.pjbbl004
#         ON ACTION controlp INFIELD pjbbl004
            #add-point:ON ACTION controlp INFIELD pjbbl004
            {<point name="construct.c.pjbbl004" />}
            #END add-point

         #----<<pjbbl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbbl005
            #add-point:BEFORE FIELD pjbbl005
            {<point name="construct.b.pjbbl005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbbl005

            #add-point:AFTER FIELD pjbbl005
            {<point name="construct.a.pjbbl005" />}
            #END add-point


         #Ctrlp:construct.c.pjbbl005
#         ON ACTION controlp INFIELD pjbbl005
            #add-point:ON ACTION controlp INFIELD pjbbl005
            {<point name="construct.c.pjbbl005" />}
            #END add-point

         #----<<pjbb004>>----
         #Ctrlp:construct.c.pjbb004
         ON ACTION controlp INFIELD pjbb004
            #add-point:ON ACTION controlp INFIELD pjbb004
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.arg1 = '8001'
            CALL q_oocq002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbb004  #顯示到畫面上

            NEXT FIELD pjbb004                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbb004
            #add-point:BEFORE FIELD pjbb004
            {<point name="construct.b.pjbb004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb004

            #add-point:AFTER FIELD pjbb004
            {<point name="construct.a.pjbb004" />}
            #END add-point


         #----<<pjbb003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb003
            #add-point:BEFORE FIELD pjbb003
            {<point name="construct.b.pjbb003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb003

            #add-point:AFTER FIELD pjbb003
            {<point name="construct.a.pjbb003" />}
            #END add-point


         #Ctrlp:construct.c.pjbb003
#         ON ACTION controlp INFIELD pjbb003
            #add-point:ON ACTION controlp INFIELD pjbb003
            {<point name="construct.c.pjbb003" />}
            #END add-point

         #----<<pjbb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb005
            #add-point:BEFORE FIELD pjbb005
            {<point name="construct.b.pjbb005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb005

            #add-point:AFTER FIELD pjbb005
            {<point name="construct.a.pjbb005" />}
            #END add-point


         #Ctrlp:construct.c.pjbb005
#         ON ACTION controlp INFIELD pjbb005
            #add-point:ON ACTION controlp INFIELD pjbb005
            {<point name="construct.c.pjbb005" />}
            #END add-point

         #----<<pjbb006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb006
            #add-point:BEFORE FIELD pjbb006
            {<point name="construct.b.pjbb006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb006

            #add-point:AFTER FIELD pjbb006
            {<point name="construct.a.pjbb006" />}
            #END add-point


         #Ctrlp:construct.c.pjbb006
#         ON ACTION controlp INFIELD pjbb006
            #add-point:ON ACTION controlp INFIELD pjbb006
            {<point name="construct.c.pjbb006" />}
            #END add-point

         #----<<pjbb007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb007
            #add-point:BEFORE FIELD pjbb007
            {<point name="construct.b.pjbb007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb007

            #add-point:AFTER FIELD pjbb007
            {<point name="construct.a.pjbb007" />}
            #END add-point


         #Ctrlp:construct.c.pjbb007
#         ON ACTION controlp INFIELD pjbb007
            #add-point:ON ACTION controlp INFIELD pjbb007
            {<point name="construct.c.pjbb007" />}
            #END add-point

         #----<<pjbb008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb008
            #add-point:BEFORE FIELD pjbb008
            {<point name="construct.b.pjbb008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb008

            #add-point:AFTER FIELD pjbb008
            {<point name="construct.a.pjbb008" />}
            #END add-point


         #Ctrlp:construct.c.pjbb008
#         ON ACTION controlp INFIELD pjbb008
            #add-point:ON ACTION controlp INFIELD pjbb008
            {<point name="construct.c.pjbb008" />}
            #END add-point

         #----<<pjbb009>>----
         #Ctrlp:construct.c.pjbb009
         ON ACTION controlp INFIELD pjbb009
            #add-point:ON ACTION controlp INFIELD pjbb009
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbb009  #顯示到畫面上

            NEXT FIELD pjbb009                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbb009
            #add-point:BEFORE FIELD pjbb009
            {<point name="construct.b.pjbb009" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb009

            #add-point:AFTER FIELD pjbb009
            {<point name="construct.a.pjbb009" />}
            #END add-point


         #----<<pjbb010>>----
         #Ctrlp:construct.c.pjbb010
         ON ACTION controlp INFIELD pjbb010
            #add-point:ON ACTION controlp INFIELD pjbb010
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbb010  #顯示到畫面上

            NEXT FIELD pjbb010                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbb010
            #add-point:BEFORE FIELD pjbb010
            {<point name="construct.b.pjbb010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb010

            #add-point:AFTER FIELD pjbb010
            {<point name="construct.a.pjbb010" />}
            #END add-point


         #----<<pjbb011>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb011
            #add-point:BEFORE FIELD pjbb011
            {<point name="construct.b.pjbb011" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb011

            #add-point:AFTER FIELD pjbb011
            {<point name="construct.a.pjbb011" />}
            #END add-point


         #Ctrlp:construct.c.pjbb011
         ON ACTION controlp INFIELD pjbb011
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooeg001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbb010  #顯示到畫面上

            NEXT FIELD pjbb010  

         #----<<pjbb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb012
            #add-point:BEFORE FIELD pjbb012
            {<point name="construct.b.pjbb012" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb012

            #add-point:AFTER FIELD pjbb012
            {<point name="construct.a.pjbb012" />}
            #END add-point


         #Ctrlp:construct.c.pjbb012
#         ON ACTION controlp INFIELD pjbb012
            #add-point:ON ACTION controlp INFIELD pjbb012
            {<point name="construct.c.pjbb012" />}
            #END add-point

         #----<<pjbb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb001
            #add-point:BEFORE FIELD pjbb001
            {<point name="construct.b.pjbb001" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb001

            #add-point:AFTER FIELD pjbb001
            {<point name="construct.a.pjbb001" />}
            #END add-point


         #Ctrlp:construct.c.pjbb001
#         ON ACTION controlp INFIELD pjbb001
            #add-point:ON ACTION controlp INFIELD pjbb001
            {<point name="construct.c.pjbb001" />}
            #END add-point



      END CONSTRUCT

      #單身根據table分拆construct
      CONSTRUCT g_wc_table1 ON pjbd003,pjbd004,pjbd005,pjbd006,pjbd007,pjbd008,pjbd009,pjbd010
           FROM s_detail1[1].pjbd003,s_detail1[1].pjbd004,s_detail1[1].pjbd005,s_detail1[1].pjbd006,s_detail1[1].pjbd007,s_detail1[1].pjbd008,s_detail1[1].pjbd009,s_detail1[1].pjbd010

         BEFORE CONSTRUCT
           #CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point

       #單身公用欄位開窗相關處理


       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page1  >---------------------
         #----<<pjbd003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd003
            #add-point:BEFORE FIELD pjbd003
            {<point name="construct.b.page1.pjbd003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd003

            #add-point:AFTER FIELD pjbd003
            {<point name="construct.a.page1.pjbd003" />}
            #END add-point


         #Ctrlp:construct.c.page1.pjbd003
#         ON ACTION controlp INFIELD pjbd003
            #add-point:ON ACTION controlp INFIELD pjbd003
            {<point name="construct.c.page1.pjbd003" />}
            #END add-point

         #----<<pjbd004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd004
            #add-point:BEFORE FIELD pjbd004
            {<point name="construct.b.page1.pjbd004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd004

            #add-point:AFTER FIELD pjbd004
            {<point name="construct.a.page1.pjbd004" />}
            #END add-point


         #Ctrlp:construct.c.page1.pjbd004
#         ON ACTION controlp INFIELD pjbd004
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_rtax001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbd004  #顯示到畫面上

            NEXT FIELD pjbd004

         #----<<pjbd005>>----
         #Ctrlp:construct.c.page1.pjbd005
         ON ACTION controlp INFIELD pjbd005
            #add-point:ON ACTION controlp INFIELD pjbd005
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbd005  #顯示到畫面上

            NEXT FIELD pjbd005                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbd005
            #add-point:BEFORE FIELD pjbd005
            {<point name="construct.b.page1.pjbd005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd005

            #add-point:AFTER FIELD pjbd005
            {<point name="construct.a.page1.pjbd005" />}
            #END add-point


         #----<<pjbd006>>----
         #Ctrlp:construct.c.page1.pjbd006
         ON ACTION controlp INFIELD pjbd006
            #add-point:ON ACTION controlp INFIELD pjbd006
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbd006  #顯示到畫面上

            NEXT FIELD pjbd006                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbd006
            #add-point:BEFORE FIELD pjbd006
            {<point name="construct.b.page1.pjbd006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd006

            #add-point:AFTER FIELD pjbd006
            {<point name="construct.a.page1.pjbd006" />}
            #END add-point


         #----<<pjbd007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd007
            #add-point:BEFORE FIELD pjbd007
            {<point name="construct.b.page1.pjbd007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd007

            #add-point:AFTER FIELD pjbd007
            {<point name="construct.a.page1.pjbd007" />}
            #END add-point


         #Ctrlp:construct.c.page1.pjbd007
#         ON ACTION controlp INFIELD pjbd007
            #add-point:ON ACTION controlp INFIELD pjbd007
            {<point name="construct.c.page1.pjbd007" />}
            #END add-point

         #----<<pjbd008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd008
            #add-point:BEFORE FIELD pjbd008
            {<point name="construct.b.page1.pjbd008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd008

            #add-point:AFTER FIELD pjbd008
            {<point name="construct.a.page1.pjbd008" />}
            #END add-point


         #Ctrlp:construct.c.page1.pjbd008
#         ON ACTION controlp INFIELD pjbd008
            #add-point:ON ACTION controlp INFIELD pjbd008
            {<point name="construct.c.page1.pjbd008" />}
            #END add-point

         #----<<pjbd009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd009
            #add-point:BEFORE FIELD pjbd009
            {<point name="construct.b.page1.pjbd009" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd009

            #add-point:AFTER FIELD pjbd009
            {<point name="construct.a.page1.pjbd009" />}
            #END add-point


         #Ctrlp:construct.c.page1.pjbd009
#         ON ACTION controlp INFIELD pjbd009
            #add-point:ON ACTION controlp INFIELD pjbd009
            {<point name="construct.c.page1.pjbd009" />}
            #END add-point

         #----<<pjbd010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd010
            #add-point:BEFORE FIELD pjbd010
            {<point name="construct.b.page1.pjbd010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd010

            #add-point:AFTER FIELD pjbd010
            {<point name="construct.a.page1.pjbd010" />}
            #END add-point


         #Ctrlp:construct.c.page1.pjbd010
#         ON ACTION controlp INFIELD pjbd010
            #add-point:ON ACTION controlp INFIELD pjbd010
            {<point name="construct.c.page1.pjbd010" />}
            #END add-point



      END CONSTRUCT

      CONSTRUCT g_wc_table2 ON pjbe003,pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009
           FROM s_detail2[1].pjbe003,s_detail2[1].pjbe004,s_detail2[1].pjbe005,s_detail2[1].pjbe006,s_detail2[1].pjbe007,s_detail2[1].pjbe008,s_detail2[1].pjbe009

         BEFORE CONSTRUCT
           #CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段more_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point

       #單身公用欄位開窗相關處理(table 2)


       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page2  >---------------------
         #----<<pjbe003>>----
         #Ctrlp:construct.c.page2.pjbe003
         ON ACTION controlp INFIELD pjbe003
            #add-point:ON ACTION controlp INFIELD pjbe003
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbe003  #顯示到畫面上

            NEXT FIELD pjbe003                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbe003
            #add-point:BEFORE FIELD pjbe003
            {<point name="construct.b.page2.pjbe003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe003

            #add-point:AFTER FIELD pjbe003
            {<point name="construct.a.page2.pjbe003" />}
            #END add-point


         #----<<pjbe004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbe004
            #add-point:BEFORE FIELD pjbe004
            {<point name="construct.b.page2.pjbe004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe004

            #add-point:AFTER FIELD pjbe004
            {<point name="construct.a.page2.pjbe004" />}
            #END add-point


         #Ctrlp:construct.c.page2.pjbe004
#         ON ACTION controlp INFIELD pjbe004
            #add-point:ON ACTION controlp INFIELD pjbe004
            {<point name="construct.c.page2.pjbe004" />}
            #END add-point

         #----<<pjbe005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbe005
            #add-point:BEFORE FIELD pjbe005
            {<point name="construct.b.page2.pjbe005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe005

            #add-point:AFTER FIELD pjbe005
            {<point name="construct.a.page2.pjbe005" />}
            #END add-point


         #Ctrlp:construct.c.page2.pjbe005
#         ON ACTION controlp INFIELD pjbe005
            #add-point:ON ACTION controlp INFIELD pjbe005
            {<point name="construct.c.page2.pjbe005" />}
            #END add-point

         #----<<pjbe006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbe006
            #add-point:BEFORE FIELD pjbe006
            {<point name="construct.b.page2.pjbe006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe006

            #add-point:AFTER FIELD pjbe006
            {<point name="construct.a.page2.pjbe006" />}
            #END add-point


         #Ctrlp:construct.c.page2.pjbe006
#         ON ACTION controlp INFIELD pjbe006
            #add-point:ON ACTION controlp INFIELD pjbe006
            {<point name="construct.c.page2.pjbe006" />}
            #END add-point

         #----<<pjbe007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbe007
            #add-point:BEFORE FIELD pjbe007
            {<point name="construct.b.page2.pjbe007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe007

            #add-point:AFTER FIELD pjbe007
            {<point name="construct.a.page2.pjbe007" />}
            #END add-point


         #Ctrlp:construct.c.page2.pjbe007
#         ON ACTION controlp INFIELD pjbe007
            #add-point:ON ACTION controlp INFIELD pjbe007
            {<point name="construct.c.page2.pjbe007" />}
            #END add-point

         #----<<pjbe008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbe008
            #add-point:BEFORE FIELD pjbe008
            {<point name="construct.b.page2.pjbe008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe008

            #add-point:AFTER FIELD pjbe008
            {<point name="construct.a.page2.pjbe008" />}
            #END add-point


         #Ctrlp:construct.c.page2.pjbe008
#         ON ACTION controlp INFIELD pjbe008
            #add-point:ON ACTION controlp INFIELD pjbe008
            {<point name="construct.c.page2.pjbe008" />}
            #END add-point

         #----<<pjbe009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbe009
            #add-point:BEFORE FIELD pjbe009
            {<point name="construct.b.page2.pjbe009" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe009

            #add-point:AFTER FIELD pjbe009
            {<point name="construct.a.page2.pjbe009" />}
            #END add-point


         #Ctrlp:construct.c.page2.pjbe009
#         ON ACTION controlp INFIELD pjbe009
            #add-point:ON ACTION controlp INFIELD pjbe009
            {<point name="construct.c.page2.pjbe009" />}
            #END add-point



      END CONSTRUCT

      CONSTRUCT g_wc_table3 ON pjbf003,pjbf004,pjbf005,pjbf006,pjbf007,pjbf008
           FROM s_detail3[1].pjbf003,s_detail3[1].pjbf004,s_detail3[1].pjbf005,s_detail3[1].pjbf006,s_detail3[1].pjbf007,s_detail3[1].pjbf008

         BEFORE CONSTRUCT
           #CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段more_construct
            {<point name="cs.body3.before_construct"/>}
            #end add-point

       #單身公用欄位開窗相關處理(table 3)


       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page3  >---------------------
         #----<<pjbf003>>----
         #Ctrlp:construct.c.page3.pjbf003
         ON ACTION controlp INFIELD pjbf003
            #add-point:ON ACTION controlp INFIELD pjbf003
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
			   LET g_qryparam.where = " mrba000 = '0' AND mrba100 = '1' "
            CALL q_mrba001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbf003  #顯示到畫面上

            NEXT FIELD pjbf003                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbf003
            #add-point:BEFORE FIELD pjbf003
            {<point name="construct.b.page3.pjbf003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbf003

            #add-point:AFTER FIELD pjbf003
            {<point name="construct.a.page3.pjbf003" />}
            #END add-point


         #----<<pjbf004>>----
         #Ctrlp:construct.c.page3.pjbf004
         ON ACTION controlp INFIELD pjbf004
            #add-point:ON ACTION controlp INFIELD pjbf004
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooca001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbf004  #顯示到畫面上

            NEXT FIELD pjbf004                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbf004
            #add-point:BEFORE FIELD pjbf004
            {<point name="construct.b.page3.pjbf004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbf004

            #add-point:AFTER FIELD pjbf004
            {<point name="construct.a.page3.pjbf004" />}
            #END add-point


         #----<<pjbf005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbf005
            #add-point:BEFORE FIELD pjbf005
            {<point name="construct.b.page3.pjbf005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbf005

            #add-point:AFTER FIELD pjbf005
            {<point name="construct.a.page3.pjbf005" />}
            #END add-point


         #Ctrlp:construct.c.page3.pjbf005
#         ON ACTION controlp INFIELD pjbf005
            #add-point:ON ACTION controlp INFIELD pjbf005
            {<point name="construct.c.page3.pjbf005" />}
            #END add-point

         #----<<pjbf006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbf006
            #add-point:BEFORE FIELD pjbf006
            {<point name="construct.b.page3.pjbf006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbf006

            #add-point:AFTER FIELD pjbf006
            {<point name="construct.a.page3.pjbf006" />}
            #END add-point


         #Ctrlp:construct.c.page3.pjbf006
#         ON ACTION controlp INFIELD pjbf006
            #add-point:ON ACTION controlp INFIELD pjbf006
            {<point name="construct.c.page3.pjbf006" />}
            #END add-point

         #----<<pjbf007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbf007
            #add-point:BEFORE FIELD pjbf007
            {<point name="construct.b.page3.pjbf007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbf007

            #add-point:AFTER FIELD pjbf007
            {<point name="construct.a.page3.pjbf007" />}
            #END add-point


         #Ctrlp:construct.c.page3.pjbf007
#         ON ACTION controlp INFIELD pjbf007
            #add-point:ON ACTION controlp INFIELD pjbf007
            {<point name="construct.c.page3.pjbf007" />}
            #END add-point

         #----<<pjbf008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbf008
            #add-point:BEFORE FIELD pjbf008
            {<point name="construct.b.page3.pjbf008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbf008

            #add-point:AFTER FIELD pjbf008
            {<point name="construct.a.page3.pjbf008" />}
            #END add-point


         #Ctrlp:construct.c.page3.pjbf008
#         ON ACTION controlp INFIELD pjbf008
            #add-point:ON ACTION controlp INFIELD pjbf008
            {<point name="construct.c.page3.pjbf008" />}
            #END add-point



      END CONSTRUCT

      CONSTRUCT g_wc_table4 ON pjbg003,pjbg004,pjbg005
           FROM s_detail4[1].pjbg003,s_detail4[1].pjbg004,s_detail4[1].pjbg005

         BEFORE CONSTRUCT
           #CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段more_construct
            {<point name="cs.body4.before_construct"/>}
            #end add-point

       #單身公用欄位開窗相關處理(table 4)


       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page4  >---------------------
         #----<<pjbg003>>----
         #Ctrlp:construct.c.page4.pjbg003
         ON ACTION controlp INFIELD pjbg003
            #add-point:ON ACTION controlp INFIELD pjbg003
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbg003  #顯示到畫面上

            NEXT FIELD pjbg003                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbg003
            #add-point:BEFORE FIELD pjbg003
            {<point name="construct.b.page4.pjbg003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbg003

            #add-point:AFTER FIELD pjbg003
            {<point name="construct.a.page4.pjbg003" />}
            #END add-point


         #----<<pjbg004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbg004
            #add-point:BEFORE FIELD pjbg004
            {<point name="construct.b.page4.pjbg004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbg004

            #add-point:AFTER FIELD pjbg004
            {<point name="construct.a.page4.pjbg004" />}
            #END add-point


         #Ctrlp:construct.c.page4.pjbg004
#         ON ACTION controlp INFIELD pjbg004
            #add-point:ON ACTION controlp INFIELD pjbg004
            {<point name="construct.c.page4.pjbg004" />}
            #END add-point

         #----<<pjbg005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbg005
            #add-point:BEFORE FIELD pjbg005
            {<point name="construct.b.page4.pjbg005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbg005

            #add-point:AFTER FIELD pjbg005
            {<point name="construct.a.page4.pjbg005" />}
            #END add-point


         #Ctrlp:construct.c.page4.pjbg005
#         ON ACTION controlp INFIELD pjbg005
            #add-point:ON ACTION controlp INFIELD pjbg005
            {<point name="construct.c.page4.pjbg005" />}
            #END add-point



      END CONSTRUCT

      CONSTRUCT g_wc_table5 ON pjbc002,pjbc003,pjbc004,pjbc005,pjbc006
           FROM s_detail5[1].pjbc002,s_detail5[1].pjbc003,s_detail5[1].pjbc004,s_detail5[1].pjbc005,s_detail5[1].pjbc006

         BEFORE CONSTRUCT
           #CALL cl_qbe_display_condition(lc_qbe_sn)
            #add-point:cs段more_construct
            {<point name="cs.body5.before_construct"/>}
            #end add-point

       #單身公用欄位開窗相關處理(table 5)


       #單身一般欄位開窗相關處理
       #---------------------<  Detail: page5  >---------------------
         #----<<pjbc002>>----
         #Ctrlp:construct.c.page5.pjbc002
         ON ACTION controlp INFIELD pjbc002
            #add-point:ON ACTION controlp INFIELD pjbc002
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_oocq002_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbc002  #顯示到畫面上

            NEXT FIELD pjbc002                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbc002
            #add-point:BEFORE FIELD pjbc002
            {<point name="construct.b.page5.pjbc002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc002

            #add-point:AFTER FIELD pjbc002
            {<point name="construct.a.page5.pjbc002" />}
            #END add-point


         #----<<pjbc003>>----
         #Ctrlp:construct.c.page5.pjbc003
         ON ACTION controlp INFIELD pjbc003
            #add-point:ON ACTION controlp INFIELD pjbc003
            #此段落由子樣板a08產生
            #開窗c段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
			LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO pjbc003  #顯示到畫面上

            NEXT FIELD pjbc003                     #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #此段落由子樣板a01產生
         BEFORE FIELD pjbc003
            #add-point:BEFORE FIELD pjbc003
            {<point name="construct.b.page5.pjbc003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc003

            #add-point:AFTER FIELD pjbc003
            {<point name="construct.a.page5.pjbc003" />}
            #END add-point


         #----<<pjbc004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbc004
            #add-point:BEFORE FIELD pjbc004
            {<point name="construct.b.page5.pjbc004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc004

            #add-point:AFTER FIELD pjbc004
            {<point name="construct.a.page5.pjbc004" />}
            #END add-point


         #Ctrlp:construct.c.page5.pjbc004
#         ON ACTION controlp INFIELD pjbc004
            #add-point:ON ACTION controlp INFIELD pjbc004
            {<point name="construct.c.page5.pjbc004" />}
            #END add-point

         #----<<pjbc005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbc005
            #add-point:BEFORE FIELD pjbc005
            {<point name="construct.b.page5.pjbc005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc005

            #add-point:AFTER FIELD pjbc005
            {<point name="construct.a.page5.pjbc005" />}
            #END add-point


         #Ctrlp:construct.c.page5.pjbc005
#         ON ACTION controlp INFIELD pjbc005
            #add-point:ON ACTION controlp INFIELD pjbc005
            {<point name="construct.c.page5.pjbc005" />}
            #END add-point

         #----<<pjbc006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbc006
            #add-point:BEFORE FIELD pjbc006
            {<point name="construct.b.page5.pjbc006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc006

            #add-point:AFTER FIELD pjbc006
            {<point name="construct.a.page5.pjbc006" />}
            #END add-point


         #Ctrlp:construct.c.page5.pjbc006
#         ON ACTION controlp INFIELD pjbc006
            #add-point:ON ACTION controlp INFIELD pjbc006
            {<point name="construct.c.page5.pjbc006" />}
            #END add-point



      END CONSTRUCT



      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point

      BEFORE DIALOG
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point

      ON ACTION qbe_select     #條件查詢
        #CALL cl_qbe_list() RETURNING lc_qbe_sn
        #CALL cl_qbe_display_condition(lc_qbe_sn)

      ON ACTION qbe_save       #條件儲存
         CALL cl_qbe_save()

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG

   #組合g_wc2

   IF g_wc_table1 <> " 1=1" THEN
      LET g_wc2 = g_wc2," AND", g_wc_table1
   END IF
   IF g_wc_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc_table2
   END IF

   IF g_wc_table3 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc_table3
   END IF

   IF g_wc_table4 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc_table4
   END IF

   IF g_wc_table5 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc_table5
   END IF



   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point

   IF INT_FLAG THEN
      RETURN
   END IF

END FUNCTION

PRIVATE FUNCTION apjm200_query()
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point

   LET INT_FLAG = 0
   LET g_detail_cnt = 0
   LET g_current_master_idx = 0
   LET g_current_master_row = 0
   CALL cl_navigator_setting( g_current_master_idx, g_detail_cnt )
   ERROR ""

   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()
   CALL g_tree.clear()
   CALL g_pjbd_d.clear()
   CALL g_pjbd2_d.clear()

   CALL g_pjbd3_d.clear()

   CALL g_pjbd4_d.clear()

   CALL g_pjbd5_d.clear()


   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count

   CALL apjm200_construct()

   IF INT_FLAG THEN
      LET INT_FLAG = 0
      INITIALIZE g_pjba_m.* TO NULL
      INITIALIZE g_pjbb_m.* TO NULL
      LET g_wc = " 1=1"
      LET g_wc2 = " 1=1"
      RETURN
   END IF

   LET g_error_show = 1
   CALL apjm200_browser_fill()

   IF g_browser.getLength() = 0 THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = -100
      LET g_errparam.extend = ''
      LET g_errparam.popup = TRUE
      CALL cl_err()

   ELSE
      CALL apjm200_fetch("F")
   END IF

END FUNCTION

PRIVATE FUNCTION apjm200_fetch(p_flag)
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point

#   LET ls_chk = g_browser[g_current_master_idx].b_id
#   IF ls_chk.getIndexOf('.',1) = 0 THEN
#      INITIALIZE g_pjba_m.* TO NULL
#      DISPLAY BY NAME g_pjba_m.*
#      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
#      DISPLAY '' TO FORMONLY.b_index
#      RETURN
#   END IF

#   IF g_browser_cnt = 0 THEN
#      RETURN
#   END IF

   CASE p_flag
      WHEN 'F' LET g_current_master_idx = 1
      WHEN 'L' LET g_current_master_idx = g_header_cnt
      WHEN 'P'
         IF g_current_master_idx > 1 THEN
            LET g_current_master_idx = g_current_master_idx - 1
         END IF
      WHEN 'N'
         IF g_current_master_idx < g_header_cnt THEN
            LET g_current_master_idx =  g_current_master_idx + 1
         END IF
      WHEN '/'
         IF (NOT g_no_ask) THEN
            CALL cl_set_act_visible("accept,cancel", TRUE)
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0

            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl"
            END PROMPT

            CALL cl_set_act_visible("accept,cancel", FALSE)
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE
            END IF
         END IF

         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_master_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE
      WHEN 'A'
         LET g_current_master_idx = g_browser.getLength()
   END CASE

   #CALL g_curr_diag.setCurrentRow("s_browse", g_current_master_idx) #設定browse 索引
   LET g_header_cnt = g_browser.getLength()
   LET g_detail_cnt = g_header_cnt

   DISPLAY g_detail_cnt TO FORMONLY.cnt
   DISPLAY g_current_master_idx TO FORMONLY.idx
#   #單身總筆數顯示
#   #LET g_detail_idx = 1
#   IF g_detail_cnt > 0 THEN
#      DISPLAY g_detail_idx TO FORMONLY.idx
#   ELSE
#      LET g_detail_idx = 0
#      DISPLAY ' ' TO FORMONLY.idx
#   END IF

   #瀏覽頁筆數顯示

   CALL cl_navigator_setting(g_current_master_idx, g_detail_cnt)

   #代表沒有資料
   IF g_current_master_idx = 0 THEN
      RETURN
   END IF

   #超出範圍
   IF g_current_master_idx > g_browser.getLength() THEN
      LET g_current_master_idx = g_browser.getLength()
   END IF
   IF cl_null(g_current_master_idx) OR g_current_master_idx = 1 THEN LET g_current_master_idx = 1 END IF
#   IF g_copy_flag = 'Y' THEN
#      LET g_pjba_m.pjba001 = g_copy_pjba001
#   ELSE
      IF cl_null(g_current_master_idx) OR g_current_master_idx = 0 THEN LET g_current_master_idx = 1 END IF
      LET g_pjba_m.pjba001 = g_browser[g_current_master_idx].b_pjba001
#   END IF


   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjba009,pjbastus,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdt,pjbacrtdp,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt,pjba010,pjba011,pjba012,pjba013,pjba014
 INTO g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba009,g_pjba_m.pjbastus,g_pjba_m.pjbaownid,g_pjba_m.pjbaowndp,
      g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtdt,g_pjba_m.pjbacrtdp,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfdt,g_pjba_m.pjba010,g_pjba_m.pjba011,g_pjba_m.pjba012,g_pjba_m.pjba013,g_pjba_m.pjba014
 FROM pjba_t
 WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "pjba_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_pjba_m.* TO NULL
      RETURN
   END IF

   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF

   CALL cl_set_act_visible("modify,delete",TRUE)
   IF g_pjba_m.pjbastus = 'Y' OR  g_pjba_m.pjbastus = 'X' THEN
      CALL cl_set_act_visible("modify,delete",FALSE)
   END IF

              #   CALL apjm200_pjba_t('s')

   #LET g_data_owner =
   #LET g_data_group =

   #重新顯示
   CALL g_tree.clear()
   CALL apjm200_tree_fill(0,'','')
   CALL apjm200_show()

END FUNCTION

PRIVATE FUNCTION apjm200_insert(p_flag)
DEFINE p_flag   LIKE type_t.chr1
   
#   MENU "" ATTRIBUTES (STYLE="popup")
#      BEFORE MENU
#
#      ON ACTION master_1
#         LET l_flag = "Y"
#         EXIT MENU
#      ON ACTION master_2
#         LET l_flag = "N"
#         EXIT MENU	
#   END MENU
CLEAR FORM  
IF p_flag = "Y" THEN
                                 #清畫面欄位內容
   CALL g_pjbd_d.clear()          #清除陣列
   CALL g_pjbd2_d.clear()   #清除陣列

   CALL g_pjbd3_d.clear()   #清除陣列

   CALL g_pjbd4_d.clear()   #清除陣列

   CALL g_pjbd5_d.clear()   #清除陣列



   INITIALIZE g_pjba_m.* LIKE pjba_t.*             #DEFAULT 設定
   LET g_pjba001_t = NULL
   LET g_pjbb002_t = NULL
END IF
   INITIALIZE g_pjbb_m.* LIKE pjbb_t.*
   
   LET g_pjbb001_t = NULL
   LET g_pjbb003_t = NULL

   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生
   IF p_flag = "Y" THEN
      LET g_pjba_m.pjba009 = 0    #add by lixh 20150706
      DISPLAY BY NAME g_pjba_m.pjba009
      LET g_pjba_m.pjbaownid = g_user
      LET g_pjba_m.pjbaowndp = g_dept
      LET g_pjba_m.pjbacrtid = g_user
      LET g_pjba_m.pjbacrtdp = g_dept
      LET g_pjba_m.pjbacrtdt = cl_get_current()
      LET g_pjba_m.pjbamodid = g_user
      LET g_pjba_m.pjbamoddt = cl_get_current()
      LET g_pjba_m.pjbastus = "N"

      LET g_pjba_m.pjba002 = "N"
      LET g_pjba_m.pjba007 = "1"
      LET g_pjba_m.pjba005 = g_today
      SELECT ooef008 INTO g_pjba_m.pjba008 FROM ooef_t
       WHERE ooefent = g_enterprise AND ooef001 = 'ALL'
      CALL apjm200_pjba008_desc(g_pjba_m.pjba008)
      LET g_pjba_m.pjba011 = 'N'
      LET g_pjba_m_t.* = g_pjba_m.*
      LET g_pjba_m_o.* = g_pjba_m.*
   END IF
      IF NOT cl_null(g_tree_idx) AND  g_tree_idx > 0 THEN
         LET g_pjbb_m.pjbb003 = g_tree[g_tree_idx].b_pjbb002
         IF NOT cl_null(g_pjbb_m.pjbb003) THEN
            CALL apjm200_get_pjbb002()
         END IF
         IF NOT cl_null(g_tree[g_tree_idx].b_pjbb010) THEN
            LET g_pjbb_m.pjbb010 = g_tree[g_tree_idx].b_pjbb010
            CALL apjm200_pjbb010_desc(g_pjbb_m.pjbb010)
         END IF
         
         IF NOT cl_null(g_tree[g_tree_idx].b_pjbb011) THEN
            LET g_pjbb_m.pjbb010 = g_tree[g_tree_idx].b_pjbb011
            CALL apjm200_pjbb011_desc(g_pjbb_m.pjbb011)
         END IF
      END IF
      LET g_pjbb_m.pjbb009 = "N"
      LET g_pjbb_m.pjbb012 = "0"
      
      
      LET g_pjbb_m_t.* = g_pjbb_m.*

      IF p_flag = "Y" THEN
         CALL apjm200_input("a")
         IF INT_FLAG THEN
            LET INT_FLAG = 0
            LET g_pjba_m.* = g_pjba_m_t.*
            CALL apjm200_show()
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 9001
            LET g_errparam.extend = ''
            LET g_errparam.popup = FALSE
            CALL cl_err()
            RETURN
           #EXIT WHILE
         END IF
#         IF g_copy_flag = 'Y' THEN
#            EXIT WHILE
#         END IF
         CALL s_transaction_begin()
         CALL apjm200_pjbb_input("u")
      ELSE
         CALL apjm200_pjbb_input("a")
      END IF

      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pjbb_m.* = g_pjbb_m_t.*
         CALL apjm200_show()
         INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 9001
            LET g_errparam.extend = ''
            LET g_errparam.popup = FALSE
            CALL cl_err()
         RETURN
        #EXIT WHILE
      END IF

      CALL g_pjbd_d.clear()
      CALL g_pjbd2_d.clear()

      CALL g_pjbd3_d.clear()

      CALL g_pjbd4_d.clear()

      CALL g_pjbd5_d.clear()



      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')

      EXIT WHILE

   END WHILE
   LET g_wc = " pjbaent = '" ||g_enterprise|| "' AND",
              " pjba001 = '", g_pjba_m.pjba001 CLIPPED, "'"
   CLOSE apjm200_cl
END FUNCTION

PRIVATE FUNCTION apjm200_modify(p_flag)
   {<Local define>}
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE p_flag       LIKE type_t.chr1

   IF g_pjba_m.pjba001 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
   SELECT UNIQUE pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjba009,pjbastus,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt,pjba010,pjba011,pjba012,pjba013,pjba014
 INTO g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba009,g_pjba_m.pjbastus,g_pjba_m.pjbaownid,g_pjba_m.pjbaowndp,
      g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtdp,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfdt,g_pjba_m.pjba010,g_pjba_m.pjba011,g_pjba_m.pjba012,g_pjba_m.pjba013,g_pjba_m.pjba014
 FROM pjba_t
 WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "pjba_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_pjba_m.* TO NULL
      RETURN
   END IF
   
   #檢查是否允許此動作
   IF NOT apjm200_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   LET g_pjba001_t = g_pjba_m.pjba001
   CALL s_transaction_begin()
   
   OPEN apjm200_cl USING g_enterprise,g_pjba_m.pjba001
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN apjm200_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE apjm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   FETCH apjm200_cl INTO g_pjba_m.pjba000,g_pjba_m.pjba000_desc,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjbal003,g_pjba_m.pjbal004,g_pjba_m.pjba003,g_pjba_m.pjba003_desc,g_pjba_m.pjba004,g_pjba_m.pjba004_desc,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba009,g_pjba_m.pjba008_desc,g_pjba_m.pjbaownid,g_pjba_m.pjbaownid_desc,g_pjba_m.pjbaowndp,g_pjba_m.pjbaowndp_desc,g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtid_desc,g_pjba_m.pjbacrtdt,g_pjba_m.pjbacrtdp,g_pjba_m.pjbacrtdp_desc,g_pjba_m.pjbacrtdt,g_pjba_m.pjbamodid,g_pjba_m.pjbamodid_desc,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfid_desc,g_pjba_m.pjbacnfdt,g_pjba_m.pjbastus
                         ,g_pjba_m.pjba010,g_pjba_m.pjba011,g_pjba_m.pjba012,g_pjba_m.pjba013,g_pjba_m.pjba014
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_pjba_m.pjba001
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE apjm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   LET g_pjbb_m.pjbb001 = g_tree[g_tree_idx].b_pjbb001
   LET g_pjbb_m.pjbb002 = g_tree[g_tree_idx].b_pjbb002

   IF g_pjbb_m.pjbb001 IS NULL OR 
      g_pjbb_m.pjbb002 IS NULL 
   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF
   
    SELECT UNIQUE pjbb002,pjbb004,pjbb003,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,pjbb001
 INTO g_pjbb_m.pjbb002,g_pjbb_m.pjbb004,g_pjbb_m.pjbb003,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb011,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001
 FROM pjbb_t
 WHERE pjbbent = g_enterprise AND pjbb001 = g_pjbb_m.pjbb001 AND pjbb002 = g_pjbb_m.pjbb002

   ERROR ""

   LET g_pjbb001_t = g_pjbb_m.pjbb001
   LET g_pjbb002_t = g_pjbb_m.pjbb002


   

   OPEN apjm200_bcl6 USING g_enterprise,g_pjbb_m.pjbb001
                                                       ,g_pjbb_m.pjbb002


   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN apjm200_bcl6:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE apjm200_bcl6
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   #鎖住將被更改或取消的資料
   FETCH apjm200_bcl6 INTO g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001

   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_pjbb_m.pjbb001
      LET g_errparam.popup = FALSE
      CALL cl_err()

      CLOSE apjm200_bcl6
      CALL s_transaction_end('N','0')
      RETURN
   END IF

                # CALL apjm200_pjba_t('s')

   CALL apjm200_show()
   WHILE TRUE
      LET g_pjba001_t = g_pjba_m.pjba001
      LET g_pjbb001_t = g_pjbb_m.pjbb001
      LET g_pjbb002_t = g_pjbb_m.pjbb002



      #寫入修改者/修改日期資訊(單頭)
      LET g_pjba_m.pjbamodid = g_user
      LET g_pjba_m.pjbamoddt = cl_get_current()
      LET g_pjba_m.pjbamodid_desc = cl_get_username(g_pjba_m.pjbamodid)
      LET g_pjba_m_o.* = g_pjba_m.*
      LET g_pjba_m_t.* = g_pjba_m.*

      IF p_flag = 'Y' THEN
         CALL apjm200_input("u")     #欄位更改
         IF INT_FLAG THEN
            LET INT_FLAG = 0
            LET g_pjba_m.* = g_pjba_m_t.*
            CALL apjm200_show()
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 9001
            LET g_errparam.extend = ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

            EXIT WHILE
         END IF
      END IF
      CALL apjm200_pjbb_input("u")


      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_pjbb_m.* = g_pjbb_m_t.*
         CALL apjm200_show()
         INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 9001
            LET g_errparam.extend = ''
            LET g_errparam.popup = FALSE
            CALL cl_err()

         EXIT WHILE
      END IF

      #若單頭key欄位有變更
      IF g_pjbb_m.pjbb001 != g_pjbb001_t
      OR g_pjbb_m.pjbb002 != g_pjbb002_t
      OR g_pjba_m.pjba001 != g_pjba001_t


      THEN
         CALL s_transaction_begin()

         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point

         #更新單身key值
         UPDATE pjbd_t SET pjbd001 = g_pjba_m.pjba001
                                      ,pjbd002 = g_pjbb_m.pjbb002


          WHERE pjbdent = g_enterprise AND pjbd001 = g_pjba001_t
            AND pjbd002 = g_pjbb002_t



         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point

         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE

         IF SQLCA.sqlcode THEN
             INITIALIZE g_errparam TO NULL
             LET g_errparam.code = SQLCA.sqlcode
             LET g_errparam.extend = ""
             LET g_errparam.popup = TRUE
             CALL cl_err()

             CALL s_transaction_end('N','0')
             CONTINUE WHILE
         END IF

         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE pjbe_t
            SET pjbe001 = g_pjba_m.pjba001
               ,pjbe002 = g_pjbb_m.pjbb002


          WHERE pjbeent = g_enterprise AND
                pjbe001 = g_pjba001_t
            AND pjbe002 = g_pjbb002_t


         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point

         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "pjbe_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbe_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE

         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update3" mark="Y"/>}
         #end add-point
         UPDATE pjbf_t
            SET pjbf001 = g_pjba_m.pjba001
               ,pjbf002 = g_pjbb_m.pjbb002


          WHERE pjbfent = g_enterprise AND
                pjbf001 = g_pjba001_t
            AND pjbf002 = g_pjbb002_t


         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update3"/>}
         #end add-point

         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "pjbf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE

         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update3"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update4" mark="Y"/>}
         #end add-point
         UPDATE pjbg_t
            SET pjbg001 = g_pjba_m.pjba001
               ,pjbg002 = g_pjbb_m.pjbb002


          WHERE pjbgent = g_enterprise AND
                pjbg001 = g_pjba001_t
            AND pjbg002 = g_pjbb002_t


         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update4"/>}
         #end add-point

         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "pjbg_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbg_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE

         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update4"/>}
         #end add-point

         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update5" mark="Y"/>}
         #end add-point
         UPDATE pjbc_t
            SET  pjbc001 = g_pjbb_m.pjbb001

          WHERE pjbcent = g_enterprise AND
                pjbc001 = g_pjbb001_t


         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update5"/>}
         #end add-point

         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00009"
               LET g_errparam.extend = "pjbc_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbc_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE

         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update5"/>}
         #end add-point



         #UPDATE 多語言table key值



         CALL s_transaction_end('Y','0')
      END IF

      EXIT WHILE
   END WHILE

   #修改歷程記錄
   IF NOT cl_log_modified_record(g_pjba_m.pjba001,g_site) THEN
      CALL s_transaction_end('N','0')
   END IF

   CLOSE apjm200_cl
   CLOSE apjm200_bcl6
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-U
   CALL cl_flow_notify(g_pjba_m.pjba001,'U')

END FUNCTION

PRIVATE FUNCTION apjm200_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  l_cmd_t         LIKE type_t.chr1
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE  l_pjaa007       LIKE pjaa_t.pjaa007
   DEFINE  l_success       LIKE type_t.num5   #add--2015/05/08 By shiun 增加編碼功能
   DEFINE  l_pjaa009       LIKE pjaa_t.pjaa009   
   #add--2015/07/14 By shiun--(E)
   DEFINE l_oofg_return    DYNAMIC ARRAY OF RECORD    
                   oofg019     LIKE oofg_t.oofg019,   #field
                   oofg020     LIKE oofg_t.oofg020    #value
                           END RECORD
   #add--2015/07/14 By shiun--(E)
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF

   CALL cl_set_head_visible("","YES")

   LET l_insert = FALSE
   LET g_action_choice = ""

   

   

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'

   #控制key欄位可否輸入
   CALL apjm200_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL apjm200_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
   LET g_errshow = 1

   DISPLAY BY NAME g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjbal003,g_pjba_m.pjbal004,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjbastus,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjbaownid,
                   g_pjba_m.pjbaowndp,g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtdp,g_pjba_m.pjbacrtdt,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfdt,g_pjba_m.pjba010,g_pjba_m.pjba011,g_pjba_m.pjba012,g_pjba_m.pjba013,g_pjba_m.pjba014
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭段
      INPUT BY NAME g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjbal003,g_pjba_m.pjbal004,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjbastus,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba010
         ATTRIBUTE(WITHOUT DEFAULTS)

         #自訂ACTION


         ON ACTION update_item

            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               IF NOT cl_null(g_pjba_m.pjba001) THEN
                  CALL n_pjbal(g_pjba_m.pjba001)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_pjba_m.pjba001
                  CALL ap_ref_array2(g_ref_fields," SELECT pjbal003,pjbal004 FROM pjbal_t WHERE pjbalent = '"
                      ||g_enterprise||"' AND pjbal001 = ?  AND pjbal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_pjba_m.pjbal003 = g_rtn_fields[1]
                  LET g_pjba_m.pjbal004 = g_rtn_fields[2]
                  DISPLAY BY NAME g_pjba_m.pjbal003
                  DISPLAY BY NAME g_pjba_m.pjbal004   
               END IF
            END IF


         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.pjbal001 = g_pjba_m.pjba001
LET g_master_multi_table_t.pjbal003 = g_pjba_m.pjbal003
LET g_master_multi_table_t.pjbal004 = g_pjba_m.pjbal004


            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.pjbal001 = ''
LET g_master_multi_table_t.pjbal003 = ''
LET g_master_multi_table_t.pjbal004 = ''


            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point

         #---------------------------<  Master  >---------------------------
         #----<<pjba000>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjba000

            #add-point:AFTER FIELD pjba000
            CALL apjm200_pjba000_desc(g_pjba_m.pjba000)
            IF NOT cl_null(g_pjba_m.pjba000)THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjba_m.pjba000

               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="apj-00007:sub-01302|apji010|",cl_get_progname("apji010",g_lang,"2"),"|:EXEPROGapji010"
               #160318-00025#23  by 07900 --add-end 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pjaa001") THEN
                  IF p_cmd = 'a' THEN
                     SELECT pjaa002 INTO g_pjba_m.pjba003 FROM pjaa_t 
                      WHERE pjaaent = g_enterprise AND pjaa001 = g_pjba_m.pjba000
                     DISPLAY BY NAME g_pjba_m.pjba003
                     CALL apjm200_pjba003_desc(g_pjba_m.pjba003)
                     SELECT pjaa007 INTO l_pjaa007 FROM pjaa_t
                      WHERE pjaaent = g_enterprise AND pjaa001 = g_pjba_m.pjba000
                     IF NOT cl_null(l_pjaa007) AND p_cmd = 'a' THEN
                        CALL s_aooi390_gen_1('15',l_pjaa007) RETURNING g_success,g_pjba_m.pjba001,l_oofg_return
                     END IF
                  END IF
               ELSE
                  LET g_pjba_m.pjba000 = g_pjba_m_t.pjba000
                  NEXT FIELD CURRENT
               END IF
            ELSE
               NEXT FIELD CURRENT

            END IF
            LET g_pjba_m_o.pjba000 = g_pjba_m.pjba000
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjba000
            CALL apjm200_pjba000_desc(g_pjba_m.pjba000)
 
         #此段落由子樣板a04產生
         ON CHANGE pjba000
            #add-point:ON CHANGE pjba000
            {<point name="input.g.pjba000" />}
            #END add-point

         #----<<pjba001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjba001
            #add-point:BEFORE FIELD pjba001
            {<point name="input.b.pjba001" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjba001
            IF NOT cl_null(g_pjba_m.pjba001) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pjba_m.pjba001 != g_pjba001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjba_t WHERE "||"pjbaent = '" ||g_enterprise|| "' AND "||"pjba001 = '"||g_pjba_m.pjba001 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
                  #add--2015/05/08 By shiun--(S)
                  IF NOT s_aooi390_chk('15',g_pjba_m.pjba001) THEN
                     LET g_pjba_m.pjba001 = g_pjba_m_t.pjba001
                     DISPLAY BY NAME g_pjba_m.pjba001
                     NEXT FIELD CURRENT
                  END IF
                  #add--2015/05/08 By shiun--(E)
               END IF
            END IF


         #此段落由子樣板a04產生
         ON CHANGE pjba001
            #add-point:ON CHANGE pjba001
            {<point name="input.g.pjba001" />}
            #END add-point

         #----<<pjba002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjba002
            #add-point:BEFORE FIELD pjba002
            {<point name="input.b.pjba002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjba002

            #add-point:AFTER FIELD pjba002
            {<point name="input.a.pjba002" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjba002
            CALL apjm200_set_entry('')
            CALL apjm200_set_no_entry('')

         #----<<pjbal003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbal003
            #add-point:BEFORE FIELD pjbal003
            {<point name="input.b.pjbal003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbal003

            #add-point:AFTER FIELD pjbal003
            {<point name="input.a.pjbal003" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbal003
            #add-point:ON CHANGE pjbal003
            {<point name="input.g.pjbal003" />}
            #END add-point

         #----<<pjbal004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbal004
            #add-point:BEFORE FIELD pjbal004
            {<point name="input.b.pjbal004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbal004

            #add-point:AFTER FIELD pjbal004
            {<point name="input.a.pjbal004" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbal004
            #add-point:ON CHANGE pjbal004
            {<point name="input.g.pjbal004" />}
            #END add-point

         #----<<pjba003>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjba003

            #add-point:AFTER FIELD pjba003
            CALL apjm200_pjba003_desc(g_pjba_m.pjba003)
            CALL apjm200_pjba004_desc(g_pjba_m.pjba004)
            IF NOT cl_null(g_pjba_m.pjba003) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               SELECT pjaa009 INTO l_pjaa009 FROM pjaa_t
                WHERE pjaaent = g_enterprise AND pjaa001 = g_pjba_m.pjba000
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjba_m.pjba003
               LET g_chkparam.arg2 = l_pjaa009
               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="apj-00012:sub-01302|apjm200|",cl_get_progname("apjm200",g_lang,"2"),"|:EXEPROGapjm200"
               #160318-00025#23  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_pjba003") THEN
                  SELECT pjba004 INTO g_pjba_m.pjba004 FROM pjba_t
                   WHERE pjba001= g_pjba_m.pjba003 AND pjbaent = g_enterprise
                  IF cl_null(g_pjba_m.pjba004) THEN
                     SELECT ooef016 INTO g_pjba_m.pjba004 FROM ooef_t
                      WHERE ooefent = g_enterprise AND ooef001 = 'ALL'
                  END IF
                  CALL apjm200_pjba004_desc(g_pjba_m.pjba004)
                  IF (NOT cl_null(g_pjba_m_o.pjba003) AND g_pjba_m_o.pjba003 != g_pjba_m.pjba003) OR cl_null(g_pjba_m_o.pjba003) THEN
                     IF cl_null(g_pjba_m_o.pjba003) THEN
                        IF NOT apjm200_pjba003_copy() THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.extend = "g_pjba_m"
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           LET g_pjba_m.pjba003 = g_pjba_m_t.pjba003
                           NEXT FIELD CURRENT
                        END IF
                        IF NOT apjm200_open_s01(g_pjba_m.pjba001,g_pjba_m.pjba003) THEN
                           INITIALIZE g_errparam TO NULL
                           LET g_errparam.code = SQLCA.sqlcode
                           LET g_errparam.extend = "g_pjba_m"
                           LET g_errparam.popup = TRUE
                           CALL cl_err()
                           
                        END IF
                        LET g_browser[g_browser.getLength()+1].b_pjba001 = g_pjba_m.pjba001
                        CALL apjm200_fetch('A')
                        LET p_cmd = 'u'
                        LET g_pjba001_t = g_pjba_m.pjba001
                     ELSE
                        IF cl_ask_confirm("apj-00060") THEN
                           DELETE FROM pjba_t WHERE pjbaent = g_enterprise
                             AND pjba001 = g_pjba_m.pjba001
                           DELETE FROM pjbal_t WHERE pjbalent = g_enterprise
                             AND pjbal001 = g_pjba_m.pjba001
                           DELETE FROM pjbb_t WHERE pjbbent = g_enterprise
                             AND pjbb001 = g_pjba_m.pjba001
                           DELETE FROM pjbbl_t WHERE pjbblent = g_enterprise
                             AND pjbbl001 = g_pjba_m.pjba001
                           DELETE FROM pjbc_t WHERE pjbcent = g_enterprise
                             AND pjbc001 = g_pjba_m.pjba001
                           DELETE FROM pjbd_t WHERE pjbdent = g_enterprise
                             AND pjbd001 = g_pjba_m.pjba001
                           DELETE FROM pjbe_t WHERE pjbeent = g_enterprise
                             AND pjbe001 = g_pjba_m.pjba001
                           DELETE FROM pjbf_t WHERE pjbfent = g_enterprise
                             AND pjbf001 = g_pjba_m.pjba001
                           DELETE FROM pjbg_t WHERE pjbgent = g_enterprise
                             AND pjbg001 = g_pjba_m.pjba001
                           IF NOT apjm200_pjba003_copy() THEN
                              INITIALIZE g_errparam TO NULL
                              LET g_errparam.code = SQLCA.sqlcode
                              LET g_errparam.extend = "g_pjba_m"
                              LET g_errparam.popup = TRUE
                              CALL cl_err()
                              LET g_pjba_m.pjba003 = g_pjba_m_t.pjba003
                              NEXT FIELD CURRENT
                           END IF
                           IF NOT apjm200_open_s01(g_pjba_m.pjba001,g_pjba_m.pjba003) THEN
                              INITIALIZE g_errparam TO NULL
                              LET g_errparam.code = SQLCA.sqlcode
                              LET g_errparam.extend = "g_pjba_m"
                              LET g_errparam.popup = TRUE
                              CALL cl_err()
                              
                           END IF
#                           LET g_browser[g_browser.getLength()+1].b_pjba001 = g_pjba_m.pjba001
                           CALL apjm200_fetch('')
#                           LET p_cmd = 'u'
#                           LET g_pjba001_t = g_pjba_m.pjba001
                        ELSE
                            LET g_pjba_m.pjba003 = g_pjba_m_o.pjba003
                        END IF
                     END IF
                  END IF
               ELSE
                  LET g_pjba_m.pjba003 = g_pjba_m_t.pjba003
                  
                  NEXT FIELD CURRENT
               END IF
              

            END IF
            LET g_pjba_m_o.pjba003 = g_pjba_m.pjba003
            CALL apjm200_set_entry(p_cmd)
            CALL apjm200_set_no_entry(p_cmd)
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjba003
            #add-point:BEFORE FIELD pjba003
            {<point name="input.b.pjba003" />}
            #END add-point
             CALL apjm200_pjba003_desc(g_pjba_m.pjba003)
         #此段落由子樣板a04產生
         ON CHANGE pjba003
            #add-point:ON CHANGE pjba003
            {<point name="input.g.pjba003" />}
            #END add-point

         #----<<pjba004>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjba004

            #add-point:AFTER FIELD pjba004
            CALL apjm200_pjba004_desc(g_pjba_m.pjba004)
            IF NOT cl_null(g_pjba_m.pjba004) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = 'ALL'
               LET g_chkparam.arg2 = g_pjba_m.pjba004

                #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aoo-00176:sub-01302|aooi150|",cl_get_progname("aooi150",g_lang,"2"),"|:EXEPROGaooi150"
               #160318-00025#23  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooaj002") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_pjba_m.pjba004 = g_pjba_m_t.pjba004
                  CALL apjm200_pjba004_desc(g_pjba_m.pjba004)
                  NEXT FIELD CURRENT
               END IF


            END IF
            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjba004
            #add-point:BEFORE FIELD pjba004
            {<point name="input.b.pjba004" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjba004
            #add-point:ON CHANGE pjba004
            {<point name="input.g.pjba004" />}
            #END add-point

         #----<<pjba005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjba005
            #add-point:BEFORE FIELD pjba005
            {<point name="input.b.pjba005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjba005

            #add-point:AFTER FIELD pjba005
            {<point name="input.a.pjba005" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjba005
            #add-point:ON CHANGE pjba005
            {<point name="input.g.pjba005" />}
            #END add-point

         #----<<pjba006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjba006
            #add-point:BEFORE FIELD pjba006
            {<point name="input.b.pjba006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjba006

            #add-point:AFTER FIELD pjba006
            {<point name="input.a.pjba006" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjba006
            #add-point:ON CHANGE pjba006
            {<point name="input.g.pjba006" />}
            #END add-point

         #----<<pjbastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbastus
            #add-point:BEFORE FIELD pjbastus
            {<point name="input.b.pjbastus" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbastus

            #add-point:AFTER FIELD pjbastus
            {<point name="input.a.pjbastus" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbastus
            #add-point:ON CHANGE pjbastus
            {<point name="input.g.pjbastus" />}
            #END add-point

         #----<<pjba007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjba007
            #add-point:BEFORE FIELD pjba007
            {<point name="input.b.pjba007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjba007

            #add-point:AFTER FIELD pjba007
            {<point name="input.a.pjba007" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjba007
            #add-point:ON CHANGE pjba007
            {<point name="input.g.pjba007" />}
            #END add-point

         #----<<pjba008>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjba008

            #add-point:AFTER FIELD pjba008
            CALL apjm200_pjba008_desc(g_pjba_m.pjba008)
            IF NOT cl_null(g_pjba_m.pjba008) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
#               INITIALIZE g_chkparam.* TO NULL
#
#               #設定g_chkparam.*的參數
#               LET g_chkparam.arg1 = g_pjba_m.pjba008
#               LET g_chkparam.arg2 = '參數2'
#
#
#               #呼叫檢查存在並帶值的library
#               IF cl_chk_exist("v_ooal002") THEN
#                  #檢查成功時後續處理
#                  #LET  = g_chkparam.return1
#                  #DISPLAY BY NAME
#
#               ELSE
#                  LET g_pjba_m.pjba008 = g_pjba_m_t.pjba008
#                  CALL apjm200_pjba008_desc(g_pjba_m.pjba008)
#                  NEXT FIELD CURRENT
#               END IF

               IF NOT s_aooi070_chk_exist('4',g_pjba_m.pjba008) THEN
                  LET g_pjba_m.pjba008 = g_pjba_m_t.pjba008
                  CALL apjm200_pjba008_desc(g_pjba_m.pjba008)
                  NEXT FIELD CURRENT
               END IF
            END IF
            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjba008
            #add-point:BEFORE FIELD pjba008
            {<point name="input.b.pjba008" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjba008
            #add-point:ON CHANGE pjba008
            {<point name="input.g.pjba008" />}
            #END add-point
         BEFORE FIELD pjba010
            CALL apjm200_pjba010_desc()   
            
         AFTER FIELD pjba010
             IF NOT cl_null(g_pjba_m.pjba010) THEN
               IF NOT s_azzi650_chk_exist('8006',g_pjba_m.pjba010) THEN
                  LET g_pjba_m.pjba010 = g_pjba_m_t.pjba010
                  NEXT FIELD CURRENT
               END IF
             END IF
             CALL apjm200_pjba010_desc()
            
         ON CHANGE pjba010
         

 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<pjba000>>----
         #Ctrlp:input.c.pjba000
         ON ACTION controlp INFIELD pjba000
            #add-point:ON ACTION controlp INFIELD pjba000
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjba_m.pjba000             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "('3')" #

            CALL q_pjaa001()                                #呼叫開窗

            LET g_pjba_m.pjba000 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjba_m.pjba000 TO pjba000              #顯示到畫面上
            CALL apjm200_pjba000_desc(g_pjba_m.pjba000)
            NEXT FIELD pjba000                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjba001>>----
         #Ctrlp:input.c.pjba001
#         ON ACTION controlp INFIELD pjba001
            #add-point:ON ACTION controlp INFIELD pjba001
            {<point name="input.c.pjba001" />}
            #END add-point

         #----<<pjba002>>----
         #Ctrlp:input.c.pjba002
#         ON ACTION controlp INFIELD pjba002
            #add-point:ON ACTION controlp INFIELD pjba002
            {<point name="input.c.pjba002" />}
            #END add-point

         #----<<pjbal003>>----
         #Ctrlp:input.c.pjbal003
#         ON ACTION controlp INFIELD pjbal003
            #add-point:ON ACTION controlp INFIELD pjbal003
            {<point name="input.c.pjbal003" />}
            #END add-point

         #----<<pjbal004>>----
         #Ctrlp:input.c.pjbal004
#         ON ACTION controlp INFIELD pjbal004
            #add-point:ON ACTION controlp INFIELD pjbal004
            {<point name="input.c.pjbal004" />}
            #END add-point

         #----<<pjba003>>----
         #Ctrlp:input.c.pjba003
         ON ACTION controlp INFIELD pjba003
            #add-point:ON ACTION controlp INFIELD pjba003
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjba_m.pjba003             #給予default值
            LET g_qryparam.where = " pjba002 = 'Y'"
            IF NOT cl_null(g_pjba_m.pjba000) THEN
               SELECT pjaa009 INTO l_pjaa009 FROM pjaa_t
                WHERE pjaaent = g_enterprise AND pjaa001 = g_pjba_m.pjba000
               LET g_qryparam.where = g_qryparam.where," AND pjba000 IN (SELECT pjaa001 FROM pjaa_t WHERE pjaaent = ",g_enterprise,
                                                       " AND pjaa009 = ",l_pjaa009," )"
               LET g_qryparam.where = g_qryparam.where," AND pjba000 IN (SELECT pjaa001 FROM pjaa_t WHERE pjaaent = ",g_enterprise,
                                                       " AND pjaa006 = '3' )"
            END IF
            #給予arg

            CALL q_pjba001()                                #呼叫開窗

            LET g_pjba_m.pjba003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjba_m.pjba003 TO pjba003              #顯示到畫面上
            CALL apjm200_pjba003_desc(g_pjba_m.pjba003)
            NEXT FIELD pjba003                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjba004>>----
         #Ctrlp:input.c.pjba004
         ON ACTION controlp INFIELD pjba004
            #add-point:ON ACTION controlp INFIELD pjba004
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjba_m.pjba004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "ALL" #

            CALL q_ooaj002_1()                                #呼叫開窗

            LET g_pjba_m.pjba004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjba_m.pjba004 TO pjba004              #顯示到畫面上
            CALL apjm200_pjba004_desc(g_pjba_m.pjba004)
            NEXT FIELD pjba004                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjba005>>----
         #Ctrlp:input.c.pjba005
#         ON ACTION controlp INFIELD pjba005
            #add-point:ON ACTION controlp INFIELD pjba005
            {<point name="input.c.pjba005" />}
            #END add-point

         #----<<pjba006>>----
         #Ctrlp:input.c.pjba006
#         ON ACTION controlp INFIELD pjba006
            #add-point:ON ACTION controlp INFIELD pjba006
            {<point name="input.c.pjba006" />}
            #END add-point

         #----<<pjbastus>>----
         #Ctrlp:input.c.pjbastus
#         ON ACTION controlp INFIELD pjbastus
            #add-point:ON ACTION controlp INFIELD pjbastus
            {<point name="input.c.pjbastus" />}
            #END add-point

         #----<<pjba007>>----
         #Ctrlp:input.c.pjba007
#         ON ACTION controlp INFIELD pjba007
            #add-point:ON ACTION controlp INFIELD pjba007
            {<point name="input.c.pjba007" />}
            #END add-point

         #----<<pjba008>>----
         #Ctrlp:input.c.pjba008
         ON ACTION controlp INFIELD pjba008
            #add-point:ON ACTION controlp INFIELD pjba008
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjba_m.pjba008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = 4

            CALL q_ooal002_0()                                #呼叫開窗

            LET g_pjba_m.pjba008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjba_m.pjba008 TO pjba008              #顯示到畫面上
            CALL apjm200_pjba008_desc(g_pjba_m.pjba008)
            NEXT FIELD pjba008                          #返回原欄位

          ON ACTION controlp INFIELD pjba010
            #add-point:ON ACTION controlp INFIELD pjba008
#此段落由子樣板a07產生
              #開窗i段
			   INITIALIZE g_qryparam.* TO NULL
              LET g_qryparam.state = 'i'
			   LET g_qryparam.reqry = FALSE
           
              LET g_qryparam.default1 = g_pjba_m.pjba010             #給予default值
           
              #給予arg
              LET g_qryparam.arg1 = 8006
           
              CALL q_oocq002()                                #呼叫開窗
           
              LET g_pjba_m.pjba010 = g_qryparam.return1              #將開窗取得的值回傳到變數
           
              DISPLAY g_pjba_m.pjba010 TO pjba010              #顯示到畫面上
              NEXT FIELD pjba010
           

         


 #欄位開窗

         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF

            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_pjbb_m.pjbb001
                            ,g_pjbb_m.pjbb002



            IF p_cmd <> 'u' THEN
               LET l_count = 1

               SELECT COUNT(*) INTO l_count FROM pjba_t
                WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001


               IF l_count = 0 THEN
#                  IF NOT cl_null(g_pjba_m.pjba003) THEN
#                     IF NOT apjm200_pjba003_copy() THEN
#                        INITIALIZE g_errparam TO NULL
#                        LET g_errparam.code = SQLCA.sqlcode
#                        LET g_errparam.extend = "g_pjba_m"
#                        LET g_errparam.popup = TRUE
#                        CALL cl_err()
#                        CALL s_transaction_end('N','0')
#                        CONTINUE DIALOG
#                     ELSE
#                        IF NOT apjm200_open_s01(g_pjba_m.pjba001,g_pjba_m.pjba003) THEN
#                           INITIALIZE g_errparam TO NULL
#                        LET g_errparam.code = SQLCA.sqlcode
#                        LET g_errparam.extend = "g_pjba_m"
#                        LET g_errparam.popup = TRUE
#                        CALL cl_err()
#
#                           CALL s_transaction_end('N','0')
#                           CONTINUE DIALOG
#                        ELSE
#                           CALL s_transaction_end('Y','0')
#                           LET g_copy_flag = 'Y'
#                           LET g_copy_pjba001 = g_pjba_m.pjba001
#                           EXIT DIALOG
#                        END IF
#                     END IF
#                  END IF
                  #add--2015/07/02 By shiun--(S)
                  CALL s_aooi390_get_auto_no('15',g_pjba_m.pjba001) RETURNING l_success,g_pjba_m.pjba001
                  IF NOT l_success THEN
                     CALL s_transaction_end('N','0')
                     NEXT FIELD CURRENT
                  END IF   
                  DISPLAY BY NAME g_pjba_m.pjba001
                  #add--2015/07/02 By shiun--(E)
                  CALL s_aooi390_oofi_upd('15',g_pjba_m.pjba001) RETURNING l_success  #add--2015/05/08 By shiun 增加編碼功能
                  INSERT INTO pjba_t (pjbaent,pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjba009,pjbastus,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbacrtdt,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt,pjba010,pjba011)
                  VALUES (g_enterprise,g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba009,g_pjba_m.pjbastus,g_pjba_m.pjbaownid,g_pjba_m.pjbaowndp,
                          g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtdp,g_pjba_m.pjbacrtdt,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfdt,g_pjba_m.pjba010,g_pjba_m.pjba011) # DISK WRITE

                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "g_pjba_m"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()

                     CONTINUE DIALOG
                  END IF
                  
                  IF cl_null(g_pjba_m.pjba003) THEN
                     IF NOT apjm200_pjbb_ins() THEN
                        INITIALIZE g_errparam TO NULL
                        LET g_errparam.code = SQLCA.sqlcode
                        LET g_errparam.extend = "g_pjba_m"
                        LET g_errparam.popup = TRUE
                        CALL cl_err()
                        CALL s_transaction_end('N','0')
                        CONTINUE DIALOG
                     END IF
                  END IF
                  
                              #  CALL apjm200_pjba_t('u')
                           INITIALIZE l_var_keys TO NULL
         INITIALIZE l_field_keys TO NULL
         INITIALIZE l_vars TO NULL
         INITIALIZE l_fields TO NULL
         IF g_pjba_m.pjba001 = g_master_multi_table_t.pjbal001 AND
         g_pjba_m.pjbal003 = g_master_multi_table_t.pjbal003 AND
         g_pjba_m.pjbal004 = g_master_multi_table_t.pjbal004  THEN
         ELSE
            LET l_var_keys[01] = g_pjba_m.pjba001
            LET l_field_keys[01] = 'pjbal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.pjbal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'pjbal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_pjba_m.pjbal003
            LET l_fields[01] = 'pjbal003'
            LET l_vars[02] = g_pjba_m.pjbal004
            LET l_fields[02] = 'pjbal004'
            LET l_vars[03] = g_enterprise
            LET l_fields[03] = 'pjbalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pjbal_t')
         END IF
         
                 
                  CALL s_transaction_end('Y','0')

                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                     CALL apjm200_detail_reproduce()
                  END IF

#                  LET p_cmd = 'u'
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = '!'
                  LET g_errparam.extend =  g_pjba_m.pjba001
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  NEXT FIELD pjba001
               END IF
            ELSE

               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point

               UPDATE pjba_t SET (pjbaent,pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjbastus,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbacrtdt,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt,pjba010,pjba011) 
                               = (g_enterprise,g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjbastus,g_pjba_m.pjbaownid,g_pjba_m.pjbaowndp,
                                  g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtdp,g_pjba_m.pjbacrtdt,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfdt,g_pjba_m.pjba010,g_pjba_m.pjba011)
                WHERE pjbaent = g_enterprise AND pjba001 = g_pjba001_t



               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "pjba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "pjba_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  OTHERWISE
                               #    CALL apjm200_pjba_t('u')
                              INITIALIZE l_var_keys TO NULL
         INITIALIZE l_field_keys TO NULL
         INITIALIZE l_vars TO NULL
         INITIALIZE l_fields TO NULL
         IF g_pjba_m.pjba001 = g_master_multi_table_t.pjbal001 AND
         g_pjba_m.pjbal003 = g_master_multi_table_t.pjbal003 AND
         g_pjba_m.pjbal004 = g_master_multi_table_t.pjbal004  THEN
         ELSE
            LET l_var_keys[01] = g_pjba_m.pjba001
            LET l_field_keys[01] = 'pjbal001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.pjbal001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'pjbal002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_pjba_m.pjbal003
            LET l_fields[01] = 'pjbal003'
            LET l_vars[02] = g_pjba_m.pjbal004
            LET l_fields[02] = 'pjbal004'
            LET l_vars[03] = g_enterprise
            LET l_fields[03] = 'pjbalent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pjbal_t')
         END IF
#          INITIALIZE l_var_keys TO NULL
#         INITIALIZE l_field_keys TO NULL
#         INITIALIZE l_vars TO NULL
#         INITIALIZE l_fields TO NULL
#         IF g_pjbb_m.pjbb001 = g_master_multi_table_t.pjbbl001_idx2 AND
#         g_pjbb_m.pjbb002 = g_master_multi_table_t.pjbbl002_idx2 AND
#         g_pjbb_m.pjbbl004 = g_master_multi_table_t.pjbbl004_idx2 AND
#         g_pjbb_m.pjbbl005 = g_master_multi_table_t.pjbbl005_idx2  THEN
#         ELSE
#            LET l_var_keys[01] = g_pjbb_m.pjbb001
#            LET l_field_keys[01] = 'pjbbl001'
#            LET l_var_keys_bak[01] = g_master_multi_table_t.pjbbl001_idx2
#            LET l_var_keys[02] = g_pjbb_m.pjbb002
#            LET l_field_keys[02] = 'pjbbl002'
#            LET l_var_keys_bak[02] = g_master_multi_table_t.pjbbl002_idx2
#            LET l_var_keys[03] = g_dlang
#            LET l_field_keys[03] = 'pjbbl003'
#            LET l_var_keys_bak[03] = g_dlang
#            LET l_vars[01] = g_pjbb_m.pjbbl004
#            LET l_fields[01] = 'pjbbl004'
#            LET l_vars[02] = g_pjbb_m.pjbbl005
#            LET l_fields[02] = 'pjbbl005'
#            LET l_vars[03] = g_enterprise
#            LET l_fields[03] = 'pjbblent'
#            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pjbbl_t')
#         END IF

                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE

            END IF
            LET g_pjba001_t = g_pjba_m.pjba001



           #controlp
      END INPUT
  
      






      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

      ON ACTION controlr
         CALL cl_show_req_fields()

      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG

   #add-point:input段after input
   {<point name="input.after_input"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION apjm200_show()
   {<Local define>}
   DEFINE l_ac_t    LIKE type_t.num5
   DEFINE l_sql     STRING
   {</Local define>}
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point

   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point

 
   LET g_pjba_m_t.* = g_pjba_m.*
   LET g_pjbb_m_t.* = g_pjbb_m.*      #保存單頭舊值
   IF NOT cl_null(g_pjba_m.pjbaownid) THEN 
      LET g_pjba_m.pjbaownid_desc = cl_get_username(g_pjba_m.pjbaownid)
   END IF
   IF NOT cl_null(g_pjba_m.pjbaowndp) THEN
      LET g_pjba_m.pjbaowndp_desc = cl_get_deptname(g_pjba_m.pjbaowndp)
   END IF
   IF NOT cl_null(g_pjba_m.pjbacrtid) THEN
      LET g_pjba_m.pjbacrtid_desc = cl_get_username(g_pjba_m.pjbacrtid)
   END IF
   IF NOT cl_null(g_pjba_m.pjbacrtdp) THEN
      LET g_pjba_m.pjbacrtdp_desc = cl_get_deptname(g_pjba_m.pjbacrtdp)
   END IF
   IF NOT cl_null(g_pjba_m.pjbamodid) THEN
      LET g_pjba_m.pjbamodid_desc = cl_get_username(g_pjba_m.pjbamodid)
   END IF
   IF NOT cl_null(g_pjba_m.pjbacnfid) THEN
      LET g_pjba_m.pjbacnfid_desc = cl_get_username(g_pjba_m.pjbacnfid)
   END IF
   DISPLAY BY NAME g_pjba_m.pjba000,g_pjba_m.pjba000_desc,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjbal003,g_pjba_m.pjbal004,
                   g_pjba_m.pjba003,g_pjba_m.pjba003_desc,g_pjba_m.pjba004,g_pjba_m.pjba004_desc,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjbastus,
                   g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba008_desc,g_pjba_m.pjbaownid,g_pjba_m.pjbaownid_desc,g_pjba_m.pjbaowndp,g_pjba_m.pjbaowndp_desc,
                   g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtid_desc,g_pjba_m.pjbacrtdp,g_pjba_m.pjbacrtdp_desc,g_pjba_m.pjbacrtdt,g_pjba_m.pjbamodid,g_pjba_m.pjbamodid_desc,
                   g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfid_desc,g_pjba_m.pjbacnfdt,g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,
                   g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,
                   g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001,g_pjba_m.pjba009,g_pjba_m.pjba010,g_pjba_m.pjba011,g_pjba_m.pjba012,g_pjba_m.pjba013,g_pjba_m.pjba014

   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_pjba_m.pjbastus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")

         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")


		
      END CASE



   IF g_bfill = "Y" THEN
      CALL apjm200_b_fill()                 #單身
   END IF

   #帶出公用欄位reference值
   #此段落由子樣板a12產生





   LET l_ac_t = l_ac

   #讀入ref值(單頭)
   #add-point:show段reference

   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pjbb_m.pjbb001
   LET g_ref_fields[2] = g_pjbb_m.pjbb002
   CALL ap_ref_array2(g_ref_fields," SELECT pjbbl004,pjbbl005 FROM pjbbl_t WHERE pjbblent = '"||g_enterprise||"' AND pjbbl001 = ? AND pjbbl002 = ? AND pjbbl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbb_m.pjbbl004 = g_rtn_fields[1]
   LET g_pjbb_m.pjbbl005 = g_rtn_fields[2]
   DISPLAY g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005 TO pjbbl004,pjbbl005
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbb_m.pjbb004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8001' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbb_m.pjbb004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbb_m.pjbb004_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbb_m.pjbb003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8001' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbb_m.pjbb003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbb_m.pjbb003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbb_m.pjbb010
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_pjbb_m.pjbb010_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbb_m.pjbb010_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbb_m.pjbb011
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbb_m.pjbb011_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbb_m.pjbb011_desc
          {#ADP版次:1#}
          
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pjba_m.pjba001
   CALL ap_ref_array2(g_ref_fields," SELECT pjbal003,pjbal004 FROM pjbal_t WHERE pjbalent = '"||g_enterprise||"' AND pjbal001 = ? AND pjbal002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjba_m.pjbal003 = g_rtn_fields[1]
   LET g_pjba_m.pjbal004 = g_rtn_fields[2]
   DISPLAY BY NAME g_pjba_m.pjbal003,g_pjba_m.pjbal004 
   
   INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjba_m.pjba000
            CALL ap_ref_array2(g_ref_fields,"SELECT pjaal003 FROM pjaal_t WHERE pjaalent='"||g_enterprise||"' AND pjaal001=? AND pjaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjba_m.pjba000_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjba_m.pjba000_desc
   INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjba_m.pjba003
            CALL ap_ref_array2(g_ref_fields,"SELECT pjbal003 FROM pjbal_t WHERE pjbalent='"||g_enterprise||"' AND pjbal001=? AND pjbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjba_m.pjba003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjba_m.pjba003_desc
    INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjba_m.pjba004
            CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjba_m.pjba004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjba_m.pjba004_desc
   INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjba_m.pjba008
            CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='4' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjba_m.pjba008_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjba_m.pjba008_desc
   CALL apjm200_pjba010_desc() 
   CALL s_desc_get_person_desc(g_pjba_m.pjba012) RETURNING g_pjba_m.pjba012_desc
   DISPLAY BY NAME g_pjba_m.pjba012_desc
   CALL apjm200_pjba014_desc()
   #end add-point

   #讀入ref值(單身)
   FOR l_ac = 1 TO g_pjbd_d.getLength()

      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd_d[l_ac].pjbd004
            CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbd_d[l_ac].pjbd004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd_d[l_ac].pjbd004_desc

            CALL apjm200_pjbd005_desc(g_pjbd_d[l_ac].pjbd005)

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd_d[l_ac].pjbd006
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbd_d[l_ac].pjbd006_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd_d[l_ac].pjbd006_desc
          {#ADP版次:1#}
      #end add-point
   END FOR

   FOR l_ac = 1 TO g_pjbd2_d.getLength()
      #帶出公用欄位reference值

      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd2_d[l_ac].pjbe003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbd2_d[l_ac].pjbe003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd2_d[l_ac].pjbe003_desc
          {#ADP版次:1#}
      #end add-point
   END FOR

   FOR l_ac = 1 TO g_pjbd3_d.getLength()
      #帶出公用欄位reference值

      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd3_d[l_ac].pjbf003
            CALL ap_ref_array2(g_ref_fields,"SELECT mrba004 FROM mrba_t WHERE mrbaent='"||g_enterprise||"' AND mrba001=? ","") RETURNING g_rtn_fields
            LET g_pjbd3_d[l_ac].pjbf003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd3_d[l_ac].pjbf003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd3_d[l_ac].pjbf004
            CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbd3_d[l_ac].pjbf004_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd3_d[l_ac].pjbf004_desc
          {#ADP版次:1#}
      #end add-point
   END FOR

   FOR l_ac = 1 TO g_pjbd4_d.getLength()
      #帶出公用欄位reference值

      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd4_d[l_ac].pjbg003
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8003' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbd4_d[l_ac].pjbg003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd4_d[l_ac].pjbg003_desc
          {#ADP版次:1#}
      #end add-point
   END FOR

   FOR l_ac = 1 TO g_pjbd5_d.getLength()
      #帶出公用欄位reference值

      #add-point:show段單身reference

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd5_d[l_ac].pjbc002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbd5_d[l_ac].pjbc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd5_d[l_ac].pjbc002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd5_d[l_ac].pjbc003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
            LET g_pjbd5_d[l_ac].pjbc003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd5_d[l_ac].pjbc003_desc
          {#ADP版次:1#}
      #end add-point
   END FOR





   LET l_ac = l_ac_t

   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()

   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   CALL apjm200_set_act_visible()
   CALL apjm200_set_act_no_visible()
END FUNCTION

PRIVATE FUNCTION apjm200_reproduce()
   {<Local define>}
   DEFINE l_newno     LIKE pjbb_t.pjbb001
   DEFINE l_oldno     LIKE pjbb_t.pjbb001
   DEFINE l_newno02     LIKE pjbb_t.pjbb002
   DEFINE l_oldno02     LIKE pjbb_t.pjbb002


   DEFINE l_master    RECORD LIKE pjbb_t.*
   DEFINE l_detail    RECORD LIKE pjbd_t.*
   DEFINE l_cnt       LIKE type_t.num5
   {</Local define>}
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point

   IF g_pjbb_m.pjbb001 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   LET g_pjba001_t = g_pjba_m.pjba001



   LET g_pjba_m.pjba001 = ""

   CALL apjm200_set_entry('a')
   CALL apjm200_set_no_entry('a')

   CALL cl_set_head_visible("","YES")

   #公用欄位給予預設值
   #此段落由子樣板a14產生
      LET g_pjba_m.pjbaownid = g_user
      LET g_pjba_m.pjbaowndp = g_dept
      LET g_pjba_m.pjbacrtid = g_user
      LET g_pjba_m.pjbacrtdp = g_dept
      LET g_pjba_m.pjbacrtdt = cl_get_current()
      LET g_pjba_m.pjbamodid = ""
      LET g_pjba_m.pjbamoddt = ""
      LET g_pjba_m.pjbastus = "N"



   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point

   CALL apjm200_input("r")



   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point

END FUNCTION

PRIVATE FUNCTION apjm200_detail_reproduce()
   {<Local define>}
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE pjbd_t.*
   DEFINE l_detail2    RECORD LIKE pjbe_t.*

   DEFINE l_detail3    RECORD LIKE pjbf_t.*

   DEFINE l_detail4    RECORD LIKE pjbg_t.*

   DEFINE l_detail5    RECORD LIKE pjbc_t.*


   {</Local define>}
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point

   CALL s_transaction_begin()

   LET ld_date = cl_get_current()

   DROP TABLE apjm200_detail

   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point

   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE apjm200_detail AS ",
                "SELECT * FROM pjbd_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apjm200_detail SELECT * FROM pjbd_t
                                         WHERE pjbdent = g_enterprise AND pjbd001 = g_pjba001_t



   #將key修正為調整後
   UPDATE apjm200_detail
      #更新key欄位
      SET pjbd001 = g_pjba_m.pjba001


      #更新共用欄位



   #將資料塞回原table
   INSERT INTO pjbd_t SELECT * FROM apjm200_detail

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF



   #刪除TEMP TABLE
   DROP TABLE apjm200_detail



   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE apjm200_detail AS ",
      "SELECT * FROM pjbe_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apjm200_detail SELECT * FROM pjbe_t
                                         WHERE pjbeent = g_enterprise AND pjbe001 = g_pjba001_t



   #將key修正為調整後
   UPDATE apjm200_detail SET pjbe001 = g_pjba_m.pjba001
    



   #將資料塞回原table
   INSERT INTO pjbe_t SELECT * FROM apjm200_detail



   #刪除TEMP TABLE
   DROP TABLE apjm200_detail





   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE apjm200_detail AS ",
      "SELECT * FROM pjbf_t "
   PREPARE repro_tbl3 FROM ls_sql
   EXECUTE repro_tbl3
   FREE repro_tbl3

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apjm200_detail SELECT * FROM pjbf_t
                                         WHERE pjbfent = g_enterprise AND pjbf001 = g_pjba001_t
                               



   #將key修正為調整後
   UPDATE apjm200_detail SET pjbf001 = g_pjba_m.pjba001
                           



   #將資料塞回原table
   INSERT INTO pjbf_t SELECT * FROM apjm200_detail



   #刪除TEMP TABLE
   DROP TABLE apjm200_detail



   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE apjm200_detail AS ",
      "SELECT * FROM pjbg_t "
   PREPARE repro_tbl4 FROM ls_sql
   EXECUTE repro_tbl4
   FREE repro_tbl4

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apjm200_detail SELECT * FROM pjbg_t
                                         WHERE pjbgent = g_enterprise AND pjbg001 = g_pjba001_t
                                 



   #將key修正為調整後
   UPDATE apjm200_detail SET pjbg001 = g_pjba_m.pjba001
                                   



   #將資料塞回原table
   INSERT INTO pjbg_t SELECT * FROM apjm200_detail



   #刪除TEMP TABLE
   DROP TABLE apjm200_detail



   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE apjm200_detail AS ",
      "SELECT * FROM pjbc_t "
   PREPARE repro_tbl5 FROM ls_sql
   EXECUTE repro_tbl5
   FREE repro_tbl5

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apjm200_detail SELECT * FROM pjbc_t
                                         WHERE pjbcent = g_enterprise AND pjbc001 = g_pjba001_t

   #將key修正為調整後
   UPDATE apjm200_detail SET pjbc001 = g_pjba_m.pjba001
                                 

   #將資料塞回原table
   INSERT INTO pjbc_t SELECT * FROM apjm200_detail

   #刪除TEMP TABLE
   DROP TABLE apjm200_detail


   #CREATE TEMP TABLE
   LET ls_sql =
      "CREATE GLOBAL TEMPORARY TABLE apjm200_detail AS ",
      "SELECT * FROM pjbb_t "
   PREPARE repro_tbl6 FROM ls_sql
   EXECUTE repro_tbl6
   FREE repro_tbl6

   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO apjm200_detail SELECT * FROM pjbb_t
                                         WHERE pjbbent = g_enterprise AND pjbb001 = g_pjba001_t

   #將key修正為調整後
   UPDATE apjm200_detail SET pjbb001 = g_pjba_m.pjba001
                                 

   #將資料塞回原table
   INSERT INTO pjbb_t SELECT * FROM apjm200_detail
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF 
   UPDATE pjbb_t SET pjbb012 = '0' 
      WHERE pjbbent = g_enterprise AND pjbb001 = g_pjba001_t
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "reproduce"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      RETURN
   END IF 
   #刪除TEMP TABLE
   DROP TABLE apjm200_detail

   #多語言複製段落


   CALL s_transaction_end('Y','0')

   #已新增完, 調整資料內容(修改時使用)
   LET g_pjba001_t = g_pjba_m.pjba001




   DROP TABLE apjm200_detail

END FUNCTION

PRIVATE FUNCTION apjm200_delete()
   {<Local define>}
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point

   IF g_pjba_m.pjba001 IS NULL THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   #檢查是否允許此動作
   IF NOT apjm200_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF

    SELECT UNIQUE pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjba009,pjbastus,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt,pjba010,pjba011,pjba012,pjba013
 INTO g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba009,g_pjba_m.pjbastus,g_pjba_m.pjbaownid,g_pjba_m.pjbaowndp,
      g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtdp,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfdt,g_pjba_m.pjba010,g_pjba_m.pjba011,g_pjba_m.pjba012,g_pjba_m.pjba013
 FROM pjba_t
 WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001
   CALL s_transaction_begin()

   LET g_master_multi_table_t.pjbal001 = g_pjba_m.pjba001
LET g_master_multi_table_t.pjbal003 = g_pjba_m.pjbal003
LET g_master_multi_table_t.pjbal004 = g_pjba_m.pjbal004
LET g_master_multi_table_t.pjbbl001_idx2 = g_pjbb_m.pjbb001
LET g_master_multi_table_t.pjbbl002_idx2 = g_pjbb_m.pjbb002
LET g_master_multi_table_t.pjbbl004_idx2 = g_pjbb_m.pjbbl004
LET g_master_multi_table_t.pjbbl005_idx2 = g_pjbb_m.pjbbl005


   OPEN apjm200_cl USING g_enterprise,g_pjba_m.pjba001
                                               


   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code =  STATUS
      LET g_errparam.extend = "OPEN apjm200_cl:"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      CLOSE apjm200_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   FETCH apjm200_cl INTO  g_pjba_m.pjba000,g_pjba_m.pjba000_desc,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjbal003,g_pjba_m.pjbal004,g_pjba_m.pjba003,g_pjba_m.pjba003_desc,g_pjba_m.pjba004,g_pjba_m.pjba004_desc,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba009,g_pjba_m.pjba008_desc,g_pjba_m.pjbaownid,g_pjba_m.pjbaownid_desc,g_pjba_m.pjbaowndp,g_pjba_m.pjbaowndp_desc,g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtid_desc,g_pjba_m.pjbacrtdt,g_pjba_m.pjbacrtdp,g_pjba_m.pjbacrtdp_desc,g_pjba_m.pjbacrtdt,g_pjba_m.pjbamodid,g_pjba_m.pjbamodid_desc,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfid_desc,g_pjba_m.pjbacnfdt,g_pjba_m.pjbastus              # 鎖住將被更改或取消的資料
                          ,g_pjba_m.pjba010,g_pjba_m.pjba011,g_pjba_m.pjba012,g_pjba_m.pjba013,g_pjba_m.pjba014
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_pjbb_m.pjbb001
      LET g_errparam.popup = FALSE
      CALL cl_err()
          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   CALL apjm200_show()

   #IF NOT cl_ask_delete() THEN             #確認一下
   IF cl_ask_del_master() THEN              #確認一下
      INITIALIZE g_doc.* TO NULL
      LET g_doc.column1 = "pjba001"
      LET g_doc.value1 = g_pjba_m.pjba001
     #CALL cl_del_doc()

      #資料備份
      LET g_pjba001_t = g_pjba_m.pjba001



      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM pjba_t 
       WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_pjba_m.pjba001
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

      DELETE FROM pjbal_t 
       WHERE pjbalent = g_enterprise AND pjbal001 = g_pjba_m.pjba001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = g_pjba_m.pjba001
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

      DELETE FROM pjbb_t
       WHERE pjbbent = g_enterprise AND pjbb001 = g_pjba_m.pjba001

    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_pjbb_m.pjbb001
      LET g_errparam.popup = FALSE
      CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

      DELETE FROM pjbbl_t
       WHERE pjbblent = g_enterprise AND pjbbl001 = g_pjba_m.pjba001
    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = g_pjbb_m.pjbb001
      LET g_errparam.popup = FALSE
      CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF

                  #  CALL apjm200_pjba_t('d')




      DELETE FROM pjbd_t
       WHERE pjbdent = g_enterprise AND pjbd001 = g_pjba_m.pjba001





      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbd_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF




      DELETE FROM pjbe_t
       WHERE pjbeent = g_enterprise AND
             pjbe001 = g_pjba_m.pjba001 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbe_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF


      DELETE FROM pjbf_t
       WHERE pjbfent = g_enterprise AND
             pjbf001 = g_pjba_m.pjba001 

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbf_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF


      DELETE FROM pjbg_t
       WHERE pjbgent = g_enterprise AND
             pjbg001 = g_pjba_m.pjba001

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbg_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF



      DELETE FROM pjbc_t
       WHERE pjbcent = g_enterprise AND pjbc001 = g_pjba_m.pjba001


      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbc_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

         CALL s_transaction_end('N','0')
         RETURN
      END IF




      CLEAR FORM
      CALL g_pjbd_d.clear()
      CALL g_pjbd2_d.clear()

      CALL g_pjbd3_d.clear()

      CALL g_pjbd4_d.clear()

      CALL g_pjbd5_d.clear()



    
      CALL apjm200_ui_detailshow()
       CALL apjm200_ui_browser_refresh()
      IF g_browser_cnt > 0 THEN
         CALL apjm200_fetch('P')
      ELSE
         LET g_wc = " 1=1"
         CALL apjm200_browser_fill()
      END IF

   END IF

   CLOSE apjm200_cl
   CALL s_transaction_end('Y','0')

   #流程通知預埋點-D
   CALL cl_flow_notify(g_pjba_m.pjba001,'D')

END FUNCTION

PRIVATE FUNCTION apjm200_b_fill()
   {<Local define>}
   DEFINE p_wc2      STRING
   {</Local define>}
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point

   CALL g_pjbd_d.clear()    #g_pjbd_d 單頭及單身
   CALL g_pjbd2_d.clear()

   CALL g_pjbd3_d.clear()

   CALL g_pjbd4_d.clear()

   CALL g_pjbd5_d.clear()



   #add-point:b_fill段define
   {<point name="b_fill.sql_before"/>}
   #end add-point

   LET g_sql = "SELECT  UNIQUE pjbd003,pjbd004,'',pjbd005,'',pjbd006,'',pjbd007,pjbd008,pjbd009,pjbd010,pjbd011 FROM pjbd_t",
               " INNER JOIN pjbb_t ON pjbb001 = pjbd001 ",
               " AND pjbb002 = pjbd002 ",


               "",
               " WHERE pjbdent=? AND pjbd001=? AND pjbd002=?"

   IF NOT cl_null(g_wc_table1) THEN
      LET g_sql = g_sql CLIPPED, " AND ", g_wc_table1 CLIPPED
   END IF

   LET g_sql = g_sql, " ORDER BY pjbd003"

   PREPARE apjm200_pb FROM g_sql
   DECLARE b_fill_cs CURSOR FOR apjm200_pb

   LET g_cnt = l_ac
   LET l_ac = 1

   OPEN b_fill_cs USING g_enterprise,g_pjbb_m.pjbb001
                                            ,g_pjbb_m.pjbb002



   FOREACH b_fill_cs INTO g_pjbd_d[l_ac].pjbd003,g_pjbd_d[l_ac].pjbd004,g_pjbd_d[l_ac].pjbd004_desc,g_pjbd_d[l_ac].pjbd005,g_pjbd_d[l_ac].pjbd005_desc,g_pjbd_d[l_ac].pjbd006,g_pjbd_d[l_ac].pjbd006_desc,g_pjbd_d[l_ac].pjbd007,g_pjbd_d[l_ac].pjbd008,g_pjbd_d[l_ac].pjbd009,g_pjbd_d[l_ac].pjbd010,g_pjbd_d[l_ac].pjbd011
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH

   LET g_sql = "SELECT  UNIQUE pjbe003,'',pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009 FROM pjbe_t",
               "",
               " WHERE pjbeent=? AND pjbe001=? AND pjbe002=?"

   IF NOT cl_null(g_wc_table2) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc_table2 CLIPPED
   END IF

   LET g_sql = g_sql, " ORDER BY  pjbe_t.pjbe003"

   PREPARE apjm200_pb2 FROM g_sql
   DECLARE b_fill_cs2 CURSOR FOR apjm200_pb2

   LET l_ac = 1

   OPEN b_fill_cs2 USING g_enterprise,g_pjbb_m.pjbb001
                                            ,g_pjbb_m.pjbb002



   FOREACH b_fill_cs2 INTO g_pjbd2_d[l_ac].pjbe003,g_pjbd2_d[l_ac].pjbe003_desc,g_pjbd2_d[l_ac].pjbe004,g_pjbd2_d[l_ac].pjbe005,g_pjbd2_d[l_ac].pjbe006,g_pjbd2_d[l_ac].pjbe007,g_pjbd2_d[l_ac].pjbe008,g_pjbd2_d[l_ac].pjbe009
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      {<point name="b_fill2.fill"/>}
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH


   LET g_sql = "SELECT  UNIQUE pjbf003,'',pjbf004,'',pjbf005,pjbf006,pjbf007,pjbf008 FROM pjbf_t",
               "",
               " WHERE pjbfent=? AND pjbf001=? AND pjbf002=?"

   IF NOT cl_null(g_wc_table3) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc_table3 CLIPPED
   END IF

   LET g_sql = g_sql, " ORDER BY    pjbf_t.pjbf003"

   PREPARE apjm200_pb3 FROM g_sql
   DECLARE b_fill_cs3 CURSOR FOR apjm200_pb3

   LET l_ac = 1

   OPEN b_fill_cs3 USING g_enterprise,g_pjbb_m.pjbb001
                                            ,g_pjbb_m.pjbb002



   FOREACH b_fill_cs3 INTO g_pjbd3_d[l_ac].pjbf003,g_pjbd3_d[l_ac].pjbf003_desc,g_pjbd3_d[l_ac].pjbf004,g_pjbd3_d[l_ac].pjbf004_desc,g_pjbd3_d[l_ac].pjbf005,g_pjbd3_d[l_ac].pjbf006,g_pjbd3_d[l_ac].pjbf007,g_pjbd3_d[l_ac].pjbf008
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      {<point name="b_fill3.fill"/>}
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH


   LET g_sql = "SELECT  UNIQUE pjbg003,'',pjbg004,pjbg005 FROM pjbg_t",
               "",
               " WHERE pjbgent=? AND pjbg001=? AND pjbg002=?"

   IF NOT cl_null(g_wc_table4) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc_table4 CLIPPED
   END IF

   LET g_sql = g_sql, "  ORDER BY   pjbg_t.pjbg003"

   PREPARE apjm200_pb4 FROM g_sql
   DECLARE b_fill_cs4 CURSOR FOR apjm200_pb4

   LET l_ac = 1

   OPEN b_fill_cs4 USING g_enterprise,g_pjbb_m.pjbb001
                                            ,g_pjbb_m.pjbb002



   FOREACH b_fill_cs4 INTO g_pjbd4_d[l_ac].pjbg003,g_pjbd4_d[l_ac].pjbg003_desc,g_pjbd4_d[l_ac].pjbg004,g_pjbd4_d[l_ac].pjbg005
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      {<point name="b_fill4.fill"/>}
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH


   LET g_sql = "SELECT  UNIQUE pjbc002,'',pjbc003,'',pjbc004,pjbc005,pjbc006 FROM pjbc_t",
               "",
               " WHERE pjbcent=? AND pjbc001=?"

   IF NOT cl_null(g_wc_table5) THEN
      LET g_sql = g_sql CLIPPED," AND ",g_wc_table5 CLIPPED
   END IF

   LET g_sql = g_sql, "  ORDER BY pjbc_t.pjbc002,pjbc_t.pjbc003"

   PREPARE apjm200_pb5 FROM g_sql
   DECLARE b_fill_cs5 CURSOR FOR apjm200_pb5

   LET l_ac = 1

   OPEN b_fill_cs5 USING g_enterprise,g_pjba_m.pjba001
                                           



   FOREACH b_fill_cs5 INTO g_pjbd5_d[l_ac].pjbc002,g_pjbd5_d[l_ac].pjbc002_desc,g_pjbd5_d[l_ac].pjbc003,g_pjbd5_d[l_ac].pjbc003_desc,g_pjbd5_d[l_ac].pjbc004,g_pjbd5_d[l_ac].pjbc005,g_pjbd5_d[l_ac].pjbc006
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "FOREACH:"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         EXIT FOREACH
      END IF

      #add-point:b_fill段資料填充
      {<point name="b_fill5.fill"/>}
      #end add-point

      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF

   END FOREACH




   CALL g_pjbd_d.deleteElement(g_pjbd_d.getLength())
   CALL g_pjbd2_d.deleteElement(g_pjbd2_d.getLength())

   CALL g_pjbd3_d.deleteElement(g_pjbd3_d.getLength())

   CALL g_pjbd4_d.deleteElement(g_pjbd4_d.getLength())

   CALL g_pjbd5_d.deleteElement(g_pjbd5_d.getLength())



   LET l_ac = g_cnt
   LET g_cnt = 0

   FREE apjm200_pb
   FREE apjm200_pb2

   FREE apjm200_pb3

   FREE apjm200_pb4

   FREE apjm200_pb5




END FUNCTION

PRIVATE FUNCTION apjm200_delete_b(ps_table,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point
      DELETE FROM pjbd_t
       WHERE pjbdent = g_enterprise AND
         pjbd001 = ps_keys_bak[1] AND pjbd002 = ps_keys_bak[2] AND pjbd003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = ""
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM pjbe_t
       WHERE pjbeent = g_enterprise AND
         pjbe001 = ps_keys_bak[1] AND pjbe002 = ps_keys_bak[2] AND pjbe003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbe_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete3" mark="Y"/>}
      #end add-point
      DELETE FROM pjbf_t
       WHERE pjbfent = g_enterprise AND
         pjbf001 = ps_keys_bak[1] AND pjbf002 = ps_keys_bak[2] AND pjbf003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbf_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete3"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete4" mark="Y"/>}
      #end add-point
      DELETE FROM pjbg_t
       WHERE pjbgent = g_enterprise AND
         pjbg001 = ps_keys_bak[1] AND pjbg002 = ps_keys_bak[2] AND pjbg003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbg_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete4"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete5" mark="Y"/>}
      #end add-point
      DELETE FROM pjbc_t
       WHERE pjbcent = g_enterprise AND
         pjbc001 = ps_keys_bak[1] AND pjbc002 = ps_keys_bak[2] AND pjbc003 = ps_keys_bak[3]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbc_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete5"/>}
      #end add-point
      RETURN
   END IF



END FUNCTION

PRIVATE FUNCTION apjm200_insert_b(ps_table,ps_keys,ps_page)
   {<Local define>}
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   {</Local define>}
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point

   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point
      INSERT INTO pjbd_t
                  (pjbdent,
                   pjbd001,pjbd002,
                   pjbd003
                   ,pjbd004,pjbd005,pjbd006,pjbd007,pjbd008,pjbd009,pjbd010)
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_pjbd_d[l_ac].pjbd004,g_pjbd_d[l_ac].pjbd005,g_pjbd_d[l_ac].pjbd006,g_pjbd_d[l_ac].pjbd007,g_pjbd_d[l_ac].pjbd008,g_pjbd_d[l_ac].pjbd009,g_pjbd_d[l_ac].pjbd010)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbd_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point
   END IF

   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert2" mark="Y"/>}
      #end add-point
      INSERT INTO pjbe_t
                  (pjbeent,
                   pjbe001,pjbe002,
                   pjbe003
                   ,pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009)
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_pjbd2_d[l_ac].pjbe004,g_pjbd2_d[l_ac].pjbe005,g_pjbd2_d[l_ac].pjbe006,g_pjbd2_d[l_ac].pjbe007,g_pjbd2_d[l_ac].pjbe008,g_pjbd2_d[l_ac].pjbe009)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbe_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert2"/>}
      #end add-point
   END IF

   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert3" mark="Y"/>}
      #end add-point
      INSERT INTO pjbf_t
                  (pjbfent,
                   pjbf001,pjbf002,
                   pjbf003
                   ,pjbf004,pjbf005,pjbf006,pjbf007,pjbf008)
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_pjbd3_d[l_ac].pjbf004,g_pjbd3_d[l_ac].pjbf005,g_pjbd3_d[l_ac].pjbf006,g_pjbd3_d[l_ac].pjbf007,g_pjbd3_d[l_ac].pjbf008)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert3"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbf_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert3"/>}
      #end add-point
   END IF

   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert4" mark="Y"/>}
      #end add-point
      INSERT INTO pjbg_t
                  (pjbgent,
                   pjbg001,pjbg002,
                   pjbg003
                   ,pjbg004,pjbg005)
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_pjbd4_d[l_ac].pjbg004,g_pjbd4_d[l_ac].pjbg005)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert4"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbg_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert4"/>}
      #end add-point
   END IF

   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert5" mark="Y"/>}
      #end add-point
      INSERT INTO pjbc_t
                  (pjbcent,
                   pjbc001,pjbc002,pjbc003
                   ,pjbc004,pjbc005,pjbc006)
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_pjbd5_d[l_ac].pjbc004,g_pjbd5_d[l_ac].pjbc005,g_pjbd5_d[l_ac].pjbc006)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert5"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjbc_t"
         LET g_errparam.popup = FALSE
         CALL cl_err()

      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert5"/>}
      #end add-point
   END IF



END FUNCTION

PRIVATE FUNCTION apjm200_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   {<Local define>}
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   {</Local define>}
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point

   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR

   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF

   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pjbd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point
      UPDATE pjbd_t
         SET (pjbd001,pjbd002,
              pjbd003
              ,pjbd004,pjbd005,pjbd006,pjbd007,pjbd008,pjbd009,pjbd010)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_pjbd_d[l_ac].pjbd004,g_pjbd_d[l_ac].pjbd005,g_pjbd_d[l_ac].pjbd006,g_pjbd_d[l_ac].pjbd007,g_pjbd_d[l_ac].pjbd008,g_pjbd_d[l_ac].pjbd009,g_pjbd_d[l_ac].pjbd010)
         WHERE pjbdent = g_enterprise AND pjbd001 = ps_keys_bak[1] AND pjbd002 = ps_keys_bak[2] AND pjbd003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "pjbd_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "pjbd_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         OTHERWISE

      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pjbe_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update2" mark="Y"/>}
      #end add-point
      UPDATE pjbe_t
         SET (pjbe001,pjbe002,
              pjbe003
              ,pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_pjbd2_d[l_ac].pjbe004,g_pjbd2_d[l_ac].pjbe005,g_pjbd2_d[l_ac].pjbe006,g_pjbd2_d[l_ac].pjbe007,g_pjbd2_d[l_ac].pjbe008,g_pjbd2_d[l_ac].pjbe009)
         WHERE pjbeent = g_enterprise AND pjbe001 = ps_keys_bak[1] AND pjbe002 = ps_keys_bak[2] AND pjbe003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "pjbe_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "pjbe_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         OTHERWISE

      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update2"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'3',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pjbf_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update3" mark="Y"/>}
      #end add-point
      UPDATE pjbf_t
         SET (pjbf001,pjbf002,
              pjbf003
              ,pjbf004,pjbf005,pjbf006,pjbf007,pjbf008)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_pjbd3_d[l_ac].pjbf004,g_pjbd3_d[l_ac].pjbf005,g_pjbd3_d[l_ac].pjbf006,g_pjbd3_d[l_ac].pjbf007,g_pjbd3_d[l_ac].pjbf008)
         WHERE pjbfent = g_enterprise AND pjbf001 = ps_keys_bak[1] AND pjbf002 = ps_keys_bak[2] AND pjbf003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update3"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "pjbf_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "pjbf_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         OTHERWISE

      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update3"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'4',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pjbg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update4" mark="Y"/>}
      #end add-point
      UPDATE pjbg_t
         SET (pjbg001,pjbg002,
              pjbg003
              ,pjbg004,pjbg005)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_pjbd4_d[l_ac].pjbg004,g_pjbd4_d[l_ac].pjbg005)
         WHERE pjbgent = g_enterprise AND pjbg001 = ps_keys_bak[1] AND pjbg002 = ps_keys_bak[2] AND pjbg003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update4"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "pjbg_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "pjbg_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         OTHERWISE

      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update4"/>}
      #end add-point
      RETURN
   END IF

   LET ls_group = "'5',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "pjbc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update5" mark="Y"/>}
      #end add-point
      UPDATE pjbc_t
         SET (
              pjbc001,pjbc002,pjbc003
              ,pjbc004,pjbc005,pjbc006)
              =
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_pjbd5_d[l_ac].pjbc004,g_pjbd5_d[l_ac].pjbc005,g_pjbd5_d[l_ac].pjbc006)
         WHERE pjbcent = g_enterprise AND pjbc001 = ps_keys_bak[1] AND pjbc002 = ps_keys_bak[2] AND pjbc003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update5"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = "std-00009"
            LET g_errparam.extend = "pjbc_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = SQLCA.sqlcode
            LET g_errparam.extend = "pjbc_t"
            LET g_errparam.popup = TRUE
            CALL cl_err()

            CALL s_transaction_end('N','0')
         OTHERWISE

      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update5"/>}
      #end add-point
      RETURN
   END IF



END FUNCTION

PRIVATE FUNCTION apjm200_set_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point

   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("pjba001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point
   END IF
   
   CALL cl_set_comp_entry("pjba003,pjba007,pjba008,pjba000",TRUE)
   
END FUNCTION

PRIVATE FUNCTION apjm200_set_no_entry(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point

   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("pjba001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point
      CALL cl_set_comp_entry("pjba000",FALSE)
   ELSE
      IF NOT cl_null(g_pjba_m.pjba003) THEN
         CALL cl_set_comp_entry("pjba007,pjba008",FALSE)
      END IF
   END IF

   IF g_pjba_m.pjba002 = 'Y' THEN
      INITIALIZE g_pjba_m.pjba003 TO NULL 
      DISPLAY BY NAME g_pjba_m.pjba003
      CALL cl_set_comp_entry("pjba003",FALSE)
   END IF

END FUNCTION

PRIVATE FUNCTION apjm200_set_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point
END FUNCTION

PRIVATE FUNCTION apjm200_set_no_entry_b(p_cmd)
   {<Local define>}
   DEFINE p_cmd   LIKE type_t.chr1
   {</Local define>}
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point
END FUNCTION

PRIVATE FUNCTION apjm200_default_search()
   {<Local define>}
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   {</Local define>}
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point

   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point

   LET g_pagestart = 1

   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " pjba001 = '", g_argv[1], "' AND "
   END IF


   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
   ELSE
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF

   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION apjm200_statechange()
   {<Local define>}
   DEFINE lc_state LIKE type_t.chr5
   DEFINE l_open_state LIKE type_t.chr1

   ERROR ""     #清空畫面右下側ERROR區塊

   IF g_pjba_m.pjba001 IS NULL

   THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = "std-00003"
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

      RETURN
   END IF

   #檢查是否允許此動作
   IF NOT apjm200_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF

   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         CASE g_pjba_m.pjbastus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "Y"
               HIDE OPTION "confirmed"

            WHEN "X"
               HIDE OPTION "invalid"
			
         END CASE
      CALL cl_set_act_visible("open,confirmed,invalid",TRUE)
      IF g_pjba_m.pjbastus MATCHES '[YX]' THEN
         CALL cl_set_act_visible("invalid,confirmed",FALSE)
      ELSE
         CALL cl_set_act_visible("open",FALSE)
	  END IF
	  
      ON ACTION open
         LET lc_state = "N"
         IF g_pjba_m.pjbastus = 'X' THEN LET l_open_state = 'V' END IF
         IF g_pjba_m.pjbastus = 'Y' THEN LET l_open_state = 'C' END IF
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"

         EXIT MENU

      ON ACTION invalid
         LET lc_state = "X"

         EXIT MENU


	
	
	
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
	
   END MENU

   IF (lc_state <> "N"
      AND lc_state <> "X"

      AND lc_state <> "Y"


      ) OR
      cl_null(lc_state) THEN
      RETURN
   END IF

   CASE WHEN lc_state = 'Y' 
           CALL s_apjm200_conf_chk(g_pjba_m.pjba001,g_pjba_m.pjbastus) RETURNING g_success,g_errno
           IF g_success THEN
              IF cl_ask_confirm('lib-054') THEN
                 CALL s_transaction_begin()
                 CALL s_apjm200_conf_upd(g_pjba_m.pjba001) RETURNING g_success,g_errno
                 IF g_success THEN
                    CALL s_transaction_end('Y','0')
                 ELSE
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
                    CALL s_transaction_end('N','0')
                    RETURN
                 END IF
              ELSE   
                 RETURN  
              END IF
           ELSE
              INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
              RETURN 
           END IF
        WHEN lc_state = 'N' 
           IF l_open_state = 'C' THEN
              CALL s_apjm200_unconf_chk(g_pjba_m.pjba001,g_pjba_m.pjbastus) RETURNING g_success,g_errno
              IF g_success THEN
                 IF cl_ask_confirm('aim-00110') THEN
                    CALL s_transaction_begin()
                    CALL s_apjm200_unconf_upd(g_pjba_m.pjba001) RETURNING g_success,g_errno
                    IF g_success THEN
                       CALL s_transaction_end('Y','0')
                    ELSE
                       INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
                       CALL s_transaction_end('N','0')
                       RETURN
                    END IF
                 ELSE   
                    RETURN  
                 END IF
              ELSE
                 INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
                 RETURN 
              END IF
           ELSE
              CALL s_apjm200_unvoid_chk(g_pjba_m.pjba001,g_pjba_m.pjbastus) RETURNING g_success,g_errno
              IF g_success THEN
                 IF cl_ask_confirm('apj-00020') THEN
                    CALL s_transaction_begin()
                    CALL s_apjm200_unvoid_upd(g_pjba_m.pjba001) RETURNING g_success,g_errno
                    IF g_success THEN
                       CALL s_transaction_end('Y','0')
                    ELSE
                       INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
                       CALL s_transaction_end('N','0')
                       RETURN
                    END IF
                 ELSE   
                    RETURN  
                 END IF
              ELSE
                 INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
                 RETURN 
              END IF
           END IF
        WHEN lc_state = 'X'
           CALL s_apjm200_void_chk(g_pjba_m.pjba001,g_pjba_m.pjbastus) RETURNING g_success,g_errno
           IF g_success THEN
              IF cl_ask_confirm('apj-00023') THEN
                 CALL s_transaction_begin()
                 CALL s_apjm200_void_upd(g_pjba_m.pjba001) RETURNING g_success,g_errno
                 IF g_success THEN
                    CALL s_transaction_end('Y','0')
                 ELSE
                    INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
                    CALL s_transaction_end('N','0')
                    RETURN
                 END IF
              ELSE   
                 RETURN  
              END IF
           ELSE
              INITIALIZE g_errparam TO NULL
                    LET g_errparam.code = g_errno
                    LET g_errparam.extend = g_pjba_m.pjba001
                    LET g_errparam.popup = TRUE
                    CALL cl_err()
 
              RETURN 
           END IF
   END CASE

   LET g_pjba_m.pjbamodid = g_user
   LET g_pjba_m.pjbamoddt = cl_get_current()
   LET g_pjba_m.pjbastus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE pjba_t 
      SET (pjbastus,pjbamodid,pjbamoddt) 
        = (g_pjba_m.pjbastus,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt)     
    WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001

   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = ""
      LET g_errparam.popup = FALSE
      CALL cl_err()

   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")

         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")


		
      END CASE
      LET g_pjba_m.pjbastus = lc_state
      DISPLAY BY NAME g_pjba_m.pjbastus
      SELECT UNIQUE pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjbastus,pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt
        INTO g_pjba_m.pjba000,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjba003,g_pjba_m.pjba004,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjbastus,g_pjba_m.pjbaownid,g_pjba_m.pjbaowndp,
             g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtdp,g_pjba_m.pjbamodid,g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfdt
        FROM pjba_t
        WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "pjba_t"
         LET g_errparam.popup = TRUE
         CALL cl_err()
      
         INITIALIZE g_pjba_m.* TO NULL
         RETURN
      END IF
      
      DISPLAY BY NAME g_pjba_m.pjba000,g_pjba_m.pjba000_desc,g_pjba_m.pjba001,g_pjba_m.pjba002,g_pjba_m.pjbal003,g_pjba_m.pjbal004,
                   g_pjba_m.pjba003,g_pjba_m.pjba003_desc,g_pjba_m.pjba004,g_pjba_m.pjba004_desc,g_pjba_m.pjba005,g_pjba_m.pjba006,g_pjba_m.pjbastus,
                   g_pjba_m.pjba007,g_pjba_m.pjba008,g_pjba_m.pjba008_desc,g_pjba_m.pjbaownid,g_pjba_m.pjbaownid_desc,g_pjba_m.pjbaowndp,g_pjba_m.pjbaowndp_desc,
                   g_pjba_m.pjbacrtid,g_pjba_m.pjbacrtid_desc,g_pjba_m.pjbacrtdp,g_pjba_m.pjbacrtdp_desc,g_pjba_m.pjbacrtdt,g_pjba_m.pjbamodid,g_pjba_m.pjbamodid_desc,
                   g_pjba_m.pjbamoddt,g_pjba_m.pjbacnfid,g_pjba_m.pjbacnfid_desc,g_pjba_m.pjbacnfdt,g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,
                   g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,
                   g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001
   END IF

   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point

   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point

END FUNCTION

PRIVATE FUNCTION apjm200_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point

   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_pjbd_d.getLength() THEN
         LET g_detail_idx = g_pjbd_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pjbd_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
#     DISPLAY g_detail_idx TO FORMONLY.idx
#     DISPLAY g_pjbd_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 2 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx > g_pjbd2_d.getLength() THEN
         LET g_detail_idx = g_pjbd2_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pjbd2_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
#     DISPLAY g_detail_idx TO FORMONLY.idx
#     DISPLAY g_pjbd2_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 3 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail3")
      IF g_detail_idx > g_pjbd3_d.getLength() THEN
         LET g_detail_idx = g_pjbd3_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pjbd3_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
#     DISPLAY g_detail_idx TO FORMONLY.idx
#     DISPLAY g_pjbd3_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 4 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail4")
      IF g_detail_idx > g_pjbd4_d.getLength() THEN
         LET g_detail_idx = g_pjbd4_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pjbd4_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
#     DISPLAY g_detail_idx TO FORMONLY.idx
#     DISPLAY g_pjbd4_d.getLength() TO FORMONLY.cnt
   END IF

   IF g_current_page = 5 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail5")
      IF g_detail_idx > g_pjbd5_d.getLength() THEN
         LET g_detail_idx = g_pjbd5_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_pjbd5_d.getLength() <> 0 THEN
         #LET g_detail_idx = 1
      END IF
#     DISPLAY g_detail_idx TO FORMONLY.idx
#     DISPLAY g_pjbd5_d.getLength() TO FORMONLY.cnt
   END IF



END FUNCTION

PRIVATE FUNCTION apjm200_tree_expand(p_id)
   {<Local define>}
   DEFINE p_id          LIKE type_t.num10
   DEFINE l_id          LIKE type_t.num10
   DEFINE l_cnt         LIKE type_t.num10
   DEFINE l_keyvalue    LIKE type_t.chr50
   DEFINE l_typevalue   LIKE type_t.chr50
   DEFINE l_type        LIKE type_t.chr50
   DEFINE l_sql         STRING
   DEFINE ls_source     LIKE type_t.chr500
   DEFINE ls_exp_code   LIKE type_t.chr500
   DEFINE l_return      LIKE type_t.num5
   DEFINE l_count       LIKE type_t.num5
   {</Local define>}
   #add-point:browser_expand段define
   {<point name="browser_expand.define"/>}
   #end add-point

   #若已經展開
   IF g_tree[p_id].b_isExp = 1 THEN
      RETURN
   END IF

   #LET li_lv = g_tree[p_id].b_expcode
   LET g_tree[p_id].b_isExp = TRUE

#   LET l_keyvalue = g_tree[p_id].b_pjbb002
#   LET l_typevalue = g_tree[p_id].b_pjbb001
#
#   CASE g_tree[p_id].b_expcode
#      WHEN -1
#         CALL g_tree.deleteElement(p_id)
#      WHEN 0
#         RETURN
#      WHEN 1
#         LET ls_source = " pjbb_t"
#         LET ls_exp_code = "exp_code"
#      WHEN 2
#         LET ls_source = "pjbb_t"
#         LET ls_exp_code = "'2'"
#   END CASE

   LET l_sql = " SELECT UNIQUE pjbb001,pjbb002,pjbbl004,pjbb003,pjbb004,oocql004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,ooag011,pjbb011,ooefl003,pjbb012",
               "   FROM  pjbb_t LEFT OUTER JOIN pjbbl_t ON pjbbent = pjbblent AND pjbb001 = pjbbl001 AND pjbb002 = pjbbl002 AND pjbbl003 = '",g_dlang,"'",
                  "             LEFT OUTER JOIN oocql_t ON pjbbent = pjbblent AND pjbb004 = oocql002 AND oocql001 = '8001' AND oocql003 = '",g_dlang,"'",
                   "               LEFT OUTER JOIN ooag_t ON pjbbent = ooagent AND pjbb010 = ooag001 ",
                  "               LEFT OUTER JOIN ooefl_t ON pjbbent = ooeflent AND pjbb011 = ooefl001 AND ooefl002 = '",g_dlang,"'",
               "  WHERE  pjbb002 <> pjbb003",
               "    AND  pjbb001 = '",g_tree[p_id].b_pjbb001,"'",
               "    AND  pjbb003 = '",g_tree[p_id].b_pjbb002,"'",
               " ORDER BY pjbb002"

   PREPARE tree_expand FROM l_sql
   DECLARE tree_ex_cur CURSOR FOR tree_expand

   LET l_id = p_id + 1
   CALL g_tree.insertElement(l_id)
   LET l_cnt = 1
   FOREACH tree_ex_cur INTO g_tree[l_id].b_pjbb001,g_tree[l_id].b_pjbb002,g_tree[l_id].b_pjbb002_desc,g_tree[l_id].b_pjbb003,g_tree[l_id].b_pjbb004,g_tree[l_id].b_pjbb004_desc,g_tree[l_id].b_pjbb005,g_tree[l_id].b_pjbb006,g_tree[l_id].b_pjbb007,g_tree[l_id].b_pjbb008,g_tree[l_id].b_pjbb009,g_tree[l_id].b_pjbb010,g_tree[l_id].b_pjbb010_desc,g_tree[l_id].b_pjbb011,g_tree[l_id].b_pjbb011_desc,g_tree[l_id].b_pjbb012,g_tree[l_id].b_expcode
      #pid=父節點id
      LET g_tree[l_id].b_pid  = g_tree[p_id].b_id
      #id=本身節點id(採流水號遞增)
      LET g_tree[l_id].b_id   = g_tree[p_id].b_id||"."||l_cnt
      LET g_tree[l_id].b_exp     = FALSE
      #hasC=確認該節點是否有子孫
      #LET g_browser[l_id].b_pjbb002 = g_browser[l_id].b_pjbb002 CLIPPED
      CALL apjm200_desc_show(l_id)
      LET g_tree[l_id].b_hasC = apjm200_chk_hasC(l_id)
      LET l_id = l_id + 1
      CALL g_tree.insertElement(l_id)
      LET l_cnt = l_cnt + 1

   END FOREACH

   #刪除空資料
   CALL g_tree.deleteElement(l_id)
   LET l_count =  g_tree.getLength()
   DISPLAY l_count TO FORMONLY.b_count
   FREE tree_expand

END FUNCTION

PRIVATE FUNCTION apjm200_match_node(p_wc,p_type)
#   {<Local define>}
   DEFINE p_wc         LIKE type_t.chr200
   DEFINE p_type       LIKE type_t.chr10
#   DEFINE ls_code      LIKE type_t.chr50
#   DEFINE ls_code2     LIKE type_t.chr50
#   DEFINE l_bstmp      RECORD    #body欄位
#             pjbb001 VARCHAR(500),
#   pjbb002 VARCHAR(500),
#   pjbb003 VARCHAR(500),
#   pjbb004 VARCHAR(500),
#   pjbb005 VARCHAR(500),
#   pjbb006 VARCHAR(500),
#   pjbb007 VARCHAR(500),
#   pjbb008 VARCHAR(500),
#   pjbb009 VARCHAR(500),
#   pjbb010 VARCHAR(500),
#   pjbb011 VARCHAR(500),
#   pjbb012 VARCHAR(500)
#          #僅含單身table的欄位
#   END RECORD
#   DEFINE l_child_list DYNAMIC ARRAY OF RECORD    #body欄位
#             pjbb001 VARCHAR(500),
#   pjbb002 VARCHAR(500),
#   pjbb003 VARCHAR(500),
#   pjbb004 VARCHAR(500),
#   pjbb005 VARCHAR(500),
#   pjbb006 VARCHAR(500),
#   pjbb007 VARCHAR(500),
#   pjbb008 VARCHAR(500),
#   pjbb009 VARCHAR(500),
#   pjbb010 VARCHAR(500),
#   pjbb011 VARCHAR(500),
#   pjbb012 VARCHAR(500)
#          #僅含單身table的欄位
#   END RECORD
#   {</Local define>}
#   #add-point:match_node段define
#   {<point name="match_node.define"/>}
#   #end add-point
#
#   #先找出符合條件的節點並給予展開值
#   CASE p_type
#      WHEN 1
#         LET ls_code = "0"
#      WHEN 2
#         LET ls_code = "2"
#      WHEN 3
#         LET ls_code = "2"
#   END CASE
#
#   IF cl_null('pjbb003') THEN
#      LET ls_code = '0'
#   END IF
#
#   CALL s_transaction_begin()
#
#   LET g_sql = " INSERT INTO apjm200_tmp (pjbb001,pjbb002,pjbb003,pjbb004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,exp_code) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)"
#   PREPARE master_tmp FROM g_sql
#
#   IF g_root_search THEN
#      #DECLARE master_tmp_cur CURSOR FOR master_tmp
#      #OPEN master_tmp_cur
#      FOREACH master_extcur INTO l_bstmp.*
#         EXECUTE master_tmp USING l_bstmp.*,ls_code
#         #PUT master_tmp_cur FROM l_bstmp.*,ls_code
#      END FOREACH
#      #FLUSH master_tmp_cur
#      CALL s_transaction_end('Y','0')
#      RETURN
#   END IF
#
#   FOREACH master_extcur INTO l_bstmp.*
#      EXECUTE master_tmp USING l_bstmp.*,ls_code
#      LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
#
#      #找出符合條件的節點的所有祖先並給予展開值
#      CASE p_type
#         WHEN 1
#            LET ls_code2 = "1"
#         WHEN 2
#            LET ls_code2 = "-1"
#         WHEN 3
#            LET ls_code2 = "1"
#      END CASE
#
#      #若pid欄位存在才進行後續處理
#      #擷取該節點的父節點到temp table中
#      LET g_sql = " SELECT pjbb001,pjbb002,pjbb003,pjbb004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012 ",
#                  " FROM pjbb_t  ",
#                  " WHERE pjbbent = '" ||g_enterprise|| "' AND pjbb002 = ? "
#                  ," AND pjbb001 = ? "
#      PREPARE master_getparent_up FROM g_sql
#
#      #擷取該節點的所有父節點
#      WHILE TRUE
#         IF cl_null(l_child_list[1].pjbb002) THEN
#            IF l_child_list.getLength() = 1 THEN
#               EXIT WHILE
#            ELSE
#               CALL l_child_list.deleteElement(1)
#               CONTINUE WHILE
#            END IF
#         END IF
#
#         EXECUTE master_getparent_up USING l_child_list[1].pjbb003
#                                           ,l_child_list[1].pjbb001
#                                           INTO l_bstmp.*
#         FREE master_getparent_up
#
#      #確定該節點是否存在於temp table中
#
#         IF STATUS = 0 AND apjm200_tmp_tbl_chk(l_bstmp.pjbb002,ls_code2
#                     ,l_bstmp.pjbb001
#                     ) THEN
#            EXECUTE master_tmp USING l_bstmp.*,ls_code2
#            LET l_child_list[l_child_list.getLength()+1].* = l_bstmp.*
#         END IF
#         CALL l_child_list.deleteElement(1)
#
#      END WHILE
#
#   END FOREACH
#
#   FREE master_tmp
#
#   CALL s_transaction_end('Y','0')

END FUNCTION

PRIVATE FUNCTION apjm200_tmp_tbl_chk(ps_id,pi_code,ps_type)
   {<Local define>}
   DEFINE ps_id       STRING
   DEFINE pi_code     LIKE type_t.num10
   DEFINE ps_type     STRING
   DEFINE ls_id       LIKE type_t.chr500
   DEFINE ls_search   LIKE type_t.chr500
   DEFINE ls_type     LIKE type_t.chr500
   DEFINE li_cnt      LIKE type_t.num10
   DEFINE li_code     LIKE type_t.num10
   {</Local define>}
   #add-point:tmp_tbl_chk段define
   {<point name="tmp_tbl_chk.define"/>}
   #end add-point

   LET ls_id = ps_id
   LET ls_type = ps_type

   IF cl_null(ls_id) THEN
      RETURN TRUE
   END IF

   LET g_sql = " SELECT COUNT(*) FROM apjm200_tmp ",
               " WHERE pjbb002 = ? "
                ," AND pjbb001 = ? "

   PREPARE apjm200_get_cnt FROM g_sql
   EXECUTE apjm200_get_cnt USING ls_id ,ls_type
                                     INTO li_cnt
   FREE apjm200_get_cnt

   IF li_cnt = 0 OR SQLCA.sqlcode THEN
      RETURN TRUE
   ELSE

      #資料已存在, 確定是否需要更新展開值
      LET g_sql = " SELECT exp_code FROM apjm200_tmp  ",
                  " WHERE pjbb002 = ? "
                   ," AND pjbb001 = ? "

      PREPARE apjm200_chk_exp FROM g_sql

      EXECUTE apjm200_chk_exp USING ls_id ,ls_type
                                        INTO li_code
      FREE apjm200_chk_exp

      #若新展開值>原展開值則做更新
      IF pi_code > li_code THEN
         LET g_sql = " UPDATE apjm200_tmp SET (exp_code) = ('",pi_code,"') ",
                     " WHERE pjbb002 = ? "
                      ," AND pjbb001 = ? "
         PREPARE apjm200_upd_exp FROM g_sql
         EXECUTE apjm200_upd_exp USING ls_id ,ls_type
         FREE apjm200_upd_exp

      END IF

      RETURN FALSE
   END IF

END FUNCTION

PRIVATE FUNCTION apjm200_tree_create(p_type)
#   {<Local define>}
   DEFINE p_type   LIKE type_t.chr50
#   DEFINE l_pid    LIKE type_t.chr50
#   {</Local define>}
#   #add-point:tree_create
#   {<point name="tree_create.define"/>}
#   #end add-point
#   
#   CALL g_tree.clear()
#   #先找出所有的帳別資料
#   LET g_sql = " SELECT UNIQUE pjbb001 FROM apjm200_tmp ORDER BY pjbb001"
#   PREPARE master_type FROM g_sql
#   DECLARE master_typecur CURSOR FOR master_type
#
#   INITIALIZE g_tree_root TO NULL
#
#   LET l_ac = 1
#   FOREACH master_typecur INTO g_tree[l_ac].b_pjbb001
#      #確定root節點所在
#      LET g_tree_root[g_tree_root.getLength()+1] = l_ac
#      #此處為帳別部分(LV-1)
#      LET g_tree[l_ac].b_pjbb002  = g_tree[l_ac].b_pjbb001
#      LET g_tree[l_ac].b_pjbb001 = g_tree[l_ac].b_pjbb001
#      LET g_tree[l_ac].b_pid = '0' CLIPPED
#      LET g_tree[l_ac].b_id = l_ac USING "<<<"
#      LET g_tree[l_ac].b_exp = TRUE
#      LET g_tree[l_ac].b_hasC = TRUE
#      LET l_pid = g_tree[l_ac].b_id CLIPPED
#      LET l_ac = l_ac + 1
#
#      #抓出LV2的所有資料
#      LET g_sql = " SELECT UNIQUE pjbb001,pjbb002,pjbb003,pjbb004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,exp_code FROM apjm200_tmp a ",
#                  " WHERE ",
#                  "a.pjbb001 = ? ",
#                  " AND ",
#                  " (( SELECT COUNT(*) FROM apjm200_tmp b WHERE a.pjbb003 = b.pjbb002 ",
#                  " AND a.pjbb001 = b.pjbb001",
#                  ") = 0 OR ",
#                  " a.pjbb002 = a.pjbb003 )",
#                  " ORDER BY a.pjbb002"
#      PREPARE master_getLV2 FROM g_sql
#      DECLARE master_getLV2cur CURSOR FOR master_getLV2
#
#      #以下為一般資料root(LV-2)
#      OPEN master_getLV2cur USING g_tree[l_ac-1].b_pjbb001
#
#      LET g_cnt = l_ac
#
#      FOREACH master_getLV2cur INTO g_tree[g_cnt].b_pjbb001,g_tree[g_cnt].b_pjbb002,g_tree[g_cnt].b_pjbb003,g_tree[g_cnt].b_pjbb004,g_tree[g_cnt].b_pjbb005,g_tree[g_cnt].b_pjbb006,g_tree[g_cnt].b_pjbb007,g_tree[g_cnt].b_pjbb008,g_tree[g_cnt].b_pjbb009,g_tree[g_cnt].b_pjbb010,g_tree[g_cnt].b_pjbb011,g_tree[g_cnt].b_pjbb012,g_tree[g_cnt].b_expcode
#         #去除多餘空白
#         #LET g_tree[g_cnt].b_pjbb002 = g_tree[g_cnt].b_pjbb002 CLIPPED
#         LET g_tree[g_cnt].b_pid = l_pid
#         LET g_tree[g_cnt].b_id = l_pid,".",g_cnt USING "<<<"
#         LET g_tree[g_cnt].b_exp = FALSE
#         LET g_tree[g_cnt].b_expcode = 2
#
#         IF cl_null("pjbb003") THEN
#            LET g_tree[g_cnt].b_hasC = FALSE
#         ELSE
#            LET g_tree[g_cnt].b_hasC = TRUE
#         END IF
#   
#         LET g_cnt = g_cnt + 1
#
##         IF g_cnt > g_max_rec AND g_error_show = 1 THEN
##            CALL cl_err('',9035,0)
##            EXIT FOREACH
##         END IF
#      END FOREACH
#      LET l_ac = g_tree.getLength()
#
##      IF g_cnt > g_max_rec AND g_error_show = 1 THEN
##         EXIT FOREACH
##      END IF
#   END FOREACH
#
#   LET g_error_show = 0
#
#   #組合描述欄位&刪除多於資料
#   FOR l_ac = 1 TO g_tree.getLength()
#      IF cl_null(g_tree[l_ac].b_pjbb002) THEN
#         CALL g_tree.deleteElement(l_ac)
#         LET l_ac = l_ac - 1
#      ELSE
#         CALL apjm200_desc_show(l_ac)
#      END IF
#   END FOR
#   CALL g_tree.deleteElement(l_ac)
#
##   LET g_tree_cnt = g_tree.getLength() - g_tree_root.getLength()
#   FREE tree_expand
#   FREE master_getLV2
#
END FUNCTION
#第二單頭fetch
PRIVATE FUNCTION apjm200_fetch2()
   {<Local define>}
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   DEFINE ls_chk     STRING
   {</Local define>}
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point

#   LET ls_chk = g_tree[g_tree_idx].b_id
#   IF ls_chk.getIndexOf('.',1) = 0 THEN
#      INITIALIZE g_pjbb_m.* TO NULL
#      DISPLAY BY NAME g_pjbb_m.*
#      DISPLAY '' TO FORMONLY.b_index
#      RETURN
#   END IF
#

   #超出範圍
   IF g_tree_idx > g_tree.getLength() THEN
      LET g_tree_idx = g_tree.getLength()
   END IF

   IF cl_null(g_tree_idx) OR g_tree_idx = 0 THEN LET g_tree_idx = 1 END IF
   LET g_pjbb_m.pjbb001 = g_tree[g_tree_idx].b_pjbb001
   LET g_pjbb_m.pjbb002 = g_tree[g_tree_idx].b_pjbb002



   #重讀DB,因TEMP有不被更新特性
    SELECT UNIQUE pjbb002,pjbb004,pjbb003,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,pjbb001
 INTO g_pjbb_m.pjbb002,g_pjbb_m.pjbb004,g_pjbb_m.pjbb003,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb011,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001
 FROM pjbb_t
 WHERE pjbbent = g_enterprise AND pjbb001 = g_pjbb_m.pjbb001 AND pjbb002 = g_pjbb_m.pjbb002
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.code = SQLCA.sqlcode
      LET g_errparam.extend = "pjbb_t"
      LET g_errparam.popup = TRUE
      CALL cl_err()

      INITIALIZE g_pjbb_m.* TO NULL
      RETURN
   END IF

   CALL apjm200_show()
END FUNCTION

PRIVATE FUNCTION apjm200_pjba000_desc(p_pjba000)
DEFINE p_pjba000   LIKE pjba_t.pjba000
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjba000
   CALL ap_ref_array2(g_ref_fields,"SELECT pjaal003 FROM pjaal_t WHERE pjaalent='"||g_enterprise||"' AND pjaal001=? AND pjaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjba_m.pjba000_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjba_m.pjba000_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjba003_desc(p_pjba003)
DEFINE p_pjba003    LIKE pjba_t.pjba003
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjba003
   CALL ap_ref_array2(g_ref_fields,"SELECT pjbal003 FROM pjbal_t WHERE pjbalent='"||g_enterprise||"' AND pjbal001=? AND pjbal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjba_m.pjba003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjba_m.pjba003_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjba004_desc(p_pjba004)
DEFINE p_pjba004   LIKE pjba_t.pjba004
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjba004
   CALL ap_ref_array2(g_ref_fields,"SELECT ooail003 FROM ooail_t WHERE ooailent='"||g_enterprise||"' AND ooail001=? AND ooail002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjba_m.pjba004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjba_m.pjba004_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjba008_desc(p_pjba008)
DEFINE p_pjba008    LIKE pjba_t.pjba008
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjba008
   CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='4' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjba_m.pjba008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjba_m.pjba008_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbc002_desc(p_pjbc002)
DEFINE p_pjbc002    LIKE pjbc_t.pjbc002            
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_pjbd5_d[l_ac].pjbc002
            CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_pjbd5_d[l_ac].pjbc002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_pjbd5_d[l_ac].pjbc002_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbc003_desc(p_pjbc003)
DEFINE p_pjbc003   LIKE pjbc_t.pjbc003
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbc003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_pjbd5_d[l_ac].pjbc003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbd5_d[l_ac].pjbc003_desc
END FUNCTION

PRIVATE FUNCTION apjm200_date_compare()
      IF NOT cl_null(g_pjbd5_d[l_ac].pjbc004) AND NOT cl_null(g_pjbd5_d[l_ac].pjbc005) THEN
         IF g_pjbd5_d[l_ac].pjbc005 < g_pjbd5_d[l_ac].pjbc004 THEN
            INITIALIZE g_errparam TO NULL
            LET g_errparam.code = 'ais-00047'
            LET g_errparam.extend = g_pjbd5_d[l_ac].pjbc005||" < "||g_pjbd5_d[l_ac].pjbc004
            LET g_errparam.popup = TRUE
            CALL cl_err()

            RETURN FALSE
         END IF
      END IF
      RETURN TRUE
END FUNCTION

PRIVATE FUNCTION apjm200_pjbd004_desc(p_pjbd004)
DEFINE p_pjbd004   LIKE pjbd_t.pjbd004
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbd004
   CALL ap_ref_array2(g_ref_fields,"SELECT rtaxl003 FROM rtaxl_t WHERE rtaxlent='"||g_enterprise||"' AND rtaxl001=? AND rtaxl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbd_d[l_ac].pjbd004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbd_d[l_ac].pjbd004_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbd004_pjbd005_required()
   IF cl_null(g_pjbd_d[l_ac].pjbd004) AND cl_null(g_pjbd_d[l_ac].pjbd005) THEN
      CALL cl_set_comp_required("pjbd004,pjbd005",TRUE)
   ELSE
      CALL cl_set_comp_required("pjbd004,pjbd005",FALSE)
   END IF
END FUNCTION

PRIVATE FUNCTION apjm200_pjbd005_desc(p_pjbd005)
DEFINE p_pjbd005   LIKE pjbd_t.pjbd005
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] =  p_pjbd005
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbd_d[l_ac].pjbd005_desc = '', g_rtn_fields[1] , ''
   LET g_pjbd_d[l_ac].pjbd005_desc1 = '', g_rtn_fields[2] , ''
   DISPLAY BY NAME g_pjbd_d[l_ac].pjbd005_desc,g_pjbd_d[l_ac].pjbd005_desc1
END FUNCTION

PRIVATE FUNCTION apjm200_pjbd006_desc(p_pjbd006)
DEFINE p_pjbd006   LIKE pjbd_t.pjbd006 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbd006
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbd_d[l_ac].pjbd006_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbd_d[l_ac].pjbd006_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbd009_count()
   IF NOT cl_null(g_pjbd_d[l_ac].pjbd007) AND NOT cl_null(g_pjbd_d[l_ac].pjbd008) THEN
      LET g_pjbd_d[l_ac].pjbd009 = g_pjbd_d[l_ac].pjbd007 * g_pjbd_d[l_ac].pjbd008
      CALL apjm200_pjbd009_round()
   END IF
END FUNCTION

PRIVATE FUNCTION apjm200_pjbd009_round()
DEFINE l_para   STRING 
   CALL cl_get_para(g_enterprise,g_site,'E-COM-0006') RETURNING l_para
   CALL s_num_round(l_para,g_pjbd_d[l_ac].pjbd009,6) RETURNING g_pjbd_d[l_ac].pjbd009
   DISPLAY BY NAME g_pjbd_d[l_ac].pjbd009
END FUNCTION

PRIVATE FUNCTION apjm200_pjbe003_desc(p_pjbe003)
DEFINE p_pjbe003  LIKE pjbe_t.pjbe003
 
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbe003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8002' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbd2_d[l_ac].pjbe003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbd2_d[l_ac].pjbe003_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbd_num_compare(p_num)
DEFINE p_num   LIKE type_t.num20_6
   IF NOT cl_null(p_num) THEN
      IF p_num <= 0 THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'aim-00003'
         LET g_errparam.extend = p_num
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION apjm200_pjbe008_count()
   
   IF NOT cl_null(g_pjbd2_d[l_ac].pjbe005) AND NOT cl_null(g_pjbd2_d[l_ac].pjbe007) THEN
      LET g_pjbd2_d[l_ac].pjbe008 = g_pjbd2_d[l_ac].pjbe005 * g_pjbd2_d[l_ac].pjbe007
      CALL apjm200_pjbe008_round()
   END IF
END FUNCTION

PRIVATE FUNCTION apjm200_pjbe008_round()
DEFINE l_para   STRING 
   CALL cl_get_para(g_enterprise,g_site,'E-COM-0006') RETURNING l_para
   CALL s_num_round(l_para,g_pjbd2_d[l_ac].pjbe008,6) RETURNING g_pjbd2_d[l_ac].pjbe008
   DISPLAY BY NAME g_pjbd2_d[l_ac].pjbe008
END FUNCTION

PRIVATE FUNCTION apjm200_pjbf003_desc(p_pjbf003)
DEFINE p_pjbf003    LIKE pjbf_t.pjbf003
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbf003
   CALL ap_ref_array2(g_ref_fields,"SELECT mrba004 FROM mrba_t WHERE mrbaent='"||g_enterprise||"' AND mrba001=? ","") RETURNING g_rtn_fields
   LET g_pjbd3_d[l_ac].pjbf003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbd3_d[l_ac].pjbf003_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbf004_desc(p_pjbf004)
DEFINE p_pjbf004   LIKE pjbf_t.pjbf004
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbf004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocal003 FROM oocal_t WHERE oocalent='"||g_enterprise||"' AND oocal001=? AND oocal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbd3_d[l_ac].pjbf004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbd3_d[l_ac].pjbf004_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbf007_count()
   IF NOT cl_null(g_pjbd3_d[l_ac].pjbf005) AND NOT cl_null(g_pjbd3_d[l_ac].pjbf006) THEN
      LET g_pjbd3_d[l_ac].pjbf007 = g_pjbd3_d[l_ac].pjbf005 * g_pjbd3_d[l_ac].pjbf006
      CALL apjm200_pjbf007_round()
   END IF
END FUNCTION

PRIVATE FUNCTION apjm200_pjbf007_round()
DEFINE l_para   STRING 
   CALL cl_get_para(g_enterprise,g_site,'E-COM-0006') RETURNING l_para
   CALL s_num_round(l_para,g_pjbd3_d[l_ac].pjbf007,6) RETURNING g_pjbd3_d[l_ac].pjbf007
   DISPLAY BY NAME g_pjbd3_d[l_ac].pjbf007
END FUNCTION

PRIVATE FUNCTION apjm200_pjbg003_desc(p_pjbg003)
DEFINE p_pjbg003   LIKE pjbg_t.pjbg003
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbg003
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8003' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbd4_d[l_ac].pjbg003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbd4_d[l_ac].pjbg003_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbg004_round()
DEFINE l_para   STRING 
   CALL cl_get_para(g_enterprise,g_site,'E-COM-0006') RETURNING l_para
   CALL s_num_round(l_para,g_pjbd4_d[l_ac].pjbg004,6) RETURNING g_pjbd4_d[l_ac].pjbg004
   DISPLAY BY NAME g_pjbd4_d[l_ac].pjbg004
END FUNCTION

PRIVATE FUNCTION apjm200_pjbb004_desc(p_pjbb004)
DEFINE p_pjbb004    LIKE pjbb_t.pjbb004
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbb004
   CALL ap_ref_array2(g_ref_fields,"SELECT oocql004 FROM oocql_t WHERE oocqlent='"||g_enterprise||"' AND oocql001='8001' AND oocql002=? AND oocql003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbb_m.pjbb004_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbb_m.pjbb004_desc
END FUNCTION

PRIVATE FUNCTION apjm200_workday_chk(p_date)
DEFINE p_date   LIKE type_t.dat
   IF NOT cl_null(p_date) AND g_pjba_m.pjba007 MATCHES '[12]' THEN
      IF NOT s_date_chk_workday(g_site,g_pjba_m.pjba008,'2',p_date) THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'apj-00040'
         LET g_errparam.extend = p_date
         LET g_errparam.popup = TRUE
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION apjm200_pjbb005_pjbb006_chk()
   IF NOT cl_null(g_pjbb_m.pjbb005) AND NOT cl_null(g_pjbb_m.pjbb006) THEN
      IF g_pjbb_m.pjbb005 > g_pjbb_m.pjbb006  THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = 'agl-00117'
         LET g_errparam.extend = g_pjbb_m.pjbb005||" > "||g_pjbb_m.pjbb006
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION apjm200_get_days_hours()
DEFINE l_para    LIKE type_t.num5
DEFINE l_days    LIKE type_t.num5
   IF NOT cl_null(g_pjbb_m.pjbb005) AND NOT cl_null(g_pjbb_m.pjbb006) THEN 
      LET g_pjbb_m.pjbb007 = s_date_get_workdays(g_site,g_pjba_m.pjba008,'2',g_pjbb_m.pjbb005,g_pjbb_m.pjbb006) 
      CALL cl_get_para(g_enterprise,g_site,'E-COM-0007') RETURNING l_para
      LET g_pjbb_m.pjbb008 =  g_pjbb_m.pjbb007 * l_para 
      DISPLAY BY NAME g_pjbb_m.pjbb007,g_pjbb_m.pjbb008
   END IF
END FUNCTION

PRIVATE FUNCTION apjm200_pjbb010_desc(p_pjbb010)
DEFINE p_pjbb010  LIKE pjbb_t.pjbb010
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbb010
   CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
   LET g_pjbb_m.pjbb010_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbb_m.pjbb010_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbb011_desc(p_pjbb011)
DEFINE p_pjbb011   LIKE pjbb_t.pjbb011
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = p_pjbb011
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbb_m.pjbb011_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbb_m.pjbb011_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjbb_ins()
DEFINE l_pjaa008     LIKE pjaa_t.pjaa008
DEFINE l_pjaa009     LIKE pjaa_t.pjaa009
DEFINE l_i           LIKE type_t.num5
   SELECT pjaa008,pjaa009 INTO l_pjaa008,l_pjaa009 FROM pjaa_t
    WHERE pjaaent = g_enterprise AND pjaa001 = g_pjba_m.pjba000
   CALL apjm200_get_auto_no(l_pjaa009,'Y') RETURNING g_pjbb_m.pjbb002
   LET g_pjbb_m.pjbb001 = g_pjba_m.pjba001
   LET g_pjbb_m.pjbb003 = g_pjbb_m.pjbb002
   LET g_pjbb_m.pjbb009 = "N"
   LET g_pjbb_m.pjbb012 = "0"
   INSERT INTO pjbb_t (pjbbent,pjbb002,pjbb004,pjbb003,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,pjbb001)
                  VALUES (g_enterprise,g_pjbb_m.pjbb002,g_pjbb_m.pjbb004,g_pjbb_m.pjbb003,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,
                       g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb011,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001)
   IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] = 0 THEN
      RETURN FALSE
   END IF
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION apjm200_pjbb_input(p_cmd)
   {<Local define>}
   DEFINE  p_cmd           LIKE type_t.chr1
   DEFINE  l_cmd_t         LIKE type_t.chr1
   DEFINE  l_cmd           LIKE type_t.chr1
   DEFINE  l_ac_t          LIKE type_t.num5                #未取消的ARRAY CNT
   DEFINE  l_n             LIKE type_t.num5                #檢查重複用
   DEFINE  l_cnt           LIKE type_t.num5                #檢查重複用
   DEFINE  l_lock_sw       LIKE type_t.chr1                #單身鎖住否
   DEFINE  l_allow_insert  LIKE type_t.num5                #可新增否
   DEFINE  l_allow_delete  LIKE type_t.num5                #可刪除否
   DEFINE  l_count         LIKE type_t.num5
   DEFINE  l_i             LIKE type_t.num5
   DEFINE  l_insert        BOOLEAN
   DEFINE  ls_return       STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE  l_pjaa007       LIKE pjaa_t.pjaa007
   DEFINE  l_oocq009       LIKE oocq_t.oocq009
   DEFINE  l_pjbb004       LIKE pjbb_t.pjbb004

   CALL cl_set_head_visible("","YES")

   LET l_insert = FALSE
   LET g_action_choice = ""


   LET g_forupd_sql = "SELECT pjbd003,pjbd004,'',pjbd005,'',pjbd006,'',pjbd007,pjbd008,pjbd009,pjbd010,pjbd011 FROM pjbd_t WHERE pjbdent=? AND pjbd001=? AND pjbd002=? AND pjbd003=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apjm200_bcl CURSOR FROM g_forupd_sql


   LET g_forupd_sql = "SELECT pjbe003,'',pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009 FROM pjbe_t WHERE pjbeent=? AND pjbe001=? AND pjbe002=? AND pjbe003=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apjm200_bcl2 CURSOR FROM g_forupd_sql


   LET g_forupd_sql = "SELECT pjbf003,'',pjbf004,'',pjbf005,pjbf006,pjbf007,pjbf008 FROM pjbf_t WHERE pjbfent=? AND pjbf001=? AND pjbf002=? AND pjbf003=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apjm200_bcl3 CURSOR FROM g_forupd_sql


   LET g_forupd_sql = "SELECT pjbg003,'',pjbg004,pjbg005 FROM pjbg_t WHERE pjbgent=? AND pjbg001=? AND pjbg002=? AND pjbg003=? FOR UPDATE"

   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apjm200_bcl4 CURSOR FROM g_forupd_sql

   LET g_forupd_sql = "SELECT pjbc002,'',pjbc003,'',pjbc004,pjbc005,pjbc006 FROM pjbc_t WHERE pjbcent=? AND pjbc001=? AND pjbc002=? AND pjbc003=? FOR UPDATE"
   
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE apjm200_bcl5 CURSOR FROM g_forupd_sql

   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'

   #控制key欄位可否輸入
   CALL apjm200_set_entry_pjbb(p_cmd)

   CALL apjm200_set_no_entry_pjbb(p_cmd)

   LET g_errshow = 1

   DISPLAY BY NAME g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb003,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb011,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)

      #單頭段

      INPUT BY NAME g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb003,
                    g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,
                    g_pjbb_m.pjbb010,g_pjbb_m.pjbb011,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001
            ATTRIBUTE(WITHOUT DEFAULTS)
         ON ACTION update_item

            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               IF NOT cl_null(g_pjbb_m.pjbb001) AND NOT cl_null(g_pjbb_m.pjbb002)THEN
                  CALL n_pjbbl(g_pjbb_m.pjbb001,g_pjbb_m.pjbb002)
                  INITIALIZE g_ref_fields TO NULL
                  LET g_ref_fields[1] = g_pjbb_m.pjbb001
                  LET g_ref_fields[2] = g_pjbb_m.pjbb002
                  CALL ap_ref_array2(g_ref_fields," SELECT pjbbl004,pjbbl005 FROM pjbbl_t WHERE pjbblent = '"
                      ||g_enterprise||"' AND pjbbl001 = ?  AND pjbbl002 = ? AND pjbbl003 = '"||g_dlang||"'","") RETURNING g_rtn_fields
                  LET g_pjbb_m.pjbbl004 = g_rtn_fields[1]
                  LET g_pjbb_m.pjbbl005 = g_rtn_fields[2]
                  DISPLAY BY NAME g_pjbb_m.pjbbl004
                  DISPLAY BY NAME g_pjbb_m.pjbbl005  
               END IF
            END IF

      BEFORE INPUT 
         IF s_transaction_chk("N",0) THEN
            CALL s_transaction_begin()
         END IF
         LET g_pjbb_m.pjbb001 = g_pjba_m.pjba001
         
         LET g_master_multi_table_t.pjbbl001_idx2 = g_pjbb_m.pjbb001
         LET g_master_multi_table_t.pjbbl002_idx2 = g_pjbb_m.pjbb002
         LET g_master_multi_table_t.pjbbl004_idx2 = g_pjbb_m.pjbbl004
         LET g_master_multi_table_t.pjbbl005_idx2 = g_pjbb_m.pjbbl005
         IF l_cmd_t = 'r' THEN
            LET g_master_multi_table_t.pjbbl001_idx2 = ''
           LET g_master_multi_table_t.pjbbl002_idx2 = ''
           LET g_master_multi_table_t.pjbbl004_idx2 = ''
           LET g_master_multi_table_t.pjbbl005_idx2 = ''
         END IF
      BEFORE FIELD cbo_searchcol
                  #add-point:BEFORE FIELD cbo_searchcol
                  {<point name="input.b.cbo_searchcol" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD cbo_searchcol

            #add-point:AFTER FIELD cbo_searchcol
            {<point name="input.a.cbo_searchcol" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE cbo_searchcol
            #add-point:ON CHANGE cbo_searchcol
            {<point name="input.g.cbo_searchcol" />}
            #END add-point

         #----<<searchstr>>----
         #此段落由子樣板a01產生
         BEFORE FIELD searchstr
            #add-point:BEFORE FIELD searchstr
            {<point name="input.b.searchstr" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD searchstr

            #add-point:AFTER FIELD searchstr
            {<point name="input.a.searchstr" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE searchstr
            #add-point:ON CHANGE searchstr
            {<point name="input.g.searchstr" />}
            #END add-point

         #----<<rdo_searchtype>>----
         #此段落由子樣板a01產生
         BEFORE FIELD rdo_searchtype
            #add-point:BEFORE FIELD rdo_searchtype
            {<point name="input.b.rdo_searchtype" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD rdo_searchtype

            #add-point:AFTER FIELD rdo_searchtype
            {<point name="input.a.rdo_searchtype" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE rdo_searchtype
            #add-point:ON CHANGE rdo_searchtype
            {<point name="input.g.rdo_searchtype" />}
            #END add-point

         #----<<pjbb002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb002
            #add-point:BEFORE FIELD pjbb002
            {<point name="input.b.pjbb002" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb002

            #add-point:AFTER FIELD pjbb002
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pjbb_m.pjbb001) AND NOT cl_null(g_pjbb_m.pjbb002) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t  OR g_pjbb_m.pjbb002 != g_pjbb002_t )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbb_t WHERE "||"pjbbent = '" ||g_enterprise|| "' AND "||"pjbb001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbb002 = '"||g_pjbb_m.pjbb002 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbb002
            #add-point:ON CHANGE pjbb002
            {<point name="input.g.pjbb002" />}
            #END add-point

         #----<<pjbbl004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbbl004
            #add-point:BEFORE FIELD pjbbl004
            {<point name="input.b.pjbbl004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbbl004

            #add-point:AFTER FIELD pjbbl004
            {<point name="input.a.pjbbl004" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbbl004
            #add-point:ON CHANGE pjbbl004
            {<point name="input.g.pjbbl004" />}
            #END add-point

         #----<<pjbbl005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbbl005
            #add-point:BEFORE FIELD pjbbl005
            {<point name="input.b.pjbbl005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbbl005

            #add-point:AFTER FIELD pjbbl005
            {<point name="input.a.pjbbl005" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbbl005
            #add-point:ON CHANGE pjbbl005
            {<point name="input.g.pjbbl005" />}
            #END add-point

         #----<<pjbb004>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbb004

            #add-point:AFTER FIELD pjbb004
            CALL apjm200_pjbb004_desc(g_pjbb_m.pjbb004)
            IF NOT cl_null(g_pjbb_m.pjbb004) THEN
               IF NOT s_azzi650_chk_exist('8001',g_pjbb_m.pjbb004) THEN
                  LET g_pjbb_m.pjbb004 = g_pjbb_m_t.pjbb004
                  CALL apjm200_pjbb004_desc(g_pjbb_m.pjbb004)
                  NEXT FIELD CURRENT
               END IF
            END IF
            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbb004
            #add-point:BEFORE FIELD pjbb004
            {<point name="input.b.pjbb004" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbb004
            #add-point:ON CHANGE pjbb004
            {<point name="input.g.pjbb004" />}
            #END add-point

         #----<<pjbb003>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbb003

            #add-point:AFTER FIELD pjbb003
            CALL apjm200_pjbb003_desc(g_pjbb_m.pjbb003)
            IF NOT cl_null(g_pjbb_m.pjbb003) THEN
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjba_m.pjba001
               LET g_chkparam.arg2 = g_pjbb_m.pjbb003 

               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_pjbb002") THEN
                  LET g_pjbb_m.pjbb003 = g_pjbb_m_t.pjbb003
                  CALL apjm200_pjbb003_desc(g_pjbb_m.pjbb003)
                  NEXT FIELD CURRENT
               ELSE
                  CALL apjm200_get_pjbb002()
               END IF
            END IF

            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbb003
            #add-point:BEFORE FIELD pjbb003
            {<point name="input.b.pjbb003" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbb003
            #add-point:ON CHANGE pjbb003
            {<point name="input.g.pjbb003" />}
            #END add-point

         #----<<pjbb005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb005
            #add-point:BEFORE FIELD pjbb005
            {<point name="input.b.pjbb005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb005
            IF g_pjba_m.pjba007 = '1' THEN
               LET g_pjbb_m.pjbb005 = s_date_get_latest_work_date(g_site,g_pjba_m.pjba008,'2',-1,g_pjbb_m.pjbb005)
            END IF
            IF g_pjba_m.pjba007 = '2' THEN
               LET g_pjbb_m.pjbb005 = s_date_get_latest_work_date(g_site,g_pjba_m.pjba008,'2',0,g_pjbb_m.pjbb005)
            END IF
            IF NOT apjm200_workday_chk(g_pjbb_m.pjbb005) THEN
               LET g_pjbb_m.pjbb005 = g_pjbb_m_t.pjbb005
               NEXT FIELD CURRENT
            END IF
            
            IF NOT apjm200_pjbb005_pjbb006_chk()  THEN
               LET g_pjbb_m.pjbb005 = g_pjbb_m_t.pjbb005
               NEXT FIELD CURRENT
            END IF
            CALL apjm200_get_days_hours()

         #此段落由子樣板a04產生
         ON CHANGE pjbb005
            #add-point:ON CHANGE pjbb005
            {<point name="input.g.pjbb005" />}
            #END add-point

         #----<<pjbb006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb006
            #add-point:BEFORE FIELD pjbb006
            {<point name="input.b.pjbb006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb006
            IF g_pjba_m.pjba007 = '1' THEN
               LET g_pjbb_m.pjbb006 = s_date_get_latest_work_date(g_site,g_pjba_m.pjba008,'2',-1,g_pjbb_m.pjbb006)
            END IF
            IF g_pjba_m.pjba007 = '2' THEN
               LET g_pjbb_m.pjbb006 = s_date_get_latest_work_date(g_site,g_pjba_m.pjba008,'2',0,g_pjbb_m.pjbb006)
            END IF
            IF NOT apjm200_workday_chk(g_pjbb_m.pjbb006) THEN
               LET g_pjbb_m.pjbb006 = g_pjbb_m_t.pjbb006
               NEXT FIELD CURRENT
            END IF
            IF NOT apjm200_pjbb005_pjbb006_chk() THEN
               LET g_pjbb_m.pjbb006 = g_pjbb_m_t.pjbb006
               NEXT FIELD CURRENT
            END IF
            CALL apjm200_get_days_hours()

         #此段落由子樣板a04產生
         ON CHANGE pjbb006
            #add-point:ON CHANGE pjbb006
            {<point name="input.g.pjbb006" />}
            #END add-point

         #----<<pjbb007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb007
            #add-point:BEFORE FIELD pjbb007
            {<point name="input.b.pjbb007" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb007

            #add-point:AFTER FIELD pjbb007
            {<point name="input.a.pjbb007" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbb007
            #add-point:ON CHANGE pjbb007
            {<point name="input.g.pjbb007" />}
            #END add-point

         #----<<pjbb008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb008
            #add-point:BEFORE FIELD pjbb008
            {<point name="input.b.pjbb008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb008

            #add-point:AFTER FIELD pjbb008
            {<point name="input.a.pjbb008" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbb008
            #add-point:ON CHANGE pjbb008
            {<point name="input.g.pjbb008" />}
            #END add-point

         #----<<pjbb009>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbb009

            #add-point:AFTER FIELD pjbb009

            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbb009
            #add-point:BEFORE FIELD pjbb009
            {<point name="input.b.pjbb009" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbb009
            #add-point:ON CHANGE pjbb009
            {<point name="input.g.pjbb009" />}
            #END add-point

         #----<<pjbb010>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbb010

            #add-point:AFTER FIELD pjbb010
            CALL apjm200_pjbb010_desc(g_pjbb_m.pjbb010)
            IF NOT cl_null(g_pjbb_m.pjbb010) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbb_m.pjbb010

               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
               #160318-00025#23  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  SELECT ooag003 INTO g_pjbb_m.pjbb011 FROM ooag_t
                   WHERE ooag001 = g_pjbb_m.pjbb010 AND ooagent = g_enterprise
                  DISPLAY BY NAME g_pjbb_m.pjbb011
                  CALL apjm200_pjbb011_desc(g_pjbb_m.pjbb011)
               ELSE
                  #檢查失敗時後續處理
                  LET g_pjbb_m.pjbb010 = g_pjbb_m_t.pjbb010
                  CALL apjm200_pjbb010_desc(g_pjbb_m.pjbb010)
                  NEXT FIELD CURRENT
               END IF


            END IF
            
            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbb010
            #add-point:BEFORE FIELD pjbb010
            {<point name="input.b.pjbb010" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbb010
            #add-point:ON CHANGE pjbb010
            {<point name="input.g.pjbb010" />}
            #END add-point

         #----<<pjbb011>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbb011

            #add-point:AFTER FIELD pjbb011
            CALL apjm200_pjbb011_desc(g_pjbb_m.pjbb011)
            IF NOT cl_null(g_pjbb_m.pjbb011) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbb_m.pjbb011
               LET g_chkparam.arg2 = g_pjba_m.pjba005

               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aoo-00029:sub-01302|aooi125|",cl_get_progname("aooi125",g_lang,"2"),"|:EXEPROGaooi125"
               #160318-00025#23  by 07900 --add-end 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooeg001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_pjbb_m.pjbb011 = g_pjbb_m_t.pjbb011
                  CALL apjm200_pjbb011_desc(g_pjbb_m.pjbb011)
                  NEXT FIELD CURRENT
               END IF


            END IF
            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbb011
           CALL apjm200_pjbb011_desc(g_pjbb_m.pjbb011)

         #此段落由子樣板a04產生
         ON CHANGE pjbb011
            #add-point:ON CHANGE pjbb011
            {<point name="input.g.pjbb011" />}
            #END add-point

         #----<<pjbb012>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb012
            #add-point:BEFORE FIELD pjbb012
            {<point name="input.b.pjbb012" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb012

            #add-point:AFTER FIELD pjbb012
            {<point name="input.a.pjbb012" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbb012
            #add-point:ON CHANGE pjbb012
            {<point name="input.g.pjbb012" />}
            #END add-point

         #----<<pjbb001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbb001
            #add-point:BEFORE FIELD pjbb001
            {<point name="input.b.pjbb001" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbb001

            #add-point:AFTER FIELD pjbb001
            #此段落由子樣板a05產生
            IF  NOT cl_null(g_pjbb_m.pjbb001) AND NOT cl_null(g_pjbb_m.pjbb002) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t  OR g_pjbb_m.pjbb002 != g_pjbb002_t )) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbb_t WHERE "||"pjbbent = '" ||g_enterprise|| "' AND "||"pjbb001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbb002 = '"||g_pjbb_m.pjbb002 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbb001
            #add-point:ON CHANGE pjbb001
            {<point name="input.g.pjbb001" />}
            #END add-point
         ON ACTION controlp INFIELD pjbb003
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbb_m.pjbb003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_pjba_m.pjba001
            LET g_qryparam.where = "pjbb004 IN (SELECT oocq002 FROM oocq_t  WHERE oocq001=8001 ",
                                   "               AND oocq009<(SELECT oocq009 FROM oocq_t ",
                                   "                             WHERE oocq001=8001 AND oocq002='",g_pjbb_m.pjbb004,"'))"
            CALL q_pjbb002_1()                                #呼叫開窗

            LET g_pjbb_m.pjbb003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbb_m.pjbb003 TO pjbb003              #顯示到畫面上
            CALL apjm200_pjbb003_desc(g_pjbb_m.pjbb003)
            NEXT FIELD pjbb003                
            
         ON ACTION controlp INFIELD pjbb004
            #add-point:ON ACTION controlp INFIELD pjbb004
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbb_m.pjbb004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "8001" #
            IF NOT cl_null(g_pjbb_m.pjbb003) THEN
               LET l_n = 0
               SELECT COUNT(*) INTO l_n FROM pjbb_t
                WHERE pjbbent = g_enterprise
                  AND pjbb001 = g_pjba_m.pjba001
                  AND pjbb002 = g_pjbb_m.pjbb003
               IF l_n > 0 THEN
                  SELECT pjbb004 INTO l_pjbb004 FROM pjbb_t 
                   WHERE pjbbent = g_enterprise
                     AND pjbb001 = g_pjba_m.pjba001
                     AND pjbb002 = g_pjbb_m.pjbb003
                  SELECT oocq009 INTO l_oocq009 FROM oocq_t
                   WHERE oocqent = g_enterprise AND oocq001 = 8001
                     AND oocq002 = l_pjbb004
                  IF NOT cl_null(l_oocq009) THEN
                     LET g_qryparam.where = " oocq009 > ",l_oocq009
                  END IF
               END IF
            END IF
            CALL q_oocq002_1()                                #呼叫開窗

            LET g_pjbb_m.pjbb004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbb_m.pjbb004 TO pjbb004              #顯示到畫面上
            CALL apjm200_pjbb004_desc(g_pjbb_m.pjbb004)
            NEXT FIELD pjbb004                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbb009>>----
         #Ctrlp:input.c.pjbb009
         ON ACTION controlp INFIELD pjbb010
            #add-point:ON ACTION controlp INFIELD pjbb010
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbb_m.pjbb010             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_pjbb_m.pjbb010 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbb_m.pjbb010 TO pjbb010              #顯示到畫面上
            CALL apjm200_pjbb010_desc(g_pjbb_m.pjbb010)
            NEXT FIELD pjbb010                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbb010>>----
         #Ctrlp:input.c.pjbb010
         ON ACTION controlp INFIELD pjbb011
            #add-point:ON ACTION controlp INFIELD pjbb011
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbb_m.pjbb011             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_pjba_m.pjba005 #

            CALL q_ooeg001()                                #呼叫開窗

            LET g_pjbb_m.pjbb011 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbb_m.pjbb011 TO pjbb011              #顯示到畫面上
            CALL apjm200_pjbb011_desc(g_pjbb_m.pjbb011)
            NEXT FIELD pjbb011                          #返回原欄位

          {#ADP版次:1#}
            #END add-point
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF

            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_pjbb_m.pjbb001
                            ,g_pjbb_m.pjbb002



            IF p_cmd <> 'u' THEN
               LET l_count = 1

               SELECT COUNT(*) INTO l_count FROM pjbb_t
                WHERE pjbbent = g_enterprise AND pjbb001 = g_pjbb_m.pjbb001
                  AND pjbb002 = g_pjbb_m.pjbb002


               IF l_count = 0 THEN

                  #add-point:單頭新增前
                  {<point name="input.head.b_insert" mark="Y"/>}
                  #end add-point

                  INSERT INTO pjbb_t (pjbbent,pjbb002,pjbb004,pjbb003,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,pjbb001)
                  VALUES (g_enterprise,g_pjbb_m.pjbb002,g_pjbb_m.pjbb004,g_pjbb_m.pjbb003,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb011,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001) # DISK WRITE

                  #add-point:單頭新增中
                  {<point name="input.head.m_insert"/>}
                  #end add-point

                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "g_pjbb_m"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CONTINUE DIALOG
                  END IF
                              #  CALL apjm200_pjba_t('u')
                           INITIALIZE l_var_keys TO NULL
         INITIALIZE l_field_keys TO NULL
         INITIALIZE l_vars TO NULL
         INITIALIZE l_fields TO NULL
         
          INITIALIZE l_var_keys TO NULL
         INITIALIZE l_field_keys TO NULL
         INITIALIZE l_vars TO NULL
         INITIALIZE l_fields TO NULL
         IF g_pjbb_m.pjbb001 = g_master_multi_table_t.pjbbl001_idx2 AND
         g_pjbb_m.pjbb002 = g_master_multi_table_t.pjbbl002_idx2 AND
         g_pjbb_m.pjbbl004 = g_master_multi_table_t.pjbbl004_idx2 AND
         g_pjbb_m.pjbbl005 = g_master_multi_table_t.pjbbl005_idx2  THEN
         ELSE
            LET l_var_keys[01] = g_pjbb_m.pjbb001
            LET l_field_keys[01] = 'pjbbl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.pjbbl001_idx2
            LET l_var_keys[02] = g_pjbb_m.pjbb002
            LET l_field_keys[02] = 'pjbbl002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.pjbbl002_idx2
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pjbbl003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_pjbb_m.pjbbl004
            LET l_fields[01] = 'pjbbl004'
            LET l_vars[02] = g_pjbb_m.pjbbl005
            LET l_fields[02] = 'pjbbl005'
            LET l_vars[03] = g_enterprise
            LET l_fields[03] = 'pjbblent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pjbbl_t')
         END IF


                  #add-point:單頭新增後
                  {<point name="input.head.a_insert"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')

#                  IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
#                     CALL apjm200_detail_reproduce()
#                  END IF

                  LET p_cmd = 'u'
               ELSE
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = '!'
                  LET g_errparam.extend =  g_pjbb_m.pjbb001
                  LET g_errparam.popup = FALSE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  NEXT FIELD pjbb001
               END IF
            ELSE

               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point

               UPDATE pjbb_t SET (pjbb002,pjbb004,pjbb003,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012,pjbb001) = (g_pjbb_m.pjbb002,g_pjbb_m.pjbb004,g_pjbb_m.pjbb003,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb011,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001)
                WHERE pjbbent = g_enterprise AND pjbb001 = g_pjbb_m.pjbb001
                  AND pjbb002 = g_pjbb_m.pjbb002



               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "pjbb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = "pjbb_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     CALL s_transaction_end('N','0')
                  OTHERWISE
                               #    CALL apjm200_pjba_t('u')
                              INITIALIZE l_var_keys TO NULL
         INITIALIZE l_field_keys TO NULL
         INITIALIZE l_vars TO NULL
         INITIALIZE l_fields TO NULL
      
          INITIALIZE l_var_keys TO NULL
         INITIALIZE l_field_keys TO NULL
         INITIALIZE l_vars TO NULL
         INITIALIZE l_fields TO NULL
         IF g_pjbb_m.pjbb001 = g_master_multi_table_t.pjbbl001_idx2 AND
         g_pjbb_m.pjbb002 = g_master_multi_table_t.pjbbl002_idx2 AND
         g_pjbb_m.pjbbl004 = g_master_multi_table_t.pjbbl004_idx2 AND
         g_pjbb_m.pjbbl005 = g_master_multi_table_t.pjbbl005_idx2  THEN
         ELSE
            LET l_var_keys[01] = g_pjbb_m.pjbb001
            LET l_field_keys[01] = 'pjbbl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.pjbbl001_idx2
            LET l_var_keys[02] = g_pjbb_m.pjbb002
            LET l_field_keys[02] = 'pjbbl002'
            LET l_var_keys_bak[02] = g_master_multi_table_t.pjbbl002_idx2
            LET l_var_keys[03] = g_dlang
            LET l_field_keys[03] = 'pjbbl003'
            LET l_var_keys_bak[03] = g_dlang
            LET l_vars[01] = g_pjbb_m.pjbbl004
            LET l_fields[01] = 'pjbbl004'
            LET l_vars[02] = g_pjbb_m.pjbbl005
            LET l_fields[02] = 'pjbbl005'
            LET l_vars[03] = g_enterprise
            LET l_fields[03] = 'pjbblent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pjbbl_t')
         END IF

                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE

            END IF
            LET g_pjbb001_t = g_pjbb_m.pjbb001
            LET g_pjbb002_t = g_pjbb_m.pjbb002

      END INPUT
      
      INPUT ARRAY g_pjbd5_d FROM s_detail5.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         #自訂ACTION


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_pjbd5_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL apjm200_b_fill()
            LET g_rec_b = g_pjbd5_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input5"/>}
            #end add-point

         BEFORE INSERT

            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pjbd5_d[l_ac].* TO NULL

            
            CALL cl_show_fld_cont()
            CALL apjm200_set_entry_b(l_cmd)
            CALL apjm200_set_no_entry_b(l_cmd)
            #公用欄位給值(單身{page})

            LET g_pjbd5_d[l_ac].pjbc004 = g_today
            LET g_pjbd5_d_t.* = g_pjbd5_d[l_ac].*     #新輸入資料
            
         BEFORE ROW
            LET l_insert = FALSE
            LET p_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN apjm200_cl USING g_enterprise,g_pjba_m.pjba001
                                                                
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN apjm200_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE apjm200_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            #FETCH apjm200_cl INTO g_pjbb_m.pjba000,g_pjbb_m.pjba000_desc,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjbal003,g_pjbb_m.pjbal004,g_pjbb_m.pjba003,g_pjbb_m.pjba003_desc,g_pjbb_m.pjba004,g_pjbb_m.pjba004_desc,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjba008_desc,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaownid_desc,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbaowndp_desc,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtid_desc,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdp_desc,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamodid_desc,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfid_desc,g_pjbb_m.pjbacnfdt,g_pjbb_m.cbo_searchcol,g_pjbb_m.searchstr,g_pjbb_m.rdo_searchtype,g_pjbb_m.b_count,g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001 # 鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   CALL cl_err(g_pjbb_m.pjbb001,SQLCA.sqlcode,0)
            #   CLOSE apjm200_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_pjbd5_d.getLength()

            IF g_rec_b >= l_ac
               AND g_pjbd5_d[l_ac].pjbc002 IS NOT NULL

               AND g_pjbd5_d[l_ac].pjbc003 IS NOT NULL

            THEN
               LET l_cmd='u'
               LET g_pjbd5_d_t.* = g_pjbd5_d[l_ac].*  #BACKUP
               CALL apjm200_set_entry_b(l_cmd)
               CALL apjm200_set_no_entry_b(l_cmd)
               IF NOT apjm200_lock_b("pjbc_t","5") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apjm200_bcl5 INTO g_pjbd5_d[l_ac].pjbc002,g_pjbd5_d[l_ac].pjbc002_desc,g_pjbd5_d[l_ac].pjbc003,g_pjbd5_d[l_ac].pjbc003_desc,g_pjbd5_d[l_ac].pjbc004,g_pjbd5_d[l_ac].pjbc005,g_pjbd5_d[l_ac].pjbc006
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF

                  LET g_bfill = "N"
                  CALL apjm200_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body5.before_row"/>}
            #end add-point
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_pjbd5_d.deleteElement(l_ac)
               NEXT FIELD pjbc001
            END IF
            IF  g_pjbd5_d_t.pjbc002 IS NOT NULL

               AND g_pjbd5_d_t.pjbc003 IS NOT NULL

            THEN

               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               #add-point:單身5刪除前
               {<point name="input.body5.b_delete" mark="Y"/>}
               #end add-point

               DELETE FROM pjbc_t
                WHERE pjbcent = g_enterprise
                  AND pjbc001 = g_pjba_m.pjba001 
                  
                  AND pjbc002 = g_pjbd5_d_t.pjbc002

                  AND pjbc003 = g_pjbd5_d_t.pjbc003


               #add-point:單身5刪除中
               {<point name="input.body5.m_delete"/>}
               #end add-point

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "pjbc_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1

                  #add-point:單身5刪除後
                  {<point name="input.body5.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE apjm200_bcl5
               LET l_count = g_pjbd5_d.getLength()
            END IF
                           INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjba_m.pjba001
               LET gs_keys[2] = g_pjbd5_d[g_detail_idx].pjbc002
               LET gs_keys[3] = g_pjbd5_d[g_detail_idx].pjbc003


         AFTER DELETE
            #add-point:單身AFTER DELETE
            {<point name="input.body5.after_delete"/>}
            #end add-point
                           CALL apjm200_delete_b('pjbc_t',gs_keys,"'5'")
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM pjbc_t
             WHERE pjbcent = g_enterprise
               AND pjbc001 = g_pjba_m.pjba001     
               AND g_pjbd5_d[l_ac].pjbc002 = pjbc002

               AND g_pjbd5_d[l_ac].pjbc003 = pjbc003


            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               #add-point:單身5新增前
               {<point name="input.body5.b_insert"/>}
               #end add-point

                              INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjba_m.pjba001
               LET gs_keys[2] = g_pjbd5_d[g_detail_idx].pjbc002
               LET gs_keys[3] = g_pjbd5_d[g_detail_idx].pjbc003
               CALL apjm200_insert_b('pjbc_t',gs_keys,"'5'")

               #add-point:單身新增後5
               {<point name="input.body5.a_insert"/>}
               #end add-point
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_pjbd5_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "pjbc_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apjm200_b_fill()
               #資料多語言用-增/改

               #add-point:單身新增後
               {<point name="input.body5.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_pjbd5_d[l_ac].* = g_pjbd5_d_t.*
               CLOSE apjm200_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_pjbd5_d[l_ac].* = g_pjbd5_d_t.*
            ELSE
               #add-point:單身page5修改前
               {<point name="input.body5.b_update" mark="Y"/>}
               #end add-point

               #寫入修改者/修改日期資訊(單身5)


               UPDATE pjbc_t SET (pjbc002,pjbc003,pjbc004,pjbc005,pjbc006) = (g_pjbd5_d[l_ac].pjbc002,g_pjbd5_d[l_ac].pjbc003,g_pjbd5_d[l_ac].pjbc004,g_pjbd5_d[l_ac].pjbc005,g_pjbd5_d[l_ac].pjbc006) #自訂欄位頁簽
                WHERE pjbcent = g_enterprise
                AND   pjbc001 = g_pjba_m.pjba001
                  AND pjbc002 = g_pjbd5_d_t.pjbc002

                  AND pjbc003 = g_pjbd5_d_t.pjbc003

               #add-point:單身page5修改中
               {<point name="input.body5.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "pjbc_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pjbd5_d[l_ac].* = g_pjbd5_d_t.*
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = SQLCA.sqlcode
                  LET g_errparam.extend = "pjbc_t"
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                     LET g_pjbd5_d[l_ac].* = g_pjbd5_d_t.*
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjba_m.pjba001
               LET gs_keys_bak[1] = g_pjba001_t
               LET gs_keys[2] = g_pjbd5_d[g_detail_idx].pjbc002
               LET gs_keys_bak[2] = g_pjbd5_d_t.pjbc002
               LET gs_keys[3] = g_pjbd5_d[g_detail_idx].pjbc003
               LET gs_keys_bak[3] = g_pjbd5_d_t.pjbc003
               CALL apjm200_update_b('pjbc_t',gs_keys,gs_keys_bak,"'5'")
                     #資料多語言用-增/改

               END CASE

               #add-point:單身page5修改後
               {<point name="input.body5.a_update"/>}
               #end add-point

            END IF

         #---------------------<  Detail: page5  >---------------------
         #----<<pjbc002>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbc002

            #add-point:AFTER FIELD pjbc002

            

            #此段落由子樣板a05產生
            CALL apjm200_pjbc002_desc(g_pjbd5_d[l_ac].pjbc002)
            IF  g_pjba_m.pjba001 IS NOT NULL AND  g_pjbd5_d[g_detail_idx].pjbc002 IS NOT NULL AND g_pjbd5_d[g_detail_idx].pjbc003 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjba_m.pjba001 != g_pjba001_t  OR g_pjbd5_d[g_detail_idx].pjbc002 != g_pjbd5_d_t.pjbc002 OR g_pjbd5_d[g_detail_idx].pjbc003 != g_pjbd5_d_t.pjbc003)) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbc_t WHERE "||"pjbcent = '" ||g_enterprise|| "' AND "||"pjbc001 = '"||g_pjba_m.pjba001 ||"' AND "|| "pjbc002 = '"||g_pjbd5_d[g_detail_idx].pjbc002 ||"' AND "|| "pjbc003 = '"||g_pjbd5_d[g_detail_idx].pjbc003 ||"'",'std-00004',0) THEN
                     LET g_pjbd5_d[l_ac].pjbc002 = g_pjbd5_d_t.pjbc002
                     CALL apjm200_pjbc002_desc(g_pjbd5_d[l_ac].pjbc002)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_pjbd5_d[l_ac].pjbc002) THEN
               IF NOT s_azzi650_chk_exist('8002',g_pjbd5_d[l_ac].pjbc002) THEN
                  LET g_pjbd5_d[l_ac].pjbc002 = g_pjbd5_d_t.pjbc002
                  CALL apjm200_pjbc002_desc(g_pjbd5_d[l_ac].pjbc002)
                  NEXT FIELD CURRENT
               END IF
            END IF

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbc002
            #add-point:BEFORE FIELD pjbc002
            {<point name="input.b.page5.pjbc002" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbc002
            #add-point:ON CHANGE pjbc002
            {<point name="input.g.page5.pjbc002" />}
            #END add-point

         #----<<pjbc003>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbc003

            #add-point:AFTER FIELD pjbc003
            CALL apjm200_pjbc003_desc(g_pjbd5_d[l_ac].pjbc003)
            IF NOT cl_null(g_pjbd5_d[l_ac].pjbc003) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbd5_d[l_ac].pjbc003

               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aim-00070:sub-01302|aooi130|",cl_get_progname("aooi130",g_lang,"2"),"|:EXEPROGaooi130"
               #160318-00025#23  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooag001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_pjbd5_d[l_ac].pjbc003 = g_pjbd5_d_t.pjbc003
                  CALL apjm200_pjbc003_desc(g_pjbd5_d[l_ac].pjbc003)
                  NEXT FIELD CURRENT
               END IF


            END IF
            

            #此段落由子樣板a05產生
            IF  g_pjba_m.pjba001 IS NOT NULL  AND g_pjbd5_d[g_detail_idx].pjbc002 IS NOT NULL AND g_pjbd5_d[g_detail_idx].pjbc003 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjba_m.pjba001 != g_pjbb001_t  OR g_pjbd5_d[g_detail_idx].pjbc002 != g_pjbd5_d_t.pjbc002 OR g_pjbd5_d[g_detail_idx].pjbc003 != g_pjbd5_d_t.pjbc003)) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbc_t WHERE "||"pjbcent = '" ||g_enterprise|| "' AND "||"pjbc001 = '"||g_pjba_m.pjba001 ||"' AND "|| "pjbc002 = '"||g_pjbd5_d[g_detail_idx].pjbc002 ||"' AND "|| "pjbc003 = '"||g_pjbd5_d[g_detail_idx].pjbc003 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbc003
            #add-point:BEFORE FIELD pjbc003
            {<point name="input.b.page5.pjbc003" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbc003
            #add-point:ON CHANGE pjbc003
            {<point name="input.g.page5.pjbc003" />}
            #END add-point

         #----<<pjbc004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbc004
            #add-point:BEFORE FIELD pjbc004
            {<point name="input.b.page5.pjbc004" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc004

            IF NOT apjm200_date_compare() THEN
               LET g_pjbd5_d[l_ac].pjbc004 = g_pjbd5_d_t.pjbc004
               NEXT FIELD CURRENT
            END IF


         #此段落由子樣板a04產生
         ON CHANGE pjbc004
            #add-point:ON CHANGE pjbc004
            {<point name="input.g.page5.pjbc004" />}
            #END add-point

         #----<<pjbc005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbc005
            #add-point:BEFORE FIELD pjbc005
            {<point name="input.b.page5.pjbc005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc005

            IF NOT apjm200_date_compare() THEN
               LET g_pjbd5_d[l_ac].pjbc005 = g_pjbd5_d_t.pjbc005
               NEXT FIELD CURRENT
            END IF


         #此段落由子樣板a04產生
         ON CHANGE pjbc005
            #add-point:ON CHANGE pjbc005
            {<point name="input.g.page5.pjbc005" />}
            #END add-point

         #----<<pjbc006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbc006
            #add-point:BEFORE FIELD pjbc006
            {<point name="input.b.page5.pjbc006" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbc006

            #add-point:AFTER FIELD pjbc006
            {<point name="input.a.page5.pjbc006" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbc006
            #add-point:ON CHANGE pjbc006
            {<point name="input.g.page5.pjbc006" />}
            #END add-point


         #---------------------<  Detail: page5  >---------------------
         #----<<pjbc002>>----
         #Ctrlp:input.c.page5.pjbc002
         ON ACTION controlp INFIELD pjbc002
            #add-point:ON ACTION controlp INFIELD pjbc002
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd5_d[l_ac].pjbc002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "8002" #

            CALL q_oocq002_1()                                #呼叫開窗

            LET g_pjbd5_d[l_ac].pjbc002 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd5_d[l_ac].pjbc002 TO pjbc002              #顯示到畫面上
            CALL apjm200_pjbc002_desc(g_pjbd5_d[l_ac].pjbc002)
            NEXT FIELD pjbc002                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbc003>>----
         #Ctrlp:input.c.page5.pjbc003
         ON ACTION controlp INFIELD pjbc003
            #add-point:ON ACTION controlp INFIELD pjbc003
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd5_d[l_ac].pjbc003             #給予default值

            #給予arg

            CALL q_ooag001()                                #呼叫開窗

            LET g_pjbd5_d[l_ac].pjbc003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd5_d[l_ac].pjbc003 TO pjbc003              #顯示到畫面上
            CALL apjm200_pjbc003_desc(g_pjbd5_d[l_ac].pjbc003)
            NEXT FIELD pjbc003                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbc004>>----
         #Ctrlp:input.c.page5.pjbc004
#         ON ACTION controlp INFIELD pjbc004
            #add-point:ON ACTION controlp INFIELD pjbc004
            {<point name="input.c.page5.pjbc004" />}
            #END add-point

         #----<<pjbc005>>----
         #Ctrlp:input.c.page5.pjbc005
#         ON ACTION controlp INFIELD pjbc005
            #add-point:ON ACTION controlp INFIELD pjbc005
            {<point name="input.c.page5.pjbc005" />}
            #END add-point

         #----<<pjbc006>>----
         #Ctrlp:input.c.page5.pjbc006
#         ON ACTION controlp INFIELD pjbc006
            #add-point:ON ACTION controlp INFIELD pjbc006
            {<point name="input.c.page5.pjbc006" />}
            #END add-point



         AFTER ROW
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pjbd5_d[l_ac].* = g_pjbd5_d_t.*
               END IF
               CLOSE apjm200_bcl5
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #其他table進行unlock

            CALL apjm200_unlock_b("pjbc_t","5")
            CALL s_transaction_end('Y','0')

         AFTER INPUT
            #add-point:input段after input
            {<point name="input.body5.after_input"/>}
            #end add-point

         #add-point:page5自定義行為
         {<point name="input.page5.action"/>}
         #end add-point

      END INPUT
      
      #Page1 預設值產生於此處
      INPUT ARRAY g_pjbd_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)

         #自訂ACTION


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_pjbd_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL apjm200_b_fill()
            LET g_rec_b = g_pjbd_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point

         BEFORE ROW
            LET l_insert = FALSE
            LET l_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN apjm200_cl USING g_enterprise,g_pjba_m.pjba001
                                                              


            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN apjm200_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE apjm200_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            #FETCH apjm200_cl INTO g_pjbb_m.pjba000,g_pjbb_m.pjba000_desc,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjbal003,g_pjbb_m.pjbal004,g_pjbb_m.pjba003,g_pjbb_m.pjba003_desc,g_pjbb_m.pjba004,g_pjbb_m.pjba004_desc,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjba008_desc,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaownid_desc,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbaowndp_desc,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtid_desc,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdp_desc,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamodid_desc,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfid_desc,g_pjbb_m.pjbacnfdt,g_pjbb_m.cbo_searchcol,g_pjbb_m.searchstr,g_pjbb_m.rdo_searchtype,g_pjbb_m.b_count,g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001 # 鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   CALL cl_err(g_pjbb_m.pjbb001,SQLCA.sqlcode,0)
            #   CLOSE apjm200_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_pjbd_d.getLength()

            IF g_rec_b >= l_ac
               AND g_pjbd_d[l_ac].pjbd003 IS NOT NULL

            THEN
               LET l_cmd='u'
               LET g_pjbd_d_t.* = g_pjbd_d[l_ac].*  #BACKUP
               CALL apjm200_set_entry_b(l_cmd)
               CALL apjm200_set_no_entry_b(l_cmd)
               IF NOT apjm200_lock_b("pjbd_t","1") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apjm200_bcl INTO g_pjbd_d[l_ac].pjbd003,g_pjbd_d[l_ac].pjbd004,g_pjbd_d[l_ac].pjbd004_desc,g_pjbd_d[l_ac].pjbd005,g_pjbd_d[l_ac].pjbd005_desc,g_pjbd_d[l_ac].pjbd006,g_pjbd_d[l_ac].pjbd006_desc,g_pjbd_d[l_ac].pjbd007,g_pjbd_d[l_ac].pjbd008,g_pjbd_d[l_ac].pjbd009,g_pjbd_d[l_ac].pjbd010,g_pjbd_d[l_ac].pjbd011
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = g_pjbd_d_t.pjbd003
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF

                  LET g_bfill = "N"
                  CALL apjm200_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF

            CALL apjm200_pjbd004_pjbd005_required()

            #其他table資料備份(確定是否更改用)


            #其他table進行lock


         BEFORE INSERT

            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pjbd_d[l_ac].* TO NULL

            
            CALL cl_show_fld_cont()
            CALL apjm200_set_entry_b(l_cmd)
            CALL apjm200_set_no_entry_b(l_cmd)
            #公用欄位給值(單身)
            SELECT MAX(pjbd003) + 1 INTO g_pjbd_d[l_ac].pjbd003 FROM pjbd_t
             WHERE pjbdent = g_enterprise AND pjbd001 = g_pjbb_m.pjbb001 
               AND pjbd002 = g_pjbb_m.pjbb002
            IF cl_null(g_pjbd_d[l_ac].pjbd003) THEN LET g_pjbd_d[l_ac].pjbd003 = 1 END IF
            LET g_pjbd_d_t.* = g_pjbd_d[l_ac].*     #新輸入資料

         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM pjbd_t
             WHERE pjbdent = g_enterprise AND pjbd001 = g_pjbb_m.pjbb001
               AND pjbd002 = g_pjbb_m.pjbb002


               AND g_pjbd_d[l_ac].pjbd003 = pjbd003


            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point

                              INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd_d[g_detail_idx].pjbd003
               CALL apjm200_insert_b('pjbd_t',gs_keys,"'1'")

               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_pjbd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF

            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apjm200_b_fill()
               #資料多語言用-增/改

               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_pjbd_d.deleteElement(l_ac)
               NEXT FIELD pjbd003
            END IF
            IF g_pjbd_d[l_ac].pjbd003 IS NOT NULL

               THEN

               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point

               DELETE FROM pjbd_t
                WHERE pjbdent = g_enterprise AND pjbd001 = g_pjbb_m.pjbb001 AND
                                          pjbd002 = g_pjbb_m.pjbb002 AND


                      pjbd003 = g_pjbd_d_t.pjbd003


               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1

                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE apjm200_bcl
               LET l_count = g_pjbd_d.getLength()
            END IF

                           INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd_d[g_detail_idx].pjbd003


         AFTER DELETE
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL apjm200_delete_b('pjbd_t',gs_keys,"'1'")

         #---------------------<  Detail: page1  >---------------------
         #----<<pjbd003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd003
            #add-point:BEFORE FIELD pjbd003
            {<point name="input.b.page1.pjbd003" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd003

            #add-point:AFTER FIELD pjbd003
            #此段落由子樣板a05產生
            IF  g_pjbb_m.pjbb001 IS NOT NULL AND g_pjbb_m.pjbb002 IS NOT NULL AND g_pjbd_d[g_detail_idx].pjbd003 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t OR g_pjbb_m.pjbb002 != g_pjbb002_t OR g_pjbd_d[g_detail_idx].pjbd003 != g_pjbd_d_t.pjbd003)) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbd_t WHERE "||"pjbdent = '" ||g_enterprise|| "' AND "||"pjbd001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbd002 = '"||g_pjbb_m.pjbb002 ||"' AND "|| "pjbd003 = '"||g_pjbd_d[g_detail_idx].pjbd003 ||"'",'std-00004',0) THEN
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbd003
            #add-point:ON CHANGE pjbd003
            {<point name="input.g.page1.pjbd003" />}
            #END add-point

         #----<<pjbd004>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbd004

            #add-point:AFTER FIELD pjbd004
            CALL apjm200_pjbd004_desc(g_pjbd_d[l_ac].pjbd004)
            IF NOT cl_null(g_pjbd_d[l_ac].pjbd004) THEN
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbd_d[l_ac].pjbd004
               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="anm-00081:sub-01302|aimi010|",cl_get_progname("aimi010",g_lang,"2"),"|:EXEPROGaimi010"
               #160318-00025#23  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF NOT cl_chk_exist("v_rtax001") THEN
                  LET g_pjbd_d[l_ac].pjbd004 = g_pjbd_d_t.pjbd004
                  CALL apjm200_pjbd004_desc(g_pjbd_d[l_ac].pjbd004)
                  NEXT FIELD CURRENT
               ELSE
                  INITIALIZE g_pjbd_d[l_ac].pjbd005 TO NULL
                  DISPLAY BY NAME g_pjbd_d[l_ac].pjbd005
                  CALL apjm200_pjbd005_desc('')
                  INITIALIZE g_pjbd_d[l_ac].pjbd006 TO NULL
                  DISPLAY BY NAME g_pjbd_d[l_ac].pjbd006
                  CALL apjm200_pjbd006_desc('')
               END IF
               
#               IF  g_pjbb_m.pjbb001 IS NOT NULL AND g_pjbb_m.pjbb002 IS NOT NULL AND g_pjbd_d[g_detail_idx].pjbd003 IS NOT NULL AND g_pjbd_d[g_detail_idx].pjbd004 IS NOT NULL THEN
#                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t OR g_pjbb_m.pjbb002 != g_pjbb002_t OR g_pjbd_d[g_detail_idx].pjbd003 != g_pjbd_d_t.pjbd003 OR g_pjbd_d[g_detail_idx].pjbd004 != g_pjbd_d_t.pjbd004)) THEN
#                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbd_t WHERE "||"pjbdent = '" ||g_enterprise|| "' AND "||"pjbd001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbd002 = '"||g_pjbb_m.pjbb002 ||"' AND "|| "pjbd003 = '"||g_pjbd_d[g_detail_idx].pjbd003 ||"' AND pjbd004 = '"||g_pjbd_d[g_detail_idx].pjbd004||"'",'std-00004',0) THEN
#                        LET g_pjbd_d[l_ac].pjbd004 = g_pjbd_d_t.pjbd004
#                        CALL apjm200_pjbd004_desc(g_pjbd_d[l_ac].pjbd004)
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
#               END IF
            END IF
            CALL apjm200_pjbd004_pjbd005_required()
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbd004
            #add-point:BEFORE FIELD pjbd004
            {<point name="input.b.page1.pjbd004" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbd004
            #add-point:ON CHANGE pjbd004
            {<point name="input.g.page1.pjbd004" />}
            #END add-point

         #----<<pjbd005>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbd005

            #add-point:AFTER FIELD pjbd005
            CALL apjm200_pjbd005_desc(g_pjbd_d[l_ac].pjbd005)
            IF NOT cl_null(g_pjbd_d[l_ac].pjbd005) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbd_d[l_ac].pjbd005


               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_imaa001") THEN
                  INITIALIZE g_pjbd_d[l_ac].pjbd004 TO NULL
                  DISPLAY BY NAME g_pjbd_d[l_ac].pjbd004
                  CALL apjm200_pjbd004_desc('')
                  SELECT imaa006 INTO g_pjbd_d[l_ac].pjbd006 FROM imaa_t
                   WHERE imaaent = g_enterprise AND imaa001 = g_pjbd_d[l_ac].pjbd005
                  DISPLAY BY NAME g_pjbd_d[l_ac].pjbd006
                  CALL apjm200_pjbd006_desc(g_pjbd_d[l_ac].pjbd006)
               ELSE
                  LET g_pjbd_d[l_ac].pjbd005 = g_pjbd_d_t.pjbd005
                  CALL apjm200_pjbd005_desc(g_pjbd_d[l_ac].pjbd005)
                  NEXT FIELD CURRENT
               END IF
#               IF  g_pjbb_m.pjbb001 IS NOT NULL AND g_pjbb_m.pjbb002 IS NOT NULL AND g_pjbd_d[g_detail_idx].pjbd003 IS NOT NULL AND g_pjbd_d[g_detail_idx].pjbd005 IS NOT NULL THEN
#                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t OR g_pjbb_m.pjbb002 != g_pjbb002_t OR g_pjbd_d[g_detail_idx].pjbd003 != g_pjbd_d_t.pjbd003 OR g_pjbd_d[g_detail_idx].pjbd005 != g_pjbd_d_t.pjbd005)) THEN
#                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbd_t WHERE "||"pjbdent = '" ||g_enterprise|| "' AND "||"pjbd001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbd002 = '"||g_pjbb_m.pjbb002 ||"' AND "|| "pjbd003 = '"||g_pjbd_d[g_detail_idx].pjbd003 ||"' AND pjbd005 = '"||g_pjbd_d[g_detail_idx].pjbd005||"'",'std-00004',0) THEN
#                        LET g_pjbd_d[l_ac].pjbd005 = g_pjbd_d_t.pjbd005
#                        CALL apjm200_pjbd005_desc(g_pjbd_d[l_ac].pjbd005)
#                        NEXT FIELD CURRENT
#                     END IF
#                  END IF
#               END IF
            END IF
            CALL apjm200_pjbd004_pjbd005_required()
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbd005
            #add-point:BEFORE FIELD pjbd005
            {<point name="input.b.page1.pjbd005" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbd005
            #add-point:ON CHANGE pjbd005
            {<point name="input.g.page1.pjbd005" />}
            #END add-point

         #----<<pjbd006>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbd006

            #add-point:AFTER FIELD pjbd006
            CALL apjm200_pjbd006_desc(g_pjbd_d[l_ac].pjbd006)
            IF NOT cl_null(g_pjbd_d[l_ac].pjbd006) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbd_d[l_ac].pjbd006

               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
               #160318-00025#23  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_pjbd_d[l_ac].pjbd006 = g_pjbd_d_t.pjbd006
                  CALL apjm200_pjbd006_desc(g_pjbd_d[l_ac].pjbd006)
                  NEXT FIELD CURRENT
               END IF


            END IF
            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbd006
            #add-point:BEFORE FIELD pjbd006
            {<point name="input.b.page1.pjbd006" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbd006
            #add-point:ON CHANGE pjbd006
            {<point name="input.g.page1.pjbd006" />}
            #END add-point

         #----<<pjbd007>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbd007
            #此段落由子樣板a15產生
            #add-point:AFTER FIELD pjbd007

            IF NOT cl_null(g_pjbd_d[l_ac].pjbd007) THEN
               IF g_pjbd_d[l_ac].pjbd007 <= 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aim-00003'
                  LET g_errparam.extend = g_pjbd_d[l_ac].pjbd007
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_pjbd_d[l_ac].pjbd007 = g_pjbd_d_t.pjbd007     
                  NEXT FIELD CURRENT     
               END IF                  
            END IF
            CALL apjm200_pjbd009_count()
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbd007
            #add-point:BEFORE FIELD pjbd007
            {<point name="input.b.page1.pjbd007" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbd007
            #add-point:ON CHANGE pjbd007
            {<point name="input.g.page1.pjbd007" />}
            #END add-point

         #----<<pjbd008>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbd008
            #此段落由子樣板a15產生
            IF NOT cl_null(g_pjbd_d[l_ac].pjbd008) THEN
               IF g_pjbd_d[l_ac].pjbd008 <= 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aim-00003'
                  LET g_errparam.extend = g_pjbd_d[l_ac].pjbd008
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_pjbd_d[l_ac].pjbd008 = g_pjbd_d_t.pjbd008     
                  NEXT FIELD CURRENT   
               END IF                  
            END IF
            CALL apjm200_pjbd009_count()
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbd008
            #add-point:BEFORE FIELD pjbd008
            {<point name="input.b.page1.pjbd008" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbd008
            #add-point:ON CHANGE pjbd008
            {<point name="input.g.page1.pjbd008" />}
            #END add-point

         #----<<pjbd009>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbd009
            #此段落由子樣板a15產生
            IF NOT cl_null(g_pjbd_d[l_ac].pjbd009) THEN
               IF g_pjbd_d[l_ac].pjbd009 <= 0 THEN 
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code = 'aim-00003'
                  LET g_errparam.extend = g_pjbd_d[l_ac].pjbd009
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  LET g_pjbd_d[l_ac].pjbd009 = g_pjbd_d_t.pjbd009     
                  NEXT FIELD CURRENT
               END IF  
               CALL apjm200_pjbd009_round()               
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbd009
            #add-point:BEFORE FIELD pjbd009
            {<point name="input.b.page1.pjbd009" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbd009
            #add-point:ON CHANGE pjbd009
            {<point name="input.g.page1.pjbd009" />}
            #END add-point

         #----<<pjbd010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbd010
            #add-point:BEFORE FIELD pjbd010
            {<point name="input.b.page1.pjbd010" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbd010

            #add-point:AFTER FIELD pjbd010
            {<point name="input.a.page1.pjbd010" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbd010
            #add-point:ON CHANGE pjbd010
            {<point name="input.g.page1.pjbd010" />}
            #END add-point


         #---------------------<  Detail: page1  >---------------------
         #----<<pjbd003>>----
         #Ctrlp:input.c.page1.pjbd003
#         ON ACTION controlp INFIELD pjbd003
            #add-point:ON ACTION controlp INFIELD pjbd003
            {<point name="input.c.page1.pjbd003" />}
            #END add-point

         #----<<pjbd004>>----
         #Ctrlp:input.c.page1.pjbd004
         ON ACTION controlp INFIELD pjbd004
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd_d[l_ac].pjbd004             #給予default值

            #給予arg

            CALL q_rtax001()                                #呼叫開窗

            LET g_pjbd_d[l_ac].pjbd004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd_d[l_ac].pjbd004 TO pjbd004              #顯示到畫面上
            CALL apjm200_pjbd004_desc(g_pjbd_d[l_ac].pjbd004)
            NEXT FIELD pjbd004
            

         #----<<pjbd005>>----
         #Ctrlp:input.c.page1.pjbd005
         ON ACTION controlp INFIELD pjbd005
            #add-point:ON ACTION controlp INFIELD pjbd005
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd_d[l_ac].pjbd005             #給予default值

            #給予arg

            CALL q_imaa001()                                #呼叫開窗

            LET g_pjbd_d[l_ac].pjbd005 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd_d[l_ac].pjbd005 TO pjbd005              #顯示到畫面上
            CALL apjm200_pjbd005_desc(g_pjbd_d[l_ac].pjbd005)
            NEXT FIELD pjbd005                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbd006>>----
         #Ctrlp:input.c.page1.pjbd006
         ON ACTION controlp INFIELD pjbd006
            #add-point:ON ACTION controlp INFIELD pjbd006
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd_d[l_ac].pjbd006             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_pjbd_d[l_ac].pjbd006 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd_d[l_ac].pjbd006 TO pjbd006              #顯示到畫面上
            CALL apjm200_pjbd006_desc(g_pjbd_d[l_ac].pjbd006)
            NEXT FIELD pjbd006                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbd007>>----
         #Ctrlp:input.c.page1.pjbd007
#         ON ACTION controlp INFIELD pjbd007
            #add-point:ON ACTION controlp INFIELD pjbd007
            {<point name="input.c.page1.pjbd007" />}
            #END add-point

         #----<<pjbd008>>----
         #Ctrlp:input.c.page1.pjbd008
#         ON ACTION controlp INFIELD pjbd008
            #add-point:ON ACTION controlp INFIELD pjbd008
            {<point name="input.c.page1.pjbd008" />}
            #END add-point

         #----<<pjbd009>>----
         #Ctrlp:input.c.page1.pjbd009
#         ON ACTION controlp INFIELD pjbd009
            #add-point:ON ACTION controlp INFIELD pjbd009
            {<point name="input.c.page1.pjbd009" />}
            #END add-point

         #----<<pjbd010>>----
         #Ctrlp:input.c.page1.pjbd010
#         ON ACTION controlp INFIELD pjbd010
            #add-point:ON ACTION controlp INFIELD pjbd010
            {<point name="input.c.page1.pjbd010" />}
            #END add-point



         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_pjbd_d[l_ac].* = g_pjbd_d_t.*
               CLOSE apjm200_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = g_pjbd_d[l_ac].pjbd003
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_pjbd_d[l_ac].* = g_pjbd_d_t.*
            ELSE

               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point

               #寫入修改者/修改日期資訊(單身)


               UPDATE pjbd_t SET (pjbd001,pjbd002,pjbd003,pjbd004,pjbd005,pjbd006,pjbd007,pjbd008,pjbd009,pjbd010) = (g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd_d[l_ac].pjbd003,g_pjbd_d[l_ac].pjbd004,g_pjbd_d[l_ac].pjbd005,g_pjbd_d[l_ac].pjbd006,g_pjbd_d[l_ac].pjbd007,g_pjbd_d[l_ac].pjbd008,g_pjbd_d[l_ac].pjbd009,g_pjbd_d[l_ac].pjbd010)
                WHERE pjbdent = g_enterprise AND pjbd001 = g_pjbb_m.pjbb001
                  AND pjbd002 = g_pjbb_m.pjbb002


                  AND pjbd003 = g_pjbd_d_t.pjbd003 #項次

               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point

               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "pjbd_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pjbd_d[l_ac].* = g_pjbd_d_t.*
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                     LET g_pjbd_d[l_ac].* = g_pjbd_d_t.*
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys_bak[1] = g_pjbb001_t
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys_bak[2] = g_pjbb002_t
               LET gs_keys[3] = g_pjbd_d[g_detail_idx].pjbd003
               LET gs_keys_bak[3] = g_pjbd_d_t.pjbd003
               CALL apjm200_update_b('pjbd_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改

               END CASE

               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point

            END IF

         AFTER ROW
            CALL apjm200_unlock_b("pjbd_t","1")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock


         AFTER INPUT
            #add-point:input段after input
            {<point name="input.body.after_input"/>}
            #end add-point

         #add-point:page自定義行為
         {<point name="input.page.action"/>}
         #end add-point

      END INPUT

      INPUT ARRAY g_pjbd2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         #自訂ACTION


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_pjbd2_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL apjm200_b_fill()
            LET g_rec_b = g_pjbd2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input2"/>}
            #end add-point

         BEFORE INSERT

            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pjbd2_d[l_ac].* TO NULL

            LET g_pjbd_d_t.* = g_pjbd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apjm200_set_entry_b(l_cmd)
            CALL apjm200_set_no_entry_b(l_cmd)
            #公用欄位給值(單身{page})

            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point

         BEFORE ROW
            LET l_insert = FALSE
            LET p_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN apjm200_cl USING g_enterprise,g_pjba_m.pjba001
                                                               
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN apjm200_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE apjm200_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            #FETCH apjm200_cl INTO g_pjbb_m.pjba000,g_pjbb_m.pjba000_desc,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjbal003,g_pjbb_m.pjbal004,g_pjbb_m.pjba003,g_pjbb_m.pjba003_desc,g_pjbb_m.pjba004,g_pjbb_m.pjba004_desc,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjba008_desc,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaownid_desc,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbaowndp_desc,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtid_desc,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdp_desc,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamodid_desc,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfid_desc,g_pjbb_m.pjbacnfdt,g_pjbb_m.cbo_searchcol,g_pjbb_m.searchstr,g_pjbb_m.rdo_searchtype,g_pjbb_m.b_count,g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001 # 鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   CALL cl_err(g_pjbb_m.pjbb001,SQLCA.sqlcode,0)
            #   CLOSE apjm200_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_pjbd2_d.getLength()

            IF g_rec_b >= l_ac
               AND g_pjbd2_d[l_ac].pjbe003 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_pjbd2_d_t.* = g_pjbd2_d[l_ac].*  #BACKUP
               CALL apjm200_set_entry_b(l_cmd)
               CALL apjm200_set_no_entry_b(l_cmd)
               IF NOT apjm200_lock_b("pjbe_t","2") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apjm200_bcl2 INTO g_pjbd2_d[l_ac].pjbe003,g_pjbd2_d[l_ac].pjbe003_desc,g_pjbd2_d[l_ac].pjbe004,g_pjbd2_d[l_ac].pjbe005,g_pjbd2_d[l_ac].pjbe006,g_pjbd2_d[l_ac].pjbe007,g_pjbd2_d[l_ac].pjbe008,g_pjbd2_d[l_ac].pjbe009
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF

                  LET g_bfill = "N"
                  CALL apjm200_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_pjbd2_d.deleteElement(l_ac)
               NEXT FIELD pjbe003
            END IF
            IF g_pjbd2_d[l_ac].pjbe003 IS NOT NULL
            THEN

               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point

               DELETE FROM pjbe_t
                WHERE pjbeent = g_enterprise AND pjbe001 = g_pjbb_m.pjbb001 AND
                                          pjbe002 = g_pjbb_m.pjbb002 AND

                      pjbe003 = g_pjbd2_d_t.pjbe003

               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1

                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE apjm200_bcl
               LET l_count = g_pjbd_d.getLength()
            END IF
                           INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd2_d[g_detail_idx].pjbe003


         AFTER DELETE
            #add-point:單身AFTER DELETE
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL apjm200_delete_b('pjbe_t',gs_keys,"'2'")
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM pjbe_t
             WHERE pjbeent = g_enterprise AND pjbe001 = g_pjbb_m.pjbb001
               AND pjbe002 = g_pjbb_m.pjbb002

               AND g_pjbd2_d[l_ac].pjbe003 = pjbe003

            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point

                              INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd2_d[g_detail_idx].pjbe003
               CALL apjm200_insert_b('pjbe_t',gs_keys,"'2'")

               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_pjbd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbe_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apjm200_b_fill()
               #資料多語言用-增/改

               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_pjbd2_d[l_ac].* = g_pjbd2_d_t.*
               CLOSE apjm200_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_pjbd2_d[l_ac].* = g_pjbd2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point

               #寫入修改者/修改日期資訊(單身2)


               UPDATE pjbe_t SET (pjbe001,pjbe002,pjbe003,pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009) = (g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd2_d[l_ac].pjbe003,g_pjbd2_d[l_ac].pjbe004,g_pjbd2_d[l_ac].pjbe005,g_pjbd2_d[l_ac].pjbe006,g_pjbd2_d[l_ac].pjbe007,g_pjbd2_d[l_ac].pjbe008,g_pjbd2_d[l_ac].pjbe009) #自訂欄位頁簽
                WHERE pjbeent = g_enterprise AND pjbe001 = g_pjbb_m.pjbb001
                  AND pjbe002 = g_pjbb_m.pjbb002

                  AND pjbe003 = g_pjbd2_d_t.pjbe003 #項次
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "pjbe_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pjbd2_d[l_ac].* = g_pjbd2_d_t.*
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbe_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                     LET g_pjbd2_d[l_ac].* = g_pjbd2_d_t.*
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys_bak[1] = g_pjbb001_t
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys_bak[2] = g_pjbb002_t
               LET gs_keys[3] = g_pjbd2_d[g_detail_idx].pjbe003
               LET gs_keys_bak[3] = g_pjbd2_d_t.pjbe003
               CALL apjm200_update_b('pjbe_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改

               END CASE

               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point

            END IF

         #---------------------<  Detail: page2  >---------------------
         #----<<pjbe003>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbe003

            #add-point:AFTER FIELD pjbe003

            
            CALL apjm200_pjbe003_desc(g_pjbd2_d[l_ac].pjbe003)
            #此段落由子樣板a05產生
            
            
            IF NOT cl_null(g_pjbd2_d[l_ac].pjbe003) THEN
               IF NOT s_azzi650_chk_exist('8002',g_pjbd2_d[l_ac].pjbe003) THEN
                  LET g_pjbd2_d[l_ac].pjbe003 = g_pjbd2_d_t.pjbe003
                  CALL apjm200_pjbe003_desc(g_pjbd2_d[l_ac].pjbe003)
                  NEXT FIELD CURRENT
               END IF
               IF g_pjbb_m.pjbb001 IS NOT NULL AND g_pjbb_m.pjbb002 IS NOT NULL AND g_pjbd2_d[g_detail_idx].pjbe003 IS NOT NULL THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t OR g_pjbb_m.pjbb002 != g_pjbb002_t OR g_pjbd2_d[g_detail_idx].pjbe003 != g_pjbd2_d_t.pjbe003)) THEN
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbe_t WHERE "||"pjbeent = '" ||g_enterprise|| "' AND "||"pjbe001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbe002 = '"||g_pjbb_m.pjbb002 ||"' AND "|| "pjbe003 = '"||g_pjbd2_d[g_detail_idx].pjbe003 ||"'",'std-00004',0) THEN
                        LET g_pjbd2_d[l_ac].pjbe003 = g_pjbd2_d_t.pjbe003
                        CALL apjm200_pjbe003_desc(g_pjbd2_d[l_ac].pjbe003)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbe003
            #add-point:BEFORE FIELD pjbe003
            {<point name="input.b.page2.pjbe003" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbe003
            #add-point:ON CHANGE pjbe003
            {<point name="input.g.page2.pjbe003" />}
            #END add-point

         #----<<pjbe004>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbe004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd2_d[l_ac].pjbe004,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbe004
            END IF


            #add-point:AFTER FIELD pjbe004

            IF NOT cl_null(g_pjbd2_d[l_ac].pjbe004) THEN
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbe004
            #add-point:BEFORE FIELD pjbe004
            {<point name="input.b.page2.pjbe004" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbe004
            #add-point:ON CHANGE pjbe004
            {<point name="input.g.page2.pjbe004" />}
            #END add-point

         #----<<pjbe005>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbe005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd2_d[l_ac].pjbe005,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbe005
            END IF


            #add-point:AFTER FIELD pjbe005

            IF NOT cl_null(g_pjbd2_d[l_ac].pjbe005) THEN
               CALL apjm200_pjbe008_count()
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbe005
            #add-point:BEFORE FIELD pjbe005
            {<point name="input.b.page2.pjbe005" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbe005
            #add-point:ON CHANGE pjbe005
            {<point name="input.g.page2.pjbe005" />}
            #END add-point

         #----<<pjbe006>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbe006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd2_d[l_ac].pjbe006,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbe006
            END IF


            #add-point:AFTER FIELD pjbe006

            IF NOT cl_null(g_pjbd2_d[l_ac].pjbe006) THEN
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbe006
            #add-point:BEFORE FIELD pjbe006
            {<point name="input.b.page2.pjbe006" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbe006
            #add-point:ON CHANGE pjbe006
            {<point name="input.g.page2.pjbe006" />}
            #END add-point

         #----<<pjbe007>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbe007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd2_d[l_ac].pjbe007,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbe007
            END IF


            #add-point:AFTER FIELD pjbe007

            IF NOT cl_null(g_pjbd2_d[l_ac].pjbe007) THEN
               CALL apjm200_pjbe008_count()
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbe007
            #add-point:BEFORE FIELD pjbe007
            {<point name="input.b.page2.pjbe007" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbe007
            #add-point:ON CHANGE pjbe007
            {<point name="input.g.page2.pjbe007" />}
            #END add-point

         #----<<pjbe008>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbe008
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd2_d[l_ac].pjbe008,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbe008
            END IF


            #add-point:AFTER FIELD pjbe008

            IF NOT cl_null(g_pjbd2_d[l_ac].pjbe008) THEN
               CALL apjm200_pjbe008_round()
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbe008
            #add-point:BEFORE FIELD pjbe008
            {<point name="input.b.page2.pjbe008" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbe008
            #add-point:ON CHANGE pjbe008
            {<point name="input.g.page2.pjbe008" />}
            #END add-point

         #----<<pjbe009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbe009
            #add-point:BEFORE FIELD pjbe009
            {<point name="input.b.page2.pjbe009" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbe009

            #add-point:AFTER FIELD pjbe009
            {<point name="input.a.page2.pjbe009" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbe009
            #add-point:ON CHANGE pjbe009
            {<point name="input.g.page2.pjbe009" />}
            #END add-point


         #---------------------<  Detail: page2  >---------------------
         #----<<pjbe003>>----
         #Ctrlp:input.c.page2.pjbe003
         ON ACTION controlp INFIELD pjbe003
            #add-point:ON ACTION controlp INFIELD pjbe003
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd2_d[l_ac].pjbe003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "8002" #

            CALL q_oocq002_1()                                #呼叫開窗

            LET g_pjbd2_d[l_ac].pjbe003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd2_d[l_ac].pjbe003 TO pjbe003              #顯示到畫面上
            CALL apjm200_pjbe003_desc(g_pjbd2_d[l_ac].pjbe003)
            NEXT FIELD pjbe003                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbe004>>----
         #Ctrlp:input.c.page2.pjbe004
#         ON ACTION controlp INFIELD pjbe004
            #add-point:ON ACTION controlp INFIELD pjbe004
            {<point name="input.c.page2.pjbe004" />}
            #END add-point

         #----<<pjbe005>>----
         #Ctrlp:input.c.page2.pjbe005
#         ON ACTION controlp INFIELD pjbe005
            #add-point:ON ACTION controlp INFIELD pjbe005
            {<point name="input.c.page2.pjbe005" />}
            #END add-point

         #----<<pjbe006>>----
         #Ctrlp:input.c.page2.pjbe006
#         ON ACTION controlp INFIELD pjbe006
            #add-point:ON ACTION controlp INFIELD pjbe006
            {<point name="input.c.page2.pjbe006" />}
            #END add-point

         #----<<pjbe007>>----
         #Ctrlp:input.c.page2.pjbe007
#         ON ACTION controlp INFIELD pjbe007
            #add-point:ON ACTION controlp INFIELD pjbe007
            {<point name="input.c.page2.pjbe007" />}
            #END add-point

         #----<<pjbe008>>----
         #Ctrlp:input.c.page2.pjbe008
#         ON ACTION controlp INFIELD pjbe008
            #add-point:ON ACTION controlp INFIELD pjbe008
            {<point name="input.c.page2.pjbe008" />}
            #END add-point

         #----<<pjbe009>>----
         #Ctrlp:input.c.page2.pjbe009
#         ON ACTION controlp INFIELD pjbe009
            #add-point:ON ACTION controlp INFIELD pjbe009
            {<point name="input.c.page2.pjbe009" />}
            #END add-point



         AFTER ROW
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pjbd2_d[l_ac].* = g_pjbd2_d_t.*
               END IF
               CLOSE apjm200_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #其他table進行unlock

            CALL apjm200_unlock_b("pjbe_t","2")
            CALL s_transaction_end('Y','0')

         AFTER INPUT
            #add-point:input段after input
            {<point name="input.body2.after_input"/>}
            #end add-point

         #add-point:page2自定義行為
         {<point name="input.page2.action"/>}
         #end add-point

      END INPUT

      INPUT ARRAY g_pjbd3_d FROM s_detail3.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         #自訂ACTION


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_pjbd3_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL apjm200_b_fill()
            LET g_rec_b = g_pjbd3_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input3"/>}
            #end add-point

         BEFORE INSERT

            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pjbd3_d[l_ac].* TO NULL

            LET g_pjbd_d_t.* = g_pjbd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apjm200_set_entry_b(l_cmd)
            CALL apjm200_set_no_entry_b(l_cmd)
            #公用欄位給值(單身{page})

            #add-point:modify段before insert
            {<point name="input.body3.before_insert"/>}
            #end add-point

         BEFORE ROW
            LET l_insert = FALSE
            LET p_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN apjm200_cl USING g_enterprise,g_pjba_m.pjba001
                                                             
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN apjm200_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE apjm200_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            #FETCH apjm200_cl INTO g_pjbb_m.pjba000,g_pjbb_m.pjba000_desc,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjbal003,g_pjbb_m.pjbal004,g_pjbb_m.pjba003,g_pjbb_m.pjba003_desc,g_pjbb_m.pjba004,g_pjbb_m.pjba004_desc,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjba008_desc,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaownid_desc,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbaowndp_desc,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtid_desc,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdp_desc,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamodid_desc,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfid_desc,g_pjbb_m.pjbacnfdt,g_pjbb_m.cbo_searchcol,g_pjbb_m.searchstr,g_pjbb_m.rdo_searchtype,g_pjbb_m.b_count,g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001 # 鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   CALL cl_err(g_pjbb_m.pjbb001,SQLCA.sqlcode,0)
            #   CLOSE apjm200_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_pjbd3_d.getLength()

            IF g_rec_b >= l_ac
               AND g_pjbd3_d[l_ac].pjbf003 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_pjbd3_d_t.* = g_pjbd3_d[l_ac].*  #BACKUP
               CALL apjm200_set_entry_b(l_cmd)
               CALL apjm200_set_no_entry_b(l_cmd)
               IF NOT apjm200_lock_b("pjbf_t","3") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apjm200_bcl3 INTO g_pjbd3_d[l_ac].pjbf003,g_pjbd3_d[l_ac].pjbf003_desc,g_pjbd3_d[l_ac].pjbf004,g_pjbd3_d[l_ac].pjbf004_desc,g_pjbd3_d[l_ac].pjbf005,g_pjbd3_d[l_ac].pjbf006,g_pjbd3_d[l_ac].pjbf007,g_pjbd3_d[l_ac].pjbf008
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF

                  LET g_bfill = "N"
                  CALL apjm200_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body3.before_row"/>}
            #end add-point
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_pjbd3_d.deleteElement(l_ac)
               NEXT FIELD pjbf003
            END IF
            IF g_pjbd3_d[l_ac].pjbf003 IS NOT NULL
            THEN

               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               #add-point:單身3刪除前
               {<point name="input.body3.b_delete" mark="Y"/>}
               #end add-point

               DELETE FROM pjbf_t
                WHERE pjbfent = g_enterprise AND pjbf001 = g_pjbb_m.pjbb001 AND
                                          pjbf002 = g_pjbb_m.pjbb002 AND

                      pjbf003 = g_pjbd3_d_t.pjbf003

               #add-point:單身3刪除中
               {<point name="input.body3.m_delete"/>}
               #end add-point

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1

                  #add-point:單身3刪除後
                  {<point name="input.body3.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE apjm200_bcl
               LET l_count = g_pjbd_d.getLength()
            END IF
                           INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd3_d[g_detail_idx].pjbf003


         AFTER DELETE
            #add-point:單身AFTER DELETE
            {<point name="input.body3.after_delete"/>}
            #end add-point
                           CALL apjm200_delete_b('pjbf_t',gs_keys,"'3'")
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM pjbf_t
             WHERE pjbfent = g_enterprise AND pjbf001 = g_pjbb_m.pjbb001
               AND pjbf002 = g_pjbb_m.pjbb002

               AND g_pjbd3_d[l_ac].pjbf003 = pjbf003

            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               #add-point:單身3新增前
               {<point name="input.body3.b_insert"/>}
               #end add-point

                              INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd3_d[g_detail_idx].pjbf003
               CALL apjm200_insert_b('pjbf_t',gs_keys,"'3'")

               #add-point:單身新增後3
               {<point name="input.body3.a_insert"/>}
               #end add-point
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_pjbd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apjm200_b_fill()
               #資料多語言用-增/改

               #add-point:單身新增後
               {<point name="input.body3.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_pjbd3_d[l_ac].* = g_pjbd3_d_t.*
               CLOSE apjm200_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_pjbd3_d[l_ac].* = g_pjbd3_d_t.*
            ELSE
               #add-point:單身page3修改前
               {<point name="input.body3.b_update" mark="Y"/>}
               #end add-point

               #寫入修改者/修改日期資訊(單身3)


               UPDATE pjbf_t SET (pjbf001,pjbf002,pjbf003,pjbf004,pjbf005,pjbf006,pjbf007,pjbf008) = (g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd3_d[l_ac].pjbf003,g_pjbd3_d[l_ac].pjbf004,g_pjbd3_d[l_ac].pjbf005,g_pjbd3_d[l_ac].pjbf006,g_pjbd3_d[l_ac].pjbf007,g_pjbd3_d[l_ac].pjbf008) #自訂欄位頁簽
                WHERE pjbfent = g_enterprise AND pjbf001 = g_pjbb_m.pjbb001
                  AND pjbf002 = g_pjbb_m.pjbb002

                  AND pjbf003 = g_pjbd3_d_t.pjbf003 #項次
               #add-point:單身page3修改中
               {<point name="input.body3.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "pjbf_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pjbd3_d[l_ac].* = g_pjbd3_d_t.*
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbf_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                     LET g_pjbd3_d[l_ac].* = g_pjbd3_d_t.*
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys_bak[1] = g_pjbb001_t
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys_bak[2] = g_pjbb002_t
               LET gs_keys[3] = g_pjbd3_d[g_detail_idx].pjbf003
               LET gs_keys_bak[3] = g_pjbd3_d_t.pjbf003
               CALL apjm200_update_b('pjbf_t',gs_keys,gs_keys_bak,"'3'")
                     #資料多語言用-增/改

               END CASE

               #add-point:單身page3修改後
               {<point name="input.body3.a_update"/>}
               #end add-point

            END IF

         #---------------------<  Detail: page3  >---------------------
         #----<<pjbf003>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbf003

            #add-point:AFTER FIELD pjbf003
            CALL apjm200_pjbf003_desc(g_pjbd3_d[l_ac].pjbf003)
            IF NOT cl_null(g_pjbd3_d[l_ac].pjbf003) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbd3_d[l_ac].pjbf003

               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="amr-00004:sub-01302|amrm200|",cl_get_progname("amrm200",g_lang,"2"),"|:EXEPROGamrm200"
               #160318-00025#23  by 07900 --add-end 
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_mrba001_1") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_pjbd3_d[l_ac].pjbf003 = g_pjbd3_d_t.pjbf003
                  CALL apjm200_pjbf003_desc(g_pjbd3_d[l_ac].pjbf003)
                  NEXT FIELD CURRENT
               END IF
               IF g_pjbb_m.pjbb001 IS NOT NULL AND g_pjbb_m.pjbb002 IS NOT NULL AND g_pjbd3_d[g_detail_idx].pjbf003 IS NOT NULL THEN
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t OR g_pjbb_m.pjbb002 != g_pjbb002_t OR g_pjbd3_d[g_detail_idx].pjbf003 != g_pjbd3_d_t.pjbf003)) THEN
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbf_t WHERE "||"pjbfent = '" ||g_enterprise|| "' AND "||"pjbf001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbf002 = '"||g_pjbb_m.pjbb002 ||"' AND "|| "pjbf003 = '"||g_pjbd3_d[g_detail_idx].pjbf003 ||"'",'std-00004',0) THEN
                         LET g_pjbd3_d[l_ac].pjbf003 = g_pjbd3_d_t.pjbf003
                         CALL apjm200_pjbf003_desc(g_pjbd3_d[l_ac].pjbf003)
                        NEXT FIELD CURRENT
                     END IF
                  END IF
               END IF

            END IF
            

            #此段落由子樣板a05產生
            

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbf003
            #add-point:BEFORE FIELD pjbf003
            {<point name="input.b.page3.pjbf003" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbf003
            #add-point:ON CHANGE pjbf003
            {<point name="input.g.page3.pjbf003" />}
            #END add-point

         #----<<pjbf004>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbf004

            #add-point:AFTER FIELD pjbf004
            CALL apjm200_pjbf004_desc(g_pjbd3_d[l_ac].pjbf004)
            IF NOT cl_null(g_pjbd3_d[l_ac].pjbf004) THEN
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL

               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_pjbd3_d[l_ac].pjbf004
               #160318-00025#23  by 07900 --add-str
               LET g_errshow = TRUE #是否開窗                   
               LET g_chkparam.err_str[1] ="aim-00005:sub-01302|aooi250|",cl_get_progname("aooi250",g_lang,"2"),"|:EXEPROGaooi250"
               #160318-00025#23  by 07900 --add-end
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooca001") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME

               ELSE
                  #檢查失敗時後續處理
                  LET g_pjbd3_d[l_ac].pjbf004 = g_pjbd3_d_t.pjbf004
                  CALL apjm200_pjbf004_desc(g_pjbd3_d[l_ac].pjbf004)
                  NEXT FIELD CURRENT
               END IF


            END IF
            
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbf004
            #add-point:BEFORE FIELD pjbf004
            {<point name="input.b.page3.pjbf004" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbf004
            #add-point:ON CHANGE pjbf004
            {<point name="input.g.page3.pjbf004" />}
            #END add-point

         #----<<pjbf005>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbf005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd3_d[l_ac].pjbf005,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbf005
            END IF


            #add-point:AFTER FIELD pjbf005

            IF NOT cl_null(g_pjbd3_d[l_ac].pjbf005) THEN
               CALL apjm200_pjbf007_count()
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbf005
            #add-point:BEFORE FIELD pjbf005
            {<point name="input.b.page3.pjbf005" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbf005
            #add-point:ON CHANGE pjbf005
            {<point name="input.g.page3.pjbf005" />}
            #END add-point

         #----<<pjbf006>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbf006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd3_d[l_ac].pjbf006,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbf006
            END IF


            #add-point:AFTER FIELD pjbf006

            IF NOT cl_null(g_pjbd3_d[l_ac].pjbf006) THEN
               CALL apjm200_pjbf007_count()
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbf006
            #add-point:BEFORE FIELD pjbf006
            {<point name="input.b.page3.pjbf006" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbf006
            #add-point:ON CHANGE pjbf006
            {<point name="input.g.page3.pjbf006" />}
            #END add-point

         #----<<pjbf007>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbf007
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd3_d[l_ac].pjbf007,"1.000","1","","","azz-00079",1) THEN
               NEXT FIELD pjbf007
            END IF


            #add-point:AFTER FIELD pjbf007

            IF NOT cl_null(g_pjbd3_d[l_ac].pjbf007) THEN
               CALL apjm200_pjbf007_round()
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbf007
            #add-point:BEFORE FIELD pjbf007
            {<point name="input.b.page3.pjbf007" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbf007
            #add-point:ON CHANGE pjbf007
            {<point name="input.g.page3.pjbf007" />}
            #END add-point

         #----<<pjbf008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbf008
            #add-point:BEFORE FIELD pjbf008
            {<point name="input.b.page3.pjbf008" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbf008

            #add-point:AFTER FIELD pjbf008
            {<point name="input.a.page3.pjbf008" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbf008
            #add-point:ON CHANGE pjbf008
            {<point name="input.g.page3.pjbf008" />}
            #END add-point


         #---------------------<  Detail: page3  >---------------------
         #----<<pjbf003>>----
         #Ctrlp:input.c.page3.pjbf003
         ON ACTION controlp INFIELD pjbf003
            #add-point:ON ACTION controlp INFIELD pjbf003
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd3_d[l_ac].pjbf003             #給予default值

            #給予arg
            LET g_qryparam.where = " mrba000 = '0' AND mrba100 = '1' "
            CALL q_mrba001()                                #呼叫開窗

            LET g_pjbd3_d[l_ac].pjbf003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd3_d[l_ac].pjbf003 TO pjbf003              #顯示到畫面上
            CALL apjm200_pjbf003_desc(g_pjbd3_d[l_ac].pjbf003)
            NEXT FIELD pjbf003                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbf004>>----
         #Ctrlp:input.c.page3.pjbf004
         ON ACTION controlp INFIELD pjbf004
            #add-point:ON ACTION controlp INFIELD pjbf004
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd3_d[l_ac].pjbf004             #給予default值

            #給予arg

            CALL q_ooca001_1()                                #呼叫開窗

            LET g_pjbd3_d[l_ac].pjbf004 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd3_d[l_ac].pjbf004 TO pjbf004              #顯示到畫面上
            CALL apjm200_pjbf004_desc(g_pjbd3_d[l_ac].pjbf004)
            NEXT FIELD pjbf004                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbf005>>----
         #Ctrlp:input.c.page3.pjbf005
#         ON ACTION controlp INFIELD pjbf005
            #add-point:ON ACTION controlp INFIELD pjbf005
            {<point name="input.c.page3.pjbf005" />}
            #END add-point

         #----<<pjbf006>>----
         #Ctrlp:input.c.page3.pjbf006
#         ON ACTION controlp INFIELD pjbf006
            #add-point:ON ACTION controlp INFIELD pjbf006
            {<point name="input.c.page3.pjbf006" />}
            #END add-point

         #----<<pjbf007>>----
         #Ctrlp:input.c.page3.pjbf007
#         ON ACTION controlp INFIELD pjbf007
            #add-point:ON ACTION controlp INFIELD pjbf007
            {<point name="input.c.page3.pjbf007" />}
            #END add-point

         #----<<pjbf008>>----
         #Ctrlp:input.c.page3.pjbf008
#         ON ACTION controlp INFIELD pjbf008
            #add-point:ON ACTION controlp INFIELD pjbf008
            {<point name="input.c.page3.pjbf008" />}
            #END add-point



         AFTER ROW
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pjbd3_d[l_ac].* = g_pjbd3_d_t.*
               END IF
               CLOSE apjm200_bcl3
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #其他table進行unlock

            CALL apjm200_unlock_b("pjbf_t","3")
            CALL s_transaction_end('Y','0')

         AFTER INPUT
            #add-point:input段after input
            {<point name="input.body3.after_input"/>}
            #end add-point

         #add-point:page3自定義行為
         {<point name="input.page3.action"/>}
         #end add-point

      END INPUT

      INPUT ARRAY g_pjbd4_d FROM s_detail4.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效!
                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)

         #自訂ACTION


         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN
              CALL FGL_SET_ARR_CURR(g_pjbd4_d.getLength()+1)
              LET g_insert = 'N'
           END IF

            CALL apjm200_b_fill()
            LET g_rec_b = g_pjbd4_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input4"/>}
            #end add-point

         BEFORE INSERT

            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_pjbd4_d[l_ac].* TO NULL

            LET g_pjbd_d_t.* = g_pjbd_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL apjm200_set_entry_b(l_cmd)
            CALL apjm200_set_no_entry_b(l_cmd)
            #公用欄位給值(單身{page})

            #add-point:modify段before insert
            {<point name="input.body4.before_insert"/>}
            #end add-point

         BEFORE ROW
            LET l_insert = FALSE
            LET p_cmd = ''
            #CALL FGL_SET_ARR_CURR(g_detail_idx)
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_n TO FORMONLY.idx

            CALL s_transaction_begin()
            OPEN apjm200_cl USING g_enterprise,g_pjba_m.pjba001
                                                              
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code =  STATUS
               LET g_errparam.extend = "OPEN apjm200_cl:"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CLOSE apjm200_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF

            #FETCH apjm200_cl INTO g_pjbb_m.pjba000,g_pjbb_m.pjba000_desc,g_pjbb_m.pjba001,g_pjbb_m.pjba002,g_pjbb_m.pjbal003,g_pjbb_m.pjbal004,g_pjbb_m.pjba003,g_pjbb_m.pjba003_desc,g_pjbb_m.pjba004,g_pjbb_m.pjba004_desc,g_pjbb_m.pjba005,g_pjbb_m.pjba006,g_pjbb_m.pjbastus,g_pjbb_m.pjba007,g_pjbb_m.pjba008,g_pjbb_m.pjba008_desc,g_pjbb_m.pjbaownid,g_pjbb_m.pjbaownid_desc,g_pjbb_m.pjbaowndp,g_pjbb_m.pjbaowndp_desc,g_pjbb_m.pjbacrtid,g_pjbb_m.pjbacrtid_desc,g_pjbb_m.pjbacrtdp,g_pjbb_m.pjbacrtdp_desc,g_pjbb_m.pjbacrtdt,g_pjbb_m.pjbamodid,g_pjbb_m.pjbamodid_desc,g_pjbb_m.pjbamoddt,g_pjbb_m.pjbacnfid,g_pjbb_m.pjbacnfid_desc,g_pjbb_m.pjbacnfdt,g_pjbb_m.cbo_searchcol,g_pjbb_m.searchstr,g_pjbb_m.rdo_searchtype,g_pjbb_m.b_count,g_pjbb_m.pjbb002,g_pjbb_m.pjbbl004,g_pjbb_m.pjbbl005,g_pjbb_m.pjbb004,g_pjbb_m.pjbb004_desc,g_pjbb_m.pjbb003,g_pjbb_m.pjbb003_desc,g_pjbb_m.pjbb005,g_pjbb_m.pjbb006,g_pjbb_m.pjbb007,g_pjbb_m.pjbb008,g_pjbb_m.pjbb009,g_pjbb_m.pjbb010,g_pjbb_m.pjbb010_desc,g_pjbb_m.pjbb011,g_pjbb_m.pjbb011_desc,g_pjbb_m.pjbb012,g_pjbb_m.pjbb001 # 鎖住將被更改或取消的資料
            #IF SQLCA.sqlcode THEN
            #   CALL cl_err(g_pjbb_m.pjbb001,SQLCA.sqlcode,0)
            #   CLOSE apjm200_cl
            #   CALL s_transaction_end('N','0')
            #   RETURN
            #END IF

            LET g_rec_b = g_pjbd4_d.getLength()

            IF g_rec_b >= l_ac
               AND g_pjbd4_d[l_ac].pjbg003 IS NOT NULL
            THEN
               LET l_cmd='u'
               LET g_pjbd4_d_t.* = g_pjbd4_d[l_ac].*  #BACKUP
               CALL apjm200_set_entry_b(l_cmd)
               CALL apjm200_set_no_entry_b(l_cmd)
               IF NOT apjm200_lock_b("pjbg_t","4") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH apjm200_bcl4 INTO g_pjbd4_d[l_ac].pjbg003,g_pjbd4_d[l_ac].pjbg003_desc,g_pjbd4_d[l_ac].pjbg004,g_pjbd4_d[l_ac].pjbg005
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = SQLCA.sqlcode
                     LET g_errparam.extend = ''
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET l_lock_sw = "Y"
                  END IF

                  LET g_bfill = "N"
                  CALL apjm200_show()
                  LET g_bfill = "Y"
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body4.before_row"/>}
            #end add-point
            #其他table資料備份(確定是否更改用)

            #其他table進行lock


         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_pjbd4_d.deleteElement(l_ac)
               NEXT FIELD pjbg003
            END IF
            IF g_pjbd4_d[l_ac].pjbg003 IS NOT NULL
            THEN

               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL
                  LET g_errparam.code =  -263
                  LET g_errparam.extend = ""
                  LET g_errparam.popup = TRUE
                  CALL cl_err()

                  CANCEL DELETE
               END IF

               #add-point:單身4刪除前
               {<point name="input.body4.b_delete" mark="Y"/>}
               #end add-point

               DELETE FROM pjbg_t
                WHERE pjbgent = g_enterprise AND pjbg001 = g_pjbb_m.pjbb001 AND
                                          pjbg002 = g_pjbb_m.pjbb002 AND

                      pjbg003 = g_pjbd4_d_t.pjbg003

               #add-point:單身4刪除中
               {<point name="input.body4.m_delete"/>}
               #end add-point

               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbd_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                  CALL s_transaction_end('N','0')
                  CANCEL DELETE
               ELSE
                  LET g_rec_b = g_rec_b-1

                  #add-point:單身4刪除後
                  {<point name="input.body4.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF
               CLOSE apjm200_bcl
               LET l_count = g_pjbd_d.getLength()
            END IF
                           INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd4_d[g_detail_idx].pjbg003


         AFTER DELETE
            #add-point:單身AFTER DELETE
            {<point name="input.body4.after_delete"/>}
            #end add-point
                           CALL apjm200_delete_b('pjbg_t',gs_keys,"'4'")
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               CANCEL INSERT
            END IF

            LET l_count = 1
            SELECT COUNT(*) INTO l_count FROM pjbg_t
             WHERE pjbgent = g_enterprise AND pjbg001 = g_pjbb_m.pjbb001
               AND pjbg002 = g_pjbb_m.pjbb002

               AND g_pjbd4_d[l_ac].pjbg003 = pjbg003

            #資料未重複, 插入新增資料
            IF l_count = 0 THEN
               #add-point:單身4新增前
               {<point name="input.body4.b_insert"/>}
               #end add-point

                              INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys[3] = g_pjbd4_d[g_detail_idx].pjbg003
               CALL apjm200_insert_b('pjbg_t',gs_keys,"'4'")

               #add-point:單身新增後4
               {<point name="input.body4.a_insert"/>}
               #end add-point
            ELSE
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = "std-00006"
               LET g_errparam.extend = 'INSERT'
               LET g_errparam.popup = TRUE
               CALL cl_err()

               INITIALIZE g_pjbd_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbg_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

               CALL s_transaction_end('N','0')
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL apjm200_b_fill()
               #資料多語言用-增/改

               #add-point:單身新增後
               {<point name="input.body4.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF

         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               LET g_pjbd4_d[l_ac].* = g_pjbd4_d_t.*
               CLOSE apjm200_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = -263
               LET g_errparam.extend = ''
               LET g_errparam.popup = TRUE
               CALL cl_err()

               LET g_pjbd4_d[l_ac].* = g_pjbd4_d_t.*
            ELSE
               #add-point:單身page4修改前
               {<point name="input.body4.b_update" mark="Y"/>}
               #end add-point

               #寫入修改者/修改日期資訊(單身4)


               UPDATE pjbg_t SET (pjbg001,pjbg002,pjbg003,pjbg004,pjbg005) = (g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd4_d[l_ac].pjbg003,g_pjbd4_d[l_ac].pjbg004,g_pjbd4_d[l_ac].pjbg005) #自訂欄位頁簽
                WHERE pjbgent = g_enterprise AND pjbg001 = g_pjbb_m.pjbb001
                  AND pjbg002 = g_pjbb_m.pjbb002

                  AND pjbg003 = g_pjbd4_d_t.pjbg003 #項次
               #add-point:單身page4修改中
               {<point name="input.body4.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL
                     LET g_errparam.code = "std-00009"
                     LET g_errparam.extend = "pjbg_t"
                     LET g_errparam.popup = TRUE
                     CALL cl_err()

                     LET g_pjbd4_d[l_ac].* = g_pjbd4_d_t.*
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL
               LET g_errparam.code = SQLCA.sqlcode
               LET g_errparam.extend = "pjbg_t"
               LET g_errparam.popup = TRUE
               CALL cl_err()

                     LET g_pjbd4_d[l_ac].* = g_pjbd4_d_t.*
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL
               LET gs_keys[1] = g_pjbb_m.pjbb001
               LET gs_keys_bak[1] = g_pjbb001_t
               LET gs_keys[2] = g_pjbb_m.pjbb002
               LET gs_keys_bak[2] = g_pjbb002_t
               LET gs_keys[3] = g_pjbd4_d[g_detail_idx].pjbg003
               LET gs_keys_bak[3] = g_pjbd4_d_t.pjbg003
               CALL apjm200_update_b('pjbg_t',gs_keys,gs_keys_bak,"'4'")
                     #資料多語言用-增/改

               END CASE

               #add-point:單身page4修改後
               {<point name="input.body4.a_update"/>}
               #end add-point

            END IF

         #---------------------<  Detail: page4  >---------------------
         #----<<pjbg003>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbg003

            #add-point:AFTER FIELD pjbg003

            CALL apjm200_pjbg003_desc(g_pjbd4_d[l_ac].pjbg003)

            #此段落由子樣板a05產生
            IF  g_pjbb_m.pjbb001 IS NOT NULL AND g_pjbb_m.pjbb002 IS NOT NULL AND g_pjbd4_d[g_detail_idx].pjbg003 IS NOT NULL THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_pjbb_m.pjbb001 != g_pjbb001_t OR g_pjbb_m.pjbb002 != g_pjbb002_t OR g_pjbd4_d[g_detail_idx].pjbg003 != g_pjbd4_d_t.pjbg003)) THEN
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM pjbg_t WHERE "||"pjbgent = '" ||g_enterprise|| "' AND "||"pjbg001 = '"||g_pjbb_m.pjbb001 ||"' AND "|| "pjbg002 = '"||g_pjbb_m.pjbb002 ||"' AND "|| "pjbg003 = '"||g_pjbd4_d[g_detail_idx].pjbg003 ||"'",'std-00004',0) THEN
                     LET g_pjbd4_d[l_ac].pjbg003 = g_pjbd4_d_t.pjbg003
                     CALL apjm200_pjbg003_desc(g_pjbd4_d[l_ac].pjbg003)
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            
            IF NOT cl_null(g_pjbd4_d[l_ac].pjbg003) THEN
               IF NOT s_azzi650_chk_exist('8003',g_pjbd4_d[l_ac].pjbg003) THEN
                  LET g_pjbd4_d[l_ac].pjbg003 = g_pjbd4_d_t.pjbg003
                  CALL apjm200_pjbg003_desc(g_pjbd4_d[l_ac].pjbg003)
                  NEXT FIELD CURRENT
               END IF
            END IF

          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbg003
            #add-point:BEFORE FIELD pjbg003
            {<point name="input.b.page4.pjbg003" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbg003
            #add-point:ON CHANGE pjbg003
            {<point name="input.g.page4.pjbg003" />}
            #END add-point

         #----<<pjbg004>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjbg004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_pjbd4_d[l_ac].pjbg004,"1.000","0","","","azz-00079",1) THEN
               NEXT FIELD pjbg004
            END IF


            #add-point:AFTER FIELD pjbg004

            IF NOT cl_null(g_pjbd4_d[l_ac].pjbg004) THEN
               CALL apjm200_pjbg004_round()
            END IF
          {#ADP版次:1#}
            #END add-point


         #此段落由子樣板a01產生
         BEFORE FIELD pjbg004
            #add-point:BEFORE FIELD pjbg004
            {<point name="input.b.page4.pjbg004" />}
            #END add-point

         #此段落由子樣板a04產生
         ON CHANGE pjbg004
            #add-point:ON CHANGE pjbg004
            {<point name="input.g.page4.pjbg004" />}
            #END add-point

         #----<<pjbg005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD pjbg005
            #add-point:BEFORE FIELD pjbg005
            {<point name="input.b.page4.pjbg005" />}
            #END add-point

         #此段落由子樣板a02產生
         AFTER FIELD pjbg005

            #add-point:AFTER FIELD pjbg005
            {<point name="input.a.page4.pjbg005" />}
            #END add-point


         #此段落由子樣板a04產生
         ON CHANGE pjbg005
            #add-point:ON CHANGE pjbg005
            {<point name="input.g.page4.pjbg005" />}
            #END add-point


         #---------------------<  Detail: page4  >---------------------
         #----<<pjbg003>>----
         #Ctrlp:input.c.page4.pjbg003
         ON ACTION controlp INFIELD pjbg003
            #add-point:ON ACTION controlp INFIELD pjbg003
#此段落由子樣板a07產生
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_pjbd4_d[l_ac].pjbg003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = 8003 #

            CALL q_oocq002_1()                                #呼叫開窗

            LET g_pjbd4_d[l_ac].pjbg003 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY g_pjbd4_d[l_ac].pjbg003 TO pjbg003              #顯示到畫面上
            CALL apjm200_pjbg003_desc(g_pjbd4_d[l_ac].pjbg003)
            NEXT FIELD pjbg003                          #返回原欄位

          {#ADP版次:1#}
            #END add-point

         #----<<pjbg004>>----
         #Ctrlp:input.c.page4.pjbg004
#         ON ACTION controlp INFIELD pjbg004
            #add-point:ON ACTION controlp INFIELD pjbg004
            {<point name="input.c.page4.pjbg004" />}
            #END add-point

         #----<<pjbg005>>----
         #Ctrlp:input.c.page4.pjbg005
#         ON ACTION controlp INFIELD pjbg005
            #add-point:ON ACTION controlp INFIELD pjbg005
            {<point name="input.c.page4.pjbg005" />}
            #END add-point



         AFTER ROW
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET l_ac_t = l_ac
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL
               LET g_errparam.code = 9001
               LET g_errparam.extend = ''
               LET g_errparam.popup = FALSE
               CALL cl_err()

               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_pjbd4_d[l_ac].* = g_pjbd4_d_t.*
               END IF
               CLOSE apjm200_bcl4
               CALL s_transaction_end('N','0')
               EXIT DIALOG
            END IF

            #其他table進行unlock

            CALL apjm200_unlock_b("pjbg_t","4")
            CALL s_transaction_end('Y','0')

         AFTER INPUT
            #add-point:input段after input
            {<point name="input.body4.after_input"/>}
            #end add-point

         #add-point:page4自定義行為
         {<point name="input.page4.action"/>}
         #end add-point

      END INPUT


      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)

      ON ACTION controlr
         CALL cl_show_req_fields()

      ON ACTION controls
         CALL cl_set_head_visible("","AUTO")

      ON ACTION accept
         ACCEPT DIALOG

      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE
         EXIT DIALOG

      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE
         EXIT DIALOG

      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG

   END DIALOG

END FUNCTION

PRIVATE FUNCTION apjm200_lock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point

   #先刷新資料
   #CALL apjm200_b_fill()

   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "pjbd_t"

   IF ls_group.getIndexOf(ps_table,1) THEN

      OPEN apjm200_bcl USING g_enterprise,
                                       g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd_d[g_detail_idx].pjbd003

      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "apjm200_bcl"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF

   END IF

   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "pjbe_t"
   IF ls_group.getIndexOf(ps_table,1) THEN

      OPEN apjm200_bcl2 USING g_enterprise,
                                             g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd2_d[g_detail_idx].pjbe003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "apjm200_bcl2"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'3',"
   #僅鎖定自身table
   LET ls_group = "pjbf_t"
   IF ls_group.getIndexOf(ps_table,1) THEN

      OPEN apjm200_bcl3 USING g_enterprise,
                                             g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd3_d[g_detail_idx].pjbf003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "apjm200_bcl3"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'4',"
   #僅鎖定自身table
   LET ls_group = "pjbg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN

      OPEN apjm200_bcl4 USING g_enterprise,
                                             g_pjbb_m.pjbb001,g_pjbb_m.pjbb002,g_pjbd4_d[g_detail_idx].pjbg003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "apjm200_bcl4"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF

   #鎖定整組table
   #LET ls_group = "'5',"
   #僅鎖定自身table
   LET ls_group = "pjbc_t"
   IF ls_group.getIndexOf(ps_table,1) THEN

      OPEN apjm200_bcl5 USING g_enterprise,
                                             g_pjba_m.pjba001,g_pjbd5_d[g_detail_idx].pjbc002,g_pjbd5_d[g_detail_idx].pjbc003
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL
         LET g_errparam.code = SQLCA.sqlcode
         LET g_errparam.extend = "apjm200_bcl5"
         LET g_errparam.popup = TRUE
         CALL cl_err()

         RETURN FALSE
      END IF
   END IF



   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION apjm200_unlock_b(ps_table,ps_page)
   {<Local define>}
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   {</Local define>}
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point

   LET ls_group = "'1',"

   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apjm200_bcl
   END IF

   LET ls_group = "'2',"

   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apjm200_bcl2
   END IF

   LET ls_group = "'3',"

   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apjm200_bcl3
   END IF

   LET ls_group = "'4',"

   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apjm200_bcl4
   END IF

   LET ls_group = "'5',"

   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE apjm200_bcl5
   END IF


END FUNCTION

PRIVATE FUNCTION apjm200_set_entry_pjbb(p_cmd)
DEFINE p_cmd  LIKE type_t.chr1
#   IF p_cmd = 'a' THEN
#      CALL cl_set_comp_entry("pjbb002",TRUE)
#   END IF
   CALL cl_set_comp_entry("pjbb003",TRUE)
END FUNCTION

PRIVATE FUNCTION apjm200_get_pjbb002()
DEFINE l_pjaa008   LIKE pjaa_t.pjaa008
DEFINE l_pjaa009   LIKE pjaa_t.pjaa009 
DEFINE l_get_num_b   LIKE type_t.num5
DEFINE l_get_num_e   LIKE type_t.num5
DEFINE l_get_str   STRING
DEFINE l_max_num   LIKE pjbb_t.pjbb002
DEFINE l_max_pjbb003 LIKE type_t.num5
DEFINE l_sql       STRING
DEFINE l_sql1      STRING
DEFINE l_format    STRING
DEFINE l_pjbb003   STRING
DEFINE l_cut_pjbb003 STRING
   SELECT pjaa008,pjaa009 INTO l_pjaa008,l_pjaa009 FROM pjaa_t
       WHERE pjaaent = g_enterprise AND pjaa001 = g_pjba_m.pjba000
   CALL apjm200_get_pjaa009_format(l_pjaa009) RETURNING l_format
   LET l_pjbb003 = g_pjbb_m.pjbb003
   LET l_cut_pjbb003 = cl_str_replace(l_pjbb003,'-','')
   LET l_sql = "SELECT MAX(",l_cut_pjbb003,") FROM pjbb_t "   #判断上阶WBS 是否只为00...(位数根据pjaa009所设定)
   PREPARE sel_max_pjbb003 FROM l_sql
   EXECUTE sel_max_pjbb003 INTO l_max_pjbb003
   
   LET l_sql1 =  " FROM pjbb_t WHERE pjbbent = ",g_enterprise,
                "  AND pjbb001 = '",g_pjba_m.pjba001,"' AND pjbb003 = '",g_pjbb_m.pjbb003,"'"
   IF l_max_pjbb003 != 0 THEN                       #如果上阶WBS不为根节点
#      LET l_get_str = l_cut_pjbb003
#      LET l_get_num_b = l_get_str.getLength() + 1
#      IF l_pjaa008 = '2' THEN
#         LET l_get_num_b = l_get_num_b + 1
#      END IF
#      LET l_get_num_e =  l_get_num_b + l_pjaa009 - 1
      LET l_sql = "SELECT MAX(SUBSTR(pjbb002,-",l_pjaa009,")) + 1",l_sql1
      PREPARE sel_max_pjbb002_1 FROM l_sql
      EXECUTE sel_max_pjbb002_1 INTO l_max_num
      IF cl_null(l_max_num) THEN
         CALL apjm200_get_auto_no(l_pjaa009,'N') RETURNING l_max_num
      ELSE
         LET l_max_num = l_max_num USING l_format  
      END IF
      IF l_pjaa008 = '2' THEN
         LET g_pjbb_m.pjbb002 = g_pjbb_m.pjbb003,"-",l_max_num
      ELSE
         LET g_pjbb_m.pjbb002 = g_pjbb_m.pjbb003,l_max_num
      END IF
   ELSE
      LET l_sql = "SELECT MAX(pjbb002) + 1",l_sql1
      PREPARE sel_max_pjbb002_2 FROM l_sql
      EXECUTE sel_max_pjbb002_2 INTO l_max_num
      IF cl_null(l_max_num) THEN
         CALL apjm200_get_auto_no(l_pjaa009,'N') RETURNING l_max_num
      ELSE
         LET l_max_num = l_max_num USING l_format 
      END IF
      LET g_pjbb_m.pjbb002 = l_max_num
   END IF
   DISPLAY BY NAME g_pjbb_m.pjbb002
END FUNCTION

PRIVATE FUNCTION apjm200_get_pjaa009_format(p_pjaa009)
DEFINE p_pjaa009  LIKE pjaa_t.pjaa009
DEFINE l_i        LIKE type_t.num5
DEFINE r_format   STRING
   FOR l_i = 1 TO p_pjaa009
       IF l_i = 1 THEN
          LET r_format = "&"
       ELSE
          LET r_format = r_format,"&"
       END IF
   END FOR
   RETURN r_format
END FUNCTION

PRIVATE FUNCTION apjm200_get_auto_no(p_pjaa009,p_flag)
DEFINE p_pjaa009  LIKE pjaa_t.pjaa009
DEFINE p_flag     LIKE type_t.chr1  
DEFINE r_pjbb002  LIKE pjbb_t.pjbb002
DEFINE l_i        LIKE type_t.num5
   FOR l_i = 1 TO p_pjaa009
       IF l_i = 1 THEN
          LET r_pjbb002 = "0"
       ELSE
          IF l_i = p_pjaa009 AND p_flag = 'N' THEN
             LET r_pjbb002 = r_pjbb002,"1"
             EXIT FOR
          END IF
          LET r_pjbb002 = r_pjbb002,"0"
       END IF
   END FOR
   RETURN r_pjbb002
END FUNCTION

PRIVATE FUNCTION apjm200_set_no_entry_pjbb(p_cmd)
DEFINE p_cmd  LIKE type_t.chr1
#   IF p_cmd = 'u' THEN
#      CALL cl_set_comp_entry("pjbb002",FALSE)
#   END IF
   IF g_pjbb_m.pjbb002 = g_pjbb_m.pjbb003 THEN
      CALL cl_set_comp_entry("pjbb003",FALSE)
   END IF
END FUNCTION

PRIVATE FUNCTION apjm200_pjbb003_desc(p_pjbb003)
DEFINE p_pjbb003  LIKE pjbb_t.pjbb003
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_pjba_m.pjba001
   LET g_ref_fields[2] = p_pjbb003
   CALL ap_ref_array2(g_ref_fields,"SELECT pjbbl004 FROM pjbbl_t WHERE pjbblent='"||g_enterprise||"' AND pjbbl001=? AND pjbbl002=? AND pjbbl003='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_pjbb_m.pjbb003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_pjbb_m.pjbb003_desc
END FUNCTION

PRIVATE FUNCTION apjm200_open_s01(p_pjba001,p_pjba003)
TYPE type_l_pjba_m        RECORD
       pjba005 LIKE pjba_t.pjba005, 
   pjba007 LIKE pjba_t.pjba007, 
   pjba008 LIKE pjba_t.pjba008, 
   pjba008_desc LIKE type_t.chr80
       END RECORD
DEFINE l_pjba_m        type_l_pjba_m
DEFINE l_pjba_m_t    type_l_pjba_m
DEFINE g_pjba_m_t    type_g_pjba_m
   DEFINE p_pjba001       LIKE pjba_t.pjba001
   DEFINE p_pjba003       LIKE pjba_t.pjba003
   DEFINE l_pjbb   RECORD LIKE pjbb_t.*
   DEFINE l_date          LIKE type_t.dat
   DEFINE l_pjbc   RECORD LIKE pjbc_t.*
   DEFINE l_work_date_b   LIKE type_t.dat
   DEFINE l_work_date_e   LIKE type_t.dat
   DEFINE l_work_days     LIKE type_t.num5
   DEFINE l_work_hours    LIKE type_t.num5
   DEFINE l_flag          LIKE type_t.num5
   DEFINE l_para          LIKE type_t.num5  
   DEFINE lwin_curr        ui.Window
   DEFINE lfrm_curr        ui.Form
   DEFINE ls_path          STRING   
   
   OPEN WINDOW w_apjm200_s01 WITH FORM cl_ap_formpath("apj","apjm200_s01")
   CALL cl_ui_init()
   LET lwin_curr = ui.Window.getCurrent()
   LET lfrm_curr = lwin_curr.getForm()
   LET ls_path = os.Path.join(os.Path.join(FGL_GETENV("ERP"),"cfg"),"4tb")
   LET ls_path = os.Path.join(ls_path,"toolbar_lib.4tb")
   CALL lfrm_curr.loadToolBar(ls_path)

   LET g_qryparam.state = "i"
       CALL cl_set_combo_scc('pjba007','16008')
   LET l_pjba_m.pjba007 = '1'
   SELECT ooef008 INTO l_pjba_m.pjba008 FROM ooef_t
    WHERE ooefent = g_enterprise AND ooef001 = 'ALL'
   CALL apjm200_s01_pjba008_desc(l_pjba_m.pjba008) RETURNING l_pjba_m.pjba008_desc
   DISPLAY BY NAME l_pjba_m.pjba008_desc
   SELECT pjbb005 INTO l_pjba_m.pjba005 FROM pjbb_t
    WHERE pjbbent = g_enterprise AND pjbb001 = p_pjba003 AND ROWNUM = 1
      ORDER BY pjbb002 
   LET l_pjba_m_t.* = l_pjba_m.*
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
      #輸入開始
      INPUT BY NAME l_pjba_m.pjba005,l_pjba_m.pjba007,l_pjba_m.pjba008 ATTRIBUTE(WITHOUT DEFAULTS)
         
         
         BEFORE INPUT
            #add-point:單頭輸入前處理

            #end add-point
 
         #----<<pjba008>>----
         #此段落由子樣板a02產生
         AFTER FIELD pjba008
            
            #add-point:AFTER FIELD pjba008
            CALL apjm200_s01_pjba008_desc(l_pjba_m.pjba008) RETURNING l_pjba_m.pjba008_desc
            DISPLAY BY NAME l_pjba_m.pjba008_desc
            IF NOT cl_null(l_pjba_m.pjba008) THEN
               IF NOT s_aooi070_chk_exist('4',l_pjba_m.pjba008) THEN
                  LET l_pjba_m.pjba008 = l_pjba_m_t.pjba008
                  CALL apjm200_s01_pjba008_desc(l_pjba_m.pjba008) RETURNING l_pjba_m.pjba008_desc
                  DISPLAY BY NAME l_pjba_m.pjba008_desc
                  NEXT FIELD CURRENT
               END IF
            END IF

            #END add-point
            
         #----<<pjba008>>----
         #Ctrlp:input.c.pjba008
         ON ACTION controlp INFIELD pjba008
            #add-point:ON ACTION controlp INFIELD pjba008
#此段落由子樣板a07產生            
            #開窗i段
			INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
			LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = l_pjba_m.pjba008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = 4 #

            CALL q_ooal002_0()                                #呼叫開窗

            LET l_pjba_m.pjba008 = g_qryparam.return1              #將開窗取得的值回傳到變數

            DISPLAY l_pjba_m.pjba008 TO pjba008              #顯示到畫面上

            NEXT FIELD pjba008                          #返回原欄位


            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            #add-point:單頭輸入後處理

            #end add-point
            
      END INPUT
    
      #add-point:自定義input

      #end add-point
    
      #公用action
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit
         LET INT_FLAG = TRUE 
         EXIT DIALOG
   
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   CLOSE WINDOW w_apjm200_s01 
   
   #add-point:input段after input 
   IF NOT INT_FLAG THEN
      LET g_success = TRUE
      DECLARE sel_pjbb_curs CURSOR FOR  SELECT * FROM pjbb_t WHERE pjbbent = g_enterprise
                                    AND pjbb001 = p_pjba003
      FOREACH sel_pjbb_curs INTO l_pjbb.*
         IF SQLCA.SQLCODE THEN
            LET g_success = FALSE
            RETURN g_success
         END IF                                      #計算WBS 日期
         IF NOT cl_null(l_pjbb.pjbb005) AND NOT cl_null(l_pjbb.pjbb006) THEN
            LET l_date = l_pjba_m.pjba005 + (l_pjbb.pjbb006 - l_pjbb.pjbb005)
            

            
            UPDATE pjbb_t SET pjbb005 = l_pjba_m.pjba005,
                              pjbb006 = l_date
                        WHERE pjbbent = g_enterprise
                          AND pjbb001 = p_pjba001
                          AND pjbb002 = l_pjbb.pjbb002
            IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] = 0 THEN
               LET g_success = FALSE
               RETURN g_success
            END IF
            IF l_pjba_m.pjba007 MATCHES '[12]' THEN
               IF l_pjba_m.pjba007 = '1' THEN
                  LET l_flag = -1 
               ELSE
                  LET l_flag = 0 
               END IF
               LET l_work_date_b = s_date_get_latest_work_date(g_site,l_pjba_m.pjba008,'2',l_flag,l_pjba_m.pjba005)
               LET l_work_date_e = s_date_get_latest_work_date(g_site,l_pjba_m.pjba008,'2',l_flag,l_date)
               
               CALL cl_get_para(g_enterprise,g_site,'E-COM-0007') RETURNING l_para
               LET l_work_days = l_work_date_e - l_work_date_b
               LET l_work_hours =  l_work_days * l_para 
               UPDATE pjbb_t SET pjbb007 = l_work_days,
                                 pjbb008 = l_work_hours
                        WHERE pjbbent = g_enterprise
                          AND pjbb001 = p_pjba001
                          AND pjbb002 = l_pjbb.pjbb002
               IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] = 0 THEN
                  LET g_success = FALSE
                  RETURN g_success
               END IF
            END IF
         END IF         
      END FOREACH
      
      DECLARE sel_pjbc_curs CURSOR FOR                       #計算成員生效失效日期
        SELECT * FROM pjbc_t WHERE pjbcent = g_enterprise
           AND pjbc001 = p_pjba003
      FOREACH sel_pjbc_curs INTO l_pjbc.*
         IF SQLCA.SQLCODE THEN
            LET g_success = FALSE
            RETURN g_success
         END IF
         LET l_date = l_pjba_m.pjba005 + (l_pjbc.pjbc005 - l_pjbc.pjbc004)
         UPDATE pjbc_t SET pjbc004 = l_pjba_m.pjba005,
                              pjbc005 = l_date
                        WHERE pjbcent = g_enterprise
                          AND pjbc001 = p_pjba001
                          AND pjbc002 = l_pjbc.pjbc002
                          AND pjbc003 = l_pjbc.pjbc003
         IF SQLCA.SQLCODE OR SQLCA.SQLERRD[3] = 0 THEN
            LET g_success = FALSE
            RETURN g_success
         END IF
      END FOREACH        
   ELSE
      LET INT_FLAG = FALSE
      LET g_success = FALSE
   END IF
   IF g_success THEN
      UPDATE pjba_t SET pjba007 = l_pjba_m.pjba007,
                        pjba008 = l_pjba_m.pjba008
                  WHERE pjbaent = g_enterprise
                    AND pjba001 = p_pjba001
      IF SQLCA.SQLCODE THEN
         LET g_success = FALSE
      END IF
   END IF
   RETURN g_success
END FUNCTION

PRIVATE FUNCTION apjm200_pjba003_copy()
DEFINE l_sql    STRING
DEFINE l_sql1   STRING
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
DEFINE l_success   LIKE type_t.num5   #add--2015/05/08 By shiun 增加編碼功能
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba000,"','",g_pjba_m.pjba001,"','N','",g_pjba_m.pjba003,"',",
                        "pjba004,pjba005,pjba006,pjba007,pjba008,0,",
                        "'",g_pjba_m.pjbaownid,"','",g_pjba_m.pjbaowndp,"','",g_pjba_m.pjbacrtid,"','",g_pjba_m.pjbacrtdp,"',",
                        "'','",g_pjba_m.pjbamodid,"','','','','N' ",
                        ",pjba010,'N'",
                " FROM pjba_t WHERE pjbaent = ",g_enterprise," AND pjba001 = '",g_pjba_m.pjba003,"'"
   #add--2015/07/02 By shiun--(S)
   CALL s_aooi390_get_auto_no('15',g_pjba_m.pjba001) RETURNING l_success,g_pjba_m.pjba001
   IF NOT l_success THEN
      CALL s_transaction_end('N','0')
      RETURN FALSE
   END IF   
   DISPLAY BY NAME g_pjba_m.pjba001
   #add--2015/07/02 By shiun--(E)
   CALL s_aooi390_oofi_upd('15',g_pjba_m.pjba001) RETURNING l_success  #add--2015/05/08 By shiun 增加編碼功能
   LET l_sql = "INSERT INTO pjba_t(pjbaent,pjba000,pjba001,pjba002,pjba003,pjba004,pjba005,pjba006,pjba007,pjba008,pjba009,",
               "pjbaownid,pjbaowndp,pjbacrtid,pjbacrtdp,pjbacrtdt,pjbamodid,pjbamoddt,pjbacnfid,pjbacnfdt,pjbastus,pjba010,pjba011) ",l_sql1
   PREPARE ins_pjba_pre FROM l_sql
   EXECUTE ins_pjba_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   UPDATE pjba_t SET pjbacrtdt = g_pjba_m.pjbacrtdt,
                     pjbamoddt = g_pjba_m.pjbamoddt   
    WHERE pjbaent = g_enterprise AND pjba001 = g_pjba_m.pjba001
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   DELETE FROM pjbal_t WHERE pjbalent = g_enterprise AND pjbal001 = g_pjba_m.pjba001
#   IF SQLCA.SQLCODE THEN
#      RETURN FALSE
#   END IF
#   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbal002,pjbal003,pjbal004",
#                "  FROM pjbal_t WHERE pjbalent = ",g_enterprise," AND pjbal001 = '",g_pjba_m.pjba001,"'"
#   LET l_sql = "INSERT INTO pjbal_t(pjbalent,pjbal001,pjbal002,pjbal003,pjbal004) ",l_sql1
#   PREPARE ins_pjbal_pre FROM l_sql
#   EXECUTE ins_pjbal_pre
#   IF SQLCA.SQLCODE THEN
#      RETURN FALSE
#   END IF
   INITIALIZE l_var_keys TO NULL
   INITIALIZE l_field_keys TO NULL
   INITIALIZE l_vars TO NULL
   INITIALIZE l_fields TO NULL
   IF g_pjba_m.pjba001 = g_master_multi_table_t.pjbal001 AND
   g_pjba_m.pjbal003 = g_master_multi_table_t.pjbal003 AND
   g_pjba_m.pjbal004 = g_master_multi_table_t.pjbal004  THEN
   ELSE
      LET l_var_keys[01] = g_pjba_m.pjba001
      LET l_field_keys[01] = 'pjbal001'
      LET l_var_keys_bak[01] = g_master_multi_table_t.pjbal001
      LET l_var_keys[02] = g_dlang
      LET l_field_keys[02] = 'pjbal002'
      LET l_var_keys_bak[02] = g_dlang
      LET l_vars[01] = g_pjba_m.pjbal003
      LET l_fields[01] = 'pjbal003'
      LET l_vars[02] = g_pjba_m.pjbal004
      LET l_fields[02] = 'pjbal004'
      LET l_vars[03] = g_enterprise
      LET l_fields[03] = 'pjbalent'
      CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'pjbal_t')
   END IF
    
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbb002,pjbb003,pjbb004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,'0' ",
                "  FROM pjbb_t WHERE pjbbent = ",g_enterprise," AND pjbb001 = '",g_pjba_m.pjba003,"'" 
   LET l_sql = "INSERT INTO pjbb_t(pjbbent,pjbb001,pjbb002,pjbb003,pjbb004,pjbb005,pjbb006,pjbb007,pjbb008,pjbb009,pjbb010,pjbb011,pjbb012) ",l_sql1
   PREPARE ins_pjbb_pre FROM l_sql
   EXECUTE ins_pjbb_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbbl002,pjbbl003,pjbbl004,pjbbl005",
                "  FROM pjbbl_t WHERE pjbblent = ",g_enterprise," AND pjbbl001 = '",g_pjba_m.pjba003,"'"
   LET l_sql = "INSERT INTO pjbbl_t(pjbblent,pjbbl001,pjbbl002,pjbbl003,pjbbl004,pjbbl005) ",l_sql1
   PREPARE ins_pjbbl_pre FROM l_sql
   EXECUTE ins_pjbbl_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbc002,pjbc003,pjbc004,pjbc005,pjbc006 ",
                "  FROM pjbc_t WHERE pjbcent = ",g_enterprise," AND pjbc001 = '",g_pjba_m.pjba003,"'" 
   LET l_sql = "INSERT INTO pjbc_t(pjbcent,pjbc001,pjbc002,pjbc003,pjbc004,pjbc005,pjbc006) ",l_sql1
   PREPARE ins_pjbc_pre FROM l_sql
   EXECUTE ins_pjbc_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbd002,pjbd003,pjbd004,pjbd005,pjbd006,pjbd007,pjbd008,pjbd009,pjbd010",
                "  FROM pjbd_t WHERE pjbdent = ",g_enterprise," AND pjbd001 = '",g_pjba_m.pjba003,"'"
   LET l_sql = "INSERT INTO pjbd_t(pjbdent,pjbd001,pjbd002,pjbd003,pjbd004,pjbd005,pjbd006,pjbd007,pjbd008,pjbd009,pjbd010) ",l_sql1
   PREPARE ins_pjbd_pre FROM l_sql
   EXECUTE ins_pjbd_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
    
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbe002,pjbe003,pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009 ",
                "  FROM pjbe_t WHERE pjbeent = ",g_enterprise," AND pjbe001 = '",g_pjba_m.pjba003,"'"
   LET l_sql = "INSERT INTO pjbe_t(pjbeent,pjbe001,pjbe002,pjbe003,pjbe004,pjbe005,pjbe006,pjbe007,pjbe008,pjbe009) ",l_sql1
   PREPARE ins_pjbe_pre FROM l_sql
   EXECUTE ins_pjbe_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbf002,pjbf003,pjbf004,pjbf005,pjbf006,pjbf007,pjbf008 ",
                "  FROM pjbf_t WHERE pjbfent = ",g_enterprise," AND pjbf001 = '",g_pjba_m.pjba003,"'"
   LET l_sql = "INSERT INTO pjbf_t(pjbfent,pjbf001,pjbf002,pjbf003,pjbf004,pjbf005,pjbf006,pjbf007,pjbf008) ",l_sql1
   PREPARE ins_pjbf_pre FROM l_sql
   EXECUTE ins_pjbf_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   LET l_sql1 = "SELECT ",g_enterprise,",'",g_pjba_m.pjba001,"',pjbg002,pjbg003,pjbg004,pjbg005 ",
                "  FROM pjbg_t WHERE pjbgent = ",g_enterprise," AND pjbg001 = '",g_pjba_m.pjba003,"'"
   LET l_sql = "INSERT INTO pjbg_t(pjbgent,pjbg001,pjbg002,pjbg003,pjbg004,pjbg005) ",l_sql1
   PREPARE ins_pjbg_pre FROM l_sql
   EXECUTE ins_pjbg_pre
   IF SQLCA.SQLCODE THEN
      RETURN FALSE
   END IF
   
   RETURN TRUE
END FUNCTION

PRIVATE FUNCTION apjm200_s01_pjba008_desc(p_pjba008)
DEFINE p_pjba008   LIKE pjba_t.pjba008
DEFINE r_pjba008_desc LIKE type_t.chr80
    INITIALIZE g_ref_fields TO NULL
    LET g_ref_fields[1] = p_pjba008 
    CALL ap_ref_array2(g_ref_fields,"SELECT ooall004 FROM ooall_t WHERE ooallent='"||g_enterprise||"' AND ooall001='4' AND ooall002=? AND ooall003='"||g_dlang||"'","") RETURNING g_rtn_fields
    LET r_pjba008_desc = '', g_rtn_fields[1] , ''
    RETURN r_pjba008_desc
END FUNCTION

PRIVATE FUNCTION apjm200_set_act_visible()
   CALL cl_set_act_visible("delete,modify,modify_detail,insert_detail",TRUE)
END FUNCTION

PRIVATE FUNCTION apjm200_set_act_no_visible()
   IF g_pjba_m.pjbastus != 'N' THEN
      CALL cl_set_act_visible("delete,modify,modify_detail,insert_detail",FALSE)
   END IF
END FUNCTION

PRIVATE FUNCTION apjm200_pjba010_desc()
  CALL s_desc_get_acc_desc('8006',g_pjba_m.pjba010) RETURNING g_pjba_m.pjba010_desc
  DISPLAY BY NAME g_pjba_m.pjba010_desc
END FUNCTION

PRIVATE FUNCTION apjm200_pjba014_desc()
   CALL s_desc_get_acc_desc('8007',g_pjba_m.pjba014) RETURNING g_pjba_m.pjba014_desc
   DISPLAY BY NAME g_pjba_m.pjba014_desc
END FUNCTION
#判断是否有子节点并且自动展开
PRIVATE FUNCTION apjm200_exp_chk(p_pjbb002)
DEFINE p_pjbb002 LIKE pjbb_t.pjbb002
DEFINE l_n  LIKE type_t.num5
   IF cl_null(p_pjbb002) THEN
      RETURN FALSE
   END IF
   LET g_sql = "SELECT COUNT(*) FROM pjbb_t ",
               " WHERE pjbbent = '" ||g_enterprise|| "'",
               "   AND pjbb001 = '",g_pjba_m.pjba001,"'",
               "   AND pjbb002 <> pjbb003 ",
               "   AND pjbb003 = ? "
   LET l_n = 0
   PREPARE apjm200_master_chk2 FROM g_sql
   EXECUTE apjm200_master_chk2 USING p_pjbb002 INTO l_n
   FREE apjm200_master_chk2
   IF l_n > 0 THEN
      RETURN TRUE
   ELSE
      RETURN FALSE
   END IF
END FUNCTION

################################################################################
# Date & Author..: 2016/08/22 By 08734
# Modify.........:
################################################################################
PRIVATE FUNCTION apjm200_action_chk()
#add-point:action_chk段action_chk name="action_chk.action_chk"
   #160818-00017#25 add-S
   SELECT pjbastus  INTO g_pjba_m.pjbastus
     FROM pjba_t
    WHERE pjbaent = g_enterprise
      AND pjba001 = g_pjba_m.pjba001

   IF (g_action_choice="modify" OR g_action_choice="delete" OR g_action_choice="modify_detail")  THEN
     LET g_errno = NULL
     CASE g_pjba_m.pjbastus
        WHEN 'W'
           LET g_errno = 'sub-00180'
        WHEN 'X'
           LET g_errno = 'sub-00229'
        WHEN 'Y'
           LET g_errno = 'sub-00178'
        WHEN 'S'
           LET g_errno = 'sub-00230'
     END CASE

     IF NOT cl_null(g_errno) THEN
        INITIALIZE g_errparam TO NULL
        LET g_errparam.code = g_errno
        LET g_errparam.extend = g_pjba_m.pjba001
        LET g_errparam.popup = TRUE
        CALL cl_err()
        LET g_errno = NULL
        CALL apjm200_set_act_visible()
        CALL apjm200_set_act_no_visible()
        CALL apjm200_show()
        RETURN FALSE
     END IF
   END IF
   #160818-00017#25 add-E
   #end add-point
      
   RETURN TRUE
END FUNCTION

#end add-point
 
{</section>}
 
