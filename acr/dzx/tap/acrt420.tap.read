<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="acrt420" std_prog="acrt420" erpver="1.0" module="ACR" ver="3" env="s" zone="t10dev" booking="N" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.acrt420_crcedocno_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crcedocno
PRIVATE FUNCTION acrt420_crcedocno_ref(p_cmd)
   DEFINE  l_ooba002   LIKE ooba_t.ooba002
   DEFINE  p_cmd       LIKE type_t.chr1
   DEFINE  l_success   LIKE type_t.num5
   
   IF p_cmd='a' THEN
      SELECT oobxl003 INTO g_crce_m.crcedocno_desc
        FROM oobxl_t
       WHERE oobxlent = g_enterprise
         AND oobxl001 = g_crce_m.crcedocno  AND oobxl002=g_dlang     
   ELSE
      CALL s_aooi200_get_slip(g_crce_m.crcedocno) RETURNING l_success,l_ooba002
      IF l_success=false THEN
      ELSE
         SELECT oobxl003 INTO g_crce_m.crcedocno_desc
           FROM oobxl_t
          WHERE oobxlent = g_enterprise
            AND oobxl001 = l_ooba002 AND oobxl002=g_dlang
      END IF
   END IF
   DISPLAY BY NAME g_crce_m.crcedocno_desc
END FUNCTION]]>
  </point>
  <point name="function.acrt420_crcesite_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crcesite
PRIVATE FUNCTION acrt420_crcesite_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crce_m.crcesite
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_crce_m.crcesite_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_crce_m.crcesite_desc
END FUNCTION]]>
  </point>
  <point name="function.acrt420_create_crce002" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crce002
PRIVATE FUNCTION acrt420_create_crce002()
   IF cl_null(g_crce_m.crce002) THEN
      SELECT mmaq003 INTO g_crce_m.crce002 FROM mmaq_t
       WHERE mmaqent = g_enterprise AND mmaq001 = g_crce_m.crce001
      DISPLAY BY NAME g_crce_m.crce002 
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.acrt420_create_crce003" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crce003,crce004
PRIVATE FUNCTION acrt420_create_crce003()
   
   SELECT mmaf008 INTO g_crce_m.crce003 FROM mmaf_t 
    WHERE mmafent = g_enterprise AND mmaf001 = g_crce_m.crce002
    
   SELECT mmaf016 INTO g_crce_m.crce004 FROM mmaf_t,pmaa_t
    WHERE mmaf016 = pmaa001 AND (pmaa002='2' OR pmaa002='3')
      AND mmafent = g_enterprise AND mmaf001 = g_crce_m.crce002
   SELECT pmaal004 INTO g_crce_m.crce005 FROM pmaal_t
    WHERE pmaalent = g_enterprise AND pmaal001 = g_crce_m.crce004
      AND pmaal002 = g_dlang
   DISPLAY BY NAME g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005
END FUNCTION]]>
  </point>
  <point name="function.acrt420_chk_crce001_crce002" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk crce001,crce002
PRIVATE FUNCTION acrt420_chk_crce001_crce002()
   DEFINE l_cnt   LIKE type_t.num5
   
   LET l_cnt = 0
   LET g_errno = NULL
   IF NOT cl_null(g_crce_m.crce001) AND NOT cl_null(g_crce_m.crce002) THEN
      SELECT count(*) INTO l_cnt FROM mmaq_t
       WHERE mmaq001 = g_crce_m.crce001 AND mmaq003=g_crce_m.crce002
         AND mmaqent = g_enterprise
      IF l_cnt <= 0 THEN
         LET g_errno = "acr-00011"
      END IF      
   END IF
END FUNCTION]]>
  </point>
  <point name="function.acrt420_crce008_ref" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crce008
PRIVATE FUNCTION acrt420_crce008_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crce_m.crce008
   CALL ap_ref_array2(g_ref_fields,"SELECT crcbl003 FROM crcbl_t WHERE crcblent='"||g_enterprise||"' AND crcbl001=? AND crcbl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_crce_m.crce008_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_crce_m.crce008_desc
   SELECT crcb004 INTO g_crce_m.crcb004 FROM crcb_t
    WHERE crcbent = g_enterprise AND crcb001 = g_crce_m.crce008
   DISPLAY BY NAME g_crce_m.crcb004  
END FUNCTION]]>
  </point>
  <point name="function.acrt420_create_crce008" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#create crcf_t,crcg_t
PRIVATE FUNCTION acrt420_create_crce008()
   DEFINE l_sql   STRING
   LET g_errno = NULL
   DELETE FROM crcf_t WHERE crcfent=g_enterprise AND crcfdocno=g_crce_m.crcedocno
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF
   DELETE FROM crcg_t WHERE crcgent = g_enterprise AND crcgdocno=g_crce_m.crcedocno
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF
   LET l_sql=" INSERT INTO crcf_t (crcfent,crcfunit,crcfsite,crcfdocno,crcf001,crcf002,crcf003)",
             " SELECT ",g_enterprise,",'",g_crce_m.crceunit,"','",g_crce_m.crcesite,"','",g_crce_m.crcedocno,"',crcc002,0,''",
             "   FROM crcc_t ",
             "  WHERE crccent=",g_enterprise," AND crcc001='",g_crce_m.crce008,"' AND crccstus='Y'"
   PREPARE  l_sql_crcc_pre FROM l_sql
   LET l_sql = " INSERT INTO crcg_t(crcgent,crcgunit,crcgsite,crcgdocno,crcg001,crcg002,crcg003)",
               " SELECT ",g_enterprise,",'",g_crce_m.crceunit,"','",g_crce_m.crcesite,"','",g_crce_m.crcedocno,"',crcd002,crcd003,'N'",
               "   FROM crcd_t ",
               "  WHERE crcdent=",g_enterprise," AND crcd001='",g_crce_m.crce008,"' AND crcdstus='Y'"               
   PREPARE  l_sql_crcd_pre FROM l_sql
   EXECUTE l_sql_crcc_pre
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF   
   EXECUTE l_sql_crcd_pre
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.acrt420_crcf001_ref" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crcf001
PRIVATE FUNCTION acrt420_crcf001_ref()
   SELECT crcc003,crcc004,crcc005,crcc006
     INTO g_crcf_d[l_ac].crcc003,g_crcf_d[l_ac].crcc004,g_crcf_d[l_ac].crcc005,g_crcf_d[l_ac].crcc006
     FROM crcc_t
    WHERE crcc001 = g_crce_m.crce008 AND crcc002 = g_crcf_d[l_ac].crcf001
      AND crccent = g_enterprise
   DISPLAY g_crcf_d[l_ac].crcc003,g_crcf_d[l_ac].crcc004,g_crcf_d[l_ac].crcc005,g_crcf_d[l_ac].crcc006
        TO s_detail1[l_ac].crcc003,s_detail1[l_ac].crcc004,s_detail1[l_ac].crcc005,s_detail1[l_ac].crcc006   
END FUNCTION]]>
  </point>
  <point name="function.acrt420_null_crcf001" order="9" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#null crcf001
PRIVATE FUNCTION acrt420_null_crcf001()
   LET g_crcf_d[l_ac].crcc003 = NULL
   LET g_crcf_d[l_ac].crcc004 = NULL
   LET g_crcf_d[l_ac].crcc005 = NULL
   LET g_crcf_d[l_ac].crcc006 = NULL
   DISPLAY g_crcf_d[l_ac].crcc003,g_crcf_d[l_ac].crcc004,g_crcf_d[l_ac].crcc005,g_crcf_d[l_ac].crcc006
        TO s_detail1[l_ac].crcc003,s_detail1[l_ac].crcc004,s_detail1[l_ac].crcc005,s_detail1[l_ac].crcc006  
END FUNCTION]]>
  </point>
  <point name="function.acrt420_ins_crcg" order="10" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#insert crcg_t
PRIVATE FUNCTION acrt420_ins_crcg()
   DEFINE l_sql   STRING
   LET g_errno = NULL
   
   DELETE FROM crcg_t WHERE crcgent = g_enterprise AND crcgdocno=g_crce_m.crcedocno
      AND crcg001 = g_crcf_d[g_detail_idx].crcf001
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF
  
   LET l_sql = " INSERT INTO crcg_t(crcgent,crcgunit,crcgsite,crcgdocno,crcg001,crcg002,crcg003)",
               " SELECT ",g_enterprise,",'",g_crce_m.crceunit,"','",g_crce_m.crcesite,"','",g_crce_m.crcedocno,"',crcd002,crcd003,'N'",
               "   FROM crcd_t ",
               "  WHERE crcdent=",g_enterprise," AND crcd001='",g_crce_m.crce008,"' AND crcd002='",g_crcf_d[g_detail_idx].crcf001,"' AND crcdstus='Y'"               
   PREPARE  l_sql_crcd_pre2 FROM l_sql
      
   EXECUTE l_sql_crcd_pre2
   IF SQLCA.sqlcode THEN
      LET g_errno = SQLCA.sqlcode
      RETURN
   END IF 
END FUNCTION]]>
  </point>
  <point name="function.acrt420_crcg002_ref" order="11" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crcd004,crcd005
PRIVATE FUNCTION acrt420_crcg002_ref()
   SELECT crcd004,crcd005 INTO g_crcf2_d[l_ac].crcd004,g_crcf2_d[l_ac].crcd005
     FROM crcd_t
    WHERE crcdent = g_enterprise AND crcd001=g_crce_m.crce008 AND crcd002 = g_crcf_d[g_detail_idx].crcf001
      AND crcd003 = g_crcf2_d[l_ac].crcg002
   DISPLAY g_crcf2_d[l_ac].crcd004,g_crcf2_d[l_ac].crcd005
        TO s_detail2[l_ac].crcd004, s_detail2[l_ac].crcd005  
END FUNCTION]]>
  </point>
  <point name="function.acrt420_chk_crcg003" order="12" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk crcg003
PRIVATE FUNCTION acrt420_chk_crcg003()
   DEFINE l_cnt  LIKE type_t.num5
   DEFINE l_crcf002 LIKE crcf_t.crcf002
   
   LET l_crcf002 = 0
   LET l_cnt = 0
   LET g_errno = NULL
   IF g_crcf_d[g_detail_idx].crcc005='S' AND g_crcf2_d[l_ac].crcg003='Y' THEN
      SELECT count(*) INTO l_cnt FROM crcg_t 
       WHERE crcgent = g_enterprise AND crcgdocno = g_crce_m.crcedocno
         AND crcg001 = g_crcf_d[g_detail_idx].crcf001 AND crcg003='Y'
      IF l_cnt >0 THEN
         LET g_errno = "acr-00032"
      END IF      
   END IF
   IF cl_null(g_errno) THEN
      IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006='1' AND g_crcf2_d[l_ac].crcg003='Y' THEN
         SELECT sum(crcd005) INTO l_crcf002
           FROM crcd_t,crcg_t
          WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
            AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
            AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
            AND crcg003 = 'Y'
         IF cl_null(l_crcf002) THEN LET l_crcf002=0 END IF   
         LET l_crcf002 = l_crcf002+g_crcf2_d[l_ac].crcd005
         IF g_crcf_d[g_detail_idx].crcc004 < l_crcf002 THEN
            LET g_errno = "acr-00036"
         END IF         
      END IF   
   END IF
END FUNCTION]]>
  </point>
  <point name="function.acrt420_upd_crcg003" order="13" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#update crcf003,crce009
PRIVATE FUNCTION acrt420_upd_crcg003()
   DEFINE l_crcf002  LIKE crcf_t.crcf002
   DEFINE l_cnt      LIKE type_t.num5
   let g_errno = null
   IF g_crcf_d[g_detail_idx].crcc005='S' THEN
      SELECT crcd005 INTO l_crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg002 = g_crcf2_d_t.crcg002
      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
         LET g_crcf_d[g_detail_idx].crcf002 = g_crcf2_d[l_ac].crcd005
      ELSE
         LET g_crcf_d[g_detail_idx].crcf002 = 0      
      END IF
      
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '1' THEN
      SELECT sum(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y'
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '2' THEN
      SELECT avg(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y'
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '3' THEN
      SELECT max(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y'
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '4' THEN
      SELECT min(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y'
   END IF
   
   IF g_crcf_d[g_detail_idx].crcc005<>'M' AND g_crcf_d[g_detail_idx].crcc005<>'Q' THEN
      SELECT crcd005 INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y'
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='Q' THEN
      SELECT sum(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y'
   END IF
   IF cl_null(g_crcf_d[g_detail_idx].crcf002) THEN
      LET g_crcf_d[g_detail_idx].crcf002 = 0
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '0' THEN
   ELSE   
      UPDATE crcf_t SET crcf002 = g_crcf_d[g_detail_idx].crcf002
       WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
         AND crcf001 =  g_crcf_d[g_detail_idx].crcf001
      IF sqlca.sqlcode THEN
         LET g_errno = sqlca.sqlcode
         RETURN
      END IF
   END IF   
   SELECT sum(crcf002) INTO g_crce_m.crce009
     FROM crcf_t
    WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
   
   IF cl_null(g_crce_m.crce009) THEN
      LET g_crce_m.crce009 = 0
   END IF   
   UPDATE crce_t SET crce009 = g_crce_m.crce009
    WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
   IF sqlca.sqlcode THEN
      LET g_errno = sqlca.sqlcode
      RETURN
   END IF
   DISPLAY g_crcf_d[g_detail_idx].crcf002 TO s_detail1[g_detail_idx].crcf002
   DISPLAY BY NAME g_crce_m.crce009   
END FUNCTION]]>
  </point>
  <point name="function.acrt420_upd_crce009" order="14" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
##upd crce009
PRIVATE FUNCTION acrt420_upd_crce009()
   
   LET g_errno = NULL
   SELECT sum(crcf002) INTO g_crce_m.crce009
     FROM crcf_t
    WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
   IF cl_null(g_crce_m.crce009) THEN
      LET g_crce_m.crce009 = 0
   END IF   
   UPDATE crce_t SET crce009 = g_crce_m.crce009
    WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
   IF sqlca.sqlcode THEN
      LET g_errno = sqlca.sqlcode
      RETURN
   END IF
   DISPLAY BY NAME g_crce_m.crce009 
   
END FUNCTION]]>
  </point>
  <point name="function.acrt420_display_crcg003" order="15" ver="3" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
############display 得分##########################
PRIVATE FUNCTION acrt420_display_crcg003()
   DEFINE l_crcf002  LIKE crcf_t.crcf002
   DEFINE l_cnt      LIKE type_t.num5
   LET g_errno = NULL
#   IF g_crcf_d[g_detail_idx].crcc005='S' THEN
#      SELECT crcd005 INTO l_crcf002
#        FROM crcd_t,crcg_t
#       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
#         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
#         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
#         AND crcg002=g_crcf2_d_t.crcg002
#      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
#         LET g_crcf_d[g_detail_idx].crcf002 = g_crcf2_d[l_ac].crcd005
#      ELSE
#         LET g_crcf_d[g_detail_idx].crcf002 = 0      
#      END IF
#      
#   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '1' THEN
      SELECT sum(crcd005) INTO l_crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y' AND crcg002<>g_crcf2_d_t.crcg002
      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
         LET l_crcf002 = l_crcf002+g_crcf2_d[l_ac].crcd005
      END IF
      LET g_crcf_d[g_detail_idx].crcf002 = l_crcf002
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '2' THEN
      SELECT sum(crcd005),count(*) INTO l_crcf002,l_cnt
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y' AND crcg002<>g_crcf2_d_t.crcg002
      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
         LET l_crcf002 = l_crcf002+g_crcf2_d[l_ac].crcd005
         LET l_cnt=l_cnt+1
      END IF
      LET g_crcf_d[g_detail_idx].crcf002=l_crcf002/l_cnt
#      SELECT avg(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
#        FROM crcd_t,crcg_t
#       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
#         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
#         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
#         AND crcg003 = 'Y'
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '3' THEN
      SELECT max(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y' AND crcg002<>g_crcf2_d_t.crcg002
      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
         IF g_crcf2_d[l_ac].crcd005> g_crcf_d[g_detail_idx].crcf002 THEN
            LET g_crcf_d[g_detail_idx].crcf002 = g_crcf2_d[l_ac].crcd005
         END IF
      END IF
            
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '4' THEN
      SELECT min(crcd005) INTO g_crcf_d[g_detail_idx].crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y' AND crcg002<>g_crcf2_d_t.crcg002
      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
         IF g_crcf2_d[l_ac].crcd005< g_crcf_d[g_detail_idx].crcf002 THEN
            LET g_crcf_d[g_detail_idx].crcf002 = g_crcf2_d[l_ac].crcd005
         END IF
      END IF
   END IF
   
   IF g_crcf_d[g_detail_idx].crcc005<>'M' AND g_crcf_d[g_detail_idx].crcc005<>'Q' THEN
#      SELECT crcd005 INTO g_crcf_d[g_detail_idx].crcf002
#        FROM crcd_t,crcg_t
#       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
#         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
#         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
#         AND crcg003 = 'Y'
      SELECT crcd005 INTO l_crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg002=g_crcf2_d_t.crcg002
      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
         LET g_crcf_d[g_detail_idx].crcf002 = g_crcf2_d[l_ac].crcd005
      ELSE
         LET g_crcf_d[g_detail_idx].crcf002 = 0      
      END IF
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='Q' THEN
      SELECT sum(crcd005) INTO l_crcf002
        FROM crcd_t,crcg_t
       WHERE crcdent = crcgent AND crcd002=crcg001 AND crcd003=crcg002
         AND crcd001 = g_crce_m.crce008 AND crcgdocno=g_crce_m.crcedocno
         AND crcdent = g_enterprise AND crcg001 = g_crcf_d[g_detail_idx].crcf001
         AND crcg003 = 'Y' AND crcg002<>g_crcf2_d_t.crcg002
      IF g_crcf2_d[l_ac].crcg003='Y'  THEN
         LET l_crcf002 = l_crcf002+g_crcf2_d[l_ac].crcd005
      END IF
      LET g_crcf_d[g_detail_idx].crcf002 = l_crcf002
   END IF
   IF cl_null(g_crcf_d[g_detail_idx].crcf002) THEN
      LET g_crcf_d[g_detail_idx].crcf002 = 0
   END IF
   IF g_crcf_d[g_detail_idx].crcc005='M' AND g_crcf_d[g_detail_idx].crcc006 = '0' THEN
   ELSE   
#      UPDATE crcf_t SET crcf002 = g_crcf_d[g_detail_idx].crcf002
#       WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
#         AND crcf001 =  g_crcf_d[g_detail_idx].crcf001
#      IF sqlca.sqlcode THEN
#         LET g_errno = sqlca.sqlcode
#         RETURN
#      END IF
   END IF   
   SELECT sum(crcf002) INTO g_crce_m.crce009
     FROM crcf_t
    WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
      AND crcf001<>g_crcf_d[g_detail_idx].crcf001
   
   IF cl_null(g_crce_m.crce009) THEN
      LET g_crce_m.crce009 = 0
   END IF   
#   UPDATE crce_t SET crce009 = g_crce_m.crce009
#    WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
#   IF sqlca.sqlcode THEN
#      LET g_errno = sqlca.sqlcode
#      RETURN
#   END IF
   LET g_crce_m.crce009 = g_crce_m.crce009+g_crcf_d[g_detail_idx].crcf002
   DISPLAY g_crcf_d[g_detail_idx].crcf002 TO s_detail1[g_detail_idx].crcf002
   DISPLAY BY NAME g_crce_m.crce009  
END FUNCTION]]>
  </point>
  <point name="b_fill.fill" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[         CALL acrt420_crcf001_ref()]]>
  </point>
  <point name="b_fill2.fill2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL acrt420_crcg002_ref()]]>
  </point>
  <point name="construct.c.crce001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmaq001_2()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crce001  #顯示到畫面上
            NEXT FIELD crce001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crce002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_mmaf001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crce002  #顯示到畫面上
            NEXT FIELD crce002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crce004" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_pmaa001_6()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crce004  #顯示到畫面上
            NEXT FIELD crce004                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crce008" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_crcb001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crce008  #顯示到畫面上
            NEXT FIELD crce008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcecnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcecnfid  #顯示到畫面上
            NEXT FIELD crcecnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcecrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcecrtdp  #顯示到畫面上
            NEXT FIELD crcecrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcecrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcecrtid  #顯示到畫面上
            NEXT FIELD crcecrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcedocno" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_crcedocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcedocno  #顯示到畫面上
            NEXT FIELD crcedocno                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcemodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcemodid  #顯示到畫面上
            NEXT FIELD crcemodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crceowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crceowndp  #顯示到畫面上
            NEXT FIELD crceowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crceownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crceownid  #顯示到畫面上
            NEXT FIELD crceownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1=g_site
            LET g_qryparam.arg2='2'
            CALL q_ooed004_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcesite  #顯示到畫面上
            NEXT FIELD crcesite                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crceunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooed004_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crceunit  #顯示到畫面上
            NEXT FIELD crceunit                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.crcf001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_crcc002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcf001  #顯示到畫面上
            NEXT FIELD crcf001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.crcg002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_crcd003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcg002  #顯示到畫面上
            NEXT FIELD crcg002                     #返回原欄位
    

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_crce_m.crcestus = 'Y' THEN
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   ELSE
      IF g_crce_m.crcestus = 'X' THEN
         CALL cl_set_act_visible("delete", FALSE)
         CALL cl_set_act_visible("modify,modify_detail", TRUE)
      ELSE
         CALL cl_set_act_visible("modify,delete,modify_detail", TRUE)
      END IF   
   END IF
   IF NOT cl_null(g_crce_m.crce008) THEN
      CALL cl_set_act_visible("modify_detail", TRUE)
   ELSE
      CALL cl_set_act_visible("modify_detail", false) 
   END IF
      ]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[DEFINE g_ooef004             LIKE ooef_t.ooef004
DEFINE l_flag                LIKE type_t.chr1]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('crcc005','6057')
   CALL cl_set_combo_scc('crcc006','6058')]]>
  </point>
  <point name="input.a.crce001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crce_m.crce001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce001 != g_crce_m_t.crce001 or g_crce_m_t.crce001 is null )) THEN 
                   #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  LET g_crce_m.crce003 = NULL
                  LET g_crce_m.crce004 = NULL
                  LET g_crce_m.crce005 = NULL
                  DISPLAY BY NAME g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_crce_m.crce001
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_mmaq001") THEN 
                  ELSE
                     #檢查失敗時後續處理
                     let g_crce_m.crce001 = g_crce_m_t.crce001
                     LET g_crce_m.crce003 = g_crce_m_t.crce003
                     LET g_crce_m.crce004 = g_crce_m_t.crce004
                     LET g_crce_m.crce005 = g_crce_m_t.crce005
                     DISPLAY BY NAME g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005
                     NEXT FIELD CURRENT
                  END IF
                  CALL acrt420_chk_crce001_crce002()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_crce_m.crce001,g_errno,1)
                     let g_crce_m.crce001 = g_crce_m_t.crce001
                     LET g_crce_m.crce003 = g_crce_m_t.crce003
                     LET g_crce_m.crce004 = g_crce_m_t.crce004
                     LET g_crce_m.crce005 = g_crce_m_t.crce005
                     DISPLAY BY NAME g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005
                     NEXT FIELD CURRENT
                  END IF
                  CALL acrt420_create_crce002()
                  CALL acrt420_create_crce003()  
               END IF
            END IF 

]]>
  </point>
  <point name="input.a.crce002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crce_m.crce002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce002 != g_crce_m_t.crce002 OR g_crce_m_t.crce002 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  LET g_crce_m.crce003 = NULL
                  LET g_crce_m.crce004 = NULL
                  LET g_crce_m.crce005 = NULL
                  DISPLAY BY NAME g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1=g_crce_m.crce002
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_mmaf001") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_crce_m.crce002 = g_crce_m_t.crce002
                     LET g_crce_m.crce003 = g_crce_m_t.crce003
                     LET g_crce_m.crce004 = g_crce_m_t.crce004
                     LET g_crce_m.crce005 = g_crce_m_t.crce005
                     DISPLAY BY NAME g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005
                     NEXT FIELD CURRENT
                  END IF
                  CALL acrt420_chk_crce001_crce002()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_crce_m.crce002,g_errno,1)
                     LET g_crce_m.crce002 = g_crce_m_t.crce002
                     LET g_crce_m.crce003 = g_crce_m_t.crce003
                     LET g_crce_m.crce004 = g_crce_m_t.crce004
                     LET g_crce_m.crce005 = g_crce_m_t.crce005
                     DISPLAY BY NAME g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005
                     NEXT FIELD CURRENT
                  END IF
                  CALL acrt420_create_crce003()  
               END IF
            END IF 

]]>
  </point>
  <point name="input.a.crce004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crce_m.crce004) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce002 != g_crce_m_t.crce002 OR g_crce_m_t.crce002 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  LET g_crce_m.crce005 = NULL
                  DISPLAY BY NAME g_crce_m.crce005
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1=g_crce_m.crce004
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_pmaa001_3") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_crce_m.crce004 = g_crce_m_t.crce004
                     LET g_crce_m.crce005 = g_crce_m_t.crce005
                     DISPLAY BY NAME g_crce_m.crce005
                     NEXT FIELD CURRENT
                  END IF
                  SELECT pmaal004 INTO g_crce_m.crce005 FROM pmaal_t
                   WHERE pmaalent = g_enterprise AND pmaal001 = g_crce_m.crce004 
                     AND pmaal002 = g_dlang
                  DISPLAY BY NAME g_crce_m.crce005   
               END IF

            END IF 

]]>
  </point>
  <point name="input.a.crce008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crce_m.crce008_desc = NULL
            LET g_crce_m.crcb004 = NULL
            DISPLAY BY NAME g_crce_m.crce008_desc,g_crce_m.crcb004
            IF NOT cl_null(g_crce_m.crce008) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce008 != g_crce_m_t.crce008 OR g_crce_m_t.crce008 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_crce_m.crce008
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_crcb001") THEN

                  ELSE
                     #檢查失敗時後續處理
                     LET g_crce_m.crce008 = g_crce_m_t.crce008
                     CALL acrt420_crce008_ref()
                     NEXT FIELD CURRENT
                  END IF
                  
               END IF

            END IF 
            CALL acrt420_crce008_ref()
            ]]>
  </point>
  <point name="input.a.crcedocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            LET g_crce_m.crcedocno_desc = NULL
            DISPLAY BY NAME g_crce_m.crcedocno_desc
            IF  NOT cl_null(g_crce_m.crcedocno) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crcedocno != g_crcedocno_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crce_t WHERE "||"crceent = '" ||g_enterprise|| "' AND "||"crcedocno = '"||g_crce_m.crcedocno ||"'",'std-00004',0) THEN 
                     LET g_crce_m.crcedocno = g_crce_m_t.crcedocno
                     CALL acrt420_crcedocno_ref(p_cmd)
                     NEXT FIELD CURRENT
                  END IF
                  CALL s_aooi200_chk_slip(g_site,g_ooef004,g_crce_m.crcedocno,g_prog) RETURNING l_success
                  IF NOT l_success THEN
                     LET g_crce_m.crcedocno = g_crce_m_t.crcedocno
                     CALL acrt420_crcedocno_ref(p_cmd)
                     NEXT FIELD crcedocno
                  END IF
               END IF
            END IF
            CALL acrt420_crcedocno_ref(p_cmd)

]]>
  </point>
  <point name="input.a.crcesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crce_m.crcesite_desc = NULL
            DISPLAY BY NAME g_crce_m.crcesite_desc
            IF NOT cl_null(g_crce_m.crcesite) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crcesite != g_crce_m_t.crcesite OR g_crce_m_t.crcesite IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_crce_m.crcesite
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooed004") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_crce_m.crcesite = g_crce_m_t.crcesite
                     CALL acrt420_crcesite_ref()
                     NEXT FIELD CURRENT
                  END IF
            
               END IF
            END IF
            CALL acrt420_crcesite_ref()             
            
]]>
  </point>
  <point name="input.a.crceunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crce_m.crceunit) THEN 
#此段落由子樣板a19產生
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               
               #設定g_chkparam.*的參數
               LET g_chkparam.arg2 = '參數2'
               LET g_chkparam.arg3 = ''
                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_ooed004") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
               ELSE
                  #檢查失敗時後續處理
                  NEXT FIELD CURRENT
               END IF
            

            END IF 

]]>
  </point>
  <point name="input.a.page1.crcf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[             
            #此段落由子樣板a05產生
            CALL acrt420_null_crcf001()
            IF  g_crce_m.crcedocno IS NOT NULL AND g_crcf_d[g_detail_idx].crcf001 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crce_m.crcedocno != g_crcedocno_t OR g_crcf_d[g_detail_idx].crcf001 != g_crcf_d_t.crcf001)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crcf_t WHERE "||"crcfent = '" ||g_enterprise|| "' AND "||"crcfdocno = '"||g_crce_m.crcedocno ||"' AND "|| "crcf001 = '"||g_crcf_d[g_detail_idx].crcf001 ||"'",'std-00004',0) THEN 
                     LET g_crcf_d[l_ac].crcf001 = g_crcf_d_t.crcf001
                     CALL acrt420_crcf001_ref()
                     NEXT FIELD CURRENT
                  END IF
                  IF NOT cl_null(g_crcf_d[l_ac].crcf001) THEN 
                     #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                     INITIALIZE g_chkparam.* TO NULL
               
                     #設定g_chkparam.*的參數
                     LET g_chkparam.arg1 = g_crcf_d[l_ac].crcf001
                     LET g_chkparam.arg2 = g_crce_m.crce008
                  
                     #呼叫檢查存在並帶值的library
                     IF cl_chk_exist("v_crcc002") THEN
                        #檢查成功時後續處理
                     ELSE
                       #檢查失敗時後續處理
                        LET g_crcf_d[l_ac].crcf001 = g_crcf_d_t.crcf001
                        CALL acrt420_crcf001_ref()
                        NEXT FIELD CURRENT
                     END IF
            
                  END IF
               END IF
            END IF
            CALL acrt420_crcf001_ref() 
            IF g_crcf_d[l_ac].crcc005='M' THEN
               CALL cl_set_comp_required("crcf002",TRUE)
            ELSE
               CALL cl_set_comp_required("crcf002",FALSE)
            END IF
            IF g_crcf_d[l_ac].crcc005='Q' THEN
               CALL cl_set_comp_required("crcf003",TRUE)
            ELSE
               CALL cl_set_comp_required("crcf003",FALSE)
            END IF]]>
  </point>
  <point name="input.a.page1.crcf002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_crcf_d[l_ac].crcf002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_crcf_d[l_ac].crcf002 != g_crcf_d_t.crcf002 OR g_crcf_d_t.crcf002 IS null)) THEN 
                  
                  IF NOT cl_null(g_crcf_d[l_ac].crcf002) THEN 
                     IF g_crcf_d[l_ac].crcf002>g_crcf_d[l_ac].crcc004 THEN
                        CALL cl_err(g_crcf_d[l_ac].crcf002,"acr-00036",1)
                        LET g_crcf_d[l_ac].crcf002 = g_crcf_d_t.crcf002
                        NEXT FIELD crcf002
                     END IF
            
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page1.crcf003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            IF g_crcf_d[l_ac].crcc005='M' THEN
#               IF cl_null(g_crcf_d[l_ac].crcf003) THEN
#                  CALL cl_err(g_crcf_d[l_ac].crcc005,"acr-00038",1)
#                  NEXT FIELD crcf003
#               END IF
#            END IF]]>
  </point>
  <point name="input.a.page2.crcg002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_crce_m.crcedocno IS NOT NULL AND g_crcf_d[g_detail_idx].crcf001 IS NOT NULL AND g_crcf2_d[g_detail_idx2].crcg002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crce_m.crcedocno != g_crcedocno_t OR g_crcf_d[g_detail_idx].crcf001 != g_crcf_d[g_detail_idx].crcf001 OR g_crcf2_d[g_detail_idx2].crcg002 != g_crcf2_d_t.crcg002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crcg_t WHERE "||"crcgent = '" ||g_enterprise|| "' AND "||"crcgdocno = '"||g_crce_m.crcedocno ||"' AND "|| "crcg001 = '"||g_crcf_d[g_detail_idx].crcf001 ||"' AND "|| "crcg002 = '"||g_crcf2_d[g_detail_idx2].crcg002 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.crcg003" order="" ver="3" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crcf2_d[l_ac].crcg003) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crcf2_d[l_ac].crcg003 != g_crcf2_d_t.crcg003 OR g_crcf2_d_t.crcg003 IS null)) THEN 
                  IF g_crcf_d[g_detail_idx].crcc005='S' AND g_crcf2_d[l_ac].crcg003='Y' THEN
                     SELECT count(*) INTO l_cnt FROM crcg_t 
                      WHERE crcgent = g_enterprise AND crcgdocno = g_crce_m.crcedocno
                        AND crcg001 = g_crcf_d[g_detail_idx].crcf001 AND crcg003='Y'
                     IF l_cnt >0 THEN
                        LET g_crcf2_d[l_ac].crcg003 = g_crcf2_d_t.crcg003
                        NEXT FIELD crcg003
                     END IF      
                  END IF
                  CALL acrt420_chk_crcg003()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_crcf2_d[l_ac].crcg003,g_errno,1)
                     LET g_crcf2_d[l_ac].crcg003 = g_crcf2_d_t.crcg003
                     NEXT FIELD crcg003
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_errshow = 1
   SELECT ooef004 INTO g_ooef004 FROM ooef_t WHERE ooefent = g_enterprise AND ooef001 = g_crce_m.crcesite]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  CALL acrt420_upd_crce009()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err("crcf_t",g_errno,1)  
                     CALL s_transaction_end('N','0')                    
                     CANCEL DELETE
                     RETURN
                  END IF
                  DELETE FROM crcg_t WHERE crcgent = g_enterprise AND crcgdocno=g_crce_m.crcedocno
                     AND crcg001 = g_crcf_d[g_detail_idx].crcf001
                  IF SQLCA.sqlcode THEN
                     CALL cl_err("crcf_t",SQLCA.sqlcode,1)
                     CALL s_transaction_end('N','0')
                     CANCEL DELETE
                     RETURN
                  END IF]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL acrt420_upd_crce009()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err("crcf_t",g_errno,1)  
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
                  RETURN
               END IF
               CALL acrt420_ins_crcg()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err("crcf_t",g_errno,1)  
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
                  RETURN
               END IF]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF SQLCA.sqlcode OR SQLCA.sqlerrd[3] = 0 THEN
               ELSE
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crcf_d[l_ac].crcf002 != g_crcf_d_t.crcf002 OR g_crcf_d_t.crcf002 IS null)) THEN 
                     CALL acrt420_upd_crce009()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err("crcf_t",SQLCA.sqlcode,1)
                        LET g_crcf_d[l_ac].* = g_crcf_d_t.*                     
                        CALL s_transaction_end('N','0')
                        RETURN
                     END IF
                  END IF
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_crcf_d[g_detail_idx].crcf001 != g_crcf_d_t.crcf001 OR g_crcf_d_t.crcf001 IS null)) THEN
                     CALL acrt420_ins_crcg()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err("crcf_t",SQLCA.sqlcode,1)
                        LET g_crcf_d[l_ac].* = g_crcf_d_t.*                     
                        CALL s_transaction_end('N','0')
                        RETURN
                     END IF
                  END IF
               END IF   ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crcf_d[l_ac].crcfunit = g_crce_m.crceunit
            LET g_crcf_d[l_ac].crcfsite = g_crce_m.crcesite]]>
  </point>
  <point name="input.body.before_row" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_crcf_d[l_ac].crcc005='M'  THEN
               CALL cl_set_comp_required("crcf002",TRUE)
            ELSE
               CALL cl_set_comp_required("crcf002",FALSE)
            END IF
            IF g_crcf_d[l_ac].crcc005='Q' THEN
               CALL cl_set_comp_required("crcf003",TRUE)
            ELSE
               CALL cl_set_comp_required("crcf003",FALSE)
            END IF   ]]>
  </point>
  <point name="input.body.before_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_crce_m.crce008) THEN
               NEXT FIELD crce001
            END IF]]>
  </point>
  <point name="input.body2.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF SQLCA.sqlerrd[3] = 0 OR SQLCA.sqlcode THEN
               ELSE
                  IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crcf2_d[l_ac].crcg003 != g_crcf2_d_t.crcg003 OR g_crcf2_d_t.crcg003 IS null)) THEN 
                     CALL acrt420_upd_crcg003()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err("crcg_t",g_errno,1)  
                        CALL s_transaction_end('N','0')
                        LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
                     END IF
                  END IF
               END IF]]>
  </point>
  <point name="input.body2.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[#            IF cl_null(g_crce_m.crce008) THEN
#               NEXT FIELD crce001
#            END IF]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crcf2_d[l_ac].crcgunit = g_crce_m.crceunit
            LET g_crcf2_d[l_ac].crcgsite = g_crce_m.crcesite]]>
  </point>
  <point name="input.body2.before_row2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF cl_null(g_crce_m.crce008) THEN
               NEXT FIELD crce001
            END IF]]>
  </point>
  <point name="input.c.crce001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crce_m.crce001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            IF NOT cl_null(g_crce_m.crce002) THEN
               LET g_qryparam.where="mmaq003='",g_crce_m.crce002,"' "
            END IF
            
            CALL q_mmaq001_2()                                #呼叫開窗

            LET g_crce_m.crce001 = g_qryparam.return1              

            DISPLAY g_crce_m.crce001 TO crce001              #
            IF p_cmd = 'a'  THEN
               CALL acrt420_create_crce002()
               CALL acrt420_create_crce003()
            END IF
            NEXT FIELD crce001                          #返回原欄位

]]>
  </point>
  <point name="input.c.crce002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crce_m.crce002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_mmaf001_1()                                #呼叫開窗

            LET g_crce_m.crce002 = g_qryparam.return1              

            DISPLAY g_crce_m.crce002 TO crce002              #
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce003 != g_crce_m_t.crce003 OR g_crce_m_t.crce003 IS NULL )) THEN
               CALL acrt420_create_crce003()
            END IF
            NEXT FIELD crce002                          #返回原欄位

]]>
  </point>
  <point name="input.c.crce004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crce_m.crce004             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_pmaa001_6()                                #呼叫開窗

            LET g_crce_m.crce004 = g_qryparam.return1              

            DISPLAY g_crce_m.crce004 TO crce004              #
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce004 != g_crce_m_t.crce004 OR g_crce_m_t.crce004 IS NULL )) THEN
               SELECT pmaal004 INTO g_crce_m.crce005 FROM pmaal_t
                WHERE pmaalent = g_enterprise AND pmaal001 = g_crce_m.crce004 
                  AND pmaal002 = g_dlang
               DISPLAY BY NAME g_crce_m.crce005
            END IF
            NEXT FIELD crce004                          #返回原欄位

]]>
  </point>
  <point name="input.c.crce008" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crce_m.crce008             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_crcb001()                                #呼叫開窗

            LET g_crce_m.crce008 = g_qryparam.return1              

            DISPLAY g_crce_m.crce008 TO crce008              #
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce008 != g_crce_m_t.crce008 OR g_crce_m_t.crce008 IS NULL )) THEN
               CALL acrt420_crce008_ref()
            END IF
            NEXT FIELD crce008                          #返回原欄位

]]>
  </point>
  <point name="input.c.crcedocno" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crce_m.crcedocno             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_ooef004
            LET g_qryparam.arg2 = "acrt420" #
            
            CALL q_ooba002_1()                                #呼叫開窗

            LET g_crce_m.crcedocno = g_qryparam.return1              

            DISPLAY g_crce_m.crcedocno TO crcedocno              #
            CALL acrt420_crcedocno_ref(p_cmd) 
            NEXT FIELD crcedocno                          #返回原欄位

]]>
  </point>
  <point name="input.c.crcesite" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crce_m.crcesite             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = "2" #
            
            CALL q_ooed004_3()                                #呼叫開窗

            LET g_crce_m.crcesite = g_qryparam.return1              

            DISPLAY g_crce_m.crcesite TO crcesite              #
            CALL acrt420_crcesite_ref()
            NEXT FIELD crcesite                          #返回原欄位

]]>
  </point>
  <point name="input.c.crceunit" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crce_m.crceunit             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.arg2 = "" #
            
            CALL q_ooed004_3()                                #呼叫開窗

            LET g_crce_m.crceunit = g_qryparam.return1              

            DISPLAY g_crce_m.crceunit TO crceunit              #

            NEXT FIELD crceunit                          #返回原欄位

]]>
  </point>
  <point name="input.c.page1.crcf001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crcf_d[l_ac].crcf001             #給予default值
            LET g_qryparam.default2 = "" #g_crcf_d[l_ac].crcc002 #問題編號
            #給予arg
            LET g_qryparam.where = "crcc001='",g_crce_m.crce008,"' " #

            
            CALL q_crcc002()                                #呼叫開窗

            LET g_crcf_d[l_ac].crcf001 = g_qryparam.return1              
            #LET g_crcf_d[l_ac].crcc002 = g_qryparam.return2 
            DISPLAY g_crcf_d[l_ac].crcf001 TO crcf001              #
            #DISPLAY g_crcf_d[l_ac].crcc002 TO crcc002 #問題編號
            CALL acrt420_crcf001_ref()
            NEXT FIELD crcf001                          #返回原欄位

]]>
  </point>
  <point name="input.d.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            ]]>
  </point>
  <point name="input.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE  l_success             LIKE type_t.num5
   let l_flag = null
   let l_flag = p_cmd]]>
  </point>
  <point name="input.g.page2.crcg003" order="" ver="3" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crcf2_d[l_ac].crcg003 != g_crcf2_d_t.crcg003 OR g_crcf2_d_t.crcg003 IS null)) THEN 
               IF g_crcf_d[g_detail_idx].crcc005='S' AND g_crcf2_d[l_ac].crcg003='Y' THEN
                  SELECT count(*) INTO l_cnt FROM crcg_t 
                   WHERE crcgent = g_enterprise AND crcgdocno = g_crce_m.crcedocno
                     AND crcg001 = g_crcf_d[g_detail_idx].crcf001 AND crcg003='Y'
                  IF l_cnt >0 THEN
                     LET g_crcf2_d[l_ac].crcg003 = g_crcf2_d_t.crcg003
                     NEXT FIELD crcg003
                  END IF      
               END IF
               CALL acrt420_chk_crcg003()
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_crcf2_d[l_ac].crcg003,g_errno,1)
                  LET g_crcf2_d[l_ac].crcg003 = g_crcf2_d_t.crcg003
                  NEXT FIELD crcg003
               END IF
#               CALL acrt420_display_crcg003()
            END IF
            CALL acrt420_display_crcg003()]]>
  </point>
  <point name="input.head.a_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_crce_m.crce008) THEN
               IF l_cmd_t <> 'r' OR (l_cmd_t='r' AND (g_crce_m.crce008 != g_crce_m_t.crce008 OR g_crce_m_t.crce008 IS NULL ))THEN
               IF cl_ask_confirm("acr-00034") THEN
                  IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce008 != g_crce_m_t.crce008 OR g_crce_m_t.crce008 IS NULL )) THEN 
                     CALL acrt420_create_crce008()
                     IF NOT cl_null(g_errno) THEN
                        CALL cl_err("g_crce_m",g_errno,1)  
                        CALL s_transaction_end('N','0')
                        CONTINUE DIALOG
                     END IF
                  END IF
               END IF
               END IF
               END IF]]>
  </point>
  <point name="input.head.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               
               ]]>
  </point>
  <point name="input.head.b_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_crce_m.crcedocno) THEN
                  IF g_crce_m.crce001 IS NULL AND g_crce_m.crce002 IS NULL AND g_crce_m.crce003 IS NULL
                     AND g_crce_m.crce004 IS NULL AND g_crce_m.crce005 IS NULL THEN
                     CALL cl_err(g_crce_m.crcedocno,"acr-00050",1)
                     NEXT FIELD crce001 
                  END IF   
                  CALL s_aooi200_gen_docno(g_crce_m.crcesite,g_crce_m.crcedocno,g_crce_m.crcedocdt,g_prog) 
                  RETURNING  g_success,g_crce_m.crcedocno
                  IF g_success<>'1' THEN
                     CALL cl_err(g_crce_m.crcedocno,"amm-00001",1)
                     LET g_crce_m.crcedocno = g_crce_m_t.crcedocno
                     NEXT FIELD crcedocno
                  ELSE
                     IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crce_t WHERE "||"crceent = '" ||g_enterprise|| "' AND "||"crcedocno = '"||g_crce_m.crcedocno ||"'",'std-00004',1) THEN 
                        LET g_crce_m.crcedocno = g_crce_m_t.crcedocno
                        NEXT FIELD CURRENT
                     END IF    
                                      
                  END IF
               END IF
               CALL cl_set_comp_entry("crcedocno",FALSE)]]>
  </point>
  <point name="input.head.m_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF NOT cl_null(g_crce_m.crce008) THEN
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crce_m.crce008 != g_crce_m_t.crce008 OR g_crce_m_t.crce008 IS NULL )) THEN 
               IF cl_ask_confirm("acr-00034") THEN
                  CALL acrt420_create_crce008()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err("g_crce_m",g_errno,1)  
                     CALL s_transaction_end('N','0')
                     CONTINUE DIALOG
                  END IF
                  LET g_crce_m.crce009 = 0
                  DISPLAY BY NAME g_crce_m.crce009 
               END IF
               END IF
               END IF]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL acrt420_set_entry(p_cmd)
            CALL acrt420_set_no_entry(p_cmd)]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_crce_m.crcesite = g_site
      LET g_crce_m.crcedocdt = g_today
      CALL acrt420_crcesite_ref()
      LET g_crce_m_t.* = g_crce_m.*]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_crce_m.crcestus='Y' THEN
      RETURN
   END IF ]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_crce_m.crcedocno_desc =""
   LET g_crce_m.crcecnfid = ""
   LET g_crce_m.crcecnfdt = ""
   LET g_crce_m.crcestus = "N"
   LET g_crce_m.crcesite = g_site
   LET g_crce_m.crceunit = g_site
   LET g_crce_m.crcedocdt = g_today
   CALL acrt420_crcesite_ref()]]>
  </point>
  <point name="set_entry.field_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      call cl_set_comp_entry("crce008",TRUE)]]>
  </point>
  <point name="set_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd='a' THEN
      CALL cl_set_comp_entry("crcf001",true)
   END IF]]>
  </point>
  <point name="set_no_entry.after_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF l_flag='r' THEN
      SELECT count(*) INTO l_cnt FROM crcf_t WHERE crcfent = g_enterprise
         AND crcfdocno = g_crcedocno_t
      IF l_cnt > 0 THEN
         CALL cl_set_comp_entry("crce008",FALSE)
      ELSE
         CALL cl_set_comp_entry("crce008",TRUE)    
      END IF
   ELSE
      SELECT count(*) INTO l_cnt FROM crcf_t WHERE crcfent = g_enterprise
         AND crcfdocno = g_crce_m.crcedocno
      IF l_cnt > 0 THEN
         CALL cl_set_comp_entry("crce008",FALSE)
      ELSE
         CALL cl_set_comp_entry("crce008",TRUE)    
      END IF
   END IF      ]]>
  </point>
  <point name="set_no_entry.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_cnt   LIKE type_t.num5]]>
  </point>
  <point name="set_no_entry_b.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF p_cmd='u' THEN
      CALL cl_set_comp_entry("crcf001",FALSE)
   END IF]]>
  </point>
  <point name="show.body.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL acrt420_crcf001_ref()]]>
  </point>
  <point name="show.body2.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL acrt420_crcg002_ref() ]]>
  </point>
  <point name="show.head.reference" order="" ver="2" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
            CALL acrt420_crce008_ref()
            CALL acrt420_crcedocno_ref('u')
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crcesite
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_crce_m.crcesite_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crcesite_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crce008
#            CALL ap_ref_array2(g_ref_fields,"SELECT crcbl003 FROM crcbl_t WHERE crcblent='"||g_enterprise||"' AND crcbl001=? AND crcbl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_crce_m.crce008_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crce008_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crceownid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_crce_m.crceownid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crceownid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crceowndp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_crce_m.crceowndp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crceowndp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crcecrtid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_crce_m.crcecrtid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crcecrtid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crcecrtdp
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
#            LET g_crce_m.crcecrtdp_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crcecrtdp_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crcemodid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_crce_m.crcemodid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crcemodid_desc
#
#            INITIALIZE g_ref_fields TO NULL
#            LET g_ref_fields[1] = g_crce_m.crcecnfid
#            CALL ap_ref_array2(g_ref_fields,"SELECT ooag011 FROM ooag_t WHERE ooagent='"||g_enterprise||"' AND ooag001=? ","") RETURNING g_rtn_fields
#            LET g_crce_m.crcecnfid_desc = '', g_rtn_fields[1] , ''
#            DISPLAY BY NAME g_crce_m.crcecnfid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT crcestus,crcecnfid,crcecnfdt,crcepstid,crcepstdt
     INTO g_crce_m.crcestus,g_crce_m.crcecnfid,g_crce_m.crcecnfdt
     FROM crce_t
    WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crce_m.crcecnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_crce_m.crcecnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_crce_m.crcecnfid_desc
      
   IF g_crce_m.crcestus = 'Y' THEN
      CALL cl_set_act_visible("modify,delete", FALSE)
   ELSE
      IF g_crce_m.crcestus = 'X' THEN
         CALL cl_set_act_visible("delete", FALSE)
         CALL cl_set_act_visible("modify", TRUE)
      ELSE
         CALL cl_set_act_visible("modify,delete", TRUE)
      END IF   
   END IF
   CALL cl_set_act_visible("unconfirmed,invalid,confirmed", true)
   IF g_crce_m.crcestus = 'N' THEN
      CALL cl_set_act_visible("invalid,confirmed", true)
      CALL cl_set_act_visible("unconfirmed", FALSE)      
   END IF
   IF g_crce_m.crcestus = 'Y' THEN
      CALL cl_set_act_visible("unconfirmed", TRUE)
      CALL cl_set_act_visible("invalid,confirmed", FALSE)      
   END IF
   IF g_crce_m.crcestus = 'X' THEN
      CALL cl_set_act_visible("invalid,confirmed", FALSE)
      CALL cl_set_act_visible("unconfirmed", true)
   END IF
   DISPLAY BY NAME g_crce_m.crcestus,g_crce_m.crcecnfid,g_crce_m.crcecnfdt]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   SELECT crcestus INTO  g_crce_m.crcestus FROM crce_t WHERE crcedocno = g_crce_m.crcedocno
      AND crceent = g_enterprise
   CASE 
      WHEN lc_state = 'Y' AND g_crce_m.crcestus = 'N'            
         CALL s_acrt420_conf_chk(g_crce_m.crcedocno,g_crce_m.crcestus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_acrt420_conf_upd(g_crce_m.crcedocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_showmsg_init()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')               
               END IF
            ELSE
               CALL cl_showmsg_init()
               RETURN
            END IF            
         ELSE
            CALL cl_showmsg_init()
            RETURN            
         END IF
                
      WHEN lc_state = 'X' AND g_crce_m.crcestus = 'N' 
         CALL s_acrt420_void_chk(g_crce_m.crcedocno,g_crce_m.crcestus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_acrt420_void_upd(g_crce_m.crcedocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_showmsg_init()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_showmsg_init()
               RETURN
            END IF
         ELSE
            CALL cl_showmsg_init()
            RETURN    
         END IF
      WHEN lc_state = 'N' AND g_crce_m.crcestus = 'Y' 
         SELECT crcestus INTO  g_crce_m.crcestus FROM crce_t WHERE crcedocno = g_crce_m.crcedocno
            AND crceent = g_enterprise
         CALL s_acrt420_unconf_chk(g_crce_m.crcedocno,g_crce_m.crcestus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_acrt420_unconf_upd(g_crce_m.crcedocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_showmsg_init()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_showmsg_init()
               RETURN
            END IF
         ELSE
            CALL cl_showmsg_init()
            RETURN    
         END IF
      WHEN lc_state = 'N' AND g_crce_m.crcestus = 'X' 
         SELECT crcestus INTO  g_crce_m.crcestus FROM crce_t WHERE crcedocno = g_crce_m.crcedocno
            AND crceent = g_enterprise
         CALL s_acrt420_unvoid_chk(g_crce_m.crcedocno,g_crce_m.crcestus) RETURNING l_success
         IF l_success THEN
            IF cl_ask_confirm('lib-053') THEN
               CALL s_transaction_begin()
               CALL s_acrt420_unvoid_upd(g_crce_m.crcedocno) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  CALL cl_showmsg_init()
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               CALL cl_showmsg_init()
               RETURN
            END IF
         ELSE
            CALL cl_showmsg_init()
            RETURN    
         END IF
            
      
      OTHERWISE 
         RETURN     
   END CASE
   CALL cl_showmsg_init()]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("unconfirmed,invalid,confirmed", true)
      IF g_crce_m.crcestus = 'N' THEN
         CALL cl_set_act_visible("invalid,confirmed", true)
         CALL cl_set_act_visible("unconfirmed", FALSE)      
      END IF
      IF g_crce_m.crcestus = 'Y' THEN
         CALL cl_set_act_visible("unconfirmed", TRUE)
         CALL cl_set_act_visible("invalid,confirmed", FALSE)      
      END IF
      IF g_crce_m.crcestus = 'X' THEN
         CALL cl_set_act_visible("invalid,confirmed", FALSE)
         CALL cl_set_act_visible("unconfirmed", true)
      END IF]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success      LIKE type_t.num5]]>
  </point>
  <section id="acrt420.b_fill" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION acrt420_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_crcf_d.clear()    #g_crcf_d 單頭及單身 
   CALL g_crcf2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF acrt420_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE crcf001,crcf002,crcf003,crcfsite,crcfunit  FROM crcf_t",   
                  " INNER JOIN crce_t ON crcedocno = crcfdocno ",
 
                  #"",
                  " LEFT JOIN crcg_t ON crcfent = crcgent AND crcfdocno = crcgdocno AND crcf001 = crcg001 ",
                  "",
                  
                  " WHERE crcfent=? AND crcfdocno=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
         IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
      
      LET g_sql = g_sql, " ORDER BY crcf_t.crcf001"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE acrt420_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR acrt420_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_crce_m.crcedocno
                                               
      FOREACH b_fill_cs INTO g_crcf_d[l_ac].crcf001,g_crcf_d[l_ac].crcf002,g_crcf_d[l_ac].crcf003,g_crcf_d[l_ac].crcfsite, 
          g_crcf_d[l_ac].crcfunit
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_crcf_d.deleteElement(g_crcf_d.getLength())
   CALL g_crcf2_d.deleteElement(g_crcf2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE acrt420_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.b_fill2" ver="3" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION acrt420_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF acrt420_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_crcf_d.getLength() > 0 THEN
               CALL g_crcf2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE crcg003,crcg002,crcgsite,crcgunit  FROM crcg_t",    
                     "",
                     
                     " WHERE crcgent=? AND crcgdocno=? AND crcg001=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  crcg_t.crcg002" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE acrt420_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR acrt420_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,
                                        g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_crcf2_d[l_ac].crcg003,g_crcf2_d[l_ac].crcg002,g_crcf2_d[l_ac].crcgsite, 
             g_crcf2_d[l_ac].crcgunit 
            IF SQLCA.sqlcode THEN
               CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               CALL cl_err( '', 9035, 0 )
               EXIT FOREACH
            END IF
            
         END FOREACH
               CALL g_crcf2_d.deleteElement(g_crcf2_d.getLength())
 
      END IF
   END IF
 
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL acrt420_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.browser_fill" ver="4" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION acrt420_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_crce_m.* TO NULL
   CALL g_crcf_d.clear()        
   CALL g_crcf2_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "crcedocno"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE crcedocno ",
                      " FROM crce_t ",
                      " ",
                      " LEFT JOIN crcf_t ON crcfent = crceent AND crcedocno = crcfdocno ",
 
                      " LEFT JOIN crcg_t ON crcgent = crceent AND crcfdocno = crcgdocno AND crcf001 = crcg001", 
 
 
                      " ", 
                      " ", 
                      " WHERE crceent = '" ||g_enterprise|| "' AND crcfent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("crce_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE crcedocno ",
                      " FROM crce_t ", 
                      "  ",
                      "  ",
                      " WHERE crceent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("crce_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照crcesite,'',crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005,crce006,crce007,crce008,'',crce009,crce010 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT crcestus,crcesite,'',crcedocdt,crcedocno,crce001,crce002,crce003,crce004, 
       crce005,crce006,crce007,crce008,'',crce009,crce010,t1.ooefl003 ,t2.crcbl003 ",
               " FROM crce_t ",
               "  ",
               "  LEFT JOIN crcf_t ON crcfent = crceent AND crcedocno = crcfdocno ",
 
               "  LEFT JOIN crcg_t ON crcgent = crceent AND crcfdocno = crcgdocno AND crcf001 = crcg001",
 
 
               "  ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=crcesite AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN crcbl_t t2 ON t2.crcblent='"||g_enterprise||"' AND t2.crcbl001=crce008 AND t2.crcbl002='"||g_lang||"' ",
 
               " WHERE crceent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("crce_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_crcesite,g_browser[g_cnt].b_crcesite_desc, 
       g_browser[g_cnt].b_crcedocdt,g_browser[g_cnt].b_crcedocno,g_browser[g_cnt].b_crce001,g_browser[g_cnt].b_crce002, 
       g_browser[g_cnt].b_crce003,g_browser[g_cnt].b_crce004,g_browser[g_cnt].b_crce005,g_browser[g_cnt].b_crce006, 
       g_browser[g_cnt].b_crce007,g_browser[g_cnt].b_crce008,g_browser[g_cnt].b_crce008_desc,g_browser[g_cnt].b_crce009, 
       g_browser[g_cnt].b_crce010,g_browser[g_cnt].b_crcesite_desc,g_browser[g_cnt].b_crce008_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION acrt420_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY crcedocno"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL acrt420_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.construct" ver="5" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION acrt420_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_crce_m.* TO NULL
   CALL g_crcf_d.clear()        
   CALL g_crcf2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005, 
          crce006,crce007,crce008,crcb004,crce009,crce010,crceunit,crcestus,crceownid,crceowndp,crcecrtid, 
          crcecrtdp,crcecrtdt,crcemodid,crcemoddt,crcecnfid,crcecnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<crcecrtdt>>----
         AFTER FIELD crcecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcemoddt>>----
         AFTER FIELD crcemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcecnfdt>>----
         AFTER FIELD crcecnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcepstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.crcesite
         ON ACTION controlp INFIELD crcesite
            #add-point:ON ACTION controlp INFIELD crcesite
            {<point name="construct.c.crcesite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcesite
            #add-point:BEFORE FIELD crcesite
            {<point name="construct.b.crcesite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcesite
            
            #add-point:AFTER FIELD crcesite
            {<point name="construct.a.crcesite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcedocdt
            #add-point:BEFORE FIELD crcedocdt
            {<point name="construct.b.crcedocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcedocdt
            
            #add-point:AFTER FIELD crcedocdt
            {<point name="construct.a.crcedocdt" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcedocdt
         ON ACTION controlp INFIELD crcedocdt
            #add-point:ON ACTION controlp INFIELD crcedocdt
            {<point name="construct.c.crcedocdt" />}
            #END add-point
 
         #Ctrlp:construct.c.crcedocno
         ON ACTION controlp INFIELD crcedocno
            #add-point:ON ACTION controlp INFIELD crcedocno
            {<point name="construct.c.crcedocno" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcedocno
            #add-point:BEFORE FIELD crcedocno
            {<point name="construct.b.crcedocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcedocno
            
            #add-point:AFTER FIELD crcedocno
            {<point name="construct.a.crcedocno" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce001
         ON ACTION controlp INFIELD crce001
            #add-point:ON ACTION controlp INFIELD crce001
            {<point name="construct.c.crce001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce001
            #add-point:BEFORE FIELD crce001
            {<point name="construct.b.crce001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce001
            
            #add-point:AFTER FIELD crce001
            {<point name="construct.a.crce001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce002
         ON ACTION controlp INFIELD crce002
            #add-point:ON ACTION controlp INFIELD crce002
            {<point name="construct.c.crce002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce002
            #add-point:BEFORE FIELD crce002
            {<point name="construct.b.crce002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce002
            
            #add-point:AFTER FIELD crce002
            {<point name="construct.a.crce002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce003
            #add-point:BEFORE FIELD crce003
            {<point name="construct.b.crce003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce003
            
            #add-point:AFTER FIELD crce003
            {<point name="construct.a.crce003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce003
         ON ACTION controlp INFIELD crce003
            #add-point:ON ACTION controlp INFIELD crce003
            {<point name="construct.c.crce003" />}
            #END add-point
 
         #Ctrlp:construct.c.crce004
         ON ACTION controlp INFIELD crce004
            #add-point:ON ACTION controlp INFIELD crce004
            {<point name="construct.c.crce004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce004
            #add-point:BEFORE FIELD crce004
            {<point name="construct.b.crce004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce004
            
            #add-point:AFTER FIELD crce004
            {<point name="construct.a.crce004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce005
            #add-point:BEFORE FIELD crce005
            {<point name="construct.b.crce005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce005
            
            #add-point:AFTER FIELD crce005
            {<point name="construct.a.crce005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce005
         ON ACTION controlp INFIELD crce005
            #add-point:ON ACTION controlp INFIELD crce005
            {<point name="construct.c.crce005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce006
            #add-point:BEFORE FIELD crce006
            {<point name="construct.b.crce006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce006
            
            #add-point:AFTER FIELD crce006
            {<point name="construct.a.crce006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce006
         ON ACTION controlp INFIELD crce006
            #add-point:ON ACTION controlp INFIELD crce006
            {<point name="construct.c.crce006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce007
            #add-point:BEFORE FIELD crce007
            {<point name="construct.b.crce007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce007
            
            #add-point:AFTER FIELD crce007
            {<point name="construct.a.crce007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce007
         ON ACTION controlp INFIELD crce007
            #add-point:ON ACTION controlp INFIELD crce007
            {<point name="construct.c.crce007" />}
            #END add-point
 
         #Ctrlp:construct.c.crce008
         ON ACTION controlp INFIELD crce008
            #add-point:ON ACTION controlp INFIELD crce008
            {<point name="construct.c.crce008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce008
            #add-point:BEFORE FIELD crce008
            {<point name="construct.b.crce008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce008
            
            #add-point:AFTER FIELD crce008
            {<point name="construct.a.crce008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb004
            #add-point:BEFORE FIELD crcb004
            {<point name="construct.b.crcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb004
            
            #add-point:AFTER FIELD crcb004
            {<point name="construct.a.crcb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcb004
         ON ACTION controlp INFIELD crcb004
            #add-point:ON ACTION controlp INFIELD crcb004
            {<point name="construct.c.crcb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce009
            #add-point:BEFORE FIELD crce009
            {<point name="construct.b.crce009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce009
            
            #add-point:AFTER FIELD crce009
            {<point name="construct.a.crce009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce009
         ON ACTION controlp INFIELD crce009
            #add-point:ON ACTION controlp INFIELD crce009
            {<point name="construct.c.crce009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce010
            #add-point:BEFORE FIELD crce010
            {<point name="construct.b.crce010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce010
            
            #add-point:AFTER FIELD crce010
            {<point name="construct.a.crce010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crce010
         ON ACTION controlp INFIELD crce010
            #add-point:ON ACTION controlp INFIELD crce010
            {<point name="construct.c.crce010" />}
            #END add-point
 
         #Ctrlp:construct.c.crceunit
         ON ACTION controlp INFIELD crceunit
            #add-point:ON ACTION controlp INFIELD crceunit
            {<point name="construct.c.crceunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crceunit
            #add-point:BEFORE FIELD crceunit
            {<point name="construct.b.crceunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crceunit
            
            #add-point:AFTER FIELD crceunit
            {<point name="construct.a.crceunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcestus
            #add-point:BEFORE FIELD crcestus
            {<point name="construct.b.crcestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcestus
            
            #add-point:AFTER FIELD crcestus
            {<point name="construct.a.crcestus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcestus
         ON ACTION controlp INFIELD crcestus
            #add-point:ON ACTION controlp INFIELD crcestus
            {<point name="construct.c.crcestus" />}
            #END add-point
 
         #Ctrlp:construct.c.crceownid
         ON ACTION controlp INFIELD crceownid
            #add-point:ON ACTION controlp INFIELD crceownid
            {<point name="construct.c.crceownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crceownid
            #add-point:BEFORE FIELD crceownid
            {<point name="construct.b.crceownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crceownid
            
            #add-point:AFTER FIELD crceownid
            {<point name="construct.a.crceownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crceowndp
         ON ACTION controlp INFIELD crceowndp
            #add-point:ON ACTION controlp INFIELD crceowndp
            {<point name="construct.c.crceowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crceowndp
            #add-point:BEFORE FIELD crceowndp
            {<point name="construct.b.crceowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crceowndp
            
            #add-point:AFTER FIELD crceowndp
            {<point name="construct.a.crceowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcecrtid
         ON ACTION controlp INFIELD crcecrtid
            #add-point:ON ACTION controlp INFIELD crcecrtid
            {<point name="construct.c.crcecrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcecrtid
            #add-point:BEFORE FIELD crcecrtid
            {<point name="construct.b.crcecrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcecrtid
            
            #add-point:AFTER FIELD crcecrtid
            {<point name="construct.a.crcecrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcecrtdp
         ON ACTION controlp INFIELD crcecrtdp
            #add-point:ON ACTION controlp INFIELD crcecrtdp
            {<point name="construct.c.crcecrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcecrtdp
            #add-point:BEFORE FIELD crcecrtdp
            {<point name="construct.b.crcecrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcecrtdp
            
            #add-point:AFTER FIELD crcecrtdp
            {<point name="construct.a.crcecrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcecrtdt
            #add-point:BEFORE FIELD crcecrtdt
            {<point name="construct.b.crcecrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.crcemodid
         ON ACTION controlp INFIELD crcemodid
            #add-point:ON ACTION controlp INFIELD crcemodid
            {<point name="construct.c.crcemodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcemodid
            #add-point:BEFORE FIELD crcemodid
            {<point name="construct.b.crcemodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcemodid
            
            #add-point:AFTER FIELD crcemodid
            {<point name="construct.a.crcemodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcemoddt
            #add-point:BEFORE FIELD crcemoddt
            {<point name="construct.b.crcemoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.crcecnfid
         ON ACTION controlp INFIELD crcecnfid
            #add-point:ON ACTION controlp INFIELD crcecnfid
            {<point name="construct.c.crcecnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcecnfid
            #add-point:BEFORE FIELD crcecnfid
            {<point name="construct.b.crcecnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcecnfid
            
            #add-point:AFTER FIELD crcecnfid
            {<point name="construct.a.crcecnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcecnfdt
            #add-point:BEFORE FIELD crcecnfdt
            {<point name="construct.b.crcecnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON crcf001,crcf002,crcf003,crcfsite,crcfunit
           FROM s_detail1[1].crcf001,s_detail1[1].crcf002,s_detail1[1].crcf003,s_detail1[1].crcfsite, 
               s_detail1[1].crcfunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.crcf001
         ON ACTION controlp INFIELD crcf001
            #add-point:ON ACTION controlp INFIELD crcf001
            {<point name="construct.c.page1.crcf001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcf001
            #add-point:BEFORE FIELD crcf001
            {<point name="construct.b.page1.crcf001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcf001
            
            #add-point:AFTER FIELD crcf001
            {<point name="construct.a.page1.crcf001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcf002
            #add-point:BEFORE FIELD crcf002
            {<point name="construct.b.page1.crcf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcf002
            
            #add-point:AFTER FIELD crcf002
            {<point name="construct.a.page1.crcf002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crcf002
         ON ACTION controlp INFIELD crcf002
            #add-point:ON ACTION controlp INFIELD crcf002
            {<point name="construct.c.page1.crcf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcf003
            #add-point:BEFORE FIELD crcf003
            {<point name="construct.b.page1.crcf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcf003
            
            #add-point:AFTER FIELD crcf003
            {<point name="construct.a.page1.crcf003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crcf003
         ON ACTION controlp INFIELD crcf003
            #add-point:ON ACTION controlp INFIELD crcf003
            {<point name="construct.c.page1.crcf003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcfsite
            #add-point:BEFORE FIELD crcfsite
            {<point name="construct.b.page1.crcfsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcfsite
            
            #add-point:AFTER FIELD crcfsite
            {<point name="construct.a.page1.crcfsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crcfsite
         ON ACTION controlp INFIELD crcfsite
            #add-point:ON ACTION controlp INFIELD crcfsite
            {<point name="construct.c.page1.crcfsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcfunit
            #add-point:BEFORE FIELD crcfunit
            {<point name="construct.b.page1.crcfunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcfunit
            
            #add-point:AFTER FIELD crcfunit
            {<point name="construct.a.page1.crcfunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crcfunit
         ON ACTION controlp INFIELD crcfunit
            #add-point:ON ACTION controlp INFIELD crcfunit
            {<point name="construct.c.page1.crcfunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON crcg003,crcg002,crcgsite,crcgunit
           FROM s_detail2[1].crcg003,s_detail2[1].crcg002,s_detail2[1].crcgsite,s_detail2[1].crcgunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #此段落由子樣板a01產生
         BEFORE FIELD crcg003
            #add-point:BEFORE FIELD crcg003
            {<point name="construct.b.page2.crcg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcg003
            
            #add-point:AFTER FIELD crcg003
            {<point name="construct.a.page2.crcg003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.crcg003
         ON ACTION controlp INFIELD crcg003
            #add-point:ON ACTION controlp INFIELD crcg003
            {<point name="construct.c.page2.crcg003" />}
            #END add-point
 
         #Ctrlp:construct.c.page2.crcg002
         ON ACTION controlp INFIELD crcg002
            #add-point:ON ACTION controlp INFIELD crcg002
            {<point name="construct.c.page2.crcg002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcg002
            #add-point:BEFORE FIELD crcg002
            {<point name="construct.b.page2.crcg002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcg002
            
            #add-point:AFTER FIELD crcg002
            {<point name="construct.a.page2.crcg002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcgsite
            #add-point:BEFORE FIELD crcgsite
            {<point name="construct.b.page2.crcgsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcgsite
            
            #add-point:AFTER FIELD crcgsite
            {<point name="construct.a.page2.crcgsite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.crcgsite
         ON ACTION controlp INFIELD crcgsite
            #add-point:ON ACTION controlp INFIELD crcgsite
            {<point name="construct.c.page2.crcgsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcgunit
            #add-point:BEFORE FIELD crcgunit
            {<point name="construct.b.page2.crcgunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcgunit
            
            #add-point:AFTER FIELD crcgunit
            {<point name="construct.a.page2.crcgunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.crcgunit
         ON ACTION controlp INFIELD crcgunit
            #add-point:ON ACTION controlp INFIELD crcgunit
            {<point name="construct.c.page2.crcgunit" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION acrt420_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " crcedocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.delete" ver="7" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION acrt420_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   
 
   CALL acrt420_show()
   
   CALL s_transaction_begin()
 
   OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
   IF STATUS THEN
      CALL cl_err("OPEN acrt420_cl:", STATUS, 1)
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_crce_m.crcedocno,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL acrt420_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_crcedocno_t = g_crce_m.crcedocno
 
 
      DELETE FROM crce_t
       WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_crce_m.crcedocno,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM crcf_t
       WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcf_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM crcg_t
       WHERE crcgent = g_enterprise AND
             crcgdocno = g_crce_m.crcedocno
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcg_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
                                                               
      CLEAR FORM
      CALL g_crcf_d.clear() 
      CALL g_crcf2_d.clear()       
 
     
      #CALL acrt420_ui_browser_refresh()  
      CALL acrt420_ui_headershow()  
      CALL acrt420_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL acrt420_browser_fill("")
         CALL acrt420_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL acrt420_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE acrt420_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_crce_m.crcedocno,'D')
    
END FUNCTION
]]>
  </section>
  <section id="acrt420.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION acrt420_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM crcf_t
       WHERE crcfent = g_enterprise AND
         crcfdocno = ps_keys_bak[1] AND crcf001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM crcg_t
       WHERE crcgdocno = ps_keys_bak[1] AND crcg001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcg_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.description" ver="88" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:3,PR版次:3) Build-000134
#+ 
#+ Filename...: acrt420
#+ Description: 客戶回訪記錄維護作業
#+ Creator....: 02296(2014/04/25)
#+ Modifier...: 02296(2014/06/30)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="acrt420.detail_reproduce" ver="1" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION acrt420_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE crcf_t.*
 
   DEFINE l_detail2    RECORD LIKE crcg_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE acrt420_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE acrt420_detail AS ",
                "SELECT * FROM crcf_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO acrt420_detail SELECT * FROM crcf_t 
                                         WHERE crcfent = g_enterprise AND crcfdocno = g_crcedocno_t
 
   
   #將key修正為調整後   
   UPDATE acrt420_detail 
      #更新key欄位
      SET crcfdocno = g_crce_m.crcedocno
 
      #更新共用欄位
      
                                       
  
   #將資料塞回原table   
   INSERT INTO crcf_t SELECT * FROM acrt420_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE acrt420_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE acrt420_detail AS ",
      "SELECT * FROM crcg_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO acrt420_detail SELECT * FROM crcg_t
                                         WHERE crcgent = g_enterprise AND crcgdocno = g_crcedocno_t
 
 
   #將key修正為調整後   
   UPDATE acrt420_detail SET crcgdocno = g_crce_m.crcedocno
 
  
   #將資料塞回原table   
   INSERT INTO crcg_t SELECT * FROM acrt420_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE acrt420_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_crcedocno_t = g_crce_m.crcedocno
 
   
   DROP TABLE acrt420_detail
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION acrt420_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.fetch" ver="5" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION acrt420_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_crce_m.crcedocno = g_browser[g_current_idx].b_crcedocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   IF SQLCA.sqlcode THEN
      CALL cl_err("crce_t",SQLCA.sqlcode,1)
      INITIALIZE g_crce_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_crce_m_t.* = g_crce_m.*
   LET g_crce_m_o.* = g_crce_m.*
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL acrt420_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION acrt420_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION acrt420_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005, 
          crce006,crce007,crce008,crce009,crce010
                          FROM s_browse[1].b_crcesite,s_browse[1].b_crcedocdt,s_browse[1].b_crcedocno, 
                              s_browse[1].b_crce001,s_browse[1].b_crce002,s_browse[1].b_crce003,s_browse[1].b_crce004, 
                              s_browse[1].b_crce005,s_browse[1].b_crce006,s_browse[1].b_crce007,s_browse[1].b_crce008, 
                              s_browse[1].b_crce009,s_browse[1].b_crce010
 
         BEFORE CONSTRUCT
               DISPLAY acrt420_filter_parser('crcesite') TO s_browse[1].b_crcesite
            DISPLAY acrt420_filter_parser('crcedocdt') TO s_browse[1].b_crcedocdt
            DISPLAY acrt420_filter_parser('crcedocno') TO s_browse[1].b_crcedocno
            DISPLAY acrt420_filter_parser('crce001') TO s_browse[1].b_crce001
            DISPLAY acrt420_filter_parser('crce002') TO s_browse[1].b_crce002
            DISPLAY acrt420_filter_parser('crce003') TO s_browse[1].b_crce003
            DISPLAY acrt420_filter_parser('crce004') TO s_browse[1].b_crce004
            DISPLAY acrt420_filter_parser('crce005') TO s_browse[1].b_crce005
            DISPLAY acrt420_filter_parser('crce006') TO s_browse[1].b_crce006
            DISPLAY acrt420_filter_parser('crce007') TO s_browse[1].b_crce007
            DISPLAY acrt420_filter_parser('crce008') TO s_browse[1].b_crce008
            DISPLAY acrt420_filter_parser('crce009') TO s_browse[1].b_crce009
            DISPLAY acrt420_filter_parser('crce010') TO s_browse[1].b_crce010
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL acrt420_filter_show('crcesite')
   CALL acrt420_filter_show('crcedocdt')
   CALL acrt420_filter_show('crcedocno')
   CALL acrt420_filter_show('crce001')
   CALL acrt420_filter_show('crce002')
   CALL acrt420_filter_show('crce003')
   CALL acrt420_filter_show('crce004')
   CALL acrt420_filter_show('crce005')
   CALL acrt420_filter_show('crce006')
   CALL acrt420_filter_show('crce007')
   CALL acrt420_filter_show('crce008')
   CALL acrt420_filter_show('crce009')
   CALL acrt420_filter_show('crce010')
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION acrt420_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION acrt420_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = acrt420_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.global" ver="5" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_crce_m        RECORD
       crcesite LIKE crce_t.crcesite, 
   crcesite_desc LIKE type_t.chr80, 
   crcedocdt LIKE crce_t.crcedocdt, 
   crcedocno LIKE crce_t.crcedocno, 
   crcedocno_desc LIKE type_t.chr80, 
   crce001 LIKE crce_t.crce001, 
   crce002 LIKE crce_t.crce002, 
   crce003 LIKE crce_t.crce003, 
   crce004 LIKE crce_t.crce004, 
   crce005 LIKE crce_t.crce005, 
   crce006 LIKE crce_t.crce006, 
   crce007 LIKE crce_t.crce007, 
   crce008 LIKE crce_t.crce008, 
   crce008_desc LIKE type_t.chr80, 
   crcb004 LIKE type_t.num26_10, 
   crce009 LIKE crce_t.crce009, 
   crce010 LIKE crce_t.crce010, 
   crceunit LIKE crce_t.crceunit, 
   crcestus LIKE crce_t.crcestus, 
   crceownid LIKE crce_t.crceownid, 
   crceownid_desc LIKE type_t.chr80, 
   crceowndp LIKE crce_t.crceowndp, 
   crceowndp_desc LIKE type_t.chr80, 
   crcecrtid LIKE crce_t.crcecrtid, 
   crcecrtid_desc LIKE type_t.chr80, 
   crcecrtdp LIKE crce_t.crcecrtdp, 
   crcecrtdp_desc LIKE type_t.chr80, 
   crcecrtdt DATETIME YEAR TO SECOND, 
   crcemodid LIKE crce_t.crcemodid, 
   crcemodid_desc LIKE type_t.chr80, 
   crcemoddt DATETIME YEAR TO SECOND, 
   crcecnfid LIKE crce_t.crcecnfid, 
   crcecnfid_desc LIKE type_t.chr80, 
   crcecnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_crcf_d        RECORD
       crcf001 LIKE crcf_t.crcf001, 
   crcc003 LIKE type_t.chr500, 
   crcc004 LIKE type_t.num26_10, 
   crcc005 LIKE type_t.chr1, 
   crcc006 LIKE type_t.chr1, 
   crcf002 LIKE crcf_t.crcf002, 
   crcf003 LIKE crcf_t.crcf003, 
   crcfsite LIKE crcf_t.crcfsite, 
   crcfunit LIKE crcf_t.crcfunit
       END RECORD
PRIVATE TYPE type_g_crcf2_d RECORD
       crcg003 LIKE crcg_t.crcg003, 
   crcg002 LIKE crcg_t.crcg002, 
   crcd004 LIKE type_t.chr500, 
   crcd005 LIKE type_t.num26_10, 
   crcgsite LIKE crcg_t.crcgsite, 
   crcgunit LIKE crcg_t.crcgunit
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_crce_m          type_g_crce_m
DEFINE g_crce_m_t        type_g_crce_m
DEFINE g_crce_m_o        type_g_crce_m
 
   DEFINE g_crcedocno_t LIKE crce_t.crcedocno
 
 
DEFINE g_crcf_d          DYNAMIC ARRAY OF type_g_crcf_d
DEFINE g_crcf_d_t        type_g_crcf_d
DEFINE g_crcf_d_o        type_g_crcf_d
DEFINE g_crcf2_d   DYNAMIC ARRAY OF type_g_crcf2_d
DEFINE g_crcf2_d_t type_g_crcf2_d
DEFINE g_crcf2_d_o type_g_crcf2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_crcesite LIKE crce_t.crcesite,
   b_crcesite_desc LIKE type_t.chr80,
      b_crcedocdt LIKE crce_t.crcedocdt,
      b_crcedocno LIKE crce_t.crcedocno,
      b_crce001 LIKE crce_t.crce001,
      b_crce002 LIKE crce_t.crce002,
      b_crce003 LIKE crce_t.crce003,
      b_crce004 LIKE crce_t.crce004,
      b_crce005 LIKE crce_t.crce005,
      b_crce006 LIKE crce_t.crce006,
      b_crce007 LIKE crce_t.crce007,
      b_crce008 LIKE crce_t.crce008,
   b_crce008_desc LIKE type_t.chr80,
      b_crce009 LIKE crce_t.crce009,
      b_crce010 LIKE crce_t.crce010
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_crcesite LIKE crce_t.crcesite,
   b_crcesite_desc LIKE type_t.chr80,
      b_crcedocdt LIKE crce_t.crcedocdt,
      b_crcedocno LIKE crce_t.crcedocno,
      b_crce001 LIKE crce_t.crce001,
      b_crce002 LIKE crce_t.crce002,
      b_crce003 LIKE crce_t.crce003,
      b_crce004 LIKE crce_t.crce004,
      b_crce005 LIKE crce_t.crce005,
      b_crce006 LIKE crce_t.crce006,
      b_crce007 LIKE crce_t.crce007,
      b_crce008 LIKE crce_t.crce008,
   b_crce008_desc LIKE type_t.chr80,
      b_crce009 LIKE crce_t.crce009,
      b_crce010 LIKE crce_t.crce010
      END RECORD 
      
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="acrt420.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION acrt420_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_crcf_d.getLength() THEN
         LET g_detail_idx = g_crcf_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_crcf_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_crcf_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_crcf2_d.getLength() THEN
         LET g_detail_idx2 = g_crcf2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_crcf2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_crcf2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.init" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION acrt420_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('crcestus','13','N,X,Y')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL acrt420_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="acrt420.input" ver="4" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION acrt420_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crcf001,crcf002,crcf003,crcfsite,crcfunit FROM crcf_t WHERE crcfent=?  
       AND crcfdocno=? AND crcf001=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrt420_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crcg003,crcg002,crcgsite,crcgunit FROM crcg_t WHERE crcgent=? AND crcgdocno=?  
       AND crcg001=? AND crcg002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrt420_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL acrt420_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL acrt420_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002, 
       g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008, 
       g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit,g_crce_m.crcestus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="acrt420.input.body" ver="7" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_crcf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crcf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL acrt420_b_fill()
            LET g_rec_b = g_crcf_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
                           CALL acrt420_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
            IF STATUS THEN
               CALL cl_err("OPEN acrt420_cl:", STATUS, 1)
               CLOSE acrt420_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_crcf_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_crcf_d[l_ac].crcf001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_crcf_d_t.* = g_crcf_d[l_ac].*  #BACKUP
               LET g_crcf_d_o.* = g_crcf_d[l_ac].*  #BACKUP
               CALL acrt420_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL acrt420_set_no_entry_b(l_cmd)
               IF NOT acrt420_lock_b("crcf_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acrt420_bcl INTO g_crcf_d[l_ac].crcf001,g_crcf_d[l_ac].crcf002,g_crcf_d[l_ac].crcf003, 
                      g_crcf_d[l_ac].crcfsite,g_crcf_d[l_ac].crcfunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_crcf_d_t.crcf001,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL acrt420_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crcf_d[l_ac].* TO NULL 
            INITIALIZE g_crcf_d_t.* TO NULL 
            INITIALIZE g_crcf_d_o.* TO NULL 
                  LET g_crcf_d[l_ac].crcc005 = "S"
      LET g_crcf_d[l_ac].crcc006 = "0"
      LET g_crcf_d[l_ac].crcf002 = "0"
 
            LET g_crcf_d_t.* = g_crcf_d[l_ac].*     #新輸入資料
            LET g_crcf_d_o.* = g_crcf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acrt420_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL acrt420_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crcf_d[li_reproduce_target].* = g_crcf_d[li_reproduce].*
 
               LET g_crcf_d[li_reproduce_target].crcf001 = NULL
 
            END IF
            #公用欄位給值(單身)
            
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM crcf_t 
             WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
 
               AND crcf001 = g_crcf_d[l_ac].crcf001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               CALL acrt420_insert_b('crcf_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_crcf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("crcf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL acrt420_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_crcf_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_crcf_d.deleteElement(l_ac)
               NEXT FIELD crcf001
            END IF
         
            IF g_crcf_d[l_ac].crcf001 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM crcf_t
                WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno AND
 
                      crcf001 = g_crcf_d_t.crcf001
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("crcf_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE acrt420_bcl
               LET l_count = g_crcf_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL acrt420_delete_b('crcf_t',gs_keys,"'1'")
 
                  #此段落由子樣板a02產生
         AFTER FIELD crcf001
            
            #add-point:AFTER FIELD crcf001
            {<point name="input.a.page1.crcf001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcf001
            #add-point:BEFORE FIELD crcf001
            {<point name="input.b.page1.crcf001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcf001
            #add-point:ON CHANGE crcf001
            {<point name="input.g.page1.crcf001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcf002
            #add-point:BEFORE FIELD crcf002
            {<point name="input.b.page1.crcf002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcf002
            
            #add-point:AFTER FIELD crcf002
            {<point name="input.a.page1.crcf002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcf002
            #add-point:ON CHANGE crcf002
            {<point name="input.g.page1.crcf002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcf003
            #add-point:BEFORE FIELD crcf003
            {<point name="input.b.page1.crcf003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcf003
            
            #add-point:AFTER FIELD crcf003
            {<point name="input.a.page1.crcf003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcf003
            #add-point:ON CHANGE crcf003
            {<point name="input.g.page1.crcf003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcfsite
            #add-point:BEFORE FIELD crcfsite
            {<point name="input.b.page1.crcfsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcfsite
            
            #add-point:AFTER FIELD crcfsite
            {<point name="input.a.page1.crcfsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcfsite
            #add-point:ON CHANGE crcfsite
            {<point name="input.g.page1.crcfsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcfunit
            #add-point:BEFORE FIELD crcfunit
            {<point name="input.b.page1.crcfunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcfunit
            
            #add-point:AFTER FIELD crcfunit
            {<point name="input.a.page1.crcfunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcfunit
            #add-point:ON CHANGE crcfunit
            {<point name="input.g.page1.crcfunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.crcf001
         ON ACTION controlp INFIELD crcf001
            #add-point:ON ACTION controlp INFIELD crcf001
            {<point name="input.c.page1.crcf001" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcf002
         ON ACTION controlp INFIELD crcf002
            #add-point:ON ACTION controlp INFIELD crcf002
            {<point name="input.c.page1.crcf002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcf003
         ON ACTION controlp INFIELD crcf003
            #add-point:ON ACTION controlp INFIELD crcf003
            {<point name="input.c.page1.crcf003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcfsite
         ON ACTION controlp INFIELD crcfsite
            #add-point:ON ACTION controlp INFIELD crcfsite
            {<point name="input.c.page1.crcfsite" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcfunit
         ON ACTION controlp INFIELD crcfunit
            #add-point:ON ACTION controlp INFIELD crcfunit
            {<point name="input.c.page1.crcfunit" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_crcf_d[l_ac].* = g_crcf_d_t.*
               CLOSE acrt420_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_crcf_d[l_ac].crcf001,-263,1)
               LET g_crcf_d[l_ac].* = g_crcf_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               UPDATE crcf_t SET (crcfdocno,crcf001,crcf002,crcf003,crcfsite,crcfunit) = (g_crce_m.crcedocno, 
                   g_crcf_d[l_ac].crcf001,g_crcf_d[l_ac].crcf002,g_crcf_d[l_ac].crcf003,g_crcf_d[l_ac].crcfsite, 
                   g_crcf_d[l_ac].crcfunit)
                WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno 
 
                  AND crcf001 = g_crcf_d_t.crcf001 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("crcf_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_crcf_d[l_ac].* = g_crcf_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("crcf_t",SQLCA.sqlcode,1)
                     LET g_crcf_d[l_ac].* = g_crcf_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys_bak[1] = g_crcedocno_t
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys_bak[2] = g_crcf_d_t.crcf001
               CALL acrt420_update_b('crcf_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf_d_t)
               LET g_log2 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL acrt420_unlock_b("crcf_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_crcf_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_crcf_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_crcf2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crcf2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_rec_b = g_crcf2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crcf2_d[l_ac].* TO NULL 
                  LET g_crcf2_d[l_ac].crcg003 = "N"
 
            LET g_crcf2_d_t.* = g_crcf2_d[l_ac].*     #新輸入資料
            LET g_crcf2_d_o.* = g_crcf2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acrt420_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL acrt420_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crcf2_d[li_reproduce_target].* = g_crcf2_d[li_reproduce].*
 
               LET g_crcf2_d[li_reproduce_target].crcg002 = NULL
            END IF
            #公用欄位給值(單身2)
            
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
            OPEN acrt420_bcl USING g_enterprise,g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001
            IF STATUS THEN
               CALL cl_err("OPEN acrt420_cl:", STATUS, 1)
               CLOSE acrt420_cl
               CLOSE acrt420_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_crcf2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_crcf2_d[l_ac].crcg002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_crcf2_d_t.* = g_crcf2_d[l_ac].*  #BACKUP
               LET g_crcf2_d_o.* = g_crcf2_d[l_ac].*  #BACKUP
               CALL acrt420_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL acrt420_set_no_entry_b(l_cmd)
               IF NOT acrt420_lock_b("crcg_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acrt420_bcl2 INTO g_crcf2_d[l_ac].crcg003,g_crcf2_d[l_ac].crcg002,g_crcf2_d[l_ac].crcgsite, 
                      g_crcf2_d[l_ac].crcgunit
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL acrt420_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_crcf2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_crcf2_d.deleteElement(l_ac)
               NEXT FIELD crcg002
            END IF
            IF g_crcf2_d[l_ac].crcg002 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM crcg_t
                     WHERE crcgent = g_enterprise AND crcgdocno = g_crce_m.crcedocno AND crcg001 = g_crcf_d[g_detail_idx].crcf001  
                         AND crcg002 = g_crcf2_d[g_detail_idx2].crcg002
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("crcf_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE acrt420_bcl
               LET l_count = g_crcf_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys[3] = g_crcf2_d[g_detail_idx2].crcg002
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL acrt420_delete_b('crcg_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM crcg_t 
             WHERE crcgent = g_enterprise AND crcgdocno = g_crce_m.crcedocno AND crcg001 = g_crcf_d[g_detail_idx].crcf001  
                 AND crcg002 = g_crcf2_d[g_detail_idx2].crcg002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys[3] = g_crcf2_d[g_detail_idx2].crcg002
               CALL acrt420_insert_b('crcg_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_crcf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("crcg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL acrt420_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
               CLOSE acrt420_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               UPDATE crcg_t SET (crcgdocno,crcg001,crcg003,crcg002,crcgsite,crcgunit) = (g_crce_m.crcedocno, 
                   g_crcf_d[g_detail_idx].crcf001,g_crcf2_d[l_ac].crcg003,g_crcf2_d[l_ac].crcg002,g_crcf2_d[l_ac].crcgsite, 
                   g_crcf2_d[l_ac].crcgunit) #自訂欄位頁簽
                WHERE crcgent = g_enterprise AND crcgdocno = g_crcedocno_t AND crcg001 = g_crcf_d[g_detail_idx].crcf001  
                    AND crcg002 = g_crcf2_d_t.crcg002
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("crcg_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("crcg_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys_bak[1] = g_crcedocno_t
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys_bak[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys[3] = g_crcf2_d[g_detail_idx2].crcg002
               LET gs_keys_bak[3] = g_crcf2_d_t.crcg002
               CALL acrt420_update_b('crcg_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf2_d_t)
               LET g_log2 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf2_d[l_ac])
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD crcg003
            #add-point:BEFORE FIELD crcg003
            {<point name="input.b.page2.crcg003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcg003
            
            #add-point:AFTER FIELD crcg003
            {<point name="input.a.page2.crcg003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcg003
            #add-point:ON CHANGE crcg003
            {<point name="input.g.page2.crcg003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcg002
            #add-point:BEFORE FIELD crcg002
            {<point name="input.b.page2.crcg002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcg002
            
            #add-point:AFTER FIELD crcg002
            {<point name="input.a.page2.crcg002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcg002
            #add-point:ON CHANGE crcg002
            {<point name="input.g.page2.crcg002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcgsite
            #add-point:BEFORE FIELD crcgsite
            {<point name="input.b.page2.crcgsite" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcgsite
            
            #add-point:AFTER FIELD crcgsite
            {<point name="input.a.page2.crcgsite" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcgsite
            #add-point:ON CHANGE crcgsite
            {<point name="input.g.page2.crcgsite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcgunit
            #add-point:BEFORE FIELD crcgunit
            {<point name="input.b.page2.crcgunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcgunit
            
            #add-point:AFTER FIELD crcgunit
            {<point name="input.a.page2.crcgunit" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcgunit
            #add-point:ON CHANGE crcgunit
            {<point name="input.g.page2.crcgunit" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.crcg003
         ON ACTION controlp INFIELD crcg003
            #add-point:ON ACTION controlp INFIELD crcg003
            {<point name="input.c.page2.crcg003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.crcg002
         ON ACTION controlp INFIELD crcg002
            #add-point:ON ACTION controlp INFIELD crcg002
            {<point name="input.c.page2.crcg002" />}
            #END add-point
 
         #Ctrlp:input.c.page2.crcgsite
         ON ACTION controlp INFIELD crcgsite
            #add-point:ON ACTION controlp INFIELD crcgsite
            {<point name="input.c.page2.crcgsite" />}
            #END add-point
 
         #Ctrlp:input.c.page2.crcgunit
         ON ACTION controlp INFIELD crcgunit
            #add-point:ON ACTION controlp INFIELD crcgunit
            {<point name="input.c.page2.crcgunit" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
               END IF
               CLOSE acrt420_bcl2
               CLOSE acrt420_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL acrt420_unlock_b("crcg_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2_after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point  
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_crcf2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_crcf2_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
]]>
  </section>
  <section id="acrt420.input.head" ver="7" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_crce_m.crcesite,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002, 
          g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008, 
          g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit,g_crce_m.crcestus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD crcesite
            
            #add-point:AFTER FIELD crcesite
            {<point name="input.a.crcesite" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcesite
            #add-point:BEFORE FIELD crcesite
            {<point name="input.b.crcesite" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcesite
            #add-point:ON CHANGE crcesite
            {<point name="input.g.crcesite" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcedocdt
            #add-point:BEFORE FIELD crcedocdt
            {<point name="input.b.crcedocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcedocdt
            
            #add-point:AFTER FIELD crcedocdt
            {<point name="input.a.crcedocdt" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcedocdt
            #add-point:ON CHANGE crcedocdt
            {<point name="input.g.crcedocdt" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcedocno
            
            #add-point:AFTER FIELD crcedocno
            {<point name="input.a.crcedocno" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcedocno
            #add-point:BEFORE FIELD crcedocno
            {<point name="input.b.crcedocno" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcedocno
            #add-point:ON CHANGE crcedocno
            {<point name="input.g.crcedocno" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce001
            
            #add-point:AFTER FIELD crce001
            {<point name="input.a.crce001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce001
            #add-point:BEFORE FIELD crce001
            {<point name="input.b.crce001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crce001
            #add-point:ON CHANGE crce001
            {<point name="input.g.crce001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce002
            
            #add-point:AFTER FIELD crce002
            {<point name="input.a.crce002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce002
            #add-point:BEFORE FIELD crce002
            {<point name="input.b.crce002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crce002
            #add-point:ON CHANGE crce002
            {<point name="input.g.crce002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce003
            #add-point:BEFORE FIELD crce003
            {<point name="input.b.crce003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce003
            
            #add-point:AFTER FIELD crce003
            {<point name="input.a.crce003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crce003
            #add-point:ON CHANGE crce003
            {<point name="input.g.crce003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce004
            
            #add-point:AFTER FIELD crce004
            {<point name="input.a.crce004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce004
            #add-point:BEFORE FIELD crce004
            {<point name="input.b.crce004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crce004
            #add-point:ON CHANGE crce004
            {<point name="input.g.crce004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce005
            #add-point:BEFORE FIELD crce005
            {<point name="input.b.crce005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce005
            
            #add-point:AFTER FIELD crce005
            {<point name="input.a.crce005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crce005
            #add-point:ON CHANGE crce005
            {<point name="input.g.crce005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce006
            #add-point:BEFORE FIELD crce006
            {<point name="input.b.crce006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce006
            
            #add-point:AFTER FIELD crce006
            {<point name="input.a.crce006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crce006
            #add-point:ON CHANGE crce006
            {<point name="input.g.crce006" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce007
            #add-point:BEFORE FIELD crce007
            {<point name="input.b.crce007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce007
            
            #add-point:AFTER FIELD crce007
            {<point name="input.a.crce007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crce007
            #add-point:ON CHANGE crce007
            {<point name="input.g.crce007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce008
            
            #add-point:AFTER FIELD crce008
            {<point name="input.a.crce008" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce008
            #add-point:BEFORE FIELD crce008
            {<point name="input.b.crce008" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crce008
            #add-point:ON CHANGE crce008
            {<point name="input.g.crce008" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb004
            #add-point:BEFORE FIELD crcb004
            {<point name="input.b.crcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb004
            
            #add-point:AFTER FIELD crcb004
            {<point name="input.a.crcb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcb004
            #add-point:ON CHANGE crcb004
            {<point name="input.g.crcb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce009
            #add-point:BEFORE FIELD crce009
            {<point name="input.b.crce009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce009
            
            #add-point:AFTER FIELD crce009
            {<point name="input.a.crce009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crce009
            #add-point:ON CHANGE crce009
            {<point name="input.g.crce009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crce010
            #add-point:BEFORE FIELD crce010
            {<point name="input.b.crce010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crce010
            
            #add-point:AFTER FIELD crce010
            {<point name="input.a.crce010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crce010
            #add-point:ON CHANGE crce010
            {<point name="input.g.crce010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crceunit
            
            #add-point:AFTER FIELD crceunit
            {<point name="input.a.crceunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crceunit
            #add-point:BEFORE FIELD crceunit
            {<point name="input.b.crceunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crceunit
            #add-point:ON CHANGE crceunit
            {<point name="input.g.crceunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcestus
            #add-point:BEFORE FIELD crcestus
            {<point name="input.b.crcestus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcestus
            
            #add-point:AFTER FIELD crcestus
            {<point name="input.a.crcestus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcestus
            #add-point:ON CHANGE crcestus
            {<point name="input.g.crcestus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.crcesite
         ON ACTION controlp INFIELD crcesite
            #add-point:ON ACTION controlp INFIELD crcesite
            {<point name="input.c.crcesite" />}
            #END add-point
 
         #Ctrlp:input.c.crcedocdt
         ON ACTION controlp INFIELD crcedocdt
            #add-point:ON ACTION controlp INFIELD crcedocdt
            {<point name="input.c.crcedocdt" />}
            #END add-point
 
         #Ctrlp:input.c.crcedocno
         ON ACTION controlp INFIELD crcedocno
            #add-point:ON ACTION controlp INFIELD crcedocno
            {<point name="input.c.crcedocno" />}
            #END add-point
 
         #Ctrlp:input.c.crce001
         ON ACTION controlp INFIELD crce001
            #add-point:ON ACTION controlp INFIELD crce001
            {<point name="input.c.crce001" />}
            #END add-point
 
         #Ctrlp:input.c.crce002
         ON ACTION controlp INFIELD crce002
            #add-point:ON ACTION controlp INFIELD crce002
            {<point name="input.c.crce002" />}
            #END add-point
 
         #Ctrlp:input.c.crce003
         ON ACTION controlp INFIELD crce003
            #add-point:ON ACTION controlp INFIELD crce003
            {<point name="input.c.crce003" />}
            #END add-point
 
         #Ctrlp:input.c.crce004
         ON ACTION controlp INFIELD crce004
            #add-point:ON ACTION controlp INFIELD crce004
            {<point name="input.c.crce004" />}
            #END add-point
 
         #Ctrlp:input.c.crce005
         ON ACTION controlp INFIELD crce005
            #add-point:ON ACTION controlp INFIELD crce005
            {<point name="input.c.crce005" />}
            #END add-point
 
         #Ctrlp:input.c.crce006
         ON ACTION controlp INFIELD crce006
            #add-point:ON ACTION controlp INFIELD crce006
            {<point name="input.c.crce006" />}
            #END add-point
 
         #Ctrlp:input.c.crce007
         ON ACTION controlp INFIELD crce007
            #add-point:ON ACTION controlp INFIELD crce007
            {<point name="input.c.crce007" />}
            #END add-point
 
         #Ctrlp:input.c.crce008
         ON ACTION controlp INFIELD crce008
            #add-point:ON ACTION controlp INFIELD crce008
            {<point name="input.c.crce008" />}
            #END add-point
 
         #Ctrlp:input.c.crcb004
         ON ACTION controlp INFIELD crcb004
            #add-point:ON ACTION controlp INFIELD crcb004
            {<point name="input.c.crcb004" />}
            #END add-point
 
         #Ctrlp:input.c.crce009
         ON ACTION controlp INFIELD crce009
            #add-point:ON ACTION controlp INFIELD crce009
            {<point name="input.c.crce009" />}
            #END add-point
 
         #Ctrlp:input.c.crce010
         ON ACTION controlp INFIELD crce010
            #add-point:ON ACTION controlp INFIELD crce010
            {<point name="input.c.crce010" />}
            #END add-point
 
         #Ctrlp:input.c.crceunit
         ON ACTION controlp INFIELD crceunit
            #add-point:ON ACTION controlp INFIELD crceunit
            {<point name="input.c.crceunit" />}
            #END add-point
 
         #Ctrlp:input.c.crcestus
         ON ACTION controlp INFIELD crcestus
            #add-point:ON ACTION controlp INFIELD crcestus
            {<point name="input.c.crcestus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_crce_m.crcedocno
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO crce_t (crceent,crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004, 
                   crce005,crce006,crce007,crce008,crce009,crce010,crceunit,crcestus,crceownid,crceowndp, 
                   crcecrtid,crcecrtdp,crcecrtdt,crcecnfid,crcecnfdt)
               VALUES (g_enterprise,g_crce_m.crcesite,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crce001, 
                   g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006, 
                   g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
                   g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
                   g_crce_m.crcecrtdt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt) 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_crce_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL acrt420_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE crce_t SET (crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005, 
                   crce006,crce007,crce008,crce009,crce010,crceunit,crcestus,crceownid,crceowndp,crcecrtid, 
                   crcecrtdp,crcecrtdt,crcecnfid,crcecnfdt) = (g_crce_m.crcesite,g_crce_m.crcedocdt, 
                   g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004, 
                   g_crce_m.crce005,g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009, 
                   g_crce_m.crce010,g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp, 
                   g_crce_m.crcecrtid,g_crce_m.crcecrtdp,g_crce_m.crcecrtdt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt) 

                WHERE crceent = g_enterprise AND crcedocno = g_crcedocno_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("crce_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
			   #修改歷程記錄
               LET g_log1 = util.JSON.stringify(g_crce_m_t)
               LET g_log2 = util.JSON.stringify(g_crce_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_crcedocno_t = g_crce_m.crcedocno
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="acrt420.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD crcedocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD crcf001
               WHEN "s_detail2"
                  NEXT FIELD crcg003
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.insert" ver="5" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION acrt420_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_crcf_d.clear()   
   CALL g_crcf2_d.clear()  
 
 
   INITIALIZE g_crce_m.* LIKE crce_t.*             #DEFAULT 設定
   
   LET g_crcedocno_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_crce_m.crceownid = g_user
      LET g_crce_m.crceowndp = g_dept
      LET g_crce_m.crcecrtid = g_user
      LET g_crce_m.crcecrtdp = g_dept 
      LET g_crce_m.crcecrtdt = cl_get_current()
      LET g_crce_m.crcemodid = ""
      LET g_crce_m.crcemoddt = ""
      LET g_crce_m.crcestus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_crce_m.crcb004 = "0"
      LET g_crce_m.crce009 = "0"
      LET g_crce_m.crcestus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL acrt420_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_crce_m.* = g_crce_m_t.*
         CALL acrt420_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_crcf_d.clear()
      CALL g_crcf2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_crcedocno_t = g_crce_m.crcedocno
 
   
   LET g_wc = "(",g_wc,  
              " OR ( crceent = '" ||g_enterprise|| "' AND",
              " crcedocno = '", g_crce_m.crcedocno CLIPPED, "' "
 
              , ")) "
   
   CLOSE acrt420_cl
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION acrt420_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO crcf_t
                  (crcfent,
                   crcfdocno,
                   crcf001
                   ,crcf002,crcf003,crcfsite,crcfunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_crcf_d[g_detail_idx].crcf002,g_crcf_d[g_detail_idx].crcf003,g_crcf_d[g_detail_idx].crcfsite, 
                       g_crcf_d[g_detail_idx].crcfunit)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcf_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO crcg_t
                  (crcgent,
                   crcgdocno,crcg001,
                   crcg002
                   ,crcg003,crcgsite,crcgunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_crcf2_d[g_detail_idx2].crcg003,g_crcf2_d[g_detail_idx2].crcgsite,g_crcf2_d[g_detail_idx2].crcgunit) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcg_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION acrt420_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL acrt420_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "crcf_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN acrt420_bcl USING g_enterprise,
                                       g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001     
      IF SQLCA.sqlcode THEN
         CALL cl_err("acrt420_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "crcg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN acrt420_bcl2 USING g_enterprise,
                                             g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001,
                                             g_crcf2_d[g_detail_idx2].crcg002
      IF SQLCA.sqlcode THEN
         CALL cl_err("acrt420_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.main" ver="7" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("acr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT crcesite,'',crcedocdt,crcedocno,'',crce001,crce002,crce003,crce004,crce005, 
       crce006,crce007,crce008,'','',crce009,crce010,crceunit,crcestus,crceownid,'',crceowndp,'',crcecrtid, 
       '',crcecrtdp,'',crcecrtdt,crcemodid,'',crcemoddt,crcecnfid,'',crcecnfdt", 
                      " FROM crce_t",
                      " WHERE crceent= ? AND crcedocno=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrt420_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005, 
       crce006,crce007,crce008,crce009,crce010,crceunit,crcestus,crceownid,crceowndp,crcecrtid,crcecrtdp, 
       crcecrtdt,crcemodid,crcemoddt,crcecnfid,crcecnfdt,t1.ooefl003 ,t2.crcbl003 ,t3.ooag011 ,t4.ooefl003 , 
       t5.ooag011 ,t6.ooefl003 ,t7.ooag011 ,t8.ooag011",
               " FROM crce_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=crcesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN crcbl_t t2 ON t2.crcblent='"||g_enterprise||"' AND t2.crcbl001=crce008 AND t2.crcbl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent='"||g_enterprise||"' AND t3.ooag001=crceownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=crceowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent='"||g_enterprise||"' AND t5.ooag001=crcecrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent='"||g_enterprise||"' AND t6.ooefl001=crcecrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=crcemodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent='"||g_enterprise||"' AND t8.ooag001=crcecnfid  ",
 
               " WHERE crceent = '" ||g_enterprise|| "' AND crcedocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE acrt420_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_acrt420 WITH FORM cl_ap_formpath("acr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL acrt420_init()   
 
      #進入選單 Menu (="N")
      CALL acrt420_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_acrt420
      
   END IF 
   
   CLOSE acrt420_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="acrt420.modify" ver="6" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION acrt420_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   ERROR ""
  
   LET g_crcedocno_t = g_crce_m.crcedocno
 
   CALL s_transaction_begin()
   
   OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
   IF STATUS THEN
      CALL cl_err("OPEN acrt420_cl:", STATUS, 1)
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_crce_m.crcedocno,SQLCA.sqlcode,0)
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL acrt420_show()
   WHILE TRUE
      LET g_crcedocno_t = g_crce_m.crcedocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_crce_m.crcemodid = g_user 
LET g_crce_m.crcemoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL acrt420_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_crce_m.* = g_crce_m_t.*
         CALL acrt420_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE crce_t SET (crcemodid,crcemoddt) = (g_crce_m.crcemodid,g_crce_m.crcemoddt)
       WHERE crceent = g_enterprise AND crcedocno = g_crcedocno_t
 
                  
      #若單頭key欄位有變更
      IF g_crce_m.crcedocno != g_crcedocno_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE crcf_t SET crcfdocno = g_crce_m.crcedocno
 
          WHERE crcfent = g_enterprise AND crcfdocno = g_crcedocno_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("crcf_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("crcf_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE crcg_t
            SET crcgdocno = g_crce_m.crcedocno
 
          WHERE crcgent = g_enterprise AND
                crcgdocno = g_crcedocno_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("crcg_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("crcg_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_crce_m.crcedocno,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE acrt420_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_crce_m.crcedocno,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="acrt420.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="acrt420.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="acrt420.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION acrt420_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_crcf_d.clear()
   CALL g_crcf2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL acrt420_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL acrt420_browser_fill("")
      CALL acrt420_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL acrt420_filter_show('crcesite')
   CALL acrt420_filter_show('crcedocdt')
   CALL acrt420_filter_show('crcedocno')
   CALL acrt420_filter_show('crce001')
   CALL acrt420_filter_show('crce002')
   CALL acrt420_filter_show('crce003')
   CALL acrt420_filter_show('crce004')
   CALL acrt420_filter_show('crce005')
   CALL acrt420_filter_show('crce006')
   CALL acrt420_filter_show('crce007')
   CALL acrt420_filter_show('crce008')
   CALL acrt420_filter_show('crce009')
   CALL acrt420_filter_show('crce010')
   CALL acrt420_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL acrt420_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.reproduce" ver="5" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION acrt420_reproduce()
   DEFINE l_newno     LIKE crce_t.crcedocno 
   DEFINE l_oldno     LIKE crce_t.crcedocno 
 
   DEFINE l_master    RECORD LIKE crce_t.*
   DEFINE l_detail    RECORD LIKE crcf_t.*
 
   DEFINE l_detail2    RECORD LIKE crcg_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_crcedocno_t = g_crce_m.crcedocno
 
    
   LET g_crce_m.crcedocno = ""
 
    
   CALL acrt420_set_entry('a')
   CALL acrt420_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_crce_m.crceownid = g_user
      LET g_crce_m.crceowndp = g_dept
      LET g_crce_m.crcecrtid = g_user
      LET g_crce_m.crcecrtdp = g_dept 
      LET g_crce_m.crcecrtdt = cl_get_current()
      LET g_crce_m.crcemodid = ""
      LET g_crce_m.crcemoddt = ""
      LET g_crce_m.crcestus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL acrt420_input("r")
   
      LET g_crce_m.crcedocno_desc = ''
   DISPLAY BY NAME g_crce_m.crcedocno_desc
 
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   #將新增的資料併入搜尋條件中
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = "(",g_wc,  
              " OR (",
              " crcedocno = '", g_crce_m.crcedocno CLIPPED, "' "
 
              , ")) "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION acrt420_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("crcedocno",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION acrt420_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="acrt420.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION acrt420_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("crcedocno",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION acrt420_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="acrt420.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION acrt420_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_crce_m.crcedocno
   LET g_pk_array[1].column = 'crcedocno'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="acrt420.show" ver="7" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION acrt420_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL acrt420_b_fill() #單身填充
      CALL acrt420_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_crce_m.crceownid_desc = cl_get_username(g_crce_m.crceownid)
      #LET g_crce_m.crceowndp_desc = cl_get_deptname(g_crce_m.crceowndp)
      #LET g_crce_m.crcecrtid_desc = cl_get_username(g_crce_m.crcecrtid)
      #LET g_crce_m.crcecrtdp_desc = cl_get_deptname(g_crce_m.crcecrtdp)
      #LET g_crce_m.crcemodid_desc = cl_get_username(g_crce_m.crcemodid)
      #LET g_crce_m.crcecnfid_desc = cl_get_deptname(g_crce_m.crcecnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL acrt420_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcesite_desc,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crcedocno_desc, 
       g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006, 
       g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce008_desc,g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010, 
       g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceownid_desc,g_crce_m.crceowndp, 
       g_crce_m.crceowndp_desc,g_crce_m.crcecrtid,g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp,g_crce_m.crcecrtdp_desc, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemodid_desc,g_crce_m.crcemoddt,g_crce_m.crcecnfid, 
       g_crce_m.crcecnfid_desc,g_crce_m.crcecnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_crce_m.crcestus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_crcf_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_crcf2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL acrt420_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="acrt420.state_change" ver="3" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION acrt420_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_crce_m.crcestus
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "X"
               HIDE OPTION "invalid"
            WHEN "Y"
               HIDE OPTION "confirmed"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION unconfirmed
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.unconfirmed"/>}
         #end add-point
         EXIT MENU
      ON ACTION invalid
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.invalid"/>}
         #end add-point
         EXIT MENU
      ON ACTION confirmed
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.confirmed"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE crce_t SET crcestus = lc_state 
    WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         
      END CASE
      LET g_crce_m.crcestus = lc_state
      DISPLAY BY NAME g_crce_m.crcestus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="acrt420.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION acrt420_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_crcedocno = g_crce_m.crcedocno 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION acrt420_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.ui_dialog" ver="21" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION acrt420_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL acrt420_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL acrt420_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_crcedocno = g_crcedocno_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL acrt420_fetch('') # reload data
               LET l_ac = 1
               CALL acrt420_ui_detailshow() #Setting the current row 
      
               CALL acrt420_idx_chk()
               #NEXT FIELD crcf001
         
         END DISPLAY
        
         DISPLAY ARRAY g_crcf_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL acrt420_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
                              CALL acrt420_b_fill2('2')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL acrt420_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         DISPLAY ARRAY g_crcf2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL acrt420_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL acrt420_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL acrt420_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL acrt420_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL acrt420_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL acrt420_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL acrt420_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL acrt420_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL acrt420_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL acrt420_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL acrt420_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION previous
            CALL acrt420_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION jump
            CALL acrt420_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION next
            CALL acrt420_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION last
            CALL acrt420_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD crcf001
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL acrt420_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL acrt420_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL acrt420_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL acrt420_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL acrt420_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL acrt420_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL acrt420_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL acrt420_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL acrt420_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_crce_m.crcedocdt)
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="acrt420.ui_headershow" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION acrt420_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_crce_m.crcedocno = g_browser[g_current_idx].b_crcedocno   
 
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   CALL acrt420_show()
   
END FUNCTION
]]>
  </section>
  <section id="acrt420.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION acrt420_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE acrt420_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE acrt420_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="acrt420.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION acrt420_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcf_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE crcf_t 
         SET (crcfdocno,
              crcf001
              ,crcf002,crcf003,crcfsite,crcfunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_crcf_d[g_detail_idx].crcf002,g_crcf_d[g_detail_idx].crcf003,g_crcf_d[g_detail_idx].crcfsite, 
                  g_crcf_d[g_detail_idx].crcfunit) 
         WHERE crcfent = g_enterprise AND crcfdocno = ps_keys_bak[1] AND crcf001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("crcf_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("crcf_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE crcg_t 
         SET (crcgdocno,crcg001,
              crcg002
              ,crcg003,crcgsite,crcgunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_crcf2_d[g_detail_idx2].crcg003,g_crcf2_d[g_detail_idx2].crcgsite,g_crcf2_d[g_detail_idx2].crcgunit)  

         WHERE crcgent = g_enterprise AND crcgdocno = ps_keys_bak[1] AND crcg001 = ps_keys_bak[2] AND crcg002 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("crcg_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("crcg_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcg_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.key.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE crcg_t 
         SET (crcgdocno,crcg001) 
              = 
             (ps_keys[1],ps_keys[2]) 
         WHERE crcgent = g_enterprise AND crcgdocno = ps_keys_bak[1] AND crcg001 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.key.m_update2"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("crcg_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("crcg_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.key.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
