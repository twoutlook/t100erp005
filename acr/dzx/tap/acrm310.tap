<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="acrm310" std_prog="acrm310" erpver="1.0" module="ACR" ver="2" env="s" zone="t10dev" booking="Y" type="M" identity="s">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
  </other>
  <point name="function.acrm310_crcbunit_ref" order="1" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
##display crcbunit
PRIVATE FUNCTION acrm310_crcbunit_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crcb_m.crcbunit
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_crcb_m.crcbunit_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_crcb_m.crcbunit_desc
END FUNCTION]]>
  </point>
  <point name="function.acrm310_crcb002_ref" order="2" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crcb002
PRIVATE FUNCTION acrm310_crcb002_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crcb_m.crcb002
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_crcb_m.crcb002_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_crcb_m.crcb002_desc
END FUNCTION]]>
  </point>
  <point name="function.acrm310_crcb003_ref" order="3" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crcb003
PRIVATE FUNCTION acrm310_crcb003_ref()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crcb_m.crcb003
   CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_crcb_m.crcb003_desc = '', g_rtn_fields[1] , ''
   DISPLAY BY NAME g_crcb_m.crcb003_desc
END FUNCTION]]>
  </point>
  <point name="function.acrm310_create_crcb003" order="4" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#display crcb003
PRIVATE FUNCTION acrm310_create_crcb003()
   SELECT ooag003 INTO g_crcb_m.crcb003
     FROM ooag_t
    WHERE ooagent = g_enterprise AND ooag001 = g_crcb_m.crcb002
   DISPLAY BY NAME g_crcb_m.crcb003    
END FUNCTION]]>
  </point>
  <point name="function.acrm310_sum_crcc004" order="5" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#sum crcc004
PRIVATE FUNCTION acrm310_sum_crcc004()
   
   SELECT sum(crcc004) INTO g_crcb_m.crcb004
     FROM crcc_t
    WHERE crccent = g_enterprise AND crcc001 = g_crcb_m.crcb001
   IF sqlca.sqlcode THEN
   ELSE
      UPDATE crcb_t SET crcb004 = g_crcb_m.crcb004
       WHERE crcbent = g_enterprise AND crcb001 = g_crcb_m.crcb001
      IF sqlca.sqlcode THEN
      ELSE
         DISPLAY BY NAME g_crcb_m.crcb004
      END IF      
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.acrm310_chk_crcd005" order="6" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
#chk crcd005
PRIVATE FUNCTION acrm310_chk_crcd005()
   DEFINE  l_sql   STRING
   DEFINE  l_crcd005 LIKE crcd_t.crcd005
   LET g_errno = NULL
   IF NOT cl_null(g_crcc_d[l_ac].crcc002) THEN
   LET l_sql = " SELECT crcd005 FROM crcd_t WHERE crcdent=",g_enterprise,
               "    AND crcd001='",g_crcb_m.crcb001,"' AND crcd002='",g_crcc_d[l_ac].crcc002,"' "
   PREPARE l_sql_crcd FROM l_sql
   DECLARE l_sql_crcd_cs CURSOR FOR l_sql_crcd
   FOREACH l_sql_crcd_cs INTO l_crcd005
      IF sqlca.sqlcode THEN
         LET g_errno=sqlca.sqlcode
         RETURN
      END IF
      IF l_crcd005 > g_crcc_d[l_ac].crcc004 THEN
         LET g_errno="acr-00023"
         RETURN
      END IF
      
   END FOREACH 
   END IF
       
END FUNCTION]]>
  </point>
  <point name="function.acrm310_crcd005" order="7" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
######chk crcd005##########################
PRIVATE FUNCTION acrm310_crcd005()
   DEFINE l_cnt  LIKE type_t.num5
   DEFINE l_cnt1 LIKE type_t.num5
   DEFINE l_crcd005 LIKE crcd_t.crcd005
   LET g_errno = NULL
   LET l_crcd005 = 0
   IF g_crcc2_d[l_ac].crcdstus='Y' THEN
      IF g_crcc_d[g_detail_idx].crcc005='M' AND g_crcc_d[g_detail_idx].crcc006='1' THEN
      IF cl_null(g_crcc2_d_t.crcd003) THEN
         SELECT sum(crcd005) INTO l_crcd005 FROM crcd_t
          WHERE crcdent = g_enterprise AND crcd001 = g_crcb_m.crcb001
            AND crcd002 = g_crcc_d[g_detail_idx].crcc002 AND crcdstus='Y'
      ELSE
         SELECT sum(crcd005) INTO l_crcd005 FROM crcd_t
          WHERE crcdent = g_enterprise AND crcd001 = g_crcb_m.crcb001
            AND crcd002 = g_crcc_d[g_detail_idx].crcc002 
            AND crcd003 <> g_crcc2_d_t.crcd003
            AND crcdstus='Y'
         LET l_crcd005 = l_crcd005+g_crcc2_d[l_ac].crcd005            
      END IF
      END IF
   END IF
   IF l_crcd005 > g_crcc_d[g_detail_idx].crcc004 THEN
      LET g_errno="acr-00049"
   END IF   
END FUNCTION]]>
  </point>
  <point name="function.acrm310_chk_crcc005" order="8" ver="1" cite_std="N" new="Y" status="" src="s" mark_hard="N">
    <![CDATA[
##多选合计分检查
PRIVATE FUNCTION acrm310_chk_crcc005()
   DEFINE l_cnt  LIKE type_t.num5
   DEFINE l_cnt1 LIKE type_t.num5
   DEFINE l_crcd005 LIKE crcd_t.crcd005
   LET l_crcd005 = 0
   let g_errno = null
   IF g_crcc_d[l_ac].crcc005='M' AND g_crcc_d[l_ac].crcc006='1' THEN
      SELECT sum(crcd005) INTO l_crcd005 FROM crcd_t
       WHERE crcdent = g_enterprise AND crcd001 = g_crcb_m.crcb001
         AND crcd002 = g_crcc_d_t.crcc002 AND crcdstus='Y'
      IF l_crcd005 > g_crcc_d[l_ac].crcc004 THEN
         LET g_errno="acr-00049"
      END IF  
   END IF      
END FUNCTION]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_crcb001
      CALL ap_ref_array2(g_ref_fields,"SELECT crcbl004 FROM crcbl_t WHERE crcblent='"||g_enterprise||"' AND crcbl001=? AND crcbl002='"||g_lang||"'", 
          "") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_crcbl004 = '', g_rtn_fields[1] , ''
      DISPLAY BY NAME g_browser[g_cnt].b_crcbl004]]>
  </point>
  <point name="construct.c.crcb001" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_crcb001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcb001  #顯示到畫面上
            NEXT FIELD crcb001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcb002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcb002  #顯示到畫面上
            NEXT FIELD crcb002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcb003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_4()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcb003  #顯示到畫面上
            NEXT FIELD crcb003                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcbcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcbcnfid  #顯示到畫面上
            NEXT FIELD crcbcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcbcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcbcrtdp  #顯示到畫面上
            NEXT FIELD crcbcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcbcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcbcrtid  #顯示到畫面上
            NEXT FIELD crcbcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcbmodid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcbmodid  #顯示到畫面上
            NEXT FIELD crcbmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcbowndp" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcbowndp  #顯示到畫面上
            NEXT FIELD crcbowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcbownid" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcbownid  #顯示到畫面上
            NEXT FIELD crcbownid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.crcbunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            LET g_qryparam.arg1 = g_site
            LET g_qryparam.arg2 = '2'
            CALL q_ooed004_3()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcbunit  #顯示到畫面上
            NEXT FIELD crcbunit                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page1.crcc002" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_crcc002()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcc002  #顯示到畫面上
            NEXT FIELD crcc002                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.page2.crcd003" order="" ver="1" cite_std="" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_crcd003()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crcd003  #顯示到畫面上
            NEXT FIELD crcd003                     #返回原欄位
    

]]>
  </point>
  <point name="fetch.action_control" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_crcb_m.crcbstus = 'Y' THEN
      CALL cl_set_act_visible("modify,delete", FALSE)
   ELSE
      IF g_crcb_m.crcbstus = 'X' THEN
         CALL cl_set_act_visible("delete", FALSE)
         CALL cl_set_act_visible("modify", TRUE)
      ELSE
         CALL cl_set_act_visible("modify,delete", TRUE)
      END IF   
   END IF]]>
  </point>
  <point name="input.a.crcb001" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  NOT cl_null(g_crcb_m.crcb001) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crcb_m.crcb001 != g_crcb001_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crcb_t WHERE "||"crcbent = '" ||g_enterprise|| "' AND "||"crcb001 = '"||g_crcb_m.crcb001 ||"'",'std-00004',0) THEN 
                     LET g_crcb_m.crcb001 = g_crcb_m_t.crcb001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF


]]>
  </point>
  <point name="input.a.crcb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crcb_m.crcb002_desc = NULL
            DISPLAY BY NAME g_crcb_m.crcb002_desc
            IF NOT cl_null(g_crcb_m.crcb002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crcb_m.crcb002 != g_crcb_m_t.crcb002 OR g_crcb_m_t.crcb002 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1=g_crcb_m.crcb002
                  
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooag001") THEN 
                  ELSE
                     #檢查失敗時後續處理
                     LET g_crcb_m.crcb002 = g_crcb_m_t.crcb002
                     CALL acrm310_crcb002_ref()
                     NEXT FIELD CURRENT
                  END IF
                  CALL acrm310_create_crcb003()
                  CALL acrm310_crcb003_ref()
               END IF

            END IF
            CALL acrm310_crcb002_ref()            
            ]]>
  </point>
  <point name="input.a.crcb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crcb_m.crcb003_desc = NULL
            DISPLAY BY NAME g_crcb_m.crcb003_desc
            IF NOT cl_null(g_crcb_m.crcb003) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crcb_m.crcb003 != g_crcb_m_t.crcb003 OR g_crcb_m_t.crcb003 IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1=g_crcb_m.crcb003
                  LET g_chkparam.arg2 = g_today
                     
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooeg001_3") THEN
                  ELSE
                  #檢查失敗時後續處理
                     LET g_crcb_m.crcb003 = g_crcb_m_t.crcb003
                     CALL acrm310_crcb003_ref()
                     NEXT FIELD CURRENT
                  END IF
               END IF

            END IF 
            CALL acrm310_crcb003_ref()
            ]]>
  </point>
  <point name="input.a.crcbunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crcb_m.crcbunit_desc = NULL
            DISPLAY BY NAME g_crcb_m.crcbunit_desc
            IF NOT cl_null(g_crcb_m.crcbunit) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crcb_m.crcbunit != g_crcb_m_t.crcbunit OR g_crcb_m_t.crcbunit IS NULL )) THEN 
                  #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
                  INITIALIZE g_chkparam.* TO NULL
               
                  #設定g_chkparam.*的參數
                  LET g_chkparam.arg1 = g_crcb_m.crcbunit
                  LET g_chkparam.arg2 = '2'
                  LET g_chkparam.arg3 = g_site   
                  #呼叫檢查存在並帶值的library
                  IF cl_chk_exist("v_ooed004") THEN
                  ELSE
                     #檢查失敗時後續處理
                     LET g_crcb_m.crcbunit = g_crcb_m_t.crcbunit
                     CALL acrm310_crcbunit_ref()
                     NEXT FIELD CURRENT
                  END IF

               END IF 
            END IF 
            CALL acrm310_crcbunit_ref()            
            
]]>
  </point>
  <point name="input.a.page1.crcc002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_crcb_m.crcb001 IS NOT NULL AND g_crcc_d[g_detail_idx].crcc002 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crcb_m.crcb001 != g_crcb001_t OR g_crcc_d[g_detail_idx].crcc002 != g_crcc_d_t.crcc002)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crcc_t WHERE "||"crccent = '" ||g_enterprise|| "' AND "||"crcc001 = '"||g_crcb_m.crcb001 ||"' AND "|| "crcc002 = '"||g_crcc_d[g_detail_idx].crcc002 ||"'",'std-00004',0) THEN 
                     LET g_crcc_d[l_ac].crcc002 = g_crcc_d_t.crcc002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page1.crcc004" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crcc_d[l_ac].crcc004) THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_crcc_d[l_ac].crcc004 != g_crcc_d_t.crcc004 OR g_crcc_d_t.crcc004 IS null)) THEN 
                  CALL acrm310_chk_crcd005()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_crcc_d[l_ac].crcc004,g_errno,1)
                     LET g_crcc_d[l_ac].crcc004 = g_crcc_d_t.crcc004
                     NEXT FIELD crcc004
                  END IF
               END IF
            END IF 

]]>
  </point>
  <point name="input.a.page1.crcc005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crcc_d[l_ac].crcc005) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_crcc_d[l_ac].crcc005 != g_crcc_d_t.crcc005 OR g_crcc_d_t.crcc005 IS null)) THEN 
                  IF g_crcc_d[l_ac].crcc005='M' THEN
                     IF cl_null(g_crcc_d[l_ac].crcc006) OR g_crcc_d[l_ac].crcc006='0' THEN
                        LET g_crcc_d[l_ac].crcc006 = '1'
                     END IF
                     CALL cl_set_comp_entry("crcc006",true)                       
                     DISPLAY g_crcc_d[l_ac].crcc006 TO s_detail1[l_ac].crcc006
                  ELSE
                     LET g_crcc_d[l_ac].crcc006 = '0'  
                     CALL cl_set_comp_entry("crcc006",FALSE)                      
                     DISPLAY g_crcc_d[l_ac].crcc006 TO s_detail1[l_ac].crcc006                  
                  END IF
                  CALL acrm310_chk_crcc005()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_crcc_d[l_ac].crcc005,g_errno,1)
                     LET g_crcc_d[l_ac].crcc005 = g_crcc_d_t.crcc005
                     
                     LET g_crcc_d[l_ac].crcc006 = g_crcc_d_t.crcc006
                     DISPLAY g_crcc_d[l_ac].crcc006 TO s_detail1[l_ac].crcc006
                     
                     NEXT FIELD crcc005
                  END IF
               END IF
            END IF
            IF g_crcc_d[l_ac].crcc005='M' THEN
               CALL cl_set_comp_entry("crcc006",true)                       
            ELSE 
               CALL cl_set_comp_entry("crcc006",FALSE)                                        
            END IF]]>
  </point>
  <point name="input.a.page1.crcc006" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crcc_d[l_ac].crcc005) THEN
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_crcc_d[l_ac].crcc006 != g_crcc_d_t.crcc006 OR g_crcc_d_t.crcc006 IS null)) THEN 
                  
                  CALL acrm310_chk_crcc005()
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_crcc_d[l_ac].crcc006,g_errno,1)
                     LET g_crcc_d[l_ac].crcc006 = g_crcc_d_t.crcc006
                     NEXT FIELD crcc006
                  END IF
               END IF
            END IF]]>
  </point>
  <point name="input.a.page2.crcd003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a05產生
            IF  g_crcb_m.crcb001 IS NOT NULL AND g_crcc_d[g_detail_idx].crcc002 IS NOT NULL AND g_crcc2_d[g_detail_idx2].crcd003 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crcb_m.crcb001 != g_crcb001_t OR g_crcc_d[g_detail_idx].crcc002 != g_crcc_d[g_detail_idx].crcc002 OR g_crcc2_d[g_detail_idx2].crcd003 != g_crcc2_d_t.crcd003)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crcd_t WHERE "||"crcdent = '" ||g_enterprise|| "' AND "||"crcd001 = '"||g_crcb_m.crcb001 ||"' AND "|| "crcd002 = '"||g_crcc_d[g_detail_idx].crcc002 ||"' AND "|| "crcd003 = '"||g_crcc2_d[g_detail_idx2].crcd003 ||"'",'std-00004',0) THEN 
                     LET g_crcc2_d[l_ac].crcd003 = g_crcc2_d_t.crcd003
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.crcd005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crcc2_d[l_ac].crcd005) THEN 
               IF g_crcc2_d[l_ac].crcd005>g_crcc_d[g_detail_idx].crcc004 THEN
                  CALL cl_err(g_crcc2_d[l_ac].crcd005||'>'||g_crcc_d[g_detail_idx].crcc004,"acr-00023",1)
                  LET g_crcc2_d[l_ac].crcd005=g_crcc2_d_t.crcd005
                  NEXT FIELD crcd005
               END IF
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_crcc2_d[l_ac].crcd005 != g_crcc2_d_t.crcd005 OR g_crcc2_d_t.crcd005 IS NULL )) THEN 
                  CALL acrm310_crcd005() 
                  IF NOT cl_null(g_errno) THEN
                     CALL cl_err(g_crcc2_d[l_ac].crcd005,g_errno,1)
                     LET g_crcc2_d[l_ac].crcd005 = g_crcc2_d_t.crcd005
                     NEXT FIELD crcd005
                  END IF
               END IF
            END IF 

]]>
  </point>
  <point name="input.a.page2.crcdstus" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF g_crcc2_d[l_ac].crcdstus IS NOT NULL THEN
            IF l_cmd = 'a' OR ( l_cmd = 'u' AND ( g_crcc2_d[l_ac].crcdstus != g_crcc2_d_t.crcdstus OR g_crcc2_d_t.crcdstus IS NULL )) THEN 
               CALL acrm310_crcd005() 
               IF NOT cl_null(g_errno) THEN
                  CALL cl_err(g_crcc2_d[l_ac].crcd005,g_errno,1)
                  LET g_crcc2_d[l_ac].crcd005 = g_crcc2_d_t.crcd005
                  NEXT FIELD crcd005
               END IF
            END IF
            END IF            ]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   let g_errshow = 1]]>
  </point>
  <point name="input.body.a_delete" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[                  CALL acrm310_sum_crcc004()
                  IF SQLCA.SQLcode  THEN
                     CALL cl_err("crcc_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')                    
                     CANCEL DELETE
                     RETURN
                  END IF]]>
  </point>
  <point name="input.body.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               CALL acrm310_sum_crcc004()
               IF SQLCA.SQLcode  THEN
                  CALL cl_err("crcc_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')                    
                  CANCEL INSERT
                  RETURN
               END IF]]>
  </point>
  <point name="input.body.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               IF g_crcc_d_t.crcc004 <> g_crcc_d[l_ac].crcc004 OR g_crcc_d_t.crcc004 IS NULL THEN
                  CALL acrm310_sum_crcc004()
                  IF SQLCA.SQLcode  THEN
                     CALL cl_err("crcc_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')                    
                     RETURN
                  END IF
               END IF]]>
  </point>
  <point name="input.body.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[               ]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crcc_d[l_ac].crccstus = "Y" ]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            LET g_crcc2_d[l_ac].crcdstus = "Y" ]]>
  </point>
  <point name="input.c.crcb002" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crcb_m.crcb002             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #

            
            CALL q_ooag001()                                #呼叫開窗

            LET g_crcb_m.crcb002 = g_qryparam.return1              

            DISPLAY g_crcb_m.crcb002 TO crcb002              #
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_crcb_m.crcb002 != g_crcb_m_t.crcb002 OR g_crcb_m_t.crcb002 IS NULL )) THEN 
               CALL acrm310_crcb002_ref()
               CALL acrm310_create_crcb003()
               CALL acrm310_crcb003_ref()
            END IF
            NEXT FIELD crcb002                          #返回原欄位

]]>
  </point>
  <point name="input.c.crcb003" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crcb_m.crcb003             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_today#

            
            CALL q_ooeg001_4()                                #呼叫開窗

            LET g_crcb_m.crcb003 = g_qryparam.return1              

            DISPLAY g_crcb_m.crcb003 TO crcb003              #
            CALL acrm310_crcb003_ref() 
            NEXT FIELD crcb003                          #返回原欄位

]]>
  </point>
  <point name="input.c.crcbunit" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            #此段落由子樣板a07產生            
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_crcb_m.crcbunit             #給予default值

            #給予arg
            LET g_qryparam.arg1 = g_site #
            LET g_qryparam.arg2 = "2" #
            
            CALL q_ooed004_3()                                #呼叫開窗

            LET g_crcb_m.crcbunit = g_qryparam.return1              

            DISPLAY g_crcb_m.crcbunit TO crcbunit              #
            CALL acrm310_crcbunit_ref()
            NEXT FIELD crcbunit                          #返回原欄位

]]>
  </point>
  <point name="input.g.page1.crcc005" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL cl_set_comp_entry("crcc006",false)
            IF g_crcc_d[l_ac].crcc005='M' THEN
               CALL cl_set_comp_entry("crcc006",true)
               LET g_crcc_d[l_ac].crcc006 = '1' 
            ELSE
               LET g_crcc_d[l_ac].crcc006 = '0'
               CALL cl_set_comp_entry("crcc006",false)               
            END IF
            DISPLAY g_crcc_d[l_ac].crcc006 TO s_detail1[l_ac].crcc006]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            CALL acrm310_set_entry(p_cmd)
            CALL acrm310_set_no_entry(p_cmd)]]>
  </point>
  <point name="input.master_input.update_item" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_crcb_m.crcb001) THEN
               CALL n_crcbl(g_crcb_m.crcb001)
               INITIALIZE g_ref_fields TO NULL
               LET g_ref_fields[1] = g_crcb_m.crcb001
               CALL ap_ref_array2(g_ref_fields," SELECT crcbl003,crcbl004 FROM crcbl_t WHERE crcblent = '"
                    ||g_enterprise||"' AND crcbl001 = ?  AND crcbl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields
               LET g_crcb_m.crcbl003 = g_rtn_fields[1]
               LET g_crcb_m.crcbl004 = g_rtn_fields[2]
               DISPLAY BY NAME g_crcb_m.crcbl003
               DISPLAY BY NAME g_crcb_m.crcbl004
            END IF   ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      LET g_crcb_m.crcbunit = g_site
      CALL acrm310_crcbunit_ref()
      LET g_crcb_m.crcbstus = "N"
      LET g_crcb_m.crcb002 = g_user
      CALL acrm310_crcb002_ref()
      LET g_crcb_m.crcb003 = g_dept
      CALL acrm310_crcb003_ref()
      LET g_crcb_m_t.* = g_crcb_m.*]]>
  </point>
  <point name="modify.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   IF g_crcb_m.crcbstus='Y' THEN
      RETURN
   END IF]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET g_crcb_m.crcbcnfid = ""
   LET g_crcb_m.crcbcnfdt = ""
   LET g_crcb_m.crcbunit = g_site
   CALL acrm310_crcbunit_ref()
   LET g_crcb_m.crcbstus = "N"
   LET g_crcb_m.crcb002 = g_user
   CALL acrm310_crcb002_ref()
   LET g_crcb_m.crcb003 = g_dept
   CALL acrm310_crcb003_ref()]]>
  </point>
  <point name="set_entry_b.set_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   CALL cl_set_comp_entry("crcc006",false)]]>
  </point>
  <point name="set_no_entry_b.set_no_entry_b" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   
   IF g_crcc_d[l_ac].crcc005='M' THEN
      CALL cl_set_comp_entry("crcc006",true)          
   END IF]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crcb_m.crcb001
   CALL ap_ref_array2(g_ref_fields," SELECT crcbl003 FROM crcbl_t WHERE crcblent = '"||g_enterprise||"' AND crcbl001 = ? AND crcbl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_crcb_m.crcbl003 = g_rtn_fields[1] 
   DISPLAY g_crcb_m.crcbl003 TO crcbl003
   
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crcb_m.crcb001
   CALL ap_ref_array2(g_ref_fields," SELECT crcbl004 FROM crcbl_t WHERE crcblent = '"||g_enterprise||"' AND crcbl001 = ? AND crcbl002 = '"||g_dlang||"'","") RETURNING g_rtn_fields 
   LET g_crcb_m.crcbl004 = g_rtn_fields[1] 
   DISPLAY g_crcb_m.crcbl004 TO crcbl004
   
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcbunit
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crcb_m.crcbunit_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcbunit_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcb002
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crcb_m.crcb002_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcb002_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcb003
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crcb_m.crcb003_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcb003_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcbownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crcb_m.crcbownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcbownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcbowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crcb_m.crcbowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcbowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcbcrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crcb_m.crcbcrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcbcrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcbcrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crcb_m.crcbcrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcbcrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcbmodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crcb_m.crcbmodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcbmodid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crcb_m.crcbcnfid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crcb_m.crcbcnfid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crcb_m.crcbcnfid_desc
]]>
  </point>
  <point name="statechange.a_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   SELECT crcbstus,crcbcnfid,crcbcnfdt,crcbpstid,crcbpstdt
     INTO g_crcb_m.crcbstus,g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt
     FROM crcb_t
    WHERE crcbent = g_enterprise AND crcb001 = g_crcb_m.crcb001
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_crcb_m.crcbcnfid
   CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
   LET g_crcb_m.crcbcnfid_desc = g_rtn_fields[1]
   DISPLAY BY NAME g_crcb_m.crcbcnfid_desc
      
   IF g_crcb_m.crcbstus = 'Y' THEN
      CALL cl_set_act_visible("modify,delete", FALSE)
   ELSE
      IF g_crcb_m.crcbstus = 'X' THEN
         CALL cl_set_act_visible("delete", FALSE)
         CALL cl_set_act_visible("modify", TRUE)
      ELSE
         CALL cl_set_act_visible("modify,delete", TRUE)
      END IF   
   END IF
   CALL cl_set_act_visible("valid,open,void", true)
   IF g_crcb_m.crcbstus = 'N' THEN
      CALL cl_set_act_visible("valid,void", true)
      CALL cl_set_act_visible("open", FALSE)      
   END IF
   IF g_crcb_m.crcbstus = 'Y' THEN
      CALL cl_set_act_visible("open", TRUE)
      CALL cl_set_act_visible("valid,void", FALSE)      
   END IF
   IF g_crcb_m.crcbstus = 'X' THEN
      CALL cl_set_act_visible("valid,void", FALSE)
      CALL cl_set_act_visible("open", true)
   END IF
   DISPLAY BY NAME g_crcb_m.crcbstus,g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt]]>
  </point>
  <point name="statechange.b_update" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   LET l_success = TRUE
   SELECT crcbstus INTO  g_crcb_m.crcbstus FROM crcb_t WHERE crcb001 = g_crcb_m.crcb001
      AND crcbent = g_enterprise
   CASE 
      WHEN lc_state = 'Y' AND g_crcb_m.crcbstus = 'N'            
         CALL s_acrm310_conf_chk(g_crcb_m.crcb001,g_crcb_m.crcbstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-014') THEN
               CALL s_transaction_begin()
               CALL s_acrm310_conf_upd(g_crcb_m.crcb001) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')               
               END IF
            ELSE
               RETURN
            END IF            
         ELSE
            CALL cl_err(g_crcb_m.crcb001,g_errno,1)
            RETURN            
         END IF
                
      WHEN lc_state = 'X' AND g_crcb_m.crcbstus = 'N' 
         CALL s_acrm310_void_chk(g_crcb_m.crcb001,g_crcb_m.crcbstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-016') THEN
               CALL s_transaction_begin()
               CALL s_acrm310_void_upd(g_crcb_m.crcb001) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_crcb_m.crcb001,g_errno,1)
            RETURN    
         END IF
      WHEN lc_state = 'N' AND g_crcb_m.crcbstus = 'Y' 
         SELECT crcbstus INTO  g_crcb_m.crcbstus FROM crcb_t WHERE crcb001 = g_crcb_m.crcb001
            AND crcbent = g_enterprise
         CALL s_acrm310_unconf_chk(g_crcb_m.crcb001,g_crcb_m.crcbstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-015') THEN
               CALL s_transaction_begin()
               CALL s_acrm310_unconf_upd(g_crcb_m.crcb001) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_crcb_m.crcb001,g_errno,1)
            RETURN    
         END IF
      WHEN lc_state = 'N' AND g_crcb_m.crcbstus = 'X' 
         SELECT crcbstus INTO  g_crcb_m.crcbstus FROM crcb_t WHERE crcb001 = g_crcb_m.crcb001
            AND crcbent = g_enterprise
         CALL s_acrm310_unvoid_chk(g_crcb_m.crcb001,g_crcb_m.crcbstus) RETURNING l_success,g_errno
         IF l_success THEN
            IF cl_ask_confirm('lib-053') THEN
               CALL s_transaction_begin()
               CALL s_acrm310_unvoid_upd(g_crcb_m.crcb001) RETURNING l_success
               IF NOT l_success THEN
                  CALL s_transaction_end('N','0')
                  RETURN
               ELSE
                  CALL s_transaction_end('Y','1')
               END IF
            ELSE
               RETURN
            END IF
         ELSE
            CALL cl_err(g_crcb_m.crcb001,g_errno,1)
            RETURN    
         END IF
            
      
      OTHERWISE 
         RETURN     
   END CASE]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   ]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[      CALL cl_set_act_visible("valid,open,void", true)
      IF g_crcb_m.crcbstus = 'N' THEN
         CALL cl_set_act_visible("valid,void", true)
         CALL cl_set_act_visible("open", FALSE)      
      END IF
      IF g_crcb_m.crcbstus = 'Y' THEN
         CALL cl_set_act_visible("open", TRUE)
         CALL cl_set_act_visible("valid,void", FALSE)      
      END IF
      IF g_crcb_m.crcbstus = 'X' THEN
         CALL cl_set_act_visible("valid,void", FALSE)
         CALL cl_set_act_visible("open", true)
      END IF]]>
  </point>
  <point name="statechange.define" order="" ver="1" cite_std="N" new="N" status="" src="s" mark_hard="N">
    <![CDATA[   DEFINE l_success      LIKE type_t.num5]]>
  </point>
  <section id="acrm310.b_fill" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION acrm310_b_fill()
   DEFINE p_wc2      STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point     
 
   CALL g_crcc_d.clear()    #g_crcc_d 單頭及單身 
   CALL g_crcc2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF acrm310_fill_chk(1) THEN
   
      LET g_sql = "SELECT  UNIQUE crccstus,crcc002,crcc003,crcc004,crcc005,crcc006  FROM crcc_t",   
                  " INNER JOIN crcb_t ON crcb001 = crcc001 ",
 
                  #"",
                  " LEFT JOIN crcd_t ON crccent = crcdent AND crcc001 = crcd001 AND crcc002 = crcd002 ",
                  "",
                  
                  " WHERE crccent=? AND crcc001=?"
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      #add-point:b_fill段sql_before
      {<point name="b_fill.body.fill_sql"/>}
      #end add-point
      IF NOT cl_null(g_wc2_table1) THEN
         LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
      END IF
      
      #子單身的WC
         IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
      
      LET g_sql = g_sql, " ORDER BY crcc_t.crcc002"
      
      #add-point:單身填充控制
      {<point name="b_fill.sql"/>}
      #end add-point
      
      LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
      PREPARE acrm310_pb FROM g_sql
      DECLARE b_fill_cs CURSOR FOR acrm310_pb
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_crcb_m.crcb001
                                               
      FOREACH b_fill_cs INTO g_crcc_d[l_ac].crccstus,g_crcc_d[l_ac].crcc002,g_crcc_d[l_ac].crcc003,g_crcc_d[l_ac].crcc004, 
          g_crcc_d[l_ac].crcc005,g_crcc_d[l_ac].crcc006
         IF SQLCA.sqlcode THEN
            CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         LET l_ac = l_ac + 1
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               CALL cl_err( '', 9035, 1)
            END IF
            EXIT FOREACH
         END IF
         
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_crcc_d.deleteElement(g_crcc_d.getLength())
   CALL g_crcc2_d.deleteElement(g_crcc2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE acrm310_pb
 
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.b_fill2" ver="2" status="" src="s">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION acrm310_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF acrm310_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_crcc_d.getLength() > 0 THEN
               CALL g_crcc2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE crcdstus,crcd003,crcd004,crcd005  FROM crcd_t",    
                     "",
                     
                     " WHERE crcdent=? AND crcd001=? AND crcd002=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  crcd_t.crcd003" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE acrm310_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR acrm310_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,
                                        g_crcb_m.crcb001,g_crcc_d[g_detail_idx].crcc002
         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_crcc2_d[l_ac].crcdstus,g_crcc2_d[l_ac].crcd003,g_crcc2_d[l_ac].crcd004, 
             g_crcc2_d[l_ac].crcd005 
            IF SQLCA.sqlcode THEN
               CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            LET l_ac = l_ac + 1
            IF l_ac > g_max_rec THEN
               CALL cl_err( '', 9035, 0 )
               EXIT FOREACH
            END IF
            
         END FOREACH
               CALL g_crcc2_d.deleteElement(g_crcc2_d.getLength())
 
      END IF
   END IF
 
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL acrm310_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.browser_fill" ver="3" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION acrm310_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_crcb_m.* TO NULL
   CALL g_crcc_d.clear()        
   CALL g_crcc2_d.clear() 
 
   CALL g_browser.clear()
   
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = "crcb001"
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
    
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE crcb001 ",
                      " FROM crcb_t ",
                      " ",
                      " LEFT JOIN crcc_t ON crccent = crcbent AND crcb001 = crcc001 ",
 
                      " LEFT JOIN crcd_t ON crcdent = crcbent AND crcc001 = crcd001 AND crcc002 = crcd002", 
 
 
                      " LEFT JOIN crcbl_t ON crcb001 = crcbl001 AND crcbl002 = '",g_lang,"' ", 
                      " ", 
                      " WHERE crcbent = '" ||g_enterprise|| "' AND crccent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("crcb_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE crcb001 ",
                      " FROM crcb_t ", 
                      "  ",
                      "  LEFT JOIN crcbl_t ON crcb001 = crcbl001 AND crcbl002 = '",g_lang,"' ",
                      " WHERE crcbent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("crcb_t")
   END IF
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #依照crcbunit,'',crcb001,'','',crcb002,'',crcb003,'',crcb004,crcb005 Browser欄位定義(取代原本bs_sql功能)
   LET g_sql = " SELECT DISTINCT crcbstus,crcbunit,'',crcb001,'','',crcb002,'',crcb003,'',crcb004,crcb005, 
       t1.ooefl003 ,t2.crcbl003 ,t3.oofa011 ,t4.ooefl003 ",
               " FROM crcb_t ",
               "  ",
               "  LEFT JOIN crcc_t ON crccent = crcbent AND crcb001 = crcc001 ",
 
               "  LEFT JOIN crcd_t ON crcdent = crcbent AND crcc001 = crcd001 AND crcc002 = crcd002",
 
 
               "  LEFT JOIN crcbl_t ON crcb001 = crcbl001 AND crcbl002 = '",g_lang,"' ",
               "  ",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=crcbunit AND t1.ooefl002='"||g_lang||"' ",
               " LEFT JOIN crcbl_t t2 ON t2.crcblent='"||g_enterprise||"' AND t2.crcbl001=crcb001 AND t2.crcbl002='"||g_lang||"' ",
               " LEFT JOIN oofa_t t3 ON t3.oofaent='"||g_enterprise||"' AND t3.oofa002='2' AND t3.oofa003=crcb002  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent='"||g_enterprise||"' AND t4.ooefl001=crcb003 AND t4.ooefl002='"||g_lang||"' ",
 
               " WHERE crcbent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("crcb_t"),
               " ORDER BY ",l_searchcol," ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill,open
   {<point name="browser_fill.open"/>}
   #end add-point
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_crcbunit,g_browser[g_cnt].b_crcbunit_desc, 
       g_browser[g_cnt].b_crcb001,g_browser[g_cnt].b_crcb001_desc,g_browser[g_cnt].b_crcbl004,g_browser[g_cnt].b_crcb002, 
       g_browser[g_cnt].b_crcb002_desc,g_browser[g_cnt].b_crcb003,g_browser[g_cnt].b_crcb003_desc,g_browser[g_cnt].b_crcb004, 
       g_browser[g_cnt].b_crcb005,g_browser[g_cnt].b_crcbunit_desc,g_browser[g_cnt].b_crcb001_desc,g_browser[g_cnt].b_crcb002_desc, 
       g_browser[g_cnt].b_crcb003_desc
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
            #此段落由子樣板a24產生
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/open.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/void.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/valid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         CALL cl_err('',9035,0)
         EXIT FOREACH
      END IF
      
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   LET g_header_cnt = g_browser.getLength()
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.browser_search" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION acrm310_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1 "
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY crcb001"
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL acrm310_browser_fill("F")
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.construct" ver="3" status="" src="s">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION acrm310_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_crcb_m.* TO NULL
   CALL g_crcc_d.clear()        
   CALL g_crcc2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON crcbunit,crcb001,crcbl003,crcbl004,crcb002,crcb003,crcb004,crcb005,crcbstus, 
          crcbownid,crcbowndp,crcbcrtid,crcbcrtdp,crcbcrtdt,crcbmodid,crcbmoddt,crcbcnfid,crcbcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<crcbcrtdt>>----
         AFTER FIELD crcbcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcbmoddt>>----
         AFTER FIELD crcbmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcbcnfdt>>----
         AFTER FIELD crcbcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcbpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.crcbunit
         ON ACTION controlp INFIELD crcbunit
            #add-point:ON ACTION controlp INFIELD crcbunit
            {<point name="construct.c.crcbunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbunit
            #add-point:BEFORE FIELD crcbunit
            {<point name="construct.b.crcbunit" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbunit
            
            #add-point:AFTER FIELD crcbunit
            {<point name="construct.a.crcbunit" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcb001
         ON ACTION controlp INFIELD crcb001
            #add-point:ON ACTION controlp INFIELD crcb001
            {<point name="construct.c.crcb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb001
            #add-point:BEFORE FIELD crcb001
            {<point name="construct.b.crcb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb001
            
            #add-point:AFTER FIELD crcb001
            {<point name="construct.a.crcb001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbl003
            #add-point:BEFORE FIELD crcbl003
            {<point name="construct.b.crcbl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbl003
            
            #add-point:AFTER FIELD crcbl003
            {<point name="construct.a.crcbl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcbl003
         ON ACTION controlp INFIELD crcbl003
            #add-point:ON ACTION controlp INFIELD crcbl003
            {<point name="construct.c.crcbl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbl004
            #add-point:BEFORE FIELD crcbl004
            {<point name="construct.b.crcbl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbl004
            
            #add-point:AFTER FIELD crcbl004
            {<point name="construct.a.crcbl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcbl004
         ON ACTION controlp INFIELD crcbl004
            #add-point:ON ACTION controlp INFIELD crcbl004
            {<point name="construct.c.crcbl004" />}
            #END add-point
 
         #Ctrlp:construct.c.crcb002
         ON ACTION controlp INFIELD crcb002
            #add-point:ON ACTION controlp INFIELD crcb002
            {<point name="construct.c.crcb002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb002
            #add-point:BEFORE FIELD crcb002
            {<point name="construct.b.crcb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb002
            
            #add-point:AFTER FIELD crcb002
            {<point name="construct.a.crcb002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcb003
         ON ACTION controlp INFIELD crcb003
            #add-point:ON ACTION controlp INFIELD crcb003
            {<point name="construct.c.crcb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb003
            #add-point:BEFORE FIELD crcb003
            {<point name="construct.b.crcb003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb003
            
            #add-point:AFTER FIELD crcb003
            {<point name="construct.a.crcb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb004
            #add-point:BEFORE FIELD crcb004
            {<point name="construct.b.crcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb004
            
            #add-point:AFTER FIELD crcb004
            {<point name="construct.a.crcb004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcb004
         ON ACTION controlp INFIELD crcb004
            #add-point:ON ACTION controlp INFIELD crcb004
            {<point name="construct.c.crcb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb005
            #add-point:BEFORE FIELD crcb005
            {<point name="construct.b.crcb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb005
            
            #add-point:AFTER FIELD crcb005
            {<point name="construct.a.crcb005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcb005
         ON ACTION controlp INFIELD crcb005
            #add-point:ON ACTION controlp INFIELD crcb005
            {<point name="construct.c.crcb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbstus
            #add-point:BEFORE FIELD crcbstus
            {<point name="construct.b.crcbstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbstus
            
            #add-point:AFTER FIELD crcbstus
            {<point name="construct.a.crcbstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcbstus
         ON ACTION controlp INFIELD crcbstus
            #add-point:ON ACTION controlp INFIELD crcbstus
            {<point name="construct.c.crcbstus" />}
            #END add-point
 
         #Ctrlp:construct.c.crcbownid
         ON ACTION controlp INFIELD crcbownid
            #add-point:ON ACTION controlp INFIELD crcbownid
            {<point name="construct.c.crcbownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbownid
            #add-point:BEFORE FIELD crcbownid
            {<point name="construct.b.crcbownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbownid
            
            #add-point:AFTER FIELD crcbownid
            {<point name="construct.a.crcbownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcbowndp
         ON ACTION controlp INFIELD crcbowndp
            #add-point:ON ACTION controlp INFIELD crcbowndp
            {<point name="construct.c.crcbowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbowndp
            #add-point:BEFORE FIELD crcbowndp
            {<point name="construct.b.crcbowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbowndp
            
            #add-point:AFTER FIELD crcbowndp
            {<point name="construct.a.crcbowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcbcrtid
         ON ACTION controlp INFIELD crcbcrtid
            #add-point:ON ACTION controlp INFIELD crcbcrtid
            {<point name="construct.c.crcbcrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbcrtid
            #add-point:BEFORE FIELD crcbcrtid
            {<point name="construct.b.crcbcrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbcrtid
            
            #add-point:AFTER FIELD crcbcrtid
            {<point name="construct.a.crcbcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crcbcrtdp
         ON ACTION controlp INFIELD crcbcrtdp
            #add-point:ON ACTION controlp INFIELD crcbcrtdp
            {<point name="construct.c.crcbcrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbcrtdp
            #add-point:BEFORE FIELD crcbcrtdp
            {<point name="construct.b.crcbcrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbcrtdp
            
            #add-point:AFTER FIELD crcbcrtdp
            {<point name="construct.a.crcbcrtdp" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbcrtdt
            #add-point:BEFORE FIELD crcbcrtdt
            {<point name="construct.b.crcbcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.crcbmodid
         ON ACTION controlp INFIELD crcbmodid
            #add-point:ON ACTION controlp INFIELD crcbmodid
            {<point name="construct.c.crcbmodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbmodid
            #add-point:BEFORE FIELD crcbmodid
            {<point name="construct.b.crcbmodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbmodid
            
            #add-point:AFTER FIELD crcbmodid
            {<point name="construct.a.crcbmodid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbmoddt
            #add-point:BEFORE FIELD crcbmoddt
            {<point name="construct.b.crcbmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.crcbcnfid
         ON ACTION controlp INFIELD crcbcnfid
            #add-point:ON ACTION controlp INFIELD crcbcnfid
            {<point name="construct.c.crcbcnfid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbcnfid
            #add-point:BEFORE FIELD crcbcnfid
            {<point name="construct.b.crcbcnfid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbcnfid
            
            #add-point:AFTER FIELD crcbcnfid
            {<point name="construct.a.crcbcnfid" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbcnfdt
            #add-point:BEFORE FIELD crcbcnfdt
            {<point name="construct.b.crcbcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON crccstus,crcc002,crcc003,crcc004,crcc005,crcc006
           FROM s_detail1[1].crccstus,s_detail1[1].crcc002,s_detail1[1].crcc003,s_detail1[1].crcc004, 
               s_detail1[1].crcc005,s_detail1[1].crcc006
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       #此段落由子樣板a11產生
         ##----<<crcccrtdt>>----
         
         #----<<crccmoddt>>----
         
         #----<<crcccnfdt>>----
         
         #----<<crccpstdt>>----
 
 
         
       #單身一般欄位開窗相關處理
          
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON crcdstus,crcd003,crcd004,crcd005
           FROM s_detail2[1].crcdstus,s_detail2[1].crcd003,s_detail2[1].crcd004,s_detail2[1].crcd005
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       #此段落由子樣板a11產生
         ##----<<crcdcrtdt>>----
         
         #----<<crcdmoddt>>----
         
         #----<<crcdcnfdt>>----
         
         #----<<crcdpstdt>>----
 
 
       
       #單身一般欄位開窗相關處理       
          
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.default_search" ver="2" status="" src="s">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION acrm310_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " crcb001 = '", g_argv[01], "' AND "
   END IF
   
 
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      LET g_default = FALSE
      #預設查詢條件
      LET g_wc = cl_qbe_get_default_qryplan()
      IF cl_null(g_wc) THEN
         LET g_wc = " 1=1"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.delete" ver="5" status="" src="s">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION acrm310_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point     
   
   IF g_crcb_m.crcb001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   EXECUTE acrm310_master_referesh USING g_crcb_m.crcb001 INTO g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcb002, 
       g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp, 
       g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdt,g_crcb_m.crcbmodid,g_crcb_m.crcbmoddt, 
       g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt,g_crcb_m.crcbunit_desc,g_crcb_m.crcb002_desc,g_crcb_m.crcb003_desc, 
       g_crcb_m.crcbownid_desc,g_crcb_m.crcbowndp_desc,g_crcb_m.crcbcrtid_desc,g_crcb_m.crcbcrtdp_desc, 
       g_crcb_m.crcbmodid_desc,g_crcb_m.crcbcnfid_desc
   
   LET g_master_multi_table_t.crcbl001 = g_crcb_m.crcb001
LET g_master_multi_table_t.crcbl003 = g_crcb_m.crcbl003
LET g_master_multi_table_t.crcbl004 = g_crcb_m.crcbl004
 
 
   CALL acrm310_show()
   
   CALL s_transaction_begin()
 
   OPEN acrm310_cl USING g_enterprise,g_crcb_m.crcb001
   IF STATUS THEN
      CALL cl_err("OPEN acrm310_cl:", STATUS, 1)
      CLOSE acrm310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE acrm310_master_referesh USING g_crcb_m.crcb001 INTO g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcb002, 
       g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp, 
       g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdt,g_crcb_m.crcbmodid,g_crcb_m.crcbmoddt, 
       g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt,g_crcb_m.crcbunit_desc,g_crcb_m.crcb002_desc,g_crcb_m.crcb003_desc, 
       g_crcb_m.crcbownid_desc,g_crcb_m.crcbowndp_desc,g_crcb_m.crcbcrtid_desc,g_crcb_m.crcbcrtdp_desc, 
       g_crcb_m.crcbmodid_desc,g_crcb_m.crcbcnfid_desc
 
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_crcb_m.crcb001,SQLCA.sqlcode,0)          #資料被他人LOCK
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #+ 此段落由子樣板a47產生
      #刪除相關文件
      CALL acrm310_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
  
  
      #資料備份
      LET g_crcb001_t = g_crcb_m.crcb001
 
 
      DELETE FROM crcb_t
       WHERE crcbent = g_enterprise AND crcb001 = g_crcb_m.crcb001
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         CALL cl_err(g_crcb_m.crcb001,SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM crcc_t
       WHERE crccent = g_enterprise AND crcc001 = g_crcb_m.crcb001
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcc_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM crcd_t
       WHERE crcdent = g_enterprise AND
             crcd001 = g_crcb_m.crcb001
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcd_t",SQLCA.sqlcode,0) 
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
                                                               
      CLEAR FORM
      CALL g_crcc_d.clear() 
      CALL g_crcc2_d.clear()       
 
     
      #CALL acrm310_ui_browser_refresh()  
      CALL acrm310_ui_headershow()  
      CALL acrm310_ui_detailshow()
       
      IF g_browser_cnt > 0 THEN 
         CALL acrm310_browser_fill("")
         CALL acrm310_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
      ELSE
         LET g_wc = " 1=1"
         CALL acrm310_browser_fill("F")
      END IF
      
      #單頭多語言刪除
      INITIALIZE l_var_keys_bak TO NULL 
   INITIALIZE l_field_keys   TO NULL 
   LET l_var_keys_bak[01] = g_master_multi_table_t.crcbl001
   LET l_field_keys[01] = 'crcbl001'
   LET l_var_keys_bak[02] = g_dlang
   LET l_field_keys[02] = 'crcbl002'
   CALL cl_multitable_delete(l_field_keys,l_var_keys_bak,'crcbl_t')
 
      
      #單身多語言刪除
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   
   CLOSE acrm310_cl
 
   #流程通知預埋點-D
   CALL cl_flow_notify(g_crcb_m.crcb001,'D')
    
END FUNCTION
]]>
  </section>
  <section id="acrm310.delete_b" ver="1" status="" src="s">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION acrm310_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM crcc_t
       WHERE crccent = g_enterprise AND
         crcc001 = ps_keys_bak[1] AND crcc002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point   
   END IF
   
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM crcd_t
       WHERE crcd001 = ps_keys_bak[1] AND crcd002 = ps_keys_bak[2]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.description" ver="37" status="" src="s">
    <![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000058
#+ 
#+ Filename...: acrm310
#+ Description: 客戶調查問卷維護作業
#+ Creator....: 02296(2014/04/23)
#+ Modifier...: 02296(2014/06/27)
#+ Buildtype..: 應用 t01 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
  </section>
  <section id="acrm310.detail_reproduce" ver="2" status="" src="s">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION acrm310_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE crcc_t.*
 
   DEFINE l_detail2    RECORD LIKE crcd_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE acrm310_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE acrm310_detail AS ",
                "SELECT * FROM crcc_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO acrm310_detail SELECT * FROM crcc_t 
                                         WHERE crccent = g_enterprise AND crcc001 = g_crcb001_t
 
   
   #將key修正為調整後   
   UPDATE acrm310_detail 
      #更新key欄位
      SET crcc001 = g_crcb_m.crcb001
 
      #更新共用欄位
      #此段落由子樣板a13產生
      #, crccstus = "Y"
 
#此段落由子樣板a13產生
      #, crcdstus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO crcc_t SELECT * FROM acrm310_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE acrm310_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE acrm310_detail AS ",
      "SELECT * FROM crcd_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO acrm310_detail SELECT * FROM crcd_t
                                         WHERE crcdent = g_enterprise AND crcd001 = g_crcb001_t
 
 
   #將key修正為調整後   
   UPDATE acrm310_detail SET crcd001 = g_crcb_m.crcb001
 
  
   #將資料塞回原table   
   INSERT INTO crcd_t SELECT * FROM acrm310_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE acrm310_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_crcb001_t = g_crcb_m.crcb001
 
   
   DROP TABLE acrm310_detail
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.detail_show" ver="2" status="" src="s">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION acrm310_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define"/>}
   #end add-point  
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.fetch" ver="3" status="" src="s">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION acrm310_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
   
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         
         LET g_no_ask = FALSE  
   END CASE 
   
   
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_crcb_m.crcb001 = g_browser[g_current_idx].b_crcb001
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE acrm310_master_referesh USING g_crcb_m.crcb001 INTO g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcb002, 
       g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp, 
       g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdt,g_crcb_m.crcbmodid,g_crcb_m.crcbmoddt, 
       g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt,g_crcb_m.crcbunit_desc,g_crcb_m.crcb002_desc,g_crcb_m.crcb003_desc, 
       g_crcb_m.crcbownid_desc,g_crcb_m.crcbowndp_desc,g_crcb_m.crcbcrtid_desc,g_crcb_m.crcbcrtdp_desc, 
       g_crcb_m.crcbmodid_desc,g_crcb_m.crcbcnfid_desc
   IF SQLCA.sqlcode THEN
      CALL cl_err("crcb_t",SQLCA.sqlcode,1)
      INITIALIZE g_crcb_m.* TO NULL
      RETURN
   END IF
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL acrm310_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.fill_chk" ver="3" status="" src="s">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION acrm310_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')  OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
   IF ps_idx = 2 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1') OR 
      (NOT cl_null(g_wc2_table2) AND g_wc2_table2.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
 
 
   RETURN FALSE
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.filter" ver="1" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a50產生
#+ filter過濾功能
PRIVATE FUNCTION acrm310_filter()
   #add-point:filter段define
   {<point name="filter.define"/>}
   #end add-point   
 
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON crcbunit,crcb001,crcb002,crcb003,crcb004,crcb005
                          FROM s_browse[1].b_crcbunit,s_browse[1].b_crcb001,s_browse[1].b_crcb002,s_browse[1].b_crcb003, 
                              s_browse[1].b_crcb004,s_browse[1].b_crcb005
 
         BEFORE CONSTRUCT
               DISPLAY acrm310_filter_parser('crcbunit') TO s_browse[1].b_crcbunit
            DISPLAY acrm310_filter_parser('crcb001') TO s_browse[1].b_crcb001
            DISPLAY acrm310_filter_parser('crcb002') TO s_browse[1].b_crcb002
            DISPLAY acrm310_filter_parser('crcb003') TO s_browse[1].b_crcb003
            DISPLAY acrm310_filter_parser('crcb004') TO s_browse[1].b_crcb004
            DISPLAY acrm310_filter_parser('crcb005') TO s_browse[1].b_crcb005
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL acrm310_filter_show('crcbunit')
   CALL acrm310_filter_show('crcb001')
   CALL acrm310_filter_show('crcb002')
   CALL acrm310_filter_show('crcb003')
   CALL acrm310_filter_show('crcb004')
   CALL acrm310_filter_show('crcb005')
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.filter_parser" ver="1" status="" src="s">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION acrm310_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num5
   DEFINE li_tmp2    LIKE type_t.num5
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.filter_show" ver="1" status="" src="s">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION acrm310_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = acrm310_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.global" ver="3" status="" src="s">
    <![CDATA[{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_crcb_m        RECORD
       crcbunit LIKE crcb_t.crcbunit, 
   crcbunit_desc LIKE type_t.chr80, 
   crcb001 LIKE crcb_t.crcb001, 
   crcbl003 LIKE crcbl_t.crcbl003, 
   crcbl004 LIKE crcbl_t.crcbl004, 
   crcb002 LIKE crcb_t.crcb002, 
   crcb002_desc LIKE type_t.chr80, 
   crcb003 LIKE crcb_t.crcb003, 
   crcb003_desc LIKE type_t.chr80, 
   crcb004 LIKE crcb_t.crcb004, 
   crcb005 LIKE crcb_t.crcb005, 
   crcbstus LIKE crcb_t.crcbstus, 
   crcbownid LIKE crcb_t.crcbownid, 
   crcbownid_desc LIKE type_t.chr80, 
   crcbowndp LIKE crcb_t.crcbowndp, 
   crcbowndp_desc LIKE type_t.chr80, 
   crcbcrtid LIKE crcb_t.crcbcrtid, 
   crcbcrtid_desc LIKE type_t.chr80, 
   crcbcrtdp LIKE crcb_t.crcbcrtdp, 
   crcbcrtdp_desc LIKE type_t.chr80, 
   crcbcrtdt DATETIME YEAR TO SECOND, 
   crcbmodid LIKE crcb_t.crcbmodid, 
   crcbmodid_desc LIKE type_t.chr80, 
   crcbmoddt DATETIME YEAR TO SECOND, 
   crcbcnfid LIKE crcb_t.crcbcnfid, 
   crcbcnfid_desc LIKE type_t.chr80, 
   crcbcnfdt DATETIME YEAR TO SECOND
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_crcc_d        RECORD
       crccstus LIKE crcc_t.crccstus, 
   crcc002 LIKE crcc_t.crcc002, 
   crcc003 LIKE crcc_t.crcc003, 
   crcc004 LIKE crcc_t.crcc004, 
   crcc005 LIKE crcc_t.crcc005, 
   crcc006 LIKE crcc_t.crcc006
       END RECORD
PRIVATE TYPE type_g_crcc2_d RECORD
       crcdstus LIKE crcd_t.crcdstus, 
   crcd003 LIKE crcd_t.crcd003, 
   crcd004 LIKE crcd_t.crcd004, 
   crcd005 LIKE crcd_t.crcd005
       END RECORD
 
 
#模組變數(Module Variables)
DEFINE g_crcb_m          type_g_crcb_m
DEFINE g_crcb_m_t        type_g_crcb_m
 
   DEFINE g_crcb001_t LIKE crcb_t.crcb001
 
 
DEFINE g_crcc_d          DYNAMIC ARRAY OF type_g_crcc_d
DEFINE g_crcc_d_t        type_g_crcc_d
DEFINE g_crcc2_d   DYNAMIC ARRAY OF type_g_crcc2_d
DEFINE g_crcc2_d_t type_g_crcc2_d
 
 
DEFINE g_browser    DYNAMIC ARRAY OF RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_crcbunit LIKE crcb_t.crcbunit,
   b_crcbunit_desc LIKE type_t.chr80,
      b_crcb001 LIKE crcb_t.crcb001,
   b_crcb001_desc LIKE type_t.chr80,
   b_crcbl004 LIKE type_t.chr80,
      b_crcb002 LIKE crcb_t.crcb002,
   b_crcb002_desc LIKE type_t.chr80,
      b_crcb003 LIKE crcb_t.crcb003,
   b_crcb003_desc LIKE type_t.chr80,
      b_crcb004 LIKE crcb_t.crcb004,
      b_crcb005 LIKE crcb_t.crcb005
      END RECORD 
      
DEFINE g_browser_f  RECORD    #資料瀏覽之欄位 
         b_statepic     LIKE type_t.chr50,
            b_crcbunit LIKE crcb_t.crcbunit,
   b_crcbunit_desc LIKE type_t.chr80,
      b_crcb001 LIKE crcb_t.crcb001,
   b_crcb001_desc LIKE type_t.chr80,
   b_crcbl004 LIKE type_t.chr80,
      b_crcb002 LIKE crcb_t.crcb002,
   b_crcb002_desc LIKE type_t.chr80,
      b_crcb003 LIKE crcb_t.crcb003,
   b_crcb003_desc LIKE type_t.chr80,
      b_crcb004 LIKE crcb_t.crcb004,
      b_crcb005 LIKE crcb_t.crcb005
      END RECORD 
      
DEFINE g_master_multi_table_t    RECORD
      crcbl001 LIKE crcbl_t.crcbl001,
      crcbl003 LIKE crcbl_t.crcbl003,
      crcbl004 LIKE crcbl_t.crcbl004
      END RECORD
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num5           
DEFINE l_ac                  LIKE type_t.num5    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num5           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
 
DEFINE g_detail_cnt          LIKE type_t.num5              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num5              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num5              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num5              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num5              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num5              #Browser目前所在筆數(暫存用)
 
DEFINE g_searchcol           STRING                        #查詢欄位代碼
DEFINE g_searchstr           STRING                        #查詢欄位字串
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num5              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num5              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="acrm310.idx_chk" ver="1" status="" src="s">
    <![CDATA[#+ 單身筆數變更
PRIVATE FUNCTION acrm310_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_crcc_d.getLength() THEN
         LET g_detail_idx = g_crcc_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_crcc_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_crcc_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_crcc2_d.getLength() THEN
         LET g_detail_idx2 = g_crcc2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_crcc2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_crcc2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.init" ver="1" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION acrm310_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point    
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET l_ac = 1
      CALL cl_set_combo_scc_part('crcbstus','50','N,X,Y')
 
      CALL cl_set_combo_scc('crcc005','6057') 
   CALL cl_set_combo_scc('crcc006','6058') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   CALL acrm310_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="acrm310.input" ver="3" status="" src="s">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION acrm310_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point  
 
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crccstus,crcc002,crcc003,crcc004,crcc005,crcc006 FROM crcc_t WHERE crccent=?  
       AND crcc001=? AND crcc002=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrm310_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crcdstus,crcd003,crcd004,crcd005 FROM crcd_t WHERE crcdent=? AND crcd001=?  
       AND crcd002=? AND crcd003=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrm310_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL acrm310_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL acrm310_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcbl003,g_crcb_m.crcbl004,g_crcb_m.crcb002, 
       g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus
   
   LET lb_reproduce = FALSE
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
   
]]>
  </section>
  <section id="acrm310.input.body" ver="4" status="" src="s">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_crcc_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crcc_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL acrm310_b_fill()
            LET g_rec_b = g_crcc_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
                           CALL acrm310_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN acrm310_cl USING g_enterprise,g_crcb_m.crcb001
            IF STATUS THEN
               CALL cl_err("OPEN acrm310_cl:", STATUS, 1)
               CLOSE acrm310_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_crcc_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_crcc_d[l_ac].crcc002 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_crcc_d_t.* = g_crcc_d[l_ac].*  #BACKUP
               CALL acrm310_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL acrm310_set_no_entry_b(l_cmd)
               IF NOT acrm310_lock_b("crcc_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acrm310_bcl INTO g_crcc_d[l_ac].crccstus,g_crcc_d[l_ac].crcc002,g_crcc_d[l_ac].crcc003, 
                      g_crcc_d[l_ac].crcc004,g_crcc_d[l_ac].crcc005,g_crcc_d[l_ac].crcc006
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_crcc_d_t.crcc002,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL acrm310_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crcc_d[l_ac].* TO NULL 
                  LET g_crcc_d[l_ac].crccstus = "Y"
      LET g_crcc_d[l_ac].crcc005 = "S"
      LET g_crcc_d[l_ac].crcc006 = "0"
 
            LET g_crcc_d_t.* = g_crcc_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acrm310_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL acrm310_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crcc_d[li_reproduce_target].* = g_crcc_d[li_reproduce].*
 
               LET g_crcc_d[li_reproduce_target].crcc002 = NULL
 
            END IF
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_crcc_d[l_ac].crccstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM crcc_t 
             WHERE crccent = g_enterprise AND crcc001 = g_crcb_m.crcb001
 
               AND crcc002 = g_crcc_d[l_ac].crcc002
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crcb_m.crcb001
               LET gs_keys[2] = g_crcc_d[g_detail_idx].crcc002
               CALL acrm310_insert_b('crcc_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_crcc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("crcc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL acrm310_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_crcc_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_crcc_d.deleteElement(l_ac)
               NEXT FIELD crcc002
            END IF
         
            IF g_crcc_d[l_ac].crcc002 IS NOT NULL
 
               THEN 
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               DELETE FROM crcc_t
                WHERE crccent = g_enterprise AND crcc001 = g_crcb_m.crcb001 AND
 
                      crcc002 = g_crcc_d_t.crcc002
 
                  
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               IF SQLCA.sqlcode THEN
                  CALL cl_err("crcc_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE acrm310_bcl
               LET l_count = g_crcc_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crcb_m.crcb001
               LET gs_keys[2] = g_crcc_d[g_detail_idx].crcc002
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL acrm310_delete_b('crcc_t',gs_keys,"'1'")
 
                  #此段落由子樣板a01產生
         BEFORE FIELD crccstus
            #add-point:BEFORE FIELD crccstus
            {<point name="input.b.page1.crccstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crccstus
            
            #add-point:AFTER FIELD crccstus
            {<point name="input.a.page1.crccstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crccstus
            #add-point:ON CHANGE crccstus
            {<point name="input.g.page1.crccstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcc002
            #add-point:BEFORE FIELD crcc002
            {<point name="input.b.page1.crcc002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcc002
            
            #add-point:AFTER FIELD crcc002
            {<point name="input.a.page1.crcc002" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcc002
            #add-point:ON CHANGE crcc002
            {<point name="input.g.page1.crcc002" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcc003
            #add-point:BEFORE FIELD crcc003
            {<point name="input.b.page1.crcc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcc003
            
            #add-point:AFTER FIELD crcc003
            {<point name="input.a.page1.crcc003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcc003
            #add-point:ON CHANGE crcc003
            {<point name="input.g.page1.crcc003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcc004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crcc_d[l_ac].crcc004,"0.000","0","","","azz-00079",1) THEN
               NEXT FIELD crcc004
            END IF
 
 
            #add-point:AFTER FIELD crcc004
            {<point name="input.a.page1.crcc004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcc004
            #add-point:BEFORE FIELD crcc004
            {<point name="input.b.page1.crcc004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcc004
            #add-point:ON CHANGE crcc004
            {<point name="input.g.page1.crcc004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcc005
            #add-point:BEFORE FIELD crcc005
            {<point name="input.b.page1.crcc005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcc005
            
            #add-point:AFTER FIELD crcc005
            {<point name="input.a.page1.crcc005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcc005
            #add-point:ON CHANGE crcc005
            {<point name="input.g.page1.crcc005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcc006
            #add-point:BEFORE FIELD crcc006
            {<point name="input.b.page1.crcc006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcc006
            
            #add-point:AFTER FIELD crcc006
            {<point name="input.a.page1.crcc006" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcc006
            #add-point:ON CHANGE crcc006
            {<point name="input.g.page1.crcc006" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page1.crccstus
         ON ACTION controlp INFIELD crccstus
            #add-point:ON ACTION controlp INFIELD crccstus
            {<point name="input.c.page1.crccstus" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcc002
         ON ACTION controlp INFIELD crcc002
            #add-point:ON ACTION controlp INFIELD crcc002
            {<point name="input.c.page1.crcc002" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcc003
         ON ACTION controlp INFIELD crcc003
            #add-point:ON ACTION controlp INFIELD crcc003
            {<point name="input.c.page1.crcc003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcc004
         ON ACTION controlp INFIELD crcc004
            #add-point:ON ACTION controlp INFIELD crcc004
            {<point name="input.c.page1.crcc004" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcc005
         ON ACTION controlp INFIELD crcc005
            #add-point:ON ACTION controlp INFIELD crcc005
            {<point name="input.c.page1.crcc005" />}
            #END add-point
 
         #Ctrlp:input.c.page1.crcc006
         ON ACTION controlp INFIELD crcc006
            #add-point:ON ACTION controlp INFIELD crcc006
            {<point name="input.c.page1.crcc006" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_crcc_d[l_ac].* = g_crcc_d_t.*
               CLOSE acrm310_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_crcc_d[l_ac].crcc002,-263,1)
               LET g_crcc_d[l_ac].* = g_crcc_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
 
      
               UPDATE crcc_t SET (crcc001,crccstus,crcc002,crcc003,crcc004,crcc005,crcc006) = (g_crcb_m.crcb001, 
                   g_crcc_d[l_ac].crccstus,g_crcc_d[l_ac].crcc002,g_crcc_d[l_ac].crcc003,g_crcc_d[l_ac].crcc004, 
                   g_crcc_d[l_ac].crcc005,g_crcc_d[l_ac].crcc006)
                WHERE crccent = g_enterprise AND crcc001 = g_crcb_m.crcb001 
 
                  AND crcc002 = g_crcc_d_t.crcc002 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("crcc_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_crcc_d[l_ac].* = g_crcc_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("crcc_t",SQLCA.sqlcode,1)
                     LET g_crcc_d[l_ac].* = g_crcc_d_t.*                     
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crcb_m.crcb001
               LET gs_keys_bak[1] = g_crcb001_t
               LET gs_keys[2] = g_crcc_d[g_detail_idx].crcc002
               LET gs_keys_bak[2] = g_crcc_d_t.crcc002
               CALL acrm310_update_b('crcc_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_crcb_m),util.JSON.stringify(g_crcc_d_t)
               LET g_log2 = util.JSON.stringify(g_crcb_m),util.JSON.stringify(g_crcc_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL acrm310_unlock_b("crcc_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_crcc_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_crcc_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_crcc2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crcc2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            LET g_rec_b = g_crcc2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crcc2_d[l_ac].* TO NULL 
                  LET g_crcc2_d[l_ac].crcdstus = "Y"
 
            LET g_crcc2_d_t.* = g_crcc2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acrm310_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL acrm310_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crcc2_d[li_reproduce_target].* = g_crcc2_d[li_reproduce].*
 
               LET g_crcc2_d[li_reproduce_target].crcd003 = NULL
            END IF
            #公用欄位給值(單身2)
            #此段落由子樣板a14產生    
      LET g_crcc2_d[l_ac].crcdstus = "N"
 
 
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN acrm310_cl USING g_enterprise,g_crcb_m.crcb001
            OPEN acrm310_bcl USING g_enterprise,g_crcb_m.crcb001,g_crcc_d[g_detail_idx].crcc002
            IF STATUS THEN
               CALL cl_err("OPEN acrm310_cl:", STATUS, 1)
               CLOSE acrm310_cl
               CLOSE acrm310_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_crcc2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_crcc2_d[l_ac].crcd003 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_crcc2_d_t.* = g_crcc2_d[l_ac].*  #BACKUP
               CALL acrm310_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL acrm310_set_no_entry_b(l_cmd)
               IF NOT acrm310_lock_b("crcd_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acrm310_bcl2 INTO g_crcc2_d[l_ac].crcdstus,g_crcc2_d[l_ac].crcd003,g_crcc2_d[l_ac].crcd004, 
                      g_crcc2_d[l_ac].crcd005
                  IF SQLCA.sqlcode THEN
                     CALL cl_err('',SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  LET g_bfill = "N"
                  CALL acrm310_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_crcc2_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_crcc2_d.deleteElement(l_ac)
               NEXT FIELD crcd003
            END IF
            IF g_crcc2_d[l_ac].crcd003 IS NOT NULL
            THEN
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               
               DELETE FROM crcd_t
                     WHERE crcdent = g_enterprise AND crcd001 = g_crcb_m.crcb001 AND crcd002 = g_crcc_d[g_detail_idx].crcc002  
                         AND crcd003 = g_crcc2_d[g_detail_idx2].crcd003
                  
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point    
                  
               IF SQLCA.sqlcode THEN
                  CALL cl_err("crcc_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_rec_b = g_rec_b-1
                  
                  #add-point:單身2刪除後
                  {<point name="input.body2.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE acrm310_bcl
               LET l_count = g_crcc_d.getLength()
            END IF 
            
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crcb_m.crcb001
               LET gs_keys[2] = g_crcc_d[g_detail_idx].crcc002
               LET gs_keys[3] = g_crcc2_d[g_detail_idx2].crcd003
 
            
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body2.after_delete"/>}
            #end add-point
                           CALL acrm310_delete_b('crcd_t',gs_keys,"'2'")
 
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM crcd_t 
             WHERE crcdent = g_enterprise AND crcd001 = g_crcb_m.crcb001 AND crcd002 = g_crcc_d[g_detail_idx].crcc002  
                 AND crcd003 = g_crcc2_d[g_detail_idx2].crcd003
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crcb_m.crcb001
               LET gs_keys[2] = g_crcc_d[g_detail_idx].crcc002
               LET gs_keys[3] = g_crcc2_d[g_detail_idx2].crcd003
               CALL acrm310_insert_b('crcd_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_crcc_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("crcd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL acrm310_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_crcc2_d[l_ac].* = g_crcc2_d_t.*
               CLOSE acrm310_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               CALL cl_err('',-263,1)
               LET g_crcc2_d[l_ac].* = g_crcc2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
 
               
               UPDATE crcd_t SET (crcd001,crcd002,crcdstus,crcd003,crcd004,crcd005) = (g_crcb_m.crcb001, 
                   g_crcc_d[g_detail_idx].crcc002,g_crcc2_d[l_ac].crcdstus,g_crcc2_d[l_ac].crcd003,g_crcc2_d[l_ac].crcd004, 
                   g_crcc2_d[l_ac].crcd005) #自訂欄位頁簽
                WHERE crcdent = g_enterprise AND crcd001 = g_crcb001_t AND crcd002 = g_crcc_d[g_detail_idx].crcc002  
                    AND crcd003 = g_crcc2_d_t.crcd003
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("crcd_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                     LET g_crcc2_d[l_ac].* = g_crcc2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("crcd_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                     LET g_crcc2_d[l_ac].* = g_crcc2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crcb_m.crcb001
               LET gs_keys_bak[1] = g_crcb001_t
               LET gs_keys[2] = g_crcc_d[g_detail_idx].crcc002
               LET gs_keys_bak[2] = g_crcc_d[g_detail_idx].crcc002
               LET gs_keys[3] = g_crcc2_d[g_detail_idx2].crcd003
               LET gs_keys_bak[3] = g_crcc2_d_t.crcd003
               CALL acrm310_update_b('crcd_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               LET g_log1 = util.JSON.stringify(g_crcb_m),util.JSON.stringify(g_crcc2_d_t)
               LET g_log2 = util.JSON.stringify(g_crcb_m),util.JSON.stringify(g_crcc2_d[l_ac])
               
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #此段落由子樣板a01產生
         BEFORE FIELD crcdstus
            #add-point:BEFORE FIELD crcdstus
            {<point name="input.b.page2.crcdstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcdstus
            
            #add-point:AFTER FIELD crcdstus
            {<point name="input.a.page2.crcdstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcdstus
            #add-point:ON CHANGE crcdstus
            {<point name="input.g.page2.crcdstus" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcd003
            #add-point:BEFORE FIELD crcd003
            {<point name="input.b.page2.crcd003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcd003
            
            #add-point:AFTER FIELD crcd003
            {<point name="input.a.page2.crcd003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcd003
            #add-point:ON CHANGE crcd003
            {<point name="input.g.page2.crcd003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcd004
            #add-point:BEFORE FIELD crcd004
            {<point name="input.b.page2.crcd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcd004
            
            #add-point:AFTER FIELD crcd004
            {<point name="input.a.page2.crcd004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcd004
            #add-point:ON CHANGE crcd004
            {<point name="input.g.page2.crcd004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcd005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crcc2_d[l_ac].crcd005,"0.000","1","","","azz-00079",1) THEN
               NEXT FIELD crcd005
            END IF
 
 
            #add-point:AFTER FIELD crcd005
            {<point name="input.a.page2.crcd005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcd005
            #add-point:BEFORE FIELD crcd005
            {<point name="input.b.page2.crcd005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcd005
            #add-point:ON CHANGE crcd005
            {<point name="input.g.page2.crcd005" />}
            #END add-point
 
 
                  #Ctrlp:input.c.page2.crcdstus
         ON ACTION controlp INFIELD crcdstus
            #add-point:ON ACTION controlp INFIELD crcdstus
            {<point name="input.c.page2.crcdstus" />}
            #END add-point
 
         #Ctrlp:input.c.page2.crcd003
         ON ACTION controlp INFIELD crcd003
            #add-point:ON ACTION controlp INFIELD crcd003
            {<point name="input.c.page2.crcd003" />}
            #END add-point
 
         #Ctrlp:input.c.page2.crcd004
         ON ACTION controlp INFIELD crcd004
            #add-point:ON ACTION controlp INFIELD crcd004
            {<point name="input.c.page2.crcd004" />}
            #END add-point
 
         #Ctrlp:input.c.page2.crcd005
         ON ACTION controlp INFIELD crcd005
            #add-point:ON ACTION controlp INFIELD crcd005
            {<point name="input.c.page2.crcd005" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_crcc2_d[l_ac].* = g_crcc2_d_t.*
               END IF
               CLOSE acrm310_bcl2
               CLOSE acrm310_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL acrm310_unlock_b("crcd_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2_after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point  
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_crcc2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_crcc2_d.getLength()+1
 
      END INPUT
 
      
 
      
 
      
]]>
  </section>
  <section id="acrm310.input.head" ver="5" status="" src="s">
    <![CDATA[      #單頭段
      INPUT BY NAME g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcbl003,g_crcb_m.crcbl004,g_crcb_m.crcb002, 
          g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
         #+ 此段落由子樣板a43產生
         ON ACTION update_item
            LET g_action_choice="update_item"
            IF cl_auth_chk_act("update_item") THEN
               
               #add-point:ON ACTION update_item
               {<point name="input.master_input.update_item" />}
               #END add-point
            END IF
 
 
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET g_master_multi_table_t.crcbl001 = g_crcb_m.crcb001
LET g_master_multi_table_t.crcbl003 = g_crcb_m.crcbl003
LET g_master_multi_table_t.crcbl004 = g_crcb_m.crcbl004
 
            IF l_cmd_t = 'r' THEN
               LET g_master_multi_table_t.crcbl001 = ''
LET g_master_multi_table_t.crcbl003 = ''
LET g_master_multi_table_t.crcbl004 = ''
 
            END IF
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
 
                  #此段落由子樣板a02產生
         AFTER FIELD crcbunit
            
            #add-point:AFTER FIELD crcbunit
            {<point name="input.a.crcbunit" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbunit
            #add-point:BEFORE FIELD crcbunit
            {<point name="input.b.crcbunit" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcbunit
            #add-point:ON CHANGE crcbunit
            {<point name="input.g.crcbunit" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb001
            #add-point:BEFORE FIELD crcb001
            {<point name="input.b.crcb001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb001
            
            #add-point:AFTER FIELD crcb001
            {<point name="input.a.crcb001" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcb001
            #add-point:ON CHANGE crcb001
            {<point name="input.g.crcb001" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbl003
            #add-point:BEFORE FIELD crcbl003
            {<point name="input.b.crcbl003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbl003
            
            #add-point:AFTER FIELD crcbl003
            {<point name="input.a.crcbl003" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcbl003
            #add-point:ON CHANGE crcbl003
            {<point name="input.g.crcbl003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbl004
            #add-point:BEFORE FIELD crcbl004
            {<point name="input.b.crcbl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbl004
            
            #add-point:AFTER FIELD crcbl004
            {<point name="input.a.crcbl004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcbl004
            #add-point:ON CHANGE crcbl004
            {<point name="input.g.crcbl004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb002
            
            #add-point:AFTER FIELD crcb002
            {<point name="input.a.crcb002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb002
            #add-point:BEFORE FIELD crcb002
            {<point name="input.b.crcb002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcb002
            #add-point:ON CHANGE crcb002
            {<point name="input.g.crcb002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb003
            
            #add-point:AFTER FIELD crcb003
            {<point name="input.a.crcb003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb003
            #add-point:BEFORE FIELD crcb003
            {<point name="input.b.crcb003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crcb003
            #add-point:ON CHANGE crcb003
            {<point name="input.g.crcb003" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb004
            #add-point:BEFORE FIELD crcb004
            {<point name="input.b.crcb004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb004
            
            #add-point:AFTER FIELD crcb004
            {<point name="input.a.crcb004" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcb004
            #add-point:ON CHANGE crcb004
            {<point name="input.g.crcb004" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcb005
            #add-point:BEFORE FIELD crcb005
            {<point name="input.b.crcb005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcb005
            
            #add-point:AFTER FIELD crcb005
            {<point name="input.a.crcb005" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcb005
            #add-point:ON CHANGE crcb005
            {<point name="input.g.crcb005" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crcbstus
            #add-point:BEFORE FIELD crcbstus
            {<point name="input.b.crcbstus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crcbstus
            
            #add-point:AFTER FIELD crcbstus
            {<point name="input.a.crcbstus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crcbstus
            #add-point:ON CHANGE crcbstus
            {<point name="input.g.crcbstus" />}
            #END add-point
 
 #欄位檢查
                  #Ctrlp:input.c.crcbunit
         ON ACTION controlp INFIELD crcbunit
            #add-point:ON ACTION controlp INFIELD crcbunit
            {<point name="input.c.crcbunit" />}
            #END add-point
 
         #Ctrlp:input.c.crcb001
         ON ACTION controlp INFIELD crcb001
            #add-point:ON ACTION controlp INFIELD crcb001
            {<point name="input.c.crcb001" />}
            #END add-point
 
         #Ctrlp:input.c.crcbl003
         ON ACTION controlp INFIELD crcbl003
            #add-point:ON ACTION controlp INFIELD crcbl003
            {<point name="input.c.crcbl003" />}
            #END add-point
 
         #Ctrlp:input.c.crcbl004
         ON ACTION controlp INFIELD crcbl004
            #add-point:ON ACTION controlp INFIELD crcbl004
            {<point name="input.c.crcbl004" />}
            #END add-point
 
         #Ctrlp:input.c.crcb002
         ON ACTION controlp INFIELD crcb002
            #add-point:ON ACTION controlp INFIELD crcb002
            {<point name="input.c.crcb002" />}
            #END add-point
 
         #Ctrlp:input.c.crcb003
         ON ACTION controlp INFIELD crcb003
            #add-point:ON ACTION controlp INFIELD crcb003
            {<point name="input.c.crcb003" />}
            #END add-point
 
         #Ctrlp:input.c.crcb004
         ON ACTION controlp INFIELD crcb004
            #add-point:ON ACTION controlp INFIELD crcb004
            {<point name="input.c.crcb004" />}
            #END add-point
 
         #Ctrlp:input.c.crcb005
         ON ACTION controlp INFIELD crcb005
            #add-point:ON ACTION controlp INFIELD crcb005
            {<point name="input.c.crcb005" />}
            #END add-point
 
         #Ctrlp:input.c.crcbstus
         ON ACTION controlp INFIELD crcbstus
            #add-point:ON ACTION controlp INFIELD crcbstus
            {<point name="input.c.crcbstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            CALL cl_showmsg()      #錯誤訊息統整顯示
            DISPLAY BY NAME g_crcb_m.crcb001
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO crcb_t (crcbent,crcbunit,crcb001,crcb002,crcb003,crcb004,crcb005,crcbstus, 
                   crcbownid,crcbowndp,crcbcrtid,crcbcrtdp,crcbcrtdt,crcbcnfid,crcbcnfdt)
               VALUES (g_enterprise,g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcb002,g_crcb_m.crcb003, 
                   g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp, 
                   g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdt,g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt)  

               IF SQLCA.sqlcode THEN
                  CALL cl_err("g_crcb_m",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_crcb_m.crcb001 = g_master_multi_table_t.crcbl001 AND
         g_crcb_m.crcbl003 = g_master_multi_table_t.crcbl003 AND 
         g_crcb_m.crcbl004 = g_master_multi_table_t.crcbl004  THEN
         ELSE 
            LET l_var_keys[01] = g_crcb_m.crcb001
            LET l_field_keys[01] = 'crcbl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.crcbl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'crcbl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_crcb_m.crcbl003
            LET l_fields[01] = 'crcbl003'
            LET l_vars[02] = g_crcb_m.crcbl004
            LET l_fields[02] = 'crcbl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'crcblent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'crcbl_t')
         END IF 
 
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL acrm310_detail_reproduce()
               END IF
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE crcb_t SET (crcbunit,crcb001,crcb002,crcb003,crcb004,crcb005,crcbstus,crcbownid, 
                   crcbowndp,crcbcrtid,crcbcrtdp,crcbcrtdt,crcbcnfid,crcbcnfdt) = (g_crcb_m.crcbunit, 
                   g_crcb_m.crcb001,g_crcb_m.crcb002,g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005, 
                   g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp,g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp, 
                   g_crcb_m.crcbcrtdt,g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt)
                WHERE crcbent = g_enterprise AND crcb001 = g_crcb001_t
 
               IF SQLCA.sqlcode THEN
                  CALL cl_err("crcb_t",SQLCA.sqlcode,1)  
                  CALL s_transaction_end('N','0')
                  CONTINUE DIALOG
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
                        INITIALIZE l_var_keys TO NULL 
         INITIALIZE l_field_keys TO NULL 
         INITIALIZE l_vars TO NULL 
         INITIALIZE l_fields TO NULL 
         IF g_crcb_m.crcb001 = g_master_multi_table_t.crcbl001 AND
         g_crcb_m.crcbl003 = g_master_multi_table_t.crcbl003 AND 
         g_crcb_m.crcbl004 = g_master_multi_table_t.crcbl004  THEN
         ELSE 
            LET l_var_keys[01] = g_crcb_m.crcb001
            LET l_field_keys[01] = 'crcbl001'
            LET l_var_keys_bak[01] = g_master_multi_table_t.crcbl001
            LET l_var_keys[02] = g_dlang
            LET l_field_keys[02] = 'crcbl002'
            LET l_var_keys_bak[02] = g_dlang
            LET l_vars[01] = g_crcb_m.crcbl003
            LET l_fields[01] = 'crcbl003'
            LET l_vars[02] = g_crcb_m.crcbl004
            LET l_fields[02] = 'crcbl004'
            LET l_vars[03] = g_enterprise 
            LET l_fields[03] = 'crcblent'
            CALL cl_multitable(l_var_keys,l_field_keys,l_vars,l_fields,l_var_keys_bak,'crcbl_t')
         END IF 
 
               
               LET g_log1 = util.JSON.stringify(g_crcb_m_t)
               LET g_log2 = util.JSON.stringify(g_crcb_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_crcb001_t = g_crcb_m.crcb001
 
            #controlp
            
      END INPUT
   
]]>
  </section>
  <section id="acrm310.input.other" ver="1" status="" src="s">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD crcb001
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD crccstus
               WHEN "s_detail2"
                  NEXT FIELD crcdstus
 
            END CASE
         END IF
    
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
         
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.insert" ver="3" status="" src="s">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION acrm310_insert()
   #add-point:insert段define
   {<point name="insert.define"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_crcc_d.clear()   
   CALL g_crcc2_d.clear()  
 
 
   INITIALIZE g_crcb_m.* LIKE crcb_t.*             #DEFAULT 設定
   
   LET g_crcb001_t = NULL
 
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #此段落由子樣板a14產生    
      LET g_crcb_m.crcbownid = g_user
      LET g_crcb_m.crcbowndp = g_dept
      LET g_crcb_m.crcbcrtid = g_user
      LET g_crcb_m.crcbcrtdp = g_dept 
      LET g_crcb_m.crcbcrtdt = cl_get_current()
      LET g_crcb_m.crcbmodid = ""
      LET g_crcb_m.crcbmoddt = ""
      LET g_crcb_m.crcbstus = "N"
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_crcb_m.crcb004 = "0"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
     
      CALL acrm310_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_crcb_m.* = g_crcb_m_t.*
         CALL acrm310_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF
      
      CALL g_crcc_d.clear()
      CALL g_crcc2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_crcb001_t = g_crcb_m.crcb001
 
   
   LET g_wc = g_wc,  
              " OR ( crcbent = '" ||g_enterprise|| "' AND",
              " crcb001 = '", g_crcb_m.crcb001 CLIPPED, "' "
 
              , ") "
   
   CLOSE acrm310_cl
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.insert_b" ver="1" status="" src="s">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION acrm310_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO crcc_t
                  (crccent,
                   crcc001,
                   crcc002
                   ,crccstus,crcc003,crcc004,crcc005,crcc006) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_crcc_d[g_detail_idx].crccstus,g_crcc_d[g_detail_idx].crcc003,g_crcc_d[g_detail_idx].crcc004, 
                       g_crcc_d[g_detail_idx].crcc005,g_crcc_d[g_detail_idx].crcc006)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcc_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO crcd_t
                  (crcdent,
                   crcd001,crcd002,
                   crcd003
                   ,crcdstus,crcd004,crcd005) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_crcc2_d[g_detail_idx2].crcdstus,g_crcc2_d[g_detail_idx2].crcd004,g_crcc2_d[g_detail_idx2].crcd005) 

      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         CALL cl_err("crcd_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.lock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION acrm310_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL acrm310_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "crcc_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN acrm310_bcl USING g_enterprise,
                                       g_crcb_m.crcb001,g_crcc_d[g_detail_idx].crcc002     
      IF SQLCA.sqlcode THEN
         CALL cl_err("acrm310_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "crcd_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN acrm310_bcl2 USING g_enterprise,
                                             g_crcb_m.crcb001,g_crcc_d[g_detail_idx].crcc002,
                                             g_crcc2_d[g_detail_idx2].crcd003
      IF SQLCA.sqlcode THEN
         CALL cl_err("acrm310_bcl2",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.main" ver="4" status="" src="s">
    <![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("acr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT crcbunit,'',crcb001,'','',crcb002,'',crcb003,'',crcb004,crcb005,crcbstus, 
       crcbownid,'',crcbowndp,'',crcbcrtid,'',crcbcrtdp,'',crcbcrtdt,crcbmodid,'',crcbmoddt,crcbcnfid, 
       '',crcbcnfdt", 
                      " FROM crcb_t",
                      " WHERE crcbent= ? AND crcb001=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrm310_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE crcbunit,crcb001,crcb002,crcb003,crcb004,crcb005,crcbstus,crcbownid,crcbowndp, 
       crcbcrtid,crcbcrtdp,crcbcrtdt,crcbmodid,crcbmoddt,crcbcnfid,crcbcnfdt,t1.ooefl003 ,t2.oofa011 , 
       t3.ooefl003 ,t4.oofa011 ,t5.ooefl003 ,t6.oofa011 ,t7.ooefl003 ,t8.oofa011 ,t9.oofa011",
               " FROM crcb_t",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent='"||g_enterprise||"' AND t1.ooefl001=crcbunit AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t2 ON t2.oofaent='"||g_enterprise||"' AND t2.oofa002='2' AND t2.oofa003=crcb002  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=crcb003 AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t4 ON t4.oofaent='"||g_enterprise||"' AND t4.oofa002='2' AND t4.oofa003=crcbownid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=crcbowndp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t6 ON t6.oofaent='"||g_enterprise||"' AND t6.oofa002='2' AND t6.oofa003=crcbcrtid  ",
               " LEFT JOIN ooefl_t t7 ON t7.ooeflent='"||g_enterprise||"' AND t7.ooefl001=crcbcrtdp AND t7.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN oofa_t t8 ON t8.oofaent='"||g_enterprise||"' AND t8.oofa002='2' AND t8.oofa003=crcbmodid  ",
               " LEFT JOIN oofa_t t9 ON t9.oofaent='"||g_enterprise||"' AND t9.oofa002='2' AND t9.oofa003=crcbcnfid  ",
 
               " WHERE crcbent = '" ||g_enterprise|| "' AND crcb001 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE acrm310_master_referesh FROM g_sql
 
 
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_acrm310 WITH FORM cl_ap_formpath("acr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL acrm310_init()   
 
      #進入選單 Menu (="N")
      CALL acrm310_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_acrm310
      
   END IF 
   
   CLOSE acrm310_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
  </section>
  <section id="acrm310.modify" ver="4" status="" src="s">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION acrm310_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point    
   
   IF g_crcb_m.crcb001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   EXECUTE acrm310_master_referesh USING g_crcb_m.crcb001 INTO g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcb002, 
       g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp, 
       g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdt,g_crcb_m.crcbmodid,g_crcb_m.crcbmoddt, 
       g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt,g_crcb_m.crcbunit_desc,g_crcb_m.crcb002_desc,g_crcb_m.crcb003_desc, 
       g_crcb_m.crcbownid_desc,g_crcb_m.crcbowndp_desc,g_crcb_m.crcbcrtid_desc,g_crcb_m.crcbcrtdp_desc, 
       g_crcb_m.crcbmodid_desc,g_crcb_m.crcbcnfid_desc
 
   ERROR ""
  
   LET g_crcb001_t = g_crcb_m.crcb001
 
   CALL s_transaction_begin()
   
   OPEN acrm310_cl USING g_enterprise,g_crcb_m.crcb001
   IF STATUS THEN
      CALL cl_err("OPEN acrm310_cl:", STATUS, 1)
      CLOSE acrm310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE acrm310_master_referesh USING g_crcb_m.crcb001 INTO g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcb002, 
       g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp, 
       g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdt,g_crcb_m.crcbmodid,g_crcb_m.crcbmoddt, 
       g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt,g_crcb_m.crcbunit_desc,g_crcb_m.crcb002_desc,g_crcb_m.crcb003_desc, 
       g_crcb_m.crcbownid_desc,g_crcb_m.crcbowndp_desc,g_crcb_m.crcbcrtid_desc,g_crcb_m.crcbcrtdp_desc, 
       g_crcb_m.crcbmodid_desc,g_crcb_m.crcbcnfid_desc
 
   #資料被他人LOCK, 或是sql執行時出現錯誤
   IF SQLCA.sqlcode THEN
      CALL cl_err(g_crcb_m.crcb001,SQLCA.sqlcode,0)
      CLOSE acrm310_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   CALL acrm310_show()
   WHILE TRUE
      LET g_crcb001_t = g_crcb_m.crcb001
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_crcb_m.crcbmodid = g_user 
LET g_crcb_m.crcbmoddt = cl_get_current()
 
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      CALL acrm310_input("u")
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_crcb_m.* = g_crcb_m_t.*
         CALL acrm310_show()
         CALL cl_err('',9001,0)
         CALL s_transaction_end('N','0')
         EXIT WHILE
      END IF 
      
      #若有modid跟moddt則進行update
      UPDATE crcb_t SET (crcbmodid,crcbmoddt) = (g_crcb_m.crcbmodid,g_crcb_m.crcbmoddt)
       WHERE crcbent = g_enterprise AND crcb001 = g_crcb001_t
 
                  
      #若單頭key欄位有變更
      IF g_crcb_m.crcb001 != g_crcb001_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE crcc_t SET crcc001 = g_crcb_m.crcb001
 
          WHERE crccent = g_enterprise AND crcc001 = g_crcb001_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("crcc_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("crcc_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE crcd_t
            SET crcd001 = g_crcb_m.crcb001
 
          WHERE crcdent = g_enterprise AND
                crcd001 = g_crcb001_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               CALL cl_err("crcd_t","std-00009",1)
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               CALL cl_err("crcd_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #修改歷程記錄
   #IF NOT cl_log_modified_record(g_crcb_m.crcb001,g_site) THEN 
   #   CALL s_transaction_end('N','0')
   #END IF
 
   CLOSE acrm310_cl
   CALL s_transaction_end('Y','0')
 
   #流程通知預埋點-U
   CALL cl_flow_notify(g_crcb_m.crcb001,'U')
 
END FUNCTION   
]]>
  </section>
  <section id="acrm310.other_dialog" ver="2" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="acrm310.other_function" ver="1" status="" src="s">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="acrm310.query" ver="2" status="" src="s">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION acrm310_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_crcc_d.clear()
   CALL g_crcc2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY ' ' TO FORMONLY.idx
   DISPLAY ' ' TO FORMONLY.cnt
   DISPLAY ' ' TO FORMONLY.b_index
   DISPLAY ' ' TO FORMONLY.b_count
   DISPLAY ' ' TO FORMONLY.h_index
   DISPLAY ' ' TO FORMONLY.h_count
   
   CALL acrm310_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL acrm310_browser_fill("")
      CALL acrm310_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL acrm310_filter_show('crcbunit')
   CALL acrm310_filter_show('crcb001')
   CALL acrm310_filter_show('crcb002')
   CALL acrm310_filter_show('crcb003')
   CALL acrm310_filter_show('crcb004')
   CALL acrm310_filter_show('crcb005')
   CALL acrm310_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      CALL cl_err("","-100",1)
   ELSE
      CALL acrm310_fetch("F") 
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.reproduce" ver="3" status="" src="s">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION acrm310_reproduce()
   DEFINE l_newno     LIKE crcb_t.crcb001 
   DEFINE l_oldno     LIKE crcb_t.crcb001 
 
   DEFINE l_master    RECORD LIKE crcb_t.*
   DEFINE l_detail    RECORD LIKE crcc_t.*
 
   DEFINE l_detail2    RECORD LIKE crcd_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point   
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   IF g_crcb_m.crcb001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
    
   LET g_crcb001_t = g_crcb_m.crcb001
 
    
   LET g_crcb_m.crcb001 = ""
 
    
   CALL acrm310_set_entry('a')
   CALL acrm310_set_no_entry('a')
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #此段落由子樣板a14產生    
      LET g_crcb_m.crcbownid = g_user
      LET g_crcb_m.crcbowndp = g_dept
      LET g_crcb_m.crcbcrtid = g_user
      LET g_crcb_m.crcbcrtdp = g_dept 
      LET g_crcb_m.crcbcrtdt = cl_get_current()
      LET g_crcb_m.crcbmodid = ""
      LET g_crcb_m.crcbmoddt = ""
      LET g_crcb_m.crcbstus = "N"
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL acrm310_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
 
   LET g_state = "Y"
   LET g_current_idx = 1 
   
   LET g_wc = g_wc,  
              " OR (",
              " crcb001 = '", g_crcb_m.crcb001 CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.set_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION acrm310_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("crcb001",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.set_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION acrm310_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="acrm310.set_no_entry" ver="1" status="" src="s">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION acrm310_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("crcb001",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.set_no_entry_b" ver="1" status="" src="s">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION acrm310_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point    
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="acrm310.set_pk_array" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION acrm310_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_crcb_m.crcb001
   LET g_pk_array[1].column = 'crcb001'
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="acrm310.show" ver="3" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION acrm310_show()
   DEFINE l_ac_t    LIKE type_t.num5
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point  
 
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   LET g_crcb_m_t.* = g_crcb_m.*      #保存單頭舊值
   
   IF g_bfill = "Y" THEN
      CALL acrm310_b_fill() #單身填充
      CALL acrm310_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #此段落由子樣板a12產生
      #LET g_crcb_m.crcbownid_desc = cl_get_username(g_crcb_m.crcbownid)
      #LET g_crcb_m.crcbowndp_desc = cl_get_deptname(g_crcb_m.crcbowndp)
      #LET g_crcb_m.crcbcrtid_desc = cl_get_username(g_crcb_m.crcbcrtid)
      #LET g_crcb_m.crcbcrtdp_desc = cl_get_deptname(g_crcb_m.crcbcrtdp)
      #LET g_crcb_m.crcbmodid_desc = cl_get_username(g_crcb_m.crcbmodid)
      #LET g_crcb_m.crcbcnfid_desc = cl_get_deptname(g_crcb_m.crcbcnfid)
      
 
 
   
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL acrm310_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_crcb_m.crcbunit,g_crcb_m.crcbunit_desc,g_crcb_m.crcb001,g_crcb_m.crcbl003,g_crcb_m.crcbl004, 
       g_crcb_m.crcb002,g_crcb_m.crcb002_desc,g_crcb_m.crcb003,g_crcb_m.crcb003_desc,g_crcb_m.crcb004, 
       g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbownid_desc,g_crcb_m.crcbowndp, 
       g_crcb_m.crcbowndp_desc,g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtid_desc,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdp_desc, 
       g_crcb_m.crcbcrtdt,g_crcb_m.crcbmodid,g_crcb_m.crcbmodid_desc,g_crcb_m.crcbmoddt,g_crcb_m.crcbcnfid, 
       g_crcb_m.crcbcnfid_desc,g_crcb_m.crcbcnfdt
   
   #顯示狀態(stus)圖片
         #此段落由子樣板a21產生
      CASE g_crcb_m.crcbstus
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_crcc_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_crcc2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL acrm310_detail_show()
   
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.signature" ver="1" status="" src="s">
    <![CDATA[   
]]>
  </section>
  <section id="acrm310.state_change" ver="1" status="" src="s">
    <![CDATA[   #+ 此段落由子樣板a09產生
#+ 確認碼變更
PRIVATE FUNCTION acrm310_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_crcb_m.crcb001 IS NULL
 
   THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_crcb_m.crcbstus
            WHEN "N"
               HIDE OPTION "open"
            WHEN "X"
               HIDE OPTION "void"
            WHEN "Y"
               HIDE OPTION "valid"
            
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      ON ACTION open
         LET lc_state = "N"
         #add-point:action控制
         {<point name="statechange.open"/>}
         #end add-point
         EXIT MENU
      ON ACTION void
         LET lc_state = "X"
         #add-point:action控制
         {<point name="statechange.void"/>}
         #end add-point
         EXIT MENU
      ON ACTION valid
         LET lc_state = "Y"
         #add-point:action控制
         {<point name="statechange.valid"/>}
         #end add-point
         EXIT MENU
      
      
      
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   IF (lc_state <> "N" 
      AND lc_state <> "X"
      AND lc_state <> "Y"
      ) OR 
      cl_null(lc_state) THEN
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
      
   UPDATE crcb_t SET crcbstus = lc_state 
    WHERE crcbent = g_enterprise AND crcb001 = g_crcb_m.crcb001
 
  
   IF SQLCA.sqlcode THEN
      CALL cl_err("",SQLCA.sqlcode,0)
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/open.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/void.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/valid.png")
         
      END CASE
      LET g_crcb_m.crcbstus = lc_state
      DISPLAY BY NAME g_crcb_m.crcbstus
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
END FUNCTION
 
 
]]>
  </section>
  <section id="acrm310.ui_browser_refresh" ver="2" status="" src="s">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION acrm310_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_crcb001 = g_crcb_m.crcb001 
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
         EXIT FOR
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   #DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.ui_detailshow" ver="1" status="" src="s">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION acrm310_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.ui_dialog" ver="10" status="" src="s">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION acrm310_ui_dialog()
   DEFINE li_idx    LIKE type_t.num5
   DEFINE ls_wc     STRING
   DEFINE lb_first  BOOLEAN
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   CALL gfrm_curr.setElementImage("logo","logo/applogo.png") 
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #+ 此段落由子樣板a42產生
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL acrm310_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
         
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      CALL acrm310_browser_fill("")
      CALL lib_cl_dlg.cl_dlg_before_display()
      CALL cl_notice()
            
      #判斷前一個動作是否為新增, 若是的話切換到新增的筆數
      IF g_state = "Y" THEN
         FOR li_idx = 1 TO g_browser.getLength()
            IF g_browser[li_idx].b_crcb001 = g_crcb001_t
 
               THEN
               LET g_current_row = li_idx
               LET g_current_idx = li_idx
               EXIT FOR
            END IF
         END FOR
         LET g_state = ""
      END IF
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
 
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
 
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL acrm310_fetch('') # reload data
               LET l_ac = 1
               CALL acrm310_ui_detailshow() #Setting the current row 
      
               CALL acrm310_idx_chk()
               #NEXT FIELD crcc002
         
         END DISPLAY
        
         DISPLAY ARRAY g_crcc_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               CALL acrm310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
                              CALL acrm310_b_fill2('2')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單頭則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               CALL acrm310_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         DISPLAY ARRAY g_crcc2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               CALL acrm310_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               CALL acrm310_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_page = "first"
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            LET g_current_row = g_current_idx #目前指標
            IF g_current_idx = 0 THEN
               LET g_current_idx = 1
            END IF
            LET g_current_sw = TRUE
            
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL acrm310_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL acrm310_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL acrm310_idx_chk()
            
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
        
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL acrm310_statechange()
            EXIT DIALOG
      
         
          
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               CALL acrm310_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
 
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               LET g_wc = ls_wc
               #取得條件後需要重查、跳到結果第一筆資料的功能程式段
               CALL acrm310_browser_fill("F")
               IF g_browser_cnt = 0 THEN
                  CALL cl_err("","-100",1)
                  CLEAR FORM
               ELSE
                  CALL acrm310_fetch("F")
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #+ 此段落由子樣板a49產生
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL acrm310_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            CALL acrm310_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrm310_idx_chk()
            
         ON ACTION previous
            CALL acrm310_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrm310_idx_chk()
            
         ON ACTION jump
            CALL acrm310_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrm310_idx_chk()
            
         ON ACTION next
            CALL acrm310_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrm310_idx_chk()
            
         ON ACTION last
            CALL acrm310_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrm310_idx_chk()
            
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
      
         ON ACTION mainhidden       #主頁摺疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            
         ON ACTION worksheethidden   #瀏覽頁折疊
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD crcc002
            END IF
       
         ON ACTION controls      #單頭摺疊，可利用hot key "Ctrl-s"開啟/關閉單頭
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL acrm310_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL acrm310_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL acrm310_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL acrm310_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL acrm310_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL acrm310_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
         
         #+ 此段落由子樣板a46產生
         #新增相關文件
         ON ACTION related_document
            CALL acrm310_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL acrm310_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL acrm310_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
            
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="acrm310.ui_headershow" ver="2" status="" src="s">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION acrm310_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET g_crcb_m.crcb001 = g_browser[g_current_idx].b_crcb001   
 
   EXECUTE acrm310_master_referesh USING g_crcb_m.crcb001 INTO g_crcb_m.crcbunit,g_crcb_m.crcb001,g_crcb_m.crcb002, 
       g_crcb_m.crcb003,g_crcb_m.crcb004,g_crcb_m.crcb005,g_crcb_m.crcbstus,g_crcb_m.crcbownid,g_crcb_m.crcbowndp, 
       g_crcb_m.crcbcrtid,g_crcb_m.crcbcrtdp,g_crcb_m.crcbcrtdt,g_crcb_m.crcbmodid,g_crcb_m.crcbmoddt, 
       g_crcb_m.crcbcnfid,g_crcb_m.crcbcnfdt,g_crcb_m.crcbunit_desc,g_crcb_m.crcb002_desc,g_crcb_m.crcb003_desc, 
       g_crcb_m.crcbownid_desc,g_crcb_m.crcbowndp_desc,g_crcb_m.crcbcrtid_desc,g_crcb_m.crcbcrtdp_desc, 
       g_crcb_m.crcbmodid_desc,g_crcb_m.crcbcnfid_desc
   CALL acrm310_show()
   
END FUNCTION
]]>
  </section>
  <section id="acrm310.unlock_b" ver="1" status="" src="s">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION acrm310_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE acrm310_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE acrm310_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="acrm310.update_b" ver="1" status="" src="s">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION acrm310_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcc_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point     
      UPDATE crcc_t 
         SET (crcc001,
              crcc002
              ,crccstus,crcc003,crcc004,crcc005,crcc006) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_crcc_d[g_detail_idx].crccstus,g_crcc_d[g_detail_idx].crcc003,g_crcc_d[g_detail_idx].crcc004, 
                  g_crcc_d[g_detail_idx].crcc005,g_crcc_d[g_detail_idx].crcc006) 
         WHERE crccent = g_enterprise AND crcc001 = ps_keys_bak[1] AND crcc002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("crcc_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("crcc_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE crcd_t 
         SET (crcd001,crcd002,
              crcd003
              ,crcdstus,crcd004,crcd005) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_crcc2_d[g_detail_idx2].crcdstus,g_crcc2_d[g_detail_idx2].crcd004,g_crcc2_d[g_detail_idx2].crcd005)  

         WHERE crcdent = g_enterprise AND crcd001 = ps_keys_bak[1] AND crcd002 = ps_keys_bak[2] AND crcd003 = ps_keys_bak[3]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("crcd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("crcd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   LET ls_group = "'1',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcd_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.key.before_update2" mark="Y"/>}
      #end add-point     
      UPDATE crcd_t 
         SET (crcd001,crcd002) 
              = 
             (ps_keys[1],ps_keys[2]) 
         WHERE crcdent = g_enterprise AND crcd001 = ps_keys_bak[1] AND crcd002 = ps_keys_bak[2]
      #add-point:update_b段修改中
      {<point name="update_b.key.m_update2"/>}
      #end add-point
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("crcd_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("crcd_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.key.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
