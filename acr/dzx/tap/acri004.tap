<add_points prog="acri004" std_prog="acri004" erpver="1.0" module="ACR" ver="1" env="s" zone="t10dev" booking="Y">
  <point name="b_fill.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   DEFINE l_sql           STRING]]>
</point>
  <point name="b_fill.others.fill" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   LET g_crda007=''
   LET g_crda008=''
   LET g_crda009=''
   LET g_crda011=''
   LET g_crda012=''
   LET g_crda013=''   
   LET l_sql = "SELECT  UNIQUE crda007,crda008,crda009,crda011,crda012,crda013 FROM crda_t", 
               " WHERE crdaent= ? AND 1=1 AND ", p_wc2 
    
  
   PREPARE acri004_pb_fill FROM l_sql

   EXECUTE acri004_pb_fill INTO g_crda007,g_crda008,g_crda009,g_crda011,g_crda012,g_crda013 USING g_enterprise
   
   DISPLAY g_crda007 TO crda007
   DISPLAY g_crda008 TO crda008
   DISPLAY g_crda009 TO crda009
   DISPLAY g_crda011 TO crda011
   DISPLAY g_crda012 TO crda012
   DISPLAY g_crda013 TO crda013   ]]>
</point>
  <point name="construct.c.page2.crdacrtdp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crdacrtdp  #顯示到畫面上
            NEXT FIELD crdacrtdp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.crdacrtid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crdacrtid  #顯示到畫面上
            NEXT FIELD crdacrtid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.crdamodid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crdamodid  #顯示到畫面上
            NEXT FIELD crdamodid                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.crdaowndp" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooea001_1()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crdaowndp  #顯示到畫面上
            NEXT FIELD crdaowndp                     #返回原欄位
    

]]>
</point>
  <point name="construct.c.page2.crdaownid" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a08產生
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c'
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO crdaownid  #顯示到畫面上
            NEXT FIELD crdaownid                     #返回原欄位
    

]]>
</point>
  <point name="detail_show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdamodid_desc
]]>
</point>
  <point name="global.variable" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[DEFINE g_crda007            LIKE crda_t.crda007
DEFINE g_crda008            LIKE crda_t.crda008
DEFINE g_crda009            LIKE crda_t.crda009
DEFINE g_wc_other          STRING
DEFINE g_crda011            LIKE crda_t.crda011
DEFINE g_crda012            LIKE crda_t.crda012
DEFINE g_crda013            LIKE crda_t.crda013]]>
</point>
  <point name="init.init" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   CALL cl_set_combo_scc('crda007','6709')
   CALL cl_set_combo_scc('crda008','6710')
   CALL cl_set_combo_scc('crda009','6711')
   CALL cl_set_combo_scc('crda000','6712')
   CALL cl_set_combo_scc('crda000_2','6712')
   ]]>
</point>
  <point name="input.a.page1.crda000" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_crda_d[g_detail_idx].crda000 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crda_d[g_detail_idx].crda000 != g_crda_d_t.crda000)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crda_t WHERE "||"crdaent = '" ||g_enterprise|| "' AND "||"crda000 = '"||g_crda_d[g_detail_idx].crda000 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.a.page1.crda001" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_crda_d[l_ac].crda001 IS NOT NULL THEN 
               IF g_crda_d[l_ac].crda002 IS NOT NULL THEN
                  IF g_crda_d[l_ac].crda001>g_crda_d[l_ac].crda002 THEN
                     CALL cl_err_msg(g_crda_d[l_ac].crda001,"ain-00188","R", 1) 
                     LET g_crda_d[l_ac].crda001=g_crda_d_t.crda001
                     NEXT FIELD crda001
                   END IF
               END IF 
               #R\F\M各等級最大值和最小值區間範圍不重複
               LET l_count=0
               IF l_cmd = 'a'  THEN               
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND ((crda001<=g_crda_d[l_ac].crda001 AND crda002>g_crda_d[l_ac].crda001) OR crda001=g_crda_d[l_ac].crda001)
               END IF
               IF l_cmd = 'u' AND (g_crda_d[l_ac].crda001 != g_crda_d_t.crda001) THEN
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND crda000<>g_crda_d_t.crda000
                     AND ((crda001<=g_crda_d[l_ac].crda001 AND crda002>g_crda_d[l_ac].crda001) OR crda001=g_crda_d[l_ac].crda001)
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda001,"ain-00191","R"||'|'||"R", 1)
                  LET g_crda_d[l_ac].crda001=g_crda_d_t.crda001
                  NEXT FIELD crda001                  
               END IF               
               IF  g_crda_d[l_ac].crda002 IS NOT NULL THEN
                   IF l_cmd = 'a'  THEN
                      SELECT count(*) INTO l_count
                        FROM crda_t
                       WHERE crdaent=g_enterprise
                         AND crda001>g_crda_d[l_ac].crda001 AND crda002<g_crda_d[l_ac].crda002
                    END IF
                    IF l_cmd = 'u' AND (g_crda_d[l_ac].crda001 != g_crda_d_t.crda001) THEN
                       SELECT count(*) INTO l_count
                        FROM crda_t
                       WHERE crdaent=g_enterprise
                         AND crda000<>g_crda_d_t.crda000
                         AND crda001>g_crda_d[l_ac].crda001 AND crda002<g_crda_d[l_ac].crda002
                    END IF                         
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda001,"ain-00191","R"||'|'||"R", 1)
                  LET g_crda_d[l_ac].crda001=g_crda_d_t.crda001
                  NEXT FIELD crda001                  
               END IF                 
            END IF 

]]>
</point>
  <point name="input.a.page1.crda002" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_crda_d[l_ac].crda002 IS NOT NULL THEN 
               IF g_crda_d[l_ac].crda001 IS NOT NULL THEN
                  IF g_crda_d[l_ac].crda002<g_crda_d[l_ac].crda001 THEN
                     CALL cl_err_msg(g_crda_d[l_ac].crda002,"ain-00189","R", 1) 
                     LET g_crda_d[l_ac].crda002=g_crda_d_t.crda002
                     NEXT FIELD crda002
                   END IF
               END IF
               #R\F\M各等級最大值和最小值區間範圍不重複
               LET l_count=0
               IF l_cmd = 'a'  THEN               
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND ((crda001<=g_crda_d[l_ac].crda002 AND crda002>g_crda_d[l_ac].crda002) OR crda001=g_crda_d[l_ac].crda002)
               END IF
               IF l_cmd = 'u' AND (g_crda_d[l_ac].crda002 != g_crda_d_t.crda002) THEN
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND crda000<>g_crda_d_t.crda000
                     AND ((crda001<=g_crda_d[l_ac].crda002 AND crda002>g_crda_d[l_ac].crda002) OR crda001=g_crda_d[l_ac].crda002)
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda002,"ain-00191","R"||'|'||"R", 1)
                  LET g_crda_d[l_ac].crda002=g_crda_d_t.crda002
                  NEXT FIELD crda002                  
               END IF                 
               IF g_crda_d[l_ac].crda001 IS NOT NULL THEN
                  IF l_cmd = 'a'  THEN
                     SELECT count(*) INTO l_count
                       FROM crda_t
                      WHERE crdaent=g_enterprise
                        AND crda001>g_crda_d[l_ac].crda001 AND crda002<g_crda_d[l_ac].crda002
                  END IF
                  IF l_cmd = 'u' AND (g_crda_d[l_ac].crda002 != g_crda_d_t.crda002) THEN
                     SELECT count(*) INTO l_count
                      FROM crda_t
                     WHERE crdaent=g_enterprise
                       AND crda000<>g_crda_d_t.crda000
                       AND crda001>g_crda_d[l_ac].crda001 AND crda002<g_crda_d[l_ac].crda002
                  END IF                         
               END IF               
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda002,"ain-00191","R"||'|'||"R", 1)
                  LET g_crda_d[l_ac].crda002=g_crda_d_t.crda002
                  NEXT FIELD crda002                  
               END IF                 
            END IF 
]]>
</point>
  <point name="input.a.page1.crda003" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_crda_d[l_ac].crda003 IS NOT NULL THEN 
               IF g_crda_d[l_ac].crda004 IS NOT NULL THEN
                  IF g_crda_d[l_ac].crda003>g_crda_d[l_ac].crda004 THEN
                     CALL cl_err_msg(g_crda_d[l_ac].crda003,"ain-00188","F", 1) 
                     LET g_crda_d[l_ac].crda003=g_crda_d_t.crda003
                     NEXT FIELD crda003
                   END IF
               END IF  
               #R\F\M各等級最大值和最小值區間範圍不重複
               LET l_count=0
               IF l_cmd = 'a'  THEN               
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND ((crda003<=g_crda_d[l_ac].crda003 AND crda004>g_crda_d[l_ac].crda003) OR crda003=g_crda_d[l_ac].crda003)
               END IF
               IF l_cmd = 'u' AND (g_crda_d[l_ac].crda003 != g_crda_d_t.crda003) THEN
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND crda000<>g_crda_d_t.crda000
                     AND ((crda003<=g_crda_d[l_ac].crda003 AND crda004>g_crda_d[l_ac].crda003) OR crda003=g_crda_d[l_ac].crda003)
               END IF
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda003,"ain-00191","F"||'|'||"F", 1)
                  LET g_crda_d[l_ac].crda003=g_crda_d_t.crda003
                  NEXT FIELD crda003                  
               END IF                
               IF g_crda_d[l_ac].crda004 IS NOT NULL THEN
                  IF l_cmd = 'a'  THEN
                     SELECT count(*) INTO l_count
                       FROM crda_t
                      WHERE crdaent=g_enterprise
                        AND crda003>g_crda_d[l_ac].crda003 AND crda004<g_crda_d[l_ac].crda004
                  END IF
                  IF l_cmd = 'u' AND (g_crda_d[l_ac].crda003 != g_crda_d_t.crda003) THEN
                     SELECT count(*) INTO l_count
                      FROM crda_t
                     WHERE crdaent=g_enterprise
                       AND crda000<>g_crda_d_t.crda000
                       AND crda003>g_crda_d[l_ac].crda003 AND crda004<g_crda_d[l_ac].crda004
                  END IF                         
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda003,"ain-00191","F"||'|'||"F", 1)
                  LET g_crda_d[l_ac].crda003=g_crda_d_t.crda003
                  NEXT FIELD crda003                  
               END IF                
            END IF 

]]>
</point>
  <point name="input.a.page1.crda004" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_crda_d[l_ac].crda004 IS NOT NULL THEN 
               IF g_crda_d[l_ac].crda003 IS NOT NULL THEN
                  IF g_crda_d[l_ac].crda004<g_crda_d[l_ac].crda003 THEN
                     CALL cl_err_msg(g_crda_d[l_ac].crda004,"ain-00189","F", 1) 
                     LET g_crda_d[l_ac].crda004=g_crda_d_t.crda004
                     NEXT FIELD crda004
                   END IF
               END IF  
               #R\F\M各等級最大值和最小值區間範圍不重複
               LET l_count=0
               IF l_cmd = 'a'  THEN               
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND ((crda003<=g_crda_d[l_ac].crda004 AND crda004>g_crda_d[l_ac].crda004) OR crda003=g_crda_d[l_ac].crda004)
               END IF
               IF l_cmd = 'u' AND (g_crda_d[l_ac].crda004 != g_crda_d_t.crda004) THEN
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND crda000<>g_crda_d_t.crda000
                     AND ((crda003<=g_crda_d[l_ac].crda004 AND crda004>g_crda_d[l_ac].crda004) OR crda003=g_crda_d[l_ac].crda004)
               END IF   
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda004,"ain-00191","F"||'|'||"F", 1)
                  LET g_crda_d[l_ac].crda004=g_crda_d_t.crda004
                  NEXT FIELD crda004                  
               END IF                  
               IF g_crda_d[l_ac].crda003 IS NOT NULL THEN
                  IF l_cmd = 'a'  THEN
                     SELECT count(*) INTO l_count
                       FROM crda_t
                      WHERE crdaent=g_enterprise
                        AND crda003>g_crda_d[l_ac].crda003 AND crda004<g_crda_d[l_ac].crda004
                  END IF
                  IF l_cmd = 'u' AND (g_crda_d[l_ac].crda004 != g_crda_d_t.crda004) THEN
                     SELECT count(*) INTO l_count
                      FROM crda_t
                     WHERE crdaent=g_enterprise
                       AND crda000<>g_crda_d_t.crda000
                       AND crda003>g_crda_d[l_ac].crda003 AND crda004<g_crda_d[l_ac].crda004
                  END IF                         
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda004,"ain-00191","F"||'|'||"F", 1)
                  LET g_crda_d[l_ac].crda004=g_crda_d_t.crda004
                  NEXT FIELD crda004                  
               END IF                
            END IF 

]]>
</point>
  <point name="input.a.page1.crda005" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_crda_d[l_ac].crda005 IS NOT NULL THEN 
               IF g_crda_d[l_ac].crda006 IS NOT NULL THEN
                  IF g_crda_d[l_ac].crda005>g_crda_d[l_ac].crda006 THEN
                     CALL cl_err_msg(g_crda_d[l_ac].crda005,"ain-00188","M", 1) 
                     LET g_crda_d[l_ac].crda005=g_crda_d_t.crda005
                     NEXT FIELD crda005
                   END IF
               END IF
               #R\F\M各等級最大值和最小值區間範圍不重複
               LET l_count=0
               IF l_cmd = 'a'  THEN               
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND ((crda005<=g_crda_d[l_ac].crda005 AND crda006>g_crda_d[l_ac].crda005) OR crda005=g_crda_d[l_ac].crda005)
               END IF
               IF l_cmd = 'u' AND (g_crda_d[l_ac].crda005 != g_crda_d_t.crda005) THEN
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND crda000<>g_crda_d_t.crda000
                     AND ((crda005<=g_crda_d[l_ac].crda005 AND crda006>g_crda_d[l_ac].crda005) OR crda005=g_crda_d[l_ac].crda005)
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda005,"ain-00191","M"||'|'||"M", 1)
                  LET g_crda_d[l_ac].crda005=g_crda_d_t.crda005
                  NEXT FIELD crda005                  
               END IF                 
               IF g_crda_d[l_ac].crda006 IS NOT NULL THEN
                  IF l_cmd = 'a'  THEN
                     SELECT count(*) INTO l_count
                       FROM crda_t
                      WHERE crdaent=g_enterprise
                        AND crda005>g_crda_d[l_ac].crda005 AND crda006<g_crda_d[l_ac].crda006
                  END IF
                  IF l_cmd = 'u' AND (g_crda_d[l_ac].crda005 != g_crda_d_t.crda005) THEN
                     SELECT count(*) INTO l_count
                      FROM crda_t
                     WHERE crdaent=g_enterprise
                       AND crda000<>g_crda_d_t.crda000
                       AND crda005>g_crda_d[l_ac].crda005 AND crda006<g_crda_d[l_ac].crda006
                  END IF                         
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda005,"ain-00191","M"||'|'||"M", 1)
                  LET g_crda_d[l_ac].crda005=g_crda_d_t.crda005
                  NEXT FIELD crda005                  
               END IF               
            END IF 
]]>
</point>
  <point name="input.a.page1.crda006" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF g_crda_d[l_ac].crda006 IS NOT NULL THEN 
               IF g_crda_d[l_ac].crda005 IS NOT NULL THEN
                  IF g_crda_d[l_ac].crda006<g_crda_d[l_ac].crda005 THEN
                     CALL cl_err_msg(g_crda_d[l_ac].crda006,"ain-00189","F", 1) 
                     LET g_crda_d[l_ac].crda006=g_crda_d_t.crda006
                     NEXT FIELD crda006
                   END IF
               END IF   
               #R\F\M各等級最大值和最小值區間範圍不重複
               LET l_count=0
               IF l_cmd = 'a'  THEN               
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND ((crda005<=g_crda_d[l_ac].crda006 AND crda006>g_crda_d[l_ac].crda006) OR crda005=g_crda_d[l_ac].crda006)
               END IF
               IF l_cmd = 'u' AND (g_crda_d[l_ac].crda006 != g_crda_d_t.crda006) THEN
                  SELECT COUNT(*) INTO l_count
                    FROM crda_t
                   WHERE crdaent=g_enterprise
                     AND crda000<>g_crda_d_t.crda000
                     AND ((crda005<=g_crda_d[l_ac].crda006 AND crda006>g_crda_d[l_ac].crda006) OR crda005=g_crda_d[l_ac].crda006)
               END IF  
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda006,"ain-00191","M"||'|'||"M", 1)
                  LET g_crda_d[l_ac].crda006=g_crda_d_t.crda006
                  NEXT FIELD crda006                  
               END IF                  
               IF g_crda_d[l_ac].crda005 IS NOT NULL THEN
                  IF l_cmd = 'a'  THEN
                     SELECT count(*) INTO l_count
                       FROM crda_t
                      WHERE crdaent=g_enterprise
                        AND crda005>g_crda_d[l_ac].crda005 AND crda006<g_crda_d[l_ac].crda006
                  END IF
                  IF l_cmd = 'u' AND (g_crda_d[l_ac].crda006 != g_crda_d_t.crda006) THEN
                     SELECT count(*) INTO l_count
                      FROM crda_t
                     WHERE crdaent=g_enterprise
                       AND crda000<>g_crda_d_t.crda000
                       AND crda005>g_crda_d[l_ac].crda005 AND crda006<g_crda_d[l_ac].crda006
                  END IF                         
               END IF 
               IF NOT cl_null(l_count) AND l_count>0 THEN
                  CALL cl_err_msg(g_crda_d[l_ac].crda006,"ain-00191","M"||'|'||"M", 1)
                  LET g_crda_d[l_ac].crda006=g_crda_d_t.crda006
                  NEXT FIELD crda006                  
               END IF                    
            END IF 
]]>
</point>
  <point name="input.a.page2.crda000_2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            #此段落由子樣板a05產生
            IF  g_crda2_d[g_detail_idx].crda000 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_crda2_d[g_detail_idx].crda000 != g_crda2_d_t.crda000)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM crda_t WHERE "||"crdaent = '" ||g_enterprise|| "' AND "||"crda000 = '"||g_crda2_d[g_detail_idx].crda000 ||"'",'std-00004',0) THEN 
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
</point>
  <point name="input.before_dialog" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         CALL acri004_b_fill(g_wc2)
         IF cl_null(g_crda007) THEN LET g_crda007='1' END IF
         IF cl_null(g_crda008) THEN LET g_crda008='1' END IF
         IF cl_null(g_crda009) THEN LET g_crda009='1' END IF
         DISPLAY g_crda007 TO crda007
         DISPLAY g_crda008 TO crda008
         DISPLAY g_crda009 TO crda009
         IF cl_null(g_crda011) THEN LET g_crda011=10 END IF
         IF cl_null(g_crda012) THEN LET g_crda012=10 END IF
         IF cl_null(g_crda013) THEN LET g_crda013=10 END IF
         DISPLAY g_crda011 TO crda011
         DISPLAY g_crda012 TO crda012
         DISPLAY g_crda013 TO crda013            ]]>
</point>
  <point name="input.body.before_insert" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            LET g_crda_d[l_ac].crdastus='Y']]>
</point>
  <point name="input.body.before_row2" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            IF cl_null(g_crda007) THEN LET g_crda007='1' END IF
            IF cl_null(g_crda008) THEN LET g_crda008='1' END IF
            IF cl_null(g_crda009) THEN LET g_crda009='1' END IF
            DISPLAY g_crda007 TO crda007
            DISPLAY g_crda008 TO crda008
            DISPLAY g_crda009 TO crda009
            IF cl_null(g_crda011) THEN LET g_crda011=10 END IF
            IF cl_null(g_crda012) THEN LET g_crda012=10 END IF
            IF cl_null(g_crda013) THEN LET g_crda013=10 END IF
            DISPLAY g_crda011 TO crda011
            DISPLAY g_crda012 TO crda012
            DISPLAY g_crda013 TO crda013           ]]>
</point>
  <point name="input.more_input" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      INPUT g_crda007,g_crda008,g_crda009,g_crda011,g_crda012,g_crda013 FROM crda007,crda008,crda009,crda011,crda012,crda013
      
         BEFORE INPUT
#            CALL acri004_b_fill(g_wc2)
            IF cl_null(g_crda007) THEN LET g_crda007='1' END IF
            IF cl_null(g_crda008) THEN LET g_crda008='1' END IF
            IF cl_null(g_crda009) THEN LET g_crda009='1' END IF
            DISPLAY g_crda007 TO crda007
            DISPLAY g_crda008 TO crda008
            DISPLAY g_crda009 TO crda009 
            IF cl_null(g_crda011) THEN LET g_crda011=10 END IF
            IF cl_null(g_crda012) THEN LET g_crda012=10 END IF
            IF cl_null(g_crda013) THEN LET g_crda013=10 END IF
            DISPLAY g_crda011 TO crda011
            DISPLAY g_crda012 TO crda012
            DISPLAY g_crda013 TO crda013    

        AFTER FIELD crda011
          IF g_crda011 IS NOT NULL THEN
             IF g_crda011<=0 THEN
                CALL cl_err(g_crda011,"aoo-00006",1)
                NEXT FIELD CURRENT
             END IF
          END IF             

        AFTER FIELD crda012
          IF g_crda012 IS NOT NULL THEN
             IF g_crda012<=0 THEN
                CALL cl_err(g_crda012,"aoo-00006",1)
                NEXT FIELD CURRENT
             END IF
          END IF 
          
        AFTER FIELD crda013
          IF g_crda013 IS NOT NULL THEN
             IF g_crda013<=0 THEN
                CALL cl_err(g_crda013,"aoo-00006",1)
                NEXT FIELD CURRENT
             END IF
          END IF 

         AFTER INPUT 
            UPDATE crda_t SET crda007=g_crda007,
                              crda008=g_crda008,
                              crda009=g_crda009,
                              crda011=g_crda011,
                              crda012=g_crda012,
                              crda013=g_crda013
             WHERE crdaent=g_enterprise      
           IF SQLCA.sqlcode THEN
              CALL cl_err("crda_t",SQLCA.sqlcode,0)
           END IF           
      
      
      END INPUT]]>
</point>
  <point name="insert_b.a_insert" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
       UPDATE crda_t SET crda007=g_crda007,
                         crda008=g_crda008,
                         crda009=g_crda009,
                         crda011=g_crda011,
                         crda012=g_crda012,
                         crda013=g_crda013
        WHERE crdaent=g_enterprise
          AND crda000=ps_keys[1]       
       IF SQLCA.sqlcode THEN
          CALL cl_err("crda_t",SQLCA.sqlcode,0)
       END IF]]>
</point>
  <point name="modify.define" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[]]>
</point>
  <point name="query.after_construct" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[   IF cl_null(g_wc2) THEN
      LET g_wc2=" 1=1"
   END IF
   IF cl_null(g_wc_other) THEN
      LET g_wc_other=" 1=1"
   END IF
   LET g_wc2=g_wc2," AND ",g_wc_other]]>
</point>
  <point name="query.more_construct" cite_std="N" status="u" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[      CONSTRUCT g_wc_other ON crda007,crda008,crda009,crda011,crda012,crda013
         FROM crda007,crda008,crda009,crda011,crda012,crda013
         
      END CONSTRUCT]]>
</point>
  <point name="ref_show.body2.reference" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[
            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdaownid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdaownid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdaownid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdaowndp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdaowndp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdaowndp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdacrtid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdacrtid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdacrtid_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdacrtdp
            CALL ap_ref_array2(g_ref_fields,"SELECT ooefl003 FROM ooefl_t WHERE ooeflent='"||g_enterprise||"' AND ooefl001=? AND ooefl002='"||g_dlang||"'","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdacrtdp_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdacrtdp_desc

            INITIALIZE g_ref_fields TO NULL
            LET g_ref_fields[1] = g_crda2_d[l_ac].crdamodid
            CALL ap_ref_array2(g_ref_fields,"SELECT oofa011 FROM oofa_t WHERE oofaent='"||g_enterprise||"' AND oofa002='2' AND oofa003=? ","") RETURNING g_rtn_fields
            LET g_crda2_d[l_ac].crdamodid_desc = '', g_rtn_fields[1] , ''
            DISPLAY BY NAME g_crda2_d[l_ac].crdamodid_desc
]]>
</point>
  <point name="ui_dialog.b_dialog" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[            DISPLAY g_crda007 TO crda007
            DISPLAY g_crda008 TO crda008
            DISPLAY g_crda009 TO crda009
            DISPLAY g_crda011 TO crda011
            DISPLAY g_crda012 TO crda012
            DISPLAY g_crda013 TO crda013            ]]>
</point>
  <point name="ui_dialog.more_displayarray" cite_std="N" status="" ver="1" src="s" new="N" order="" mark_hard="N">
<![CDATA[         ]]>
</point>
  <point name="global.memo" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.import" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.inc" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="global.argv" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.init" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.body.after_define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.servicecall" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.before_close" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="main.exit" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="init.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.body2.before_display2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="ui_dialog.before_row2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.modify_detail" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.output" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="menu.query" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page1.crda010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page1.crda010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.c.page1.crda010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.crdaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.crdaownid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.crdaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.crdaowndp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.crdacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.crdacrtid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.crdacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.crdacrtdp" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.crdacrtdt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.crdamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.a.page2.crdamodid" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.b.page2.crdamoddt" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="cs.before_construct" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="query.before_dialog" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.before_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.define_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.before_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.before_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_insert2" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete_ask" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.after_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.crdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.b.page1.crda010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.a.page1.crda010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.g.page1.crda010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crdastus" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda000" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda001" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda002" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda003" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda004" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda005" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda006" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.c.page1.crda010" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_row" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body.a_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="input.body2.action" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify.after_input" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.sql_after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="b_fill.fill" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.reference" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="detail_show.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_entry_b.set_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="set_no_entry_b.set_no_entry_b" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="default_search.after_sql" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.b_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.m_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="delete_b.a_delete" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.b_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="insert_b.m_insert" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.b_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.m_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="update_b.a_update" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="lock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="unlock_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="link_b.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.define" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.before" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.page_control" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <point name="modify_detail_chk.after" cite_std="N" status="" ver="" src="s" new="Y">
<![CDATA[]]>
</point>
  <section id="acri004.b_fill" ver="3" status="" src="s">
<![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION acri004_b_fill(p_wc2)              #BODY FILL UP
   DEFINE p_wc2           STRING
   #add-point:b_fill段define
   {<point name="b_fill.define"/>}
   #end add-point
   
   IF cl_null(p_wc2) THEN
      LET p_wc2 = " 1=1"
   END IF
   
   #add-point:b_fill段sql之前
   {<point name="b_fill.sql_before"/>}
   #end add-point
 
   LET g_sql = "SELECT  UNIQUE crdastus,crda000,crda001,crda002,crda003,crda004,crda005,crda006,crda010, 
       crda000,crdaownid,'',crdaowndp,'',crdacrtid,'',crdacrtdp,'',crdacrtdt,crdamodid,'',crdamoddt FROM crda_t", 

               "",
               " WHERE crdaent= ? AND 1=1 AND ", p_wc2 
    
   LET g_sql = g_sql, #,cl_get_extra_cond('zzuser', 'zzgrup') 
                      " ORDER BY crda_t.crda000"
  
   #add-point:b_fill段sql之後
   {<point name="b_fill.sql_after"/>}
   #end add-point
  
   PREPARE acri004_pb FROM g_sql
   DECLARE b_fill_curs CURSOR FOR acri004_pb
   
   OPEN b_fill_curs USING g_enterprise
 
   CALL g_crda_d.clear()
   CALL g_crda2_d.clear()   
 
 
   LET g_cnt = l_ac
   LET l_ac = 1   
   ERROR "Searching!" 
 
   FOREACH b_fill_curs INTO g_crda_d[l_ac].crdastus,g_crda_d[l_ac].crda000,g_crda_d[l_ac].crda001,g_crda_d[l_ac].crda002, 
       g_crda_d[l_ac].crda003,g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005,g_crda_d[l_ac].crda006,g_crda_d[l_ac].crda010, 
       g_crda2_d[l_ac].crda000,g_crda2_d[l_ac].crdaownid,g_crda2_d[l_ac].crdaownid_desc,g_crda2_d[l_ac].crdaowndp, 
       g_crda2_d[l_ac].crdaowndp_desc,g_crda2_d[l_ac].crdacrtid,g_crda2_d[l_ac].crdacrtid_desc,g_crda2_d[l_ac].crdacrtdp, 
       g_crda2_d[l_ac].crdacrtdp_desc,g_crda2_d[l_ac].crdacrtdt,g_crda2_d[l_ac].crdamodid,g_crda2_d[l_ac].crdamodid_desc, 
       g_crda2_d[l_ac].crdamoddt
      IF SQLCA.sqlcode THEN
         CALL cl_err("FOREACH:",SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
  
      #add-point:b_fill段資料填充
      {<point name="b_fill.fill"/>}
      #end add-point
      
      CALL acri004_detail_show()      
 
      LET l_ac = l_ac + 1
      IF l_ac > g_max_rec THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   IF l_ac > g_max_rec THEN
      IF g_error_show = 1 THEN
         CALL cl_err("crda_t",9035,1)
      END IF
   END IF 
   LET g_error_show = 0
   
 
  
   
   CALL g_crda_d.deleteElement(g_crda_d.getLength())   
   CALL g_crda2_d.deleteElement(g_crda2_d.getLength())
 
   
   #將key欄位填到每個page
   FOR l_ac = 1 TO g_crda_d.getLength()
      LET g_crda2_d[l_ac].crda000 = g_crda_d[l_ac].crda000 
 
   END FOR
   
   IF g_cnt > g_crda_d.getLength() THEN
      LET l_ac = g_crda_d.getLength()
   ELSE
      LET l_ac = g_cnt
   END IF
   LET g_cnt = l_ac
 
   #add-point:b_fill段資料填充(其他單身)
   {<point name="b_fill.others.fill"/>}
   #end add-point
 
   LET g_detail_cnt = g_crda_d.getLength() 
   DISPLAY g_detail_cnt TO FORMONLY.cnt
   
   CLOSE b_fill_curs
   FREE acri004_pb
   
END FUNCTION
]]>
</section>
  <section id="acri004.b_fill2" ver="1" status="" src="s">
<![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION acri004_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num5
   DEFINE li_ac           LIKE type_t.num5
   #add-point:b_fill2段define
   {<point name="b_fill2.define"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
END FUNCTION
]]>
</section>
  <section id="acri004.before_delete" ver="1" status="" src="s">
<![CDATA[#+ 單身db資料刪除
PRIVATE FUNCTION acri004_before_delete()
   #add-point:before_delete段define
   {<point name="before_delete.define"/>}
   #end add-point 
   
   #add-point:單筆刪除前
   {<point name="delete.body.b_single_delete" mark="Y"/>}
   #end add-point
   
   DELETE FROM crda_t
    WHERE crdaent = g_enterprise AND  =  AND
 
          crda000 = g_crda_d_t.crda000
 
      
   #add-point:單筆刪除中
   {<point name="delete.body.m_single_delete"/>}
   #end add-point
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("crda_t",SQLCA.sqlcode,1)
      RETURN FALSE 
   END IF
   
   #add-point:單筆刪除後
   {<point name="delete.body.a_single_delete"/>}
   #end add-point
 
   LET g_rec_b = g_rec_b-1
   DISPLAY g_rec_b TO FORMONLY.cnt
 
   RETURN TRUE
    
END FUNCTION
]]>
</section>
  <section id="acri004.browser_fill" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION acri004_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   DEFINE l_searchcol       STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define"/>}
   #end add-point    
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point    
   
   CALL g_browser.clear()
 
   #搜尋用
   IF cl_null(g_searchcol) OR g_searchcol = '0' THEN
      LET l_searchcol = ""
   ELSE
      LET l_searchcol = g_searchcol
   END IF
   
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
   IF cl_null(l_wc) THEN  #p_wc 查詢條件
      RETURN
   END IF
   
   IF g_wc2 <> " 1=1" OR NOT cl_null(g_wc2) THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE  ",
 
                      " FROM crda_t ",
                      " ",
                      " ",
 
                      " WHERE crdaent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("crda_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE  ",
 
                      " FROM crda_t ",
                      " ",
                      " ",
                      " WHERE crdaent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("crda_t")
   END IF 
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
 
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
   
   #若超過最大顯示筆數
   LET g_error_show = 0
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #LET g_page_action = ps_page_action          # Keep Action
   IF ps_page_action = "first" OR              
      ps_page_action = "prev"  OR
      ps_page_action = "next"  OR
      ps_page_action = "last"  THEN
      LET g_page_action = ps_page_action        #g_page_action 這個會影響 browser 下面四個button 的判斷 
   END IF
   
   CASE ps_page_action
      WHEN "F" 
         LET g_pagestart = 1
          
      WHEN "P"  
         LET g_pagestart = g_pagestart - g_max_browse
         IF g_pagestart < 1 THEN
             LET g_pagestart = 1
         END IF
          
      WHEN "N"  
         LET g_pagestart = g_pagestart + g_max_browse
         IF g_pagestart > g_browser_cnt THEN
            LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
            WHILE g_pagestart > g_browser_cnt 
               LET g_pagestart = g_pagestart - g_max_browse
            END WHILE
         END IF
      
      WHEN "L"  
         LET g_pagestart = g_browser_cnt - (g_browser_cnt mod g_max_browse) + 1
         WHILE g_pagestart > g_browser_cnt 
            LET g_pagestart = g_pagestart - g_max_browse
         END WHILE
 
      OTHERWISE
         LET g_pagestart = 1
         
   END CASE
   
   #單身有輸入查詢條件且非null
   IF g_wc2 <> " 1=1" AND NOT cl_null(g_wc2) THEN 
 
      #依照 Browser欄位定義(取代原本bs_sql功能)
      LET l_sub_sql  = "SELECT DISTINCT  ",
                       " FROM crda_t ",
 
                       " ",
                       " WHERE crdaent = '" ||g_enterprise|| "' AND ", g_wc," AND ",g_wc2, cl_sql_add_filter("crda_t")
 
   ELSE
      #單身無輸入資料
      LET l_sub_sql  = "SELECT DISTINCT  ",
                       " FROM crda_t ",
                       " WHERE crdaent = '" ||g_enterprise|| "' AND ", g_wc, cl_sql_add_filter("crda_t")
                 
   END IF
   
   #add-point:browser_fill,sql_rank前
   {<point name="browser_fill.before_sql_rank"/>}
   #end add-point
   
   LET l_sql_rank = "SELECT ,DENSE_RANK() OVER(ORDER BY  ",g_order,") AS RANK ",
                    " FROM (",l_sub_sql,") "
                       
   #定義翻頁CURSOR
   LET g_sql= " SELECT  FROM (",l_sql_rank,") WHERE RANK>=",g_pagestart,
              " AND RANK < ", g_pagestart + g_max_browse,
              " ORDER BY ",l_searchcol, " ", g_order
                
   #add-point:browser_fill,pre前
   {<point name="browser_fill.before_pre"/>}
   #end add-point
                
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
 
   CALL g_browser.clear()
   LET g_cnt = 1
   FOREACH browse_cur INTO     
      IF SQLCA.sqlcode THEN
         CALL cl_err('foreach:',SQLCA.sqlcode,1)
         EXIT FOREACH
      END IF
      
      
      
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point    
      
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_rec THEN
         EXIT FOREACH
      END IF
   END FOREACH
 
   CALL g_browser.deleteElement(g_cnt)
   IF g_browser.getLength() = 0 AND g_wc THEN
      INITIALIZE g_crda_m.* TO NULL
      CALL g_crda_d.clear()
      CALL g_crda2_d.clear()
 
      CLEAR FORM
   END IF
   
   LET g_header_cnt = g_browser.getLength()
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", FALSE)
   ELSE
      CALL cl_set_act_visible("statechange,modify,delete,reproduce", TRUE)
   END IF
   
END FUNCTION
]]>
</section>
  <section id="acri004.browser_search" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料搜尋
PRIVATE FUNCTION acri004_browser_search(p_type)
   DEFINE p_type LIKE type_t.chr10
   #add-point:browser_search段define
   {<point name="browser_search.define"/>}
   #end add-point    
   
   #若無輸入關鍵字則查找出所有資料
   IF NOT cl_null(g_searchstr) AND g_searchcol='0' THEN
      CALL cl_err("searchcol","std-00005",0)
      RETURN FALSE 
   END IF 
   
   IF NOT cl_null(g_searchstr) THEN
      LET g_wc = " lower(", g_searchcol, ") LIKE '%", g_searchstr, "%'"
      LET g_wc = g_wc.toLowerCase()
   ELSE
      LET g_wc = " 1=1"
   END IF         
   
   #若為排序搜尋則添加以下條件
   IF cl_null(g_searchcol) OR g_searchcol = "0" THEN
      LET g_wc = g_wc, " ORDER BY "
   ELSE
      LET g_wc = g_wc, " ORDER BY ", g_searchcol
   END IF 
 
   CALL acri004_browser_fill("F")
   CALL ui.Interface.refresh()
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="acri004.construct" ver="1" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION acri004_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   #add-point:cs段define
   {<point name="cs.define"/>}
   #end add-point    
 
   #清除畫面上相關資料
   CLEAR FORM                 
   INITIALIZE g_crda_m.* TO NULL
   CALL g_crda_d.clear()
   CALL g_crda2_d.clear()
 
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   LET g_action_choice = ""
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段construct外
   {<point name="cs.head.before"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON crda007,crda008,crda009
 
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
        #---------------------------<  Master  >---------------------------
         #----<<crda007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda007
            #add-point:BEFORE FIELD crda007
            {<point name="construct.b.crda007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda007
            
            #add-point:AFTER FIELD crda007
            {<point name="construct.a.crda007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crda007
         ON ACTION controlp INFIELD crda007
            #add-point:ON ACTION controlp INFIELD crda007
            {<point name="construct.c.crda007" />}
            #END add-point
 
         #----<<crda008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda008
            #add-point:BEFORE FIELD crda008
            {<point name="construct.b.crda008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda008
            
            #add-point:AFTER FIELD crda008
            {<point name="construct.a.crda008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crda008
         ON ACTION controlp INFIELD crda008
            #add-point:ON ACTION controlp INFIELD crda008
            {<point name="construct.c.crda008" />}
            #END add-point
 
         #----<<crda009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda009
            #add-point:BEFORE FIELD crda009
            {<point name="construct.b.crda009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda009
            
            #add-point:AFTER FIELD crda009
            {<point name="construct.a.crda009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.crda009
         ON ACTION controlp INFIELD crda009
            #add-point:ON ACTION controlp INFIELD crda009
            {<point name="construct.c.crda009" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      CONSTRUCT g_wc2_table1 ON crdastus,crda000,crda001,crda002,crda003,crda004,crda005,crda006,crda010, 
          crdaownid,crdaowndp,crdacrtid,crdacrtdp,crdacrtdt,crdamodid,crdamoddt
           FROM s_detail1[1].crdastus,s_detail1[1].crda000,s_detail1[1].crda001,s_detail1[1].crda002, 
               s_detail1[1].crda003,s_detail1[1].crda004,s_detail1[1].crda005,s_detail1[1].crda006,s_detail1[1].crda010, 
               s_detail2[1].crdaownid,s_detail2[1].crdaowndp,s_detail2[1].crdacrtid,s_detail2[1].crdacrtdp, 
               s_detail2[1].crdacrtdt,s_detail2[1].crdamodid,s_detail2[1].crdamoddt
                      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
         #單身公用欄位開窗相關處理
         #此段落由子樣板a11產生
         ##----<<crdaownid>>----
         #ON ACTION controlp INFIELD crdaownid
         #   CALL q_common('crda_t','crdaownid',TRUE,FALSE,g_crda2_d[1].crdaownid) RETURNING ls_return
         #   DISPLAY ls_return TO crdaownid
         #   NEXT FIELD crdaownid  
         #
         ##----<<crdaowndp>>----
         #ON ACTION controlp INFIELD crdaowndp
         #   CALL q_common('crda_t','crdaowndp',TRUE,FALSE,g_crda2_d[1].crdaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO crdaowndp
         #   NEXT FIELD crdaowndp
         #
         ##----<<crdacrtid>>----
         #ON ACTION controlp INFIELD crdacrtid
         #   CALL q_common('crda_t','crdacrtid',TRUE,FALSE,g_crda2_d[1].crdacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO crdacrtid
         #   NEXT FIELD crdacrtid
         #
         ##----<<crdacrtdp>>----
         #ON ACTION controlp INFIELD crdacrtdp
         #   CALL q_common('crda_t','crdacrtdp',TRUE,FALSE,g_crda2_d[1].crdacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO crdacrtdp
         #   NEXT FIELD crdacrtdp
         #
         ##----<<crdamodid>>----
         #ON ACTION controlp INFIELD crdamodid
         #   CALL q_common('crda_t','crdamodid',TRUE,FALSE,g_crda2_d[1].crdamodid) RETURNING ls_return
         #   DISPLAY ls_return TO crdamodid
         #   NEXT FIELD crdamodid
         #
         ##----<<crdacnfid>>----
         ##ON ACTION controlp INFIELD crdacnfid
         ##   CALL q_common('crda_t','crdacnfid',TRUE,FALSE,.crdacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO crdacnfid
         ##   NEXT FIELD crdacnfid
         #
         ##----<<crdapstid>>----
         ##ON ACTION controlp INFIELD crdapstid
         ##   CALL q_common('crda_t','crdapstid',TRUE,FALSE,.crdapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO crdapstid
         ##   NEXT FIELD crdapstid
         
         ##----<<crdacrtdt>>----
         AFTER FIELD crdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crdamoddt>>----
         AFTER FIELD crdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crdacnfdt>>----
         #AFTER FIELD crdacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crdapstdt>>----
         #AFTER FIELD crdapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
           
         #單身一般欄位開窗相關處理
         #---------------------<  Detail: page1  >---------------------
         #----<<crdastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdastus
            #add-point:BEFORE FIELD crdastus
            {<point name="construct.b.page1.crdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdastus
            
            #add-point:AFTER FIELD crdastus
            {<point name="construct.a.page1.crdastus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crdastus
         ON ACTION controlp INFIELD crdastus
            #add-point:ON ACTION controlp INFIELD crdastus
            {<point name="construct.c.page1.crdastus" />}
            #END add-point
 
         #----<<crda000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda000
            #add-point:BEFORE FIELD crda000
            {<point name="construct.b.page1.crda000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda000
            
            #add-point:AFTER FIELD crda000
            {<point name="construct.a.page1.crda000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda000
         ON ACTION controlp INFIELD crda000
            #add-point:ON ACTION controlp INFIELD crda000
            {<point name="construct.c.page1.crda000" />}
            #END add-point
 
         #----<<crda001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda001
            #add-point:BEFORE FIELD crda001
            {<point name="construct.b.page1.crda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda001
            
            #add-point:AFTER FIELD crda001
            {<point name="construct.a.page1.crda001" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda001
         ON ACTION controlp INFIELD crda001
            #add-point:ON ACTION controlp INFIELD crda001
            {<point name="construct.c.page1.crda001" />}
            #END add-point
 
         #----<<crda002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda002
            #add-point:BEFORE FIELD crda002
            {<point name="construct.b.page1.crda002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda002
            
            #add-point:AFTER FIELD crda002
            {<point name="construct.a.page1.crda002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda002
         ON ACTION controlp INFIELD crda002
            #add-point:ON ACTION controlp INFIELD crda002
            {<point name="construct.c.page1.crda002" />}
            #END add-point
 
         #----<<crda003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda003
            #add-point:BEFORE FIELD crda003
            {<point name="construct.b.page1.crda003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda003
            
            #add-point:AFTER FIELD crda003
            {<point name="construct.a.page1.crda003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda003
         ON ACTION controlp INFIELD crda003
            #add-point:ON ACTION controlp INFIELD crda003
            {<point name="construct.c.page1.crda003" />}
            #END add-point
 
         #----<<crda004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda004
            #add-point:BEFORE FIELD crda004
            {<point name="construct.b.page1.crda004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda004
            
            #add-point:AFTER FIELD crda004
            {<point name="construct.a.page1.crda004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda004
         ON ACTION controlp INFIELD crda004
            #add-point:ON ACTION controlp INFIELD crda004
            {<point name="construct.c.page1.crda004" />}
            #END add-point
 
         #----<<crda005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda005
            #add-point:BEFORE FIELD crda005
            {<point name="construct.b.page1.crda005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda005
            
            #add-point:AFTER FIELD crda005
            {<point name="construct.a.page1.crda005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda005
         ON ACTION controlp INFIELD crda005
            #add-point:ON ACTION controlp INFIELD crda005
            {<point name="construct.c.page1.crda005" />}
            #END add-point
 
         #----<<crda006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda006
            #add-point:BEFORE FIELD crda006
            {<point name="construct.b.page1.crda006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda006
            
            #add-point:AFTER FIELD crda006
            {<point name="construct.a.page1.crda006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda006
         ON ACTION controlp INFIELD crda006
            #add-point:ON ACTION controlp INFIELD crda006
            {<point name="construct.c.page1.crda006" />}
            #END add-point
 
         #----<<crda010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda010
            #add-point:BEFORE FIELD crda010
            {<point name="construct.b.page1.crda010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda010
            
            #add-point:AFTER FIELD crda010
            {<point name="construct.a.page1.crda010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.crda010
         ON ACTION controlp INFIELD crda010
            #add-point:ON ACTION controlp INFIELD crda010
            {<point name="construct.c.page1.crda010" />}
            #END add-point
 
#---------------------<  Detail: page2  >---------------------
         #----<<crdaownid>>----
         #Ctrlp:construct.c.page2.crdaownid
         ON ACTION controlp INFIELD crdaownid
            #add-point:ON ACTION controlp INFIELD crdaownid
            {<point name="construct.c.page2.crdaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdaownid
            #add-point:BEFORE FIELD crdaownid
            {<point name="construct.b.page2.crdaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdaownid
            
            #add-point:AFTER FIELD crdaownid
            {<point name="construct.a.page2.crdaownid" />}
            #END add-point
            
 
         #----<<crdaownid_desc>>----
         #----<<crdaowndp>>----
         #Ctrlp:construct.c.page2.crdaowndp
         ON ACTION controlp INFIELD crdaowndp
            #add-point:ON ACTION controlp INFIELD crdaowndp
            {<point name="construct.c.page2.crdaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdaowndp
            #add-point:BEFORE FIELD crdaowndp
            {<point name="construct.b.page2.crdaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdaowndp
            
            #add-point:AFTER FIELD crdaowndp
            {<point name="construct.a.page2.crdaowndp" />}
            #END add-point
            
 
         #----<<crdaowndp_desc>>----
         #----<<crdacrtid>>----
         #Ctrlp:construct.c.page2.crdacrtid
         ON ACTION controlp INFIELD crdacrtid
            #add-point:ON ACTION controlp INFIELD crdacrtid
            {<point name="construct.c.page2.crdacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdacrtid
            #add-point:BEFORE FIELD crdacrtid
            {<point name="construct.b.page2.crdacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdacrtid
            
            #add-point:AFTER FIELD crdacrtid
            {<point name="construct.a.page2.crdacrtid" />}
            #END add-point
            
 
         #----<<crdacrtid_desc>>----
         #----<<crdacrtdp>>----
         #Ctrlp:construct.c.page2.crdacrtdp
         ON ACTION controlp INFIELD crdacrtdp
            #add-point:ON ACTION controlp INFIELD crdacrtdp
            {<point name="construct.c.page2.crdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdacrtdp
            #add-point:BEFORE FIELD crdacrtdp
            {<point name="construct.b.page2.crdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdacrtdp
            
            #add-point:AFTER FIELD crdacrtdp
            {<point name="construct.a.page2.crdacrtdp" />}
            #END add-point
            
 
         #----<<crdacrtdp_desc>>----
         #----<<crdacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdacrtdt
            #add-point:BEFORE FIELD crdacrtdt
            {<point name="construct.b.page2.crdacrtdt" />}
            #END add-point
 
         #----<<crdamodid>>----
         #Ctrlp:construct.c.page2.crdamodid
         ON ACTION controlp INFIELD crdamodid
            #add-point:ON ACTION controlp INFIELD crdamodid
            {<point name="construct.c.page2.crdamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdamodid
            #add-point:BEFORE FIELD crdamodid
            {<point name="construct.b.page2.crdamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdamodid
            
            #add-point:AFTER FIELD crdamodid
            {<point name="construct.a.page2.crdamodid" />}
            #END add-point
            
 
         #----<<crdamodid_desc>>----
         #----<<crdamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdamoddt
            #add-point:BEFORE FIELD crdamoddt
            {<point name="construct.b.page2.crdamoddt" />}
            #END add-point
 
   
       
      END CONSTRUCT
  
 
  
      #add-point:cs段more_construct
      {<point name="cs.more_construct"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:ui_dialog段b_dialog
         {<point name="cs.before_dialog"/>}
         #end add-point
      
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   END DIALOG
   
   #add-point:cs段after_construct
   {<point name="cs.after_construct"/>}
   #end add-point
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
 
   
   LET g_current_row = 1
 
   IF INT_FLAG THEN
      RETURN
   END IF
   
   LET g_wc_filter = ""
 
END FUNCTION
]]>
</section>
  <section id="acri004.default_search" ver="3" status="" src="s">
<![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION acri004_default_search()
   DEFINE li_idx  LIKE type_t.num5
   DEFINE li_cnt  LIKE type_t.num5
   DEFINE ls_wc   STRING
   #add-point:default_search段define
   {<point name="default_search.define"/>}
   #end add-point  
   
   IF NOT cl_null(g_argv[1]) THEN
      LET ls_wc = ls_wc, " crda000 = '", g_argv[1], "' AND "
   END IF
   
 
 
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET ls_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_wc2 = ls_wc
   ELSE
      LET g_wc2 = " 1=1"
   END IF
 
END FUNCTION
]]>
</section>
  <section id="acri004.delete" ver="2" status="" src="s">
<![CDATA[#+ 資料刪除
PRIVATE FUNCTION acri004_delete()
   DEFINE li_ac LIKE type_t.num5
   #add-point:delete段define
   {<point name="delete.define"/>}
   #end add-point 
   
   IF NOT cl_ask_delete() THEN
      LET INT_FLAG = 1 #不刪除
   ELSE
      LET INT_FLAG = 0 #要刪除
   END IF
   
   LET li_ac = ARR_CURR()
   
   CALL s_transaction_begin()  
 
   #add-point:delete段刪除前
   {<point name="delete.b_delete" mark="Y"/>}
   #end add-point 
   DELETE FROM crda_t 
         WHERE crda000 = g_crda_d[li_ac].crda000
 
   #add-point:delete段刪除中
   {<point name="delete.m_delete"/>}
   #end add-point 
   IF SQLCA.sqlcode THEN
      CALL cl_err("crda_t",SQLCA.sqlcode,1) 
      CALL s_transaction_end('N','0')
   ELSE
      CALL s_transaction_end('Y','0')
   END IF
   #add-point:delete段刪除後
   {<point name="delete.a_delete"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="acri004.delete_b" ver="2" status="" src="s">
<![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION acri004_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:delete_b段define
   {<point name="delete_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "crda_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 THEN
   
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point     
   
      DELETE FROM crda_t
       WHERE crdaent = g_enterprise AND
         crda000 = ps_keys_bak[1]
 
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point  
         
      IF SQLCA.sqlcode THEN
         CALL cl_err("",SQLCA.sqlcode,0)
      END IF
      
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete"/>}
      #end add-point
      
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="acri004.description" ver="50" status="" src="s">
<![CDATA[#+ Version..: T100-ERP-1.00.00(SD版次:1,PD版次:1) Build-000053
#+ 
#+ Filename...: acri004
#+ Description: 會員RFM測量方式維護作業
#+ Creator....: 01251(2014/04/24)
#+ Modifier...: 01251(2014/04/24)
#+ Buildtype..: 應用 i02 樣板自動產生
#+ 以上段落由子樣板a00產生
]]>
</section>
  <section id="acri004.detail_reproduce" ver="1" status="" src="s">
<![CDATA[#+ 單身自動複製
PRIVATE FUNCTION acri004_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE crda_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE acri004_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE acri004_detail AS ",
                "SELECT * FROM crda_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO acri004_detail SELECT * FROM crda_t 
                                         WHERE crdaent = g_enterprise AND  = g__t
 
   
   #將key修正為調整後   
   UPDATE acri004_detail 
      #更新key欄位
      SET  = 
 
      #更新共用欄位
      #此段落由子樣板a13產生
       , crdaownid = g_user
       , crdaowndp = g_dept
       , crdacrtid = g_user
       , crdacrtdp = g_dept 
       , crdacrtdt = ld_date
       , crdamodid = "" 
       , crdamoddt = "" 
      #, crdastus = "Y"
 
 
                                       
  
   #將資料塞回原table   
   INSERT INTO crda_t SELECT * FROM acri004_detail
   
   IF SQLCA.sqlcode THEN
      CALL cl_err("reproduce",SQLCA.sqlcode,1)
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE acri004_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g__t = 
 
   
   DROP TABLE acri004_detail
   
END FUNCTION
]]>
</section>
  <section id="acri004.detail_show" ver="1" status="" src="s">
<![CDATA[#+ 顯示相關資料
PRIVATE FUNCTION acri004_detail_show()
   #add-point:show段define
   {<point name="detail_show.define"/>}
   #end add-point
 
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   
   
   #帶出公用欄位reference值page1
   
    
   #帶出公用欄位reference值page2
   #此段落由子樣板a12產生
      #LET g_crda2_d[l_ac].crdaownid_desc = cl_get_username(g_crda2_d[l_ac].crdaownid)
      #LET g_crda2_d[l_ac].crdaowndp_desc = cl_get_deptname(g_crda2_d[l_ac].crdaowndp)
      #LET g_crda2_d[l_ac].crdacrtid_desc = cl_get_username(g_crda2_d[l_ac].crdacrtid)
      #LET g_crda2_d[l_ac].crdacrtdp_desc = cl_get_deptname(g_crda2_d[l_ac].crdacrtdp)
      #LET g_crda2_d[l_ac].crdamodid_desc = cl_get_username(g_crda2_d[l_ac].crdamodid)
      ##LET .crdacnfid_desc = cl_get_deptname(.crdacnfid)
      ##LET .crdapstid_desc = cl_get_deptname(.crdapstid)
      
 
 
 
   
   #讀入ref值
   #add-point:show段單身reference
   {<point name="detail_show.reference"/>}
   #end add-point
   
   #add-point:show段單身reference
   {<point name="detail_show.body2.reference"/>}
   #end add-point
 
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="acri004.fetch" ver="1" status="" src="s">
<![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION acri004_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define"/>}
   #end add-point    
   
   #add-point:fetch段動作開始前
   {<point name="fetch.before_fetch"/>}
   #end add-point    
 
   CASE p_flag
      WHEN 'F' LET g_current_idx = 1
      WHEN 'L' LET g_current_idx = g_header_cnt        
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,': ' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               EXIT CASE  
            END IF
            
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
            LET g_current_idx = g_jump
         END IF
 
         LET g_no_ask = FALSE  
   END CASE    
   
   #若無資料則離開
   IF g_current_idx = 0 THEN
      RETURN
   END IF
   
   CALL acri004_browser_fill(p_flag)
   
   LET g_detail_cnt = g_header_cnt                  
   
   #單身筆數顯示
   DISPLAY g_detail_cnt TO FORMONLY.cnt                      #設定page 總筆數 
   #LET g_detail_idx = 1
   IF g_detail_cnt > 0 THEN
      #LET g_detail_idx = 1
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY ' ' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數
   
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET  = g_browser[g_current_idx].b_
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE acri004_master_referesh USING  INTO g_crda_m.crda007,g_crda_m.crda008,g_crda_m.crda009
   IF SQLCA.sqlcode THEN
      CALL cl_err("crda_t",SQLCA.sqlcode,1)
      INITIALIZE g_crda_m.* TO NULL
      RETURN
   END IF
   
   #LET g_data_owner =       
   #LET g_data_group =   
   
   #重新顯示   
   CALL acri004_show()
 
END FUNCTION
]]>
</section>
  <section id="acri004.fill_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身填充確認
PRIVATE FUNCTION acri004_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   DEFINE lst_token     base.StringTokenizer
   DEFINE ls_token      STRING
   #add-point:fill_chk段define
   {<point name="fill_chk.define"/>}
   #end add-point
   
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1') THEN
      RETURN TRUE
   END IF
   
   #第一單身
   IF ps_idx = 1 AND
      ((NOT cl_null(g_wc2_table1) AND g_wc2_table1.trim() <> '1=1')) THEN
      RETURN TRUE
   END IF
   
   #根據wc判定是否需要填充
 
 
   
   #add-point:fill_chk段other
   {<point name="fill_chk.other"/>}
   #end add-point
   
   RETURN FALSE
 
END FUNCTION
]]>
</section>
  <section id="acri004.global" ver="2" status="" src="s">
<![CDATA[{<point name="global.memo" />}
 
IMPORT os
IMPORT util
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單身 type 宣告
PRIVATE TYPE type_g_crda_d RECORD
       crdastus LIKE crda_t.crdastus, 
   crda000 LIKE crda_t.crda000, 
   crda001 LIKE crda_t.crda001, 
   crda002 LIKE crda_t.crda002, 
   crda003 LIKE crda_t.crda003, 
   crda004 LIKE crda_t.crda004, 
   crda005 LIKE crda_t.crda005, 
   crda006 LIKE crda_t.crda006, 
   crda010 LIKE crda_t.crda010
       END RECORD
PRIVATE TYPE type_g_crda2_d RECORD
       crda000 LIKE crda_t.crda000, 
   crdaownid LIKE crda_t.crdaownid, 
   crdaownid_desc LIKE type_t.chr500, 
   crdaowndp LIKE crda_t.crdaowndp, 
   crdaowndp_desc LIKE type_t.chr500, 
   crdacrtid LIKE crda_t.crdacrtid, 
   crdacrtid_desc LIKE type_t.chr500, 
   crdacrtdp LIKE crda_t.crdacrtdp, 
   crdacrtdp_desc LIKE type_t.chr500, 
   crdacrtdt DATETIME YEAR TO SECOND, 
   crdamodid LIKE crda_t.crdamodid, 
   crdamodid_desc LIKE type_t.chr500, 
   crdamoddt DATETIME YEAR TO SECOND
       END RECORD
 
 
#無單身append欄位定義
 
#模組變數(Module Variables)
DEFINE g_crda_d          DYNAMIC ARRAY OF type_g_crda_d
DEFINE g_crda_d_t        type_g_crda_d
DEFINE g_crda2_d   DYNAMIC ARRAY OF type_g_crda2_d
DEFINE g_crda2_d_t type_g_crda2_d
 
      
DEFINE g_wc2                STRING
DEFINE g_sql                STRING
DEFINE g_forupd_sql         STRING                        #SELECT ... FOR UPDATE SQL
DEFINE g_before_input_done  LIKE type_t.num5
DEFINE g_cnt                LIKE type_t.num10    
DEFINE l_ac                 LIKE type_t.num5              #目前處理的ARRAY CNT 
DEFINE g_curr_diag          ui.Dialog                     #Current Dialog
DEFINE gwin_curr            ui.Window                     #Current Window
DEFINE gfrm_curr            ui.Form                       #Current Form
DEFINE g_temp_idx           LIKE type_t.num5              #單身 所在筆數(暫存用)
DEFINE g_detail_idx         LIKE type_t.num5              #單身 所在筆數(所有資料)
DEFINE g_detail_cnt         LIKE type_t.num5              #單身 總筆數(所有資料)
DEFINE g_ref_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields         DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars           DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys              DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak          DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_insert             LIKE type_t.chr5              #是否導到其他page
DEFINE g_error_show         LIKE type_t.num5
DEFINE g_chk                BOOLEAN
DEFINE g_aw                 STRING                        #確定當下點擊的單身
 
#多table用wc
DEFINE g_wc_table           STRING
 
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
</section>
  <section id="acri004.init" ver="2" status="" src="s">
<![CDATA[#+ 畫面資料初始化
PRIVATE FUNCTION acri004_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point   
   
   
   
   LET g_error_show = 1
   
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
   CALL acri004_default_search()
   
END FUNCTION
]]>
</section>
  <section id="acri004.input" ver="1" status="" src="s">
<![CDATA[#+ 資料輸入
PRIVATE FUNCTION acri004_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_ac_t                LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                   LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num5
   DEFINE  l_i                   LIKE type_t.num5
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num5
   DEFINE  li_reproduce_target   LIKE type_t.num5
   #add-point:input段define
   {<point name="input.define"/>}
   #end add-point    
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF  
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crdastus,crda000,crda001,crda002,crda003,crda004,crda005,crda006,crda010, 
       '',crdaownid,'',crdaowndp,'',crdacrtid,'',crdacrtdp,'',crdacrtdt,crdamodid,'',crdamoddt FROM  
       crda_t WHERE crdaent=? AND crda000=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE acri004_bcl CURSOR FROM g_forupd_sql      # LOCK CURSOR
 
 
   
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL acri004_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL acri004_set_no_entry(p_cmd)
   #add-point:set_no_entry後
   {<point name="input.after_set_no_entry"/>}
   #end add-point
 
   DISPLAY BY NAME g_crda_m.crda007,g_crda_m.crda008,g_crda_m.crda009
   
   LET lb_reproduce = FALSE
   
   #add-point:進入修改段前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
</section>
  <section id="acri004.input.body" ver="1" status="" src="s">
<![CDATA[      #Page1 預設值產生於此處
      INPUT ARRAY g_crda_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert,
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂單身ACTION
         
 
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crda_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL acri004_b_fill(g_wc2) 
            IF g_rec_b != 0 THEN
               CALL fgl_set_arr_curr(l_ac)
            END IF
            #add-point:資料輸入前
            {<point name="input.body.before_input"/>}
            #end add-point
         
         BEFORE ROW
            LET l_insert = FALSE
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_ac = ARR_CURR()
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            
         
            CALL s_transaction_begin()
            
            #判定新增或修改
            IF l_cmd = 'u' THEN
               OPEN acri004_cl USING g_enterprise,
                                               
 
                                               
               IF STATUS THEN
                  CALL cl_err("OPEN acri004_cl:", STATUS, 1)
                  CLOSE acri004_cl
                  CALL s_transaction_end('N','0')
                  RETURN
               END IF
            END IF
            
            LET l_cmd = ''
            
            IF g_rec_b >= l_ac 
               AND g_crda_d[l_ac].crda000 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_crda_d_t.* = g_crda_d[l_ac].*  #BACKUP
               CALL acri004_set_entry_b(l_cmd)
               CALL acri004_set_no_entry_b(l_cmd)
               OPEN acri004_bcl USING g_enterprise,,
 
                                                g_crda_d_t.crda000
 
               IF STATUS THEN
                  CALL cl_err("OPEN acri004_bcl:", STATUS, 1)
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acri004_bcl INTO g_crda_d[l_ac].crdastus,g_crda_d[l_ac].crda000,g_crda_d[l_ac].crda001, 
                      g_crda_d[l_ac].crda002,g_crda_d[l_ac].crda003,g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005, 
                      g_crda_d[l_ac].crda006,g_crda_d[l_ac].crda010,g_crda2_d[l_ac].crda000,g_crda2_d[l_ac].crdaownid, 
                      g_crda2_d[l_ac].crdaownid_desc,g_crda2_d[l_ac].crdaowndp,g_crda2_d[l_ac].crdaowndp_desc, 
                      g_crda2_d[l_ac].crdacrtid,g_crda2_d[l_ac].crdacrtid_desc,g_crda2_d[l_ac].crdacrtdp, 
                      g_crda2_d[l_ac].crdacrtdp_desc,g_crda2_d[l_ac].crdacrtdt,g_crda2_d[l_ac].crdamodid, 
                      g_crda2_d[l_ac].crdamodid_desc,g_crda2_d[l_ac].crdamoddt
                  IF SQLCA.sqlcode THEN
                      CALL cl_err(g_crda_d_t.crda000,SQLCA.sqlcode,1)
                      LET l_lock_sw = "Y"
                  END IF
                  
                  CALL acri004_ref_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            
        
         BEFORE INSERT
            
            INITIALIZE g_crda_d_t.* TO NULL
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crda_d[l_ac].* TO NULL
            
            #公用欄位預設值
            #此段落由子樣板a14產生    
      LET g_crda2_d[l_ac].crdaownid = g_user
      LET g_crda2_d[l_ac].crdaowndp = g_dept
      LET g_crda2_d[l_ac].crdacrtid = g_user
      LET g_crda2_d[l_ac].crdacrtdp = g_dept 
      LET g_crda2_d[l_ac].crdacrtdt = cl_get_current()
      LET g_crda2_d[l_ac].crdamodid = ""
      LET g_crda2_d[l_ac].crdamoddt = ""
      #LET g_crda_d[l_ac].crdastus = ""
 
  
            
            #一般欄位預設值
                  LET g_crda_d[l_ac].crdastus = "Y"
 
 
            
            
            LET g_crda_d_t.* = g_crda_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acri004_set_entry_b(l_cmd)
            CALL acri004_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crda_d[li_reproduce_target].* = g_crda_d[li_reproduce].*
               LET g_crda2_d[li_reproduce_target].* = g_crda2_d[li_reproduce].*
 
               LET g_crda_d[g_crda_d.getLength()].crda000 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
 
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM crda_t 
             WHERE crdaent = g_enterprise AND  = 
 
               AND crda000 = g_crda_d[l_ac].crda000
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               CALL s_transaction_begin()
               #add-point:單身新增前
               {<point name="input.body.b_insert" mark="Y"/>}
               #end add-point
               INSERT INTO crda_t
                           (crdaent,
                            crda007,crda008,crda009,
                            crda000
                            ,crdastus,crda001,crda002,crda003,crda004,crda005,crda006,crda010,crdaownid,crdaowndp,crdacrtid,crdacrtdp,crdacrtdt,crdamodid,crdamoddt) 
                     VALUES(g_enterprise,
                            g_crda_m.crda007,g_crda_m.crda008,g_crda_m.crda009,
                            g_crda_d[l_ac].crda000
                            ,g_crda_d[l_ac].crdastus,g_crda_d[l_ac].crda001,g_crda_d[l_ac].crda002,g_crda_d[l_ac].crda003, 
                                g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005,g_crda_d[l_ac].crda006, 
                                g_crda_d[l_ac].crda010,g_crda2_d[l_ac].crdaownid,g_crda2_d[l_ac].crdaowndp, 
                                g_crda2_d[l_ac].crdacrtid,g_crda2_d[l_ac].crdacrtdp,g_crda2_d[l_ac].crdacrtdt, 
                                g_crda2_d[l_ac].crdamodid,g_crda2_d[l_ac].crdamoddt)
               #add-point:單身新增中
               {<point name="input.body.m_insert"/>}
               #end add-point
               LET p_cmd = 'u'
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_crda_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("crda_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR "INSERT O.K"
               LET g_rec_b=g_rec_b+1
               DISPLAY g_rec_b TO FORMONLY.cnt
            END IF
            
            #add-point:單身新增後
            {<point name="input.body.after_insert"/>}
            #end add-point
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_crda_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_crda_d.deleteElement(l_ac)
               NEXT FIELD crda000
            END IF
            IF g_crda_d_t.crda000 IS NOT NULL
 
               THEN
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete"/>}
               #end add-point
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               IF acri004_before_delete() THEN 
                  CALL s_transaction_end('Y','0')
               ELSE 
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               END IF 
               CLOSE acri004_bcl
               LET l_count = g_crda_d.getLength()
            END IF 
            
            #add-point:單身刪除後
            {<point name="input.body.a_delete"/>}
            #end add-point
              
         AFTER DELETE 
            #add-point:單身AFTER DELETE 
            {<point name="input.body.after_delete"/>}
            #end add-point
 
         #---------------------<  Detail: page1  >---------------------
         #----<<crdastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdastus
            #add-point:BEFORE FIELD crdastus
            {<point name="input.b.page1.crdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdastus
            
            #add-point:AFTER FIELD crdastus
            {<point name="input.a.page1.crdastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crdastus
            #add-point:ON CHANGE crdastus
            {<point name="input.g.page1.crdastus" />}
            #END add-point
 
         #----<<crda000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda000
            #add-point:BEFORE FIELD crda000
            {<point name="input.b.page1.crda000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda000
            
            #add-point:AFTER FIELD crda000
            {<point name="input.a.page1.crda000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crda000
            #add-point:ON CHANGE crda000
            {<point name="input.g.page1.crda000" />}
            #END add-point
 
         #----<<crda001>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda001
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda001,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda001
            END IF
 
 
            #add-point:AFTER FIELD crda001
            {<point name="input.a.page1.crda001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda001
            #add-point:BEFORE FIELD crda001
            {<point name="input.b.page1.crda001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda001
            #add-point:ON CHANGE crda001
            {<point name="input.g.page1.crda001" />}
            #END add-point
 
         #----<<crda002>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda002,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda002
            END IF
 
 
            #add-point:AFTER FIELD crda002
            {<point name="input.a.page1.crda002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda002
            #add-point:BEFORE FIELD crda002
            {<point name="input.b.page1.crda002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda002
            #add-point:ON CHANGE crda002
            {<point name="input.g.page1.crda002" />}
            #END add-point
 
         #----<<crda003>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda003,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda003
            END IF
 
 
            #add-point:AFTER FIELD crda003
            {<point name="input.a.page1.crda003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda003
            #add-point:BEFORE FIELD crda003
            {<point name="input.b.page1.crda003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda003
            #add-point:ON CHANGE crda003
            {<point name="input.g.page1.crda003" />}
            #END add-point
 
         #----<<crda004>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda004,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda004
            END IF
 
 
            #add-point:AFTER FIELD crda004
            {<point name="input.a.page1.crda004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda004
            #add-point:BEFORE FIELD crda004
            {<point name="input.b.page1.crda004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda004
            #add-point:ON CHANGE crda004
            {<point name="input.g.page1.crda004" />}
            #END add-point
 
         #----<<crda005>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda005
            END IF
 
 
            #add-point:AFTER FIELD crda005
            {<point name="input.a.page1.crda005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda005
            #add-point:BEFORE FIELD crda005
            {<point name="input.b.page1.crda005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda005
            #add-point:ON CHANGE crda005
            {<point name="input.g.page1.crda005" />}
            #END add-point
 
         #----<<crda006>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda006
            END IF
 
 
            #add-point:AFTER FIELD crda006
            {<point name="input.a.page1.crda006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda006
            #add-point:BEFORE FIELD crda006
            {<point name="input.b.page1.crda006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda006
            #add-point:ON CHANGE crda006
            {<point name="input.g.page1.crda006" />}
            #END add-point
 
         #----<<crda010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda010
            #add-point:BEFORE FIELD crda010
            {<point name="input.b.page1.crda010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda010
            
            #add-point:AFTER FIELD crda010
            {<point name="input.a.page1.crda010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crda010
            #add-point:ON CHANGE crda010
            {<point name="input.g.page1.crda010" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<crdastus>>----
         #Ctrlp:input.c.page1.crdastus
         ON ACTION controlp INFIELD crdastus
            #add-point:ON ACTION controlp INFIELD crdastus
            {<point name="input.c.page1.crdastus" />}
            #END add-point
 
         #----<<crda000>>----
         #Ctrlp:input.c.page1.crda000
         ON ACTION controlp INFIELD crda000
            #add-point:ON ACTION controlp INFIELD crda000
            {<point name="input.c.page1.crda000" />}
            #END add-point
 
         #----<<crda001>>----
         #Ctrlp:input.c.page1.crda001
         ON ACTION controlp INFIELD crda001
            #add-point:ON ACTION controlp INFIELD crda001
            {<point name="input.c.page1.crda001" />}
            #END add-point
 
         #----<<crda002>>----
         #Ctrlp:input.c.page1.crda002
         ON ACTION controlp INFIELD crda002
            #add-point:ON ACTION controlp INFIELD crda002
            {<point name="input.c.page1.crda002" />}
            #END add-point
 
         #----<<crda003>>----
         #Ctrlp:input.c.page1.crda003
         ON ACTION controlp INFIELD crda003
            #add-point:ON ACTION controlp INFIELD crda003
            {<point name="input.c.page1.crda003" />}
            #END add-point
 
         #----<<crda004>>----
         #Ctrlp:input.c.page1.crda004
         ON ACTION controlp INFIELD crda004
            #add-point:ON ACTION controlp INFIELD crda004
            {<point name="input.c.page1.crda004" />}
            #END add-point
 
         #----<<crda005>>----
         #Ctrlp:input.c.page1.crda005
         ON ACTION controlp INFIELD crda005
            #add-point:ON ACTION controlp INFIELD crda005
            {<point name="input.c.page1.crda005" />}
            #END add-point
 
         #----<<crda006>>----
         #Ctrlp:input.c.page1.crda006
         ON ACTION controlp INFIELD crda006
            #add-point:ON ACTION controlp INFIELD crda006
            {<point name="input.c.page1.crda006" />}
            #END add-point
 
         #----<<crda010>>----
         #Ctrlp:input.c.page1.crda010
         ON ACTION controlp INFIELD crda010
            #add-point:ON ACTION controlp INFIELD crda010
            {<point name="input.c.page1.crda010" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_crda_d[l_ac].* = g_crda_d_t.*
               CLOSE acri004_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_crda_d[l_ac].crda000,-263,1)
               LET g_crda_d[l_ac].* = g_crda_d_t.*
            ELSE
               #寫入修改者/修改日期資訊
               LET g_crda2_d[l_ac].crdamodid = g_user 
LET g_crda2_d[l_ac].crdamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
         
               UPDATE crda_t SET (crdastus,crda000,crda001,crda002,crda003,crda004,crda005,crda006,crda010, 
                   crdaownid,crdaowndp,crdacrtid,crdacrtdp,crdacrtdt,crdamodid,crdamoddt) = (g_crda_d[l_ac].crdastus, 
                   g_crda_d[l_ac].crda000,g_crda_d[l_ac].crda001,g_crda_d[l_ac].crda002,g_crda_d[l_ac].crda003, 
                   g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005,g_crda_d[l_ac].crda006,g_crda_d[l_ac].crda010, 
                   g_crda2_d[l_ac].crdaownid,g_crda2_d[l_ac].crdaowndp,g_crda2_d[l_ac].crdacrtid,g_crda2_d[l_ac].crdacrtdp, 
                   g_crda2_d[l_ac].crdacrtdt,g_crda2_d[l_ac].crdamodid,g_crda2_d[l_ac].crdamoddt)
                WHERE crdaent = g_enterprise AND  =  
 
                 AND crda000 = g_crda_d_t.crda000 #項次   
 
                 
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("crda_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  #WHEN SQLCA.sqlcode #其他錯誤
                  #   CALL cl_err("crda_t",SQLCA.sqlcode,1)  
                  #   CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crda_d[g_detail_idx].crda000
               LET gs_keys_bak[1] = g_crda_d_t.crda000
               CALL acri004_update_b('crda_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
            END IF
 
         AFTER INPUT
            #若單身還沒有輸入資料, 強制切換至單身
            IF cl_null(g_crda_d[1].crda000) THEN
               CALL g_crda_d.deleteElement(1)
               NEXT FIELD crda000
            END IF
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point    
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_crda_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_crda_d.getLength()+1
            
      END INPUT
 
 
      
      DISPLAY ARRAY g_crda2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
      
         BEFORE ROW
            CALL acri004_b_fill(g_wc2) 
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL acri004_ui_detailshow()
        
         BEFORE DISPLAY 
            CALL FGL_SET_ARR_CURR(g_detail_idx)      
         
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
         
      END DISPLAY
 
      
 
      
      #add-point:input段more_input
      {<point name="input.more_inputarray"/>}
      #end add-point    
      
      BEFORE DIALOG
         #add-point:input段before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            NEXT FIELD 
        ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD crdastus
               WHEN "s_detail2"
                  NEXT FIELD crda000_2
 
            END CASE
         END IF
   
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         LET g_action_choice=""
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
   
   #add-point:input段after_input
   {<point name="input.after_input"/>}
   #end add-point  
   
END FUNCTION
]]>
</section>
  <section id="acri004.input.head" ver="1" status="" src="s">
<![CDATA[   
      #單頭段
      INPUT BY NAME g_crda_m.crda007,g_crda_m.crda008,g_crda_m.crda009 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂單頭ACTION
         
         
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #add-point:單頭input前
            {<point name="input.head.b_input"/>}
            #end add-point
          
         #---------------------------<  Master  >---------------------------
         #----<<crda007>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda007
            #add-point:BEFORE FIELD crda007
            {<point name="input.b.crda007" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda007
            
            #add-point:AFTER FIELD crda007
            {<point name="input.a.crda007" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crda007
            #add-point:ON CHANGE crda007
            {<point name="input.g.crda007" />}
            #END add-point
 
         #----<<crda008>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda008
            #add-point:BEFORE FIELD crda008
            {<point name="input.b.crda008" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda008
            
            #add-point:AFTER FIELD crda008
            {<point name="input.a.crda008" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crda008
            #add-point:ON CHANGE crda008
            {<point name="input.g.crda008" />}
            #END add-point
 
         #----<<crda009>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda009
            #add-point:BEFORE FIELD crda009
            {<point name="input.b.crda009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda009
            
            #add-point:AFTER FIELD crda009
            {<point name="input.a.crda009" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crda009
            #add-point:ON CHANGE crda009
            {<point name="input.g.crda009" />}
            #END add-point
 
 #欄位檢查
         #---------------------------<  Master  >---------------------------
         #----<<crda007>>----
         #Ctrlp:input.c.crda007
         ON ACTION controlp INFIELD crda007
            #add-point:ON ACTION controlp INFIELD crda007
            {<point name="input.c.crda007" />}
            #END add-point
 
         #----<<crda008>>----
         #Ctrlp:input.c.crda008
         ON ACTION controlp INFIELD crda008
            #add-point:ON ACTION controlp INFIELD crda008
            {<point name="input.c.crda008" />}
            #END add-point
 
         #----<<crda009>>----
         #Ctrlp:input.c.crda009
         ON ACTION controlp INFIELD crda009
            #add-point:ON ACTION controlp INFIELD crda009
            {<point name="input.c.crda009" />}
            #END add-point
 
 #欄位開窗
 
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
            
            IF s_transaction_chk("N",0) THEN
                CALL s_transaction_begin()
            END IF
 
            #多語言處理
            
                
            CALL cl_showmsg()
            DISPLAY BY NAME              
 
 
            IF p_cmd = 'u' THEN
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
            
               UPDATE crda_t SET (crda007,crda008,crda009) = (g_crda_m.crda007,g_crda_m.crda008,g_crda_m.crda009) 

                WHERE crdaent = g_enterprise AND  = g__t
 
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("crda_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                  WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("crda_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                     #資料多語言用-增/改
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crda_d[g_detail_idx].crda000
               LET gs_keys_bak[1] = g_crda_d_t.crda000
               CALL acri004_update_b('crda_t',gs_keys,gs_keys_bak,"'1'")
                     
                     LET g__t = 
 
                     #add-point:單頭修改後
                     {<point name="input.head.a_update"/>}
                     #end add-point
                     CALL s_transaction_end('Y','0')
               END CASE
            
            ELSE    
               #add-point:單頭新增
               {<point name="input.head.a_insert"/>}
               #end add-point
                                 
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL acri004_detail_reproduce()
               END IF
            END IF
           #controlp
                     
           LET g__t = 
 
           
           #若單身還沒有輸入資料, 強制切換至單身
           IF cl_null(g_crda_d[1].crda000) THEN
              CALL g_crda_d.deleteElement(1)
              NEXT FIELD crda000
           END IF
 
      END INPUT
]]>
</section>
  <section id="acri004.insert" ver="2" status="" src="s">
<![CDATA[#+ 資料新增
PRIVATE FUNCTION acri004_insert()
   DEFINE li_ac LIKE type_t.num5
   DEFINE l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak  DYNAMIC ARRAY OF STRING
   DEFINE l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE l_vars          DYNAMIC ARRAY OF STRING
   DEFINE l_fields        DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="insert.define"/>}
   #end add-point 
   
   #輸入前動作  
   LET li_ac = l_ac 
   LET l_ac = 1   
   LET g_before_input_done = FALSE                                        
   CALL acri004_set_entry_b("a")  
   
   CALL acri004_set_no_entry_b("a")                                          
   LET g_before_input_done = TRUE                                            
   
   #append欄位         
      
 
      
 
   
   #add-point:insert段before insert
   {<point name="insert.before_insert"/>}
   #end add-point  
 
   #資料輸入
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM) 
      INPUT g_crda_d[1].* FROM s_detail1[1].*
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         BEFORE INPUT
         
      END INPUT
      
 
      
      BEFORE DIALOG 
   
   END DIALOG
   
   #輸入後動作
   IF INT_FLAG THEN
      CALL cl_err("",9001,0)
      LET INT_FLAG = 1
      RETURN
   END IF
   
   CALL s_transaction_begin()                    
   
   #add-point:單身新增前
   {<point name="insert.b_insert"/>}
   #end add-point
   
   
   #add-point:單身新增後
   {<point name="insert.a_insert"/>}
   #end add-point
 
END FUNCTION
]]>
</section>
  <section id="acri004.insert_b" ver="2" status="" src="s">
<![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION acri004_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   #add-point:insert_b段define
   {<point name="insert_b.define"/>}
   #end add-point     
 
   #判斷是否是同一群組的table
   LET ls_group = "crda_t,"
   #IF ls_group.getIndexOf(ps_table,1) > 0 THEN
      
      #add-point:insert_b段新增前
      {<point name="insert_b.b_insert" mark="Y"/>}
      #end add-point    
      INSERT INTO crda_t
                  (crdaent,
                   crda000
                   ,crdastus,crda001,crda002,crda003,crda004,crda005,crda006,crda010,crdaownid,crdaowndp,crdacrtid,crdacrtdp,crdacrtdt,crdamodid,crdamoddt) 
            VALUES(g_enterprise,
                   ps_keys[1]
                   ,g_crda_d[l_ac].crdastus,g_crda_d[l_ac].crda001,g_crda_d[l_ac].crda002,g_crda_d[l_ac].crda003, 
                       g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005,g_crda_d[l_ac].crda006,g_crda_d[l_ac].crda010, 
                       g_crda2_d[l_ac].crdaownid,g_crda2_d[l_ac].crdaowndp,g_crda2_d[l_ac].crdacrtid, 
                       g_crda2_d[l_ac].crdacrtdp,g_crda2_d[l_ac].crdacrtdt,g_crda2_d[l_ac].crdamodid, 
                       g_crda2_d[l_ac].crdamoddt)
      #add-point:insert_b段新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         CALL cl_err("crda_t",SQLCA.sqlcode,0)
      END IF
      #add-point:insert_b段新增後
      {<point name="insert_b.a_insert"/>}
      #end add-point    
   #END IF
   
 
   
END FUNCTION
]]>
</section>
  <section id="acri004.link_b" ver="1" status="" src="s">
<![CDATA[#+ 連動單身idx
PRIVATE FUNCTION acri004_link_b(ps_table,pi_idx)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   DEFINE pi_idx   INTEGER
   #add-point:link_b段define
   {<point name="link_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   IF ls_group.getIndexOf(ps_table,1) THEN
 
   END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="acri004.lock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION acri004_lock_b(ps_table)
 
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:lock_b段define
   {<point name="lock_b.define"/>}
   #end add-point   
   
   #先刷新資料
   #CALL acri004_b_fill(g_wc2)
   
   #鎖定整組table
   #LET ls_group = ""
   #僅鎖定自身table
   LET ls_group = "crda_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN acri004_bcl USING g_enterprise,
                                       g_crda_d[g_detail_idx].crda000
                                       
      IF SQLCA.sqlcode THEN
         CALL cl_err("acri004_bcl",SQLCA.sqlcode,1)
         RETURN FALSE
      END IF
   
   END IF
                                    
 
   
   RETURN TRUE
 
END FUNCTION
]]>
</section>
  <section id="acri004.main" ver="3" status="" src="s">
<![CDATA[#+ 此段落由子樣板a26產生
#OPTIONS SHORT CIRCUIT
#+ 作業開始 
MAIN
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("acr","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
 
 
   #add-point:main段define_sql
   {<point name="main.body.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crdastus,crda000,crda001,crda002,crda003,crda004,crda005,crda006,crda010, 
       '',crdaownid,'',crdaowndp,'',crdacrtid,'',crdacrtdp,'',crdacrtdt,crdamodid,'',crdamoddt FROM  
       crda_t WHERE crdaent=? AND crda000=? FOR UPDATE"
   #add-point:main段define_sql
   {<point name="main.body.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   DECLARE acri004_bcl CURSOR FROM g_forupd_sql
 
 
 
   IF g_bgjob = "Y" THEN
 
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
 
   ELSE
      
      #畫面開啟 (identifier)
      OPEN WINDOW w_acri004 WITH FORM cl_ap_formpath("acr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL acri004_init()   
 
      #進入選單 Menu (="N")
      CALL acri004_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_acri004
      
   END IF 
   
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
   
END MAIN
 
 
]]>
</section>
  <section id="acri004.modify" ver="4" status="" src="s">
<![CDATA[#+ 資料修改
PRIVATE FUNCTION acri004_modify()
   DEFINE  l_cmd                  LIKE type_t.chr1
   DEFINE  l_ac_t                 LIKE type_t.num5                #未取消的ARRAY CNT 
   DEFINE  l_n                    LIKE type_t.num5                #檢查重複用  
   DEFINE  l_cnt                  LIKE type_t.num5                #檢查重複用  
   DEFINE  l_lock_sw              LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert         LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete         LIKE type_t.num5                #可刪除否  
   DEFINE  l_count                LIKE type_t.num5
   DEFINE  l_i                    LIKE type_t.num5
   DEFINE  ls_return              STRING
   DEFINE  l_var_keys             DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys           DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                 DYNAMIC ARRAY OF STRING
   DEFINE  l_fields               DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak         DYNAMIC ARRAY OF STRING
   DEFINE  li_reproduce           LIKE type_t.num5
   DEFINE  li_reproduce_target    LIKE type_t.num5
   DEFINE  lb_reproduce           BOOLEAN
   #add-point:modify段define
   {<point name="modify.define"/>}
   #end add-point 
   
   LET g_action_choice = ""
   
   LET g_qryparam.state = "i"
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
 
   #add-point:modify段開始前
   {<point name="modify.define_sql" mark="Y"/>}
   #end add-point 
   
   LET INT_FLAG = FALSE
   LET lb_reproduce = FALSE
 
   #add-point:modify段修改前
   {<point name="modify.before_input"/>}
   #end add-point
 
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #Page1 預設值產生於此處
      INPUT ARRAY g_crda_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_detail_cnt,MAXCOUNT = g_max_rec,WITHOUT DEFAULTS, 
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crda_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL acri004_b_fill(g_wc2)
            LET g_detail_cnt = g_crda_d.getLength()
         
         BEFORE ROW
            #add-point:modify段before row
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
            LET l_cmd = ''
            LET l_ac = g_detail_idx 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
            DISPLAY g_crda_d.getLength() TO FORMONLY.cnt
         
            CALL s_transaction_begin()
            LET g_detail_cnt = g_crda_d.getLength()
            
            IF g_detail_cnt >= l_ac 
               AND g_crda_d[l_ac].crda000 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_crda_d_t.* = g_crda_d[l_ac].*  #BACKUP
               IF NOT acri004_lock_b("crda_t") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acri004_bcl INTO g_crda_d[l_ac].crdastus,g_crda_d[l_ac].crda000,g_crda_d[l_ac].crda001, 
                      g_crda_d[l_ac].crda002,g_crda_d[l_ac].crda003,g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005, 
                      g_crda_d[l_ac].crda006,g_crda_d[l_ac].crda010,g_crda2_d[l_ac].crda000,g_crda2_d[l_ac].crdaownid, 
                      g_crda2_d[l_ac].crdaownid_desc,g_crda2_d[l_ac].crdaowndp,g_crda2_d[l_ac].crdaowndp_desc, 
                      g_crda2_d[l_ac].crdacrtid,g_crda2_d[l_ac].crdacrtid_desc,g_crda2_d[l_ac].crdacrtdp, 
                      g_crda2_d[l_ac].crdacrtdp_desc,g_crda2_d[l_ac].crdacrtdt,g_crda2_d[l_ac].crdamodid, 
                      g_crda2_d[l_ac].crdamodid_desc,g_crda2_d[l_ac].crdamoddt
                  IF SQLCA.sqlcode THEN
                     CALL cl_err(g_crda_d_t.crda000,SQLCA.sqlcode,1)
                     LET l_lock_sw = "Y"
                  END IF
                  
                  CALL acri004_detail_show()
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            CALL s_transaction_begin()
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crda_d_t.* TO NULL
            INITIALIZE g_crda_d[l_ac].* TO NULL 
            #公用欄位給值(單身)
            #此段落由子樣板a14產生    
      LET g_crda2_d[l_ac].crdaownid = g_user
      LET g_crda2_d[l_ac].crdaowndp = g_dept
      LET g_crda2_d[l_ac].crdacrtid = g_user
      LET g_crda2_d[l_ac].crdacrtdp = g_dept 
      LET g_crda2_d[l_ac].crdacrtdt = cl_get_current()
      LET g_crda2_d[l_ac].crdamodid = ""
      LET g_crda2_d[l_ac].crdamoddt = ""
      LET g_crda_d[l_ac].crdastus = ""
 
 
                  LET g_crda_d[l_ac].crdastus = "Y"
 
 
            LET g_crda_d_t.* = g_crda_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acri004_set_entry_b("a")
            CALL acri004_set_no_entry_b("a")
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crda_d[li_reproduce_target].* = g_crda_d[li_reproduce].*
               LET g_crda2_d[li_reproduce_target].* = g_crda2_d[li_reproduce].*
 
               LET g_crda_d[g_crda_d.getLength()].crda000 = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM crda_t 
             WHERE crdaent = g_enterprise AND crda000 = g_crda_d[l_ac].crda000
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crda_d[g_detail_idx].crda000
               CALL acri004_insert_b('crda_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               CALL cl_err('INSERT',"std-00006",1)
               INITIALIZE g_crda_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               CALL cl_err("crda_t",SQLCA.sqlcode,1)  
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL acri004_b_fill(g_wc2)
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               ERROR 'INSERT O.K'
               LET g_detail_cnt = g_detail_cnt + 1
               
               LET g_wc2 = g_wc2, " OR (crda000 = '", g_crda_d[l_ac].crda000, "' "
 
                                  ,")"
            END IF                
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' AND g_crda_d.getLength() < l_ac THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
               CALL g_crda_d.deleteElement(l_ac)
               NEXT FIELD crda000
            END IF
            IF g_crda_d[l_ac].crda000 IS NOT NULL
 
               THEN     
            
               #add-point:單身刪除ask前
               {<point name="input.body.b_delete_ask"/>}
               #end add-point   
               
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  CALL cl_err("", -263, 1)
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point   
               
               DELETE FROM crda_t
                WHERE crdaent = g_enterprise AND 
                      crda000 = g_crda_d_t.crda000
 
                      
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point  
                      
               IF SQLCA.sqlcode THEN
                  CALL cl_err("crda_t",SQLCA.sqlcode,1)
                  CALL s_transaction_end('N','0')
                  CANCEL DELETE   
               ELSE
                  LET g_detail_cnt = g_detail_cnt-1
                  
                  #add-point:單身刪除後
                  {<point name="input.body.a_delete"/>}
                  #end add-point
                  CALL s_transaction_end('Y','0')
               END IF 
               CLOSE acri004_bcl
               LET l_count = g_crda_d.getLength()
            END IF 
                           INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crda_d[g_detail_idx].crda000
 
              
         AFTER DELETE 
            #add-point:單身刪除後2
            {<point name="input.body.after_delete"/>}
            #end add-point
                           CALL acri004_delete_b('crda_t',gs_keys,"'1'")
 
         #---------------------<  Detail: page1  >---------------------
         #----<<crdastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdastus
            #add-point:BEFORE FIELD crdastus
            {<point name="input.b.page1.crdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdastus
            
            #add-point:AFTER FIELD crdastus
            {<point name="input.a.page1.crdastus" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crdastus
            #add-point:ON CHANGE crdastus
            {<point name="input.g.page1.crdastus" />}
            #END add-point
 
         #----<<crda000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda000
            #add-point:BEFORE FIELD crda000
            {<point name="input.b.page1.crda000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda000
            
            #add-point:AFTER FIELD crda000
            {<point name="input.a.page1.crda000" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crda000
            #add-point:ON CHANGE crda000
            {<point name="input.g.page1.crda000" />}
            #END add-point
 
         #----<<crda001>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda001
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda001,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda001
            END IF
 
 
            #add-point:AFTER FIELD crda001
            {<point name="input.a.page1.crda001" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda001
            #add-point:BEFORE FIELD crda001
            {<point name="input.b.page1.crda001" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda001
            #add-point:ON CHANGE crda001
            {<point name="input.g.page1.crda001" />}
            #END add-point
 
         #----<<crda002>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda002
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda002,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda002
            END IF
 
 
            #add-point:AFTER FIELD crda002
            {<point name="input.a.page1.crda002" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda002
            #add-point:BEFORE FIELD crda002
            {<point name="input.b.page1.crda002" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda002
            #add-point:ON CHANGE crda002
            {<point name="input.g.page1.crda002" />}
            #END add-point
 
         #----<<crda003>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda003
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda003,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda003
            END IF
 
 
            #add-point:AFTER FIELD crda003
            {<point name="input.a.page1.crda003" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda003
            #add-point:BEFORE FIELD crda003
            {<point name="input.b.page1.crda003" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda003
            #add-point:ON CHANGE crda003
            {<point name="input.g.page1.crda003" />}
            #END add-point
 
         #----<<crda004>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda004
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda004,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda004
            END IF
 
 
            #add-point:AFTER FIELD crda004
            {<point name="input.a.page1.crda004" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda004
            #add-point:BEFORE FIELD crda004
            {<point name="input.b.page1.crda004" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda004
            #add-point:ON CHANGE crda004
            {<point name="input.g.page1.crda004" />}
            #END add-point
 
         #----<<crda005>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda005
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda005,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda005
            END IF
 
 
            #add-point:AFTER FIELD crda005
            {<point name="input.a.page1.crda005" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda005
            #add-point:BEFORE FIELD crda005
            {<point name="input.b.page1.crda005" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda005
            #add-point:ON CHANGE crda005
            {<point name="input.g.page1.crda005" />}
            #END add-point
 
         #----<<crda006>>----
         #此段落由子樣板a02產生
         AFTER FIELD crda006
            #此段落由子樣板a15產生
            IF NOT cl_ap_chk_Range(g_crda_d[l_ac].crda006,"0","1","","","azz-00079",1) THEN
               NEXT FIELD crda006
            END IF
 
 
            #add-point:AFTER FIELD crda006
            {<point name="input.a.page1.crda006" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD crda006
            #add-point:BEFORE FIELD crda006
            {<point name="input.b.page1.crda006" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE crda006
            #add-point:ON CHANGE crda006
            {<point name="input.g.page1.crda006" />}
            #END add-point
 
         #----<<crda010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda010
            #add-point:BEFORE FIELD crda010
            {<point name="input.b.page1.crda010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda010
            
            #add-point:AFTER FIELD crda010
            {<point name="input.a.page1.crda010" />}
            #END add-point
            
 
         #此段落由子樣板a04產生
         ON CHANGE crda010
            #add-point:ON CHANGE crda010
            {<point name="input.g.page1.crda010" />}
            #END add-point
 
 
         #---------------------<  Detail: page1  >---------------------
         #----<<crdastus>>----
         #Ctrlp:input.c.page1.crdastus
         ON ACTION controlp INFIELD crdastus
            #add-point:ON ACTION controlp INFIELD crdastus
            {<point name="input.c.page1.crdastus" />}
            #END add-point
 
         #----<<crda000>>----
         #Ctrlp:input.c.page1.crda000
         ON ACTION controlp INFIELD crda000
            #add-point:ON ACTION controlp INFIELD crda000
            {<point name="input.c.page1.crda000" />}
            #END add-point
 
         #----<<crda001>>----
         #Ctrlp:input.c.page1.crda001
         ON ACTION controlp INFIELD crda001
            #add-point:ON ACTION controlp INFIELD crda001
            {<point name="input.c.page1.crda001" />}
            #END add-point
 
         #----<<crda002>>----
         #Ctrlp:input.c.page1.crda002
         ON ACTION controlp INFIELD crda002
            #add-point:ON ACTION controlp INFIELD crda002
            {<point name="input.c.page1.crda002" />}
            #END add-point
 
         #----<<crda003>>----
         #Ctrlp:input.c.page1.crda003
         ON ACTION controlp INFIELD crda003
            #add-point:ON ACTION controlp INFIELD crda003
            {<point name="input.c.page1.crda003" />}
            #END add-point
 
         #----<<crda004>>----
         #Ctrlp:input.c.page1.crda004
         ON ACTION controlp INFIELD crda004
            #add-point:ON ACTION controlp INFIELD crda004
            {<point name="input.c.page1.crda004" />}
            #END add-point
 
         #----<<crda005>>----
         #Ctrlp:input.c.page1.crda005
         ON ACTION controlp INFIELD crda005
            #add-point:ON ACTION controlp INFIELD crda005
            {<point name="input.c.page1.crda005" />}
            #END add-point
 
         #----<<crda006>>----
         #Ctrlp:input.c.page1.crda006
         ON ACTION controlp INFIELD crda006
            #add-point:ON ACTION controlp INFIELD crda006
            {<point name="input.c.page1.crda006" />}
            #END add-point
 
         #----<<crda010>>----
         #Ctrlp:input.c.page1.crda010
         ON ACTION controlp INFIELD crda010
            #add-point:ON ACTION controlp INFIELD crda010
            {<point name="input.c.page1.crda010" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               CALL cl_err('',9001,0)
               LET INT_FLAG = 0
               LET g_crda_d[l_ac].* = g_crda_d_t.*
               CLOSE acri004_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               CALL cl_err(g_crda_d[l_ac].crda000,-263,1)
               LET g_crda_d[l_ac].* = g_crda_d_t.*
            ELSE
               
               #寫入修改者/修改日期資訊(單身)
               LET g_crda2_d[l_ac].crdamodid = g_user 
LET g_crda2_d[l_ac].crdamoddt = cl_get_current()
 
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               UPDATE crda_t SET (crdastus,crda000,crda001,crda002,crda003,crda004,crda005,crda006,crda010, 
                   crdaownid,crdaowndp,crdacrtid,crdacrtdp,crdacrtdt,crdamodid,crdamoddt) = (g_crda_d[l_ac].crdastus, 
                   g_crda_d[l_ac].crda000,g_crda_d[l_ac].crda001,g_crda_d[l_ac].crda002,g_crda_d[l_ac].crda003, 
                   g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005,g_crda_d[l_ac].crda006,g_crda_d[l_ac].crda010, 
                   g_crda2_d[l_ac].crdaownid,g_crda2_d[l_ac].crdaowndp,g_crda2_d[l_ac].crdacrtid,g_crda2_d[l_ac].crdacrtdp, 
                   g_crda2_d[l_ac].crdacrtdt,g_crda2_d[l_ac].crdamodid,g_crda2_d[l_ac].crdamoddt)
                WHERE crdaent = g_enterprise AND
                  crda000 = g_crda_d_t.crda000 #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     CALL cl_err("crda_t","std-00009",1)
                     CALL s_transaction_end('N','0')
                    WHEN SQLCA.sqlcode #其他錯誤
                     CALL cl_err("crda_t",SQLCA.sqlcode,1)  
                     CALL s_transaction_end('N','0')
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crda_d[g_detail_idx].crda000
               LET gs_keys_bak[1] = g_crda_d_t.crda000
               CALL acri004_update_b('crda_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            CALL acri004_unlock_b("crda_t")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            
             #add-point:單身after row
            {<point name="input.body.a_row"/>}
            #end add-point
            
         AFTER INPUT
            #add-point:單身input後
            {<point name="input.body.a_input"/>}
            #end add-point
            
         ON ACTION controlo   
            CALL FGL_SET_ARR_CURR(g_crda_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_crda_d.getLength()+1
            
      END INPUT
      
 
      
      DISPLAY ARRAY g_crda2_d TO s_detail2.*
         ATTRIBUTES(COUNT=g_detail_cnt)  
      
         BEFORE DISPLAY 
            CALL acri004_b_fill(g_wc2)
            CALL FGL_SET_ARR_CURR(g_detail_idx)
      
         BEFORE ROW
            LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
            LET l_ac = g_detail_idx
            LET g_temp_idx = l_ac
            DISPLAY g_detail_idx TO FORMONLY.idx
            CALL cl_show_fld_cont() 
            
         #add-point:page2自定義行為
         {<point name="input.body2.action"/>}
         #end add-point
            
      END DISPLAY
 
      
      #add-point:before_more_input
      {<point name="input.more_input"/>}
      #end add-point
      
      BEFORE DIALOG 
         IF g_temp_idx > 0 THEN
            LET l_ac = g_temp_idx
            CALL DIALOG.setCurrentRow("s_detail1",l_ac)
            LET g_temp_idx = 1
         END IF
         LET g_curr_diag = ui.DIALOG.getCurrent()
         #add-point:before_dialog
         {<point name="input.before_dialog"/>}
         #end add-point
         CASE g_aw
            WHEN "s_detail1"
               NEXT FIELD crdastus
            WHEN "s_detail2"
               NEXT FIELD crda000_2
 
         END CASE
   
      ON ACTION accept
         ACCEPT DIALOG
      
      ON ACTION cancel
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) 
              RETURNING g_fld_name,g_frm_name 
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang) 
           
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG
   
   END DIALOG 
   
   #add-point:modify段修改後
   {<point name="modify.after_input"/>}
   #end add-point
 
   CLOSE acri004_bcl
   CALL s_transaction_end('Y','0')
   
END FUNCTION
]]>
</section>
  <section id="acri004.modify_detail_chk" ver="1" status="" src="s">
<![CDATA[#+ 單身輸入判定
PRIVATE FUNCTION acri004_modify_detail_chk(ps_record)
   DEFINE ps_record STRING
   DEFINE ls_return STRING
   #add-point:modify_detail_chk段define
   {<point name="modify_detail_chk.define"/>}
   #end add-point
   
   #add-point:modify_detail_chk段開始前
   {<point name="modify_detail_chk.before"/>}
   #end add-point
   
   CASE ps_record
      WHEN "s_detail1" 
         LET ls_return = "crdastus"
      WHEN "s_detail2"
         LET ls_return = "crda000_2"
 
      #add-point:modify_detail_chk段自訂page控制
      {<point name="modify_detail_chk.page_control"/>}
      #end add-point
   END CASE
    
   #add-point:modify_detail_chk段結束前
   {<point name="modify_detail_chk.after"/>}
   #end add-point
   
   RETURN ls_return
   
END FUNCTION
]]>
</section>
  <section id="acri004.other_dialog" ver="1" status="" src="s">
<![CDATA[ 
]]>
</section>
  <section id="acri004.other_function" ver="1" status="" src="s">
<![CDATA[{<point name="other.function"/>}
]]>
</section>
  <section id="acri004.query" ver="2" status="" src="s">
<![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION acri004_query()
   DEFINE ls_wc      LIKE type_t.chr500
   DEFINE ls_return  STRING
   DEFINE ls_result  STRING 
   #add-point:query段define
   {<point name="query.define"/>}
   #end add-point 
   
   LET INT_FLAG = 0
   CLEAR FORM
   CALL g_crda_d.clear()
   
   LET g_qryparam.state = "c"
   
   #wc備份
   LET ls_wc = g_wc2
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      CONSTRUCT g_wc2 ON crdastus,crda000,crda001,crda002,crda003,crda004,crda005,crda006,crda010,crdaownid, 
          crdaowndp,crdacrtid,crdacrtdp,crdacrtdt,crdamodid,crdamoddt 
 
         FROM s_detail1[1].crdastus,s_detail1[1].crda000,s_detail1[1].crda001,s_detail1[1].crda002,s_detail1[1].crda003, 
             s_detail1[1].crda004,s_detail1[1].crda005,s_detail1[1].crda006,s_detail1[1].crda010,s_detail2[1].crdaownid, 
             s_detail2[1].crdaowndp,s_detail2[1].crdacrtid,s_detail2[1].crdacrtdp,s_detail2[1].crdacrtdt, 
             s_detail2[1].crdamodid,s_detail2[1].crdamoddt 
      
         #此段落由子樣板a11產生
         ##----<<crdaownid>>----
         #ON ACTION controlp INFIELD crdaownid
         #   CALL q_common('','crdaownid',TRUE,FALSE,g_crda2_d[1].crdaownid) RETURNING ls_return
         #   DISPLAY ls_return TO crdaownid
         #   NEXT FIELD crdaownid  
         #
         ##----<<crdaowndp>>----
         #ON ACTION controlp INFIELD crdaowndp
         #   CALL q_common('','crdaowndp',TRUE,FALSE,g_crda2_d[1].crdaowndp) RETURNING ls_return
         #   DISPLAY ls_return TO crdaowndp
         #   NEXT FIELD crdaowndp
         #
         ##----<<crdacrtid>>----
         #ON ACTION controlp INFIELD crdacrtid
         #   CALL q_common('','crdacrtid',TRUE,FALSE,g_crda2_d[1].crdacrtid) RETURNING ls_return
         #   DISPLAY ls_return TO crdacrtid
         #   NEXT FIELD crdacrtid
         #
         ##----<<crdacrtdp>>----
         #ON ACTION controlp INFIELD crdacrtdp
         #   CALL q_common('','crdacrtdp',TRUE,FALSE,g_crda2_d[1].crdacrtdp) RETURNING ls_return
         #   DISPLAY ls_return TO crdacrtdp
         #   NEXT FIELD crdacrtdp
         #
         ##----<<crdamodid>>----
         #ON ACTION controlp INFIELD crdamodid
         #   CALL q_common('','crdamodid',TRUE,FALSE,g_crda2_d[1].crdamodid) RETURNING ls_return
         #   DISPLAY ls_return TO crdamodid
         #   NEXT FIELD crdamodid
         #
         ##----<<crdacnfid>>----
         ##ON ACTION controlp INFIELD crdacnfid
         ##   CALL q_common('','crdacnfid',TRUE,FALSE,.crdacnfid) RETURNING ls_return
         ##   DISPLAY ls_return TO crdacnfid
         ##   NEXT FIELD crdacnfid
         #
         ##----<<crdapstid>>----
         ##ON ACTION controlp INFIELD crdapstid
         ##   CALL q_common('','crdapstid',TRUE,FALSE,.crdapstid) RETURNING ls_return
         ##   DISPLAY ls_return TO crdapstid
         ##   NEXT FIELD crdapstid
         
         ##----<<crdacrtdt>>----
         AFTER FIELD crdacrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crdamoddt>>----
         AFTER FIELD crdamoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crdacnfdt>>----
         #AFTER FIELD crdacnfdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crdapstdt>>----
         #AFTER FIELD crdapstdt
         #   CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
         #   IF NOT cl_null(ls_result) THEN
         #      IF NOT cl_chk_date_symbol(ls_result) THEN
         #         LET ls_result = cl_add_date_extra_cond(ls_result)
         #      END IF
         #   END IF
         #   CALL FGL_DIALOG_SETBUFFER(ls_result)
 
 
      
         #---------------------<  Detail: page1  >---------------------
         #----<<crdastus>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdastus
            #add-point:BEFORE FIELD crdastus
            {<point name="query.b.page1.crdastus" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdastus
            
            #add-point:AFTER FIELD crdastus
            {<point name="query.a.page1.crdastus" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crdastus
         ON ACTION controlp INFIELD crdastus
            #add-point:ON ACTION controlp INFIELD crdastus
            {<point name="query.c.page1.crdastus" />}
            #END add-point
 
         #----<<crda000>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda000
            #add-point:BEFORE FIELD crda000
            {<point name="query.b.page1.crda000" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda000
            
            #add-point:AFTER FIELD crda000
            {<point name="query.a.page1.crda000" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda000
         ON ACTION controlp INFIELD crda000
            #add-point:ON ACTION controlp INFIELD crda000
            {<point name="query.c.page1.crda000" />}
            #END add-point
 
         #----<<crda001>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda001
            #add-point:BEFORE FIELD crda001
            {<point name="query.b.page1.crda001" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda001
            
            #add-point:AFTER FIELD crda001
            {<point name="query.a.page1.crda001" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda001
         ON ACTION controlp INFIELD crda001
            #add-point:ON ACTION controlp INFIELD crda001
            {<point name="query.c.page1.crda001" />}
            #END add-point
 
         #----<<crda002>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda002
            #add-point:BEFORE FIELD crda002
            {<point name="query.b.page1.crda002" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda002
            
            #add-point:AFTER FIELD crda002
            {<point name="query.a.page1.crda002" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda002
         ON ACTION controlp INFIELD crda002
            #add-point:ON ACTION controlp INFIELD crda002
            {<point name="query.c.page1.crda002" />}
            #END add-point
 
         #----<<crda003>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda003
            #add-point:BEFORE FIELD crda003
            {<point name="query.b.page1.crda003" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda003
            
            #add-point:AFTER FIELD crda003
            {<point name="query.a.page1.crda003" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda003
         ON ACTION controlp INFIELD crda003
            #add-point:ON ACTION controlp INFIELD crda003
            {<point name="query.c.page1.crda003" />}
            #END add-point
 
         #----<<crda004>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda004
            #add-point:BEFORE FIELD crda004
            {<point name="query.b.page1.crda004" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda004
            
            #add-point:AFTER FIELD crda004
            {<point name="query.a.page1.crda004" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda004
         ON ACTION controlp INFIELD crda004
            #add-point:ON ACTION controlp INFIELD crda004
            {<point name="query.c.page1.crda004" />}
            #END add-point
 
         #----<<crda005>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda005
            #add-point:BEFORE FIELD crda005
            {<point name="query.b.page1.crda005" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda005
            
            #add-point:AFTER FIELD crda005
            {<point name="query.a.page1.crda005" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda005
         ON ACTION controlp INFIELD crda005
            #add-point:ON ACTION controlp INFIELD crda005
            {<point name="query.c.page1.crda005" />}
            #END add-point
 
         #----<<crda006>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda006
            #add-point:BEFORE FIELD crda006
            {<point name="query.b.page1.crda006" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda006
            
            #add-point:AFTER FIELD crda006
            {<point name="query.a.page1.crda006" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda006
         ON ACTION controlp INFIELD crda006
            #add-point:ON ACTION controlp INFIELD crda006
            {<point name="query.c.page1.crda006" />}
            #END add-point
 
         #----<<crda010>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crda010
            #add-point:BEFORE FIELD crda010
            {<point name="query.b.page1.crda010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crda010
            
            #add-point:AFTER FIELD crda010
            {<point name="query.a.page1.crda010" />}
            #END add-point
            
 
         #Ctrlp:query.c.page1.crda010
         ON ACTION controlp INFIELD crda010
            #add-point:ON ACTION controlp INFIELD crda010
            {<point name="query.c.page1.crda010" />}
            #END add-point
 
  
         
         #---------------------<  Detail: page2  >---------------------
         #----<<crdaownid>>----
         #Ctrlp:construct.c.page2.crdaownid
         ON ACTION controlp INFIELD crdaownid
            #add-point:ON ACTION controlp INFIELD crdaownid
            {<point name="construct.c.page2.crdaownid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdaownid
            #add-point:BEFORE FIELD crdaownid
            {<point name="query.b.page2.crdaownid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdaownid
            
            #add-point:AFTER FIELD crdaownid
            {<point name="query.a.page2.crdaownid" />}
            #END add-point
            
 
         #----<<crdaownid_desc>>----
         #----<<crdaowndp>>----
         #Ctrlp:construct.c.page2.crdaowndp
         ON ACTION controlp INFIELD crdaowndp
            #add-point:ON ACTION controlp INFIELD crdaowndp
            {<point name="construct.c.page2.crdaowndp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdaowndp
            #add-point:BEFORE FIELD crdaowndp
            {<point name="query.b.page2.crdaowndp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdaowndp
            
            #add-point:AFTER FIELD crdaowndp
            {<point name="query.a.page2.crdaowndp" />}
            #END add-point
            
 
         #----<<crdaowndp_desc>>----
         #----<<crdacrtid>>----
         #Ctrlp:construct.c.page2.crdacrtid
         ON ACTION controlp INFIELD crdacrtid
            #add-point:ON ACTION controlp INFIELD crdacrtid
            {<point name="construct.c.page2.crdacrtid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdacrtid
            #add-point:BEFORE FIELD crdacrtid
            {<point name="query.b.page2.crdacrtid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdacrtid
            
            #add-point:AFTER FIELD crdacrtid
            {<point name="query.a.page2.crdacrtid" />}
            #END add-point
            
 
         #----<<crdacrtid_desc>>----
         #----<<crdacrtdp>>----
         #Ctrlp:construct.c.page2.crdacrtdp
         ON ACTION controlp INFIELD crdacrtdp
            #add-point:ON ACTION controlp INFIELD crdacrtdp
            {<point name="construct.c.page2.crdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdacrtdp
            #add-point:BEFORE FIELD crdacrtdp
            {<point name="query.b.page2.crdacrtdp" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdacrtdp
            
            #add-point:AFTER FIELD crdacrtdp
            {<point name="query.a.page2.crdacrtdp" />}
            #END add-point
            
 
         #----<<crdacrtdp_desc>>----
         #----<<crdacrtdt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdacrtdt
            #add-point:BEFORE FIELD crdacrtdt
            {<point name="query.b.page2.crdacrtdt" />}
            #END add-point
 
         #----<<crdamodid>>----
         #Ctrlp:construct.c.page2.crdamodid
         ON ACTION controlp INFIELD crdamodid
            #add-point:ON ACTION controlp INFIELD crdamodid
            {<point name="construct.c.page2.crdamodid" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD crdamodid
            #add-point:BEFORE FIELD crdamodid
            {<point name="query.b.page2.crdamodid" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD crdamodid
            
            #add-point:AFTER FIELD crdamodid
            {<point name="query.a.page2.crdamodid" />}
            #END add-point
            
 
         #----<<crdamodid_desc>>----
         #----<<crdamoddt>>----
         #此段落由子樣板a01產生
         BEFORE FIELD crdamoddt
            #add-point:BEFORE FIELD crdamoddt
            {<point name="query.b.page2.crdamoddt" />}
            #END add-point
 
  
 
      
         BEFORE CONSTRUCT
            #add-point:cs段more_construct
            {<point name="cs.before_construct"/>}
            #end add-point 
      
      END CONSTRUCT
  
      #add-point:query段more_construct
      {<point name="query.more_construct"/>}
      #end add-point 
  
      BEFORE DIALOG 
         CALL cl_qbe_init()
         #add-point:query段before_dialog
         {<point name="query.before_dialog"/>}
         #end add-point 
      
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
      
      ON ACTION qbe_save
         CALL cl_qbe_save()
      
      ON ACTION accept
         ACCEPT DIALOG
         
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG
      
      #交談指令共用ACTION
      &include "common_action.4gl"
         CONTINUE DIALOG 
   END DIALOG
 
   #add-point:query段after_construct
   {<point name="query.after_construct"/>}
   #end add-point
 
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      #還原
      LET g_wc2 = ls_wc
   END IF
    
   LET g_error_show = 1
   CALL acri004_b_fill(g_wc2)
   
   IF g_detail_cnt = 0 AND NOT INT_FLAG THEN
      CALL cl_err("",-100,1)
   END IF
   
   LET INT_FLAG = FALSE
   
END FUNCTION
]]>
</section>
  <section id="acri004.ref_show" ver="1" status="" src="s">
<![CDATA[#+ 帶出reference資料
PRIVATE FUNCTION acri004_ref_show()
   DEFINE l_ac_t LIKE type_t.num10 #l_ac暫存用
   #add-point:ref_show段define
   {<point name="ref_show.define"/>}
   #end add-point
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:ref_show段m_reference
   {<point name="ref_show.head.reference"/>}
   #end add-point
 
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_crda_d.getLength()
      #add-point:ref_show段d_reference
      {<point name="ref_show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_crda2_d.getLength()
      #add-point:ref_show段d2_reference
      {<point name="ref_show.body2.reference"/>}
      #end add-point
   END FOR
 
   
   LET l_ac = l_ac_t
 
END FUNCTION
]]>
</section>
  <section id="acri004.reproduce" ver="1" status="" src="s">
<![CDATA[#+ 資料複製
PRIVATE FUNCTION acri004_reproduce()
   DEFINE l_newno     LIKE crda_t. 
   DEFINE l_oldno     LIKE crda_t. 
 
   DEFINE l_master    RECORD LIKE crda_t.*
   DEFINE l_detail    RECORD LIKE crda_t.*
 
   DEFINE l_cnt       LIKE type_t.num5
   #add-point:reproduce段define
   {<point name="reproduce.define"/>}
   #end add-point
 
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF     
 
   IF  IS NULL
 
      THEN
      CALL cl_err("","std-00003",0)
      RETURN
   END IF
   
   LET g__t = 
 
   
   LET  = ""
 
    
   CALL acri004_set_entry('a')
   CALL acri004_set_no_entry('a')
   
   CALL cl_set_head_visible("","YES")
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   CALL acri004_input("r")
   
   
   
   IF INT_FLAG THEN
      LET INT_FLAG = 0
      RETURN
   END IF
   
   LET g_state = "Y"
   
   LET g_wc = g_wc,  
              " OR (",
              "  = '", l_newno CLIPPED, "' "
 
              , ") "
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
END FUNCTION
]]>
</section>
  <section id="acri004.set_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION acri004_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define"/>}
   #end add-point       
 
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="acri004.set_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION acri004_set_entry_b(p_cmd)                                                  
   DEFINE p_cmd   LIKE type_t.chr1         
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define"/>}
   #end add-point     
   
   #add-point:set_entry_b段control
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point                                                                   
                                                                                
END FUNCTION                                                                    
]]>
</section>
  <section id="acri004.set_no_entry" ver="1" status="" src="s">
<![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION acri004_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define"/>}
   #end add-point     
 
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
</section>
  <section id="acri004.set_no_entry_b" ver="2" status="" src="s">
<![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION acri004_set_no_entry_b(p_cmd)                                               
   DEFINE p_cmd   LIKE type_t.chr1           
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define"/>}
   #end add-point  
 
   #add-point:set_no_entry_b段control
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point       
                                                                                
END FUNCTION  
]]>
</section>
  <section id="acri004.set_pk_array" ver="1" status="" src="s">
<![CDATA[   #+ 此段落由子樣板a51產生
#+ 給予pk_array內容
PRIVATE FUNCTION acri004_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = 
   LET g_pk_array[1].column = ''
 
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
</section>
  <section id="acri004.show" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION acri004_show()
   #add-point:show段define
   {<point name="show.define"/>}
   #end add-point
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   IF g_bfill = "Y" THEN
      CALL acri004_b_fill(g_wc2) #單身填充
      CALL acri004_b_fill2('0') #單身填充
   END IF
   
   
 
   #顯示followup圖示
   #+ 此段落由子樣板a48產生
   CALL acri004_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
 
 
 
   LET g_crda_m_t.* = g_crda_m.*      #保存單頭舊值
   
   DISPLAY BY NAME g_crda_m.crda007,g_crda_m.crda008,g_crda_m.crda009
   CALL acri004_b_fill(g_wc2_table1)                 #單身
   CALL acri004_b_fill2('0') #單身填充
 
   CALL acri004_ref_show()
 
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()  
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point   
   
END FUNCTION
]]>
</section>
  <section id="acri004.state_change" ver="2" status="" src="s">
<![CDATA[   
]]>
</section>
  <section id="acri004.ui_browser_refresh" ver="1" status="" src="s">
<![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION acri004_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define"/>}
   #end add-point    
   
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_ =  
 
         THEN  
         CALL g_browser.deleteElement(l_i)
         LET g_header_cnt = g_header_cnt - 1
      END IF
   END FOR
 
   LET g_browser_cnt = g_browser_cnt - 1
   IF g_current_row > g_browser_cnt THEN        #確定browse 筆數指在同一筆
      LET g_current_row = g_browser_cnt
   END IF
 
   DISPLAY g_browser_cnt TO FORMONLY.b_count    #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數的顯示
   
END FUNCTION
]]>
</section>
  <section id="acri004.ui_detailshow" ver="1" status="" src="s">
<![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION acri004_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point  
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
      #add-point:ui_detailshow段more
      {<point name="ui_detailshow.more"/>}
      #end add-point 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point 
   
END FUNCTION
]]>
</section>
  <section id="acri004.ui_dialog" ver="8" status="" src="s">
<![CDATA[#+ 功能選單 
PRIVATE FUNCTION acri004_ui_dialog()
   DEFINE li_idx   LIKE type_t.num5
   DEFINE la_param  RECORD
             prog   STRING,
             param  DYNAMIC ARRAY OF STRING
                    END RECORD
   DEFINE ls_js     STRING
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point 
 
   LET g_action_choice = " "  
   LET gwin_curr = ui.Window.getCurrent()
   LET gfrm_curr = gwin_curr.getForm()      
 
   CALL cl_set_act_visible("accept,cancel", FALSE)
   
   LET g_detail_idx = 1
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE
   
      CALL acri004_b_fill(g_wc2)
   
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         DISPLAY ARRAY g_crda_d TO s_detail1.* ATTRIBUTE(COUNT=g_detail_cnt) 
      
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body.before_display2"/>}
               #end add-point
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail1")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row"/>}
               #end add-point                        
      
            #自訂ACTION(detail_show,page_1)
            
               
         END DISPLAY
      
         DISPLAY ARRAY g_crda2_d TO s_detail2.*
            ATTRIBUTES(COUNT=g_detail_cnt)  
         
            BEFORE DISPLAY 
               #add-point:ui_dialog段before display 
               {<point name="ui_dialog.body2.before_display" mark="Y"/>}
               #end add-point
               CALL FGL_SET_ARR_CURR(g_detail_idx)
               #add-point:ui_dialog段before display2
               {<point name="ui_dialog.body2.before_display2"/>}
               #end add-point
 
            BEFORE ROW
               LET g_detail_idx = DIALOG.getCurrentRow("s_detail2")
               LET l_ac = g_detail_idx
               LET g_temp_idx = l_ac
               DISPLAY g_detail_idx TO FORMONLY.idx
               CALL cl_show_fld_cont() 
               #add-point:display array-before row
               {<point name="ui_dialog.before_row2"/>}
               #end add-point
            #自訂ACTION(detail_show,page_2)
            
               
         END DISPLAY
 
      
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         BEFORE DIALOG
            IF g_temp_idx > 0 THEN
               LET l_ac = g_temp_idx
               CALL DIALOG.setCurrentRow("s_detail1",l_ac)
               LET g_temp_idx = 1
            END IF
            LET g_curr_diag = ui.DIALOG.getCurrent()         
            CALL DIALOG.setSelectionMode("s_detail1", 1)
            #add-point:ui_dialog段before
            {<point name="ui_dialog.b_dialog"/>}
            #end add-point
            NEXT FIELD CURRENT
      
         
         #+ 此段落由子樣板a43產生
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL acri004_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL acri004_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               EXIT DIALOG
            END IF
 
 
         #+ 此段落由子樣板a43產生
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL acri004_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               
            END IF
 
 
      
         ON ACTION close
            LET INT_FLAG=FALSE         
            LET g_action_choice="exit"
            EXIT DIALOG
      
         ON ACTION exit
            LET g_action_choice="exit"
            EXIT DIALOG
            
         
         
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
      
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         EXIT WHILE
      END IF
      
   END WHILE
 
   CALL cl_set_act_visible("accept,cancel", TRUE)
 
END FUNCTION
]]>
</section>
  <section id="acri004.ui_headershow" ver="1" status="" src="s">
<![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION acri004_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define"/>}
   #end add-point    
   
   LET  = g_browser[g_current_idx].b_   
 
   EXECUTE acri004_master_referesh USING  INTO g_crda_m.crda007,g_crda_m.crda008,g_crda_m.crda009
   CALL acri004_show()
   
END FUNCTION
]]>
</section>
  <section id="acri004.unlock_b" ver="2" status="" src="s">
<![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION acri004_unlock_b(ps_table)
   DEFINE ps_table STRING
   DEFINE ls_group STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define"/>}
   #end add-point  
   
   LET ls_group = ""
   
   #IF ls_group.getIndexOf(ps_table,1) THEN
      CLOSE acri004_bcl
   #END IF
   
 
 
END FUNCTION
]]>
</section>
  <section id="acri004.update_b" ver="2" status="" src="s">
<![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION acri004_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_page          STRING
   DEFINE ps_table         STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num5 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define"/>}
   #end add-point     
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
    
   #判斷是否是同一群組的table
   LET ls_group = "crda_t,"
   IF ls_group.getIndexOf(ps_table,1) > 0 AND ps_table <> "crda_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.b_update" mark="Y"/>}
      #end add-point     
      UPDATE crda_t 
         SET (crda000
              ,crdastus,crda001,crda002,crda003,crda004,crda005,crda006,crda010,crdaownid,crdaowndp,crdacrtid,crdacrtdp,crdacrtdt,crdamodid,crdamoddt) 
              = 
             (ps_keys[1]
              ,g_crda_d[l_ac].crdastus,g_crda_d[l_ac].crda001,g_crda_d[l_ac].crda002,g_crda_d[l_ac].crda003, 
                  g_crda_d[l_ac].crda004,g_crda_d[l_ac].crda005,g_crda_d[l_ac].crda006,g_crda_d[l_ac].crda010, 
                  g_crda2_d[l_ac].crdaownid,g_crda2_d[l_ac].crdaowndp,g_crda2_d[l_ac].crdacrtid,g_crda2_d[l_ac].crdacrtdp, 
                  g_crda2_d[l_ac].crdacrtdt,g_crda2_d[l_ac].crdamodid,g_crda2_d[l_ac].crdamoddt) 
         WHERE crda000 = ps_keys_bak[1]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point 
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            CALL cl_err("crda_t","std-00009",1)
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            CALL cl_err("crda_t",SQLCA.sqlcode,1)  
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      #add-point:update_b段修改後
      {<point name="update_b.a_update"/>}
      #end add-point 
      RETURN
   END IF
   
 
   
END FUNCTION
]]>
</section>
</add_points>