{<section id="acrt420.description" >}
#應用 a00 樣板自動產生(Version:3)
#+ Standard Version.....: SD版次:0012(2015-03-09 10:15:13), PR版次:
#+ Customerized Version.: SD版次:0000(1900-01-01 00:00:00), PR版次:
#+ Build......: 000226
#+ Filename...: acrt420
#+ Description: 客戶回訪記錄維護作業
#+ Creator....: 02296(2014-04-25 14:03:02)
#+ Modifier...: 06137 -SD/PR-
{</section>}
 
 
 
{<section id="acrt420.global" >}
#應用 t01 樣板自動產生(Version:79)
#add-point:填寫註解說明 name="global.memo" 
{<point name="global.memo" edit="s"/>}
#end add-point
#add-point:填寫註解說明(客製用) name="global.memo_customerization"
{<point name="global.memo_customerization" edit="c"/>}
#end add-point
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目 name="global.import"
{<point name="global.import"/>}
#end add-point 
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔 name="global.inc"
{<point name="global.inc" mark="Y"/>}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_crce_m        RECORD
       crcesite LIKE crce_t.crcesite, 
   crcesite_desc LIKE type_t.chr80, 
   crcedocdt LIKE crce_t.crcedocdt, 
   crcedocno LIKE crce_t.crcedocno, 
   crcedocno_desc LIKE type_t.chr80, 
   crce001 LIKE crce_t.crce001, 
   crce002 LIKE crce_t.crce002, 
   crce003 LIKE crce_t.crce003, 
   crce004 LIKE crce_t.crce004, 
   crce005 LIKE crce_t.crce005, 
   crce006 LIKE crce_t.crce006, 
   crce007 LIKE crce_t.crce007, 
   crce008 LIKE crce_t.crce008, 
   crce008_desc LIKE type_t.chr80, 
   crcb004 LIKE type_t.num15_3, 
   crce009 LIKE crce_t.crce009, 
   crce010 LIKE crce_t.crce010, 
   crceunit LIKE crce_t.crceunit, 
   crcestus LIKE crce_t.crcestus, 
   crceownid LIKE crce_t.crceownid, 
   crceownid_desc LIKE type_t.chr80, 
   crceowndp LIKE crce_t.crceowndp, 
   crceowndp_desc LIKE type_t.chr80, 
   crcecrtid LIKE crce_t.crcecrtid, 
   crcecrtid_desc LIKE type_t.chr80, 
   crcecrtdp LIKE crce_t.crcecrtdp, 
   crcecrtdp_desc LIKE type_t.chr80, 
   crcecrtdt LIKE crce_t.crcecrtdt, 
   crcemodid LIKE crce_t.crcemodid, 
   crcemodid_desc LIKE type_t.chr80, 
   crcemoddt LIKE crce_t.crcemoddt, 
   crcecnfid LIKE crce_t.crcecnfid, 
   crcecnfid_desc LIKE type_t.chr80, 
   crcecnfdt LIKE crce_t.crcecnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_crcf_d        RECORD
       crcf001 LIKE crcf_t.crcf001, 
   crcc003 LIKE type_t.chr500, 
   crcc004 LIKE type_t.num15_3, 
   crcc005 LIKE type_t.chr1, 
   crcc006 LIKE type_t.chr1, 
   crcf002 LIKE crcf_t.crcf002, 
   crcf003 LIKE crcf_t.crcf003, 
   crcfsite LIKE crcf_t.crcfsite, 
   crcfunit LIKE crcf_t.crcfunit
       END RECORD
PRIVATE TYPE type_g_crcf2_d RECORD
       crcg003 LIKE crcg_t.crcg003, 
   crcg002 LIKE crcg_t.crcg002, 
   crcd004 LIKE type_t.chr500, 
   crcd005 LIKE type_t.num15_3, 
   crcgsite LIKE crcg_t.crcgsite, 
   crcgunit LIKE crcg_t.crcgunit
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_crcesite LIKE crce_t.crcesite,
   b_crcesite_desc LIKE type_t.chr80,
      b_crcedocdt LIKE crce_t.crcedocdt,
      b_crcedocno LIKE crce_t.crcedocno,
      b_crce001 LIKE crce_t.crce001,
      b_crce002 LIKE crce_t.crce002,
      b_crce003 LIKE crce_t.crce003,
      b_crce004 LIKE crce_t.crce004,
      b_crce005 LIKE crce_t.crce005,
      b_crce006 LIKE crce_t.crce006,
      b_crce007 LIKE crce_t.crce007,
      b_crce008 LIKE crce_t.crce008,
   b_crce008_desc LIKE type_t.chr80,
      b_crce009 LIKE crce_t.crce009,
      b_crce010 LIKE crce_t.crce010
       END RECORD
       
#add-point:自定義模組變數(Module Variable) (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="global.variable"
{<point name="global.variable"/>} 
#end add-point
       
#模組變數(Module Variables)
DEFINE g_crce_m          type_g_crce_m
DEFINE g_crce_m_t        type_g_crce_m
DEFINE g_crce_m_o        type_g_crce_m
DEFINE g_crce_m_mask_o   type_g_crce_m #轉換遮罩前資料
DEFINE g_crce_m_mask_n   type_g_crce_m #轉換遮罩後資料
 
   DEFINE g_crcedocno_t LIKE crce_t.crcedocno
 
 
DEFINE g_crcf_d          DYNAMIC ARRAY OF type_g_crcf_d
DEFINE g_crcf_d_t        type_g_crcf_d
DEFINE g_crcf_d_o        type_g_crcf_d
DEFINE g_crcf_d_mask_o   DYNAMIC ARRAY OF type_g_crcf_d #轉換遮罩前資料
DEFINE g_crcf_d_mask_n   DYNAMIC ARRAY OF type_g_crcf_d #轉換遮罩後資料
DEFINE g_crcf2_d          DYNAMIC ARRAY OF type_g_crcf2_d
DEFINE g_crcf2_d_t        type_g_crcf2_d
DEFINE g_crcf2_d_o        type_g_crcf2_d
DEFINE g_crcf2_d_mask_o   DYNAMIC ARRAY OF type_g_crcf2_d #轉換遮罩前資料
DEFINE g_crcf2_d_mask_n   DYNAMIC ARRAY OF type_g_crcf2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                         #Current Dialog
                                                               
DEFINE g_pagestart           LIKE type_t.num10                 
DEFINE gwin_curr             ui.Window                         #Current Window
DEFINE gfrm_curr             ui.Form                           #Current Form
DEFINE g_page_action         STRING                            #page action
DEFINE g_header_hidden       LIKE type_t.num5                  #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5                  #隱藏工作Panel
DEFINE g_page                STRING                            #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10                  #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx_tmp      LIKE type_t.num10                  #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10                  #單身2目前所在筆數
DEFINE g_detail_idx_list     DYNAMIC ARRAY OF LIKE type_t.num10 #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10                  #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10                  #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10                  #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                             #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10                  #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                            #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10                  #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5                   #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
DEFINE g_idx_group           om.SaxAttributes              #頁籤群組
DEFINE g_master_commit       LIKE type_t.chr1              #確認單頭是否修改過
 
#add-point:自定義客戶專用模組變數(Module Variable) name="global.variable_customerization"
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv) name="global.argv"
{<point name="global.argv"/>}
#end add-point
{</section>}
 
{<section id="acrt420.main" >}
#應用 a26 樣板自動產生(Version:7)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define(客製用) name="main.define_customerization"
   {<point name="main.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:main段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="main.define"
   {<point name="main.define"/>}
   #end add-point   
   
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("acr","")
 
   #add-point:作業初始化 name="main.init"
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define name="main.define_sql"
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT crcesite,'',crcedocdt,crcedocno,'',crce001,crce002,crce003,crce004,crce005, 
       crce006,crce007,crce008,'','',crce009,crce010,crceunit,crcestus,crceownid,'',crceowndp,'',crcecrtid, 
       '',crcecrtdp,'',crcecrtdt,crcemodid,'',crcemoddt,crcecnfid,'',crcecnfdt", 
                      " FROM crce_t",
                      " WHERE crceent= ? AND crcedocno=? FOR UPDATE"
   #add-point:SQL_define name="main.after_define_sql"
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrt420_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT DISTINCT t0.crcesite,t0.crcedocdt,t0.crcedocno,t0.crce001,t0.crce002,t0.crce003, 
       t0.crce004,t0.crce005,t0.crce006,t0.crce007,t0.crce008,t0.crce009,t0.crce010,t0.crceunit,t0.crcestus, 
       t0.crceownid,t0.crceowndp,t0.crcecrtid,t0.crcecrtdp,t0.crcecrtdt,t0.crcemodid,t0.crcemoddt,t0.crcecnfid, 
       t0.crcecnfdt,t1.ooefl003 ,t2.crcbl003 ,t3.ooag011 ,t4.ooefl003 ,t5.ooag011 ,t6.ooefl003 ,t7.ooag011 , 
       t8.ooag011",
               " FROM crce_t t0",
                              " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.crcesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN crcbl_t t2 ON t2.crcblent="||g_enterprise||" AND t2.crcbl001=t0.crce008 AND t2.crcbl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t3 ON t3.ooagent="||g_enterprise||" AND t3.ooag001=t0.crceownid  ",
               " LEFT JOIN ooefl_t t4 ON t4.ooeflent="||g_enterprise||" AND t4.ooefl001=t0.crceowndp AND t4.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t5 ON t5.ooagent="||g_enterprise||" AND t5.ooag001=t0.crcecrtid  ",
               " LEFT JOIN ooefl_t t6 ON t6.ooeflent="||g_enterprise||" AND t6.ooefl001=t0.crcecrtdp AND t6.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent="||g_enterprise||" AND t7.ooag001=t0.crcemodid  ",
               " LEFT JOIN ooag_t t8 ON t8.ooagent="||g_enterprise||" AND t8.ooag001=t0.crcecnfid  ",
 
               " WHERE t0.crceent = " ||g_enterprise|| " AND t0.crcedocno = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define name="main.after_refresh_sql"
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE acrt420_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call name="main.servicecall"
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_acrt420 WITH FORM cl_ap_formpath("acr",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL acrt420_init()   
 
      #進入選單 Menu (="N")
      CALL acrt420_ui_dialog() 
      
      #add-point:畫面關閉前 name="main.before_close"
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_acrt420
      
   END IF 
   
   CLOSE acrt420_cl
   
   
 
   #add-point:作業離開前 name="main.exit"
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
 
{</section>}
 
{<section id="acrt420.init" >}
#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION acrt420_init()
   #add-point:init段define(客製用) name="init.define_customerization"
   {<point name="init.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:init段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="init.define"
   {<point name="init.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="init.pre_function"
   {<point name="init.pre_function"/>}
   #end add-point
   
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   
   #各個page指標
   LET g_detail_idx_list[1] = 1 
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('crcestus','13','N,Y,X')
 
   
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
   
   #page群組
   LET g_idx_group = om.SaxAttributes.create()
   CALL g_idx_group.addAttribute("'1',","1")
   CALL g_idx_group.addAttribute("'2',","1")
 
 
   #add-point:畫面資料初始化 name="init.init"
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL acrt420_default_search()
    
END FUNCTION
{</section>}
 
{<section id="acrt420.ui_dialog" >}
#+ 功能選單
PRIVATE FUNCTION acrt420_ui_dialog()
   #add-point:ui_dialog段define(客製用) name="ui_dialog.define_customerization"
   {<point name="ui_dialog.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   DEFINE  l_cmd_token           base.StringTokenizer   #報表作業cmdrun使用 
   DEFINE  l_cmd_next            STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_cnt             LIKE type_t.num5       #報表作業cmdrun使用
   DEFINE  l_cmd_prog_arg        STRING                 #報表作業cmdrun使用
   DEFINE  l_cmd_arg             STRING                 #報表作業cmdrun使用
   #add-point:ui_dialog段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_dialog.define"
   {<point name="ui_dialog.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="ui_dialog.pre_function"
   {<point name="ui_dialog.pre_function"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:3)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL acrt420_insert()
            #add-point:ON ACTION insert name="menu.default.insert"
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂 name="ui_dialog.action_default"
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog  name="ui_dialog.before_dialog"
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_crce_m.* TO NULL
         CALL g_crcf_d.clear()
         CALL g_crcf2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL acrt420_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL acrt420_fetch('') # reload data
               LET l_ac = 1
               CALL acrt420_ui_detailshow() #Setting the current row 
         
               CALL acrt420_idx_chk()
               #NEXT FIELD crcf001
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_crcf_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL acrt420_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               LET g_detail_idx_list[1] = l_ac
               CALL g_idx_group.addAttribute("'1',",l_ac)
               CALL acrt420_b_fill2('2')
 
               #add-point:page1, before row動作 name="ui_dialog.page1.before_row"
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL acrt420_idx_chk()
               #add-point:page1自定義行為 name="ui_dialog.page1.before_display"
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為 name="ui_dialog.page1.action"
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #第二階單身段落
         DISPLAY ARRAY g_crcf2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL acrt420_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               LET g_detail_idx_list[2] = l_ac
               CALL g_idx_group.addAttribute("'2',",l_ac)
               
               #add-point:page2, before row動作 name="ui_dialog.body2.before_row"
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL acrt420_idx_chk()
               #add-point:page2自定義行為 name="ui_dialog.body2.before_display"
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為 name="ui_dialog.body2.action"
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array name="ui_dialog.more_displayarray"
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL acrt420_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL acrt420_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL acrt420_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL acrt420_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2 name="ui_dialog.before_dialog2"
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #add-point:ui_dialog段more_action name="ui_dialog.more_action"
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL acrt420_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL acrt420_set_act_visible()   
            CALL acrt420_set_act_no_visible()
            IF NOT (g_crce_m.crcedocno IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " crceent = " ||g_enterprise|| " AND",
                                  " crcedocno = '", g_crce_m.crcedocno, "' "
 
               #填到對應位置
               CALL acrt420_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "crce_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "crcf_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL acrt420_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "crce_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "crcf_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL acrt420_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code = "-100" 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL acrt420_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:4)
            #過濾瀏覽頁資料
            ON ACTION filter
               LET g_action_choice = "fetch"
               #add-point:filter action name="ui_dialog.action.filter"
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL acrt420_filter()
               EXIT DIALOG
 
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL acrt420_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL acrt420_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL acrt420_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL acrt420_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL acrt420_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL acrt420_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_crcf_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_crcf2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel name="menu.exporttoexcel"
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD crcf001
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL acrt420_modify()
               #add-point:ON ACTION modify name="menu.modify"
               {<point name="menu.modify" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL acrt420_modify()
               #add-point:ON ACTION modify_detail name="menu.modify_detail"
               {<point name="menu.modify_detail" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL acrt420_delete()
               #add-point:ON ACTION delete name="menu.delete"
               {<point name="menu.delete" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL acrt420_insert()
               #add-point:ON ACTION insert name="menu.insert"
               {<point name="menu.insert" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output name="menu.output"
               {<point name="menu.output" mark="Y"/>}
               #END add-point
               &include "erp/acr/acrt420_rep.4gl"
               #add-point:ON ACTION output.after name="menu.after_output"
               {<point name="menu.after_output" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION quickprint
            LET g_action_choice="quickprint"
            IF cl_auth_chk_act("quickprint") THEN
               
               #add-point:ON ACTION quickprint name="menu.quickprint"
               {<point name="menu.quickprint" mark="Y"/>}
               #END add-point
               &include "erp/acr/acrt420_rep.4gl"
               #add-point:ON ACTION quickprint.after name="menu.after_quickprint"
               {<point name="menu.after_quickprint" />}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL acrt420_reproduce()
               #add-point:ON ACTION reproduce name="menu.reproduce"
               {<point name="menu.reproduce" mark="Y"/>}
               #END add-point
               
            END IF
 
 
 
 
         #應用 a43 樣板自動產生(Version:4)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL acrt420_query()
               #add-point:ON ACTION query name="menu.query"
               {<point name="menu.query" mark="Y"/>}
               #END add-point
               #應用 a59 樣板自動產生(Version:3)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
 
            END IF
 
 
 
 
         
         #應用 a46 樣板自動產生(Version:3)
         #新增相關文件
         ON ACTION related_document
            CALL acrt420_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document name="ui_dialog.dialog.related_document"
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL acrt420_set_pk_array()
            #add-point:ON ACTION agendum name="ui_dialog.dialog.agendum"
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL acrt420_set_pk_array()
            #add-point:ON ACTION followup name="ui_dialog.dialog.followup"
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow(g_crce_m.crcedocdt)
 
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
 
      #(ver:79) ---add start---
      #add-point:ui_dialog段 after dialog name="ui_dialog.exit_dialog"
      {<point name="ui_dialog.exit_dialog"/>}
      #end add-point
      #(ver:79) --- add end ---
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前 name="ui_dialog.b_exit"
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
{</section>}
 
{<section id="acrt420.browser_fill" >}
#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION acrt420_browser_fill(ps_page_action)
   #add-point:browser_fill段define(客製用) name="browser_fill.define_customerization"
   {<point name="browser_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="browser_fill.define"
   {<point name="browser_fill.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理 name="browser_fill.before_browser_fill"
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前 name="browser_fill.before_foreach"
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT DISTINCT crcedocno ",
                      " FROM crce_t ",
                      " ",
                      " LEFT JOIN crcf_t ON crcfent = crceent AND crcedocno = crcfdocno ", "  ",
                      #add-point:browser_fill段sql(crcf_t1) name="browser_fill.cnt.join.}"
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
                      " LEFT JOIN crcg_t ON crcgent = crceent AND crcfdocno = crcgdocno AND crcf001 = crcg001", "  ",
                      #add-point:browser_fill段sql(crcg_t1) name="browser_fill.cnt.join.crcg_t1"
                      {<point name="browser_fill.cnt.join.crcg_t1"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
 
                      " ",
 
 
                      " WHERE crceent = " ||g_enterprise|| " AND crcfent = " ||g_enterprise|| " AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("crce_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT DISTINCT crcedocno ",
                      " FROM crce_t ", 
                      "  ",
                      "  ",
                      " WHERE crceent = " ||g_enterprise|| " AND ",l_wc CLIPPED, cl_sql_add_filter("crce_t")
   END IF
   
   #add-point:browser_fill,cnt wc name="browser_fill.cnt_sqlwc"
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(1) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前 name="browser_fill.before_count"
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE header_cnt_pre FROM g_sql
      EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
      FREE header_cnt_pre
   END IF
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code = 9035 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_crce_m.* TO NULL
      CALL g_crcf_d.clear()        
      CALL g_crcf2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理 name="browser_fill.add_browse.other"
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.crcesite,t0.crcedocdt,t0.crcedocno,t0.crce001,t0.crce002,t0.crce003,t0.crce004,t0.crce005,t0.crce006,t0.crce007,t0.crce008,t0.crce009,t0.crce010 Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.crcestus,t0.crcesite,t0.crcedocdt,t0.crcedocno,t0.crce001,t0.crce002, 
          t0.crce003,t0.crce004,t0.crce005,t0.crce006,t0.crce007,t0.crce008,t0.crce009,t0.crce010,t1.ooefl003 , 
          t2.crcbl003 ",
                  " FROM crce_t t0",
                  "  ",
                  "  LEFT JOIN crcf_t ON crcfent = crceent AND crcedocno = crcfdocno ", "  ", 
                  #add-point:browser_fill段sql(crcf_t1) name="browser_fill.join.crcf_t1"
                  {<point name="browser_fill.join.crcf_t1"/>}
                  #end add-point
 
                  "  LEFT JOIN crcg_t ON crcgent = crceent AND crcfdocno = crcgdocno AND crcf001 = crcg001", "  ", 
                  #add-point:browser_fill段sql(crcg_t1) name="browser_fill.join.crcg_t1"
                  {<point name="browser_fill.join.crcg_t1"/>}
                  #end add-point
 
 
                  " ", 
 
                  " ",
 
 
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.crcesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN crcbl_t t2 ON t2.crcblent="||g_enterprise||" AND t2.crcbl001=t0.crce008 AND t2.crcbl002='"||g_dlang||"' ",
 
                  " WHERE t0.crceent = " ||g_enterprise|| " AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("crce_t")
   ELSE
      #單身無輸入搜尋條件   
      LET g_sql = " SELECT DISTINCT t0.crcestus,t0.crcesite,t0.crcedocdt,t0.crcedocno,t0.crce001,t0.crce002, 
          t0.crce003,t0.crce004,t0.crce005,t0.crce006,t0.crce007,t0.crce008,t0.crce009,t0.crce010,t1.ooefl003 , 
          t2.crcbl003 ",
                  " FROM crce_t t0",
                  "  ",
                                 " LEFT JOIN ooefl_t t1 ON t1.ooeflent="||g_enterprise||" AND t1.ooefl001=t0.crcesite AND t1.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN crcbl_t t2 ON t2.crcblent="||g_enterprise||" AND t2.crcbl001=t0.crce008 AND t2.crcbl002='"||g_dlang||"' ",
 
                  " WHERE t0.crceent = " ||g_enterprise|| " AND ",l_wc, cl_sql_add_filter("crce_t")
   END IF
   #add-point:browser_fill,sql wc name="browser_fill.fill_sqlwc"
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY crcedocno ",g_order
 
   #add-point:browser_fill,before_prepare name="browser_fill.before_prepare"
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"crce_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   
   IF g_sql.getIndexOf(" 1=2",1) THEN
      DISPLAY "INFO: 1=2 jumped!"
   ELSE
      PREPARE browse_pre FROM g_sql
      DECLARE browse_cur CURSOR FOR browse_pre
      
      #add-point:browser_fill段open cursor name="browser_fill.open"
      {<point name="browser_fill.open"/>}
      #end add-point
      
      FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_crcesite,g_browser[g_cnt].b_crcedocdt, 
          g_browser[g_cnt].b_crcedocno,g_browser[g_cnt].b_crce001,g_browser[g_cnt].b_crce002,g_browser[g_cnt].b_crce003, 
          g_browser[g_cnt].b_crce004,g_browser[g_cnt].b_crce005,g_browser[g_cnt].b_crce006,g_browser[g_cnt].b_crce007, 
          g_browser[g_cnt].b_crce008,g_browser[g_cnt].b_crce009,g_browser[g_cnt].b_crce010,g_browser[g_cnt].b_crcesite_desc, 
          g_browser[g_cnt].b_crce008_desc
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "Foreach:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
      
         #add-point:browser_fill段reference name="browser_fill.reference"
         {<point name="browser_fill.reference"/>}
         #end add-point
      
         #遮罩相關處理
         CALL acrt420_browser_mask()
      
               #應用 a24 樣板自動產生(Version:3)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
 
         LET g_cnt = g_cnt + 1
         IF g_cnt > g_max_browse THEN
            EXIT FOREACH
         END IF
         
      END FOREACH
      FREE browse_pre
   END IF
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_crcedocno) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
 
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前 name="browser_fill.after"
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
{</section>}
 
{<section id="acrt420.ui_headershow" >}
#+ 單頭資料重新顯示
PRIVATE FUNCTION acrt420_ui_headershow()
   #add-point:ui_headershow段define(客製用) name="ui_headershow.define_customerization"
   {<point name="ui_headershow.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:ui_headershow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_headershow.define"
   {<point name="ui_headershow.define"/>} 
   #end add-point      
   
   #add-point:Function前置處理  name="ui_headershow.pre_function"
   {<point name="ui_headershow.pre_function"/>}
   #end add-point
   
   LET g_crce_m.crcedocno = g_browser[g_current_idx].b_crcedocno   
 
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   
   CALL acrt420_crce_t_mask()
   CALL acrt420_show()
      
END FUNCTION
{</section>}
 
{<section id="acrt420.ui_detailshow" >}
#+ 單身資料重新顯示
PRIVATE FUNCTION acrt420_ui_detailshow()
   #add-point:ui_detailshow段define(客製用) name="ui_detailshow.define_customerization"
   {<point name="ui_detailshow.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:ui_detailshow段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_detailshow.define"
   {<point name="ui_detailshow.define"/>} 
   #end add-point    
 
   #add-point:Function前置處理 name="ui_detailshow.before"
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after name="ui_detailshow.after"
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="acrt420.ui_browser_refresh" >}
#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION acrt420_ui_browser_refresh()
   #add-point:ui_browser_refresh段define(客製用) name="ui_browser_refresh.define_customerization"
   {<point name="ui_browser_refresh.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="ui_browser_refresh.define"
   {<point name="ui_browser_refresh.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="ui_browser_refresh.pre_function"
   {<point name="ui_browser_refresh.pre_function"/>}
   #end add-point
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_crcedocno = g_crce_m.crcedocno 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after name="ui_browser_refresh.after"
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
{</section>}
 
{<section id="acrt420.construct" >}
#+ QBE資料查詢
PRIVATE FUNCTION acrt420_construct()
   #add-point:cs段define(客製用) name="cs.define_customerization"
   {<point name="cs.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="cs.define"
   {<point name="cs.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="cs.pre_function"
   {<point name="cs.pre_function"/>}
   #end add-point
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_crce_m.* TO NULL
   CALL g_crcf_d.clear()        
   CALL g_crcf2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前 name="cs.before_construct"
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005, 
          crce006,crce007,crce008,crcb004,crce009,crce010,crceunit,crcestus,crceownid,crceowndp,crcecrtid, 
          crcecrtdp,crcecrtdt,crcemodid,crcemoddt,crcecnfid,crcecnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.head.before_construct"
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:3)
         #共用欄位查詢處理  
         ##----<<crcecrtdt>>----
         AFTER FIELD crcecrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<crcemoddt>>----
         AFTER FIELD crcemoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcecnfdt>>----
         AFTER FIELD crcecnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<crcepstdt>>----
 
 
 
            
         #一般欄位開窗相關處理    
                  #Ctrlp:construct.c.crcesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcesite
            #add-point:ON ACTION controlp INFIELD crcesite name="construct.c.crcesite"
            {<point name="construct.c.crcesite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcesite
            #add-point:BEFORE FIELD crcesite name="construct.b.crcesite"
            {<point name="construct.b.crcesite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcesite
            
            #add-point:AFTER FIELD crcesite name="construct.a.crcesite"
            {<point name="construct.a.crcesite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcedocdt
            #add-point:BEFORE FIELD crcedocdt name="construct.b.crcedocdt"
            {<point name="construct.b.crcedocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcedocdt
            
            #add-point:AFTER FIELD crcedocdt name="construct.a.crcedocdt"
            {<point name="construct.a.crcedocdt" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crcedocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcedocdt
            #add-point:ON ACTION controlp INFIELD crcedocdt name="construct.c.crcedocdt"
            {<point name="construct.c.crcedocdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.crcedocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcedocno
            #add-point:ON ACTION controlp INFIELD crcedocno name="construct.c.crcedocno"
            {<point name="construct.c.crcedocno" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcedocno
            #add-point:BEFORE FIELD crcedocno name="construct.b.crcedocno"
            {<point name="construct.b.crcedocno" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcedocno
            
            #add-point:AFTER FIELD crcedocno name="construct.a.crcedocno"
            {<point name="construct.a.crcedocno" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce001
            #add-point:ON ACTION controlp INFIELD crce001 name="construct.c.crce001"
            {<point name="construct.c.crce001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce001
            #add-point:BEFORE FIELD crce001 name="construct.b.crce001"
            {<point name="construct.b.crce001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce001
            
            #add-point:AFTER FIELD crce001 name="construct.a.crce001"
            {<point name="construct.a.crce001" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce002
            #add-point:ON ACTION controlp INFIELD crce002 name="construct.c.crce002"
            {<point name="construct.c.crce002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce002
            #add-point:BEFORE FIELD crce002 name="construct.b.crce002"
            {<point name="construct.b.crce002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce002
            
            #add-point:AFTER FIELD crce002 name="construct.a.crce002"
            {<point name="construct.a.crce002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce003
            #add-point:BEFORE FIELD crce003 name="construct.b.crce003"
            {<point name="construct.b.crce003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce003
            
            #add-point:AFTER FIELD crce003 name="construct.a.crce003"
            {<point name="construct.a.crce003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce003
            #add-point:ON ACTION controlp INFIELD crce003 name="construct.c.crce003"
            {<point name="construct.c.crce003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.crce004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce004
            #add-point:ON ACTION controlp INFIELD crce004 name="construct.c.crce004"
            {<point name="construct.c.crce004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce004
            #add-point:BEFORE FIELD crce004 name="construct.b.crce004"
            {<point name="construct.b.crce004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce004
            
            #add-point:AFTER FIELD crce004 name="construct.a.crce004"
            {<point name="construct.a.crce004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce005
            #add-point:BEFORE FIELD crce005 name="construct.b.crce005"
            {<point name="construct.b.crce005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce005
            
            #add-point:AFTER FIELD crce005 name="construct.a.crce005"
            {<point name="construct.a.crce005" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce005
            #add-point:ON ACTION controlp INFIELD crce005 name="construct.c.crce005"
            {<point name="construct.c.crce005" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce006
            #add-point:BEFORE FIELD crce006 name="construct.b.crce006"
            {<point name="construct.b.crce006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce006
            
            #add-point:AFTER FIELD crce006 name="construct.a.crce006"
            {<point name="construct.a.crce006" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce006
            #add-point:ON ACTION controlp INFIELD crce006 name="construct.c.crce006"
            {<point name="construct.c.crce006" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce007
            #add-point:BEFORE FIELD crce007 name="construct.b.crce007"
            {<point name="construct.b.crce007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce007
            
            #add-point:AFTER FIELD crce007 name="construct.a.crce007"
            {<point name="construct.a.crce007" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce007
            #add-point:ON ACTION controlp INFIELD crce007 name="construct.c.crce007"
            {<point name="construct.c.crce007" />}
            #END add-point
 
 
         #Ctrlp:construct.c.crce008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce008
            #add-point:ON ACTION controlp INFIELD crce008 name="construct.c.crce008"
            {<point name="construct.c.crce008" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce008
            #add-point:BEFORE FIELD crce008 name="construct.b.crce008"
            {<point name="construct.b.crce008" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce008
            
            #add-point:AFTER FIELD crce008 name="construct.a.crce008"
            {<point name="construct.a.crce008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcb004
            #add-point:BEFORE FIELD crcb004 name="construct.b.crcb004"
            {<point name="construct.b.crcb004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcb004
            
            #add-point:AFTER FIELD crcb004 name="construct.a.crcb004"
            {<point name="construct.a.crcb004" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crcb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcb004
            #add-point:ON ACTION controlp INFIELD crcb004 name="construct.c.crcb004"
            {<point name="construct.c.crcb004" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce009
            #add-point:BEFORE FIELD crce009 name="construct.b.crce009"
            {<point name="construct.b.crce009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce009
            
            #add-point:AFTER FIELD crce009 name="construct.a.crce009"
            {<point name="construct.a.crce009" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce009
            #add-point:ON ACTION controlp INFIELD crce009 name="construct.c.crce009"
            {<point name="construct.c.crce009" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce010
            #add-point:BEFORE FIELD crce010 name="construct.b.crce010"
            {<point name="construct.b.crce010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce010
            
            #add-point:AFTER FIELD crce010 name="construct.a.crce010"
            {<point name="construct.a.crce010" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crce010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce010
            #add-point:ON ACTION controlp INFIELD crce010 name="construct.c.crce010"
            {<point name="construct.c.crce010" />}
            #END add-point
 
 
         #Ctrlp:construct.c.crceunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crceunit
            #add-point:ON ACTION controlp INFIELD crceunit name="construct.c.crceunit"
            {<point name="construct.c.crceunit" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crceunit
            #add-point:BEFORE FIELD crceunit name="construct.b.crceunit"
            {<point name="construct.b.crceunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crceunit
            
            #add-point:AFTER FIELD crceunit name="construct.a.crceunit"
            {<point name="construct.a.crceunit" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcestus
            #add-point:BEFORE FIELD crcestus name="construct.b.crcestus"
            {<point name="construct.b.crcestus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcestus
            
            #add-point:AFTER FIELD crcestus name="construct.a.crcestus"
            {<point name="construct.a.crcestus" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crcestus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcestus
            #add-point:ON ACTION controlp INFIELD crcestus name="construct.c.crcestus"
            {<point name="construct.c.crcestus" />}
            #END add-point
 
 
         #Ctrlp:construct.c.crceownid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crceownid
            #add-point:ON ACTION controlp INFIELD crceownid name="construct.c.crceownid"
            {<point name="construct.c.crceownid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crceownid
            #add-point:BEFORE FIELD crceownid name="construct.b.crceownid"
            {<point name="construct.b.crceownid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crceownid
            
            #add-point:AFTER FIELD crceownid name="construct.a.crceownid"
            {<point name="construct.a.crceownid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crceowndp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crceowndp
            #add-point:ON ACTION controlp INFIELD crceowndp name="construct.c.crceowndp"
            {<point name="construct.c.crceowndp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crceowndp
            #add-point:BEFORE FIELD crceowndp name="construct.b.crceowndp"
            {<point name="construct.b.crceowndp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crceowndp
            
            #add-point:AFTER FIELD crceowndp name="construct.a.crceowndp"
            {<point name="construct.a.crceowndp" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crcecrtid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcecrtid
            #add-point:ON ACTION controlp INFIELD crcecrtid name="construct.c.crcecrtid"
            {<point name="construct.c.crcecrtid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcecrtid
            #add-point:BEFORE FIELD crcecrtid name="construct.b.crcecrtid"
            {<point name="construct.b.crcecrtid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcecrtid
            
            #add-point:AFTER FIELD crcecrtid name="construct.a.crcecrtid"
            {<point name="construct.a.crcecrtid" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.crcecrtdp
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcecrtdp
            #add-point:ON ACTION controlp INFIELD crcecrtdp name="construct.c.crcecrtdp"
            {<point name="construct.c.crcecrtdp" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcecrtdp
            #add-point:BEFORE FIELD crcecrtdp name="construct.b.crcecrtdp"
            {<point name="construct.b.crcecrtdp" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcecrtdp
            
            #add-point:AFTER FIELD crcecrtdp name="construct.a.crcecrtdp"
            {<point name="construct.a.crcecrtdp" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcecrtdt
            #add-point:BEFORE FIELD crcecrtdt name="construct.b.crcecrtdt"
            {<point name="construct.b.crcecrtdt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.crcemodid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcemodid
            #add-point:ON ACTION controlp INFIELD crcemodid name="construct.c.crcemodid"
            {<point name="construct.c.crcemodid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcemodid
            #add-point:BEFORE FIELD crcemodid name="construct.b.crcemodid"
            {<point name="construct.b.crcemodid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcemodid
            
            #add-point:AFTER FIELD crcemodid name="construct.a.crcemodid"
            {<point name="construct.a.crcemodid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcemoddt
            #add-point:BEFORE FIELD crcemoddt name="construct.b.crcemoddt"
            {<point name="construct.b.crcemoddt" />}
            #END add-point
 
 
         #Ctrlp:construct.c.crcecnfid
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcecnfid
            #add-point:ON ACTION controlp INFIELD crcecnfid name="construct.c.crcecnfid"
            {<point name="construct.c.crcecnfid" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcecnfid
            #add-point:BEFORE FIELD crcecnfid name="construct.b.crcecnfid"
            {<point name="construct.b.crcecnfid" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcecnfid
            
            #add-point:AFTER FIELD crcecnfid name="construct.a.crcecnfid"
            {<point name="construct.a.crcecnfid" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcecnfdt
            #add-point:BEFORE FIELD crcecnfdt name="construct.b.crcecnfdt"
            {<point name="construct.b.crcecnfdt" />}
            #END add-point
 
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON crcf001,crcf002,crcf003,crcfsite,crcfunit
           FROM s_detail1[1].crcf001,s_detail1[1].crcf002,s_detail1[1].crcf003,s_detail1[1].crcfsite, 
               s_detail1[1].crcfunit
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body.before_construct"
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #Ctrlp:construct.c.page1.crcf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcf001
            #add-point:ON ACTION controlp INFIELD crcf001 name="construct.c.page1.crcf001"
            {<point name="construct.c.page1.crcf001" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcf001
            #add-point:BEFORE FIELD crcf001 name="construct.b.page1.crcf001"
            {<point name="construct.b.page1.crcf001" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcf001
            
            #add-point:AFTER FIELD crcf001 name="construct.a.page1.crcf001"
            {<point name="construct.a.page1.crcf001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcf002
            #add-point:BEFORE FIELD crcf002 name="construct.b.page1.crcf002"
            {<point name="construct.b.page1.crcf002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcf002
            
            #add-point:AFTER FIELD crcf002 name="construct.a.page1.crcf002"
            {<point name="construct.a.page1.crcf002" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.crcf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcf002
            #add-point:ON ACTION controlp INFIELD crcf002 name="construct.c.page1.crcf002"
            {<point name="construct.c.page1.crcf002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcf003
            #add-point:BEFORE FIELD crcf003 name="construct.b.page1.crcf003"
            {<point name="construct.b.page1.crcf003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcf003
            
            #add-point:AFTER FIELD crcf003 name="construct.a.page1.crcf003"
            {<point name="construct.a.page1.crcf003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.crcf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcf003
            #add-point:ON ACTION controlp INFIELD crcf003 name="construct.c.page1.crcf003"
            {<point name="construct.c.page1.crcf003" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcfsite
            #add-point:BEFORE FIELD crcfsite name="construct.b.page1.crcfsite"
            {<point name="construct.b.page1.crcfsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcfsite
            
            #add-point:AFTER FIELD crcfsite name="construct.a.page1.crcfsite"
            {<point name="construct.a.page1.crcfsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.crcfsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcfsite
            #add-point:ON ACTION controlp INFIELD crcfsite name="construct.c.page1.crcfsite"
            {<point name="construct.c.page1.crcfsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcfunit
            #add-point:BEFORE FIELD crcfunit name="construct.b.page1.crcfunit"
            {<point name="construct.b.page1.crcfunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcfunit
            
            #add-point:AFTER FIELD crcfunit name="construct.a.page1.crcfunit"
            {<point name="construct.a.page1.crcfunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page1.crcfunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcfunit
            #add-point:ON ACTION controlp INFIELD crcfunit name="construct.c.page1.crcfunit"
            {<point name="construct.c.page1.crcfunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON crcg003,crcg002,crcgsite,crcgunit
           FROM s_detail2[1].crcg003,s_detail2[1].crcg002,s_detail2[1].crcgsite,s_detail2[1].crcgunit 

                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct name="cs.body2.before_construct"
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcg003
            #add-point:BEFORE FIELD crcg003 name="construct.b.page2.crcg003"
            {<point name="construct.b.page2.crcg003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcg003
            
            #add-point:AFTER FIELD crcg003 name="construct.a.page2.crcg003"
            {<point name="construct.a.page2.crcg003" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.crcg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcg003
            #add-point:ON ACTION controlp INFIELD crcg003 name="construct.c.page2.crcg003"
            {<point name="construct.c.page2.crcg003" />}
            #END add-point
 
 
         #Ctrlp:construct.c.page2.crcg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcg002
            #add-point:ON ACTION controlp INFIELD crcg002 name="construct.c.page2.crcg002"
            {<point name="construct.c.page2.crcg002" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcg002
            #add-point:BEFORE FIELD crcg002 name="construct.b.page2.crcg002"
            {<point name="construct.b.page2.crcg002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcg002
            
            #add-point:AFTER FIELD crcg002 name="construct.a.page2.crcg002"
            {<point name="construct.a.page2.crcg002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcgsite
            #add-point:BEFORE FIELD crcgsite name="construct.b.page2.crcgsite"
            {<point name="construct.b.page2.crcgsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcgsite
            
            #add-point:AFTER FIELD crcgsite name="construct.a.page2.crcgsite"
            {<point name="construct.a.page2.crcgsite" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.crcgsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcgsite
            #add-point:ON ACTION controlp INFIELD crcgsite name="construct.c.page2.crcgsite"
            {<point name="construct.c.page2.crcgsite" />}
            #END add-point
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcgunit
            #add-point:BEFORE FIELD crcgunit name="construct.b.page2.crcgunit"
            {<point name="construct.b.page2.crcgunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcgunit
            
            #add-point:AFTER FIELD crcgunit name="construct.a.page2.crcgunit"
            {<point name="construct.a.page2.crcgunit" />}
            #END add-point
            
 
 
         #Ctrlp:construct.c.page2.crcgunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcgunit
            #add-point:ON ACTION controlp INFIELD crcgunit name="construct.c.page2.crcgunit"
            {<point name="construct.c.page2.crcgunit" />}
            #END add-point
 
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令) name="cs.add_cs"
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog name="cs.b_dialog"
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "crce_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "crcf_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前 name="cs.after_construct"
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
{</section>}
 
{<section id="acrt420.filter" >}
#應用 a50 樣板自動產生(Version:8)
#+ filter過濾功能
PRIVATE FUNCTION acrt420_filter()
   #add-point:filter段define name="filter.define_customerization"
   {<point name="filter.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter.define"
   {<point name="filter.define"/>}
   #end add-point   
   
   #add-point:Function前置處理  name="filter.pre_function"
   {<point name="filter.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005, 
          crce006,crce007,crce008,crce009,crce010
                          FROM s_browse[1].b_crcesite,s_browse[1].b_crcedocdt,s_browse[1].b_crcedocno, 
                              s_browse[1].b_crce001,s_browse[1].b_crce002,s_browse[1].b_crce003,s_browse[1].b_crce004, 
                              s_browse[1].b_crce005,s_browse[1].b_crce006,s_browse[1].b_crce007,s_browse[1].b_crce008, 
                              s_browse[1].b_crce009,s_browse[1].b_crce010
 
         BEFORE CONSTRUCT
               DISPLAY acrt420_filter_parser('crcesite') TO s_browse[1].b_crcesite
            DISPLAY acrt420_filter_parser('crcedocdt') TO s_browse[1].b_crcedocdt
            DISPLAY acrt420_filter_parser('crcedocno') TO s_browse[1].b_crcedocno
            DISPLAY acrt420_filter_parser('crce001') TO s_browse[1].b_crce001
            DISPLAY acrt420_filter_parser('crce002') TO s_browse[1].b_crce002
            DISPLAY acrt420_filter_parser('crce003') TO s_browse[1].b_crce003
            DISPLAY acrt420_filter_parser('crce004') TO s_browse[1].b_crce004
            DISPLAY acrt420_filter_parser('crce005') TO s_browse[1].b_crce005
            DISPLAY acrt420_filter_parser('crce006') TO s_browse[1].b_crce006
            DISPLAY acrt420_filter_parser('crce007') TO s_browse[1].b_crce007
            DISPLAY acrt420_filter_parser('crce008') TO s_browse[1].b_crce008
            DISPLAY acrt420_filter_parser('crce009') TO s_browse[1].b_crce009
            DISPLAY acrt420_filter_parser('crce010') TO s_browse[1].b_crce010
      
         #add-point:filter段cs_ctrl name="filter.cs_ctrl"
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs name="filter.add_cs"
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog name="filter.b_dialog"
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL acrt420_filter_show('crcesite')
   CALL acrt420_filter_show('crcedocdt')
   CALL acrt420_filter_show('crcedocno')
   CALL acrt420_filter_show('crce001')
   CALL acrt420_filter_show('crce002')
   CALL acrt420_filter_show('crce003')
   CALL acrt420_filter_show('crce004')
   CALL acrt420_filter_show('crce005')
   CALL acrt420_filter_show('crce006')
   CALL acrt420_filter_show('crce007')
   CALL acrt420_filter_show('crce008')
   CALL acrt420_filter_show('crce009')
   CALL acrt420_filter_show('crce010')
 
END FUNCTION
{</section>}
 
{<section id="acrt420.filter_parser" >}
#+ filter過濾功能
PRIVATE FUNCTION acrt420_filter_parser(ps_field)
   #add-point:filter段define name="filter_parser.define_customerization"
   {<point name="filter_parser.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="filter_parser.define"
   {<point name="filter_parser.define"/>}
   #end add-point    
   
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
{</section>}
 
{<section id="acrt420.filter_show" >}
#+ 顯示過濾條件
PRIVATE FUNCTION acrt420_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = acrt420_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
{</section>}
 
 
 
 
 
{<section id="acrt420.query" >}
#+ 資料查詢QBE功能準備
PRIVATE FUNCTION acrt420_query()
   #add-point:query段define(客製用) name="query.define_customerization"
   {<point name="query.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ls_wc STRING
   #add-point:query段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="query.define"
   {<point name="query.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="query.pre_function"
   {<point name="query.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_crcf_d.clear()
   CALL g_crcf2_d.clear()
 
   
   #add-point:query段other name="query.other"
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL acrt420_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      #LET g_wc = ls_wc
      LET g_wc = " 1=2"
      CALL acrt420_browser_fill("")
      CALL acrt420_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_detail_idx_list[1] = 1
   LET g_detail_idx_list[2] = 1
 
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL acrt420_filter_show('crcesite')
   CALL acrt420_filter_show('crcedocdt')
   CALL acrt420_filter_show('crcedocno')
   CALL acrt420_filter_show('crce001')
   CALL acrt420_filter_show('crce002')
   CALL acrt420_filter_show('crce003')
   CALL acrt420_filter_show('crce004')
   CALL acrt420_filter_show('crce005')
   CALL acrt420_filter_show('crce006')
   CALL acrt420_filter_show('crce007')
   CALL acrt420_filter_show('crce008')
   CALL acrt420_filter_show('crce009')
   CALL acrt420_filter_show('crce010')
   CALL acrt420_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "-100" 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
   ELSE
      CALL acrt420_fetch("F") 
      #顯示單身筆數
      CALL acrt420_idx_chk()
   END IF
 
END FUNCTION
{</section>}
 
{<section id="acrt420.fetch" >}
#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION acrt420_fetch(p_flag)
   #add-point:fetch段define(客製用) name="fetch.define_customerization"
   {<point name="fetch.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fetch.define"
   {<point name="fetch.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="fetch.pre_function"
   {<point name="fetch.pre_function"/>}
   #end add-point
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   #清空第二階單身
   CALL g_crcf2_d.clear()
 
   
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #避免超出browser資料筆數上限
   IF g_current_idx > g_browser.getLength() THEN
      LET g_browser_idx = g_browser.getLength()
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_crce_m.crcedocno = g_browser[g_current_idx].b_crcedocno
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   
   #遮罩相關處理
   LET g_crce_m_mask_o.* =  g_crce_m.*
   CALL acrt420_crce_t_mask()
   LET g_crce_m_mask_n.* =  g_crce_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL acrt420_set_act_visible()   
   CALL acrt420_set_act_no_visible()
   
   #add-point:fetch段action控制 name="fetch.action_control"
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前 name="fetch.after"
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_crce_m_t.* = g_crce_m.*
   LET g_crce_m_o.* = g_crce_m.*
   
   LET g_data_owner = g_crce_m.crceownid      
   LET g_data_dept  = g_crce_m.crceowndp
   
   #重新顯示   
   CALL acrt420_show()
 
   
 
END FUNCTION
{</section>}
 
{<section id="acrt420.insert" >}
#+ 資料新增
PRIVATE FUNCTION acrt420_insert()
   #add-point:insert段define(客製用) name="insert.define_customerization"
   {<point name="insert.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   #add-point:insert段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert.define"
   {<point name="insert.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="insert.pre_function"
   {<point name="insert.pre_function"/>}
   #end add-point
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_crcf_d.clear()   
   CALL g_crcf2_d.clear()  
 
 
   INITIALIZE g_crce_m.* TO NULL             #DEFAULT 設定
   
   LET g_crcedocno_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before name="insert.before"
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_crce_m.crceownid = g_user
      LET g_crce_m.crceowndp = g_dept
      LET g_crce_m.crcecrtid = g_user
      LET g_crce_m.crcecrtdp = g_dept 
      LET g_crce_m.crcecrtdt = cl_get_current()
      LET g_crce_m.crcemodid = g_user
      LET g_crce_m.crcemoddt = cl_get_current()
      LET g_crce_m.crcestus = 'N'
 
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_crce_m.crcb004 = "0"
      LET g_crce_m.crce009 = "0"
      LET g_crce_m.crcestus = "N"
 
  
      #add-point:單頭預設值 name="insert.default"
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_crce_m_t.* = g_crce_m.*
      LET g_crce_m_o.* = g_crce_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_crce_m.crcestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
    
      CALL acrt420_input("a")
      
      #add-point:單頭輸入後 name="insert.after_insert"
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_crce_m.* TO NULL
         INITIALIZE g_crcf_d TO NULL
         INITIALIZE g_crcf2_d TO NULL
 
         #add-point:取消新增後 name="insert.cancel"
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL acrt420_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_crcf_d.clear()
      #CALL g_crcf2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL acrt420_set_act_visible()   
   CALL acrt420_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_crcedocno_t = g_crce_m.crcedocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " crceent = " ||g_enterprise|| " AND",
                      " crcedocno = '", g_crce_m.crcedocno, "' "
 
                      
   #add-point:組合新增資料的條件後 name="insert.after.add_browse"
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL acrt420_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE acrt420_cl
   
   CALL acrt420_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   
   
   #遮罩相關處理
   LET g_crce_m_mask_o.* =  g_crce_m.*
   CALL acrt420_crce_t_mask()
   LET g_crce_m_mask_n.* =  g_crce_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcesite_desc,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crcedocno_desc, 
       g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006, 
       g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce008_desc,g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010, 
       g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceownid_desc,g_crce_m.crceowndp, 
       g_crce_m.crceowndp_desc,g_crce_m.crcecrtid,g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp,g_crce_m.crcecrtdp_desc, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemodid_desc,g_crce_m.crcemoddt,g_crce_m.crcecnfid, 
       g_crce_m.crcecnfid_desc,g_crce_m.crcecnfdt
   
   #add-point:新增結束後 name="insert.after"
   {<point name="insert.after"/>}
   #end add-point 
   
   LET g_data_owner = g_crce_m.crceownid      
   LET g_data_dept  = g_crce_m.crceowndp
   
   #功能已完成,通報訊息中心
   CALL acrt420_msgcentre_notify('insert')
   
END FUNCTION
{</section>}
 
{<section id="acrt420.modify" >}
#+ 資料修改
PRIVATE FUNCTION acrt420_modify()
   #add-point:modify段define(客製用) name="modify.define_customerization"
   {<point name="modify.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
   DEFINE l_wc2_table2   STRING
 
 
   #add-point:modify段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="modify.define"
   {<point name="modify.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="modify.pre_function"
   {<point name="modify.pre_function"/>}
   #end add-point
   
   #保存單頭舊值
   LET g_crce_m_t.* = g_crce_m.*
   LET g_crce_m_o.* = g_crce_m.*
   
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_crcedocno_t = g_crce_m.crcedocno
 
   CALL s_transaction_begin()
   
   OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN acrt420_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   
   #檢查是否允許此動作
   IF NOT acrt420_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_crce_m_mask_o.* =  g_crce_m.*
   CALL acrt420_crce_t_mask()
   LET g_crce_m_mask_n.* =  g_crce_m.*
   
   
   
   #add-point:modify段show之前 name="modify.before_show"
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
   
   CALL acrt420_show()
   #add-point:modify段show之後 name="modify.after_show"
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
    
   WHILE TRUE
      LET g_crcedocno_t = g_crce_m.crcedocno
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_crce_m.crcemodid = g_user 
LET g_crce_m.crcemoddt = cl_get_current()
LET g_crce_m.crcemodid_desc = cl_get_username(g_crce_m.crcemodid)
      
      #add-point:modify段修改前 name="modify.before_input"
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      LET g_master_commit = "N"
      CALL acrt420_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後 name="modify.after_input"
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE crce_t SET (crcemodid,crcemoddt) = (g_crce_m.crcemodid,g_crce_m.crcemoddt)
          WHERE crceent = g_enterprise AND crcedocno = g_crcedocno_t
 
      END IF
    
      IF INT_FLAG THEN
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
         #若單頭無commit則還原
         IF g_master_commit = "N" THEN
            LET g_crce_m.* = g_crce_m_t.*
            CALL acrt420_show()
         END IF
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code = 9001 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_crce_m.crcedocno != g_crce_m_t.crcedocno
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前 name="modify.body.b_fk_update"
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE crcf_t SET crcfdocno = g_crce_m.crcedocno
 
          WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m_t.crcedocno
 
            
         #add-point:單身fk修改中 name="modify.body.m_fk_update"
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            #   INITIALIZE g_errparam TO NULL 
            #   LET g_errparam.extend = "crcf_t" 
            #   LET g_errparam.code = "std-00009" 
            #   LET g_errparam.popup = TRUE 
            #   CALL cl_err()
            #   CALL s_transaction_end('N','0')
            #   CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "crcf_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後 name="modify.body.a_fk_update"
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前 name="modify.body.b_fk_update2"
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE crcg_t
            SET crcgdocno = g_crce_m.crcedocno
 
          WHERE crcgent = g_enterprise AND
                crcgdocno = g_crcedocno_t
 
         #add-point:單身fk修改中 name="modify.body.m_fk_update2"
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "crcg_t" 
               LET g_errparam.code = "std-00009" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
            WHEN SQLCA.SQLCODE #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後 name="modify.body.a_fk_update2"
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL acrt420_set_act_visible()   
   CALL acrt420_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " crceent = " ||g_enterprise|| " AND",
                      " crcedocno = '", g_crce_m.crcedocno, "' "
 
   #填到對應位置
   CALL acrt420_browser_fill("")
 
   CLOSE acrt420_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL acrt420_msgcentre_notify('modify')
 
END FUNCTION 
{</section>}
 
{<section id="acrt420.input" >}
#+ 資料輸入
PRIVATE FUNCTION acrt420_input(p_cmd)
   #add-point:input段define(客製用) name="input.define_customerization"
   {<point name="input.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_ac_t                LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="input.define"
   {<point name="input.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="input.pre_function"
   {<point name="input.pre_function"/>}
   #end add-point
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcesite_desc,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crcedocno_desc, 
       g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006, 
       g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce008_desc,g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010, 
       g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceownid_desc,g_crce_m.crceowndp, 
       g_crce_m.crceowndp_desc,g_crce_m.crcecrtid,g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp,g_crce_m.crcecrtdp_desc, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemodid_desc,g_crce_m.crcemoddt,g_crce_m.crcecnfid, 
       g_crce_m.crcecnfid_desc,g_crce_m.crcecnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql name="input.define_sql"
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crcf001,crcf002,crcf003,crcfsite,crcfunit FROM crcf_t WHERE crcfent=?  
       AND crcfdocno=? AND crcf001=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql"
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrt420_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql name="input.define_sql2"
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT crcg003,crcg002,crcgsite,crcgunit FROM crcg_t WHERE crcgent=? AND crcgdocno=?  
       AND crcg001=? AND crcg002=? FOR UPDATE"
   #add-point:input段define_sql name="input.after_define_sql2"
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE acrt420_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql name="input.other_sql"
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL acrt420_set_entry(p_cmd)
   #add-point:set_entry後 name="input.after_set_entry"
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL acrt420_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002, 
       g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008, 
       g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit,g_crce_m.crcestus
   
   LET lb_reproduce = FALSE
   LET l_ac_t = 1
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前 name="input.before_input"
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
{</section>}
 
{<section id="acrt420.input.head" >}
      #單頭段
      INPUT BY NAME g_crce_m.crcesite,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002, 
          g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008, 
          g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit,g_crce_m.crcestus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN acrt420_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE acrt420_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL acrt420_set_entry(p_cmd)
            #add-point:資料輸入前 name="input.m.before_input"
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL acrt420_set_no_entry(p_cmd)
    
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcesite
            
            #add-point:AFTER FIELD crcesite name="input.a.crcesite"
            {<point name="input.a.crcesite" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcesite
            #add-point:BEFORE FIELD crcesite name="input.b.crcesite"
            {<point name="input.b.crcesite" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcesite
            #add-point:ON CHANGE crcesite name="input.g.crcesite"
            {<point name="input.g.crcesite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcedocdt
            #add-point:BEFORE FIELD crcedocdt name="input.b.crcedocdt"
            {<point name="input.b.crcedocdt" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcedocdt
            
            #add-point:AFTER FIELD crcedocdt name="input.a.crcedocdt"
            {<point name="input.a.crcedocdt" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcedocdt
            #add-point:ON CHANGE crcedocdt name="input.g.crcedocdt"
            {<point name="input.g.crcedocdt" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcedocno
            
            #add-point:AFTER FIELD crcedocno name="input.a.crcedocno"
            {<point name="input.a.crcedocno" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcedocno
            #add-point:BEFORE FIELD crcedocno name="input.b.crcedocno"
            {<point name="input.b.crcedocno" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcedocno
            #add-point:ON CHANGE crcedocno name="input.g.crcedocno"
            {<point name="input.g.crcedocno" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce001
            
            #add-point:AFTER FIELD crce001 name="input.a.crce001"
            {<point name="input.a.crce001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce001
            #add-point:BEFORE FIELD crce001 name="input.b.crce001"
            {<point name="input.b.crce001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce001
            #add-point:ON CHANGE crce001 name="input.g.crce001"
            {<point name="input.g.crce001" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce002
            
            #add-point:AFTER FIELD crce002 name="input.a.crce002"
            {<point name="input.a.crce002" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce002
            #add-point:BEFORE FIELD crce002 name="input.b.crce002"
            {<point name="input.b.crce002" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce002
            #add-point:ON CHANGE crce002 name="input.g.crce002"
            {<point name="input.g.crce002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce003
            #add-point:BEFORE FIELD crce003 name="input.b.crce003"
            {<point name="input.b.crce003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce003
            
            #add-point:AFTER FIELD crce003 name="input.a.crce003"
            {<point name="input.a.crce003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce003
            #add-point:ON CHANGE crce003 name="input.g.crce003"
            {<point name="input.g.crce003" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce004
            
            #add-point:AFTER FIELD crce004 name="input.a.crce004"
            {<point name="input.a.crce004" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce004
            #add-point:BEFORE FIELD crce004 name="input.b.crce004"
            {<point name="input.b.crce004" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce004
            #add-point:ON CHANGE crce004 name="input.g.crce004"
            {<point name="input.g.crce004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce005
            #add-point:BEFORE FIELD crce005 name="input.b.crce005"
            {<point name="input.b.crce005" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce005
            
            #add-point:AFTER FIELD crce005 name="input.a.crce005"
            {<point name="input.a.crce005" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce005
            #add-point:ON CHANGE crce005 name="input.g.crce005"
            {<point name="input.g.crce005" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce006
            #add-point:BEFORE FIELD crce006 name="input.b.crce006"
            {<point name="input.b.crce006" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce006
            
            #add-point:AFTER FIELD crce006 name="input.a.crce006"
            {<point name="input.a.crce006" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce006
            #add-point:ON CHANGE crce006 name="input.g.crce006"
            {<point name="input.g.crce006" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce007
            #add-point:BEFORE FIELD crce007 name="input.b.crce007"
            {<point name="input.b.crce007" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce007
            
            #add-point:AFTER FIELD crce007 name="input.a.crce007"
            {<point name="input.a.crce007" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce007
            #add-point:ON CHANGE crce007 name="input.g.crce007"
            {<point name="input.g.crce007" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce008
            
            #add-point:AFTER FIELD crce008 name="input.a.crce008"
            {<point name="input.a.crce008" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce008
            #add-point:BEFORE FIELD crce008 name="input.b.crce008"
            {<point name="input.b.crce008" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce008
            #add-point:ON CHANGE crce008 name="input.g.crce008"
            {<point name="input.g.crce008" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcb004
            #add-point:BEFORE FIELD crcb004 name="input.b.crcb004"
            {<point name="input.b.crcb004" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcb004
            
            #add-point:AFTER FIELD crcb004 name="input.a.crcb004"
            {<point name="input.a.crcb004" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcb004
            #add-point:ON CHANGE crcb004 name="input.g.crcb004"
            {<point name="input.g.crcb004" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce009
            #add-point:BEFORE FIELD crce009 name="input.b.crce009"
            {<point name="input.b.crce009" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce009
            
            #add-point:AFTER FIELD crce009 name="input.a.crce009"
            {<point name="input.a.crce009" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce009
            #add-point:ON CHANGE crce009 name="input.g.crce009"
            {<point name="input.g.crce009" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crce010
            #add-point:BEFORE FIELD crce010 name="input.b.crce010"
            {<point name="input.b.crce010" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crce010
            
            #add-point:AFTER FIELD crce010 name="input.a.crce010"
            {<point name="input.a.crce010" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crce010
            #add-point:ON CHANGE crce010 name="input.g.crce010"
            {<point name="input.g.crce010" />}
            #END add-point 
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crceunit
            
            #add-point:AFTER FIELD crceunit name="input.a.crceunit"
            {<point name="input.a.crceunit" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crceunit
            #add-point:BEFORE FIELD crceunit name="input.b.crceunit"
            {<point name="input.b.crceunit" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crceunit
            #add-point:ON CHANGE crceunit name="input.g.crceunit"
            {<point name="input.g.crceunit" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcestus
            #add-point:BEFORE FIELD crcestus name="input.b.crcestus"
            {<point name="input.b.crcestus" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcestus
            
            #add-point:AFTER FIELD crcestus name="input.a.crcestus"
            {<point name="input.a.crcestus" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcestus
            #add-point:ON CHANGE crcestus name="input.g.crcestus"
            {<point name="input.g.crcestus" />}
            #END add-point 
 
 
 #欄位檢查
                  #Ctrlp:input.c.crcesite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcesite
            #add-point:ON ACTION controlp INFIELD crcesite name="input.c.crcesite"
            {<point name="input.c.crcesite" />}
            #END add-point
 
 
         #Ctrlp:input.c.crcedocdt
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcedocdt
            #add-point:ON ACTION controlp INFIELD crcedocdt name="input.c.crcedocdt"
            {<point name="input.c.crcedocdt" />}
            #END add-point
 
 
         #Ctrlp:input.c.crcedocno
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcedocno
            #add-point:ON ACTION controlp INFIELD crcedocno name="input.c.crcedocno"
            {<point name="input.c.crcedocno" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce001
            #add-point:ON ACTION controlp INFIELD crce001 name="input.c.crce001"
            {<point name="input.c.crce001" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce002
            #add-point:ON ACTION controlp INFIELD crce002 name="input.c.crce002"
            {<point name="input.c.crce002" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce003
            #add-point:ON ACTION controlp INFIELD crce003 name="input.c.crce003"
            {<point name="input.c.crce003" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce004
            #add-point:ON ACTION controlp INFIELD crce004 name="input.c.crce004"
            {<point name="input.c.crce004" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce005
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce005
            #add-point:ON ACTION controlp INFIELD crce005 name="input.c.crce005"
            {<point name="input.c.crce005" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce006
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce006
            #add-point:ON ACTION controlp INFIELD crce006 name="input.c.crce006"
            {<point name="input.c.crce006" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce007
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce007
            #add-point:ON ACTION controlp INFIELD crce007 name="input.c.crce007"
            {<point name="input.c.crce007" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce008
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce008
            #add-point:ON ACTION controlp INFIELD crce008 name="input.c.crce008"
            {<point name="input.c.crce008" />}
            #END add-point
 
 
         #Ctrlp:input.c.crcb004
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcb004
            #add-point:ON ACTION controlp INFIELD crcb004 name="input.c.crcb004"
            {<point name="input.c.crcb004" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce009
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce009
            #add-point:ON ACTION controlp INFIELD crce009 name="input.c.crce009"
            {<point name="input.c.crce009" />}
            #END add-point
 
 
         #Ctrlp:input.c.crce010
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crce010
            #add-point:ON ACTION controlp INFIELD crce010 name="input.c.crce010"
            {<point name="input.c.crce010" />}
            #END add-point
 
 
         #Ctrlp:input.c.crceunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crceunit
            #add-point:ON ACTION controlp INFIELD crceunit name="input.c.crceunit"
            {<point name="input.c.crceunit" />}
            #END add-point
 
 
         #Ctrlp:input.c.crcestus
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcestus
            #add-point:ON ACTION controlp INFIELD crcestus name="input.c.crcestus"
            {<point name="input.c.crcestus" />}
            #END add-point
 
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_crce_m.crcedocno
                        
            #add-point:單頭INPUT後 name="input.head.after_input"
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前 name="input.head.b_insert"
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO crce_t (crceent,crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004, 
                   crce005,crce006,crce007,crce008,crce009,crce010,crceunit,crcestus,crceownid,crceowndp, 
                   crcecrtid,crcecrtdp,crcecrtdt,crcemodid,crcemoddt,crcecnfid,crcecnfdt)
               VALUES (g_enterprise,g_crce_m.crcesite,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crce001, 
                   g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006, 
                   g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
                   g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
                   g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt)  

               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_crce_m:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中 name="input.head.m_insert"
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後 name="input.head.a_insert"
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL acrt420_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL acrt420_b_fill()
                  CALL acrt420_b_fill2('0')
               END IF
               
               #add-point:單頭新增後 name="input.head.a_insert2"
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前 name="input.head.b_update"
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL acrt420_crce_t_mask_restore('restore_mask_o')
               
               UPDATE crce_t SET (crcesite,crcedocdt,crcedocno,crce001,crce002,crce003,crce004,crce005, 
                   crce006,crce007,crce008,crce009,crce010,crceunit,crcestus,crceownid,crceowndp,crcecrtid, 
                   crcecrtdp,crcecrtdt,crcemodid,crcemoddt,crcecnfid,crcecnfdt) = (g_crce_m.crcesite, 
                   g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003, 
                   g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008, 
                   g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid, 
                   g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp,g_crce_m.crcecrtdt,g_crce_m.crcemodid, 
                   g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt)
                WHERE crceent = g_enterprise AND crcedocno = g_crcedocno_t
 
               IF SQLCA.SQLCODE THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "crce_t:",SQLERRMESSAGE 
                  LET g_errparam.code = SQLCA.SQLCODE 
                  LET g_errparam.popup = TRUE 
                  CALL s_transaction_end('N','0')
                  CALL cl_err()
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中 name="input.head.m_update"
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL acrt420_crce_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_crce_m_t)
               LET g_log2 = util.JSON.stringify(g_crce_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後 name="input.head.a_update"
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_master_commit = "Y"
            LET g_crcedocno_t = g_crce_m.crcedocno
 
            
      END INPUT
   
{</section>}
 
{<section id="acrt420.input.body" >}
   
      #Page1 預設值產生於此處
      INPUT ARRAY g_crcf_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前 name="input.body.before_input2"
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crcf_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL acrt420_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'1',"))
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_crcf_d.getLength()
            #add-point:資料輸入前 name="input.d.before_input"
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2 name="input.body.before_row2"
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_detail_idx_list[1] = l_ac
            LET g_current_page = 1
            CALL acrt420_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN acrt420_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE acrt420_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_crcf_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_crcf_d[l_ac].crcf001 IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_crcf_d_t.* = g_crcf_d[l_ac].*  #BACKUP
               LET g_crcf_d_o.* = g_crcf_d[l_ac].*  #BACKUP
               CALL acrt420_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body.after_set_entry_b"
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL acrt420_set_no_entry_b(l_cmd)
               IF NOT acrt420_lock_b("crcf_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acrt420_bcl INTO g_crcf_d[l_ac].crcf001,g_crcf_d[l_ac].crcf002,g_crcf_d[l_ac].crcf003, 
                      g_crcf_d[l_ac].crcfsite,g_crcf_d[l_ac].crcfunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_crcf_d_t.crcf001,":",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_crcf_d_mask_o[l_ac].* =  g_crcf_d[l_ac].*
                  CALL acrt420_crcf_t_mask()
                  LET g_crcf_d_mask_n[l_ac].* =  g_crcf_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL acrt420_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body.before_row"
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
        
         BEFORE INSERT  
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crcf_d[l_ac].* TO NULL 
            INITIALIZE g_crcf_d_t.* TO NULL 
            INITIALIZE g_crcf_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_crcf_d[l_ac].crcc005 = "S"
      LET g_crcf_d[l_ac].crcc006 = "0"
      LET g_crcf_d[l_ac].crcf002 = "0"
 
            #add-point:modify段before備份 name="input.body.insert.before_bak"
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_crcf_d_t.* = g_crcf_d[l_ac].*     #新輸入資料
            LET g_crcf_d_o.* = g_crcf_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acrt420_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body.insert.after_set_entry_b"
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL acrt420_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crcf_d[li_reproduce_target].* = g_crcf_d[li_reproduce].*
 
               LET g_crcf_d[li_reproduce_target].crcf001 = NULL
 
            END IF
            
 
            #add-point:modify段before insert name="input.body.before_insert"
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增 name="input.body.b_a_insert"
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM crcf_t 
             WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
 
               AND crcf001 = g_crcf_d[l_ac].crcf001
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前 name="input.body.b_insert"
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               CALL acrt420_insert_b('crcf_t',gs_keys,"'1'")
                           
               #add-point:單身新增後 name="input.body.a_insert"
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               INITIALIZE g_crcf_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "crcf_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL acrt420_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert name="input.body.a_insert2"
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d) name="input.body.after_delete_d"
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body.b_delete_ask"
               {<point name="input.body.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前 name="input.body.b_delete"
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_crce_m.crcedocno
 
               LET gs_keys[gs_keys.getLength()+1] = g_crcf_d_t.crcf001
 
            
               #刪除同層單身
               IF NOT acrt420_delete_b('crcf_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE acrt420_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT acrt420_key_delete_b(gs_keys,'crcf_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE acrt420_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身刪除中 name="input.body.m_delete"
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE acrt420_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後 name="input.body.a_delete"
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_crcf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body.after_delete"
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_crcf_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcf001
            
            #add-point:AFTER FIELD crcf001 name="input.a.page1.crcf001"
            {<point name="input.a.page1.crcf001" />}
            #END add-point
            
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcf001
            #add-point:BEFORE FIELD crcf001 name="input.b.page1.crcf001"
            {<point name="input.b.page1.crcf001" />}
            #END add-point
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcf001
            #add-point:ON CHANGE crcf001 name="input.g.page1.crcf001"
            {<point name="input.g.page1.crcf001" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcf002
            #add-point:BEFORE FIELD crcf002 name="input.b.page1.crcf002"
            {<point name="input.b.page1.crcf002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcf002
            
            #add-point:AFTER FIELD crcf002 name="input.a.page1.crcf002"
            {<point name="input.a.page1.crcf002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcf002
            #add-point:ON CHANGE crcf002 name="input.g.page1.crcf002"
            {<point name="input.g.page1.crcf002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcf003
            #add-point:BEFORE FIELD crcf003 name="input.b.page1.crcf003"
            {<point name="input.b.page1.crcf003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcf003
            
            #add-point:AFTER FIELD crcf003 name="input.a.page1.crcf003"
            {<point name="input.a.page1.crcf003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcf003
            #add-point:ON CHANGE crcf003 name="input.g.page1.crcf003"
            {<point name="input.g.page1.crcf003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcfsite
            #add-point:BEFORE FIELD crcfsite name="input.b.page1.crcfsite"
            {<point name="input.b.page1.crcfsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcfsite
            
            #add-point:AFTER FIELD crcfsite name="input.a.page1.crcfsite"
            {<point name="input.a.page1.crcfsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcfsite
            #add-point:ON CHANGE crcfsite name="input.g.page1.crcfsite"
            {<point name="input.g.page1.crcfsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcfunit
            #add-point:BEFORE FIELD crcfunit name="input.b.page1.crcfunit"
            {<point name="input.b.page1.crcfunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcfunit
            
            #add-point:AFTER FIELD crcfunit name="input.a.page1.crcfunit"
            {<point name="input.a.page1.crcfunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcfunit
            #add-point:ON CHANGE crcfunit name="input.g.page1.crcfunit"
            {<point name="input.g.page1.crcfunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page1.crcf001
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcf001
            #add-point:ON ACTION controlp INFIELD crcf001 name="input.c.page1.crcf001"
            {<point name="input.c.page1.crcf001" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.crcf002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcf002
            #add-point:ON ACTION controlp INFIELD crcf002 name="input.c.page1.crcf002"
            {<point name="input.c.page1.crcf002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.crcf003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcf003
            #add-point:ON ACTION controlp INFIELD crcf003 name="input.c.page1.crcf003"
            {<point name="input.c.page1.crcf003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.crcfsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcfsite
            #add-point:ON ACTION controlp INFIELD crcfsite name="input.c.page1.crcfsite"
            {<point name="input.c.page1.crcfsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page1.crcfunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcfunit
            #add-point:ON ACTION controlp INFIELD crcfunit name="input.c.page1.crcfunit"
            {<point name="input.c.page1.crcfunit" />}
            #END add-point
 
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_crcf_d[l_ac].* = g_crcf_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE acrt420_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_crcf_d[l_ac].crcf001 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_crcf_d[l_ac].* = g_crcf_d_t.*
            ELSE
            
               #add-point:單身修改前 name="input.body.b_update"
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL acrt420_crcf_t_mask_restore('restore_mask_o')
      
               UPDATE crcf_t SET (crcfdocno,crcf001,crcf002,crcf003,crcfsite,crcfunit) = (g_crce_m.crcedocno, 
                   g_crcf_d[l_ac].crcf001,g_crcf_d[l_ac].crcf002,g_crcf_d[l_ac].crcf003,g_crcf_d[l_ac].crcfsite, 
                   g_crcf_d[l_ac].crcfunit)
                WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno 
 
                  AND crcf001 = g_crcf_d_t.crcf001 #項次   
 
                  
               #add-point:單身修改中 name="input.body.m_update"
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_crcf_d[l_ac].* = g_crcf_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "crcf_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_crcf_d[l_ac].* = g_crcf_d_t.*  
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "crcf_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()                   
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys_bak[1] = g_crcedocno_t
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys_bak[2] = g_crcf_d_t.crcf001
               CALL acrt420_update_b('crcf_t',gs_keys,gs_keys_bak,"'1'")
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL acrt420_crcf_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_crcf_d[g_detail_idx].crcf001 = g_crcf_d_t.crcf001 
 
                  ) THEN
                  LET gs_keys[01] = g_crce_m.crcedocno
 
                  LET gs_keys[gs_keys.getLength()+1] = g_crcf_d_t.crcf001
 
                  CALL acrt420_key_update_b(gs_keys,'crcf_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf_d_t)
               LET g_log2 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後 name="input.body.a_update"
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row name="input.body.after_row"
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL acrt420_unlock_b("crcf_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2 name="input.body.after_row2"
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input  name="input.body.after_input"
            {<point name="input.body.after_input"/>}
            #end add-point 
    
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_crcf_d[li_reproduce_target].* = g_crcf_d[li_reproduce].*
 
               LET g_crcf_d[li_reproduce_target].crcf001 = NULL
 
            ELSE
               CALL FGL_SET_ARR_CURR(g_crcf_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_crcf_d.getLength()+1
            END IF
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_crcf2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = FALSE, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = FALSE,
                 APPEND ROW = FALSE)
                 
         #自訂ACTION(detail_input,page_2)
         
        
         BEFORE INPUT
            #先將上層單身的idx放入g_detail_idx
            LET g_detail_idx_tmp = g_detail_idx
            LET g_detail_idx = g_detail_idx_list[1]
            #檢查上層單身是否為空
            IF g_detail_idx = 0 OR g_crcf_d.getLength() = 0 THEN
               NEXT FIELD crcf001
            END IF
            #檢查上層單身是否有資料
            IF cl_null(g_crcf_d[g_detail_idx].crcf001) THEN
               NEXT FIELD crcf001
            END IF
            #add-point:資料輸入前 name="input.body2.before_input2"
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_crcf2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_idx_group.getValue("'2',"))
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_crcf2_d.getLength()
            #add-point:資料輸入前 name="input.body2.before_input"
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_crcf2_d[l_ac].* TO NULL 
            INITIALIZE g_crcf2_d_t.* TO NULL 
            INITIALIZE g_crcf2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_crcf2_d[l_ac].crcg003 = "N"
 
            #add-point:modify段before備份 name="input.body2.insert.before_bak"
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_crcf2_d_t.* = g_crcf2_d[l_ac].*     #新輸入資料
            LET g_crcf2_d_o.* = g_crcf2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL acrt420_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b name="input.body2.insert.after_set_entry_b"
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL acrt420_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_crcf2_d[li_reproduce_target].* = g_crcf2_d[li_reproduce].*
 
               LET g_crcf2_d[li_reproduce_target].crcg002 = NULL
            END IF
            
 
            #add-point:modify段before insert name="input.body2.before_insert"
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2 name="input.body2.before_row2"
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac_t = l_ac 
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_detail_idx_list[2] = l_ac
            LET g_current_page = 2
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
            #(ver:78) ---start---
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN acrt420_cl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE
               LET g_errparam.popup = TRUE 
               CLOSE acrt420_cl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            #(ver:78) --- end ---
            OPEN acrt420_bcl USING g_enterprise,g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001
            IF SQLCA.SQLCODE THEN   #(ver:78)
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN acrt420_bcl:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
               LET g_errparam.popup = TRUE 
               CLOSE acrt420_cl
               CLOSE acrt420_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               RETURN
            END IF
            
            LET g_rec_b = g_crcf2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_crcf2_d[l_ac].crcg002 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_crcf2_d_t.* = g_crcf2_d[l_ac].*  #BACKUP
               LET g_crcf2_d_o.* = g_crcf2_d[l_ac].*  #BACKUP
               CALL acrt420_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b name="input.body2.after_set_entry_b"
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL acrt420_set_no_entry_b(l_cmd)
               IF NOT acrt420_lock_b("crcg_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH acrt420_bcl2 INTO g_crcf2_d[l_ac].crcg003,g_crcf2_d[l_ac].crcg002,g_crcf2_d[l_ac].crcgsite, 
                      g_crcf2_d[l_ac].crcgunit
                  IF SQLCA.SQLCODE THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_crcf2_d_mask_o[l_ac].* =  g_crcf2_d[l_ac].*
                  CALL acrt420_crcg_t_mask()
                  LET g_crcf2_d_mask_n[l_ac].* =  g_crcf2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL acrt420_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row name="input.body2.before_row"
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
 
            #其他table進行lock
            
 
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d) name="input.body2.after_delete_d"
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               #add-point:單身刪除前 name="input.body2.b_delete_ask"
               {<point name="input.body2.b_delete_ask" />}
               #end add-point 
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code = -263 
                  LET g_errparam.popup = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前 name="input.body2.b_delete"
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
 
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys[3] = g_crcf2_d_t.crcg002
 
 
               #刪除同層單身
               IF NOT acrt420_delete_b('crcg_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE acrt420_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
 
               
               #add-point:單身2刪除中 name="input.body2.m_delete"
               {<point name="input.body2.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE acrt420_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後 name="input.body2.a_delete"
               {<point name="input.body2.a_delete"/>}
               #end add-point
 
               LET l_count = g_crcf_d.getLength()
               
               #add-point:單身刪除後(<>d) name="input.body2.after_delete"
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_crcf2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前 name="input.body2.b_a_insert"
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(1) INTO l_count FROM crcg_t 
             WHERE crcgent = g_enterprise AND crcgdocno = g_crce_m.crcedocno AND crcg001 = g_crcf_d[g_detail_idx].crcf001  
                 AND crcg002 = g_crcf2_d[g_detail_idx2].crcg002
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前 name="input.body2.b_insert"
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys[3] = g_crcf2_d[g_detail_idx2].crcg002
               CALL acrt420_insert_b('crcg_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2 name="input.body2.a_insert"
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_crcf_d[l_ac].* TO NULL
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code = "std-00006" 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')
               CALL cl_err()
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL s_transaction_end('N','0')                    
               CALL cl_err()
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL acrt420_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後 name="input.body2.after_insert"
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
            #還原g_detail_idx
            LET g_detail_idx = g_detail_idx_tmp
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE acrt420_bcl2
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = -263 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
            ELSE
               #add-point:單身page2修改前 name="input.body2.b_update"
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL acrt420_crcg_t_mask_restore('restore_mask_o')
               
               UPDATE crcg_t SET (crcgdocno,crcg001,crcg003,crcg002,crcgsite,crcgunit) = (g_crce_m.crcedocno, 
                   g_crcf_d[g_detail_idx].crcf001,g_crcf2_d[l_ac].crcg003,g_crcf2_d[l_ac].crcg002,g_crcf2_d[l_ac].crcgsite, 
                   g_crcf2_d[l_ac].crcgunit) #自訂欄位頁簽
                WHERE crcgent = g_enterprise AND crcgdocno = g_crcedocno_t AND crcg001 = g_crcf_d[g_detail_idx].crcf001  
                    AND crcg002 = g_crcf2_d_t.crcg002
                  
               #add-point:單身page2修改中 name="input.body2.m_update"
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "crcg_t" 
                     LET g_errparam.code = "std-00009" 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  WHEN SQLCA.SQLCODE #其他錯誤
                     LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
                     LET g_errparam.code = SQLCA.SQLCODE 
                     LET g_errparam.popup = TRUE 
                     CALL s_transaction_end('N','0')
                     CALL cl_err()
                     
                  OTHERWISE
                     #資料多語言用-增/改
                     
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_crce_m.crcedocno
               LET gs_keys_bak[1] = g_crcedocno_t
               LET gs_keys[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys_bak[2] = g_crcf_d[g_detail_idx].crcf001
               LET gs_keys[3] = g_crcf2_d[g_detail_idx2].crcg002
               LET gs_keys_bak[3] = g_crcf2_d_t.crcg002
               CALL acrt420_update_b('crcg_t',gs_keys,gs_keys_bak,"'2'")
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL acrt420_crcg_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf2_d_t)
               LET g_log2 = util.JSON.stringify(g_crce_m),util.JSON.stringify(g_crcf2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後 name="input.body2.a_update"
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcg003
            #add-point:BEFORE FIELD crcg003 name="input.b.page2.crcg003"
            {<point name="input.b.page2.crcg003" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcg003
            
            #add-point:AFTER FIELD crcg003 name="input.a.page2.crcg003"
            {<point name="input.a.page2.crcg003" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcg003
            #add-point:ON CHANGE crcg003 name="input.g.page2.crcg003"
            {<point name="input.g.page2.crcg003" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcg002
            #add-point:BEFORE FIELD crcg002 name="input.b.page2.crcg002"
            {<point name="input.b.page2.crcg002" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcg002
            
            #add-point:AFTER FIELD crcg002 name="input.a.page2.crcg002"
            {<point name="input.a.page2.crcg002" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcg002
            #add-point:ON CHANGE crcg002 name="input.g.page2.crcg002"
            {<point name="input.g.page2.crcg002" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcgsite
            #add-point:BEFORE FIELD crcgsite name="input.b.page2.crcgsite"
            {<point name="input.b.page2.crcgsite" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcgsite
            
            #add-point:AFTER FIELD crcgsite name="input.a.page2.crcgsite"
            {<point name="input.a.page2.crcgsite" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcgsite
            #add-point:ON CHANGE crcgsite name="input.g.page2.crcgsite"
            {<point name="input.g.page2.crcgsite" />}
            #END add-point 
 
 
         #應用 a01 樣板自動產生(Version:2)
         BEFORE FIELD crcgunit
            #add-point:BEFORE FIELD crcgunit name="input.b.page2.crcgunit"
            {<point name="input.b.page2.crcgunit" />}
            #END add-point
 
 
         #應用 a02 樣板自動產生(Version:2)
         AFTER FIELD crcgunit
            
            #add-point:AFTER FIELD crcgunit name="input.a.page2.crcgunit"
            {<point name="input.a.page2.crcgunit" />}
            #END add-point
            
 
 
         #應用 a04 樣板自動產生(Version:3)
         ON CHANGE crcgunit
            #add-point:ON CHANGE crcgunit name="input.g.page2.crcgunit"
            {<point name="input.g.page2.crcgunit" />}
            #END add-point 
 
 
 
                  #Ctrlp:input.c.page2.crcg003
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcg003
            #add-point:ON ACTION controlp INFIELD crcg003 name="input.c.page2.crcg003"
            {<point name="input.c.page2.crcg003" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.crcg002
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcg002
            #add-point:ON ACTION controlp INFIELD crcg002 name="input.c.page2.crcg002"
            {<point name="input.c.page2.crcg002" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.crcgsite
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcgsite
            #add-point:ON ACTION controlp INFIELD crcgsite name="input.c.page2.crcgsite"
            {<point name="input.c.page2.crcgsite" />}
            #END add-point
 
 
         #Ctrlp:input.c.page2.crcgunit
         #應用 a03 樣板自動產生(Version:3)
         ON ACTION controlp INFIELD crcgunit
            #add-point:ON ACTION controlp INFIELD crcgunit name="input.c.page2.crcgunit"
            {<point name="input.c.page2.crcgunit" />}
            #END add-point
 
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row name="input.body2.after_row"
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_crcf2_d[l_ac].* = g_crcf2_d_t.*
               END IF
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code = 9001 
               LET g_errparam.popup = FALSE 
               CLOSE acrt420_bcl2
               CLOSE acrt420_bcl
               CALL s_transaction_end('N','0')
               CALL cl_err()
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL acrt420_unlock_b("crcg_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2_after_row2 name="input.body2.after_row2"
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input  name="input.body2.after_input"
            {<point name="input.body2.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            IF l_insert THEN
               LET li_reproduce = l_ac_t
               LET li_reproduce_target = l_ac
               LET g_crcf2_d[li_reproduce_target].* = g_crcf2_d[li_reproduce].*
 
               LET g_crcf2_d[li_reproduce_target].crcg002 = NULL
            ELSE
               CALL FGL_SET_ARR_CURR(g_crcf2_d.getLength()+1)
               LET lb_reproduce = TRUE
               LET li_reproduce = l_ac
               LET li_reproduce_target = g_crcf2_d.getLength()+1
            END IF
        
      END INPUT
 
 
 
{</section>}
 
{<section id="acrt420.input.other" >}
      
      #add-point:自定義input name="input.more_input"
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog name="input.before_dialog"
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_idx_group.getValue("'1',"))      
         CALL DIALOG.setCurrentRow("s_detail2",g_idx_group.getValue("'2',"))
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field name="input.next_field"
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD crcedocno
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD crcf001
               WHEN "s_detail2"
                  NEXT FIELD crcg003
 
               #add-point:input段modify_detail  name="input.modify_detail.other"
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog name="input.after_dialog"
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept  name="input.accept"
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel name="input.cancel"
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close name="input.close"
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit name="input.exit"
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         #各個page指標
         LET g_detail_idx_list[1] = 1 
         LET g_detail_idx_list[2] = 1
 
         CALL g_curr_diag.setCurrentRow("s_detail1",1)    
         CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input  name="input.after_input"
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
{</section>}
 
{<section id="acrt420.show" >}
#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION acrt420_show()
   #add-point:show段define(客製用) name="show.define_customerization"
   {<point name="show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="show.define"
   {<point name="show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="show.before"
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL acrt420_b_fill() #單身填充
      CALL acrt420_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:4)
 
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:3)
   CALL acrt420_set_pk_array()
   #add-point:ON ACTION agendum name="show.follow_pic"
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference name="show.head.reference"
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_crce_m_mask_o.* =  g_crce_m.*
   CALL acrt420_crce_t_mask()
   LET g_crce_m_mask_n.* =  g_crce_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcesite_desc,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crcedocno_desc, 
       g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006, 
       g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce008_desc,g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010, 
       g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceownid_desc,g_crce_m.crceowndp, 
       g_crce_m.crceowndp_desc,g_crce_m.crcecrtid,g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp,g_crce_m.crcecrtdp_desc, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemodid_desc,g_crce_m.crcemoddt,g_crce_m.crcecnfid, 
       g_crce_m.crcecnfid_desc,g_crce_m.crcecnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_crce_m.crcestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_crcf_d.getLength()
      #add-point:show段單身reference name="show.body.reference"
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_crcf2_d.getLength()
      #add-point:show段單身reference name="show.body2.reference"
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other name="show.other"
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL acrt420_detail_show()
 
   #add-point:show段之後 name="show.after"
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="acrt420.detail_show" >}
#+ 第二階單身reference
PRIVATE FUNCTION acrt420_detail_show()
   #add-point:detail_show段define(客製用) name="detail_show.define_customerization"
   {<point name="detail_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:detail_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_show.define"
   {<point name="detail_show.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="detail_show.before"
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後 name="detail_show.after"
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
{</section>}
 
{<section id="acrt420.reproduce" >}
#+ 資料複製
PRIVATE FUNCTION acrt420_reproduce()
   #add-point:reproduce段define(客製用) name="reproduce.define_customerization"
   {<point name="reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE l_newno     LIKE crce_t.crcedocno 
   DEFINE l_oldno     LIKE crce_t.crcedocno 
 
   DEFINE l_master    RECORD LIKE crce_t.* #此變數樣板目前無使用
   DEFINE l_detail    RECORD LIKE crcf_t.* #此變數樣板目前無使用
 
   DEFINE l_detail2    RECORD LIKE crcg_t.* #此變數樣板目前無使用
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="reproduce.define"
   {<point name="reproduce.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="reproduce.pre_function"
   {<point name="reproduce.pre_function"/>}
   #end add-point
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_crcedocno_t = g_crce_m.crcedocno
 
    
   LET g_crce_m.crcedocno = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:5)    
      #公用欄位新增給值  
      LET g_crce_m.crceownid = g_user
      LET g_crce_m.crceowndp = g_dept
      LET g_crce_m.crcecrtid = g_user
      LET g_crce_m.crcecrtdp = g_dept 
      LET g_crce_m.crcecrtdt = cl_get_current()
      LET g_crce_m.crcemodid = g_user
      LET g_crce_m.crcemoddt = cl_get_current()
      LET g_crce_m.crcestus = 'N'
 
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前 name="reproduce.head.b_input"
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:3)
	  #根據當下狀態碼顯示圖片
      CASE g_crce_m.crcestus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
 
   
   #清空key欄位的desc
      LET g_crce_m.crcedocno_desc = ''
   DISPLAY BY NAME g_crce_m.crcedocno_desc
 
   
   CALL acrt420_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_crce_m.* TO NULL
      INITIALIZE g_crcf_d TO NULL
      INITIALIZE g_crcf2_d TO NULL
 
      #add-point:複製取消後 name="reproduce.cancel"
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL acrt420_show()
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code = 9001 
      LET g_errparam.popup = FALSE 
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL acrt420_set_act_visible()   
   CALL acrt420_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_crcedocno_t = g_crce_m.crcedocno
 
   
   #組合新增資料的條件
   LET g_add_browse = " crceent = " ||g_enterprise|| " AND",
                      " crcedocno = '", g_crce_m.crcedocno, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL acrt420_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後 name="reproduce.after_reproduce"
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL acrt420_idx_chk()
   
   LET g_data_owner = g_crce_m.crceownid      
   LET g_data_dept  = g_crce_m.crceowndp
   
   #功能已完成,通報訊息中心
   CALL acrt420_msgcentre_notify('reproduce')
 
END FUNCTION
{</section>}
 
{<section id="acrt420.detail_reproduce" >}
#+ 單身自動複製
PRIVATE FUNCTION acrt420_detail_reproduce()
   #add-point:delete段define(客製用) name="detail_reproduce.define_customerization"
   {<point name="detail_reproduce.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE crcf_t.* #此變數樣板目前無使用
 
   DEFINE l_detail2    RECORD LIKE crcg_t.* #此變數樣板目前無使用
 
 
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="detail_reproduce.define"
   {<point name="detail_reproduce.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="detail_reproduce.pre_function"
   {<point name="detail_reproduce.pre_function"/>}
   #end add-point
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE acrt420_detail
   
   #add-point:單身複製前1 name="detail_reproduce.body.table1.b_insert"
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM crcf_t
    WHERE crcfent = g_enterprise AND crcfdocno = g_crcedocno_t
 
    INTO TEMP acrt420_detail
 
   #將key修正為調整後   
   UPDATE acrt420_detail 
      #更新key欄位
      SET crcfdocno = g_crce_m.crcedocno
 
      #更新共用欄位
      
 
   #add-point:單身修改前 name="detail_reproduce.body.table1.b_update"
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO crcf_t SELECT * FROM acrt420_detail
   
   IF SQLCA.SQLCODE THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE 
      LET g_errparam.popup = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1 name="detail_reproduce.body.table1.m_insert"
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE acrt420_detail
   
   #add-point:單身複製後1 name="detail_reproduce.body.table1.a_insert"
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前 name="detail_reproduce.body.table2.b_insert"
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   SELECT * FROM crcg_t 
    WHERE crcgent = g_enterprise AND crcgdocno = g_crcedocno_t
 
    INTO TEMP acrt420_detail
 
   #將key修正為調整後   
   UPDATE acrt420_detail SET crcgdocno = g_crce_m.crcedocno
 
  
   #add-point:單身修改前 name="detail_reproduce.body.table2.b_update"
   {<point name="detail_reproduce.body.table2.b_update"/>}
   #end add-point    
  
   #將資料塞回原table   
   INSERT INTO crcg_t SELECT * FROM acrt420_detail
   
   #add-point:單身複製中 name="detail_reproduce.body.table2.m_insert"
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE acrt420_detail
   
   LET g_data_owner = g_crce_m.crceownid      
   LET g_data_dept  = g_crce_m.crceowndp
   
   #add-point:單身複製後 name="detail_reproduce.body.table2.a_insert"
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_crcedocno_t = g_crce_m.crcedocno
 
   
END FUNCTION
{</section>}
 
{<section id="acrt420.delete" >}
#+ 資料刪除
PRIVATE FUNCTION acrt420_delete()
   #add-point:delete段define(客製用) name="delete.define_customerization"
   {<point name="delete.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete.define"
   {<point name="delete.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete.pre_function"
   {<point name="delete.pre_function"/>}
   #end add-point
   
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code = "std-00003" 
      LET g_errparam.popup = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
   IF SQLCA.SQLCODE THEN   #(ver:78)
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN acrt420_cl:",SQLERRMESSAGE 
      LET g_errparam.code = SQLCA.SQLCODE   #(ver:78)
      LET g_errparam.popup = TRUE 
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      CALL cl_err()
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   
   
   #檢查是否允許此動作
   IF NOT acrt420_action_chk() THEN
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_crce_m_mask_o.* =  g_crce_m.*
   CALL acrt420_crce_t_mask()
   LET g_crce_m_mask_n.* =  g_crce_m.*
   
   CALL acrt420_show()
   
   #add-point:delete段before ask name="delete.before_ask"
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前 name="delete.head.b_delete"
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:4)
      #刪除相關文件
      CALL acrt420_set_pk_array()
      #add-point:相關文件刪除前 name="delete.befroe.related_document_remove"
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
 
  
  
      #資料備份
      LET g_crcedocno_t = g_crce_m.crcedocno
 
 
      DELETE FROM crce_t
       WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
 
       
      #add-point:單頭刪除中 name="delete.head.m_delete"
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_crce_m.crcedocno,":",SQLERRMESSAGE  
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF
      
      #add-point:單頭刪除後 name="delete.head.a_delete"
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前 name="delete.body.b_delete"
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM crcf_t
       WHERE crcfent = g_enterprise AND crcfdocno = g_crce_m.crcedocno
 
 
      #add-point:單身刪除中 name="delete.body.m_delete"
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "crcf_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF    
 
      #add-point:單身刪除後 name="delete.body.a_delete"
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前 name="delete.body.b_delete2"
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM crcg_t
       WHERE crcgent = g_enterprise AND
             crcgdocno = g_crce_m.crcedocno
      #add-point:單身刪除中 name="delete.body.m_delete2"
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL s_transaction_end('N','0')
         CALL cl_err()
         RETURN
      END IF      
 
      #add-point:單身刪除後 name="delete.body.a_delete2"
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      LET g_log1 = util.JSON.stringify(g_crce_m)   #(ver:78)
      IF NOT cl_log_modified_record(g_log1,'') THEN    #(ver:78)
         CLOSE acrt420_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_crcf_d.clear() 
      CALL g_crcf2_d.clear()       
 
     
      CALL acrt420_ui_browser_refresh()  
      #CALL acrt420_ui_headershow()  
      #CALL acrt420_ui_detailshow()
 
      #add-point:多語言刪除 name="delete.lang.before_delete"
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
      
 
   
      #add-point:多語言刪除 name="delete.lang.delete"
      {<point name="delete.lang.delete"/>}
      #end add-point
      
      IF g_browser_cnt > 0 THEN 
         #CALL acrt420_browser_fill("")
         CALL acrt420_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
      
      CALL s_transaction_end('Y','0')
   ELSE
      CALL s_transaction_end('N','0')
   END IF
 
   CLOSE acrt420_cl
 
   #功能已完成,通報訊息中心
   CALL acrt420_msgcentre_notify('delete')
    
END FUNCTION
{</section>}
 
{<section id="acrt420.b_fill" >}
#+ 單身陣列填充
PRIVATE FUNCTION acrt420_b_fill()
   #add-point:b_fill段define(客製用) name="b_fill.define_customerization"
   {<point name="b_fill.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill.define"
   {<point name="b_fill.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="b_fill.pre_function"
   {<point name="b_fill.pre_function"/>}
   #end add-point
   
   #清空第一階單身
   CALL g_crcf_d.clear()
 
 
   #add-point:b_fill段sql_before name="b_fill.sql_before"
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF acrt420_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF (g_action_choice = "query" OR cl_null(g_action_choice))
      #add-point:b_fill段long_sql_if name="b_fill.long_sql_if"
      {<point name="b_fill.long_sql_if"/>}
      #end add-point
      THEN
         LET g_sql = "SELECT  DISTINCT crcf001,crcf002,crcf003,crcfsite,crcfunit  FROM crcf_t",   
                     " INNER JOIN crce_t ON crceent = " ||g_enterprise|| " AND crcedocno = crcfdocno ",
 
                     #"",
                     " LEFT JOIN crcg_t ON crcfent = crcgent AND crcfdocno = crcgdocno AND crcf001 = crcg001 ",
                     "",
                     #下層單身所需的join條件
                     " ",
 
 
                     
                     " WHERE crcfent=? AND crcfdocno=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before name="b_fill.body.fill_sql"
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY crcf_t.crcf001"
         
         #add-point:單身填充控制 name="b_fill.sql"
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE acrt420_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR acrt420_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
   #  OPEN b_fill_cs USING g_enterprise,g_crce_m.crcedocno   #(ver:78)
                                               
      FOREACH b_fill_cs USING g_enterprise,g_crce_m.crcedocno INTO g_crcf_d[l_ac].crcf001,g_crcf_d[l_ac].crcf002, 
          g_crcf_d[l_ac].crcf003,g_crcf_d[l_ac].crcfsite,g_crcf_d[l_ac].crcfunit   #(ver:78)
         IF SQLCA.SQLCODE THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充 name="b_fill.fill"
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
    
 
   
   #add-point:browser_fill段其他table處理 name="browser_fill.other_fill"
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_crcf_d.deleteElement(g_crcf_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE acrt420_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_crcf_d.getLength()
      LET g_crcf_d_mask_o[l_ac].* =  g_crcf_d[l_ac].*
      CALL acrt420_crcf_t_mask()
      LET g_crcf_d_mask_n[l_ac].* =  g_crcf_d[l_ac].*
   END FOR
   
   LET g_crcf2_d_mask_o.* =  g_crcf2_d.*
   FOR l_ac = 1 TO g_crcf2_d.getLength()
      LET g_crcf2_d_mask_o[l_ac].* =  g_crcf2_d[l_ac].*
      CALL acrt420_crcg_t_mask()
      LET g_crcf2_d_mask_n[l_ac].* =  g_crcf2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
{</section>}
 
{<section id="acrt420.delete_b" >}
#+ 刪除單身後其他table連動
PRIVATE FUNCTION acrt420_delete_b(ps_table,ps_keys_bak,ps_page)
   #add-point:delete_b段define(客製用) name="delete_b.define_customerization"
   {<point name="delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="delete_b.define"
   {<point name="delete_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="delete_b.pre_function"
   {<point name="delete_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete"
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM crcf_t
       WHERE crcfent = g_enterprise AND
         crcfdocno = ps_keys_bak[1] AND crcf001 = ps_keys_bak[2]
      #add-point:delete_b段刪除中 name="delete_b.m_delete"
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = ":",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_crcf_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前 name="delete_b.b_delete2"
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM crcg_t
       WHERE crcgent = g_enterprise AND
             crcgdocno = ps_keys_bak[1] AND crcg001 = ps_keys_bak[2] AND crcg002 = ps_keys_bak[3]
      #add-point:delete_b段刪除中 name="delete_b.m_delete2"
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_crcf2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後 name="delete_b.a_delete2"
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other name="delete_b.other"
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="acrt420.insert_b" >}
#+ 新增單身後其他table連動
PRIVATE FUNCTION acrt420_insert_b(ps_table,ps_keys,ps_page)
   #add-point:insert_b段define(客製用) name="insert_b.define_customerization"
   {<point name="insert_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="insert_b.define"
   {<point name="insert_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="insert_b.pre_function"
   {<point name="insert_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert"
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO crcf_t
                  (crcfent,
                   crcfdocno,
                   crcf001
                   ,crcf002,crcf003,crcfsite,crcfunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2]
                   ,g_crcf_d[g_detail_idx].crcf002,g_crcf_d[g_detail_idx].crcf003,g_crcf_d[g_detail_idx].crcfsite, 
                       g_crcf_d[g_detail_idx].crcfunit)
      #add-point:insert_b段資料新增中 name="insert_b.m_insert"
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "crcf_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_crcf_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert"
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前 name="insert_b.before_insert2"
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO crcg_t
                  (crcgent,
                   crcgdocno,crcg001,
                   crcg002
                   ,crcg003,crcgsite,crcgunit) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3]
                   ,g_crcf2_d[g_detail_idx2].crcg003,g_crcf2_d[g_detail_idx2].crcgsite,g_crcf2_d[g_detail_idx2].crcgunit) 

      #add-point:insert_b段資料新增中 name="insert_b.m_insert2"
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_crcf2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後 name="insert_b.after_insert2"
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other name="insert_b.other"
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
{</section>}
 
{<section id="acrt420.update_b" >}
#+ 修改單身後其他table連動
PRIVATE FUNCTION acrt420_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   #add-point:update_b段define(客製用) name="update_b.define_customerization"
   {<point name="update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="update_b.define"
   {<point name="update_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="update_b.pre_function"
   {<point name="update_b.pre_function"/>}
   #end add-point
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcf_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update"
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL acrt420_crcf_t_mask_restore('restore_mask_o')
               
      UPDATE crcf_t 
         SET (crcfdocno,
              crcf001
              ,crcf002,crcf003,crcfsite,crcfunit) 
              = 
             (ps_keys[1],ps_keys[2]
              ,g_crcf_d[g_detail_idx].crcf002,g_crcf_d[g_detail_idx].crcf003,g_crcf_d[g_detail_idx].crcfsite, 
                  g_crcf_d[g_detail_idx].crcfunit) 
         WHERE crcfent = g_enterprise AND crcfdocno = ps_keys_bak[1] AND crcf001 = ps_keys_bak[2]
      #add-point:update_b段修改中 name="update_b.m_update"
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "crcf_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "crcf_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL acrt420_crcf_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update"
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
   
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "crcg_t" THEN
      #add-point:update_b段修改前 name="update_b.before_update2"
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL acrt420_crcg_t_mask_restore('restore_mask_o')
               
      UPDATE crcg_t 
         SET (crcgdocno,crcg001,
              crcg002
              ,crcg003,crcgsite,crcgunit) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3]
              ,g_crcf2_d[g_detail_idx2].crcg003,g_crcf2_d[g_detail_idx2].crcgsite,g_crcf2_d[g_detail_idx2].crcgunit)  

         WHERE crcgent = g_enterprise AND crcgdocno = ps_keys_bak[1] AND crcg001 = ps_keys_bak[2] AND crcg002 = ps_keys_bak[3]
      #add-point:update_b段修改中 name="update_b.m_update2"
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "crcg_t" 
            LET g_errparam.code = "std-00009" 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
 
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL acrt420_crcg_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後 name="update_b.after_update2"
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
   #子表處理
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      
   END IF
 
 
   
   #add-point:update_b段other name="update_b.other"
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="acrt420.key_update_b" >}
#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION acrt420_key_update_b(ps_keys_bak,ps_table)
   #add-point:update_b段define(客製用) name="key_update_b.define_customerization"
   {<point name="key_update_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_key       DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:update_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_update_b.define"
   {<point name="key_update_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_update_b.pre_function"
   {<point name="key_update_b.pre_function"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'crcf_t' THEN
      #add-point:update_b段修改前 name="key_update_b.before_update2"
      {<point name="key_update_b.before_update2" mark="Y"/>}
      #end add-point
      
      UPDATE crcg_t 
         SET (crcgdocno,crcg001) 
              = 
             (g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001) 
         WHERE crcgent = g_enterprise AND
               crcgdocno = ps_keys_bak[1] AND crcg001 = ps_keys_bak[2]
 
      #add-point:update_b段修改中 name="key_update_b.m_update2"
      {<point name="key_update_b.m_update2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後 name="key_update_b.after_update2"
      {<point name="key_update_b.after_update2"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
{</section>}
 
{<section id="acrt420.key_delete_b" >}
#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION acrt420_key_delete_b(ps_keys_bak,ps_table)
   #add-point:delete_b段define(客製用) name="key_delete_b.define_customerization"
   {<point name="key_delete_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_keys_bak       DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table          STRING
   DEFINE l_field_keys      DYNAMIC ARRAY OF STRING
   DEFINE l_var_keys_bak    DYNAMIC ARRAY OF STRING
   DEFINE l_new_key         DYNAMIC ARRAY OF STRING
   DEFINE l_old_key         DYNAMIC ARRAY OF STRING
   #add-point:delete_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="key_delete_b.define"
   {<point name="key_delete_b.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="key_delete_b.pre_function"
   {<point name="key_delete_b.pre_function"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'crcf_t' THEN
      #add-point:delete_b段修改前 name="key_delete_b.before_delete2"
      {<point name="key_delete_b.before_delete2" mark="Y"/>}
      #end add-point
      
      DELETE FROM crcg_t 
            WHERE crcgent = g_enterprise AND
                  crcgdocno = ps_keys_bak[1] AND crcg001 = ps_keys_bak[2]
 
      #add-point:delete_b段修改中 name="key_delete_b.m_delete2"
      {<point name="key_delete_b.m_delete2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.SQLCODE #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "crcg_t:",SQLERRMESSAGE 
            LET g_errparam.code = SQLCA.SQLCODE 
            LET g_errparam.popup = TRUE 
            CALL s_transaction_end('N','0')
            CALL cl_err()
            RETURN FALSE
         OTHERWISE
      END CASE
 
       
 
      #add-point:delete_b段修改後 name="key_delete_b.after_delete2"
      {<point name="key_delete_b.after_delete2"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="acrt420.lock_b" >}
#+ 連動lock其他單身table資料
PRIVATE FUNCTION acrt420_lock_b(ps_table,ps_page)
   #add-point:lock_b段define(客製用) name="lock_b.define_customerization"
   {<point name="lock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="lock_b.define"
   {<point name="lock_b.define"/>} 
   #end add-point   
   
   #add-point:Function前置處理  name="lock_b.pre_function"
   {<point name="lock_b.pre_function"/>}
   #end add-point
    
   #先刷新資料
   #CALL acrt420_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "crcf_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN acrt420_bcl USING g_enterprise,
                                       g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001     
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "acrt420_bcl:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "crcg_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN acrt420_bcl2 USING g_enterprise,
                                             g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001,
                                             g_crcf2_d[g_detail_idx2].crcg002
      IF SQLCA.SQLCODE THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "acrt420_bcl2:",SQLERRMESSAGE 
         LET g_errparam.code = SQLCA.SQLCODE 
         LET g_errparam.popup = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other name="lock_b.other"
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="acrt420.unlock_b" >}
#+ 連動unlock其他單身table資料
PRIVATE FUNCTION acrt420_unlock_b(ps_table,ps_page)
   #add-point:unlock_b段define(客製用) name="unlock_b.define_customerization"
   {<point name="unlock_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="unlock_b.define"
   {<point name="unlock_b.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="unlock_b.pre_function"
   {<point name="unlock_b.pre_function"/>}
   #end add-point
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE acrt420_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE acrt420_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other name="unlock_b.other"
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
{</section>}
 
{<section id="acrt420.set_entry" >}
#+ 單頭欄位開啟設定
PRIVATE FUNCTION acrt420_set_entry(p_cmd)
   #add-point:set_entry段define(客製用) name="set_entry.define_customerization"
   {<point name="set_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point       
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry.define"
   {<point name="set_entry.define"/>} 
   #end add-point       
   
   #add-point:Function前置處理  name="set_entry.pre_function"
   {<point name="set_entry.pre_function"/>}
   #end add-point
   
   CALL cl_set_comp_entry("crcedocno",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("crcedocno",TRUE)
      CALL cl_set_comp_entry("crcedocdt",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制 name="set_entry.field_control"
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後 name="set_entry.after_control"
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="acrt420.set_no_entry" >}
#+ 單頭欄位關閉設定
PRIVATE FUNCTION acrt420_set_no_entry(p_cmd)
   #add-point:set_no_entry段define(客製用) name="set_no_entry.define_customerization"
   {<point name="set_no_entry.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry.define"
   {<point name="set_no_entry.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_no_entry.pre_function"
   {<point name="set_no_entry.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("crcedocno",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制 name="set_no_entry.field_control"
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN  #docno,ld欄位確認是絕對關閉
      CALL cl_set_comp_entry("crcedocno",FALSE)
   END IF 
 
#  IF p_cmd = 'u' THEN  #docdt欄位依照設定關閉(FALSE則為設定不同意修正) #(ver:78)
      IF NOT cl_chk_update_docdt() THEN
         CALL cl_set_comp_entry("crcedocdt",FALSE)
      END IF
#  END IF 
   
   #add-point:set_no_entry段欄位控制後 name="set_no_entry.after_control"
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
{</section>}
 
{<section id="acrt420.set_entry_b" >}
#+ 單身欄位開啟設定
PRIVATE FUNCTION acrt420_set_entry_b(p_cmd)
   #add-point:set_entry_b段define(客製用) name="set_entry_b.define_customerization"
   {<point name="set_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point     
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_entry_b.define"
   {<point name="set_entry_b.define"/>} 
   #end add-point     
   
   #add-point:Function前置處理  name="set_entry_b.pre_function"
   {<point name="set_entry_b.pre_function"/>}
   #end add-point
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制 name="set_entry_b.field_control"
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段 name="set_entry_b.set_entry_b"
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
{</section>}
 
{<section id="acrt420.set_no_entry_b" >}
#+ 單身欄位關閉設定
PRIVATE FUNCTION acrt420_set_no_entry_b(p_cmd)
   #add-point:set_no_entry_b段define(客製用) name="set_no_entry_b.define_customerization"
   {<point name="set_no_entry_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point    
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_no_entry_b.define"
   {<point name="set_no_entry_b.define"/>} 
   #end add-point    
   
   #add-point:Function前置處理  name="set_no_entry_b.pre_function"
   {<point name="set_no_entry_b.pre_function"/>}
   #end add-point
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制 name="set_no_entry_b.field_control"
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段 name="set_no_entry_b.set_no_entry_b"
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
{</section>}
 
{<section id="acrt420.set_act_visible" >}
#+ 單頭權限開啟
PRIVATE FUNCTION acrt420_set_act_visible()
   #add-point:set_act_visible段define(客製用) name="set_act_visible.define_customerization"
   {<point name="set_act_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible.define"
   {<point name="set_act_visible.define"/>} 
   #end add-point   
   #add-point:set_act_visible段 name="set_act_visible.set_act_visible"
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="acrt420.set_act_no_visible" >}
#+ 單頭權限關閉
PRIVATE FUNCTION acrt420_set_act_no_visible()
   #add-point:set_act_no_visible段define(客製用) name="set_act_no_visible.define_customerization"
   {<point name="set_act_no_visible.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible.define"
   {<point name="set_act_no_visible.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible段 name="set_act_no_visible.set_act_no_visible"
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="acrt420.set_act_visible_b" >}
#+ 單身權限開啟
PRIVATE FUNCTION acrt420_set_act_visible_b()
   #add-point:set_act_visible_b段define(客製用) name="set_act_visible_b.define_customerization"
   {<point name="set_act_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_visible_b.define"
   {<point name="set_act_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_visible_b段 name="set_act_visible_b.set_act_visible_b"
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="acrt420.set_act_no_visible_b" >}
#+ 單身權限關閉
PRIVATE FUNCTION acrt420_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define(客製用) name="set_act_no_visible_b.define_customerization"
   {<point name="set_act_no_visible_b.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_act_no_visible_b.define"
   {<point name="set_act_no_visible_b.define"/>} 
   #end add-point   
   #add-point:set_act_no_visible_b段 name="set_act_no_visible_b.set_act_no_visible_b"
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
{</section>}
 
{<section id="acrt420.default_search" >}
#+ 外部參數搜尋
PRIVATE FUNCTION acrt420_default_search()
   #add-point:default_search段define(客製用) name="default_search.define_customerization"
   {<point name="default_search.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="default_search.define"
   {<point name="default_search.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理 name="default_search.before"
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " crcedocno = '", g_argv[01], "' AND "
   END IF
   
 
   
   #add-point:default_search段after sql name="default_search.after_sql"
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "crce_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "crcf_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前 name="default_search.after"
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
{</section>}
 
{<section id="acrt420.state_change" >}
   #應用 a09 樣板自動產生(Version:17)
#+ 確認碼變更 
PRIVATE FUNCTION acrt420_statechange()
   #add-point:statechange段define(客製用) name="statechange.define_customerization"
   {<point name="statechange.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="statechange.define"
   {<point name="statechange.define"/>}
   #end add-point  
   
   #add-point:Function前置處理 name="statechange.before"
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_crce_m.crcedocno IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN acrt420_cl USING g_enterprise,g_crce_m.crcedocno
   IF STATUS THEN
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN acrt420_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
       g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
       g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
       g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
       g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
       g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

   
 
   #檢查是否允許此動作
   IF NOT acrt420_action_chk() THEN
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcesite_desc,g_crce_m.crcedocdt,g_crce_m.crcedocno,g_crce_m.crcedocno_desc, 
       g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005,g_crce_m.crce006, 
       g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce008_desc,g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010, 
       g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceownid_desc,g_crce_m.crceowndp, 
       g_crce_m.crceowndp_desc,g_crce_m.crcecrtid,g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp,g_crce_m.crcecrtdp_desc, 
       g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemodid_desc,g_crce_m.crcemoddt,g_crce_m.crcecnfid, 
       g_crce_m.crcecnfid_desc,g_crce_m.crcecnfdt
 
   CASE g_crce_m.crcestus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後 name="statechange.after_refresh"
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_crce_m.crcestus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前 name="statechange.before_menu"
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制 name="statechange.unconfirmed"
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制 name="statechange.confirmed"
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制 name="statechange.invalid"
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制 name="statechange.more_control"
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_crce_m.crcestus = lc_state OR cl_null(lc_state) THEN
      CLOSE acrt420_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前 name="statechange.b_update"
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_crce_m.crcemodid = g_user
   LET g_crce_m.crcemoddt = cl_get_current()
   LET g_crce_m.crcestus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE crce_t 
      SET (crcestus,crcemodid,crcemoddt) 
        = (g_crce_m.crcestus,g_crce_m.crcemodid,g_crce_m.crcemoddt)     
    WHERE crceent = g_enterprise AND crcedocno = g_crce_m.crcedocno
 
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE acrt420_master_referesh USING g_crce_m.crcedocno INTO g_crce_m.crcesite,g_crce_m.crcedocdt, 
          g_crce_m.crcedocno,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004,g_crce_m.crce005, 
          g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit, 
          g_crce_m.crcestus,g_crce_m.crceownid,g_crce_m.crceowndp,g_crce_m.crcecrtid,g_crce_m.crcecrtdp, 
          g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfdt, 
          g_crce_m.crcesite_desc,g_crce_m.crce008_desc,g_crce_m.crceownid_desc,g_crce_m.crceowndp_desc, 
          g_crce_m.crcecrtid_desc,g_crce_m.crcecrtdp_desc,g_crce_m.crcemodid_desc,g_crce_m.crcecnfid_desc 

      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_crce_m.crcesite,g_crce_m.crcesite_desc,g_crce_m.crcedocdt,g_crce_m.crcedocno, 
          g_crce_m.crcedocno_desc,g_crce_m.crce001,g_crce_m.crce002,g_crce_m.crce003,g_crce_m.crce004, 
          g_crce_m.crce005,g_crce_m.crce006,g_crce_m.crce007,g_crce_m.crce008,g_crce_m.crce008_desc, 
          g_crce_m.crcb004,g_crce_m.crce009,g_crce_m.crce010,g_crce_m.crceunit,g_crce_m.crcestus,g_crce_m.crceownid, 
          g_crce_m.crceownid_desc,g_crce_m.crceowndp,g_crce_m.crceowndp_desc,g_crce_m.crcecrtid,g_crce_m.crcecrtid_desc, 
          g_crce_m.crcecrtdp,g_crce_m.crcecrtdp_desc,g_crce_m.crcecrtdt,g_crce_m.crcemodid,g_crce_m.crcemodid_desc, 
          g_crce_m.crcemoddt,g_crce_m.crcecnfid,g_crce_m.crcecnfid_desc,g_crce_m.crcecnfdt
   END IF
 
   #add-point:stus修改後 name="statechange.a_update"
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前 name="statechange.after"
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE acrt420_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL acrt420_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="acrt420.idx_chk" >}
#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION acrt420_idx_chk()
   #add-point:idx_chk段define(客製用) name="idx_chk.define_customerization"
   {<point name="idx_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point  
   #add-point:idx_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="idx_chk.define"
   {<point name="idx_chk.define"/>} 
   #end add-point  
   
   #add-point:Function前置處理  name="idx_chk.pre_function"
   {<point name="idx_chk.pre_function"/>}
   #end add-point
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_crcf_d.getLength() THEN
         LET g_detail_idx = g_crcf_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_crcf_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_crcf_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_crcf2_d.getLength() THEN
         LET g_detail_idx2 = g_crcf2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_crcf2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_crcf2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other name="idx_chk.other"
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
{</section>}
 
{<section id="acrt420.b_fill2" >}
#+ 單身陣列填充2
PRIVATE FUNCTION acrt420_b_fill2(pi_idx)
   #add-point:b_fill2段define(客製用) name="b_fill2.define_customerization"
   {<point name="b_fill2.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE pi_idx                 LIKE type_t.num10
   DEFINE li_ac                  LIKE type_t.num10
   DEFINE li_detail_idx_tmp      LIKE type_t.num10
   DEFINE ls_chk                 LIKE type_t.chr1
   #add-point:b_fill2段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="b_fill2.define"
   {<point name="b_fill2.define"/>} 
   #end add-point
   
   #add-point:Function前置處理  name="b_fill2.pre_function"
   {<point name="b_fill2.pre_function"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   LET li_detail_idx_tmp = g_detail_idx
   
   IF acrt420_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_crcf_d.getLength() > 0 THEN
               CALL g_crcf2_d.clear()
 
         
         #取得該單身上階單身的idx
         LET g_detail_idx = g_detail_idx_list[1]
         
         LET g_sql = "SELECT  DISTINCT crcg003,crcg002,crcgsite,crcgunit  FROM crcg_t",    
                     "",
                     
                     " WHERE crcgent=? AND crcgdocno=? AND crcg001=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  crcg_t.crcg002" 
                            
         #add-point:單身填充前 name="b_fill2.before_fill2"
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         #先清空資料
               CALL g_crcf2_d.clear()
 
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE acrt420_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR acrt420_pb2
         
      #  OPEN b_fill_curs2 USING g_enterprise,g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001   #(ver:78) 

         LET l_ac = 1
         FOREACH b_fill_curs2 USING g_enterprise,g_crce_m.crcedocno,g_crcf_d[g_detail_idx].crcf001 INTO g_crcf2_d[l_ac].crcg003, 
             g_crcf2_d[l_ac].crcg002,g_crcf2_d[l_ac].crcgsite,g_crcf2_d[l_ac].crcgunit   #(ver:78)
            IF SQLCA.SQLCODE THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:",SQLERRMESSAGE 
               LET g_errparam.code = SQLCA.SQLCODE 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充 name="b_fill2.fill2"
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code = 9035 
               LET g_errparam.popup = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_crcf2_d.deleteElement(g_crcf2_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_crcf2_d_mask_o.* =  g_crcf2_d.*
   FOR l_ac = 1 TO g_crcf2_d.getLength()
      LET g_crcf2_d_mask_o[l_ac].* =  g_crcf2_d[l_ac].*
      CALL acrt420_crcg_t_mask()
      LET g_crcf2_d_mask_n[l_ac].* =  g_crcf2_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後 name="b_fill2.after_fill"
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL acrt420_detail_show()
   
   LET g_detail_idx = li_detail_idx_tmp
   
END FUNCTION
{</section>}
 
{<section id="acrt420.fill_chk" >}
#+ 單身填充確認
PRIVATE FUNCTION acrt420_fill_chk(ps_idx)
   #add-point:fill_chk段define(客製用) name="fill_chk.define_customerization"
   {<point name="fill_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="fill_chk.define"
   {<point name="fill_chk.define"/>} 
   #end add-point
   
   #add-point:Function前置處理 name="fill_chk.before_chk"
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk name="fill_chk.other_chk"
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk name="fill_chk.after_chk"
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
{</section>}
 
{<section id="acrt420.status_show" >}
PRIVATE FUNCTION acrt420_status_show()
   #add-point:status_show段define(客製用) name="status_show.define_customerization"
   {<point name="status_show.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:status_show段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="status_show.define"
   {<point name="status_show.define"/>} 
   #end add-point
   
   #add-point:status_show段status_show name="status_show.status_show"
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
{</section>}
 
{<section id="acrt420.mask_functions" >}
&include "erp/acr/acrt420_mask.4gl"
{</section>}
 
{<section id="acrt420.signature" >}
   
{</section>}
 
{<section id="acrt420.set_pk_array" >}
   #應用 a51 樣板自動產生(Version:8)
#+ 給予pk_array內容
PRIVATE FUNCTION acrt420_set_pk_array()
   #add-point:set_pk_array段define name="set_pk_array.define_customerization"
   {<point name="set_pk_array.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:set_pk_array段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="set_pk_array.define"
   {<point name="set_pk_array.define"/>}
   #end add-point
   
   #add-point:Function前置處理 name="set_pk_array.before"
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_crce_m.crcedocno
   LET g_pk_array[1].column = 'crcedocno'
 
   
   #add-point:set_pk_array段之後 name="set_pk_array.after"
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
 
{</section>}
 
{<section id="acrt420.other_dialog" readonly="Y" >}
   
{</section>}
 
{<section id="acrt420.msgcentre_notify" >}
#應用 a66 樣板自動產生(Version:6)
PRIVATE FUNCTION acrt420_msgcentre_notify(lc_state)
   #add-point:msgcentre_notify段define name="msgcentre_notify.define_customerization"
   {<point name="msgcentre_notify.define_customerization" edit="c" mark="Y"/>}
   #end add-point   
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define(請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="msgcentre_notify.define"
   {<point name="msgcentre_notify.define"/>}
   #end add-point
   
   #add-point:Function前置處理  name="msgcentre_notify.pre_function"
   {<point name="msgcentre_notify.pre_function"/>}
   #end add-point
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL acrt420_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_crce_m)
 
   #add-point:msgcentre其他通知 name="msgcentre_notify.process"
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
 
{</section>}
 
{<section id="acrt420.action_chk" >}
#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION acrt420_action_chk()
   #add-point:action_chk段define(客製用) name="action_chk.define_customerization"
   {<point name="action_chk.define_customerization" edit="c" mark="Y"/>}
   #end add-point
   #add-point:action_chk段define (請盡量不要在客製環境修改此段落內容, 否則將後續patch的調整需人工處理) name="action_chk.define"
   {<point name="action_chk.define"/>} 
   #end add-point
   
   #add-point:action_chk段action_chk name="action_chk.action_chk"
   {<point name="action_chk.action_chk"/>}
   #end add-point
      
   RETURN TRUE
   
END FUNCTION
{</section>}
 
{<section id="acrt420.other_function" readonly="Y" >}
{<point name="other.function"/>}
{</section>}
 
 
 
