#該程式已解開Section, 不再透過樣板產出!
{<section id="aqcp800.description" >}
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000041
#+ 
#+ Filename...: aqcp800
#+ Description: 月底品質分數統計批次作業
#+ Creator....: 02295(2014-09-11 11:21:37)
#+ Modifier...: 02295(2014-09-11 14:33:35) -SD/PR-
#+ Buildtype..: 應用 p01 樣板自動產生
#+ 以上段落由子樣板a00產生

{</section>}

{<section id="aqcp800.global" >}
{<point name="global.memo" />}
 
IMPORT os
IMPORT util
IMPORT FGL lib_cl_schedule
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_schedule.inc"
GLOBALS
   DEFINE gwin_curr2  ui.Window
   DEFINE gfrm_curr2  ui.Form
   DEFINE gi_hiden_asign       LIKE type_t.num5
   DEFINE gi_hiden_exec        LIKE type_t.num5
   DEFINE gi_hiden_spec        LIKE type_t.num5
   DEFINE gi_hiden_exec_end    LIKE type_t.num5
   DEFINE g_chk_jobid          LIKE type_t.num5
END GLOBALS
 
PRIVATE TYPE type_parameter RECORD
   #add-point:自定背景執行須傳遞的參數(Module Variable)
{<point name="global.parameter"/>}
   #end add-point
        wc               STRING
                     END RECORD
 
DEFINE g_sql             STRING        #組 sql 用
DEFINE g_forupd_sql      STRING        #SELECT ... FOR UPDATE  SQL
DEFINE g_error_show      LIKE type_t.num5
DEFINE g_jobid           STRING
DEFINE g_wc              STRING
 
PRIVATE TYPE type_master RECORD
       qcba010 LIKE qcba_t.qcba010, 
   imaa009 LIKE imaa_t.imaa009, 
   qcba013 LIKE qcba_t.qcba013, 
   year LIKE type_t.num5, 
   stage LIKE type_t.num5, 
   stagenow LIKE type_t.chr80,
       wc               STRING
       END RECORD
 
#模組變數(Module Variables)
DEFINE g_master type_master
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable"/>}
#end add-point
 
#add-point:傳入參數說明
{<point name="global.argv"/>}
#end add-point

{</section>}

{<section id="aqcp800.main" >}
MAIN
   DEFINE ls_js    STRING
   DEFINE lc_param type_parameter  
   #add-point:main段define
   {<point name="main.define"/>}
   #end add-point 
  
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aqc","")
 
   #add-point:定義背景狀態與整理進入需用參數ls_js
   {<point name="main.background"/>}
   #end add-point
 
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
      CALL aqcp800_process(ls_js)
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aqcp800 WITH FORM cl_ap_formpath("aqc",g_code)
 
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
 
      #程式初始化
      CALL aqcp800_init()
 
      #進入選單 Menu (="N")
      CALL aqcp800_ui_dialog()
 
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
      #畫面關閉
      CLOSE WINDOW w_aqcp800
   END IF
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN

{</section>}

{<section id="aqcp800.init" >}
#+ 初始化作業
PRIVATE FUNCTION aqcp800_init()
   #add-point:init段define
   {<point name="init.define"/>}
   #end add-point
 
   LET g_error_show = 1
   LET gwin_curr2 = ui.Window.getCurrent()
   LET gfrm_curr2 = gwin_curr2.getForm()
   CALL cl_schedule_import_4fd()
   CALL cl_set_combo_scc("gzpa003","75")
   IF cl_get_para(g_enterprise,"","E-SYS-0005") = "N" THEN
       CALL cl_set_comp_visible("scheduling_page,history_page",FALSE)
   END IF 
   #add-point:畫面資料初始化
   {<point name="init.init" />}
   #end add-point
   
END FUNCTION

{</section>}

{<section id="aqcp800.ui_dialog" >}
#+ 選單功能實際執行處
PRIVATE FUNCTION aqcp800_ui_dialog()
   DEFINE li_exit  LIKE type_t.num5    #判別是否為離開作業
   DEFINE li_idx   LIKE type_t.num5
   DEFINE ls_js    STRING
   DEFINE ls_wc    STRING
   DEFINE l_dialog ui.DIALOG
   DEFINE lc_param type_parameter
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define"/>}
   #end add-point
 
   #add-point:ui_dialog段before dialog
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
 
   WHILE TRUE
      #add-point:ui_dialog段before dialog2
      {<point name="ui_dialog.before_dialog2"/>}
      #end add-point
 
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
         #+ 此段落由子樣板a57產生
         INPUT BY NAME g_master.year,g_master.stage 
            ATTRIBUTE(WITHOUT DEFAULTS)
            
            #自訂ACTION(master_input)
            
         
            BEFORE INPUT
               #add-point:資料輸入前
               {<point name="input.m.before_input"/>}
               #end add-point
         
                     #此段落由子樣板a02產生
         AFTER FIELD year
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_master.year,"0","0","","","azz-00079",1) THEN
               NEXT FIELD year
            END IF
 
 
            #add-point:AFTER FIELD year
            {<point name="input.a.year" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD year
            #add-point:BEFORE FIELD year
            {<point name="input.b.year" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE year
            #add-point:ON CHANGE year
            {<point name="input.g.year" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD stage
            #此段落由子樣板a15產生
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_master.stage,"0","0","","","azz-00079",1) THEN
               NEXT FIELD stage
            END IF
 
 
            #add-point:AFTER FIELD stage
            {<point name="input.a.stage" />}
            #END add-point
            
 
         #此段落由子樣板a01產生
         BEFORE FIELD stage
            #add-point:BEFORE FIELD stage
            {<point name="input.b.stage" />}
            #END add-point
 
         #此段落由子樣板a04產生
         ON CHANGE stage
            #add-point:ON CHANGE stage
            {<point name="input.g.stage" />}
            #END add-point
 
 
                     #Ctrlp:input.c.year
         ON ACTION controlp INFIELD year
            #add-point:ON ACTION controlp INFIELD year
            {<point name="input.c.year" />}
            #END add-point
 
         #Ctrlp:input.c.stage
         ON ACTION controlp INFIELD stage
            #add-point:ON ACTION controlp INFIELD stage
            {<point name="input.c.stage" />}
            #END add-point
 
 
               
            AFTER INPUT
               #add-point:資料輸入後
               {<point name="input.m.after_input"/>}
               #end add-point
               
            #add-point:其他管控(on row change, etc...)
            {<point name="input.other"/>}
            #end add-point
               
         END INPUT
 
 
         
         #+ 此段落由子樣板a57產生
         CONSTRUCT BY NAME g_master.wc ON qcba010,imaa009,qcba013
         
            BEFORE CONSTRUCT
               #add-point:cs段before_construct
               {<point name="cs.head.before_construct"/>}
               #end add-point 
         
            #公用欄位開窗相關處理
            
               
            #一般欄位開窗相關處理    
                     #Ctrlp:construct.c.qcba010
         ON ACTION controlp INFIELD qcba010
            #add-point:ON ACTION controlp INFIELD qcba010
            {<point name="construct.c.qcba010" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qcba010
            #add-point:BEFORE FIELD qcba010
            {<point name="construct.b.qcba010" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcba010
            
            #add-point:AFTER FIELD qcba010
            {<point name="construct.a.qcba010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaa009
         ON ACTION controlp INFIELD imaa009
            #add-point:ON ACTION controlp INFIELD imaa009
            {<point name="construct.c.imaa009" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD imaa009
            #add-point:BEFORE FIELD imaa009
            {<point name="construct.b.imaa009" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD imaa009
            
            #add-point:AFTER FIELD imaa009
            {<point name="construct.a.imaa009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcba013
         ON ACTION controlp INFIELD qcba013
            #add-point:ON ACTION controlp INFIELD qcba013
            {<point name="construct.c.qcba013" />}
            #END add-point
 
         #此段落由子樣板a01產生
         BEFORE FIELD qcba013
            #add-point:BEFORE FIELD qcba013
            {<point name="construct.b.qcba013" />}
            #END add-point
 
         #此段落由子樣板a02產生
         AFTER FIELD qcba013
            
            #add-point:AFTER FIELD qcba013
            {<point name="construct.a.qcba013" />}
            #END add-point
            
 
 
            
            #add-point:其他管控
            {<point name="cs.other"/>}
            #end add-point
            
         END CONSTRUCT
 
 
      
         #add-point:ui_dialog段construct
         {<point name="ui_dialog.more_construct"/>}
         #end add-point
         #add-point:ui_dialog段input
         {<point name="ui_dialog.more_input"/>}
         #end add-point
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
 
         SUBDIALOG lib_cl_schedule.cl_schedule_setting
         SUBDIALOG lib_cl_schedule.cl_schedule_setting_exec_call
         SUBDIALOG lib_cl_schedule.cl_schedule_select_show_history
         SUBDIALOG lib_cl_schedule.cl_schedule_show_history
 
         BEFORE DIALOG
            LET l_dialog = ui.DIALOG.getCurrent()
            CALL cl_qbe_display_condition(FGL_GETENV("QUERYPLANID"), g_user)
            CALL aqcp800_get_buffer(l_dialog)
            #add-point:ui_dialog段before dialog
            {<point name="ui_dialog.before_dialog3"/>}
            #end add-point
 
         ON ACTION qbe_select
            LET ls_wc = ""
            #需要用ITM類程式查詢方案在CONSTRUCT的功能，將值set到畫面上
            CALL cl_qbe_list("c") RETURNING ls_wc
            CALL aqcp800_get_buffer(l_dialog)
            IF NOT cl_null(ls_wc) THEN
               LET lc_param.wc = ls_wc
               #取得條件後需要執行項目,應新增於下方adp
               #add-point:ui_dialog段qbe_select後
               {<point name="ui_dialog.qbe_select"/>}
               #end add-point
            END IF
 
         ON ACTION qbe_save
            CALL cl_qbe_save()
 
         ON ACTION batch_execute
            ACCEPT DIALOG
 
         ON ACTION qbeclear         
            CLEAR FORM
            INITIALIZE lc_param.* TO NULL
            #add-point:ui_dialog段qbeclear
            {<point name="ui_dialog.qbeclear"/>}
            #end add-point
 
         ON ACTION history_fill
            CALL cl_schedule_history_fill()
 
         ON ACTION close
            LET INT_FLAG = TRUE
            EXIT DIALOG
         
         ON ACTION exit
            LET INT_FLAG = TRUE
            EXIT DIALOG
 
         #add-point:ui_dialog段action
         {<point name="ui_dialog.more_action"/>}
         #end add-point
 
         #主選單用ACTION
         &include "main_menu.4gl"
         &include "relating_action.4gl"
         #交談指令共用ACTION
         &include "common_action.4gl"
            CONTINUE DIALOG
      END DIALOG
 
      #add-point:ui_dialog段exit dialog
      {<point name="process.exit_dialog"/>}
      #end add-point
 
      LET ls_js = util.JSON.stringify(lc_param)
 
      IF INT_FLAG THEN
         LET INT_FLAG = FALSE
         EXIT WHILE
      ELSE
         #LET g_jobid = cl_schedule_get_jobid(g_prog)
         IF g_chk_jobid THEN 
            LET g_jobid = g_schedule.gzpa001
         ELSE 
            LET g_jobid = cl_schedule_get_jobid(g_prog)
         END IF 
         CASE 
            WHEN g_schedule.gzpa003 = "0"
                 CALL aqcp800_process(ls_js)
            WHEN g_schedule.gzpa003 = "1"
            #    CALL cl_schedule_update_data(g_jobid,ls_js)
                 LET ls_js = aqcp800_transfer_argv(ls_js)
                 CALL cl_cmdrun(ls_js)
            WHEN g_schedule.gzpa003 = "2"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
            WHEN g_schedule.gzpa003 = "3"
                 CALL cl_schedule_update_data(g_jobid,ls_js)
         END CASE  
         IF g_schedule.gzpa003 = "2" OR g_schedule.gzpa003 = "3" THEN 
            CALL cl_ask_confirm3("std-00014","") #設定完成
         END IF    
         LET g_schedule.gzpa003 = "0" #預設一開始 立即於前景執行
 
         #add-point:ui_dialog段after schedule
         {<point name="process.after_schedule"/>}
         #end add-point
 
         #欄位初始資訊 
         CALL cl_schedule_init_info("all",g_schedule.gzpa003) 
         LET gi_hiden_asign = FALSE 
         LET gi_hiden_exec = FALSE 
         LET gi_hiden_spec = FALSE 
         LET gi_hiden_exec_end = FALSE 
         CALL cl_schedule_hidden()
      END IF
   END WHILE
 
END FUNCTION

{</section>}

{<section id="aqcp800.transfer_argv" >}
#+ 轉換本地參數至cmdrun參數內,準備進入背景執行
PRIVATE FUNCTION aqcp800_transfer_argv(ls_js)
   DEFINE ls_js       STRING
   DEFINE la_cmdrun   RECORD
             prog     STRING,
             param    DYNAMIC ARRAY OF STRING
                  END RECORD
   DEFINE la_param    type_parameter
 
   CALL util.JSON.parse(ls_js,la_param)
 
   LET la_cmdrun.prog = g_prog
   #add-point:transfer.argv段define
   {<point name="transfer.argv.define"/>}
   #end add-point
 
   RETURN util.JSON.stringify( la_cmdrun )
END FUNCTION

{</section>}

{<section id="aqcp800.process" >}
#+ 資料處理
PRIVATE FUNCTION aqcp800_process(ls_js)
   DEFINE ls_js       STRING
   DEFINE lc_param    type_parameter
   DEFINE li_stus     LIKE type_t.num5
   DEFINE li_count    LIKE type_t.num10  #progressbar計量
   DEFINE ls_sql      STRING             #主SQL
   #add-point:process段define
   {<point name="process.define"/>}
   #end add-point
 
   CALL util.JSON.parse(ls_js,lc_param)
 
   #add-point:process段前處理
   {<point name="process.pre_process"/>}
   #end add-point
 
   #預先計算progressbar迴圈次數
   IF g_bgjob <> "Y" THEN
      #add-point:process段count_progress
      {<point name="process.count_progress"/>}
      #end add-point
   END IF
 
   #主SQL及相關FOREACH前置處理
#  DECLARE aqcp800_process_cs CURSOR FROM ls_sql
#  FOREACH aqcp800_process_cs INTO
   #add-point:process段process
   {<point name="process.process"/>}
   #end add-point
#  END FOREACH
 
   IF g_bgjob = "N" THEN
      #前景作業完成處理
      #add-point:process段foreground完成處理
      {<point name="process.foreground_finish"/>}
      #end add-point
      CALL cl_ask_confirm3("std-00012","")
   ELSE
      #背景作業完成處理
      #add-point:process段background完成處理
      {<point name="process.background_finish"/>}
      #end add-point
   END IF
END FUNCTION

{</section>}

{<section id="aqcp800.get_buffer" >}
PRIVATE FUNCTION aqcp800_get_buffer(p_dialog)
   DEFINE p_dialog   ui.DIALOG
   
   LET g_master.year = p_dialog.getFieldBuffer('year')
   LET g_master.stage = p_dialog.getFieldBuffer('stage')
 
   CALL cl_schedule_get_buffer(p_dialog)
 
   #add-point:get_buffer段其他欄位處理
   {<point name="get_buffer.others"/>}
   #end add-point
END FUNCTION

{</section>}

{<section id="aqcp800.other_function" >}
#add-point:自定義元件(Function)
{<point name="other.function"/>}
#end add-point

{</section>}

