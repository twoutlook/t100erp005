<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aqcr340_g01" std_prog="aqcr340_g01" erpver="1.0" module="AQC" ver="1" env="s" zone="t10prd" booking="N" type="G" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="G" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="report.aqcr340_g01_subrep05" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#管制图Xbar
PRIVATE REPORT aqcr340_g01_subrep05(sr3)
DEFINE sr3   sr3_r    
    FORMAT
           
        ON EVERY ROW
           #PRINTX g_grNumFmt.*
            PRINTX sr3.*
END REPORT]]>
  </point>
  <point name="report.aqcr340_g01_subrep06" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[#管制图R
PRIVATE REPORT aqcr340_g01_subrep06(sr4)
DEFINE sr4   sr4_r       
    FORMAT
           
        ON EVERY ROW
           #PRINTX g_grNumFmt.*
            PRINTX sr4.*
END REPORT]]>
  </point>
  <point name="global.variable" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[TYPE sr3_r  RECORD
     series  STRING,
     x       LIKE type_t.num20_6,
     y       like type_t.num20_6
        END RECORD
TYPE sr4_r  RECORD
     series  STRING,
     x       LIKE type_t.num20_6,
     y       like type_t.num20_6
        END RECORD]]>
  </point>
  <point name="ins_data.after.save" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[       LET sr[l_cnt].oocql_t_oocql004 = sr[l_cnt].qcbk011,".",sr[l_cnt].oocql_t_oocql004
       
       LET sr[l_cnt].l_qcbk000_desc = cl_gr_get_scc('5056',sr[l_cnt].qcbk000)
       CALL s_feature_description(sr[l_cnt].qcbk008,sr[l_cnt].qcbk010) RETURNING g_success,sr[l_cnt].l_qcbk010_desc
       IF NOT cl_null(sr[l_cnt].l_qcbk010_desc) THEN
          LET sr[l_cnt].l_qcbk010_desc = sr[l_cnt].qcbk010,".",sr[l_cnt].l_qcbk010_desc
       ELSE
          LET sr[l_cnt].l_qcbk010_desc = sr[l_cnt].qcbk010
       END IF]]>
  </point>
  <point name="rep.a_group.l_qcbk001_qcbk002.after" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[           START REPORT aqcr340_g01_subrep05
              LET sr3.series = "Xbar"
              FOR l_i = 1 TO sr3_s.getLength()
                 LET sr3.x = sr3_s[l_i].x
                 IF cl_null(sr3_s[l_i].Xbar) THEN LET sr3_s[l_i].Xbar = 0 END IF
                 LET sr3.y = sr3_s[l_i].Xbar
                 OUTPUT TO REPORT aqcr340_g01_subrep05(sr3.*)
              END FOR
              
              LET sr3.series = "CL"
              FOR l_i = 1 TO sr3_s.getLength()
                 LET sr3.x = sr3_s[l_i].x
                 IF cl_null(sr3_s[l_i].CL) THEN LET sr3_s[l_i].CL = 0 END IF
                 LET sr3.y = sr3_s[l_i].CL
                 OUTPUT TO REPORT aqcr340_g01_subrep05(sr3.*)
              END FOR
              
              LET sr3.series = "UCL"
              FOR l_i = 1 TO sr3_s.getLength()
                 LET sr3.x = sr3_s[l_i].x
                 IF cl_null(sr3_s[l_i].UCL) THEN LET sr3_s[l_i].UCL = 0 END IF
                 LET sr3.y = sr3_s[l_i].UCL
                 OUTPUT TO REPORT aqcr340_g01_subrep05(sr3.*)
              END FOR
              
              LET sr3.series = "LCL"
              FOR l_i = 1 TO sr3_s.getLength()
                 LET sr3.x = sr3_s[l_i].x
                 IF cl_null(sr3_s[l_i].LCL) THEN LET sr3_s[l_i].LCL = 0 END IF
                 LET sr3.y = sr3_s[l_i].LCL
                 OUTPUT TO REPORT aqcr340_g01_subrep05(sr3.*)
              END FOR
           FINISH REPORT aqcr340_g01_subrep05
           
           START REPORT aqcr340_g01_subrep06
              LET sr4.series = "R"
              FOR l_i = 1 TO sr4_s.getLength()
                 LET sr4.x = sr4_s[l_i].x
                 IF cl_null(sr4_s[l_i].R) THEN LET sr4_s[l_i].R = 0 END IF
                 LET sr4.y = sr4_s[l_i].R
                 OUTPUT TO REPORT aqcr340_g01_subrep06(sr4.*)
              END FOR
              
              LET sr4.series = "CL"
              FOR l_i = 1 TO sr4_s.getLength()
                 LET sr4.x = sr4_s[l_i].x
                 IF cl_null(sr4_s[l_i].CL) THEN LET sr4_s[l_i].CL = 0 END IF
                 LET sr4.y = sr4_s[l_i].CL
                 OUTPUT TO REPORT aqcr340_g01_subrep06(sr4.*)
              END FOR
              
              LET sr4.series = "UCL"
              FOR l_i = 1 TO sr4_s.getLength()
                 LET sr4.x = sr4_s[l_i].x
                 IF cl_null(sr4_s[l_i].UCL) THEN LET sr4_s[l_i].UCL = 0 END IF
                 LET sr4.y = sr4_s[l_i].UCL
                 OUTPUT TO REPORT aqcr340_g01_subrep06(sr4.*)
              END FOR
              
              LET sr4.series = "LCL"
              FOR l_i = 1 TO sr4_s.getLength()
                 LET sr4.x = sr4_s[l_i].x
                 IF cl_null(sr4_s[l_i].LCL) THEN LET sr4_s[l_i].LCL = 0 END IF
                 LET sr4.y = sr4_s[l_i].LCL
                 OUTPUT TO REPORT aqcr340_g01_subrep06(sr4.*)
              END FOR
           FINISH REPORT aqcr340_g01_subrep06]]>
  </point>
  <point name="rep.define" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[DEFINE sr3_s         DYNAMIC ARRAY OF RECORD
       x             LIKE type_t.num20_6,
       Xbar          LIKE qcbl_t.qcbl007,
       CL            LIKE qcbk_t.qcbk016,
       UCL           LIKE qcbk_t.qcbk017,
       LCL           LIKE qcbk_t.qcbk018
                     END RECORD
DEFINE sr3           sr3_r
DEFINE l_i           LIKE type_t.num5
DEFINE sr4_s         DYNAMIC ARRAY OF RECORD
       x             LIKE type_t.num20_6,
       R             LIKE qcbl_t.qcbl008,
       CL            LIKE qcbk_t.qcbk019,
       UCL           LIKE qcbk_t.qcbk020,
       LCL           LIKE qcbk_t.qcbk021
                     END RECORD
DEFINE sr4           sr4_r
DEFINE l_qcbk005_desc STRING]]>
  </point>
  <point name="rep.everyrow.afterrow" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[          LET sr3_s[l_i].x = sr1.qcblseq
          LET sr3_s[l_i].Xbar = sr1.qcbl007
          LET sr3_s[l_i].CL = sr1.qcbk016
          LET sr3_s[l_i].UCL = sr1.qcbk017
          LET sr3_s[l_i].LCL = sr1.qcbk018
          
          LET sr4_s[l_i].x = sr1.qcblseq
          LET sr4_s[l_i].R = sr1.qcbl008
          LET sr4_s[l_i].CL = sr1.qcbk019
          LET sr4_s[l_i].UCL = sr1.qcbk020
          LET sr4_s[l_i].LCL = sr1.qcbk021
          
          LET l_i = l_i + 1]]>
  </point>
  <point name="rep.everyrow.beforerow" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[          INITIALIZE l_qcbk005_desc TO NULL
          IF sr1.qcbk000 = '4' THEN
             LET l_qcbk005_desc = cl_gr_get_scc('5061',sr1.qcbk005)
          END IF
          
          IF sr1.qcbk000 = '5' THEN
             LET l_qcbk005_desc = cl_gr_get_scc('5060',sr1.qcbk005)
          END IF
          PRINTX l_qcbk005_desc]]>
  </point>
  <point name="rep.header" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            LET l_i = 1
            CALL sr3_s.clear()
            CALL sr4_s.clear()]]>
  </point>
  <point name="sel_prep.g_order" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_order = " ORDER BY qcbk001,qcbk002,qcblseq"]]>
  </point>
  <point name="sel_prep.g_select" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_select = " SELECT qcbk000,qcbk001,qcbk002,qcbk003,qcbk004,qcbk005,qcbk006,qcbk007,qcbk008,qcbk010, 
       qcbk011,qcbk012,qcbk013,qcbk014,qcbk015,qcbk016,qcbk017,qcbk018,qcbk019,qcbk020,qcbk021,qcbk022, 
       qcbk023,qcbkent,qcbksite,qcbkstus,qcbl003,qcbl004,qcbl007,qcbl008,qcbl009,qcblseq,imaal_t.imaal003, 
       oocql_t.oocql004,imaal_t.imaal004,'','',trim(qcbk001)||'-'||trim(qcbk002)"]]>
  </point>
  <point name="sel_prep.g_where" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="Y">
    <![CDATA[   LET g_where = " WHERE qcbkent = ",g_enterprise," AND qcbksite = '",g_site,"' AND ",tm.wc CLIPPED]]>
  </point>
  <section id="aqcr340_g01.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:1,PR版次:1) Build-000018
#+ 
#+ Filename...: aqcr340_g01
#+ Description: Xbar-R管制資料表
#+ Creator....: 01996(2015-01-22 09:46:12)
#+ Modifier...: 01996(2015-01-28 18:09:36) -SD/PR-
]]>
  </section>
  <section id="aqcr340_g01.global" ver="2" status="" src="s" readonly="">
    <![CDATA[#報表 g01 樣板自動產生(Version:1)
 
IMPORT os
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds
 
GLOBALS "../../cfg/top_global.inc"
GLOBALS "../../cfg/top_report.inc"                  #報表使用的global
 
#報表 type 宣告
PRIVATE TYPE sr1_r RECORD
   qcbk000 LIKE qcbk_t.qcbk000, 
   qcbk001 LIKE qcbk_t.qcbk001, 
   qcbk002 LIKE qcbk_t.qcbk002, 
   qcbk003 LIKE qcbk_t.qcbk003, 
   qcbk004 LIKE qcbk_t.qcbk004, 
   qcbk005 LIKE qcbk_t.qcbk005, 
   qcbk006 LIKE qcbk_t.qcbk006, 
   qcbk007 LIKE qcbk_t.qcbk007, 
   qcbk008 LIKE qcbk_t.qcbk008, 
   qcbk010 LIKE qcbk_t.qcbk010, 
   qcbk011 LIKE qcbk_t.qcbk011, 
   qcbk012 LIKE qcbk_t.qcbk012, 
   qcbk013 LIKE qcbk_t.qcbk013, 
   qcbk014 LIKE qcbk_t.qcbk014, 
   qcbk015 LIKE qcbk_t.qcbk015, 
   qcbk016 LIKE qcbk_t.qcbk016, 
   qcbk017 LIKE qcbk_t.qcbk017, 
   qcbk018 LIKE qcbk_t.qcbk018, 
   qcbk019 LIKE qcbk_t.qcbk019, 
   qcbk020 LIKE qcbk_t.qcbk020, 
   qcbk021 LIKE qcbk_t.qcbk021, 
   qcbk022 LIKE qcbk_t.qcbk022, 
   qcbk023 LIKE qcbk_t.qcbk023, 
   qcbkent LIKE qcbk_t.qcbkent, 
   qcbksite LIKE qcbk_t.qcbksite, 
   qcbkstus LIKE qcbk_t.qcbkstus, 
   qcbl003 LIKE qcbl_t.qcbl003, 
   qcbl004 LIKE qcbl_t.qcbl004, 
   qcbl007 LIKE qcbl_t.qcbl007, 
   qcbl008 LIKE qcbl_t.qcbl008, 
   qcbl009 LIKE qcbl_t.qcbl009, 
   qcblseq LIKE qcbl_t.qcblseq, 
   imaal_t_imaal003 LIKE imaal_t.imaal003, 
   oocql_t_oocql004 LIKE oocql_t.oocql004, 
   imaal_t_imaal004 LIKE imaal_t.imaal004, 
   l_qcbk000_desc LIKE type_t.chr500, 
   l_qcbk010_desc LIKE type_t.chr500, 
   l_qcbk001_qcbk002 LIKE type_t.chr500
END RECORD
 
PRIVATE TYPE sr2_r RECORD
   ooff013 LIKE ooff_t.ooff013
END RECORD
 
 
DEFINE tm RECORD
       wc STRING,                  #where codition 
       typea STRING                   #报表类型
       END RECORD
DEFINE sr DYNAMIC ARRAY OF sr1_r                   #宣告sr為sr1_t資料結構的動態陣列
DEFINE g_select        STRING
DEFINE g_from          STRING
DEFINE g_where         STRING
DEFINE g_order         STRING
DEFINE g_sql           STRING                         #report_select_prep,REPORT段使用
 
#add-point:自定義環境變數(Global Variable)
{<point name="global.variable"/>}
#end add-point
]]>
  </section>
  <section id="aqcr340_g01.ins_data" ver="2" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aqcr340_g01_ins_data()
#主報表record(用於select子句)
   DEFINE sr_s RECORD 
   qcbk000 LIKE qcbk_t.qcbk000, 
   qcbk001 LIKE qcbk_t.qcbk001, 
   qcbk002 LIKE qcbk_t.qcbk002, 
   qcbk003 LIKE qcbk_t.qcbk003, 
   qcbk004 LIKE qcbk_t.qcbk004, 
   qcbk005 LIKE qcbk_t.qcbk005, 
   qcbk006 LIKE qcbk_t.qcbk006, 
   qcbk007 LIKE qcbk_t.qcbk007, 
   qcbk008 LIKE qcbk_t.qcbk008, 
   qcbk010 LIKE qcbk_t.qcbk010, 
   qcbk011 LIKE qcbk_t.qcbk011, 
   qcbk012 LIKE qcbk_t.qcbk012, 
   qcbk013 LIKE qcbk_t.qcbk013, 
   qcbk014 LIKE qcbk_t.qcbk014, 
   qcbk015 LIKE qcbk_t.qcbk015, 
   qcbk016 LIKE qcbk_t.qcbk016, 
   qcbk017 LIKE qcbk_t.qcbk017, 
   qcbk018 LIKE qcbk_t.qcbk018, 
   qcbk019 LIKE qcbk_t.qcbk019, 
   qcbk020 LIKE qcbk_t.qcbk020, 
   qcbk021 LIKE qcbk_t.qcbk021, 
   qcbk022 LIKE qcbk_t.qcbk022, 
   qcbk023 LIKE qcbk_t.qcbk023, 
   qcbkent LIKE qcbk_t.qcbkent, 
   qcbksite LIKE qcbk_t.qcbksite, 
   qcbkstus LIKE qcbk_t.qcbkstus, 
   qcbl003 LIKE qcbl_t.qcbl003, 
   qcbl004 LIKE qcbl_t.qcbl004, 
   qcbl007 LIKE qcbl_t.qcbl007, 
   qcbl008 LIKE qcbl_t.qcbl008, 
   qcbl009 LIKE qcbl_t.qcbl009, 
   qcblseq LIKE qcbl_t.qcblseq, 
   imaal_t_imaal003 LIKE imaal_t.imaal003, 
   oocql_t_oocql004 LIKE oocql_t.oocql004, 
   imaal_t_imaal004 LIKE imaal_t.imaal004, 
   l_qcbk000_desc LIKE type_t.chr500, 
   l_qcbk010_desc LIKE type_t.chr500, 
   l_qcbk001_qcbk002 LIKE type_t.chr500
 END RECORD
   DEFINE l_cnt           INTEGER
#add-point:ins_data段define
{<point name="ins_data.define"/>}
#end add-point
 
    #add-point:ins_data段before
    {<point name="ins_data.before"/>}
    #end add-point
 
    CALL sr.clear()                                  #rep sr
    LET l_cnt = 1
    FOREACH aqcr340_g01_curs INTO sr_s.*
       IF STATUS THEN
          INITIALIZE g_errparam TO NULL
          LET g_errparam.extend = 'foreach:'
          LET g_errparam.code   = STATUS
          LET g_errparam.popup  = TRUE
          CALL cl_err()       
          LET g_rep_success = 'N'    
          EXIT FOREACH
       END IF
 
       #add-point:ins_data段foreach
       {<point name="ins_data.foreach"/>}
       #end add-point
 
       #add-point:ins_data段before_arr
       {<point name="ins_data.before.save"/>}
       #end add-point
 
       #set rep array value
       LET sr[l_cnt].qcbk000 = sr_s.qcbk000
       LET sr[l_cnt].qcbk001 = sr_s.qcbk001
       LET sr[l_cnt].qcbk002 = sr_s.qcbk002
       LET sr[l_cnt].qcbk003 = sr_s.qcbk003
       LET sr[l_cnt].qcbk004 = sr_s.qcbk004
       LET sr[l_cnt].qcbk005 = sr_s.qcbk005
       LET sr[l_cnt].qcbk006 = sr_s.qcbk006
       LET sr[l_cnt].qcbk007 = sr_s.qcbk007
       LET sr[l_cnt].qcbk008 = sr_s.qcbk008
       LET sr[l_cnt].qcbk010 = sr_s.qcbk010
       LET sr[l_cnt].qcbk011 = sr_s.qcbk011
       LET sr[l_cnt].qcbk012 = sr_s.qcbk012
       LET sr[l_cnt].qcbk013 = sr_s.qcbk013
       LET sr[l_cnt].qcbk014 = sr_s.qcbk014
       LET sr[l_cnt].qcbk015 = sr_s.qcbk015
       LET sr[l_cnt].qcbk016 = sr_s.qcbk016
       LET sr[l_cnt].qcbk017 = sr_s.qcbk017
       LET sr[l_cnt].qcbk018 = sr_s.qcbk018
       LET sr[l_cnt].qcbk019 = sr_s.qcbk019
       LET sr[l_cnt].qcbk020 = sr_s.qcbk020
       LET sr[l_cnt].qcbk021 = sr_s.qcbk021
       LET sr[l_cnt].qcbk022 = sr_s.qcbk022
       LET sr[l_cnt].qcbk023 = sr_s.qcbk023
       LET sr[l_cnt].qcbkent = sr_s.qcbkent
       LET sr[l_cnt].qcbksite = sr_s.qcbksite
       LET sr[l_cnt].qcbkstus = sr_s.qcbkstus
       LET sr[l_cnt].qcbl003 = sr_s.qcbl003
       LET sr[l_cnt].qcbl004 = sr_s.qcbl004
       LET sr[l_cnt].qcbl007 = sr_s.qcbl007
       LET sr[l_cnt].qcbl008 = sr_s.qcbl008
       LET sr[l_cnt].qcbl009 = sr_s.qcbl009
       LET sr[l_cnt].qcblseq = sr_s.qcblseq
       LET sr[l_cnt].imaal_t_imaal003 = sr_s.imaal_t_imaal003
       LET sr[l_cnt].oocql_t_oocql004 = sr_s.oocql_t_oocql004
       LET sr[l_cnt].imaal_t_imaal004 = sr_s.imaal_t_imaal004
       LET sr[l_cnt].l_qcbk000_desc = sr_s.l_qcbk000_desc
       LET sr[l_cnt].l_qcbk010_desc = sr_s.l_qcbk010_desc
       LET sr[l_cnt].l_qcbk001_qcbk002 = sr_s.l_qcbk001_qcbk002
 
 
       #add-point:ins_data段after_arr
       {<point name="ins_data.after.save"/>}
       #end add-point
       LET l_cnt = l_cnt + 1
    END FOREACH
    CALL sr.deleteElement(l_cnt)
 
    #add-point:ins_data段after
    {<point name="ins_data.after"/>}
    #end add-point
END FUNCTION
]]>
  </section>
  <section id="aqcr340_g01.main" ver="1" status="" src="s" readonly="">
    <![CDATA[PUBLIC FUNCTION aqcr340_g01(p_arg1,p_arg2)
DEFINE  p_arg1 STRING                  #tm.wc  where codition 
DEFINE  p_arg2 STRING                  #tm.typea  报表类型
#add-point:init段define
{<point name="component_name.define"/>}
#end add-point
 
   LET tm.wc = p_arg1
   LET tm.typea = p_arg2
 
   #add-point:報表元件參數準備
   {<point name="component.arg.prep" />}
   #end add-point
   #報表元件代號
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
 
   ##報表元件執行期間是否有錯誤代碼
   LET g_rep_success = 'Y'   
   
   LET g_rep_code = "aqcr340_g01"
   IF cl_null(tm.wc) THEN LET tm.wc = " 1=1" END IF
 
   #主報表select子句準備
   CALL aqcr340_g01_sel_prep()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料存入array
   CALL aqcr340_g01_ins_data()
   
   IF g_rep_success = 'N' THEN
      RETURN
   END IF   
 
   #將資料印出
   CALL aqcr340_g01_rep_data()
 
END FUNCTION
]]>
  </section>
  <section id="aqcr340_g01.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aqcr340_g01.other_report" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.report"/>}
]]>
  </section>
  <section id="aqcr340_g01.rep" ver="9" status="" src="s" readonly="">
    <![CDATA[PRIVATE REPORT aqcr340_g01_rep(sr1)
DEFINE sr1 sr1_r
DEFINE sr2 sr2_r
DEFINE l_subrep01_show  LIKE type_t.chr1,
       l_subrep02_show  LIKE type_t.chr1,
       l_subrep03_show  LIKE type_t.chr1,
       l_subrep04_show  LIKE type_t.chr1
DEFINE l_cnt           LIKE type_t.num5
DEFINE l_sub_sql       STRING
#add-point:rep段define
{<point name="rep.define"/>}
#end add-point
 
    #add-point:rep段ORDER_before
    {<point name="rep.order.before" mark="Y"/>}
    #end add-point
    ORDER EXTERNAL BY sr1.l_qcbk001_qcbk002
    #add-point:rep段ORDER_after
    {<point name="rep.order.after"/>}
    #end add-point
    
    FORMAT
       FIRST PAGE HEADER          
          PRINTX g_user,g_pdate,g_rep_code,g_company,g_ptime,g_user_name,g_date_fmt
          PRINTX tm.*
          PRINTX g_grNumFmt.*
 
          #讀取beforeGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        BEFORE GROUP OF sr1.l_qcbk001_qcbk002
            #報表 d05 樣板自動產生(Version:5)
            CALL cl_gr_title_clear()  #清除title變數值 
            #add-point:rep.header  #公司資訊(不在公用變數內)
            {<point name="rep.header"  mark="Y"/>}
            #end add-point:rep.header 
            LET g_rep_docno = sr1.l_qcbk001_qcbk002
            CALL cl_gr_init_pageheader() #表頭資訊
            PRINTX g_grPageHeader.*
            PRINTX g_grPageFooter.*
            #add-point:rep.apr.signstr.before
            {<point name="rep.apr.signstr.before"  mark="Y"/>}              
            #end add-point:rep.apr.signstr.before   
            LET g_doc_key = 'qcbkent=' ,sr1.qcbkent,'{+}qcbksite=' ,sr1.qcbksite,'{+}qcbk001=' ,sr1.qcbk001,'{+}qcbk002=' ,sr1.qcbk002         
            CALL cl_gr_init_apr(sr1.l_qcbk001_qcbk002)
            #add-point:rep.apr.signstr
            {<point name="rep.apr.signstr"/>}              
            #end add-point:rep.apr.signstr
            PRINTX g_grSign.*
 
 
 
           #add-point:rep.b_group.l_qcbk001_qcbk002.before
           {<point name="rep.b_group.l_qcbk001_qcbk002.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub01.before
           {<point name="rep.sub01.before"/>}
           #end add-point:rep.sub01.before
 
           #add-point:rep.sub01.sql
           {<point name="rep.sub01.sql" mark="Y"/>}
           #end add-point:rep.sub01.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='2' AND ooffent = '", 
                sr1.qcbkent CLIPPED ,"'", " AND  ooff002 = '", sr1.l_qcbk001_qcbk002 CLIPPED ,"'"
 
           #add-point:rep.sub01.afsql
           {<point name="rep.sub01.afsql"/>}
           #end add-point:rep.sub01.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep01_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aqcr340_g01_repcur01_cnt_pre FROM l_sub_sql
           EXECUTE aqcr340_g01_repcur01_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep01_show ="Y"
           END IF
           PRINTX l_subrep01_show
           START REPORT aqcr340_g01_subrep01
           DECLARE aqcr340_g01_repcur01 CURSOR FROM g_sql
           FOREACH aqcr340_g01_repcur01 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aqcr340_g01_repcur01:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub01.foreach
              {<point name="rep.sub01.foreach"/>}
              #end add-point:rep.sub01.foreach
              OUTPUT TO REPORT aqcr340_g01_subrep01(sr2.*)
           END FOREACH
           FINISH REPORT aqcr340_g01_subrep01
           #add-point:rep.sub01.after
           {<point name="rep.sub01.after"/>}
           #end add-point:rep.sub01.after
 
 
 
           #add-point:rep.b_group.l_qcbk001_qcbk002.after
           {<point name="rep.b_group.l_qcbk001_qcbk002.after"/>}
           #end add-point:
 
 
 
 
       ON EVERY ROW
          #add-point:rep.everyrow.before
          {<point name="rep.everyrow.before"/>}
          #end add-point:rep.everyrow.before
 
          #單身前備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub02.before
           {<point name="rep.sub02.before"/>}
           #end add-point:rep.sub02.before
 
           #add-point:rep.sub02.sql
           {<point name="rep.sub02.sql" mark="Y"/>}
           #end add-point:rep.sub02.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='2' AND ooffent = '", 
                sr1.qcbkent CLIPPED ,"'", " AND  ooff002 = '", sr1.l_qcbk001_qcbk002 CLIPPED ,"'"
 
           #add-point:rep.sub02.afsql
           {<point name="rep.sub02.afsql"/>}
           #end add-point:rep.sub02.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep02_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aqcr340_g01_repcur02_cnt_pre FROM l_sub_sql
           EXECUTE aqcr340_g01_repcur02_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep02_show ="Y"
           END IF
           PRINTX l_subrep02_show
           START REPORT aqcr340_g01_subrep02
           DECLARE aqcr340_g01_repcur02 CURSOR FROM g_sql
           FOREACH aqcr340_g01_repcur02 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aqcr340_g01_repcur02:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub02.foreach
              {<point name="rep.sub02.foreach"/>}
              #end add-point:rep.sub02.foreach
              OUTPUT TO REPORT aqcr340_g01_subrep02(sr2.*)
           END FOREACH
           FINISH REPORT aqcr340_g01_subrep02
           #add-point:rep.sub02.after
           {<point name="rep.sub02.after"/>}
           #end add-point:rep.sub02.after
 
 
 
          #add-point:rep.everyrow.beforerow
          {<point name="rep.everyrow.beforerow"/>}
          #end add-point:rep.everyrow.beforerow
            
          PRINTX sr1.*
 
          #add-point:rep.everyrow.afterrow
          {<point name="rep.everyrow.afterrow"/>}
          #end add-point:rep.everyrow.afterrow
 
          #單身後備註
             #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub03.before
           {<point name="rep.sub03.before"/>}
           #end add-point:rep.sub03.before
 
           #add-point:rep.sub03.sql
           {<point name="rep.sub03.sql" mark="Y"/>}
           #end add-point:rep.sub03.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='7' AND ooff012='1' AND ooff002 = '", 
                sr1.qcbkent CLIPPED ,"'"
 
           #add-point:rep.sub03.afsql
           {<point name="rep.sub03.afsql"/>}
           #end add-point:rep.sub03.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep03_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aqcr340_g01_repcur03_cnt_pre FROM l_sub_sql
           EXECUTE aqcr340_g01_repcur03_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep03_show ="Y"
           END IF
           PRINTX l_subrep03_show
           START REPORT aqcr340_g01_subrep03
           DECLARE aqcr340_g01_repcur03 CURSOR FROM g_sql
           FOREACH aqcr340_g01_repcur03 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aqcr340_g01_repcur03:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub03.foreach
              {<point name="rep.sub03.foreach"/>}
              #end add-point:rep.sub03.foreach
              OUTPUT TO REPORT aqcr340_g01_subrep03(sr2.*)
           END FOREACH
           FINISH REPORT aqcr340_g01_subrep03
           #add-point:rep.sub03.after
           {<point name="rep.sub03.after"/>}
           #end add-point:rep.sub03.after
 
 
 
          #add-point:rep.everyrow.after
          {<point name="rep.everyrow.after"/>}
          #end add-point:rep.everyrow.after        
 
          #讀取afterGrup子樣板+子報表樣板
        #報表 d01 樣板自動產生(Version:1)
        AFTER GROUP OF sr1.l_qcbk001_qcbk002
 
           #add-point:rep.a_group.l_qcbk001_qcbk002.before
           {<point name="rep.a_group.l_qcbk001_qcbk002.before"/>}
           #end add-point:
 
           #報表 d03 樣板自動產生(Version:2)
           #add-point:rep.sub04.before
           {<point name="rep.sub04.before"/>}
           #end add-point:rep.sub04.before
 
           #add-point:rep.sub04.sql
           {<point name="rep.sub04.sql" mark="Y"/>}
           #end add-point:rep.sub04.sql
 
           LET g_sql = " SELECT ooff013 FROM ooff_t WHERE ooffstus='Y' and ooff001='6' AND ooff012='1' AND ooffent = '", 
                sr1.qcbkent CLIPPED ,"'", " AND  ooff002 = '", sr1.l_qcbk001_qcbk002 CLIPPED ,"'"
 
           #add-point:rep.sub04.afsql
           {<point name="rep.sub04.afsql"/>}
           #end add-point:rep.sub04.afsql           
           LET l_cnt = 0
           LET l_sub_sql = ""
           LET l_subrep04_show ="N"
           LET l_sub_sql = "SELECT COUNT(1) FROM (",g_sql,")"
           PREPARE aqcr340_g01_repcur04_cnt_pre FROM l_sub_sql
           EXECUTE aqcr340_g01_repcur04_cnt_pre INTO l_cnt
           IF l_cnt > 0 THEN 
              LET l_subrep04_show ="Y"
           END IF
           PRINTX l_subrep04_show
           START REPORT aqcr340_g01_subrep04
           DECLARE aqcr340_g01_repcur04 CURSOR FROM g_sql
           FOREACH aqcr340_g01_repcur04 INTO sr2.*
              IF STATUS THEN 
                 INITIALIZE g_errparam TO NULL
                 LET g_errparam.extend = "aqcr340_g01_repcur04:"
                 LET g_errparam.code   = SQLCA.sqlcode
                 LET g_errparam.popup  = FALSE
                 CALL cl_err()                  
                 EXIT FOREACH 
              END IF
              #add-point:rep.sub04.foreach
              {<point name="rep.sub04.foreach"/>}
              #end add-point:rep.sub04.foreach
              OUTPUT TO REPORT aqcr340_g01_subrep04(sr2.*)
           END FOREACH
           FINISH REPORT aqcr340_g01_subrep04
           #add-point:rep.sub04.after
           {<point name="rep.sub04.after"/>}
           #end add-point:rep.sub04.after
 
 
 
           #add-point:rep.a_group.l_qcbk001_qcbk002.after
           {<point name="rep.a_group.l_qcbk001_qcbk002.after"/>}
           #end add-point:
 
 
 
       ON LAST ROW
            #add-point:rep.lastrow.before  
            {<point name="rep.lastrow.before"/>}        
            #edn add point :rep.lastrow.before
 
            #add-point:rep.lastrow.after
            {<point name="rep.lastrow.after"/>}
            #edn add point :rep.lastrow.after
END REPORT
]]>
  </section>
  <section id="aqcr340_g01.rep_data" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aqcr340_g01_rep_data()
   DEFINE HANDLER         om.SaxDocumentHandler
   DEFINE l_i             INTEGER
 
    #判斷是否有報表資料，若回彈出訊息視窗
    IF sr.getLength() = 0 THEN
       INITIALIZE g_errparam TO NULL
       LET g_errparam.code = "adz-00285"
       LET g_errparam.extend = NULL
       LET g_errparam.popup  = FALSE
       LET g_errparam.replace[1] = ''
       CALL cl_err()  
       RETURN 
    END IF
    WHILE TRUE               
       LET handler = cl_gr_handler()
       IF handler IS NOT NULL THEN
          START REPORT aqcr340_g01_rep TO XML HANDLER handler
          FOR l_i = 1 TO sr.getLength()
             OUTPUT TO REPORT aqcr340_g01_rep(sr[l_i].*)
          END FOR
          FINISH REPORT aqcr340_g01_rep
       END IF
       IF INT_FLAG = TRUE THEN
          LET INT_FLAG = FALSE
          EXIT WHILE
       END IF
    END WHILE
    CALL cl_gr_close_report()
END FUNCTION
]]>
  </section>
  <section id="aqcr340_g01.sel_prep" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 選單功能實際執行處
PRIVATE FUNCTION aqcr340_g01_sel_prep()
   #add-point:sel_prep段define
   {<point name="sel_prep.define"/>}
   #end add-point
 
   #add-point:sel_prep before
   {<point name="sel_prep.before" mark="Y"/>}
   #end add-point
   
   #add-point:sel_prep g_select
   {<point name="sel_prep.g_select" mark="Y"/>}
   #end add-point
   LET g_select = " SELECT qcbk000,qcbk001,qcbk002,qcbk003,qcbk004,qcbk005,qcbk006,qcbk007,qcbk008,qcbk010, 
       qcbk011,qcbk012,qcbk013,qcbk014,qcbk015,qcbk016,qcbk017,qcbk018,qcbk019,qcbk020,qcbk021,qcbk022, 
       qcbk023,qcbkent,qcbksite,qcbkstus,qcbl003,qcbl004,qcbl007,qcbl008,qcbl009,qcblseq,imaal_t.imaal003, 
       oocql_t.oocql004,imaal_t.imaal004,'','',''"
 
   #add-point:sel_prep g_from
   {<point name="sel_prep.g_from" mark="Y"/>}
   #end add-point
    LET g_from = " FROM qcbk_t LEFT OUTER JOIN imaal_t ON imaal_t.imaal001 = qcbk_t.qcbk008 AND imaal_t.imaalent = qcbk_t.qcbkent AND imaal_t.imaal002 = '" , 
        g_dlang,"'" ,"             LEFT OUTER JOIN oocql_t ON oocql_t.oocql001 = '1051' AND oocql_t.oocql002 = qcbk_t.qcbk011 AND oocql_t.oocqlent = qcbk_t.qcbkent AND oocql_t.oocql003 = '" , 
        g_dlang,"'" ," LEFT OUTER JOIN ( SELECT qcbl_t.* FROM qcbl_t  ) x  ON qcbk_t.qcbkent = x.qcblent  
        AND qcbk_t.qcbksite = x.qcblsite AND qcbk_t.qcbk001 = x.qcbl001 AND qcbk_t.qcbk002 = x.qcbl002" 

 
   #add-point:sel_prep g_where
   {<point name="sel_prep.g_where" mark="Y"/>}
   #end add-point
    LET g_where = " WHERE " ,tm.wc CLIPPED 
 
   #add-point:sel_prep g_order
   {<point name="sel_prep.g_order" mark="Y"/>}
   #end add-point
    LET g_order = " ORDER BY qcblseq"
 
   #add-point:sel_prep.sql.before
   {<point name="sel_prep.sql.before" mark="Y"/>}
   #end add-point:sel_prep.sql.before
   LET g_where = g_where ,cl_sql_add_filter("qcbk_t")   #資料過濾功能
   LET g_sql = g_select CLIPPED ," ",g_from CLIPPED ," ",g_where CLIPPED ," ",g_order CLIPPED
   LET g_sql = cl_sql_add_mask(g_sql)    #遮蔽特定資料, 若寫至add-point也需複製此段 
 
   #add-point:sel_prep.sql.after
   {<point name="sel_prep.sql.after" mark="Y"/>}
   #end add-point
   PREPARE aqcr340_g01_prepare FROM g_sql
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL
      LET g_errparam.extend = 'prepare:'
      LET g_errparam.code   = STATUS
      LET g_errparam.popup  = TRUE
      CALL cl_err()   
      LET g_rep_success = 'N'    
   END IF
   DECLARE aqcr340_g01_curs CURSOR FOR aqcr340_g01_prepare
 
END FUNCTION
]]>
  </section>
  <section id="aqcr340_g01.subrep_str" ver="1" status="" src="s" readonly="">
    <![CDATA[#讀取子報表樣板
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aqcr340_g01_subrep01(sr2)
DEFINE  sr2  sr2_r
#add-point:sub01.define
{<point name="sub01.define"/>}
#end add-point:sub01.define
 
    #add-point:sub01.order.before
    {<point name="sub01.order.before"/>}
    #end add-point:sub01.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub01.everyrow.before
            {<point name="sub01.everyrow.before"/>}              
            #end add-point:sub01.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub01.everyrow.after
            {<point name="sub01.everyrow.after"/>}
            #end add-point:sub01.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aqcr340_g01_subrep02(sr2)
DEFINE  sr2  sr2_r
#add-point:sub02.define
{<point name="sub02.define"/>}
#end add-point:sub02.define
 
    #add-point:sub02.order.before
    {<point name="sub02.order.before"/>}
    #end add-point:sub02.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub02.everyrow.before
            {<point name="sub02.everyrow.before"/>}              
            #end add-point:sub02.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub02.everyrow.after
            {<point name="sub02.everyrow.after"/>}
            #end add-point:sub02.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aqcr340_g01_subrep03(sr2)
DEFINE  sr2  sr2_r
#add-point:sub03.define
{<point name="sub03.define"/>}
#end add-point:sub03.define
 
    #add-point:sub03.order.before
    {<point name="sub03.order.before"/>}
    #end add-point:sub03.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub03.everyrow.before
            {<point name="sub03.everyrow.before"/>}              
            #end add-point:sub03.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub03.everyrow.after
            {<point name="sub03.everyrow.after"/>}
            #end add-point:sub03.everyrow.after
 
 
END REPORT
 
 
#報表 d02 樣板自動產生(Version:1)
PRIVATE REPORT aqcr340_g01_subrep04(sr2)
DEFINE  sr2  sr2_r
#add-point:sub04.define
{<point name="sub04.define"/>}
#end add-point:sub04.define
 
    #add-point:sub04.order.before
    {<point name="sub04.order.before"/>}
    #end add-point:sub04.order.before
 
 
 
    FORMAT
 
 
 
       ON EVERY ROW
            #add-point:sub04.everyrow.before
            {<point name="sub04.everyrow.before"/>}              
            #end add-point:sub04.everyrow.before
 
            PRINTX sr2.*
 
            #add-point:sub04.everyrow.after
            {<point name="sub04.everyrow.after"/>}
            #end add-point:sub04.everyrow.after
 
 
END REPORT
 
 
 
]]>
  </section>
</add_points>
