<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<add_points prog="aqcm300" std_prog="aqcm300" erpver="1.0" module="AQC" ver="2" env="s" zone="t10prd" booking="Y" type="M" identity="s" section_flag="N" designer_ver="1.0">
  <other>
    <code_template value="F" status=""/>
    <free_style value="N" status=""/>
    <start_arg value="" status=""/>
  </other>
  <point name="function.aqcm300_qcbk_desc" order="1" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aqcm300_qcbk_desc()
   
   IF NOT cl_null(g_qcbk_m.qcbk001) THEN 
      SELECT qcba000,qcba031,qcba001,qcba002,qcba003,qcba004,qcba010,qcba011,qcba012
        INTO g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,
             g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010
        FROM qcba_t             
       WHERE qcbaent = g_enterprise
         AND qcbadocno = g_qcbk_m.qcbk001
      IF NOT cl_null(g_qcbk_m.qcbk002) THEN              
         SELECT qcbd001 INTO g_qcbk_m.qcbk011
           FROM qcbd_t
          WHERE qcbdent = g_enterprise
            AND qcbddocno = g_qcbk_m.qcbk001      
            AND qcbdseq = g_qcbk_m.qcbk002
      END IF
      CALL s_feature_description(g_qcbk_m.qcbk008,g_qcbk_m.qcbk010) RETURNING g_success,g_qcbk_m.qcbk010_desc
      CALL aqcm300_qcbk008_desc()
      
      SELECT oocql004 INTO g_qcbk_m.qcbk011_desc
        FROM oocql_t
       WHERE oocqlent = g_enterprise
         AND oocql001 = '1051'
         AND oocql002 = g_qcbk_m.qcbk011
         
      DISPLAY BY NAME g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,
                      g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011,
                      g_qcbk_m.qcbk010_desc,g_qcbk_m.qcbk011_desc
   END IF
END FUNCTION]]>
  </point>
  <point name="function.aqcm300_qcbk008_desc" order="2" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aqcm300_qcbk008_desc()
   INITIALIZE g_ref_fields TO NULL
   LET g_ref_fields[1] = g_qcbk_m.qcbk008
   CALL ap_ref_array2(g_ref_fields,"SELECT imaal003,imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
   LET g_qcbk_m.imaal003 = g_rtn_fields[1] 
   LET g_qcbk_m.imaal004 = g_rtn_fields[2] 
   DISPLAY BY NAME g_qcbk_m.imaal003,g_qcbk_m.imaal004
END FUNCTION]]>
  </point>
  <point name="function.aqcm300_ins_detail" order="3" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aqcm300_ins_detail()
DEFINE l_sql    STRING
DEFINE l_qcbl   RECORD LIKE qcbl_t.*
DEFINE l_cnt    LIKE type_t.num5

   LET l_cnt = 1
   LET l_sql = " SELECT DISTINCT qcbadocno,qcba014,qcba015 ",
               "   FROM qcba_t,qcbd_t ",
               "  WHERE qcbaent = qcbdent AND qcbadocno = qcbddocno ",
               "    AND qcbaent = '",g_enterprise,"'",
               "    AND qcbasite = '",g_site,"'",
               "    AND qcba001 = '",g_qcbk_m.qcbk003,"'",
               "    AND qcba002 = ",g_qcbk_m.qcbk004,
               "    AND qcbastus = 'Y' ",
               "    AND qcbd001 = '",g_qcbk_m.qcbk011,"'",
               "    AND qcbadocdt BETWEEN '",g_qcbk_m.qcbk022,"' AND '",g_qcbk_m.qcbk023,"'",
               " ORDER BY qcbadocno" 
   PREPARE ins_qcbl_pre FROM l_sql
   DECLARE ins_qcbl_cur CURSOR FOR ins_qcbl_pre
   FOREACH ins_qcbl_cur INTO l_qcbl.qcbl009,l_qcbl.qcbl003,l_qcbl.qcbl004
      
      LET l_qcbl.qcblent = g_enterprise
      LET l_qcbl.qcblsite = g_site
      LET l_qcbl.qcbl001 = g_qcbk_m.qcbk001
      LET l_qcbl.qcbl002 = g_qcbk_m.qcbk002
      LET l_qcbl.qcblseq = l_cnt 
#      LET l_qcbl.qcbl003 = g_today
#      LET l_qcbl.qcbl004 = TIME
      
      LET l_sql = " INSERT INTO qcbm_t ",
                  " SELECT '",g_enterprise,"','",g_site,"','",g_qcbk_m.qcbk001,"',",g_qcbk_m.qcbk002,",",
                  " ",l_cnt,",ROWNUM,qcbg002 ",
                  "   FROM qcbg_t ",
                  "  WHERE qcbgent = '",g_enterprise,"'",
                  "    AND qcbgdocno = '",l_qcbl.qcbl009,"'",
                  "    AND qcbgseq = (SELECT MIN(qcbdseq) FROM qcbd_t ",
                  "                    WHERE qcbdent = qcbgent AND qcbddocno = qcbgdocno ",
                  "                      AND qcbdseq = qcbgseq AND qcbd001 = '",g_qcbk_m.qcbk011,"')"                  
      PREPARE ins_qcbm FROM l_sql
      EXECUTE ins_qcbm
      
      SELECT COUNT(*) INTO l_qcbl.qcbl005 FROM qcbm_t
       WHERE qcbment = g_enterprise
         AND qcbmsite = g_site
         AND qcbm001 = g_qcbk_m.qcbk001
         AND qcbm002 = g_qcbk_m.qcbk002
         AND qcbmseq = l_cnt
         
      SELECT SUM(qcbm003) INTO l_qcbl.qcbl006 FROM qcbm_t
       WHERE qcbment = g_enterprise
         AND qcbmsite = g_site
         AND qcbm001 = g_qcbk_m.qcbk001
         AND qcbm002 = g_qcbk_m.qcbk002
         AND qcbmseq = l_cnt

      LET l_qcbl.qcbl007 = l_qcbl.qcbl006/l_qcbl.qcbl005
      
      SELECT MAX(qcbm003)-MIN(qcbm003) INTO l_qcbl.qcbl008 FROM qcbm_t
       WHERE qcbment = g_enterprise
         AND qcbmsite = g_site
         AND qcbm001 = g_qcbk_m.qcbk001
         AND qcbm002 = g_qcbk_m.qcbk002
         AND qcbmseq = l_cnt   

      INSERT INTO qcbl_t VALUES l_qcbl.*
      
      LET l_cnt = l_cnt + 1
   END FOREACH
   
   CALL aqcm300_rtn_qcbk()
   
END FUNCTION]]>
  </point>
  <point name="function.aqcm300_rtn_qcbk" order="4" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aqcm300_rtn_qcbk()
DEFINE l_qcaf004  LIKE qcaf_t.qcaf004,
       l_qcaf014  LIKE qcaf_t.qcaf014,
       l_qcaf015  LIKE qcaf_t.qcaf015


   DECLARE get_qcbk012 SCROLL CURSOR FOR 
    SELECT qcbl005 FROM qcbl_t
     WHERE qcblent = g_enterprise
       AND qcblsite = g_site
       AND qcbl001 = g_qcbk_m.qcbk001
       AND qcbl002 = g_qcbk_m.qcbk002
     ORDER BY qcblseq 
   OPEN get_qcbk012
   FETCH FIRST get_qcbk012 INTO g_qcbk_m.qcbk012
   CLOSE get_qcbk012 

   SELECT COUNT(*) INTO g_qcbk_m.qcbk013
     FROM qcbl_t
    WHERE qcblent = g_enterprise
      AND qcblsite = g_site
      AND qcbl001 = g_qcbk_m.qcbk001
      AND qcbl002 = g_qcbk_m.qcbk002
      
   SELECT SUM(qcbl007),SUM(qcbl008) INTO g_qcbk_m.qcbk014,g_qcbk_m.qcbk015
     FROM qcbl_t
    WHERE qcblent = g_enterprise
      AND qcblsite = g_site
      AND qcbl001 = g_qcbk_m.qcbk001
      AND qcbl002 = g_qcbk_m.qcbk002 

   SELECT qcaf004,qcaf014,qcaf015 INTO l_qcaf004,l_qcaf014,l_qcaf015
     FROM qcaf_t
    WHERE qcafent = g_enterprise
      AND qcaf001 = g_qcbk_m.qcbk012

   LET g_qcbk_m.qcbk016 = g_qcbk_m.qcbk014/g_qcbk_m.qcbk012
   LET g_qcbk_m.qcbk019 = g_qcbk_m.qcbk015/g_qcbk_m.qcbk012   
   LET g_qcbk_m.qcbk017 = g_qcbk_m.qcbk016 + g_qcbk_m.qcbk019 * l_qcaf004
   LET g_qcbk_m.qcbk018 = g_qcbk_m.qcbk016 - g_qcbk_m.qcbk019 * l_qcaf004
   LET g_qcbk_m.qcbk020 = g_qcbk_m.qcbk019 * l_qcaf015
   LET g_qcbk_m.qcbk021 = g_qcbk_m.qcbk019 * l_qcaf014
   
   UPDATE qcbk_t
      SET qcbk012 = g_qcbk_m.qcbk012,
          qcbk013 = g_qcbk_m.qcbk013,
          qcbk014 = g_qcbk_m.qcbk014,
          qcbk015 = g_qcbk_m.qcbk015,
          qcbk016 = g_qcbk_m.qcbk016,
          qcbk017 = g_qcbk_m.qcbk017,
          qcbk018 = g_qcbk_m.qcbk018,
          qcbk019 = g_qcbk_m.qcbk019,
          qcbk020 = g_qcbk_m.qcbk020,
          qcbk021 = g_qcbk_m.qcbk021
    WHERE qcbkent = g_enterprise
      AND qcbksite = g_site
      AND qcbk001 = g_qcbk_m.qcbk001          
      AND qcbk002 = g_qcbk_m.qcbk002
      
   DISPLAY BY NAME g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015,g_qcbk_m.qcbk016,
                   g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021
END FUNCTION]]>
  </point>
  <point name="function.aqcm300_rtn_qcbl" order="5" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aqcm300_rtn_qcbl()
      
      SELECT COUNT(*) INTO g_qcbl_d[g_detail_idx].qcbl005 FROM qcbm_t
       WHERE qcbment = g_enterprise
         AND qcbmsite = g_site
         AND qcbm001 = g_qcbk_m.qcbk001
         AND qcbm002 = g_qcbk_m.qcbk002
         AND qcbmseq = g_qcbl_d[g_detail_idx].qcblseq
         
      SELECT SUM(qcbm003) INTO g_qcbl_d[g_detail_idx].qcbl006 FROM qcbm_t
       WHERE qcbment = g_enterprise
         AND qcbmsite = g_site
         AND qcbm001 = g_qcbk_m.qcbk001
         AND qcbm002 = g_qcbk_m.qcbk002
         AND qcbmseq = g_qcbl_d[g_detail_idx].qcblseq

      LET g_qcbl_d[g_detail_idx].qcbl007 = g_qcbl_d[g_detail_idx].qcbl006/g_qcbl_d[g_detail_idx].qcbl005
      
      SELECT MAX(qcbm003)-MIN(qcbm003) INTO g_qcbl_d[g_detail_idx].qcbl008 FROM qcbm_t
       WHERE qcbment = g_enterprise
         AND qcbmsite = g_site
         AND qcbm001 = g_qcbk_m.qcbk001
         AND qcbm002 = g_qcbk_m.qcbk002
         AND qcbmseq = g_qcbl_d[g_detail_idx].qcblseq 
         
   UPDATE qcbl_t
      SET qcbl005 = g_qcbl_d[g_detail_idx].qcbl005,
          qcbl006 = g_qcbl_d[g_detail_idx].qcbl006,
          qcbl007 = g_qcbl_d[g_detail_idx].qcbl007,
          qcbl008 = g_qcbl_d[g_detail_idx].qcbl008
    WHERE qcblent = g_enterprise
      AND qcblsite = g_site
      AND qcbl001 = g_qcbk_m.qcbk001
      AND qcbl002 = g_qcbk_m.qcbk002
      AND qcblseq = g_qcbl_d[g_detail_idx].qcblseq     
END FUNCTION]]>
  </point>
  <point name="function.aqcm300_qcbk002_chk" order="6" ver="1" cite_std="N" new="Y" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[
PRIVATE FUNCTION aqcm300_qcbk002_chk()
DEFINE l_cnt  LIKE type_t.num5
DEFINE r_success LIKE type_t.num5

   LET r_success = TRUE
   IF NOT cl_null(g_qcbk_m.qcbk001) AND NOT cl_null(g_qcbk_m.qcbk002) THEN 
      LET l_cnt= 0
      SELECT COUNT(*) INTO l_cnt
        FROM qcbd_t
       WHERE qcbdent = g_enterprise
         AND qcbddocno = g_qcbk_m.qcbk001
         AND qcbdseq = g_qcbk_m.qcbk002 
      IF l_cnt = 0 THEN 
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_qcbk_m.qcbk001,"+",g_qcbk_m.qcbk002
         LET g_errparam.code   = 'aqc-00087'
         LET g_errparam.popup  = TRUE 
         CALL cl_err() 
         LET r_success = FALSE         
      END IF
   END IF
   RETURN r_success
END FUNCTION]]>
  </point>
  <point name="browser_fill.cnt_sqlwc" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET l_sub_sql = l_sub_sql," AND qcbksite ='",g_site,"'"]]>
  </point>
  <point name="browser_fill.fill_sqlwc" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_sql = g_sql," AND qcbksite ='",g_site,"'"]]>
  </point>
  <point name="browser_fill.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      INITIALIZE g_ref_fields TO NULL
      LET g_ref_fields[1] = g_browser[g_cnt].b_qcbk008
      CALL ap_ref_array2(g_ref_fields,"SELECT imaal004 FROM imaal_t WHERE imaalent='"||g_enterprise||"' AND imaal001=? AND imaal002='"||g_dlang||"'","") RETURNING g_rtn_fields
      LET g_browser[g_cnt].b_b_qcbk008_desc_1 = g_rtn_fields[1] ]]>
  </point>
  <point name="construct.c.page1.qcbl009" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_qcbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbl009  #顯示到畫面上
            NEXT FIELD qcbl009                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbk001" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_qcbadocno()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbk001  #顯示到畫面上
            NEXT FIELD qcbk001                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbk008" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_imaa001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbk008  #顯示到畫面上
            NEXT FIELD qcbk008                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbkcnfid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbkcnfid  #顯示到畫面上
            NEXT FIELD qcbkcnfid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbkcrtdp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbkcrtdp  #顯示到畫面上
            NEXT FIELD qcbkcrtdp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbkcrtid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbkcrtid  #顯示到畫面上
            NEXT FIELD qcbkcrtid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbkmodid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbkmodid  #顯示到畫面上
            NEXT FIELD qcbkmodid                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbkowndp" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooeg001_9()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbkowndp  #顯示到畫面上
            NEXT FIELD qcbkowndp                     #返回原欄位
    

]]>
  </point>
  <point name="construct.c.qcbkownid" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a08 樣板自動產生(Version:2)
            #開窗c段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'c' 
            LET g_qryparam.reqry = FALSE
            CALL q_ooag001()                           #呼叫開窗
            DISPLAY g_qryparam.return1 TO qcbkownid  #顯示到畫面上
            NEXT FIELD qcbkownid                     #返回原欄位
    

]]>
  </point>
  <point name="default_search.after" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="init.init" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_combo_scc('b_qcbk000','5056')]]>
  </point>
  <point name="input.a.page1.qcbl009" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_qcbl_d[l_ac].qcbl009) THEN 
#應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_qcbl_d[l_ac].qcbl009

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_qcbadocno") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  SELECT qcba014,qcba015 INTO g_qcbl_d[l_ac].qcbl003,g_qcbl_d[l_ac].qcbl004
                    FROM qcba_t
                   WHERE qcbaent = g_enterprise
                     AND qcbadocno = g_qcbl_d[l_ac].qcbl009                   
               ELSE
                  #檢查失敗時後續處理
                  LET g_qcbl_d[l_ac].qcbl009 = g_qcbl_d_t.qcbl009 
                  NEXT FIELD CURRENT
               END IF
               IF l_cmd = 'a' OR (l_cmd = 'u' AND (g_qcbl_d_o.qcbl009 <> g_qcbl_d[l_ac].qcbl009 OR cl_null(g_qcbl_d_o.qcbl009))) THEN 
                  SELECT qcba014,qcba015 INTO g_qcbl_d[l_ac].qcbl003,g_qcbl_d[l_ac].qcbl004
                    FROM qcba_t
                   WHERE qcbaent = g_enterprise
                     AND qcbadocno = g_qcbl_d[l_ac].qcbl009                  
               END IF               
            END IF 

            LET g_qcbl_d_o.qcbl009 = g_qcbl_d[l_ac].qcbl009]]>
  </point>
  <point name="input.a.page1.qcblseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_qcbk_m.qcbksite IS NOT NULL AND g_qcbk_m.qcbk001 IS NOT NULL AND g_qcbk_m.qcbk002 IS NOT NULL AND g_qcbl_d[g_detail_idx].qcblseq IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_qcbk_m.qcbksite != g_qcbksite_t OR g_qcbk_m.qcbk001 != g_qcbk001_t OR g_qcbk_m.qcbk002 != g_qcbk002_t OR g_qcbl_d[g_detail_idx].qcblseq != g_qcbl_d_t.qcblseq)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcbl_t WHERE "||"qcblent = '" ||g_enterprise|| "' AND "||"qcblsite = '"||g_qcbk_m.qcbksite ||"' AND "|| "qcbl001 = '"||g_qcbk_m.qcbk001 ||"' AND "|| "qcbl002 = '"||g_qcbk_m.qcbk002 ||"' AND "|| "qcblseq = '"||g_qcbl_d[g_detail_idx].qcblseq ||"'",'std-00004',0) THEN 
                     LET g_qcbl_d[l_ac].qcblseq = g_qcbl_d_t.qcblseq
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.page2.qcbmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  g_qcbk_m.qcbksite IS NOT NULL AND g_qcbk_m.qcbk001 IS NOT NULL AND g_qcbk_m.qcbk002 IS NOT NULL AND g_qcbl_d[g_detail_idx].qcblseq IS NOT NULL AND g_qcbl2_d[g_detail_idx2].qcbmseq1 IS NOT NULL THEN 
               IF l_cmd = 'a' OR ( l_cmd = 'u' AND (g_qcbk_m.qcbksite != g_qcbksite_t OR g_qcbk_m.qcbk001 != g_qcbk001_t OR g_qcbk_m.qcbk002 != g_qcbk002_t OR g_qcbl_d[g_detail_idx].qcblseq != g_qcbl_d[g_detail_idx].qcblseq OR g_qcbl2_d[g_detail_idx2].qcbmseq1 != g_qcbl2_d_t.qcbmseq1)) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcbm_t WHERE "||"qcbment = '" ||g_enterprise|| "' AND "||"qcbmsite = '"||g_qcbk_m.qcbksite ||"' AND "|| "qcbm001 = '"||g_qcbk_m.qcbk001 ||"' AND "|| "qcbm002 = '"||g_qcbk_m.qcbk002 ||"' AND "|| "qcbmseq = '"||g_qcbl_d[g_detail_idx].qcblseq ||"' AND "|| "qcbmseq1 = '"||g_qcbl2_d[g_detail_idx2].qcbmseq1 ||"'",'std-00004',0) THEN 
                     LET g_qcbl2_d[l_ac].qcbmseq1 = g_qcbl2_d_t.qcbmseq1
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

]]>
  </point>
  <point name="input.a.qcbk001" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_qcbk_m.qcbk001) THEN    
               #應用 a19 樣板自動產生(Version:2)
               #校驗代值
               #設定g_chkparam.*的參數前，先將其初始化，避免之前設定遺留的參數值造成影響。
               INITIALIZE g_chkparam.* TO NULL
               #設定g_chkparam.*的參數
               LET g_chkparam.arg1 = g_qcbk_m.qcbk001

                  
               #呼叫檢查存在並帶值的library
               IF cl_chk_exist("v_qcbadocno") THEN
                  #檢查成功時後續處理
                  #LET  = g_chkparam.return1
                  #DISPLAY BY NAME 
                  IF NOT aqcm300_qcbk002_chk() THEN 
                     LET g_qcbk_m.qcbk001 = g_qcbk_m_t.qcbk001
                     NEXT FIELD CURRENT
                  END IF 
               ELSE
                  #檢查失敗時後續處理
                  LET g_qcbk_m.qcbk001 = g_qcbk_m_t.qcbk001
                  NEXT FIELD CURRENT
               END IF
            

            END IF             
            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_qcbk_m.qcbksite) AND NOT cl_null(g_qcbk_m.qcbk001) AND NOT cl_null(g_qcbk_m.qcbk002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_qcbk_m.qcbksite != g_qcbksite_t  OR g_qcbk_m.qcbk001 != g_qcbk001_t  OR g_qcbk_m.qcbk002 != g_qcbk002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcbk_t WHERE "||"qcbkent = '" ||g_enterprise|| "' AND "||"qcbksite = '"||g_qcbk_m.qcbksite ||"' AND "|| "qcbk001 = '"||g_qcbk_m.qcbk001 ||"' AND "|| "qcbk002 = '"||g_qcbk_m.qcbk002 ||"'",'std-00004',0) THEN 
                     LET g_qcbk_m.qcbk001 = g_qcbk_m_t.qcbk001
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF

            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_qcbk_m_o.qcbk001 != g_qcbk_m.qcbk001 OR cl_null(g_qcbk_m_o.qcbk001))) THEN 
               CALL aqcm300_qcbk_desc()
            END IF
            LET g_qcbk_m_o.qcbk001 = g_qcbk_m.qcbk001]]>
  </point>
  <point name="input.a.qcbk002" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a05 樣板自動產生(Version:2)
            #確認資料無重複
            IF  NOT cl_null(g_qcbk_m.qcbksite) AND NOT cl_null(g_qcbk_m.qcbk001) AND NOT cl_null(g_qcbk_m.qcbk002) THEN 
               IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_qcbk_m.qcbksite != g_qcbksite_t  OR g_qcbk_m.qcbk001 != g_qcbk001_t  OR g_qcbk_m.qcbk002 != g_qcbk002_t )) THEN 
                  IF NOT ap_chk_notDup("","SELECT COUNT(*) FROM qcbk_t WHERE "||"qcbkent = '" ||g_enterprise|| "' AND "||"qcbksite = '"||g_qcbk_m.qcbksite ||"' AND "|| "qcbk001 = '"||g_qcbk_m.qcbk001 ||"' AND "|| "qcbk002 = '"||g_qcbk_m.qcbk002 ||"'",'std-00004',0) THEN 
                     LET g_qcbk_m.qcbk002 = g_qcbk_m_t.qcbk002
                     NEXT FIELD CURRENT
                  END IF
               END IF
            END IF
            IF NOT aqcm300_qcbk002_chk() THEN 
               LET g_qcbk_m.qcbk002 = g_qcbk_m_t.qcbk002
               NEXT FIELD CURRENT
            END IF 
            IF p_cmd = 'a' OR ( p_cmd = 'u' AND (g_qcbk_m_o.qcbk002 != g_qcbk_m.qcbk002 OR cl_null(g_qcbk_m_o.qcbk002))) THEN 
               CALL aqcm300_qcbk_desc()
            END IF
            LET g_qcbk_m_o.qcbk002 = g_qcbk_m.qcbk002]]>
  </point>
  <point name="input.a.qcbk022" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_qcbk_m.qcbk022) AND NOT cl_null(g_qcbk_m.qcbk023) THEN 
               IF g_qcbk_m.qcbk023 < g_qcbk_m.qcbk022 THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_qcbk_m.qcbk022
                  LET g_errparam.code   = 'acr-00068' 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err() 

                  LET g_qcbk_m.qcbk022 = g_qcbk_m_t.qcbk022
                  NEXT FIELD CURRENT 
               END IF
            END IF]]>
  </point>
  <point name="input.a.qcbk023" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_null(g_qcbk_m.qcbk022) AND NOT cl_null(g_qcbk_m.qcbk023) THEN 
               IF g_qcbk_m.qcbk023 < g_qcbk_m.qcbk022 THEN 
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = g_qcbk_m.qcbk023
                  LET g_errparam.code   = 'agl-00117' 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  
                  LET g_qcbk_m.qcbk023 = g_qcbk_m_t.qcbk023
                  NEXT FIELD CURRENT                  
               END IF
            END IF]]>
  </point>
  <point name="input.a.qcbksite" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            NEXT FIELD qcbk001
]]>
  </point>
  <point name="input.b.page1.qcblseq" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_qcbl_d[l_ac].qcblseq) THEN 
               SELECT MAX(qcblseq) INTO g_qcbl_d[l_ac].qcblseq
                 FROM qcbl_t
                WHERE qcblent = g_enterprise
                  AND qcbl001 = g_qcbk_m.qcbk001
                  AND qcblsite = g_qcbk_m.qcbksite
               IF cl_null(g_qcbl_d[l_ac].qcblseq) THEN 
                  LET g_qcbl_d[l_ac].qcblseq = 1
               ELSE
                  LET g_qcbl_d[l_ac].qcblseq = g_qcbl_d[l_ac].qcblseq + 1
               END IF 
            END IF]]>
  </point>
  <point name="input.b.page2.qcbmseq1" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_qcbl2_d[l_ac].qcbmseq1) THEN 
               SELECT MAX(qcbmseq1) INTO g_qcbl2_d[l_ac].qcbmseq1
                 FROM qcbm_t
                WHERE qcbment = g_enterprise
                  AND qcbm001 = g_qcbk_m.qcbk001
                  AND qcbmsite = g_qcbk_m.qcbksite
                  AND qcbmseq = g_qcbl_d[g_detail_idx].qcblseq
               IF cl_null(g_qcbl2_d[l_ac].qcbmseq1) THEN 
                  LET g_qcbl2_d[l_ac].qcbmseq1 = 1
               ELSE
                  LET g_qcbl2_d[l_ac].qcbmseq1 = g_qcbl2_d[l_ac].qcbmseq1 + 1
               END IF 
            END IF]]>
  </point>
  <point name="input.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_errshow = 1]]>
  </point>
  <point name="input.body.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aqcm300_rtn_qcbk()]]>
  </point>
  <point name="input.body.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_qcbl_d[l_ac].qcblseq) THEN 
               SELECT MAX(qcblseq) INTO g_qcbl_d[l_ac].qcblseq
                 FROM qcbl_t
                WHERE qcblent = g_enterprise
                  AND qcbl001 = g_qcbk_m.qcbk001
                  AND qcblsite = g_qcbk_m.qcbksite
               IF cl_null(g_qcbl_d[l_ac].qcblseq) THEN 
                  LET g_qcbl_d[l_ac].qcblseq = 1
               ELSE
                  LET g_qcbl_d[l_ac].qcblseq = g_qcbl_d[l_ac].qcblseq + 1
               END IF 
            END IF]]>
  </point>
  <point name="input.body2.after_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            CALL aqcm300_rtn_qcbl()
            CALL aqcm300_rtn_qcbk()]]>
  </point>
  <point name="input.body2.before_insert" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF cl_null(g_qcbl2_d[l_ac].qcbmseq1) THEN 
               SELECT MAX(qcbmseq1) INTO g_qcbl2_d[l_ac].qcbmseq1
                 FROM qcbm_t
                WHERE qcbment = g_enterprise
                  AND qcbm001 = g_qcbk_m.qcbk001
                  AND qcbmsite = g_qcbk_m.qcbksite
                  AND qcbmseq = g_qcbl_d[g_detail_idx].qcblseq
               IF cl_null(g_qcbl2_d[l_ac].qcbmseq1) THEN 
                  LET g_qcbl2_d[l_ac].qcbmseq1 = 1
               ELSE
                  LET g_qcbl2_d[l_ac].qcbmseq1 = g_qcbl2_d[l_ac].qcbmseq1 + 1
               END IF 
            END IF]]>
  </point>
  <point name="input.c.page1.qcbl009" order="" ver="1" cite_std="" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_qcbl_d[l_ac].qcbl009             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #


            CALL q_qcbadocno()                                #呼叫開窗

            LET g_qcbl_d[l_ac].qcbl009 = g_qryparam.return1              

            DISPLAY g_qcbl_d[l_ac].qcbl009 TO qcbl009              #

            NEXT FIELD qcbl009                          #返回原欄位

]]>
  </point>
  <point name="input.c.qcbk001" order="" ver="2" cite_std="N" new="N" status="u" src="s" readonly="" mark_hard="N">
    <![CDATA[            #應用 a07 樣板自動產生(Version:2)   
            #開窗i段
            INITIALIZE g_qryparam.* TO NULL
            LET g_qryparam.state = 'i'
            LET g_qryparam.reqry = FALSE

            LET g_qryparam.default1 = g_qcbk_m.qcbk001             #給予default值

            #給予arg
            LET g_qryparam.arg1 = "" #
            LET g_qryparam.where = " qcbasite ='",g_site,"'"

            CALL q_qcbadocno()                                #呼叫開窗

            LET g_qcbk_m.qcbk001 = g_qryparam.return1              

            DISPLAY g_qcbk_m.qcbk001 TO qcbk001              #

            NEXT FIELD qcbk001                          #返回原欄位

]]>
  </point>
  <point name="input.head.a_insert2" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[               CALL aqcm300_ins_detail()]]>
  </point>
  <point name="input.m.before_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF p_cmd = 'a' THEN 
               NEXT FIELD qcbk001
            END IF ]]>
  </point>
  <point name="insert.default" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      LET g_qcbk_m.qcbksite = g_site
      LET g_qcbk_m.qcbk022 = g_today
      LET g_qcbk_m.qcbk023 = g_today
      LET g_qcbk_m_t.* = g_qcbk_m.*]]>
  </point>
  <point name="reproduce.head.b_input" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   LET g_qcbk_m.qcbksite = g_site
   LET g_qcbk_m_t.* = g_qcbk_m.*]]>
  </point>
  <point name="set_act_no_visible.set_act_no_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   #應用 a63 樣板自動產生(Version:1)
   IF g_qcbk_m.qcbkstus NOT MATCHES "[NDR]" THEN   # N未確認/D抽單/R已拒絕允許修改
      CALL cl_set_act_visible("modify,delete,modify_detail", FALSE)
   END IF
   IF g_qcbk_m.qcbkstus = 'X' THEN 
      CALL cl_set_act_visible("statechange", FALSE)
   END IF
]]>
  </point>
  <point name="set_act_visible.set_act_visible" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)]]>
  </point>
  <point name="show.head.reference" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[   CALL aqcm300_qcbk008_desc()
   CALL s_feature_description(g_qcbk_m.qcbk008,g_qcbk_m.qcbk010) RETURNING g_success,g_qcbk_m.qcbk010_desc]]>
  </point>
  <point name="statechange.before" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[]]>
  </point>
  <point name="statechange.before_menu" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[      CASE g_qcbk_m.qcbkstus
         WHEN "N"
            HIDE OPTION "unconfirmed"
         WHEN "X"
            HIDE OPTION "invalid"         
         WHEN "Y"
            HIDE OPTION "confirmed"
            HIDE OPTION "invalid"
      END CASE]]>
  </point>
  <point name="statechange.confirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_ask_confirm('aim-00108') THEN
               RETURN
            ELSE
               CALL s_aqcm300_conf(g_qcbk_m.qcbk001,g_qcbk_m.qcbk002) RETURNING g_success
            END IF   ]]>
  </point>
  <point name="statechange.invalid" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_ask_confirm('aim-00109') THEN
               RETURN
            ELSE
               CALL s_aqcm300_invalid(g_qcbk_m.qcbk001,g_qcbk_m.qcbk002) RETURNING g_success
            END IF]]>
  </point>
  <point name="statechange.unconfirmed" order="" ver="1" cite_std="N" new="N" status="" src="s" readonly="" mark_hard="N">
    <![CDATA[            IF NOT cl_ask_confirm('aim-00110') THEN
               RETURN
            ELSE
               CALL s_aqcm300_unconf(g_qcbk_m.qcbk001,g_qcbk_m.qcbk002) RETURNING g_success
            END IF]]>
  </point>
  <section id="aqcm300.action_chk" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 修改/刪除前行為檢查(是否可允許此動作), 若有其他行為須管控也可透過此段落
PRIVATE FUNCTION aqcm300_action_chk()
   #add-point:action_chk段define
   {<point name="action_chk.define" edit="s"/>}
   #end add-point
   #add-point:action_chk段define(客製用)
   {<point name="action_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:action_chk段action_chk
   {<point name="action_chk.action_chk"/>}
   #end add-point
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.b_fill" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充
PRIVATE FUNCTION aqcm300_b_fill()
   DEFINE p_wc2      STRING
   DEFINE li_idx     LIKE type_t.num10
   #add-point:b_fill段define
   {<point name="b_fill.define" edit="s"/>}
   #end add-point     
   #add-point:b_fill段define(客製用)
   {<point name="b_fill.define_customerization" edit="c"/>}
   #end add-point     
 
   CALL g_qcbl_d.clear()    #g_qcbl_d 單頭及單身 
   CALL g_qcbl2_d.clear()
 
 
   #add-point:b_fill段sql_before
   {<point name="b_fill.sql_before"/>}
   #end add-point
   
   #判斷是否填充
   IF aqcm300_fill_chk(1) THEN
      #切換上下筆時不重組SQL
      IF g_action_choice <> 'fetch' OR cl_null(g_action_choice) THEN
         LET g_sql = "SELECT  UNIQUE qcblseq,qcbl009,qcbl003,qcbl004,qcbl005,qcbl006,qcbl007,qcbl008  FROM qcbl_t", 
                
                     " INNER JOIN qcbk_t ON qcbksite = qcblsite ",
                     " AND qcbk001 = qcbl001 ",
                     " AND qcbk002 = qcbl002 ",
 
                     #"",
                     " LEFT JOIN qcbm_t ON qcblent = qcbment AND qcblsite = qcbmsite AND qcbl001 = qcbm001 AND qcbl002 = qcbm002 AND qcblseq = qcbmseq ",
                     "",
                     
                     " WHERE qcblent=? AND qcblsite=? AND qcbl001=? AND qcbl002=?"
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         #add-point:b_fill段sql_before
         {<point name="b_fill.body.fill_sql"/>}
         #end add-point
         IF NOT cl_null(g_wc2_table1) THEN
            LET g_sql = g_sql CLIPPED, " AND ", g_wc2_table1 CLIPPED
         END IF
         
         #子單身的WC
            IF NOT cl_null(g_wc2_table2) THEN 
      LET g_sql = g_sql CLIPPED," AND ", g_wc2_table2 CLIPPED
   END IF 
 
         
         LET g_sql = g_sql, " ORDER BY qcbl_t.qcblseq"
         
         #add-point:單身填充控制
         {<point name="b_fill.sql"/>}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aqcm300_pb FROM g_sql
         DECLARE b_fill_cs CURSOR FOR aqcm300_pb
      END IF
      
      LET g_cnt = l_ac
      LET l_ac = 1
      
      OPEN b_fill_cs USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
                                               
      FOREACH b_fill_cs INTO g_qcbl_d[l_ac].qcblseq,g_qcbl_d[l_ac].qcbl009,g_qcbl_d[l_ac].qcbl003,g_qcbl_d[l_ac].qcbl004, 
          g_qcbl_d[l_ac].qcbl005,g_qcbl_d[l_ac].qcbl006,g_qcbl_d[l_ac].qcbl007,g_qcbl_d[l_ac].qcbl008 

         IF SQLCA.sqlcode THEN
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "FOREACH:" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            EXIT FOREACH
         END IF
        
         #add-point:b_fill段資料填充
         {<point name="b_fill.fill"/>}
         #end add-point
      
         IF l_ac > g_max_rec THEN
            IF g_error_show = 1 THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
            END IF
            EXIT FOREACH
         END IF
         
         LET l_ac = l_ac + 1
      END FOREACH
      LET g_error_show = 0
   
   END IF
   
 
   
   #add-point:browser_fill段其他table處理
   {<point name="browser_fill.other_fill"/>}
   #end add-point
   
   CALL g_qcbl_d.deleteElement(g_qcbl_d.getLength())
   CALL g_qcbl2_d.deleteElement(g_qcbl2_d.getLength())
 
   
 
   LET l_ac = g_cnt
   LET g_cnt = 0  
   
   FREE aqcm300_pb
 
   
   LET li_idx = l_ac
   
   #遮罩相關處理
   FOR l_ac = 1 TO g_qcbl_d.getLength()
      LET g_qcbl_d_mask_o[l_ac].* =  g_qcbl_d[l_ac].*
      CALL aqcm300_qcbl_t_mask()
      LET g_qcbl_d_mask_n[l_ac].* =  g_qcbl_d[l_ac].*
   END FOR
   
   LET g_qcbl2_d_mask_o.* =  g_qcbl2_d.*
   FOR l_ac = 1 TO g_qcbl2_d.getLength()
      LET g_qcbl2_d_mask_o[l_ac].* =  g_qcbl2_d[l_ac].*
      CALL aqcm300_qcbm_t_mask()
      LET g_qcbl2_d_mask_n[l_ac].* =  g_qcbl2_d[l_ac].*
   END FOR
 
   
   LET l_ac = li_idx
   
   CALL cl_ap_performance_next_end()
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.b_fill2" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身陣列填充2
PRIVATE FUNCTION aqcm300_b_fill2(pi_idx)
   DEFINE pi_idx          LIKE type_t.num10
   DEFINE li_ac           LIKE type_t.num10
   DEFINE ls_chk          LIKE type_t.chr1
   #add-point:b_fill2段define
   {<point name="b_fill2.define" edit="s"/>}
   #end add-point
   #add-point:b_fill2段define(客製用)
   {<point name="b_fill2.define_customerization" edit="c"/>}
   #end add-point
   
   LET li_ac = l_ac 
   
   IF g_detail_idx <= 0 THEN
      RETURN
   END IF
   
   IF aqcm300_fill_chk(2) THEN
      IF (pi_idx = 2 OR pi_idx = 0 ) AND g_qcbl_d.getLength() > 0 THEN
               CALL g_qcbl2_d.clear()
 
         LET g_sql = "SELECT  UNIQUE qcbmseq1,qcbm003  FROM qcbm_t",    
                     "",
                     
                     " WHERE qcbment=? AND qcbmsite=? AND qcbm001=? AND qcbm002=? AND qcbmseq=?"
         
         IF NOT cl_null(g_wc2_table2) THEN
            LET g_sql = g_sql CLIPPED," AND ",g_wc2_table2 CLIPPED
         END IF
         
         LET g_sql = g_sql, " ORDER BY  qcbm_t.qcbmseq1" 
                            
         #add-point:單身填充前
         {<point name="b_fill2.before_fill2" />}
         #end add-point
         
         LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
         PREPARE aqcm300_pb2 FROM g_sql
         DECLARE b_fill_curs2 CURSOR FOR aqcm300_pb2
         
         OPEN b_fill_curs2 USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbl_d[g_detail_idx].qcblseq 

         LET l_ac = 1
         FOREACH b_fill_curs2 INTO g_qcbl2_d[l_ac].qcbmseq1,g_qcbl2_d[l_ac].qcbm003 
            IF SQLCA.sqlcode THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "FOREACH:" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            #add-point:b_fill段資料填充
            {<point name="b_fill2.fill2"/>}
            #end add-point
           
            IF l_ac > g_max_rec THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = l_ac
               LET g_errparam.code   = 9035 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               EXIT FOREACH
            END IF
            
            LET l_ac = l_ac + 1
            
         END FOREACH
               CALL g_qcbl2_d.deleteElement(g_qcbl2_d.getLength())
 
      END IF
   END IF
 
 
      
   LET g_qcbl2_d_mask_o.* =  g_qcbl2_d.*
   FOR l_ac = 1 TO g_qcbl2_d.getLength()
      LET g_qcbl2_d_mask_o[l_ac].* =  g_qcbl2_d[l_ac].*
      CALL aqcm300_qcbm_t_mask()
      LET g_qcbl2_d_mask_n[l_ac].* =  g_qcbl2_d[l_ac].*
   END FOR
 
      
   #add-point:單身填充後
   {<point name="b_fill2.after_fill" />}
   #end add-point
    
   LET l_ac = li_ac
   
   CALL aqcm300_detail_show()
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.browser_fill" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料填充
PRIVATE FUNCTION aqcm300_browser_fill(ps_page_action)
   DEFINE ps_page_action    STRING
   DEFINE l_wc              STRING
   DEFINE l_wc2             STRING
   DEFINE l_sql             STRING
   DEFINE l_sub_sql         STRING
   DEFINE l_sql_rank        STRING
   #add-point:browser_fill段define
   {<point name="browser_fill.define" edit="s"/>}
   #end add-point   
   #add-point:browser_fill段define(客製用)
   {<point name="browser_fill.define_customerization" edit="c"/>}
   #end add-point   
   
   #add-point:browser_fill段動作開始前
   {<point name="browser_fill.before_browser_fill"/>}
   #end add-point
   
   IF cl_null(g_wc) THEN
      LET g_wc = " 1=1"
   END IF
   IF cl_null(g_wc2) THEN
      LET g_wc2 = " 1=1"
   END IF
   LET l_wc  = g_wc.trim() 
   LET l_wc2 = g_wc2.trim()
 
   #add-point:browser_fill,foreach前
   {<point name="browser_fill.before_foreach"/>}
   #end add-point
   
   IF g_wc2 <> " 1=1" THEN
      #單身有輸入搜尋條件                      
      LET l_sub_sql = " SELECT UNIQUE qcbksite,qcbk001,qcbk002 ",
                      " FROM qcbk_t ",
                      " ",
                      " LEFT JOIN qcbl_t ON qcblent = qcbkent AND qcbksite = qcblsite AND qcbk001 = qcbl001 AND qcbk002 = qcbl002 ", "  ",
                      #add-point:browser_fill段sql(qcbl_t1)
                      {<point name="browser_fill.cnt.join.}"/>}
                      #end add-point
 
                      " LEFT JOIN qcbm_t ON qcbment = qcbkent AND qcblsite = qcbmsite AND qcbl001 = qcbm001 AND qcbl002 = qcbm002 AND qcblseq = qcbmseq", "  ",
                      #add-point:browser_fill段sql(qcbm_t1)
                      {<point name="browser_fill.cnt.join.qcbm_t1"/>}
                      #end add-point
 
 
                      " ", 
                      " ", 
                      " WHERE qcbkent = '" ||g_enterprise|| "' AND qcblent = '" ||g_enterprise|| "' AND ",l_wc, " AND ", l_wc2, cl_sql_add_filter("qcbk_t")
   ELSE
      #單身未輸入搜尋條件
      LET l_sub_sql = " SELECT UNIQUE qcbksite,qcbk001,qcbk002 ",
                      " FROM qcbk_t ", 
                      "  ",
                      "  ",
                      " WHERE qcbkent = '" ||g_enterprise|| "' AND ",l_wc CLIPPED, cl_sql_add_filter("qcbk_t")
   END IF
   
   #add-point:browser_fill,cnt wc
   {<point name="browser_fill.cnt_sqlwc"/>}
   #end add-point
   
   LET g_sql = " SELECT COUNT(*) FROM (",l_sub_sql,")"
   
   #add-point:browser_fill,count前
   {<point name="browser_fill.before_count"/>}
   #end add-point
   
   PREPARE header_cnt_pre FROM g_sql
   EXECUTE header_cnt_pre INTO g_browser_cnt   #總筆數
   FREE header_cnt_pre
    
   IF g_browser_cnt > g_max_browse THEN
      IF g_error_show = 1 THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_browser_cnt
         LET g_errparam.code   = 9035 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
      END IF
      LET g_browser_cnt = g_max_browse
   END IF
   
   DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
   DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
 
   #根據行為確定資料填充位置及WC
   IF cl_null(g_add_browse) THEN
      #清除畫面
      CLEAR FORM                
      INITIALIZE g_qcbk_m.* TO NULL
      CALL g_qcbl_d.clear()        
      CALL g_qcbl2_d.clear() 
 
      #add-point:browser_fill g_add_browse段額外處理
      {<point name="browser_fill.add_browse.other"/>}
      #end add-point   
      CALL g_browser.clear()
      LET g_cnt = 1
   ELSE
      LET l_wc  = g_add_browse
      LET l_wc2 = " 1=1" 
      LET g_cnt = g_current_idx
   END IF
 
   #依照t0.qcbk001,t0.qcbk002,t0.qcbk000,t0.qcbk003,t0.qcbk004,t0.qcbk008,t0.qcbksite Browser欄位定義(取代原本bs_sql功能)
   #考量到單身可能下條件, 所以此處需join單身所有table
   #DISTINCT是為了避免在join時出現重複的資料(如果不加DISTINCT則須在程式中過濾)
   LET g_sql = " SELECT DISTINCT t0.qcbkstus,t0.qcbk001,t0.qcbk002,t0.qcbk000,t0.qcbk003,t0.qcbk004, 
       t0.qcbk008,t0.qcbksite,t1.imaal003 ",
               " FROM qcbk_t t0",
               "  ",
               "  LEFT JOIN qcbl_t ON qcblent = qcbkent AND qcbksite = qcblsite AND qcbk001 = qcbl001 AND qcbk002 = qcbl002 ", "  ", 
               #add-point:browser_fill段sql(qcbl_t1)
               {<point name="browser_fill.join.qcbl_t1"/>}
               #end add-point
 
               "  LEFT JOIN qcbm_t ON qcbment = qcbkent AND qcblsite = qcbmsite AND qcbl001 = qcbm001 AND qcbl002 = qcbm002 AND qcblseq = qcbmseq", "  ", 
               #add-point:browser_fill段sql(qcbm_t1)
               {<point name="browser_fill.join.qcbm_t1"/>}
               #end add-point
 
 
               "  ",
                              " LEFT JOIN imaal_t t1 ON t1.imaalent='"||g_enterprise||"' AND t1.imaal001=t0.qcbk008 AND t1.imaal002='"||g_lang||"' ",
 
               " WHERE t0.qcbkent = '" ||g_enterprise|| "' AND ",l_wc," AND ",l_wc2, cl_sql_add_filter("qcbk_t")
   #add-point:browser_fill,sql wc
   {<point name="browser_fill.fill_sqlwc"/>}
   #end add-point
   LET g_sql = g_sql, " ORDER BY qcbksite,qcbk001,qcbk002 ",g_order
 
   #add-point:browser_fill,before_prepare
   {<point name="browser_fill.before_prepare"/>}
   #end add-point
        
   #LET g_sql = cl_sql_add_tabid(g_sql,"qcbk_t") #WC重組
   LET g_sql = cl_sql_add_mask(g_sql) #遮蔽特定資料
   PREPARE browse_pre FROM g_sql
   DECLARE browse_cur CURSOR FOR browse_pre
   
   #add-point:browser_fill段open cursor
   {<point name="browser_fill.open"/>}
   #end add-point
   
   FOREACH browse_cur INTO g_browser[g_cnt].b_statepic,g_browser[g_cnt].b_qcbk001,g_browser[g_cnt].b_qcbk002, 
       g_browser[g_cnt].b_qcbk000,g_browser[g_cnt].b_qcbk003,g_browser[g_cnt].b_qcbk004,g_browser[g_cnt].b_qcbk008, 
       g_browser[g_cnt].b_qcbksite,g_browser[g_cnt].b_qcbk008_desc
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = 'foreach:' 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         EXIT FOREACH
      END IF
  
      #add-point:browser_fill段reference
      {<point name="browser_fill.reference"/>}
      #end add-point
  
      #遮罩相關處理
      CALL aqcm300_browser_mask()
  
            #應用 a24 樣板自動產生(Version:2)
      #browser顯示圖片
      CASE g_browser[g_cnt].b_statepic
         WHEN "N"
            LET g_browser[g_cnt].b_statepic = "stus/16/unconfirmed.png"
         WHEN "Y"
            LET g_browser[g_cnt].b_statepic = "stus/16/confirmed.png"
         WHEN "X"
            LET g_browser[g_cnt].b_statepic = "stus/16/invalid.png"
         
      END CASE
 
 
      LET g_cnt = g_cnt + 1
      IF g_cnt > g_max_browse THEN
         EXIT FOREACH
      END IF
      
   END FOREACH
   
   #清空g_add_browse, 並指定指標位置
   IF NOT cl_null(g_add_browse) THEN
      LET g_add_browse = ""
      CALL g_curr_diag.setCurrentRow("s_browse",g_current_idx)
   END IF
   
   IF cl_null(g_browser[g_cnt].b_qcbksite) THEN
      CALL g_browser.deleteElement(g_cnt)
   END IF
   
   LET g_header_cnt  = g_browser.getLength()
   LET g_browser_cnt = g_browser.getLength()
   
   #筆數顯示
   IF g_browser_cnt > 0 THEN
      DISPLAY g_browser_idx TO FORMONLY.b_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.b_count #總筆數
      DISPLAY g_browser_idx TO FORMONLY.h_index #當下筆數
      DISPLAY g_browser_cnt TO FORMONLY.h_count #總筆數
      DISPLAY g_detail_idx  TO FORMONLY.idx     #單身當下筆數
      DISPLAY g_detail_cnt  TO FORMONLY.cnt     #單身總筆數
   ELSE
      DISPLAY '' TO FORMONLY.b_index #當下筆數
      DISPLAY '' TO FORMONLY.b_count #總筆數
      DISPLAY '' TO FORMONLY.h_index #當下筆數
      DISPLAY '' TO FORMONLY.h_count #總筆數
      DISPLAY '' TO FORMONLY.idx     #單身當下筆數
      DISPLAY '' TO FORMONLY.cnt     #單身總筆數
   END IF
 
   LET g_rec_b = g_cnt - 1
   LET g_detail_cnt = g_rec_b
   LET g_cnt = 0
   
   FREE browse_pre
   
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
                  
   
   #add-point:browser_fill段結束前
   {<point name="browser_fill.after"/>}
   #end add-point   
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.construct" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ QBE資料查詢
PRIVATE FUNCTION aqcm300_construct()
   DEFINE ls_return   STRING
   DEFINE ls_result   STRING 
   DEFINE ls_wc       STRING 
   DEFINE la_wc       DYNAMIC ARRAY OF RECORD
          tableid     STRING,
          wc          STRING
          END RECORD
   DEFINE li_idx      LIKE type_t.num10
   #add-point:cs段define
   {<point name="cs.define" edit="s"/>}
   #end add-point    
   #add-point:cs段define(客製用)
   {<point name="cs.define_customerization" edit="c"/>}
   #end add-point    
    
   #清除畫面
   CLEAR FORM                
   INITIALIZE g_qcbk_m.* TO NULL
   CALL g_qcbl_d.clear()        
   CALL g_qcbl2_d.clear() 
 
   
   LET g_action_choice = ""
    
   INITIALIZE g_wc TO NULL
   INITIALIZE g_wc2 TO NULL
   
   INITIALIZE g_wc2_table1 TO NULL
 
    
   LET g_qryparam.state = 'c'
   
   #add-point:cs段開始前
   {<point name="cs.before_construct"/>}
   #end add-point 
   
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
      
      #單頭
      CONSTRUCT BY NAME g_wc ON qcbksite,qcbk001,qcbk002,qcbk000,qcbk005,qcbk003,qcbk004,qcbk006,qcbk007, 
          qcbk008,qcbk009,imaal003,imaal004,qcbk010,qcbk010_desc,qcbk011,qcbk022,qcbk023,qcbk012,qcbk013, 
          qcbk014,qcbk015,qcbk016,qcbk017,qcbk018,qcbk019,qcbk020,qcbk021,qcbkstus,qcbkownid,qcbkowndp, 
          qcbkcrtid,qcbkcrtdp,qcbkcrtdt,qcbkmodid,qcbkmoddt,qcbkcnfid,qcbkcnfdt
 
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.head.before_construct"/>}
            #end add-point 
            
         #公用欄位開窗相關處理
         #應用 a11 樣板自動產生(Version:2)
         #共用欄位查詢處理  
         ##----<<qcbkcrtdt>>----
         AFTER FIELD qcbkcrtdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
 
         #----<<qcbkmoddt>>----
         AFTER FIELD qcbkmoddt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcbkcnfdt>>----
         AFTER FIELD qcbkcnfdt
            CALL FGL_DIALOG_GETBUFFER() RETURNING ls_result
            IF NOT cl_null(ls_result) THEN
               IF NOT cl_chk_date_symbol(ls_result) THEN
                  LET ls_result = cl_add_date_extra_cond(ls_result)
               END IF
            END IF
            CALL FGL_DIALOG_SETBUFFER(ls_result)
         
         #----<<qcbkpstdt>>----
 
 
            
         #一般欄位開窗相關處理    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbksite
            #add-point:BEFORE FIELD qcbksite
            {<point name="construct.b.qcbksite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbksite
            
            #add-point:AFTER FIELD qcbksite
            {<point name="construct.a.qcbksite" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbksite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbksite
            #add-point:ON ACTION controlp INFIELD qcbksite
            {<point name="construct.c.qcbksite" />}
            #END add-point
 
         #Ctrlp:construct.c.qcbk001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk001
            #add-point:ON ACTION controlp INFIELD qcbk001
            {<point name="construct.c.qcbk001" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk001
            #add-point:BEFORE FIELD qcbk001
            {<point name="construct.b.qcbk001" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk001
            
            #add-point:AFTER FIELD qcbk001
            {<point name="construct.a.qcbk001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk002
            #add-point:BEFORE FIELD qcbk002
            {<point name="construct.b.qcbk002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk002
            
            #add-point:AFTER FIELD qcbk002
            {<point name="construct.a.qcbk002" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk002
            #add-point:ON ACTION controlp INFIELD qcbk002
            {<point name="construct.c.qcbk002" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk000
            #add-point:BEFORE FIELD qcbk000
            {<point name="construct.b.qcbk000" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk000
            
            #add-point:AFTER FIELD qcbk000
            {<point name="construct.a.qcbk000" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk000
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk000
            #add-point:ON ACTION controlp INFIELD qcbk000
            {<point name="construct.c.qcbk000" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk005
            #add-point:BEFORE FIELD qcbk005
            {<point name="construct.b.qcbk005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk005
            
            #add-point:AFTER FIELD qcbk005
            {<point name="construct.a.qcbk005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk005
            #add-point:ON ACTION controlp INFIELD qcbk005
            {<point name="construct.c.qcbk005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk003
            #add-point:BEFORE FIELD qcbk003
            {<point name="construct.b.qcbk003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk003
            
            #add-point:AFTER FIELD qcbk003
            {<point name="construct.a.qcbk003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk003
            #add-point:ON ACTION controlp INFIELD qcbk003
            {<point name="construct.c.qcbk003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk004
            #add-point:BEFORE FIELD qcbk004
            {<point name="construct.b.qcbk004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk004
            
            #add-point:AFTER FIELD qcbk004
            {<point name="construct.a.qcbk004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk004
            #add-point:ON ACTION controlp INFIELD qcbk004
            {<point name="construct.c.qcbk004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk006
            #add-point:BEFORE FIELD qcbk006
            {<point name="construct.b.qcbk006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk006
            
            #add-point:AFTER FIELD qcbk006
            {<point name="construct.a.qcbk006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk006
            #add-point:ON ACTION controlp INFIELD qcbk006
            {<point name="construct.c.qcbk006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk007
            #add-point:BEFORE FIELD qcbk007
            {<point name="construct.b.qcbk007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk007
            
            #add-point:AFTER FIELD qcbk007
            {<point name="construct.a.qcbk007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk007
            #add-point:ON ACTION controlp INFIELD qcbk007
            {<point name="construct.c.qcbk007" />}
            #END add-point
 
         #Ctrlp:construct.c.qcbk008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk008
            #add-point:ON ACTION controlp INFIELD qcbk008
            {<point name="construct.c.qcbk008" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk008
            #add-point:BEFORE FIELD qcbk008
            {<point name="construct.b.qcbk008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk008
            
            #add-point:AFTER FIELD qcbk008
            {<point name="construct.a.qcbk008" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk009
            #add-point:BEFORE FIELD qcbk009
            {<point name="construct.b.qcbk009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk009
            
            #add-point:AFTER FIELD qcbk009
            {<point name="construct.a.qcbk009" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk009
            #add-point:ON ACTION controlp INFIELD qcbk009
            {<point name="construct.c.qcbk009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal003
            #add-point:BEFORE FIELD imaal003
            {<point name="construct.b.imaal003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal003
            
            #add-point:AFTER FIELD imaal003
            {<point name="construct.a.imaal003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal003
            #add-point:ON ACTION controlp INFIELD imaal003
            {<point name="construct.c.imaal003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD imaal004
            #add-point:BEFORE FIELD imaal004
            {<point name="construct.b.imaal004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD imaal004
            
            #add-point:AFTER FIELD imaal004
            {<point name="construct.a.imaal004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.imaal004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD imaal004
            #add-point:ON ACTION controlp INFIELD imaal004
            {<point name="construct.c.imaal004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk010
            #add-point:BEFORE FIELD qcbk010
            {<point name="construct.b.qcbk010" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk010
            
            #add-point:AFTER FIELD qcbk010
            {<point name="construct.a.qcbk010" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk010
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk010
            #add-point:ON ACTION controlp INFIELD qcbk010
            {<point name="construct.c.qcbk010" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk010_desc
            #add-point:BEFORE FIELD qcbk010_desc
            {<point name="construct.b.qcbk010_desc" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk010_desc
            
            #add-point:AFTER FIELD qcbk010_desc
            {<point name="construct.a.qcbk010_desc" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk010_desc
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk010_desc
            #add-point:ON ACTION controlp INFIELD qcbk010_desc
            {<point name="construct.c.qcbk010_desc" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk011
            #add-point:BEFORE FIELD qcbk011
            {<point name="construct.b.qcbk011" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk011
            
            #add-point:AFTER FIELD qcbk011
            {<point name="construct.a.qcbk011" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk011
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk011
            #add-point:ON ACTION controlp INFIELD qcbk011
            {<point name="construct.c.qcbk011" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk022
            #add-point:BEFORE FIELD qcbk022
            {<point name="construct.b.qcbk022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk022
            
            #add-point:AFTER FIELD qcbk022
            {<point name="construct.a.qcbk022" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk022
            #add-point:ON ACTION controlp INFIELD qcbk022
            {<point name="construct.c.qcbk022" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk023
            #add-point:BEFORE FIELD qcbk023
            {<point name="construct.b.qcbk023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk023
            
            #add-point:AFTER FIELD qcbk023
            {<point name="construct.a.qcbk023" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk023
            #add-point:ON ACTION controlp INFIELD qcbk023
            {<point name="construct.c.qcbk023" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk012
            #add-point:BEFORE FIELD qcbk012
            {<point name="construct.b.qcbk012" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk012
            
            #add-point:AFTER FIELD qcbk012
            {<point name="construct.a.qcbk012" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk012
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk012
            #add-point:ON ACTION controlp INFIELD qcbk012
            {<point name="construct.c.qcbk012" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk013
            #add-point:BEFORE FIELD qcbk013
            {<point name="construct.b.qcbk013" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk013
            
            #add-point:AFTER FIELD qcbk013
            {<point name="construct.a.qcbk013" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk013
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk013
            #add-point:ON ACTION controlp INFIELD qcbk013
            {<point name="construct.c.qcbk013" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk014
            #add-point:BEFORE FIELD qcbk014
            {<point name="construct.b.qcbk014" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk014
            
            #add-point:AFTER FIELD qcbk014
            {<point name="construct.a.qcbk014" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk014
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk014
            #add-point:ON ACTION controlp INFIELD qcbk014
            {<point name="construct.c.qcbk014" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk015
            #add-point:BEFORE FIELD qcbk015
            {<point name="construct.b.qcbk015" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk015
            
            #add-point:AFTER FIELD qcbk015
            {<point name="construct.a.qcbk015" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk015
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk015
            #add-point:ON ACTION controlp INFIELD qcbk015
            {<point name="construct.c.qcbk015" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk016
            #add-point:BEFORE FIELD qcbk016
            {<point name="construct.b.qcbk016" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk016
            
            #add-point:AFTER FIELD qcbk016
            {<point name="construct.a.qcbk016" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk016
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk016
            #add-point:ON ACTION controlp INFIELD qcbk016
            {<point name="construct.c.qcbk016" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk017
            #add-point:BEFORE FIELD qcbk017
            {<point name="construct.b.qcbk017" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk017
            
            #add-point:AFTER FIELD qcbk017
            {<point name="construct.a.qcbk017" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk017
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk017
            #add-point:ON ACTION controlp INFIELD qcbk017
            {<point name="construct.c.qcbk017" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk018
            #add-point:BEFORE FIELD qcbk018
            {<point name="construct.b.qcbk018" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk018
            
            #add-point:AFTER FIELD qcbk018
            {<point name="construct.a.qcbk018" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk018
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk018
            #add-point:ON ACTION controlp INFIELD qcbk018
            {<point name="construct.c.qcbk018" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk019
            #add-point:BEFORE FIELD qcbk019
            {<point name="construct.b.qcbk019" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk019
            
            #add-point:AFTER FIELD qcbk019
            {<point name="construct.a.qcbk019" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk019
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk019
            #add-point:ON ACTION controlp INFIELD qcbk019
            {<point name="construct.c.qcbk019" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk020
            #add-point:BEFORE FIELD qcbk020
            {<point name="construct.b.qcbk020" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk020
            
            #add-point:AFTER FIELD qcbk020
            {<point name="construct.a.qcbk020" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk020
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk020
            #add-point:ON ACTION controlp INFIELD qcbk020
            {<point name="construct.c.qcbk020" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk021
            #add-point:BEFORE FIELD qcbk021
            {<point name="construct.b.qcbk021" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk021
            
            #add-point:AFTER FIELD qcbk021
            {<point name="construct.a.qcbk021" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbk021
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk021
            #add-point:ON ACTION controlp INFIELD qcbk021
            {<point name="construct.c.qcbk021" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkstus
            #add-point:BEFORE FIELD qcbkstus
            {<point name="construct.b.qcbkstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkstus
            
            #add-point:AFTER FIELD qcbkstus
            {<point name="construct.a.qcbkstus" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbkstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkstus
            #add-point:ON ACTION controlp INFIELD qcbkstus
            {<point name="construct.c.qcbkstus" />}
            #END add-point
 
         #Ctrlp:construct.c.qcbkownid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkownid
            #add-point:ON ACTION controlp INFIELD qcbkownid
            {<point name="construct.c.qcbkownid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkownid
            #add-point:BEFORE FIELD qcbkownid
            {<point name="construct.b.qcbkownid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkownid
            
            #add-point:AFTER FIELD qcbkownid
            {<point name="construct.a.qcbkownid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbkowndp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkowndp
            #add-point:ON ACTION controlp INFIELD qcbkowndp
            {<point name="construct.c.qcbkowndp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkowndp
            #add-point:BEFORE FIELD qcbkowndp
            {<point name="construct.b.qcbkowndp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkowndp
            
            #add-point:AFTER FIELD qcbkowndp
            {<point name="construct.a.qcbkowndp" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbkcrtid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkcrtid
            #add-point:ON ACTION controlp INFIELD qcbkcrtid
            {<point name="construct.c.qcbkcrtid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkcrtid
            #add-point:BEFORE FIELD qcbkcrtid
            {<point name="construct.b.qcbkcrtid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkcrtid
            
            #add-point:AFTER FIELD qcbkcrtid
            {<point name="construct.a.qcbkcrtid" />}
            #END add-point
            
 
         #Ctrlp:construct.c.qcbkcrtdp
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkcrtdp
            #add-point:ON ACTION controlp INFIELD qcbkcrtdp
            {<point name="construct.c.qcbkcrtdp" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkcrtdp
            #add-point:BEFORE FIELD qcbkcrtdp
            {<point name="construct.b.qcbkcrtdp" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkcrtdp
            
            #add-point:AFTER FIELD qcbkcrtdp
            {<point name="construct.a.qcbkcrtdp" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkcrtdt
            #add-point:BEFORE FIELD qcbkcrtdt
            {<point name="construct.b.qcbkcrtdt" />}
            #END add-point
 
         #Ctrlp:construct.c.qcbkmodid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkmodid
            #add-point:ON ACTION controlp INFIELD qcbkmodid
            {<point name="construct.c.qcbkmodid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkmodid
            #add-point:BEFORE FIELD qcbkmodid
            {<point name="construct.b.qcbkmodid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkmodid
            
            #add-point:AFTER FIELD qcbkmodid
            {<point name="construct.a.qcbkmodid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkmoddt
            #add-point:BEFORE FIELD qcbkmoddt
            {<point name="construct.b.qcbkmoddt" />}
            #END add-point
 
         #Ctrlp:construct.c.qcbkcnfid
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkcnfid
            #add-point:ON ACTION controlp INFIELD qcbkcnfid
            {<point name="construct.c.qcbkcnfid" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkcnfid
            #add-point:BEFORE FIELD qcbkcnfid
            {<point name="construct.b.qcbkcnfid" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkcnfid
            
            #add-point:AFTER FIELD qcbkcnfid
            {<point name="construct.a.qcbkcnfid" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkcnfdt
            #add-point:BEFORE FIELD qcbkcnfdt
            {<point name="construct.b.qcbkcnfdt" />}
            #END add-point
 
 
         
      END CONSTRUCT
 
      #單身根據table分拆construct
      CONSTRUCT g_wc2_table1 ON qcblseq,qcbl009,qcbl003,qcbl004,qcbl005,qcbl006,qcbl007,qcbl008
           FROM s_detail1[1].qcblseq,s_detail1[1].qcbl009,s_detail1[1].qcbl003,s_detail1[1].qcbl004, 
               s_detail1[1].qcbl005,s_detail1[1].qcbl006,s_detail1[1].qcbl007,s_detail1[1].qcbl008
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理
       
         
       #單身一般欄位開窗相關處理
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcblseq
            #add-point:BEFORE FIELD qcblseq
            {<point name="construct.b.page1.qcblseq" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcblseq
            
            #add-point:AFTER FIELD qcblseq
            {<point name="construct.a.page1.qcblseq" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qcblseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcblseq
            #add-point:ON ACTION controlp INFIELD qcblseq
            {<point name="construct.c.page1.qcblseq" />}
            #END add-point
 
         #Ctrlp:construct.c.page1.qcbl009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl009
            #add-point:ON ACTION controlp INFIELD qcbl009
            {<point name="construct.c.page1.qcbl009" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl009
            #add-point:BEFORE FIELD qcbl009
            {<point name="construct.b.page1.qcbl009" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl009
            
            #add-point:AFTER FIELD qcbl009
            {<point name="construct.a.page1.qcbl009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl003
            #add-point:BEFORE FIELD qcbl003
            {<point name="construct.b.page1.qcbl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl003
            
            #add-point:AFTER FIELD qcbl003
            {<point name="construct.a.page1.qcbl003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qcbl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl003
            #add-point:ON ACTION controlp INFIELD qcbl003
            {<point name="construct.c.page1.qcbl003" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl004
            #add-point:BEFORE FIELD qcbl004
            {<point name="construct.b.page1.qcbl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl004
            
            #add-point:AFTER FIELD qcbl004
            {<point name="construct.a.page1.qcbl004" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qcbl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl004
            #add-point:ON ACTION controlp INFIELD qcbl004
            {<point name="construct.c.page1.qcbl004" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl005
            #add-point:BEFORE FIELD qcbl005
            {<point name="construct.b.page1.qcbl005" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl005
            
            #add-point:AFTER FIELD qcbl005
            {<point name="construct.a.page1.qcbl005" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qcbl005
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl005
            #add-point:ON ACTION controlp INFIELD qcbl005
            {<point name="construct.c.page1.qcbl005" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl006
            #add-point:BEFORE FIELD qcbl006
            {<point name="construct.b.page1.qcbl006" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl006
            
            #add-point:AFTER FIELD qcbl006
            {<point name="construct.a.page1.qcbl006" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qcbl006
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl006
            #add-point:ON ACTION controlp INFIELD qcbl006
            {<point name="construct.c.page1.qcbl006" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl007
            #add-point:BEFORE FIELD qcbl007
            {<point name="construct.b.page1.qcbl007" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl007
            
            #add-point:AFTER FIELD qcbl007
            {<point name="construct.a.page1.qcbl007" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qcbl007
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl007
            #add-point:ON ACTION controlp INFIELD qcbl007
            {<point name="construct.c.page1.qcbl007" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl008
            #add-point:BEFORE FIELD qcbl008
            {<point name="construct.b.page1.qcbl008" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl008
            
            #add-point:AFTER FIELD qcbl008
            {<point name="construct.a.page1.qcbl008" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page1.qcbl008
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl008
            #add-point:ON ACTION controlp INFIELD qcbl008
            {<point name="construct.c.page1.qcbl008" />}
            #END add-point
 
   
       
      END CONSTRUCT
      
 
      
      CONSTRUCT g_wc2_table2 ON qcbmseq1,qcbm003
           FROM s_detail2[1].qcbmseq1,s_detail2[1].qcbm003
                      
         BEFORE CONSTRUCT
            #add-point:cs段before_construct
            {<point name="cs.body2.before_construct"/>}
            #end add-point 
            
       #單身公用欄位開窗相關處理(table 2)
       
       
       #單身一般欄位開窗相關處理       
                #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbmseq1
            #add-point:BEFORE FIELD qcbmseq1
            {<point name="construct.b.page2.qcbmseq1" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbmseq1
            
            #add-point:AFTER FIELD qcbmseq1
            {<point name="construct.a.page2.qcbmseq1" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.qcbmseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbmseq1
            #add-point:ON ACTION controlp INFIELD qcbmseq1
            {<point name="construct.c.page2.qcbmseq1" />}
            #END add-point
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbm003
            #add-point:BEFORE FIELD qcbm003
            {<point name="construct.b.page2.qcbm003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbm003
            
            #add-point:AFTER FIELD qcbm003
            {<point name="construct.a.page2.qcbm003" />}
            #END add-point
            
 
         #Ctrlp:construct.c.page2.qcbm003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbm003
            #add-point:ON ACTION controlp INFIELD qcbm003
            {<point name="construct.c.page2.qcbm003" />}
            #END add-point
 
   
       
      END CONSTRUCT
 
 
      
      #add-point:cs段add_cs(本段內只能出現新的CONSTRUCT指令)
      {<point name="cs.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         CALL cl_qbe_init()
         #add-point:cs段b_dialog
         {<point name="cs.b_dialog"/>}
         #end add-point  
 
      #查詢方案列表
      ON ACTION qbe_select
         LET ls_wc = ""
         CALL cl_qbe_list("c") RETURNING ls_wc
         IF NOT cl_null(ls_wc) THEN
            CALL util.JSON.parse(ls_wc, la_wc)
            INITIALIZE g_wc, g_wc2, g_wc2_table1, g_wc2_extend TO NULL
 
            FOR li_idx = 1 TO la_wc.getLength()
               CASE
                  WHEN la_wc[li_idx].tableid = "qcbk_t" 
                     LET g_wc = la_wc[li_idx].wc
                  WHEN la_wc[li_idx].tableid = "qcbl_t" 
                     LET g_wc2_table1 = la_wc[li_idx].wc
 
               END CASE
            END FOR
         END IF
    
      #條件儲存為方案
      ON ACTION qbe_save
         CALL cl_qbe_save()
 
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   END DIALOG
   
   #組合g_wc2
   LET g_wc2 = g_wc2_table1
 
 
   IF g_wc2_table2 <> " 1=1" THEN
      LET g_wc2 = g_wc2 ," AND ", g_wc2_table2
   END IF
 
 
   
   #add-point:cs段結束前
   {<point name="cs.after_construct"/>}
   #end add-point    
 
   IF INT_FLAG THEN
      RETURN
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.default_search" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 外部參數搜尋
PRIVATE FUNCTION aqcm300_default_search()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE li_cnt     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE ls_where   STRING
   #add-point:default_search段define
   {<point name="default_search.define" edit="s"/>}
   #end add-point  
   #add-point:default_search段define(客製用)
   {<point name="default_search.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:default_search段開始前
   {<point name="default_search.before"/>}
   #end add-point  
   
   LET g_pagestart = 1
   
   IF cl_null(g_order) THEN
      LET g_order = "ASC"
   END IF
   
   IF NOT cl_null(g_argv[01]) THEN
      LET ls_wc = ls_wc, " qcbksite = '", g_argv[01], "' AND "
   END IF
   
   IF NOT cl_null(g_argv[02]) THEN
      LET ls_wc = ls_wc, " qcbk001 = '", g_argv[02], "' AND "
   END IF
   IF NOT cl_null(g_argv[03]) THEN
      LET ls_wc = ls_wc, " qcbk002 = '", g_argv[03], "' AND "
   END IF
 
   
   #add-point:default_search段after sql
   {<point name="default_search.after_sql"/>}
   #end add-point  
   
   IF NOT cl_null(ls_wc) THEN
      LET g_wc = ls_wc.subString(1,ls_wc.getLength()-5)
      LET g_default = TRUE
   ELSE
      #若無外部參數則預設為1=2
      LET g_default = FALSE
      
      #預設查詢條件
      CALL cl_qbe_get_default_qryplan() RETURNING ls_where
      IF NOT cl_null(ls_where) THEN
         CALL util.JSON.parse(ls_where, la_wc)
         INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
         FOR li_idx = 1 TO la_wc.getLength()
            CASE
               WHEN la_wc[li_idx].tableid = "qcbk_t" 
                  LET g_wc = la_wc[li_idx].wc
               WHEN la_wc[li_idx].tableid = "qcbl_t" 
                  LET g_wc2_table1 = la_wc[li_idx].wc
 
               WHEN la_wc[li_idx].tableid = "EXTENDWC"
                  LET g_wc2_extend = la_wc[li_idx].wc
            END CASE
         END FOR
         IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
            OR NOT cl_null(g_wc2_extend)
            THEN
            #組合g_wc2
            IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
               LET g_wc2 = g_wc2_table1
            END IF
 
            IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
               LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
            END IF
         
            IF g_wc2.subString(1,5) = " AND " THEN
               LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
            END IF
         END IF
      END IF
    
      IF cl_null(g_wc) AND cl_null(g_wc2) THEN
         LET g_wc = " 1=2"
      END IF
   END IF
   
   #add-point:default_search段結束前
   {<point name="default_search.after"/>}
   #end add-point  
 
   IF g_wc.getIndexOf(" 1=2", 1) THEN
      LET g_default = TRUE
   END IF
 
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.delete" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 資料刪除
PRIVATE FUNCTION aqcm300_delete()
   DEFINE  l_var_keys      DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys    DYNAMIC ARRAY OF STRING
   DEFINE  l_vars          DYNAMIC ARRAY OF STRING
   DEFINE  l_fields        DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak  DYNAMIC ARRAY OF STRING
   #add-point:delete段define
   {<point name="delete.define" edit="s"/>}
   #end add-point     
   #add-point:delete段define(客製用)
   {<point name="delete.define_customerization" edit="c"/>}
   #end add-point     
   
   IF g_qcbk_m.qcbksite IS NULL
   OR g_qcbk_m.qcbk001 IS NULL
   OR g_qcbk_m.qcbk002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
   
   
   
   CALL s_transaction_begin()
 
   OPEN aqcm300_cl USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aqcm300_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aqcm300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aqcm300_master_referesh USING g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002 INTO g_qcbk_m.qcbksite, 
       g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
       g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp, 
       g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt, 
       g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid_desc, 
       g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkcnfid_desc
   
   #檢查是否允許此動作
   IF NOT aqcm300_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_qcbk_m_mask_o.* =  g_qcbk_m.*
   CALL aqcm300_qcbk_t_mask()
   LET g_qcbk_m_mask_n.* =  g_qcbk_m.*
   
   CALL aqcm300_show()
   
   #add-point:delete段before ask
   {<point name="delete.before_ask"/>}
   #end add-point 
 
   IF cl_ask_del_master() THEN              #確認一下
   
      #add-point:單頭刪除前
      {<point name="delete.head.b_delete" mark="Y"/>}
      #end add-point   
      
      #應用 a47 樣板自動產生(Version:2)
      #刪除相關文件
      CALL aqcm300_set_pk_array()
      #add-point:相關文件刪除前
      {<point name="delete.befroe.related_document_remove"/>}
      #end add-point   
      CALL cl_doc_remove()  
 
 
  
  
      #資料備份
      LET g_qcbksite_t = g_qcbk_m.qcbksite
      LET g_qcbk001_t = g_qcbk_m.qcbk001
      LET g_qcbk002_t = g_qcbk_m.qcbk002
 
 
      DELETE FROM qcbk_t
       WHERE qcbkent = g_enterprise AND qcbksite = g_qcbk_m.qcbksite
         AND qcbk001 = g_qcbk_m.qcbk001
         AND qcbk002 = g_qcbk_m.qcbk002
 
       
      #add-point:單頭刪除中
      {<point name="delete.head.m_delete"/>}
      #end add-point
       
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = g_qcbk_m.qcbksite 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF
      
      #add-point:單頭刪除後
      {<point name="delete.head.a_delete"/>}
      #end add-point
  
      #add-point:單身刪除前
      {<point name="delete.body.b_delete" mark="Y"/>}
      #end add-point
      
      DELETE FROM qcbl_t
       WHERE qcblent = g_enterprise AND qcblsite = g_qcbk_m.qcbksite
         AND qcbl001 = g_qcbk_m.qcbk001
         AND qcbl002 = g_qcbk_m.qcbk002
 
 
      #add-point:單身刪除中
      {<point name="delete.body.m_delete"/>}
      #end add-point
         
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "qcbl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF    
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete"/>}
      #end add-point
      
            
                                                               
 
 
      #add-point:單身刪除前
      {<point name="delete.body.b_delete2" mark="Y"/>}
      #end add-point
      DELETE FROM qcbm_t
       WHERE qcbment = g_enterprise AND
             qcbmsite = g_qcbk_m.qcbksite AND qcbm001 = g_qcbk_m.qcbk001 AND qcbm002 = g_qcbk_m.qcbk002
      #add-point:單身刪除中
      {<point name="delete.body.m_delete2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "qcbm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF      
 
      #add-point:單身刪除後
      {<point name="delete.body.a_delete2"/>}
      #end add-point
 
 
      
      #修改歷程記錄(刪除)
      IF NOT cl_log_modified_record('','') THEN 
         CLOSE aqcm300_cl
         CALL s_transaction_end('N','0')
         RETURN
      END IF
             
      CLEAR FORM
      CALL g_qcbl_d.clear() 
      CALL g_qcbl2_d.clear()       
 
     
      CALL aqcm300_ui_browser_refresh()  
      #CALL aqcm300_ui_headershow()  
      #CALL aqcm300_ui_detailshow()
      
      IF g_browser_cnt > 0 THEN 
         #CALL aqcm300_browser_fill("")
         CALL aqcm300_fetch('P')
         DISPLAY g_browser_cnt TO FORMONLY.h_count   #總筆數的顯示
         DISPLAY g_browser_cnt TO FORMONLY.b_count   #總筆數的顯示
      ELSE
         CLEAR FORM
      END IF
 
      #add-point:多語言刪除
      {<point name="delete.lang.before_delete"/>}
      #end add-point
      
      #單頭多語言刪除
      
      
      #單身多語言刪除
      
 
      
 
 
   
      #add-point:多語言刪除
      {<point name="delete.lang.delete"/>}
      #end add-point
   
   END IF
 
   CALL s_transaction_end('Y','0')
   CLOSE aqcm300_cl
 
   #功能已完成,通報訊息中心
   CALL aqcm300_msgcentre_notify('delete')
    
END FUNCTION
]]>
  </section>
  <section id="aqcm300.delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 刪除單身後其他table連動
PRIVATE FUNCTION aqcm300_delete_b(ps_table,ps_keys_bak,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:delete_b段define
   {<point name="delete_b.define" edit="s"/>}
   #end add-point     
   #add-point:delete_b段define(客製用)
   {<point name="delete_b.define_customerization" edit="c"/>}
   #end add-point     
 
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete" mark="Y"/>}
      #end add-point    
      DELETE FROM qcbl_t
       WHERE qcblent = g_enterprise AND
         qcblsite = ps_keys_bak[1] AND qcbl001 = ps_keys_bak[2] AND qcbl002 = ps_keys_bak[3] AND qcblseq = ps_keys_bak[4]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_qcbl_d.deleteElement(li_idx) 
      END IF 
 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table2
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:delete_b段刪除前
      {<point name="delete_b.b_delete2" mark="Y"/>}
      #end add-point    
      DELETE FROM qcbm_t
       WHERE qcbment = g_enterprise AND
             qcbmsite = ps_keys_bak[1] AND qcbm001 = ps_keys_bak[2] AND qcbm002 = ps_keys_bak[3] AND qcbmseq = ps_keys_bak[4] AND qcbmseq1 = ps_keys_bak[5]
      #add-point:delete_b段刪除中
      {<point name="delete_b.m_delete2"/>}
      #end add-point    
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "qcbm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         RETURN FALSE
      END IF
    
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_qcbl2_d.deleteElement(li_idx) 
      END IF 
 
      #add-point:delete_b段刪除後
      {<point name="delete_b.a_delete2"/>}
      #end add-point    
   END IF
 
 
   
   #add-point:delete_b段other
   {<point name="delete_b.other"/>}
   #end add-point  
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.description" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a00 樣板自動產生(Version:1)
#+ Version..: T100-ERP-1.00.00(SD版次:2,PR版次:2) Build-000024
#+ 
#+ Filename...: aqcm300
#+ Description: Xbar-R Chart 數據維護作業
#+ Creator....: 02295(2014-12-18 18:13:18)
#+ Modifier...: 02295(2014-12-23 11:27:48) -SD/PR-
]]>
  </section>
  <section id="aqcm300.detail_reproduce" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身自動複製
PRIVATE FUNCTION aqcm300_detail_reproduce()
   DEFINE ls_sql      STRING
   DEFINE ld_date     DATETIME YEAR TO SECOND
   DEFINE l_detail    RECORD LIKE qcbl_t.*
 
   DEFINE l_detail2    RECORD LIKE qcbm_t.*
 
 
   #add-point:delete段define
   {<point name="detail_reproduce.define" edit="s"/>}
   #end add-point    
   #add-point:delete段define(客製用)
   {<point name="detail_reproduce.define_customerization" edit="c"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   
   LET ld_date = cl_get_current()
   
   DROP TABLE aqcm300_detail
   
   #add-point:單身複製前1
   {<point name="detail_reproduce.body.table1.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = "CREATE GLOBAL TEMPORARY TABLE aqcm300_detail AS ",
                "SELECT * FROM qcbl_t "
   PREPARE repro_tbl FROM ls_sql
   EXECUTE repro_tbl
   FREE repro_tbl
                
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aqcm300_detail SELECT * FROM qcbl_t 
                                         WHERE qcblent = g_enterprise AND qcblsite = g_qcbksite_t
                                         AND qcbl001 = g_qcbk001_t
                                         AND qcbl002 = g_qcbk002_t
 
   
   #將key修正為調整後   
   UPDATE aqcm300_detail 
      #更新key欄位
      SET qcblsite = g_qcbk_m.qcbksite
          , qcbl001 = g_qcbk_m.qcbk001
          , qcbl002 = g_qcbk_m.qcbk002
 
      #更新共用欄位
      
 
   #add-point:單身修改前
   {<point name="detail_reproduce.body.table1.b_update"/>}
   #end add-point                                       
  
   #將資料塞回原table   
   INSERT INTO qcbl_t SELECT * FROM aqcm300_detail
   
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "reproduce" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      RETURN
   END IF
   
   #add-point:單身複製中1
   {<point name="detail_reproduce.body.table1.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aqcm300_detail
   
   #add-point:單身複製後1
   {<point name="detail_reproduce.body.table1.a_insert"/>}
   #end add-point
 
 
   
   #add-point:單身複製前
   {<point name="detail_reproduce.body.table2.b_insert" mark="Y"/>}
   #end add-point
   
   #CREATE TEMP TABLE
   LET ls_sql = 
      "CREATE GLOBAL TEMPORARY TABLE aqcm300_detail AS ",
      "SELECT * FROM qcbm_t "
   PREPARE repro_tbl2 FROM ls_sql
   EXECUTE repro_tbl2
   FREE repro_tbl2
      
   #將符合條件的資料丟入TEMP TABLE
   INSERT INTO aqcm300_detail SELECT * FROM qcbm_t
                                         WHERE qcbment = g_enterprise AND qcbmsite = g_qcbksite_t
                                         AND qcbm001 = g_qcbk001_t
                                         AND qcbm002 = g_qcbk002_t
 
 
   #將key修正為調整後   
   UPDATE aqcm300_detail SET qcbmsite = g_qcbk_m.qcbksite
                                       , qcbm001 = g_qcbk_m.qcbk001
                                       , qcbm002 = g_qcbk_m.qcbk002
 
  
   #將資料塞回原table   
   INSERT INTO qcbm_t SELECT * FROM aqcm300_detail
   
   #add-point:單身複製中
   {<point name="detail_reproduce.body.table2.m_insert"/>}
   #end add-point
   
   #刪除TEMP TABLE
   DROP TABLE aqcm300_detail
   
   #add-point:單身複製後
   {<point name="detail_reproduce.body.table2.a_insert"/>}
   #end add-point
 
 
   
   #多語言複製段落
   
   
   CALL s_transaction_end('Y','0')
   
   #已新增完, 調整資料內容(修改時使用)
   LET g_qcbksite_t = g_qcbk_m.qcbksite
   LET g_qcbk001_t = g_qcbk_m.qcbk001
   LET g_qcbk002_t = g_qcbk_m.qcbk002
 
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.detail_show" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 第二階單身reference
PRIVATE FUNCTION aqcm300_detail_show()
   #add-point:detail_show段define
   {<point name="detail_show.define" edit="s"/>}
   #end add-point  
   #add-point:detail_show段define(客製用)
   {<point name="detail_show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:detail_show段之前
   {<point name="detail_show.before"/>}
   #end add-point
   
   #add-point:detail_show段之後
   {<point name="detail_show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.fetch" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 指定PK後抓取單頭其他資料
PRIVATE FUNCTION aqcm300_fetch(p_flag)
   DEFINE p_flag     LIKE type_t.chr1
   DEFINE ls_msg     STRING
   #add-point:fetch段define
   {<point name="fetch.define" edit="s"/>}
   #end add-point    
   #add-point:fetch段define(客製用)
   {<point name="fetch.define_customerization" edit="c"/>}
   #end add-point    
   
   IF g_browser_cnt = 0 THEN
      RETURN
   END IF
 
   CALL cl_ap_performance_next_start()
   CASE p_flag
      WHEN 'F' 
         LET g_current_idx = 1
      WHEN 'L'  
         LET g_current_idx = g_browser.getLength()              
      WHEN 'P'
         IF g_current_idx > 1 THEN               
            LET g_current_idx = g_current_idx - 1
         END IF 
      WHEN 'N'
         IF g_current_idx < g_header_cnt THEN
            LET g_current_idx =  g_current_idx + 1
         END IF        
      WHEN '/'
         IF (NOT g_no_ask) THEN    
            CALL cl_set_act_visible("accept,cancel", TRUE)    
            CALL cl_getmsg('fetch',g_lang) RETURNING ls_msg
            LET INT_FLAG = 0
 
            PROMPT ls_msg CLIPPED,':' FOR g_jump
               #交談指令共用ACTION
               &include "common_action.4gl" 
            END PROMPT
 
            CALL cl_set_act_visible("accept,cancel", FALSE)    
            IF INT_FLAG THEN
                LET INT_FLAG = 0
                EXIT CASE  
            END IF           
         END IF
         
         IF g_jump > 0 AND g_jump <= g_browser.getLength() THEN
             LET g_current_idx = g_jump
         END IF
         LET g_no_ask = FALSE  
   END CASE 
 
   CALL g_curr_diag.setCurrentRow("s_browse", g_current_idx) #設定browse 索引
   
   LET g_current_row = g_current_idx
   LET g_detail_cnt = g_header_cnt                  
   
   #單身總筆數顯示
   IF g_detail_cnt > 0 THEN
      #若單身有資料時, idx至少為1
      IF g_detail_idx <= 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx  
   ELSE
      LET g_detail_idx = 0
      DISPLAY '' TO FORMONLY.idx    
   END IF
   
   #瀏覽頁筆數顯示
   LET g_browser_idx = g_pagestart+g_current_idx-1
   DISPLAY g_browser_idx TO FORMONLY.b_index   #當下筆數
   DISPLAY g_browser_idx TO FORMONLY.h_index   #當下筆數
   
   CALL cl_navigator_setting( g_current_idx, g_browser_cnt )
 
   #代表沒有資料
   IF g_current_idx = 0 OR g_browser.getLength() = 0 THEN
      RETURN
   END IF
   
   #超出範圍
   IF g_current_idx > g_browser.getLength() THEN
      LET g_current_idx = g_browser.getLength()
   END IF
   
   LET g_qcbk_m.qcbksite = g_browser[g_current_idx].b_qcbksite
   LET g_qcbk_m.qcbk001 = g_browser[g_current_idx].b_qcbk001
   LET g_qcbk_m.qcbk002 = g_browser[g_current_idx].b_qcbk002
 
   
   #重讀DB,因TEMP有不被更新特性
   EXECUTE aqcm300_master_referesh USING g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002 INTO g_qcbk_m.qcbksite, 
       g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
       g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp, 
       g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt, 
       g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid_desc, 
       g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkcnfid_desc
   
   #遮罩相關處理
   LET g_qcbk_m_mask_o.* =  g_qcbk_m.*
   CALL aqcm300_qcbk_t_mask()
   LET g_qcbk_m_mask_n.* =  g_qcbk_m.*
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aqcm300_set_act_visible()   
   CALL aqcm300_set_act_no_visible()
   
   #add-point:fetch段action控制
   {<point name="fetch.action_control"/>}
   #end add-point  
   
   
   
   #add-point:fetch結束前
   {<point name="fetch.after" />}
   #end add-point
   
   #保存單頭舊值
   LET g_qcbk_m_t.* = g_qcbk_m.*
   LET g_qcbk_m_o.* = g_qcbk_m.*
   
   LET g_data_owner = g_qcbk_m.qcbkownid      
   LET g_data_dept  = g_qcbk_m.qcbkowndp
   
   #重新顯示   
   CALL aqcm300_show()
 
   
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.fill_chk" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 單身填充確認
PRIVATE FUNCTION aqcm300_fill_chk(ps_idx)
   DEFINE ps_idx        LIKE type_t.chr10
   #add-point:fill_chk段define
   {<point name="fill_chk.define" edit="s"/>}
   #end add-point
   #add-point:fill_chk段define(客製用)
   {<point name="fill_chk.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:fill_chk段before_chk
   {<point name="fill_chk.before_chk"/>}
   #end add-point
   
   #此funtion功能暫時停用(2015/1/12)
   #無論傳入值為何皆回傳true(代表要填充該單身)
 
   #全部為1=1 or null時回傳true
   IF (cl_null(g_wc2_table1) OR g_wc2_table1.trim() = '1=1')  AND 
      (cl_null(g_wc2_table2) OR g_wc2_table2.trim() = '1=1') THEN
      #add-point:fill_chk段other_chk
      {<point name="fill_chk.other_chk"/>}
      #end add-point
      RETURN TRUE
   END IF
   
   #add-point:fill_chk段after_chk
   {<point name="fill_chk.after_chk"/>}
   #end add-point
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.filter" ver="3" status="" src="s" readonly="">
    <![CDATA[#應用 a50 樣板自動產生(Version:5)
#+ filter過濾功能
PRIVATE FUNCTION aqcm300_filter()
   #add-point:filter段define
   {<point name="filter.define" edit="s"/>}
   #end add-point   
   #add-point:filter段define
   {<point name="filter.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF NOT g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF   
 
   LET INT_FLAG = 0
 
   LET g_qryparam.state = 'c'
 
   LET g_wc_filter_t = g_wc_filter.trim()
   LET g_wc_t = g_wc
 
   LET g_wc = cl_replace_str(g_wc, g_wc_filter_t, '')
 
   #使用DIALOG包住 單頭CONSTRUCT及單身CONSTRUCT
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
      #單頭
      CONSTRUCT g_wc_filter ON qcbk001,qcbk002,qcbk000,qcbk003,qcbk004,qcbk008,qcbksite
                          FROM s_browse[1].b_qcbk001,s_browse[1].b_qcbk002,s_browse[1].b_qcbk000,s_browse[1].b_qcbk003, 
                              s_browse[1].b_qcbk004,s_browse[1].b_qcbk008,s_browse[1].b_qcbksite
 
         BEFORE CONSTRUCT
               DISPLAY aqcm300_filter_parser('qcbk001') TO s_browse[1].b_qcbk001
            DISPLAY aqcm300_filter_parser('qcbk002') TO s_browse[1].b_qcbk002
            DISPLAY aqcm300_filter_parser('qcbk000') TO s_browse[1].b_qcbk000
            DISPLAY aqcm300_filter_parser('qcbk003') TO s_browse[1].b_qcbk003
            DISPLAY aqcm300_filter_parser('qcbk004') TO s_browse[1].b_qcbk004
            DISPLAY aqcm300_filter_parser('qcbk008') TO s_browse[1].b_qcbk008
            DISPLAY aqcm300_filter_parser('qcbksite') TO s_browse[1].b_qcbksite
      
         #add-point:filter段cs_ctrl
         {<point name="filter.cs_ctrl"/>}
         #end add-point
      
      END CONSTRUCT
 
      #add-point:filter段add_cs
      {<point name="filter.add_cs"/>}
      #end add-point
 
      BEFORE DIALOG
         #add-point:filter段b_dialog
         {<point name="filter.b_dialog"/>}
         #end add-point  
      
      ON ACTION accept
         ACCEPT DIALOG
 
      ON ACTION cancel
         LET INT_FLAG = 1
         EXIT DIALOG 
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG
   
   END DIALOG
 
   IF NOT INT_FLAG THEN
      LET g_wc_filter = "   AND   ", g_wc_filter, "   "
      LET g_wc = g_wc , g_wc_filter
   ELSE
      LET g_wc_filter = g_wc_filter_t
      LET g_wc = g_wc_t
   END IF
 
      CALL aqcm300_filter_show('qcbk001')
   CALL aqcm300_filter_show('qcbk002')
   CALL aqcm300_filter_show('qcbk000')
   CALL aqcm300_filter_show('qcbk003')
   CALL aqcm300_filter_show('qcbk004')
   CALL aqcm300_filter_show('qcbk008')
   CALL aqcm300_filter_show('qcbksite')
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.filter_parser" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ filter過濾功能
PRIVATE FUNCTION aqcm300_filter_parser(ps_field)
   DEFINE ps_field   STRING
   DEFINE ls_tmp     STRING
   DEFINE li_tmp     LIKE type_t.num10
   DEFINE li_tmp2    LIKE type_t.num10
   DEFINE ls_var     STRING
   #add-point:filter段define
   {<point name="filter_parser.define" edit="s"/>}
   #end add-point    
   #add-point:filter段define
   {<point name="filter_parser.define_customerization" edit="s"/>}
   #end add-point    
 
   #一般條件解析
   LET ls_tmp = ps_field, "='"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
   END IF
 
   #模糊條件解析
   LET ls_tmp = ps_field, " like '"
   LET li_tmp = g_wc_filter.getIndexOf(ls_tmp,1)
   IF li_tmp > 0 THEN
      LET li_tmp = ls_tmp.getLength() + li_tmp
      LET li_tmp2 = g_wc_filter.getIndexOf("'",li_tmp + 1) - 1
      LET ls_var = g_wc_filter.subString(li_tmp,li_tmp2)
      LET ls_var = cl_replace_str(ls_var,'%','*')
   END IF
 
   RETURN ls_var
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.filter_show" ver="1" status="" src="s" readonly="">
    <![CDATA[#+ 顯示過濾條件
PRIVATE FUNCTION aqcm300_filter_show(ps_field)
   DEFINE ps_field         STRING
   DEFINE lnode_item       om.DomNode
   DEFINE ls_title         STRING
   DEFINE ls_name          STRING
   DEFINE ls_condition     STRING
 
   LET ls_name = "formonly.b_", ps_field
   LET lnode_item = gfrm_curr.findNode("TableColumn", ls_name)
   LET ls_title = lnode_item.getAttribute("text")
   IF ls_title.getIndexOf('※',1) > 0 THEN
      LEt ls_title = ls_title.subString(1,ls_title.getIndexOf('※',1)-1)
   END IF
 
   #顯示資料組合
   LET ls_condition = aqcm300_filter_parser(ps_field)
   IF NOT cl_null(ls_condition) THEN
      LET ls_title = ls_title, '※', ls_condition, '※'
   END IF
 
   #將資料顯示回去
   CALL lnode_item.setAttribute("text",ls_title)
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.global" ver="11" status="" src="s" readonly="">
    <![CDATA[#應用 t01 樣板自動產生(Version:39)
{<point name="global.memo" />}
        
IMPORT os
IMPORT util
IMPORT FGL lib_cl_dlg
#add-point:增加匯入項目
{<point name="global.import" />}
#end add-point
 
SCHEMA ds 
 
GLOBALS "../../cfg/top_global.inc"
 
#add-point:增加匯入變數檔
{<point name="global.inc" />}
#end add-point
 
#單頭 type 宣告
PRIVATE type type_g_qcbk_m        RECORD
       qcbksite LIKE qcbk_t.qcbksite, 
   qcbk001 LIKE qcbk_t.qcbk001, 
   qcbk002 LIKE qcbk_t.qcbk002, 
   qcbk000 LIKE qcbk_t.qcbk000, 
   qcbk005 LIKE qcbk_t.qcbk005, 
   qcbk003 LIKE qcbk_t.qcbk003, 
   qcbk004 LIKE qcbk_t.qcbk004, 
   qcbk006 LIKE qcbk_t.qcbk006, 
   qcbk007 LIKE qcbk_t.qcbk007, 
   qcbk008 LIKE qcbk_t.qcbk008, 
   qcbk009 LIKE qcbk_t.qcbk009, 
   imaal003 LIKE imaal_t.imaal003, 
   imaal004 LIKE imaal_t.imaal004, 
   qcbk010 LIKE qcbk_t.qcbk010, 
   qcbk010_desc LIKE type_t.chr80, 
   qcbk011 LIKE qcbk_t.qcbk011, 
   qcbk011_desc LIKE type_t.chr80, 
   qcbk022 LIKE qcbk_t.qcbk022, 
   qcbk023 LIKE qcbk_t.qcbk023, 
   qcbk012 LIKE qcbk_t.qcbk012, 
   qcbk013 LIKE qcbk_t.qcbk013, 
   qcbk014 LIKE qcbk_t.qcbk014, 
   qcbk015 LIKE qcbk_t.qcbk015, 
   qcbk016 LIKE qcbk_t.qcbk016, 
   qcbk017 LIKE qcbk_t.qcbk017, 
   qcbk018 LIKE qcbk_t.qcbk018, 
   qcbk019 LIKE qcbk_t.qcbk019, 
   qcbk020 LIKE qcbk_t.qcbk020, 
   qcbk021 LIKE qcbk_t.qcbk021, 
   qcbkstus LIKE qcbk_t.qcbkstus, 
   qcbkownid LIKE qcbk_t.qcbkownid, 
   qcbkownid_desc LIKE type_t.chr80, 
   qcbkowndp LIKE qcbk_t.qcbkowndp, 
   qcbkowndp_desc LIKE type_t.chr80, 
   qcbkcrtid LIKE qcbk_t.qcbkcrtid, 
   qcbkcrtid_desc LIKE type_t.chr80, 
   qcbkcrtdp LIKE qcbk_t.qcbkcrtdp, 
   qcbkcrtdp_desc LIKE type_t.chr80, 
   qcbkcrtdt LIKE qcbk_t.qcbkcrtdt, 
   qcbkmodid LIKE qcbk_t.qcbkmodid, 
   qcbkmodid_desc LIKE type_t.chr80, 
   qcbkmoddt LIKE qcbk_t.qcbkmoddt, 
   qcbkcnfid LIKE qcbk_t.qcbkcnfid, 
   qcbkcnfid_desc LIKE type_t.chr80, 
   qcbkcnfdt LIKE qcbk_t.qcbkcnfdt
       END RECORD
 
#單身 type 宣告
PRIVATE TYPE type_g_qcbl_d        RECORD
       qcblseq LIKE qcbl_t.qcblseq, 
   qcbl009 LIKE qcbl_t.qcbl009, 
   qcbl003 LIKE qcbl_t.qcbl003, 
   qcbl004 LIKE qcbl_t.qcbl004, 
   qcbl005 LIKE qcbl_t.qcbl005, 
   qcbl006 LIKE qcbl_t.qcbl006, 
   qcbl007 LIKE qcbl_t.qcbl007, 
   qcbl008 LIKE qcbl_t.qcbl008
       END RECORD
PRIVATE TYPE type_g_qcbl2_d RECORD
       qcbmseq1 LIKE qcbm_t.qcbmseq1, 
   qcbm003 LIKE qcbm_t.qcbm003
       END RECORD
 
 
PRIVATE TYPE type_browser RECORD
         b_statepic     LIKE type_t.chr50,
            b_qcbk001 LIKE qcbk_t.qcbk001,
      b_qcbk002 LIKE qcbk_t.qcbk002,
      b_qcbk000 LIKE qcbk_t.qcbk000,
      b_qcbk003 LIKE qcbk_t.qcbk003,
      b_qcbk004 LIKE qcbk_t.qcbk004,
      b_qcbk008 LIKE qcbk_t.qcbk008,
   b_qcbk008_desc LIKE type_t.chr80,
   b_b_qcbk008_desc_1 LIKE type_t.chr500,
      b_qcbksite LIKE qcbk_t.qcbksite
       END RECORD
       
#模組變數(Module Variables)
DEFINE g_qcbk_m          type_g_qcbk_m
DEFINE g_qcbk_m_t        type_g_qcbk_m
DEFINE g_qcbk_m_o        type_g_qcbk_m
DEFINE g_qcbk_m_mask_o   type_g_qcbk_m #轉換遮罩前資料
DEFINE g_qcbk_m_mask_n   type_g_qcbk_m #轉換遮罩後資料
 
   DEFINE g_qcbksite_t LIKE qcbk_t.qcbksite
DEFINE g_qcbk001_t LIKE qcbk_t.qcbk001
DEFINE g_qcbk002_t LIKE qcbk_t.qcbk002
 
 
DEFINE g_qcbl_d          DYNAMIC ARRAY OF type_g_qcbl_d
DEFINE g_qcbl_d_t        type_g_qcbl_d
DEFINE g_qcbl_d_o        type_g_qcbl_d
DEFINE g_qcbl_d_mask_o   DYNAMIC ARRAY OF type_g_qcbl_d #轉換遮罩前資料
DEFINE g_qcbl_d_mask_n   DYNAMIC ARRAY OF type_g_qcbl_d #轉換遮罩後資料
DEFINE g_qcbl2_d          DYNAMIC ARRAY OF type_g_qcbl2_d
DEFINE g_qcbl2_d_t        type_g_qcbl2_d
DEFINE g_qcbl2_d_o        type_g_qcbl2_d
DEFINE g_qcbl2_d_mask_o   DYNAMIC ARRAY OF type_g_qcbl2_d #轉換遮罩前資料
DEFINE g_qcbl2_d_mask_n   DYNAMIC ARRAY OF type_g_qcbl2_d #轉換遮罩後資料
 
 
DEFINE g_browser         DYNAMIC ARRAY OF type_browser
DEFINE g_browser_f       DYNAMIC ARRAY OF type_browser
 
 
DEFINE g_wc                  STRING
DEFINE g_wc_t                STRING
DEFINE g_wc2                 STRING                          #單身CONSTRUCT結果
DEFINE g_wc2_table1          STRING
 
DEFINE g_wc2_table2   STRING
 
 
DEFINE g_wc2_extend          STRING
DEFINE g_wc_filter           STRING
DEFINE g_wc_filter_t         STRING
 
DEFINE g_sql                 STRING
DEFINE g_forupd_sql          STRING
DEFINE g_cnt                 LIKE type_t.num10
DEFINE g_current_idx         LIKE type_t.num10     
DEFINE g_jump                LIKE type_t.num10        
DEFINE g_no_ask              LIKE type_t.num5        
DEFINE g_rec_b               LIKE type_t.num10           
DEFINE l_ac                  LIKE type_t.num10    
DEFINE g_curr_diag           ui.Dialog                     #Current Dialog
    
DEFINE g_pagestart           LIKE type_t.num10           
DEFINE gwin_curr             ui.Window                     #Current Window
DEFINE gfrm_curr             ui.Form                       #Current Form
DEFINE g_page_action         STRING                        #page action
DEFINE g_header_hidden       LIKE type_t.num5              #隱藏單頭
DEFINE g_worksheet_hidden    LIKE type_t.num5              #隱藏工作Panel
DEFINE g_page                STRING                        #第幾頁
DEFINE g_state               STRING       
DEFINE g_header_cnt          LIKE type_t.num10
DEFINE g_detail_cnt          LIKE type_t.num10              #單身總筆數
DEFINE g_detail_idx          LIKE type_t.num10              #單身目前所在筆數
DEFINE g_detail_idx2         LIKE type_t.num10              #單身2目前所在筆數
DEFINE g_browser_cnt         LIKE type_t.num10              #Browser總筆數
DEFINE g_browser_idx         LIKE type_t.num10              #Browser目前所在筆數
DEFINE g_temp_idx            LIKE type_t.num10              #Browser目前所在筆數(暫存用)
DEFINE g_order               STRING                        #查詢排序欄位
                                                        
DEFINE g_current_row         LIKE type_t.num10              #Browser所在筆數
DEFINE g_current_sw          BOOLEAN                       #Browser所在筆數用開關
DEFINE g_current_page        LIKE type_t.num10              #目前所在頁數
DEFINE g_insert              LIKE type_t.chr5              #是否導到其他page
 
DEFINE g_ref_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_ref_vars            DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE g_rtn_fields          DYNAMIC ARRAY OF VARCHAR(500) #ap_ref用陣列
DEFINE gs_keys               DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE gs_keys_bak           DYNAMIC ARRAY OF VARCHAR(500) #同步資料用陣列
DEFINE g_bfill               LIKE type_t.chr5              #是否刷新單身
DEFINE g_error_show          LIKE type_t.num5              #是否顯示筆數提示訊息
DEFINE g_master_insert       BOOLEAN                       #確認單頭資料是否寫入
 
DEFINE g_wc_frozen           STRING                        #凍結欄位使用
DEFINE g_chk                 BOOLEAN                       #助記碼判斷用
DEFINE g_aw                  STRING                        #確定當下點擊的單身
DEFINE g_default             BOOLEAN                       #是否有外部參數查詢
DEFINE g_log1                STRING                        #log用
DEFINE g_log2                STRING                        #log用
DEFINE g_loc                 LIKE type_t.chr5              #判斷游標所在位置
DEFINE g_add_browse          STRING                        #新增填充用WC
DEFINE g_update              BOOLEAN                       #確定單頭/身是否異動過
 
#add-point:自定義模組變數(Module Variable)
{<point name="global.variable" edit="s"/>}
#end add-point
 
#add-point:自定義客戶專用模組變數(Module Variable)
{<point name="global.variable_customerization" edit="c"/>}
#end add-point
 
#add-point:傳入參數說明(global.argv)
{<point name="global.argv"/>}
#end add-point
]]>
  </section>
  <section id="aqcm300.idx_chk" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 顯示正確的單身資料筆數
PRIVATE FUNCTION aqcm300_idx_chk()
   #add-point:idx_chk段define
   {<point name="idx_chk.define" edit="s"/>}
   #end add-point  
   #add-point:idx_chk段define(客製用)
   {<point name="idx_chk.define_customerization" edit="c"/>}
   #end add-point  
   
   IF g_current_page = 1 THEN
      LET g_detail_idx = g_curr_diag.getCurrentRow("s_detail1")
      IF g_detail_idx > g_qcbl_d.getLength() THEN
         LET g_detail_idx = g_qcbl_d.getLength()
      END IF
      IF g_detail_idx = 0 AND g_qcbl_d.getLength() <> 0 THEN
         LET g_detail_idx = 1
      END IF
      DISPLAY g_detail_idx TO FORMONLY.idx
      DISPLAY g_qcbl_d.getLength() TO FORMONLY.cnt
   END IF
   
   IF g_current_page = 2 THEN
      LET g_detail_idx2 = g_curr_diag.getCurrentRow("s_detail2")
      IF g_detail_idx2 > g_qcbl2_d.getLength() THEN
         LET g_detail_idx2 = g_qcbl2_d.getLength()
      END IF
      IF g_detail_idx2 = 0 AND g_qcbl2_d.getLength() <> 0 THEN
         LET g_detail_idx2 = 1
      END IF
      DISPLAY g_detail_idx2 TO FORMONLY.idx
      DISPLAY g_qcbl2_d.getLength() TO FORMONLY.cnt
   END IF
 
   
   #add-point:idx_chk段other
   {<point name="idx_chk.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.init" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料初始化
PRIVATE FUNCTION aqcm300_init()
   #add-point:init段define
   {<point name="init.define" edit="s"/>}
   #end add-point    
   #add-point:init段define(客製用)
   {<point name="init.define_customerization" edit="c"/>}
   #end add-point    
 
   LET g_bfill       = "Y"
   LET g_detail_idx  = 1 #第一層單身指標
   LET g_detail_idx2 = 1 #第二層單身指標
   LET g_error_show  = 1
   LET l_ac = 1 #單身指標
      CALL cl_set_combo_scc_part('qcbkstus','13','N,Y,X')
 
      CALL cl_set_combo_scc('qcbk000','5056') 
   CALL cl_set_combo_scc('qcbk005','5060') 
 
   LET gwin_curr = ui.Window.getCurrent()  #取得現行畫面
   LET gfrm_curr = gwin_curr.getForm()     #取出物件化後的畫面物件
 
   #add-point:畫面資料初始化
   {<point name="init.init"/>}
   #end add-point
   
   #初始化搜尋條件
   CALL aqcm300_default_search()
    
END FUNCTION
]]>
  </section>
  <section id="aqcm300.input" ver="8" status="" src="s" readonly="">
    <![CDATA[#+ 資料輸入
PRIVATE FUNCTION aqcm300_input(p_cmd)
   DEFINE  p_cmd                 LIKE type_t.chr1
   DEFINE  l_cmd_t               LIKE type_t.chr1
   DEFINE  l_cmd                 LIKE type_t.chr1
   DEFINE  l_n                   LIKE type_t.num10                #檢查重複用  
   DEFINE  l_cnt                 LIKE type_t.num10                #檢查重複用  
   DEFINE  l_lock_sw             LIKE type_t.chr1                #單身鎖住否  
   DEFINE  l_allow_insert        LIKE type_t.num5                #可新增否 
   DEFINE  l_allow_delete        LIKE type_t.num5                #可刪除否  
   DEFINE  l_count               LIKE type_t.num10
   DEFINE  l_i                   LIKE type_t.num10
   DEFINE  l_insert              BOOLEAN
   DEFINE  ls_return             STRING
   DEFINE  l_var_keys            DYNAMIC ARRAY OF STRING
   DEFINE  l_field_keys          DYNAMIC ARRAY OF STRING
   DEFINE  l_vars                DYNAMIC ARRAY OF STRING
   DEFINE  l_fields              DYNAMIC ARRAY OF STRING
   DEFINE  l_var_keys_bak        DYNAMIC ARRAY OF STRING
   DEFINE  lb_reproduce          BOOLEAN
   DEFINE  li_reproduce          LIKE type_t.num10
   DEFINE  li_reproduce_target   LIKE type_t.num10
   DEFINE  ls_keys               DYNAMIC ARRAY OF VARCHAR(500)
   #add-point:input段define
   {<point name="input.define" edit="s"/>}
   #end add-point  
   #add-point:input段define(客製用)
   {<point name="input.define_customerization" edit="c"/>}
   #end add-point  
   
   #先做狀態判定
   IF p_cmd = 'r' THEN
      LET l_cmd_t = 'r'
      LET p_cmd   = 'a'
   ELSE
      LET l_cmd_t = p_cmd
   END IF   
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005, 
       g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009, 
       g_qcbk_m.imaal003,g_qcbk_m.imaal004,g_qcbk_m.qcbk010,g_qcbk_m.qcbk010_desc,g_qcbk_m.qcbk011,g_qcbk_m.qcbk011_desc, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkowndp_desc, 
       g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtid_desc,g_qcbk_m.qcbkcrtdp,g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkcrtdt, 
       g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfid_desc, 
       g_qcbk_m.qcbkcnfdt
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
 
   CALL cl_set_head_visible("","YES")  
 
   LET l_insert = FALSE
   LET g_action_choice = ""
 
   #add-point:input段define_sql
   {<point name="input.define_sql" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT qcblseq,qcbl009,qcbl003,qcbl004,qcbl005,qcbl006,qcbl007,qcbl008 FROM qcbl_t  
       WHERE qcblent=? AND qcblsite=? AND qcbl001=? AND qcbl002=? AND qcblseq=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aqcm300_bcl CURSOR FROM g_forupd_sql
   
 
   
   #add-point:input段define_sql
   {<point name="input.define_sql2" mark="Y"/>}
   #end add-point 
   LET g_forupd_sql = "SELECT qcbmseq1,qcbm003 FROM qcbm_t WHERE qcbment=? AND qcbmsite=? AND qcbm001=?  
       AND qcbm002=? AND qcbmseq=? AND qcbmseq1=? FOR UPDATE"
   #add-point:input段define_sql
   {<point name="input.after_define_sql2"/>}
   #end add-point 
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aqcm300_bcl2 CURSOR FROM g_forupd_sql
 
 
 
   #add-point:input段define_sql
   {<point name="input.other_sql"/>}
   #end add-point 
 
   LET l_allow_insert = cl_auth_detail_input("insert")
   LET l_allow_delete = cl_auth_detail_input("delete")
   LET g_qryparam.state = 'i'
   
   #控制key欄位可否輸入
   CALL aqcm300_set_entry(p_cmd)
   #add-point:set_entry後
   {<point name="input.after_set_entry"/>}
   #end add-point
   CALL aqcm300_set_no_entry(p_cmd)
 
   DISPLAY BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk022,g_qcbk_m.qcbk023, 
       g_qcbk_m.qcbkstus
   
   LET lb_reproduce = FALSE
   
   #關閉被遮罩相關欄位輸入, 無法確定USER是否會需要輸入此欄位
   #因此先行關閉, 若有需要可於下方add-point中自行開啟
   CALL cl_mask_set_no_entry()
   
   #add-point:資料輸入前
   {<point name="input.before_input"/>}
   #end add-point
   
   DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
]]>
  </section>
  <section id="aqcm300.input.body" ver="3" status="" src="s" readonly="">
    <![CDATA[   
      #Page1 預設值產生於此處
      INPUT ARRAY g_qcbl_d FROM s_detail1.*
          ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                  INSERT ROW = l_allow_insert, 
                  DELETE ROW = l_allow_delete,
                  APPEND ROW = l_allow_insert)
 
         #自訂ACTION(detail_input,page_1)
         
         
         BEFORE INPUT
            #add-point:資料輸入前
            {<point name="input.body.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_qcbl_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            CALL aqcm300_b_fill()
            #如果一直都在單身1則控制筆數位置
            IF g_loc = 'm' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx)
            END IF
            LET g_loc = 'm'
            LET g_rec_b = g_qcbl_d.getLength()
            #add-point:資料輸入前
            {<point name="input.d.before_input"/>}
            #end add-point
         
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx = l_ac
            LET g_current_page = 1
            CALL aqcm300_b_fill2('2')
 
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aqcm300_cl USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aqcm300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aqcm300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_qcbl_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_qcbl_d[l_ac].qcblseq IS NOT NULL
 
            THEN
               LET l_cmd='u'
               LET g_qcbl_d_t.* = g_qcbl_d[l_ac].*  #BACKUP
               LET g_qcbl_d_o.* = g_qcbl_d[l_ac].*  #BACKUP
               CALL aqcm300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body.after_set_entry_b"/>}
               #end add-point  
               CALL aqcm300_set_no_entry_b(l_cmd)
               IF NOT aqcm300_lock_b("qcbl_t","'1'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aqcm300_bcl INTO g_qcbl_d[l_ac].qcblseq,g_qcbl_d[l_ac].qcbl009,g_qcbl_d[l_ac].qcbl003, 
                      g_qcbl_d[l_ac].qcbl004,g_qcbl_d[l_ac].qcbl005,g_qcbl_d[l_ac].qcbl006,g_qcbl_d[l_ac].qcbl007, 
                      g_qcbl_d[l_ac].qcbl008
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = g_qcbl_d_t.qcblseq 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_qcbl_d_mask_o[l_ac].* =  g_qcbl_d[l_ac].*
                  CALL aqcm300_qcbl_t_mask()
                  LET g_qcbl_d_mask_n[l_ac].* =  g_qcbl_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aqcm300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
        
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_qcbl_d[l_ac].* TO NULL 
            INITIALIZE g_qcbl_d_t.* TO NULL 
            INITIALIZE g_qcbl_d_o.* TO NULL 
            #公用欄位給值(單身)
            
            #自定義預設值
                  LET g_qcbl_d[l_ac].qcbl006 = "0"
      LET g_qcbl_d[l_ac].qcbl007 = "0"
      LET g_qcbl_d[l_ac].qcbl008 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body.insert.before_bak"/>}
            #end add-point
            LET g_qcbl_d_t.* = g_qcbl_d[l_ac].*     #新輸入資料
            LET g_qcbl_d_o.* = g_qcbl_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aqcm300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body.insert.after_set_entry_b"/>}
            #end add-point
            CALL aqcm300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_qcbl_d[li_reproduce_target].* = g_qcbl_d[li_reproduce].*
 
               LET g_qcbl_d[li_reproduce_target].qcblseq = NULL
 
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body.before_insert"/>}
            #end add-point  
  
         AFTER INSERT
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身新增
            {<point name="input.body.b_a_insert"/>}
            #end add-point
               
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM qcbl_t 
             WHERE qcblent = g_enterprise AND qcblsite = g_qcbk_m.qcbksite
               AND qcbl001 = g_qcbk_m.qcbk001
               AND qcbl002 = g_qcbk_m.qcbk002
 
               AND qcblseq = g_qcbl_d[l_ac].qcblseq
 
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身新增前
               {<point name="input.body.b_insert"/>}
               #end add-point
            
               #同步新增到同層的table
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcbk_m.qcbksite
               LET gs_keys[2] = g_qcbk_m.qcbk001
               LET gs_keys[3] = g_qcbk_m.qcbk002
               LET gs_keys[4] = g_qcbl_d[g_detail_idx].qcblseq
               CALL aqcm300_insert_b('qcbl_t',gs_keys,"'1'")
                           
               #add-point:單身新增後
               {<point name="input.body.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_qcbl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "qcbl_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aqcm300_b_fill()
               #資料多語言用-增/改
               
               #add-point:input段-after_insert
               {<point name="input.body.a_insert2"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
              
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身刪除後(=d)
               {<point name="input.body.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身刪除前
               {<point name="input.body.b_delete" mark="Y"/>}
               #end add-point 
               
               #取得該筆資料key值
               INITIALIZE gs_keys TO NULL
               LET gs_keys[01] = g_qcbk_m.qcbksite
               LET gs_keys[gs_keys.getLength()+1] = g_qcbk_m.qcbk001
               LET gs_keys[gs_keys.getLength()+1] = g_qcbk_m.qcbk002
 
               LET gs_keys[gs_keys.getLength()+1] = g_qcbl_d_t.qcblseq
 
            
               #刪除同層單身
               IF NOT aqcm300_delete_b('qcbl_t',gs_keys,"'1'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aqcm300_bcl
                  CANCEL DELETE
               END IF
    
               #刪除下層單身
               IF NOT aqcm300_key_delete_b(gs_keys,'qcbl_t') THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aqcm300_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身刪除中
               {<point name="input.body.m_delete"/>}
               #end add-point 
               
               CALL s_transaction_end('Y','0')
               CLOSE aqcm300_bcl
            
               LET g_rec_b = g_rec_b-1
               #add-point:單身刪除後
               {<point name="input.body.a_delete"/>}
               #end add-point
               LET l_count = g_qcbl_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body.after_delete"/>}
               #end add-point
            END IF
 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_qcbl_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
 
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcblseq
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_qcbl_d[l_ac].qcblseq,"0","0","","","azz-00079",1) THEN
               NEXT FIELD qcblseq
            END IF 
 
 
            #add-point:AFTER FIELD qcblseq
            {<point name="input.a.page1.qcblseq" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcblseq
            #add-point:BEFORE FIELD qcblseq
            {<point name="input.b.page1.qcblseq" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcblseq
            #add-point:ON CHANGE qcblseq
            {<point name="input.g.page1.qcblseq" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl009
            
            #add-point:AFTER FIELD qcbl009
            {<point name="input.a.page1.qcbl009" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl009
            #add-point:BEFORE FIELD qcbl009
            {<point name="input.b.page1.qcbl009" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbl009
            #add-point:ON CHANGE qcbl009
            {<point name="input.g.page1.qcbl009" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl003
            #add-point:BEFORE FIELD qcbl003
            {<point name="input.b.page1.qcbl003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl003
            
            #add-point:AFTER FIELD qcbl003
            {<point name="input.a.page1.qcbl003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbl003
            #add-point:ON CHANGE qcbl003
            {<point name="input.g.page1.qcbl003" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbl004
            #add-point:BEFORE FIELD qcbl004
            {<point name="input.b.page1.qcbl004" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbl004
            
            #add-point:AFTER FIELD qcbl004
            {<point name="input.a.page1.qcbl004" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbl004
            #add-point:ON CHANGE qcbl004
            {<point name="input.g.page1.qcbl004" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page1.qcblseq
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcblseq
            #add-point:ON ACTION controlp INFIELD qcblseq
            {<point name="input.c.page1.qcblseq" />}
            #END add-point
 
         #Ctrlp:input.c.page1.qcbl009
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl009
            #add-point:ON ACTION controlp INFIELD qcbl009
            {<point name="input.c.page1.qcbl009" />}
            #END add-point
 
         #Ctrlp:input.c.page1.qcbl003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl003
            #add-point:ON ACTION controlp INFIELD qcbl003
            {<point name="input.c.page1.qcbl003" />}
            #END add-point
 
         #Ctrlp:input.c.page1.qcbl004
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbl004
            #add-point:ON ACTION controlp INFIELD qcbl004
            {<point name="input.c.page1.qcbl004" />}
            #END add-point
 
 
 
         ON ROW CHANGE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_qcbl_d[l_ac].* = g_qcbl_d_t.*
               CLOSE aqcm300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
              
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = g_qcbl_d[l_ac].qcblseq 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_qcbl_d[l_ac].* = g_qcbl_d_t.*
            ELSE
            
               #add-point:單身修改前
               {<point name="input.body.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身)
               
      
               #將遮罩欄位還原
               CALL aqcm300_qcbl_t_mask_restore('restore_mask_o')
      
               UPDATE qcbl_t SET (qcblsite,qcbl001,qcbl002,qcblseq,qcbl009,qcbl003,qcbl004,qcbl005,qcbl006, 
                   qcbl007,qcbl008) = (g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbl_d[l_ac].qcblseq, 
                   g_qcbl_d[l_ac].qcbl009,g_qcbl_d[l_ac].qcbl003,g_qcbl_d[l_ac].qcbl004,g_qcbl_d[l_ac].qcbl005, 
                   g_qcbl_d[l_ac].qcbl006,g_qcbl_d[l_ac].qcbl007,g_qcbl_d[l_ac].qcbl008)
                WHERE qcblent = g_enterprise AND qcblsite = g_qcbk_m.qcbksite 
                  AND qcbl001 = g_qcbk_m.qcbk001 
                  AND qcbl002 = g_qcbk_m.qcbk002 
 
                  AND qcblseq = g_qcbl_d_t.qcblseq #項次   
 
                  
               #add-point:單身修改中
               {<point name="input.body.m_update"/>}
               #end add-point
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "qcbl_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_qcbl_d[l_ac].* = g_qcbl_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "qcbl_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()                   
                     CALL s_transaction_end('N','0')
                     LET g_qcbl_d[l_ac].* = g_qcbl_d_t.*  
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcbk_m.qcbksite
               LET gs_keys_bak[1] = g_qcbksite_t
               LET gs_keys[2] = g_qcbk_m.qcbk001
               LET gs_keys_bak[2] = g_qcbk001_t
               LET gs_keys[3] = g_qcbk_m.qcbk002
               LET gs_keys_bak[3] = g_qcbk002_t
               LET gs_keys[4] = g_qcbl_d[g_detail_idx].qcblseq
               LET gs_keys_bak[4] = g_qcbl_d_t.qcblseq
               CALL aqcm300_update_b('qcbl_t',gs_keys,gs_keys_bak,"'1'")
                     #資料多語言用-增/改
                     
               END CASE
 
               #將遮罩欄位進行遮蔽
               CALL aqcm300_qcbl_t_mask_restore('restore_mask_n')
               
               #判斷key是否有改變
               INITIALIZE gs_keys TO NULL
               IF NOT(g_qcbl_d[g_detail_idx].qcblseq = g_qcbl_d_t.qcblseq 
 
                  ) THEN
                  LET gs_keys[01] = g_qcbk_m.qcbksite
                  LET gs_keys[gs_keys.getLength()+1] = g_qcbk_m.qcbk001
                  LET gs_keys[gs_keys.getLength()+1] = g_qcbk_m.qcbk002
 
                  LET gs_keys[gs_keys.getLength()+1] = g_qcbl_d_t.qcblseq
 
                  CALL aqcm300_key_update_b(gs_keys,'qcbl_t')
               END IF
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_qcbk_m),util.JSON.stringify(g_qcbl_d_t)
               LET g_log2 = util.JSON.stringify(g_qcbk_m),util.JSON.stringify(g_qcbl_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身修改後
               {<point name="input.body.a_update"/>}
               #end add-point
 
            END IF
            
         AFTER ROW
            #add-point:單身after_row
            {<point name="input.body.after_row"/>}
            #end add-point
            CALL aqcm300_unlock_b("qcbl_t","'1'")
            CALL s_transaction_end('Y','0')
            #其他table進行unlock
            #add-point:單身after_row2
            {<point name="input.body.after_row2"/>}
            #end add-point
              
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body.after_input"/>}
            #end add-point 
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_qcbl_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_qcbl_d.getLength()+1
            
         #ON ACTION cancel
         #   LET INT_FLAG = 1
         #   LET g_detail_idx = 1
         #   EXIT DIALOG 
 
      END INPUT
      
 
      
      INPUT ARRAY g_qcbl2_d FROM s_detail2.*
         ATTRIBUTE(COUNT = g_rec_b,WITHOUT DEFAULTS, #MAXCOUNT = g_max_rec,
                 INSERT ROW = l_allow_insert, #此頁面insert功能由產生器控制, 手動之設定無效! 

                 DELETE ROW = l_allow_delete,
                 APPEND ROW = l_allow_insert)
                 
         #自訂ACTION(detail_input,page_2)
         
         
         BEFORE INPUT
            #檢查上層單身是否有資料
            IF cl_null(g_qcbl_d[g_detail_idx].qcblseq) THEN
               NEXT FIELD qcblseq
            END IF
            #add-point:資料輸入前
            {<point name="input.body2.before_input2"/>}
            #end add-point
            IF g_insert = 'Y' AND NOT cl_null(g_insert) THEN 
              CALL FGL_SET_ARR_CURR(g_qcbl2_d.getLength()+1) 
              LET g_insert = 'N' 
           END IF 
 
            #如果一直都在單身2則控制筆數位置
            IF g_loc = 'd' AND g_rec_b != 0 THEN
               CALL FGL_SET_ARR_CURR(g_detail_idx2)
            END IF
            LET g_loc = 'd'
            LET g_rec_b = g_qcbl2_d.getLength()
            #add-point:資料輸入前
            {<point name="input.body2.before_input"/>}
            #end add-point
            
         BEFORE INSERT
            
            LET l_insert = TRUE
            LET l_n = ARR_COUNT()
            LET l_cmd = 'a'
            INITIALIZE g_qcbl2_d[l_ac].* TO NULL 
            INITIALIZE g_qcbl2_d_t.* TO NULL 
            INITIALIZE g_qcbl2_d_o.* TO NULL 
            #公用欄位給值(單身2)
            
            #自定義預設值(單身2)
                  LET g_qcbl2_d[l_ac].qcbm003 = "0"
 
            #add-point:modify段before備份
            {<point name="input.body2.insert.before_bak"/>}
            #end add-point
            LET g_qcbl2_d_t.* = g_qcbl2_d[l_ac].*     #新輸入資料
            LET g_qcbl2_d_o.* = g_qcbl2_d[l_ac].*     #新輸入資料
            CALL cl_show_fld_cont()
            CALL aqcm300_set_entry_b(l_cmd)
            #add-point:modify段after_set_entry_b
            {<point name="input.body2.insert.after_set_entry_b"/>}
            #end add-point
            CALL aqcm300_set_no_entry_b(l_cmd)
            IF lb_reproduce THEN
               LET lb_reproduce = FALSE
               LET g_qcbl2_d[li_reproduce_target].* = g_qcbl2_d[li_reproduce].*
 
               LET g_qcbl2_d[li_reproduce_target].qcbmseq1 = NULL
            END IF
            
            #add-point:modify段before insert
            {<point name="input.body2.before_insert"/>}
            #end add-point  
            
         BEFORE ROW
            #add-point:modify段before row2
            {<point name="input.body2.before_row2"/>}
            #end add-point  
            LET l_insert = FALSE
            LET l_cmd = ''
            LET l_ac = ARR_CURR()
            LET g_detail_idx2 = l_ac
            LET g_current_page = 2
            
            LET l_lock_sw = 'N'            #DEFAULT
            LET l_n = ARR_COUNT()
            DISPLAY l_ac TO FORMONLY.idx
         
            CALL s_transaction_begin()
            OPEN aqcm300_cl USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
            OPEN aqcm300_bcl USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002, 
                g_qcbl_d[g_detail_idx].qcblseq
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aqcm300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aqcm300_cl
               CLOSE aqcm300_bcl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            LET g_rec_b = g_qcbl2_d.getLength()
            
            IF g_rec_b >= l_ac 
               AND g_qcbl2_d[l_ac].qcbmseq1 IS NOT NULL
            THEN 
               LET l_cmd='u'
               LET g_qcbl2_d_t.* = g_qcbl2_d[l_ac].*  #BACKUP
               LET g_qcbl2_d_o.* = g_qcbl2_d[l_ac].*  #BACKUP
               CALL aqcm300_set_entry_b(l_cmd)
               #add-point:modify段after_set_entry_b
               {<point name="input.body2.after_set_entry_b"/>}
               #end add-point  
               CALL aqcm300_set_no_entry_b(l_cmd)
               IF NOT aqcm300_lock_b("qcbm_t","'2'") THEN
                  LET l_lock_sw='Y'
               ELSE
                  FETCH aqcm300_bcl2 INTO g_qcbl2_d[l_ac].qcbmseq1,g_qcbl2_d[l_ac].qcbm003
                  IF SQLCA.sqlcode THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = '' 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     LET l_lock_sw = "Y"
                  END IF
                  
                  #遮罩相關處理
                  LET g_qcbl2_d_mask_o[l_ac].* =  g_qcbl2_d[l_ac].*
                  CALL aqcm300_qcbm_t_mask()
                  LET g_qcbl2_d_mask_n[l_ac].* =  g_qcbl2_d[l_ac].*
                  
                  LET g_bfill = "N"
                  CALL aqcm300_show()
                  LET g_bfill = "Y"
                  
                  CALL cl_show_fld_cont()
               END IF
            ELSE
               LET l_cmd='a'
            END IF
            #add-point:modify段before row
            {<point name="input.body2.before_row"/>}
            #end add-point  
            #其他table資料備份(確定是否更改用)
            
            #其他table進行lock
            
            
         BEFORE DELETE                            #是否取消單身
            IF l_cmd = 'a' THEN
               LET l_cmd='d'
               #add-point:單身AFTER DELETE (=d)
               {<point name="input.body2.after_delete_d"/>}
               #end add-point
            ELSE
               IF NOT cl_ask_del_detail() THEN
                  CANCEL DELETE
               END IF
               IF l_lock_sw = "Y" THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "" 
                  LET g_errparam.code   = -263 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CANCEL DELETE
               END IF
               
               #add-point:單身2刪除前
               {<point name="input.body2.b_delete" mark="Y"/>}
               #end add-point    
               #取得該筆資料key值
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcbk_m.qcbksite
               LET gs_keys[2] = g_qcbk_m.qcbk001
               LET gs_keys[3] = g_qcbk_m.qcbk002
               LET gs_keys[4] = g_qcbl_d[g_detail_idx].qcblseq
               LET gs_keys[5] = g_qcbl2_d_t.qcbmseq1
 
               #刪除同層單身
               IF NOT aqcm300_delete_b('qcbm_t',gs_keys,"'2'") THEN
                  CALL s_transaction_end('N','0')
                  CLOSE aqcm300_bcl
                  CANCEL DELETE
               END IF
               
               #刪除多語言
               
               
               #add-point:單身2刪除中
               {<point name="input.body2.m_delete"/>}
               #end add-point   
               
               CALL s_transaction_end('Y','0')
               CLOSE aqcm300_bcl
                  
               LET g_rec_b = g_rec_b-1
               #add-point:單身2刪除後
               {<point name="input.body2.a_delete"/>}
               #end add-point
               LET l_count = g_qcbl_d.getLength()
               
               #add-point:單身刪除後(<>d)
               {<point name="input.body2.after_delete"/>}
               #end add-point
            END IF 
         AFTER DELETE
            #如果是最後一筆
            IF l_ac = (g_qcbl2_d.getLength() + 1) THEN
               CALL FGL_SET_ARR_CURR(l_ac-1)
            END IF
         
         AFTER INSERT    
            LET l_insert = FALSE
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               CANCEL INSERT
            END IF
               
            #add-point:單身2新增前
            {<point name="input.body2.b_a_insert"/>}
            #end add-point
    
            LET l_count = 1  
            SELECT COUNT(*) INTO l_count FROM qcbm_t 
             WHERE qcbment = g_enterprise AND qcbmsite = g_qcbk_m.qcbksite AND qcbm001 = g_qcbk_m.qcbk001  
                 AND qcbm002 = g_qcbk_m.qcbk002 AND qcbmseq = g_qcbl_d[g_detail_idx].qcblseq AND qcbmseq1  
                 = g_qcbl2_d[g_detail_idx2].qcbmseq1
                
            #資料未重複, 插入新增資料
            IF l_count = 0 THEN 
               #add-point:單身2新增前
               {<point name="input.body2.b_insert"/>}
               #end add-point
            
                              INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcbk_m.qcbksite
               LET gs_keys[2] = g_qcbk_m.qcbk001
               LET gs_keys[3] = g_qcbk_m.qcbk002
               LET gs_keys[4] = g_qcbl_d[g_detail_idx].qcblseq
               LET gs_keys[5] = g_qcbl2_d[g_detail_idx2].qcbmseq1
               CALL aqcm300_insert_b('qcbm_t',gs_keys,"'2'")
                           
               #add-point:單身新增後2
               {<point name="input.body2.a_insert"/>}
               #end add-point
            ELSE    
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = 'INSERT' 
               LET g_errparam.code   = "std-00006" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               INITIALIZE g_qcbl_d[l_ac].* TO NULL
               CALL s_transaction_end('N','0')
               CANCEL INSERT
            END IF
 
            IF SQLCA.SQLcode  THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "qcbm_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')                    
               CANCEL INSERT
            ELSE
               #先刷新資料
               #CALL aqcm300_b_fill()
               #資料多語言用-增/改
               
               #add-point:單身新增後
               {<point name="input.body2.after_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0')
               #ERROR 'INSERT O.K'
               LET g_rec_b = g_rec_b + 1
            END IF
            
         ON ROW CHANGE 
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               LET g_qcbl2_d[l_ac].* = g_qcbl2_d_t.*
               CLOSE aqcm300_bcl2
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            IF l_lock_sw = 'Y' THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = -263 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               LET g_qcbl2_d[l_ac].* = g_qcbl2_d_t.*
            ELSE
               #add-point:單身page2修改前
               {<point name="input.body2.b_update" mark="Y"/>}
               #end add-point
               
               #寫入修改者/修改日期資訊(單身2)
               
               
               #將遮罩欄位還原
               CALL aqcm300_qcbm_t_mask_restore('restore_mask_o')
               
               UPDATE qcbm_t SET (qcbmsite,qcbm001,qcbm002,qcbmseq,qcbmseq1,qcbm003) = (g_qcbk_m.qcbksite, 
                   g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbl_d[g_detail_idx].qcblseq,g_qcbl2_d[l_ac].qcbmseq1, 
                   g_qcbl2_d[l_ac].qcbm003) #自訂欄位頁簽
                WHERE qcbment = g_enterprise AND qcbmsite = g_qcbksite_t AND qcbm001 = g_qcbk001_t AND  
                    qcbm002 = g_qcbk002_t AND qcbmseq = g_qcbl_d[g_detail_idx].qcblseq AND qcbmseq1  
                    = g_qcbl2_d_t.qcbmseq1
                  
               #add-point:單身page2修改中
               {<point name="input.body2.m_update"/>}
               #end add-point
                  
               CASE
                  WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "qcbm_t" 
                     LET g_errparam.code   = "std-00009" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_qcbl2_d[l_ac].* = g_qcbl2_d_t.*
                  WHEN SQLCA.sqlcode #其他錯誤
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "qcbm_t" 
                     LET g_errparam.code   = SQLCA.sqlcode 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CALL s_transaction_end('N','0')
                     LET g_qcbl2_d[l_ac].* = g_qcbl2_d_t.*
                  OTHERWISE
                                    INITIALIZE gs_keys TO NULL 
               LET gs_keys[1] = g_qcbk_m.qcbksite
               LET gs_keys_bak[1] = g_qcbksite_t
               LET gs_keys[2] = g_qcbk_m.qcbk001
               LET gs_keys_bak[2] = g_qcbk001_t
               LET gs_keys[3] = g_qcbk_m.qcbk002
               LET gs_keys_bak[3] = g_qcbk002_t
               LET gs_keys[4] = g_qcbl_d[g_detail_idx].qcblseq
               LET gs_keys_bak[4] = g_qcbl_d[g_detail_idx].qcblseq
               LET gs_keys[5] = g_qcbl2_d[g_detail_idx2].qcbmseq1
               LET gs_keys_bak[5] = g_qcbl2_d_t.qcbmseq1
               CALL aqcm300_update_b('qcbm_t',gs_keys,gs_keys_bak,"'2'")
                     #資料多語言用-增/改
                     
               END CASE
               
               #將遮罩欄位進行遮蔽
               CALL aqcm300_qcbm_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單身修改)
               LET g_log1 = util.JSON.stringify(g_qcbk_m),util.JSON.stringify(g_qcbl2_d_t)
               LET g_log2 = util.JSON.stringify(g_qcbk_m),util.JSON.stringify(g_qcbl2_d[l_ac])
               IF NOT cl_log_modified_record_d(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               END IF
               
               #add-point:單身page2修改後
               {<point name="input.body2.a_update"/>}
               #end add-point
            END IF
         
                  #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbmseq1
            #應用 a15 樣板自動產生(Version:2)
            #確認欄位值在特定區間內
            IF NOT cl_ap_chk_range(g_qcbl2_d[l_ac].qcbmseq1,"0","0","","","azz-00079",1) THEN
               NEXT FIELD qcbmseq1
            END IF 
 
 
            #add-point:AFTER FIELD qcbmseq1
            {<point name="input.a.page2.qcbmseq1" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbmseq1
            #add-point:BEFORE FIELD qcbmseq1
            {<point name="input.b.page2.qcbmseq1" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbmseq1
            #add-point:ON CHANGE qcbmseq1
            {<point name="input.g.page2.qcbmseq1" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbm003
            #add-point:BEFORE FIELD qcbm003
            {<point name="input.b.page2.qcbm003" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbm003
            
            #add-point:AFTER FIELD qcbm003
            {<point name="input.a.page2.qcbm003" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbm003
            #add-point:ON CHANGE qcbm003
            {<point name="input.g.page2.qcbm003" />}
            #END add-point 
 
 
                  #Ctrlp:input.c.page2.qcbmseq1
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbmseq1
            #add-point:ON ACTION controlp INFIELD qcbmseq1
            {<point name="input.c.page2.qcbmseq1" />}
            #END add-point
 
         #Ctrlp:input.c.page2.qcbm003
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbm003
            #add-point:ON ACTION controlp INFIELD qcbm003
            {<point name="input.c.page2.qcbm003" />}
            #END add-point
 
 
 
         AFTER ROW
            #add-point:單身page2_after_row
            {<point name="input.body2.after_row"/>}
            #end add-point
            LET l_ac = ARR_CURR()
            IF INT_FLAG THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = '' 
               LET g_errparam.code   = 9001 
               LET g_errparam.popup  = FALSE 
               CALL cl_err()
               LET INT_FLAG = 0
               IF l_cmd = 'u' THEN
                  LET g_qcbl2_d[l_ac].* = g_qcbl2_d_t.*
               END IF
               CLOSE aqcm300_bcl2
               CLOSE aqcm300_bcl
               CALL s_transaction_end('N','0')
               EXIT DIALOG 
            END IF
            
            #其他table進行unlock
            
            CALL aqcm300_unlock_b("qcbm_t","'2'")
            CALL s_transaction_end('Y','0')
            #add-point:單身page2_after_row2
            {<point name="input.body2.after_row2"/>}
            #end add-point
 
         AFTER INPUT
            #add-point:input段after input 
            {<point name="input.body2.after_input"/>}
            #end add-point  
 
         ON ACTION controlo    
            CALL FGL_SET_ARR_CURR(g_qcbl2_d.getLength()+1)
            LET lb_reproduce = TRUE
            LET li_reproduce = l_ac
            LET li_reproduce_target = g_qcbl2_d.getLength()+1
 
      END INPUT
 
 
 
]]>
  </section>
  <section id="aqcm300.input.head" ver="8" status="" src="s" readonly="">
    <![CDATA[      #單頭段
      INPUT BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk022,g_qcbk_m.qcbk023, 
          g_qcbk_m.qcbkstus 
         ATTRIBUTE(WITHOUT DEFAULTS)
         
         #自訂ACTION(master_input)
         
     
         BEFORE INPUT
            IF s_transaction_chk("N",0) THEN
               CALL s_transaction_begin()
            END IF
            OPEN aqcm300_cl USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
            IF STATUS THEN
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "OPEN aqcm300_cl:" 
               LET g_errparam.code   = STATUS 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CLOSE aqcm300_cl
               CALL s_transaction_end('N','0')
               RETURN
            END IF
            
            IF l_cmd_t = 'r' THEN
               
            END IF
            #因應離開單頭後已寫入資料庫, 若重新回到單頭則視為修改
            #因此需於此處開啟/關閉欄位
            CALL aqcm300_set_entry(p_cmd)
            #add-point:資料輸入前
            {<point name="input.m.before_input"/>}
            #end add-point
            CALL aqcm300_set_no_entry(p_cmd)
    
                  #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbksite
            #add-point:BEFORE FIELD qcbksite
            {<point name="input.b.qcbksite" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbksite
            
            #add-point:AFTER FIELD qcbksite
            {<point name="input.a.qcbksite" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbksite
            #add-point:ON CHANGE qcbksite
            {<point name="input.g.qcbksite" />}
            #END add-point 
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk001
            
            #add-point:AFTER FIELD qcbk001
            {<point name="input.a.qcbk001" />}
            #END add-point
            
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk001
            #add-point:BEFORE FIELD qcbk001
            {<point name="input.b.qcbk001" />}
            #END add-point
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbk001
            #add-point:ON CHANGE qcbk001
            {<point name="input.g.qcbk001" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk002
            #add-point:BEFORE FIELD qcbk002
            {<point name="input.b.qcbk002" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk002
            
            #add-point:AFTER FIELD qcbk002
            {<point name="input.a.qcbk002" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbk002
            #add-point:ON CHANGE qcbk002
            {<point name="input.g.qcbk002" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk022
            #add-point:BEFORE FIELD qcbk022
            {<point name="input.b.qcbk022" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk022
            
            #add-point:AFTER FIELD qcbk022
            {<point name="input.a.qcbk022" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbk022
            #add-point:ON CHANGE qcbk022
            {<point name="input.g.qcbk022" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbk023
            #add-point:BEFORE FIELD qcbk023
            {<point name="input.b.qcbk023" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbk023
            
            #add-point:AFTER FIELD qcbk023
            {<point name="input.a.qcbk023" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbk023
            #add-point:ON CHANGE qcbk023
            {<point name="input.g.qcbk023" />}
            #END add-point 
 
         #應用 a01 樣板自動產生(Version:1)
         BEFORE FIELD qcbkstus
            #add-point:BEFORE FIELD qcbkstus
            {<point name="input.b.qcbkstus" />}
            #END add-point
 
         #應用 a02 樣板自動產生(Version:1)
         AFTER FIELD qcbkstus
            
            #add-point:AFTER FIELD qcbkstus
            {<point name="input.a.qcbkstus" />}
            #END add-point
            
 
         #應用 a04 樣板自動產生(Version:2)
         ON CHANGE qcbkstus
            #add-point:ON CHANGE qcbkstus
            {<point name="input.g.qcbkstus" />}
            #END add-point 
 
 #欄位檢查
                  #Ctrlp:input.c.qcbksite
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbksite
            #add-point:ON ACTION controlp INFIELD qcbksite
            {<point name="input.c.qcbksite" />}
            #END add-point
 
         #Ctrlp:input.c.qcbk001
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk001
            #add-point:ON ACTION controlp INFIELD qcbk001
            {<point name="input.c.qcbk001" />}
            #END add-point
 
         #Ctrlp:input.c.qcbk002
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk002
            #add-point:ON ACTION controlp INFIELD qcbk002
            {<point name="input.c.qcbk002" />}
            #END add-point
 
         #Ctrlp:input.c.qcbk022
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk022
            #add-point:ON ACTION controlp INFIELD qcbk022
            {<point name="input.c.qcbk022" />}
            #END add-point
 
         #Ctrlp:input.c.qcbk023
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbk023
            #add-point:ON ACTION controlp INFIELD qcbk023
            {<point name="input.c.qcbk023" />}
            #END add-point
 
         #Ctrlp:input.c.qcbkstus
         #應用 a03 樣板自動產生(Version:2)
         ON ACTION controlp INFIELD qcbkstus
            #add-point:ON ACTION controlp INFIELD qcbkstus
            {<point name="input.c.qcbkstus" />}
            #END add-point
 
 #欄位開窗
            
         AFTER INPUT
            IF INT_FLAG THEN
               EXIT DIALOG
            END IF
 
            #CALL cl_err_collect_show()      #錯誤訊息統整顯示
            #CALL cl_showmsg()
            DISPLAY BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
                        
            #add-point:單頭INPUT後
            {<point name="input.head.after_input"/>}
            #end add-point
                        
            IF p_cmd <> 'u' THEN
    
               CALL s_transaction_begin()
               
               #add-point:單頭新增前
               {<point name="input.head.b_insert" mark="Y"/>}
               #end add-point
               
               INSERT INTO qcbk_t (qcbkent,qcbksite,qcbk001,qcbk002,qcbk000,qcbk005,qcbk003,qcbk004, 
                   qcbk006,qcbk007,qcbk008,qcbk009,qcbk010,qcbk011,qcbk022,qcbk023,qcbk012,qcbk013,qcbk014, 
                   qcbk015,qcbk016,qcbk017,qcbk018,qcbk019,qcbk020,qcbk021,qcbkstus,qcbkownid,qcbkowndp, 
                   qcbkcrtid,qcbkcrtdp,qcbkcrtdt,qcbkmodid,qcbkmoddt,qcbkcnfid,qcbkcnfdt)
               VALUES (g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000, 
                   g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,g_qcbk_m.qcbk007, 
                   g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011,g_qcbk_m.qcbk022, 
                   g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
                   g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020, 
                   g_qcbk_m.qcbk021,g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid, 
                   g_qcbk_m.qcbkcrtdp,g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid, 
                   g_qcbk_m.qcbkcnfdt) 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "g_qcbk_m" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭新增中
               {<point name="input.head.m_insert"/>}
               #end add-point
               
               
               
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert"/>}
               #end add-point
               CALL s_transaction_end('Y','0') 
               
               IF l_cmd_t = 'r' AND p_cmd = 'a' THEN
                  CALL aqcm300_detail_reproduce()
                  #因應特定程式需求, 重新刷新單身資料
                  CALL aqcm300_b_fill()
                  CALL aqcm300_b_fill2('0')
               END IF
               
               #add-point:單頭新增後
               {<point name="input.head.a_insert2"/>}
               #end add-point
               
               LET g_master_insert = TRUE
               
               LET p_cmd = 'u'
            ELSE
               CALL s_transaction_begin()
            
               #add-point:單頭修改前
               {<point name="input.head.b_update" mark="Y"/>}
               #end add-point
               
               #將遮罩欄位還原
               CALL aqcm300_qcbk_t_mask_restore('restore_mask_o')
               
               UPDATE qcbk_t SET (qcbksite,qcbk001,qcbk002,qcbk000,qcbk005,qcbk003,qcbk004,qcbk006,qcbk007, 
                   qcbk008,qcbk009,qcbk010,qcbk011,qcbk022,qcbk023,qcbk012,qcbk013,qcbk014,qcbk015,qcbk016, 
                   qcbk017,qcbk018,qcbk019,qcbk020,qcbk021,qcbkstus,qcbkownid,qcbkowndp,qcbkcrtid,qcbkcrtdp, 
                   qcbkcrtdt,qcbkmodid,qcbkmoddt,qcbkcnfid,qcbkcnfdt) = (g_qcbk_m.qcbksite,g_qcbk_m.qcbk001, 
                   g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
                   g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010, 
                   g_qcbk_m.qcbk011,g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013, 
                   g_qcbk_m.qcbk014,g_qcbk_m.qcbk015,g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018, 
                   g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021,g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid, 
                   g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp,g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid, 
                   g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt)
                WHERE qcbkent = g_enterprise AND qcbksite = g_qcbksite_t
                  AND qcbk001 = g_qcbk001_t
                  AND qcbk002 = g_qcbk002_t
 
               IF SQLCA.sqlcode THEN
                  INITIALIZE g_errparam TO NULL 
                  LET g_errparam.extend = "qcbk_t" 
                  LET g_errparam.code   = SQLCA.sqlcode 
                  LET g_errparam.popup  = TRUE 
                  CALL cl_err()
                  CALL s_transaction_end('N','0')
                  NEXT FIELD CURRENT
               END IF
               
               #add-point:單頭修改中
               {<point name="input.head.m_update"/>}
               #end add-point
               
               
               
               
               #將遮罩欄位進行遮蔽
               CALL aqcm300_qcbk_t_mask_restore('restore_mask_n')
               
               #修改歷程記錄(單頭修改)
               LET g_log1 = util.JSON.stringify(g_qcbk_m_t)
               LET g_log2 = util.JSON.stringify(g_qcbk_m)
               IF NOT cl_log_modified_record(g_log1,g_log2) THEN 
                  CALL s_transaction_end('N','0')
               ELSE
                  CALL s_transaction_end('Y','0')
               END IF
               
               #add-point:單頭修改後
               {<point name="input.head.a_update"/>}
               #end add-point
            END IF
            
            LET g_qcbksite_t = g_qcbk_m.qcbksite
            LET g_qcbk001_t = g_qcbk_m.qcbk001
            LET g_qcbk002_t = g_qcbk_m.qcbk002
 
            
      END INPUT
   
]]>
  </section>
  <section id="aqcm300.input.other" ver="2" status="" src="s" readonly="">
    <![CDATA[      
      #add-point:自定義input
      {<point name="input.more_input"/>}
      #end add-point
    
      BEFORE DIALOG 
         #CALL cl_err_collect_init()    
         #add-point:input段before dialog
         {<point name="input.before_dialog"/>}
         #end add-point    
         #重新導回資料到正確位置上
         CALL DIALOG.setCurrentRow("s_detail1",g_detail_idx)      
         CALL DIALOG.setCurrentRow("s_detail2",g_detail_idx2)
 
         #新增時強制從單頭開始填
         IF p_cmd = 'a' THEN
            #add-point:input段next_field
            {<point name="input.next_field"/>}
            #end add-point  
            NEXT FIELD qcbksite
         ELSE
            CASE g_aw
               WHEN "s_detail1"
                  NEXT FIELD qcblseq
               WHEN "s_detail2"
                  NEXT FIELD qcbmseq1
 
               #add-point:input段modify_detail 
               {<point name="input.modify_detail.other"/>}
               #end add-point  
            END CASE
         END IF
      
      AFTER DIALOG
         #add-point:input段after_dialog
         {<point name="input.after_dialog"/>}
         #end add-point    
         
      ON ACTION controlf
         CALL cl_set_focus_form(ui.Interface.getRootNode()) RETURNING g_fld_name,g_frm_name
         CALL cl_fldhelp(g_frm_name,g_fld_name,g_lang)
 
      ON ACTION controlr
         CALL cl_show_req_fields()
 
      ON ACTION controls
         IF g_header_hidden THEN
            CALL gfrm_curr.setElementHidden("vb_master",0)
            CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
            LET g_header_hidden = 0     #visible
         ELSE
            CALL gfrm_curr.setElementHidden("vb_master",1)
            CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
            LET g_header_hidden = 1     #hidden     
         END IF
 
      ON ACTION accept
         #add-point:input段accept 
         {<point name="input.accept"/>}
         #end add-point    
         ACCEPT DIALOG
        
      ON ACTION cancel      #在dialog button (放棄)
         #add-point:input段cancel
         {<point name="input.cancel"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         LET g_detail_idx  = 1
         LET g_detail_idx2 = 1
         EXIT DIALOG
 
      ON ACTION close       #在dialog 右上角 (X)
         #add-point:input段close
         {<point name="input.close"/>}
         #end add-point  
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      ON ACTION exit        #toolbar 離開
         #add-point:input段exit
         {<point name="input.exit"/>}
         #end add-point
         LET INT_FLAG = TRUE 
         EXIT DIALOG
 
      #交談指令共用ACTION
      &include "common_action.4gl" 
         CONTINUE DIALOG 
   END DIALOG
    
   #add-point:input段after input 
   {<point name="input.after_input"/>}
   #end add-point    
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.insert" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料新增
PRIVATE FUNCTION aqcm300_insert()
   #add-point:insert段define
   {<point name="insert.define" edit="s"/>}
   #end add-point    
   #add-point:insert段define(客製用)
   {<point name="insert.define_customerization" edit="c"/>}
   #end add-point    
   
   #清畫面欄位內容
   CLEAR FORM                    
   CALL g_qcbl_d.clear()   
   CALL g_qcbl2_d.clear()  
 
 
   INITIALIZE g_qcbk_m.* LIKE qcbk_t.*             #DEFAULT 設定
   
   LET g_qcbksite_t = NULL
   LET g_qcbk001_t = NULL
   LET g_qcbk002_t = NULL
 
   
   LET g_master_insert = FALSE
   
   #add-point:insert段before
   {<point name="insert.before"/>}
   #end add-point    
   
   CALL s_transaction_begin()
   WHILE TRUE
      #公用欄位給值(單頭)
      #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_qcbk_m.qcbkownid = g_user
      LET g_qcbk_m.qcbkowndp = g_dept
      LET g_qcbk_m.qcbkcrtid = g_user
      LET g_qcbk_m.qcbkcrtdp = g_dept 
      LET g_qcbk_m.qcbkcrtdt = cl_get_current()
      LET g_qcbk_m.qcbkmodid = g_user
      LET g_qcbk_m.qcbkmoddt = cl_get_current()
      LET g_qcbk_m.qcbkstus = 'N'
 
 
 
      #append欄位給值
      
     
      #一般欄位給值
            LET g_qcbk_m.qcbkstus = "N"
 
  
      #add-point:單頭預設值
      {<point name="insert.default"/>}
      #end add-point 
      
      #保存單頭舊值(用於資料輸入錯誤還原預設值時使用)
      LET g_qcbk_m_t.* = g_qcbk_m.*
      LET g_qcbk_m_o.* = g_qcbk_m.*
      
      #顯示狀態(stus)圖片
            #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_qcbk_m.qcbkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
    
      CALL aqcm300_input("a")
      
      #add-point:單頭輸入後
      {<point name="insert.after_insert"/>}
      #end add-point
      
      IF INT_FLAG THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         LET INT_FLAG = 0
      END IF
      
      IF NOT g_master_insert THEN
         DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
         DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
         INITIALIZE g_qcbk_m.* TO NULL
         INITIALIZE g_qcbl_d TO NULL
         INITIALIZE g_qcbl2_d TO NULL
 
         #add-point:取消新增後
         {<point name="insert.cancel"/>}
         #end add-point 
         CALL aqcm300_show()
         RETURN
      END IF
      
      LET INT_FLAG = 0
      #CALL g_qcbl_d.clear()
      #CALL g_qcbl2_d.clear()
 
 
      LET g_rec_b = 0
      CALL s_transaction_end('Y','0')
      EXIT WHILE
        
   END WHILE
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aqcm300_set_act_visible()   
   CALL aqcm300_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_qcbksite_t = g_qcbk_m.qcbksite
   LET g_qcbk001_t = g_qcbk_m.qcbk001
   LET g_qcbk002_t = g_qcbk_m.qcbk002
 
   
   #組合新增資料的條件
   LET g_add_browse = " qcbkent = '" ||g_enterprise|| "' AND",
                      " qcbksite = '", g_qcbk_m.qcbksite, "' "
                      ," AND qcbk001 = '", g_qcbk_m.qcbk001, "' "
                      ," AND qcbk002 = '", g_qcbk_m.qcbk002, "' "
 
                      
   #add-point:組合新增資料的條件後
   {<point name="insert.after.add_browse"/>}
   #end add-point
      
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aqcm300_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   CLOSE aqcm300_cl
   
   CALL aqcm300_idx_chk()
   
   #撈取異動後的資料(主要是帶出reference)
   EXECUTE aqcm300_master_referesh USING g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002 INTO g_qcbk_m.qcbksite, 
       g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
       g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp, 
       g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt, 
       g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid_desc, 
       g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkcnfid_desc
   
   #遮罩相關處理
   LET g_qcbk_m_mask_o.* =  g_qcbk_m.*
   CALL aqcm300_qcbk_t_mask()
   LET g_qcbk_m_mask_n.* =  g_qcbk_m.*
   
   #將資料顯示到畫面上
   DISPLAY BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005, 
       g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009, 
       g_qcbk_m.imaal003,g_qcbk_m.imaal004,g_qcbk_m.qcbk010,g_qcbk_m.qcbk010_desc,g_qcbk_m.qcbk011,g_qcbk_m.qcbk011_desc, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkowndp_desc, 
       g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtid_desc,g_qcbk_m.qcbkcrtdp,g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkcrtdt, 
       g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfid_desc, 
       g_qcbk_m.qcbkcnfdt
   
   #add-point:新增結束後
   {<point name="insert.after"/>}
   #end add-point 
   
   #功能已完成,通報訊息中心
   CALL aqcm300_msgcentre_notify('insert')
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.insert_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 新增單身後其他table連動
PRIVATE FUNCTION aqcm300_insert_b(ps_table,ps_keys,ps_page)
   DEFINE ps_table    STRING
   DEFINE ps_page     STRING
   DEFINE ps_keys     DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group    STRING
   DEFINE ls_page     STRING
   DEFINE li_idx      LIKE type_t.num10
   #add-point:insert_b段define
   {<point name="insert_b.define" edit="s"/>}
   #end add-point     
   #add-point:insert_b段define(客製用)
   {<point name="insert_b.define_customerization" edit="c"/>}
   #end add-point     
   
   LET g_update = TRUE  
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert" mark="Y"/>}
      #end add-point 
      INSERT INTO qcbl_t
                  (qcblent,
                   qcblsite,qcbl001,qcbl002,
                   qcblseq
                   ,qcbl009,qcbl003,qcbl004,qcbl005,qcbl006,qcbl007,qcbl008) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
                   ,g_qcbl_d[g_detail_idx].qcbl009,g_qcbl_d[g_detail_idx].qcbl003,g_qcbl_d[g_detail_idx].qcbl004, 
                       g_qcbl_d[g_detail_idx].qcbl005,g_qcbl_d[g_detail_idx].qcbl006,g_qcbl_d[g_detail_idx].qcbl007, 
                       g_qcbl_d[g_detail_idx].qcbl008)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert"/>}
      #end add-point 
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "qcbl_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx
      IF ps_page <> "'1'" THEN 
         CALL g_qcbl_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert"/>}
      #end add-point 
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 THEN
      #add-point:insert_b段資料新增前
      {<point name="insert_b.before_insert2" mark="Y"/>}
      #end add-point 
      INSERT INTO qcbm_t
                  (qcbment,
                   qcbmsite,qcbm001,qcbm002,qcbmseq,
                   qcbmseq1
                   ,qcbm003) 
            VALUES(g_enterprise,
                   ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
                   ,g_qcbl2_d[g_detail_idx2].qcbm003)
      #add-point:insert_b段資料新增中
      {<point name="insert_b.m_insert2"/>}
      #end add-point
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "qcbm_t" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
      END IF
      
      LET li_idx = g_detail_idx2
      IF ps_page <> "'2'" THEN 
         CALL g_qcbl2_d.insertElement(li_idx) 
      END IF 
 
      #add-point:insert_b段資料新增後
      {<point name="insert_b.after_insert2"/>}
      #end add-point
   END IF
 
 
   
   #add-point:insert_b段other
   {<point name="insert_b.other"/>}
   #end add-point     
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.key_delete_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身刪除後, 連帶刪除下層單身key欄位
PRIVATE FUNCTION aqcm300_key_delete_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:delete_b段define
   {<point name="key_delete_b.define" edit="s"/>}
   #end add-point
   #add-point:delete_b段define(客製用)
   {<point name="key_delete_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行delete
   IF ps_table = 'qcbl_t' THEN
      #add-point:delete_b段修改前
      {<point name="key_delete_b.before_delete2" mark="Y"/>}
      #end add-point
      
      DELETE FROM qcbm_t 
            WHERE qcbment = g_enterprise AND
                  qcbmsite = ps_keys_bak[1] AND qcbm001 = ps_keys_bak[2] AND qcbm002 = ps_keys_bak[3] AND qcbmseq = ps_keys_bak[4]
 
      #add-point:delete_b段修改中
      {<point name="key_delete_b.m_delete2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "qcbm_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
            RETURN FALSE
         OTHERWISE
      END CASE
      
      #add-point:delete_b段修改後
      {<point name="key_delete_b.after_delete2"/>}
      #end add-point
   END IF
 
 
   
   RETURN TRUE
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.key_update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 上層單身key欄位變動後, 連帶修正下層單身key欄位
PRIVATE FUNCTION aqcm300_key_update_b(ps_keys_bak,ps_table)
   DEFINE ps_keys_bak DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_table    STRING
   #add-point:update_b段define
   {<point name="key_update_b.define" edit="s"/>}
   #end add-point
   #add-point:update_b段define(客製用)
   {<point name="key_update_b.define_customerization" edit="c"/>}
   #end add-point
   
   #如果是上層單身則進行update
   IF ps_table = 'qcbl_t' THEN
      #add-point:update_b段修改前
      {<point name="key_update_b.before_update2" mark="Y"/>}
      #end add-point
      
      UPDATE qcbm_t 
         SET (qcbmsite,qcbm001,qcbm002,qcbmseq) 
              = 
             (g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbl_d[g_detail_idx].qcblseq) 
         WHERE qcbment = g_enterprise AND
               qcbmsite = ps_keys_bak[1] AND qcbm001 = ps_keys_bak[2] AND qcbm002 = ps_keys_bak[3] AND qcbmseq = ps_keys_bak[4]
 
      #add-point:update_b段修改中
      {<point name="key_update_b.m_update2"/>}
      #end add-point
              
      CASE
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "qcbm_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            #若有多語言table資料一同更新
            
      END CASE
      
      #add-point:update_b段修改後
      {<point name="key_update_b.after_update2"/>}
      #end add-point
   END IF
 
 
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.lock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動lock其他單身table資料
PRIVATE FUNCTION aqcm300_lock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:lock_b段define
   {<point name="lock_b.define" edit="s"/>}
   #end add-point   
   #add-point:lock_b段define(客製用)
   {<point name="lock_b.define_customerization" edit="c"/>}
   #end add-point   
    
   #先刷新資料
   #CALL aqcm300_b_fill()
   
   #鎖定整組table
   #LET ls_group = "'1',"
   #僅鎖定自身table
   LET ls_group = "qcbl_t"
   
   IF ls_group.getIndexOf(ps_table,1) THEN
      OPEN aqcm300_bcl USING g_enterprise,
                                       g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbl_d[g_detail_idx].qcblseq  
                                               
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aqcm300_bcl" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
                                    
 
   
   #鎖定整組table
   #LET ls_group = "'2',"
   #僅鎖定自身table
   LET ls_group = "qcbm_t"
   IF ls_group.getIndexOf(ps_table,1) THEN
   
      OPEN aqcm300_bcl2 USING g_enterprise,
                                             g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbl_d[g_detail_idx].qcblseq, 

                                             g_qcbl2_d[g_detail_idx2].qcbmseq1
      IF SQLCA.sqlcode THEN
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = "aqcm300_bcl2" 
         LET g_errparam.code   = SQLCA.sqlcode 
         LET g_errparam.popup  = TRUE 
         CALL cl_err()
         RETURN FALSE
      END IF
   END IF
 
 
   
   #add-point:lock_b段other
   {<point name="lock_b.other"/>}
   #end add-point  
   
   RETURN TRUE
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.main" ver="7" status="" src="s" readonly="">
    <![CDATA[#應用 a26 樣板自動產生(Version:4)
#+ 作業開始(主程式類型)
MAIN
   #add-point:main段define
   {<point name="main.define" edit="s"/>}
   #end add-point   
   #add-point:main段define(客製用)
   {<point name="main.define_customerization" edit="c"/>}
   #end add-point   
 
   OPTIONS
   INPUT NO WRAP
   DEFER INTERRUPT
   
   #設定SQL錯誤記錄方式 (模組內定義有效)
   WHENEVER ERROR CALL cl_err_msg_log
       
   #依模組進行系統初始化設定(系統設定)
   CALL cl_ap_init("aqc","")
 
   #add-point:作業初始化
   {<point name="main.init" />}
   #end add-point
   
   
 
   #LOCK CURSOR (identifier)
   #add-point:SQL_define
   {<point name="main.define_sql" />}
   #end add-point
   LET g_forupd_sql = " SELECT qcbksite,qcbk001,qcbk002,qcbk000,qcbk005,qcbk003,qcbk004,qcbk006,qcbk007, 
       qcbk008,qcbk009,'','',qcbk010,'',qcbk011,'',qcbk022,qcbk023,qcbk012,qcbk013,qcbk014,qcbk015,qcbk016, 
       qcbk017,qcbk018,qcbk019,qcbk020,qcbk021,qcbkstus,qcbkownid,'',qcbkowndp,'',qcbkcrtid,'',qcbkcrtdp, 
       '',qcbkcrtdt,qcbkmodid,'',qcbkmoddt,qcbkcnfid,'',qcbkcnfdt", 
                      " FROM qcbk_t",
                      " WHERE qcbkent= ? AND qcbksite=? AND qcbk001=? AND qcbk002=? FOR UPDATE"
   #add-point:SQL_define
   {<point name="main.after_define_sql"/>}
   #end add-point
   LET g_forupd_sql = cl_sql_forupd(g_forupd_sql)                #轉換不同資料庫語法
   LET g_forupd_sql = cl_sql_add_mask(g_forupd_sql)              #遮蔽特定資料
   DECLARE aqcm300_cl CURSOR FROM g_forupd_sql                 # LOCK CURSOR
 
   LET g_sql = " SELECT UNIQUE t0.qcbksite,t0.qcbk001,t0.qcbk002,t0.qcbk000,t0.qcbk005,t0.qcbk003,t0.qcbk004, 
       t0.qcbk006,t0.qcbk007,t0.qcbk008,t0.qcbk009,t0.qcbk010,t0.qcbk011,t0.qcbk022,t0.qcbk023,t0.qcbk012, 
       t0.qcbk013,t0.qcbk014,t0.qcbk015,t0.qcbk016,t0.qcbk017,t0.qcbk018,t0.qcbk019,t0.qcbk020,t0.qcbk021, 
       t0.qcbkstus,t0.qcbkownid,t0.qcbkowndp,t0.qcbkcrtid,t0.qcbkcrtdp,t0.qcbkcrtdt,t0.qcbkmodid,t0.qcbkmoddt, 
       t0.qcbkcnfid,t0.qcbkcnfdt,t1.oocql004 ,t2.ooag011 ,t3.ooefl003 ,t4.ooag011 ,t5.ooefl003 ,t6.ooag011 , 
       t7.ooag011",
               " FROM qcbk_t t0",
                              " LEFT JOIN oocql_t t1 ON t1.oocqlent='"||g_enterprise||"' AND t1.oocql001='1051' AND t1.oocql002=t0.qcbk011 AND t1.oocql003='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t2 ON t2.ooagent='"||g_enterprise||"' AND t2.ooag001=t0.qcbkownid  ",
               " LEFT JOIN ooefl_t t3 ON t3.ooeflent='"||g_enterprise||"' AND t3.ooefl001=t0.qcbkowndp AND t3.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t4 ON t4.ooagent='"||g_enterprise||"' AND t4.ooag001=t0.qcbkcrtid  ",
               " LEFT JOIN ooefl_t t5 ON t5.ooeflent='"||g_enterprise||"' AND t5.ooefl001=t0.qcbkcrtdp AND t5.ooefl002='"||g_dlang||"' ",
               " LEFT JOIN ooag_t t6 ON t6.ooagent='"||g_enterprise||"' AND t6.ooag001=t0.qcbkmodid  ",
               " LEFT JOIN ooag_t t7 ON t7.ooagent='"||g_enterprise||"' AND t7.ooag001=t0.qcbkcnfid  ",
 
               " WHERE t0.qcbkent = '" ||g_enterprise|| "' AND t0.qcbksite = ? AND t0.qcbk001 = ? AND t0.qcbk002 = ?"
   LET g_sql = cl_sql_add_mask(g_sql)              #遮蔽特定資料
   #add-point:SQL_define
   {<point name="main.after_refresh_sql"/>}
   #end add-point
   PREPARE aqcm300_master_referesh FROM g_sql
 
    
 
   
   IF g_bgjob = "Y" THEN
      #add-point:Service Call
      {<point name="main.servicecall" />}
      #end add-point
   ELSE
      #畫面開啟 (identifier)
      OPEN WINDOW w_aqcm300 WITH FORM cl_ap_formpath("aqc",g_code)
   
      #瀏覽頁簽資料初始化
      CALL cl_ui_init()
   
      #程式初始化
      CALL aqcm300_init()   
 
      #進入選單 Menu (="N")
      CALL aqcm300_ui_dialog() 
      
      #add-point:畫面關閉前
      {<point name="main.before_close" />}
      #end add-point
 
      #畫面關閉
      CLOSE WINDOW w_aqcm300
      
   END IF 
   
   CLOSE aqcm300_cl
   
   
 
   #add-point:作業離開前
   {<point name="main.exit" />}
   #end add-point
 
   #離開作業
   CALL cl_ap_exitprogram("0")
END MAIN
 
 
]]>
  </section>
  <section id="aqcm300.mask_functions" ver="1" status="" src="s" readonly="">
    <![CDATA[&include "erp/aqc/aqcm300_mask.4gl"
]]>
  </section>
  <section id="aqcm300.modify" ver="6" status="" src="s" readonly="">
    <![CDATA[#+ 資料修改
PRIVATE FUNCTION aqcm300_modify()
   DEFINE l_new_key    DYNAMIC ARRAY OF STRING
   DEFINE l_old_key    DYNAMIC ARRAY OF STRING
   DEFINE l_field_key  DYNAMIC ARRAY OF STRING
   DEFINE l_wc2_table1          STRING
 
   DEFINE l_wc2_table2   STRING
 
 
   #add-point:modify段define
   {<point name="modify.define" edit="s"/>}
   #end add-point    
   #add-point:modify段define(客製用)
   {<point name="modify.define_customerization" edit="c"/>}
   #end add-point    
   
   #保存單頭舊值
   LET g_qcbk_m_t.* = g_qcbk_m.*
   LET g_qcbk_m_o.* = g_qcbk_m.*
   
   IF g_qcbk_m.qcbksite IS NULL
   OR g_qcbk_m.qcbk001 IS NULL
   OR g_qcbk_m.qcbk002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   ERROR ""
  
   LET g_qcbksite_t = g_qcbk_m.qcbksite
   LET g_qcbk001_t = g_qcbk_m.qcbk001
   LET g_qcbk002_t = g_qcbk_m.qcbk002
 
   CALL s_transaction_begin()
   
   OPEN aqcm300_cl USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aqcm300_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aqcm300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #顯示最新的資料
   EXECUTE aqcm300_master_referesh USING g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002 INTO g_qcbk_m.qcbksite, 
       g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
       g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp, 
       g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt, 
       g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid_desc, 
       g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkcnfid_desc
   
   #檢查是否允許此動作
   IF NOT aqcm300_action_chk() THEN
      RETURN
   END IF
   
   #遮罩相關處理
   LET g_qcbk_m_mask_o.* =  g_qcbk_m.*
   CALL aqcm300_qcbk_t_mask()
   LET g_qcbk_m_mask_n.* =  g_qcbk_m.*
   
   
   
   #add-point:modify段show之前
   {<point name="modify.before_show"/>}
   #end add-point  
   
   #LET l_wc2_table1 = g_wc2_table1
   #LET g_wc2_table1 = " 1=1"
 
   #LET l_wc2_table2 = g_wc2_table2
   #LET l_wc2_table2 = " 1=1"
 
 
   
   CALL aqcm300_show()
   #add-point:modify段show之後
   {<point name="modify.after_show"/>}
   #end add-point
   
   #LET g_wc2_table1 = l_wc2_table1
 
   #LET  g_wc2_table2 = l_wc2_table2 
 
 
    
   WHILE TRUE
      LET g_qcbksite_t = g_qcbk_m.qcbksite
      LET g_qcbk001_t = g_qcbk_m.qcbk001
      LET g_qcbk002_t = g_qcbk_m.qcbk002
 
      
      #寫入修改者/修改日期資訊(單頭)
      LET g_qcbk_m.qcbkmodid = g_user 
LET g_qcbk_m.qcbkmoddt = cl_get_current()
LET g_qcbk_m.qcbkmodid_desc = cl_get_username(g_qcbk_m.qcbkmodid)
      
      #add-point:modify段修改前
      {<point name="modify.before_input"/>}
      #end add-point
      
      #欄位更改
      LET g_loc = 'n'
      LET g_update = FALSE
      CALL aqcm300_input("u")
      LET g_loc = 'n'
 
      #add-point:modify段修改後
      {<point name="modify.after_input"/>}
      #end add-point
      
      IF g_update OR NOT INT_FLAG THEN
         #若有modid跟moddt則進行update
         UPDATE qcbk_t SET (qcbkmodid,qcbkmoddt) = (g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt)
          WHERE qcbkent = g_enterprise AND qcbksite = g_qcbksite_t
            AND qcbk001 = g_qcbk001_t
            AND qcbk002 = g_qcbk002_t
 
      END IF
    
      IF INT_FLAG THEN
         LET INT_FLAG = 0
         LET g_qcbk_m.* = g_qcbk_m_t.*
         CALL aqcm300_show()
         INITIALIZE g_errparam TO NULL 
         LET g_errparam.extend = '' 
         LET g_errparam.code   = 9001 
         LET g_errparam.popup  = FALSE 
         CALL cl_err()
         CALL s_transaction_end('N','0')
         RETURN
      END IF 
                  
      #若單頭key欄位有變更
      IF g_qcbk_m.qcbksite != g_qcbksite_t 
      OR g_qcbk_m.qcbk001 != g_qcbk001_t 
      OR g_qcbk_m.qcbk002 != g_qcbk002_t 
 
      THEN
         CALL s_transaction_begin()
         
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update" mark="Y"/>}
         #end add-point
         
         #更新單身key值
         UPDATE qcbl_t SET qcblsite = g_qcbk_m.qcbksite
                                       ,qcbl001 = g_qcbk_m.qcbk001
                                       ,qcbl002 = g_qcbk_m.qcbk002
 
          WHERE qcblent = g_enterprise AND qcblsite = g_qcbksite_t
            AND qcbl001 = g_qcbk001_t
            AND qcbl002 = g_qcbk002_t
 
            
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update"/>}
         #end add-point
 
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "qcbl_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "qcbl_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update"/>}
         #end add-point
         
 
         
         #更新單身key值
         #add-point:單身fk修改前
         {<point name="modify.body.b_fk_update2" mark="Y"/>}
         #end add-point
         UPDATE qcbm_t
            SET qcbmsite = g_qcbk_m.qcbksite
               ,qcbm001 = g_qcbk_m.qcbk001
               ,qcbm002 = g_qcbk_m.qcbk002
 
          WHERE qcbment = g_enterprise AND
                qcbmsite = g_qcbksite_t
            AND qcbm001 = g_qcbk001_t
            AND qcbm002 = g_qcbk002_t
 
         #add-point:單身fk修改中
         {<point name="modify.body.m_fk_update2"/>}
         #end add-point
         CASE
            WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "qcbm_t" 
               LET g_errparam.code   = "std-00009" 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
            WHEN SQLCA.sqlcode #其他錯誤
               INITIALIZE g_errparam TO NULL 
               LET g_errparam.extend = "qcbm_t" 
               LET g_errparam.code   = SQLCA.sqlcode 
               LET g_errparam.popup  = TRUE 
               CALL cl_err()
               CALL s_transaction_end('N','0')
               CONTINUE WHILE
         END CASE
         #add-point:單身fk修改後
         {<point name="modify.body.a_fk_update2"/>}
         #end add-point
 
 
         
         #UPDATE 多語言table key值
         
         
 
         CALL s_transaction_end('Y','0')
      END IF
    
      EXIT WHILE
   END WHILE
 
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aqcm300_set_act_visible()   
   CALL aqcm300_set_act_no_visible()
 
   #組合新增資料的條件
   LET g_add_browse = " qcbkent = '" ||g_enterprise|| "' AND",
                      " qcbksite = '", g_qcbk_m.qcbksite, "' "
                      ," AND qcbk001 = '", g_qcbk_m.qcbk001, "' "
                      ," AND qcbk002 = '", g_qcbk_m.qcbk002, "' "
 
   #填到對應位置
   CALL aqcm300_browser_fill("")
 
   CLOSE aqcm300_cl
   
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aqcm300_msgcentre_notify('modify')
 
END FUNCTION   
]]>
  </section>
  <section id="aqcm300.msgcentre_notify" ver="1" status="" src="s" readonly="">
    <![CDATA[#應用 a66 樣板自動產生(Version:3)
PRIVATE FUNCTION aqcm300_msgcentre_notify(lc_state)
   DEFINE lc_state LIKE type_t.chr80
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define" edit="s"/>}
   #end add-point
   #add-point:msgcentre_notify段define
   {<point name="msgcentre_notify.define_customerization" edit="c"/>}
   #end add-point   
   
   INITIALIZE g_msgparam TO NULL
 
   #action-id與狀態填寫
   LET g_msgparam.state = lc_state
 
   #PK資料填寫
   CALL aqcm300_set_pk_array()
   #單頭資料填寫
   LET g_msgparam.data[1] = util.JSON.stringify(g_qcbk_m)
 
   #add-point:msgcentre其他通知
   {<point name="msgcentre_notify.process"/>}
   #end add-point
 
   #呼叫訊息中心傳遞本關完成訊息
   CALL cl_msgcentre_notify()
 
END FUNCTION
 
 
]]>
  </section>
  <section id="aqcm300.other_dialog" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aqcm300.other_function" ver="1" status="" src="s" readonly="">
    <![CDATA[{<point name="other.function"/>}
]]>
  </section>
  <section id="aqcm300.query" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料查詢QBE功能準備
PRIVATE FUNCTION aqcm300_query()
   DEFINE ls_wc STRING
   #add-point:query段define
   {<point name="query.define" edit="s"/>}
   #end add-point   
   #add-point:query段define(客製用)
   {<point name="query.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF   
   
   LET ls_wc = g_wc
   
   LET INT_FLAG = 0
   CALL cl_navigator_setting( g_current_idx, g_detail_cnt )
   ERROR ""
   
   #清除畫面及相關資料
   CLEAR FORM
   CALL g_browser.clear()       
   CALL g_qcbl_d.clear()
   CALL g_qcbl2_d.clear()
 
   
   #add-point:query段other
   {<point name="query.other"/>}
   #end add-point   
   
   DISPLAY '' TO FORMONLY.idx
   DISPLAY '' TO FORMONLY.cnt
   DISPLAY '' TO FORMONLY.b_index
   DISPLAY '' TO FORMONLY.b_count
   DISPLAY '' TO FORMONLY.h_index
   DISPLAY '' TO FORMONLY.h_count
   
   CALL aqcm300_construct()
 
   IF INT_FLAG THEN
      #取消查詢
      LET INT_FLAG = 0
      LET g_wc = ls_wc
      CALL aqcm300_browser_fill("")
      CALL aqcm300_fetch("")
      RETURN
   END IF
   
   #儲存WC資訊
   CALL cl_dlg_save_user_latestqry("("||g_wc||") AND ("||g_wc2||")")
   
   #搜尋後資料初始化 
   LET g_detail_cnt  = 0
   LET g_current_idx = 1
   LET g_current_row = 0
   LET g_detail_idx  = 1
   LET g_detail_idx2 = 1
   LET g_error_show  = 1
   LET g_wc_filter   = ""
   LET l_ac = 1
   CALL FGL_SET_ARR_CURR(1)
      CALL aqcm300_filter_show('qcbk001')
   CALL aqcm300_filter_show('qcbk002')
   CALL aqcm300_filter_show('qcbk000')
   CALL aqcm300_filter_show('qcbk003')
   CALL aqcm300_filter_show('qcbk004')
   CALL aqcm300_filter_show('qcbk008')
   CALL aqcm300_filter_show('qcbksite')
   CALL aqcm300_browser_fill("F")
         
   IF g_browser_cnt = 0 THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "-100" 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
   ELSE
      CALL aqcm300_fetch("F") 
      #顯示單身筆數
      CALL aqcm300_idx_chk()
   END IF
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.reproduce" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 資料複製
PRIVATE FUNCTION aqcm300_reproduce()
   DEFINE l_newno     LIKE qcbk_t.qcbksite 
   DEFINE l_oldno     LIKE qcbk_t.qcbksite 
   DEFINE l_newno02     LIKE qcbk_t.qcbk001 
   DEFINE l_oldno02     LIKE qcbk_t.qcbk001 
   DEFINE l_newno03     LIKE qcbk_t.qcbk002 
   DEFINE l_oldno03     LIKE qcbk_t.qcbk002 
 
   DEFINE l_master    RECORD LIKE qcbk_t.*
   DEFINE l_detail    RECORD LIKE qcbl_t.*
 
   DEFINE l_detail2    RECORD LIKE qcbm_t.*
 
 
   DEFINE l_cnt       LIKE type_t.num10
   #add-point:reproduce段define
   {<point name="reproduce.define" edit="s"/>}
   #end add-point   
   #add-point:reproduce段define(客製用)
   {<point name="reproduce.define_customerization" edit="c"/>}
   #end add-point   
   
   #切換畫面
   IF g_main_hidden THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   END IF
   
   LET g_master_insert = FALSE
   
   IF g_qcbk_m.qcbksite IS NULL
   OR g_qcbk_m.qcbk001 IS NULL
   OR g_qcbk_m.qcbk002 IS NULL
 
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
    
   LET g_qcbksite_t = g_qcbk_m.qcbksite
   LET g_qcbk001_t = g_qcbk_m.qcbk001
   LET g_qcbk002_t = g_qcbk_m.qcbk002
 
    
   LET g_qcbk_m.qcbksite = ""
   LET g_qcbk_m.qcbk001 = ""
   LET g_qcbk_m.qcbk002 = ""
 
 
   CALL cl_set_head_visible("","YES")
 
   #公用欄位給予預設值
   #應用 a14 樣板自動產生(Version:4)    
      #公用欄位新增給值  
      LET g_qcbk_m.qcbkownid = g_user
      LET g_qcbk_m.qcbkowndp = g_dept
      LET g_qcbk_m.qcbkcrtid = g_user
      LET g_qcbk_m.qcbkcrtdp = g_dept 
      LET g_qcbk_m.qcbkcrtdt = cl_get_current()
      LET g_qcbk_m.qcbkmodid = g_user
      LET g_qcbk_m.qcbkmoddt = cl_get_current()
      LET g_qcbk_m.qcbkstus = 'N'
 
 
   
   CALL s_transaction_begin()
   
   #add-point:複製輸入前
   {<point name="reproduce.head.b_input"/>}
   #end add-point
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_qcbk_m.qcbkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #清空key欄位的desc
   
   
   CALL aqcm300_input("r")
   
   IF INT_FLAG AND NOT g_master_insert THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = '' 
      LET g_errparam.code   = 9001 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      CALL s_transaction_end('N','0')
      LET INT_FLAG = 0
      DISPLAY g_detail_cnt  TO FORMONLY.h_count    #總筆數
      DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
      LET INT_FLAG = 0
      INITIALIZE g_qcbk_m.* TO NULL
      INITIALIZE g_qcbl_d TO NULL
      INITIALIZE g_qcbl2_d TO NULL
 
      #add-point:複製取消後
      {<point name="reproduce.cancel" />}
      #end add-point
      CALL aqcm300_show()
      RETURN
   END IF
   
   #根據資料狀態切換action狀態
   CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
   CALL aqcm300_set_act_visible()   
   CALL aqcm300_set_act_no_visible()
   
   #將新增的資料併入搜尋條件中
   LET g_qcbksite_t = g_qcbk_m.qcbksite
   LET g_qcbk001_t = g_qcbk_m.qcbk001
   LET g_qcbk002_t = g_qcbk_m.qcbk002
 
   
   #組合新增資料的條件
   LET g_add_browse = " qcbkent = '" ||g_enterprise|| "' AND",
                      " qcbksite = '", g_qcbk_m.qcbksite, "' "
                      ," AND qcbk001 = '", g_qcbk_m.qcbk001, "' "
                      ," AND qcbk002 = '", g_qcbk_m.qcbk002, "' "
 
   #填到最後面
   LET g_current_idx = g_browser.getLength() + 1
   CALL aqcm300_browser_fill("")
   
   DISPLAY g_browser_cnt TO FORMONLY.h_count    #總筆數
   DISPLAY g_current_idx TO FORMONLY.h_index    #當下筆數
   CALL cl_navigator_setting(g_current_idx, g_browser_cnt)
   
   #add-point:完成複製段落後
   {<point name="reproduce.after_reproduce" />}
   #end add-point
   
   CALL aqcm300_idx_chk()
   
   #功能已完成,通報訊息中心
   CALL aqcm300_msgcentre_notify('reproduce')
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_act_no_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限關閉
PRIVATE FUNCTION aqcm300_set_act_no_visible()
   #add-point:set_act_no_visible段define
   {<point name="set_act_no_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible段define(客製用)
   {<point name="set_act_no_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible段
   {<point name="set_act_no_visible.set_act_no_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_act_no_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限關閉
PRIVATE FUNCTION aqcm300_set_act_no_visible_b()
   #add-point:set_act_no_visible_b段define
   {<point name="set_act_no_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段define(客製用)
   {<point name="set_act_no_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_no_visible_b段
   {<point name="set_act_no_visible_b.set_act_no_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_act_visible" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭權限開啟
PRIVATE FUNCTION aqcm300_set_act_visible()
   #add-point:set_act_visible段define
   {<point name="set_act_visible.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible段define(客製用)
   {<point name="set_act_visible.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible段
   {<point name="set_act_visible.set_act_visible"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_act_visible_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身權限開啟
PRIVATE FUNCTION aqcm300_set_act_visible_b()
   #add-point:set_act_visible_b段define
   {<point name="set_act_visible_b.define" edit="s"/>}
   #end add-point   
   #add-point:set_act_visible_b段define(客製用)
   {<point name="set_act_visible_b.define_customerization" edit="c"/>}
   #end add-point   
   #add-point:set_act_visible_b段
   {<point name="set_act_visible_b.set_act_visible_b"/>}
   #end add-point   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_entry" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位開啟設定
PRIVATE FUNCTION aqcm300_set_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1  
   #add-point:set_entry段define
   {<point name="set_entry.define" edit="s"/>}
   #end add-point       
   #add-point:set_entry段define(客製用)
   {<point name="set_entry.define_customerization" edit="c"/>}
   #end add-point       
   
   CALL cl_set_comp_entry("",TRUE)
   
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("qcbksite,qcbk001,qcbk002",TRUE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,TRUE)
      END IF
      #add-point:set_entry段欄位控制
      {<point name="set_entry.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry段欄位控制後
   {<point name="set_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_entry_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位開啟設定
PRIVATE FUNCTION aqcm300_set_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_entry_b段define
   {<point name="set_entry_b.define" edit="s"/>}
   #end add-point     
   #add-point:set_entry_b段define(客製用)
   {<point name="set_entry_b.define_customerization" edit="c"/>}
   #end add-point     
    
   IF p_cmd = 'a' THEN
      CALL cl_set_comp_entry("",TRUE)
      #add-point:set_entry段欄位控制
      {<point name="set_entry_b.field_control"/>}
      #end add-point  
   END IF
   
   #add-point:set_entry_b段
   {<point name="set_entry_b.set_entry_b"/>}
   #end add-point  
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_no_entry" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單頭欄位關閉設定
PRIVATE FUNCTION aqcm300_set_no_entry(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry段define
   {<point name="set_no_entry.define" edit="s"/>}
   #end add-point     
   #add-point:set_no_entry段define(客製用)
   {<point name="set_no_entry.define_customerization" edit="c"/>}
   #end add-point     
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("qcbksite,qcbk001,qcbk002",FALSE)
      #根據azzi850使用者身分開關特定欄位
      IF NOT cl_null(g_no_entry) THEN
         CALL cl_set_comp_entry(g_no_entry,FALSE)
      END IF
      #add-point:set_no_entry段欄位控制
      {<point name="set_no_entry.field_control"/>}
      #end add-point 
   END IF 
   
   IF p_cmd = 'u' THEN
      CALL cl_set_comp_entry("",FALSE)
   END IF 
   
   #add-point:set_no_entry段欄位控制後
   {<point name="set_no_entry.after_control"/>}
   #end add-point 
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_no_entry_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身欄位關閉設定
PRIVATE FUNCTION aqcm300_set_no_entry_b(p_cmd)
   DEFINE p_cmd   LIKE type_t.chr1   
   #add-point:set_no_entry_b段define
   {<point name="set_no_entry_b.define" edit="s"/>}
   #end add-point    
   #add-point:set_no_entry_b段define(客製用)
   {<point name="set_no_entry_b.define_customerization" edit="c"/>}
   #end add-point    
   
   IF p_cmd = 'u' AND g_chkey = 'N' THEN
      CALL cl_set_comp_entry("",FALSE)
      #add-point:set_no_entry_b段欄位控制
      {<point name="set_no_entry_b.field_control"/>}
      #end add-point 
   END IF 
   
   #add-point:set_no_entry_b段
   {<point name="set_no_entry_b.set_no_entry_b"/>}
   #end add-point     
END FUNCTION
]]>
  </section>
  <section id="aqcm300.set_pk_array" ver="2" status="" src="s" readonly="">
    <![CDATA[   #應用 a51 樣板自動產生(Version:5)
#+ 給予pk_array內容
PRIVATE FUNCTION aqcm300_set_pk_array()
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define" edit="s"/>}
   #end add-point
   #add-point:set_pk_array段define
   {<point name="set_pk_array.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:set_pk_array段之前
   {<point name="set_pk_array.before"/>}
   #end add-point  
   
   #若l_ac<=0代表沒有資料
   IF l_ac <= 0 THEN
      RETURN
   END IF
   
   CALL g_pk_array.clear()
   LET g_pk_array[1].values = g_qcbk_m.qcbksite
   LET g_pk_array[1].column = 'qcbksite'
   LET g_pk_array[2].values = g_qcbk_m.qcbk001
   LET g_pk_array[2].column = 'qcbk001'
   LET g_pk_array[3].values = g_qcbk_m.qcbk002
   LET g_pk_array[3].column = 'qcbk002'
   
   #add-point:set_pk_array段之後
   {<point name="set_pk_array.after"/>}
   #end add-point  
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aqcm300.show" ver="7" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示及單身資料重抓
PRIVATE FUNCTION aqcm300_show()
   DEFINE l_ac_t    LIKE type_t.num10
   #add-point:show段define
   {<point name="show.define" edit="s"/>}
   #end add-point  
   #add-point:show段define(客製用)
   {<point name="show.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:show段之前
   {<point name="show.before"/>}
   #end add-point
   
   
   
   IF g_bfill = "Y" THEN
      CALL aqcm300_b_fill() #單身填充
      CALL aqcm300_b_fill2('0') #單身填充
   END IF
     
   #帶出公用欄位reference值
   #應用 a12 樣板自動產生(Version:3)
 
 
   
   #顯示followup圖示
   #應用 a48 樣板自動產生(Version:2)
   CALL aqcm300_set_pk_array()
   #add-point:ON ACTION agendum
   {<point name="show.follow_pic"/>}
   #END add-point
   CALL cl_user_overview_set_follow_pic()
  
 
 
   
   LET l_ac_t = l_ac
   
   #讀入ref值(單頭)
   #add-point:show段reference
   {<point name="show.head.reference"/>}
   #end add-point
   
   #遮罩相關處理
   LET g_qcbk_m_mask_o.* =  g_qcbk_m.*
   CALL aqcm300_qcbk_t_mask()
   LET g_qcbk_m_mask_n.* =  g_qcbk_m.*
   
   #將資料輸出到畫面上
   DISPLAY BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005, 
       g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009, 
       g_qcbk_m.imaal003,g_qcbk_m.imaal004,g_qcbk_m.qcbk010,g_qcbk_m.qcbk010_desc,g_qcbk_m.qcbk011,g_qcbk_m.qcbk011_desc, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkowndp_desc, 
       g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtid_desc,g_qcbk_m.qcbkcrtdp,g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkcrtdt, 
       g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfid_desc, 
       g_qcbk_m.qcbkcnfdt
   
   #顯示狀態(stus)圖片
         #應用 a21 樣板自動產生(Version:2)
	  #根據當下狀態碼顯示圖片
      CASE g_qcbk_m.qcbkstus 
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
 
 
   
   #讀入ref值(單身)
   FOR l_ac = 1 TO g_qcbl_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body.reference"/>}
      #end add-point
   END FOR
   
   FOR l_ac = 1 TO g_qcbl2_d.getLength()
      #add-point:show段單身reference
      {<point name="show.body2.reference"/>}
      #end add-point
   END FOR
 
   
    
   
   #add-point:show段other
   {<point name="show.other"/>}
   #end add-point  
   
   LET l_ac = l_ac_t
   
   #移動上下筆可以連動切換資料
   CALL cl_show_fld_cont()     
 
   CALL aqcm300_detail_show()
 
   #add-point:show段之後
   {<point name="show.after"/>}
   #end add-point
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.signature" ver="1" status="" src="s" readonly="">
    <![CDATA[   
]]>
  </section>
  <section id="aqcm300.state_change" ver="7" status="" src="s" readonly="">
    <![CDATA[   #應用 a09 樣板自動產生(Version:12)
#+ 確認碼變更 
PRIVATE FUNCTION aqcm300_statechange()
   DEFINE lc_state LIKE type_t.chr5
   #add-point:statechange段define
   {<point name="statechange.define" edit="s"/>}
   #end add-point  
   #add-point:statechange段define(客製用)
   {<point name="statechange.define_customerization" edit="c"/>}
   #end add-point  
   
   #add-point:statechange段開始前
   {<point name="statechange.before"/>}
   #end add-point  
   
   ERROR ""     #清空畫面右下側ERROR區塊
 
   IF g_qcbk_m.qcbksite IS NULL
      OR g_qcbk_m.qcbk001 IS NULL      OR g_qcbk_m.qcbk002 IS NULL
   THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = "std-00003" 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
      RETURN
   END IF
 
   CALL s_transaction_begin()
   
   OPEN aqcm300_cl USING g_enterprise,g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002
   IF STATUS THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "OPEN aqcm300_cl:" 
      LET g_errparam.code   = STATUS 
      LET g_errparam.popup  = TRUE 
      CALL cl_err()
      CLOSE aqcm300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #顯示最新的資料
   EXECUTE aqcm300_master_referesh USING g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002 INTO g_qcbk_m.qcbksite, 
       g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
       g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp, 
       g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt, 
       g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid_desc, 
       g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkcnfid_desc
 
   #檢查是否允許此動作
   IF NOT aqcm300_action_chk() THEN
      CLOSE aqcm300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
 
   #將資料顯示到畫面上
   DISPLAY BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005, 
       g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009, 
       g_qcbk_m.imaal003,g_qcbk_m.imaal004,g_qcbk_m.qcbk010,g_qcbk_m.qcbk010_desc,g_qcbk_m.qcbk011,g_qcbk_m.qcbk011_desc, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkowndp_desc, 
       g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtid_desc,g_qcbk_m.qcbkcrtdp,g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkcrtdt, 
       g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfid_desc, 
       g_qcbk_m.qcbkcnfdt
 
   CASE g_qcbk_m.qcbkstus
      WHEN "N"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
      WHEN "Y"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
      WHEN "X"
         CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
      
   END CASE
 
   #add-point:資料刷新後
   {<point name="statechange.after_refresh"/>}
   #end add-point
 
   MENU "" ATTRIBUTES (STYLE="popup")
      BEFORE MENU
         HIDE OPTION "approved"
         HIDE OPTION "rejection"
         CASE g_qcbk_m.qcbkstus
            
            WHEN "N"
               HIDE OPTION "unconfirmed"
            WHEN "Y"
               HIDE OPTION "confirmed"
            WHEN "X"
               HIDE OPTION "invalid"
         END CASE
     
      #add-point:menu前
      {<point name="statechange.before_menu"/>}
      #end add-point
      
      
	  
      ON ACTION unconfirmed
         IF cl_auth_chk_act("unconfirmed") THEN
            LET lc_state = "N"
            #add-point:action控制
            {<point name="statechange.unconfirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION confirmed
         IF cl_auth_chk_act("confirmed") THEN
            LET lc_state = "Y"
            #add-point:action控制
            {<point name="statechange.confirmed"/>}
            #end add-point
         END IF
         EXIT MENU
      ON ACTION invalid
         IF cl_auth_chk_act("invalid") THEN
            LET lc_state = "X"
            #add-point:action控制
            {<point name="statechange.invalid"/>}
            #end add-point
         END IF
         EXIT MENU
 
      #add-point:stus控制
      {<point name="statechange.more_control"/>}
      #end add-point
      
   END MENU
   
   #確認被選取的狀態碼在清單中
   IF (lc_state <> "N" 
      AND lc_state <> "Y"
      AND lc_state <> "X"
      ) OR 
      g_qcbk_m.qcbkstus = lc_state OR cl_null(lc_state) THEN
      CLOSE aqcm300_cl
      CALL s_transaction_end('N','0')
      RETURN
   END IF
   
   #add-point:stus修改前
   {<point name="statechange.b_update"/>}
   #end add-point
   
   LET g_qcbk_m.qcbkmodid = g_user
   LET g_qcbk_m.qcbkmoddt = cl_get_current()
   LET g_qcbk_m.qcbkstus = lc_state
   
   #異動狀態碼欄位/修改人/修改日期
   UPDATE qcbk_t 
      SET (qcbkstus,qcbkmodid,qcbkmoddt) 
        = (g_qcbk_m.qcbkstus,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt)     
    WHERE qcbkent = g_enterprise AND qcbksite = g_qcbk_m.qcbksite
      AND qcbk001 = g_qcbk_m.qcbk001      AND qcbk002 = g_qcbk_m.qcbk002
    
   IF SQLCA.sqlcode THEN
      INITIALIZE g_errparam TO NULL 
      LET g_errparam.extend = "" 
      LET g_errparam.code   = SQLCA.sqlcode 
      LET g_errparam.popup  = FALSE 
      CALL cl_err()
   ELSE
      CASE lc_state
         WHEN "N"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/unconfirmed.png")
         WHEN "Y"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/confirmed.png")
         WHEN "X"
            CALL gfrm_curr.setElementImage("statechange", "stus/32/invalid.png")
         
      END CASE
    
      #撈取異動後的資料
      EXECUTE aqcm300_master_referesh USING g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002 INTO g_qcbk_m.qcbksite, 
          g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
          g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011, 
          g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
          g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
          g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp, 
          g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt, 
          g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid_desc, 
          g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkcnfid_desc
      
      #將資料顯示到畫面上
      DISPLAY BY NAME g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005, 
          g_qcbk_m.qcbk003,g_qcbk_m.qcbk004,g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009, 
          g_qcbk_m.imaal003,g_qcbk_m.imaal004,g_qcbk_m.qcbk010,g_qcbk_m.qcbk010_desc,g_qcbk_m.qcbk011, 
          g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013, 
          g_qcbk_m.qcbk014,g_qcbk_m.qcbk015,g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019, 
          g_qcbk_m.qcbk020,g_qcbk_m.qcbk021,g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkownid_desc, 
          g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtid_desc,g_qcbk_m.qcbkcrtdp, 
          g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkmoddt, 
          g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfid_desc,g_qcbk_m.qcbkcnfdt
   END IF
 
   #add-point:stus修改後
   {<point name="statechange.a_update"/>}
   #end add-point
 
   #add-point:statechange段結束前
   {<point name="statechange.after"/>}
   #end add-point  
 
   CLOSE aqcm300_cl
   CALL s_transaction_end('Y','0')
 
   #功能已完成,通報訊息中心
   CALL aqcm300_msgcentre_notify('statechange:'||lc_state)
   
END FUNCTION
 
 
]]>
  </section>
  <section id="aqcm300.status_show" ver="1" status="" src="s" readonly="">
    <![CDATA[PRIVATE FUNCTION aqcm300_status_show()
   #add-point:status_show段define
   {<point name="status_show.define" edit="s"/>}
   #end add-point
   #add-point:status_show段define(客製用)
   {<point name="status_show.define_customerization" edit="c"/>}
   #end add-point
   
   #add-point:status_show段status_show
   {<point name="status_show.status_show"/>}
   #end add-point
END FUNCTION
]]>
  </section>
  <section id="aqcm300.ui_browser_refresh" ver="4" status="" src="s" readonly="">
    <![CDATA[#+ 瀏覽頁簽資料重新顯示
PRIVATE FUNCTION aqcm300_ui_browser_refresh()
   DEFINE l_i  LIKE type_t.num10
   #add-point:ui_browser_refresh段define
   {<point name="ui_browser_refresh.define" edit="s"/>}
   #end add-point    
   #add-point:ui_browser_refresh段define(客製用)
   {<point name="ui_browser_refresh.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_browser_cnt = g_browser.getLength()
   LET g_header_cnt  = g_browser.getLength()
   FOR l_i =1 TO g_browser.getLength()
      IF g_browser[l_i].b_qcbksite = g_qcbk_m.qcbksite 
         AND g_browser[l_i].b_qcbk001 = g_qcbk_m.qcbk001 
         AND g_browser[l_i].b_qcbk002 = g_qcbk_m.qcbk002 
 
         THEN
         CALL g_browser.deleteElement(l_i)
         EXIT FOR
      END IF
   END FOR
   LET g_browser_cnt = g_browser_cnt - 1
   LET g_header_cnt = g_header_cnt - 1
    
   #若無資料則關閉相關功能
   IF g_browser_cnt = 0 THEN
      CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce,mainhidden", FALSE)
      CALL cl_navigator_setting(0,0)
      CLEAR FORM
   ELSE
      CALL cl_set_act_visible("mainhidden", TRUE)
   END IF
   
   #add-point:ui_browser_refresh段after
   {<point name="ui_browser_refresh.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.ui_detailshow" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 單身資料重新顯示
PRIVATE FUNCTION aqcm300_ui_detailshow()
   #add-point:ui_detailshow段define
   {<point name="ui_detailshow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_detailshow段define(客製用)
   {<point name="ui_detailshow.define_customerization" edit="c"/>}
   #end add-point    
   
   #add-point:ui_detailshow段before
   {<point name="ui_detailshow.before"/>}
   #end add-point    
   
   IF g_curr_diag IS NOT NULL THEN
      CALL g_curr_diag.setCurrentRow("s_detail1",g_detail_idx)      
      CALL g_curr_diag.setCurrentRow("s_detail2",g_detail_idx)
 
   END IF
   
   #add-point:ui_detailshow段after
   {<point name="ui_detailshow.after"/>}
   #end add-point    
   
END FUNCTION
]]>
  </section>
  <section id="aqcm300.ui_dialog" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 功能選單
PRIVATE FUNCTION aqcm300_ui_dialog()
   DEFINE li_idx     LIKE type_t.num10
   DEFINE ls_wc      STRING
   DEFINE lb_first   BOOLEAN
   DEFINE la_wc      DYNAMIC ARRAY OF RECORD
          tableid    STRING,
          wc         STRING
          END RECORD
   DEFINE la_param   RECORD
          prog       STRING,
          actionid   STRING,
          background LIKE type_t.chr1,
          param      DYNAMIC ARRAY OF STRING
          END RECORD
   DEFINE ls_js      STRING
   DEFINE la_output  DYNAMIC ARRAY OF STRING   #報表元件鬆耦合使用
   #add-point:ui_dialog段define
   {<point name="ui_dialog.define" edit="s"/>}
   #end add-point
   #add-point:ui_dialog段define(客製用)
   {<point name="ui_dialog.define_customerization" edit="c"/>}
   #end add-point
   
   CALL cl_set_act_visible("accept,cancel", FALSE)
 
   #因應查詢方案進行處理
   IF g_default THEN
      CALL gfrm_curr.setElementHidden("mainlayout",0)
      CALL gfrm_curr.setElementHidden("worksheet",1)
      LET g_main_hidden = 0
   ELSE
      CALL gfrm_curr.setElementHidden("mainlayout",1)
      CALL gfrm_curr.setElementHidden("worksheet",0)
      LET g_main_hidden = 1
   END IF
   
   #action default動作
   #應用 a42 樣板自動產生(Version:2)
   #進入程式時預設執行的動作
   CASE g_actdefault
      WHEN "insert"
         LET g_action_choice="insert"
         LET g_actdefault = ""
         IF cl_auth_chk_act("insert") THEN
            CALL aqcm300_insert()
            #add-point:ON ACTION insert
            {<point name="menu.default.insert" />}
            #END add-point
         END IF
 
      #add-point:action default自訂
      {<point name="ui_dialog.action_default"/>}
      #end add-point
      OTHERWISE
   END CASE
 
 
   
   LET lb_first = TRUE
   
   #add-point:ui_dialog段before dialog 
   {<point name="ui_dialog.before_dialog"/>}
   #end add-point
   
   WHILE TRUE 
   
      IF g_action_choice = "logistics" THEN
         #清除畫面及相關資料
         CLEAR FORM
         CALL g_browser.clear()       
         INITIALIZE g_qcbk_m.* TO NULL
         CALL g_qcbl_d.clear()
         CALL g_qcbl2_d.clear()
 
         LET g_wc  = ' 1=2'
         LET g_wc2 = ' 1=1'
         LET g_action_choice = ""
         CALL aqcm300_init()
      END IF
   
      CALL lib_cl_dlg.cl_dlg_before_display()
            
      DIALOG ATTRIBUTES(UNBUFFERED,FIELD ORDER FORM)
 
         #左側瀏覽頁簽
         DISPLAY ARRAY g_browser TO s_browse.* ATTRIBUTES(COUNT=g_header_cnt)
            BEFORE ROW
               #回歸舊筆數位置 (回到當時異動的筆數)
               LET g_current_idx = DIALOG.getCurrentRow("s_browse")
               IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
                  CALL DIALOG.setCurrentRow("s_browse",g_current_row)
                  LET g_current_idx = g_current_row
               END IF
               LET g_current_row = g_current_idx #目前指標
               LET g_current_sw = TRUE
         
               IF g_current_idx > g_browser.getLength() THEN
                  LET g_current_idx = g_browser.getLength()
               END IF 
               
               CALL aqcm300_fetch('') # reload data
               LET l_ac = 1
               CALL aqcm300_ui_detailshow() #Setting the current row 
         
               CALL aqcm300_idx_chk()
               #NEXT FIELD qcblseq
         
               ON ACTION qbefield_user   #欄位隱藏設定 
                  LET g_action_choice="qbefield_user"
                  CALL cl_ui_qbefield_user()
         END DISPLAY
    
         DISPLAY ARRAY g_qcbl_d TO s_detail1.* ATTRIBUTES(COUNT=g_rec_b) #page1  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aqcm300_idx_chk()
               #確定當下選擇的筆數
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_detail_idx = l_ac
               CALL aqcm300_b_fill2('2')
 
               #add-point:page1, before row動作
               {<point name="ui_dialog.page1.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在單身1則控制筆數位置
               IF g_loc = 'm' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx)
               END IF
               LET g_loc = 'm'
               LET l_ac = DIALOG.getCurrentRow("s_detail1")
               LET g_current_page = 1
               #顯示單身筆數
               CALL aqcm300_idx_chk()
               #add-point:page1自定義行為
               {<point name="ui_dialog.page1.before_display"/>}
               #end add-point
               
            #自訂ACTION(detail_show,page_1)
            
               
            #add-point:page1自定義行為
            {<point name="ui_dialog.page1.action"/>}
            #end add-point
               
         END DISPLAY
        
 
         
         #第二階單身段落
         DISPLAY ARRAY g_qcbl2_d TO s_detail2.* ATTRIBUTES(COUNT=g_rec_b)  
    
            BEFORE ROW
               #顯示單身筆數
               CALL aqcm300_idx_chk()
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_detail_idx2 = l_ac
               
               #add-point:page2, before row動作
               {<point name="ui_dialog.body2.before_row"/>}
               #end add-point
               
            BEFORE DISPLAY
               #如果一直都在下階單身則控制筆數位置
               IF g_loc = 'd' THEN
                  CALL FGL_SET_ARR_CURR(g_detail_idx2)
               END IF
               LET g_loc = 'd'
               LET l_ac = DIALOG.getCurrentRow("s_detail2")
               LET g_current_page = 2
               #顯示單身筆數
               CALL aqcm300_idx_chk()
               #add-point:page2自定義行為
               {<point name="ui_dialog.body2.before_display"/>}
               #end add-point
      
            #自訂ACTION(detail_show,page_2)
            
         
            #add-point:page2自定義行為
            {<point name="ui_dialog.body2.action"/>}
            #end add-point
         
         END DISPLAY
 
         
         #add-point:ui_dialog段自定義display array
         {<point name="ui_dialog.more_displayarray"/>}
         #end add-point
         
         SUBDIALOG lib_cl_dlg.cl_dlg_qryplan
         SUBDIALOG lib_cl_dlg.cl_dlg_relateapps
      
         BEFORE DIALOG
            #先填充browser資料
            CALL aqcm300_browser_fill("")
            CALL cl_notice()
            CALL cl_navigator_setting(g_current_idx, g_detail_cnt)
            LET g_curr_diag = ui.DIALOG.getCurrent()
            LET g_current_sw = FALSE
            #回歸舊筆數位置 (回到當時異動的筆數)
            LET g_current_idx = DIALOG.getCurrentRow("s_browse")
            IF g_current_row > 1 AND g_current_idx = 1 AND g_current_sw = FALSE THEN
               CALL DIALOG.setCurrentRow("s_browse",g_current_row)
               LET g_current_idx = g_current_row
            END IF
            
            #確保g_current_idx位於正常區間內
            #小於,等於0則指到第1筆
            IF g_current_idx <= 0 THEN
               LET g_current_idx = 1
            END IF
            #超過最大筆數則指到最後1筆
            IF g_current_idx > g_browser.getLength() THEN
               LEt g_current_idx = g_browser.getLength()
            END IF 
            
            LET g_current_sw = TRUE
            LET g_current_row = g_current_idx #目前指標
            
            #有資料才進行fetch
            IF g_current_idx <> 0 THEN
               CALL aqcm300_fetch('') # reload data
            END IF
            #LET g_detail_idx = 1
            CALL aqcm300_ui_detailshow() #Setting the current row 
            
            #筆數顯示
            LET g_current_page = 1
            CALL aqcm300_idx_chk()
            CALL cl_ap_performance_cal()
            #add-point:ui_dialog段before_dialog2
            {<point name="ui_dialog.before_dialog2"/>}
            #end add-point
 
         #狀態碼切換
         ON ACTION statechange
            LET g_action_choice = "statechange"
            CALL aqcm300_statechange()
            #根據資料狀態切換action狀態
            CALL cl_set_act_visible("statechange,modify,modify_detail,delete,reproduce", TRUE)
            CALL aqcm300_set_act_visible()   
            CALL aqcm300_set_act_no_visible()
            IF NOT (g_qcbk_m.qcbksite IS NULL
              OR g_qcbk_m.qcbk001 IS NULL
              OR g_qcbk_m.qcbk002 IS NULL
 
              ) THEN
               #組合條件
               LET g_add_browse = " qcbkent = '" ||g_enterprise|| "' AND",
                                  " qcbksite = '", g_qcbk_m.qcbksite, "' "
                                  ," AND qcbk001 = '", g_qcbk_m.qcbk001, "' "
                                  ," AND qcbk002 = '", g_qcbk_m.qcbk002, "' "
 
               #填到對應位置
               CALL aqcm300_browser_fill("")
            END IF
         
          
         #查詢方案選擇 
         ON ACTION queryplansel
            CALL cl_dlg_qryplan_select() RETURNING ls_wc
            #不是空條件才寫入g_wc跟重新找資料
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "qcbk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "qcbl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1) 
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  #組合g_wc2
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
 
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
               END IF
               CALL aqcm300_browser_fill("F")   #browser_fill()會將notice區塊清空
               CALL cl_notice()   #重新顯示,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            END IF
         
         #查詢方案選擇
         ON ACTION qbe_select
            CALL cl_qbe_list("m") RETURNING ls_wc
            IF NOT cl_null(ls_wc) THEN
               CALL util.JSON.parse(ls_wc, la_wc)
               INITIALIZE g_wc, g_wc2,g_wc2_table1,g_wc2_extend TO NULL
 
               FOR li_idx = 1 TO la_wc.getLength()
                  CASE
                     WHEN la_wc[li_idx].tableid = "qcbk_t" 
                        LET g_wc = la_wc[li_idx].wc
                     WHEN la_wc[li_idx].tableid = "qcbl_t" 
                        LET g_wc2_table1 = la_wc[li_idx].wc
 
                     WHEN la_wc[li_idx].tableid = "EXTENDWC"
                        LET g_wc2_extend = la_wc[li_idx].wc
                  END CASE
               END FOR
               IF NOT cl_null(g_wc) OR NOT cl_null(g_wc2_table1)
 
                  OR NOT cl_null(g_wc2_extend)
                  THEN
                  IF g_wc2_table1 <> " 1=1" AND NOT cl_null(g_wc2_table1) THEN
                     LET g_wc2 = g_wc2_table1
                  END IF
 
                  IF g_wc2_extend <> " 1=1" AND NOT cl_null(g_wc2_extend) THEN
                     LET g_wc2 = g_wc2 ," AND ", g_wc2_extend
                  END IF
                  IF g_wc2.subString(1,5) = " AND " THEN
                     LET g_wc2 = g_wc2.subString(6,g_wc2.getLength())
                  END IF
                  #取得條件後需要重查、跳到結果第一筆資料的功能程式段
                  CALL aqcm300_browser_fill("F")
                  IF g_browser_cnt = 0 THEN
                     INITIALIZE g_errparam TO NULL 
                     LET g_errparam.extend = "" 
                     LET g_errparam.code   = "-100" 
                     LET g_errparam.popup  = TRUE 
                     CALL cl_err()
                     CLEAR FORM
                  ELSE
                     CALL aqcm300_fetch("F")
                  END IF
               END IF
            END IF
            #重新搜尋會將notice區塊清空,此處不可用EXIT DIALOG, SUBDIALOG重讀會導致部分變數消失
            CALL cl_notice()
          
         #應用 a49 樣板自動產生(Version:2)
            #過濾瀏覽頁資料
            ON ACTION filter
               #add-point:filter action
               {<point name="ui_dialog.action.filter"/>}
               #end add-point
               CALL aqcm300_filter()
               EXIT DIALOG
 
 
         
         ON ACTION first
            LET g_action_choice = "fetch"
            CALL aqcm300_fetch('F')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aqcm300_idx_chk()
            
         ON ACTION previous
            LET g_action_choice = "fetch"
            CALL aqcm300_fetch('P')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aqcm300_idx_chk()
            
         ON ACTION jump
            LET g_action_choice = "fetch"
            CALL aqcm300_fetch('/')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aqcm300_idx_chk()
            
         ON ACTION next
            LET g_action_choice = "fetch"
            CALL aqcm300_fetch('N')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aqcm300_idx_chk()
            
         ON ACTION last
            LET g_action_choice = "fetch"
            CALL aqcm300_fetch('L')
            LET g_current_row = g_current_idx
            LET g_curr_diag = ui.DIALOG.getCurrent()
            CALL aqcm300_idx_chk()
          
         #excel匯出功能          
         ON ACTION exporttoexcel
            LET g_action_choice="exporttoexcel"
            IF cl_auth_chk_act("exporttoexcel") THEN
               #browser
               CALL g_export_node.clear()
               IF g_main_hidden = 1 THEN
                  LET g_export_node[1] = base.typeInfo.create(g_browser)
                  LET g_export_id[1]   = "s_browse"
                  CALL cl_export_to_excel()
               #非browser
               ELSE
                  LET g_export_node[1] = base.typeInfo.create(g_qcbl_d)
                  LET g_export_id[1]   = "s_detail1"
                  LET g_export_node[2] = base.typeInfo.create(g_qcbl2_d)
                  LET g_export_id[2]   = "s_detail2"
 
                  #add-point:ON ACTION exporttoexcel
                  {<point name="menu.exporttoexcel" />}
                  #END add-point
                  CALL cl_export_to_excel_getpage()
                  CALL cl_export_to_excel()
               END IF
            END IF
        
         ON ACTION close
            LET INT_FLAG = FALSE
            LET g_action_choice = "exit"
            EXIT DIALOG
          
         ON ACTION exit
            LET g_action_choice = "exit"
            EXIT DIALOG
    
         #主頁摺疊
         ON ACTION mainhidden       
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
               CALL cl_notice()
            END IF
            
         #瀏覽頁折疊
         ON ACTION worksheethidden   
            IF g_main_hidden THEN
               CALL gfrm_curr.setElementHidden("mainlayout",0)
               CALL gfrm_curr.setElementHidden("worksheet",1)
               LET g_main_hidden = 0
            ELSE
               CALL gfrm_curr.setElementHidden("mainlayout",1)
               CALL gfrm_curr.setElementHidden("worksheet",0)
               LET g_main_hidden = 1
            END IF
            IF lb_first THEN
               LET lb_first = FALSE
               NEXT FIELD qcblseq
            END IF
       
         #單頭摺疊，可利用hot key "Alt-s"開啟/關閉單頭
         ON ACTION controls     
            IF g_header_hidden THEN
               CALL gfrm_curr.setElementHidden("vb_master",0)
               CALL gfrm_curr.setElementImage("controls","small/arr-u.png")
               LET g_header_hidden = 0     #visible
            ELSE
               CALL gfrm_curr.setElementHidden("vb_master",1)
               CALL gfrm_curr.setElementImage("controls","small/arr-d.png")
               LET g_header_hidden = 1     #hidden     
            END IF
    
         
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify
            LET g_action_choice="modify"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = ''
               CALL aqcm300_modify()
               #add-point:ON ACTION modify
               {<point name="menu.modify" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION modify_detail
            LET g_action_choice="modify_detail"
            IF cl_auth_chk_act("modify") THEN
               LET g_aw = g_curr_diag.getCurrentItem()
               CALL aqcm300_modify()
               #add-point:ON ACTION modify_detail
               {<point name="menu.modify_detail" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION delete
            LET g_action_choice="delete"
            IF cl_auth_chk_act("delete") THEN
               CALL aqcm300_delete()
               #add-point:ON ACTION delete
               {<point name="menu.delete" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION insert
            LET g_action_choice="insert"
            IF cl_auth_chk_act("insert") THEN
               CALL aqcm300_insert()
               #add-point:ON ACTION insert
               {<point name="menu.insert" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION output
            LET g_action_choice="output"
            IF cl_auth_chk_act("output") THEN
               
               #add-point:ON ACTION output
               {<point name="menu.output" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION reproduce
            LET g_action_choice="reproduce"
            IF cl_auth_chk_act("reproduce") THEN
               CALL aqcm300_reproduce()
               #add-point:ON ACTION reproduce
               {<point name="menu.reproduce" />}
               #END add-point
               
            END IF
 
 
 
         #應用 a43 樣板自動產生(Version:2)
         ON ACTION query
            LET g_action_choice="query"
            IF cl_auth_chk_act("query") THEN
               CALL aqcm300_query()
               #add-point:ON ACTION query
               {<point name="menu.query" />}
               #END add-point
               #應用 a59 樣板自動產生(Version:2)  
               CALL g_curr_diag.setCurrentRow("s_detail1",1)
               CALL g_curr_diag.setCurrentRow("s_detail2",1)
 
 
 
            END IF
 
 
 
         
         #應用 a46 樣板自動產生(Version:2)
         #新增相關文件
         ON ACTION related_document
            CALL aqcm300_set_pk_array()
            IF cl_auth_chk_act("related_document") THEN
               #add-point:ON ACTION related_document
               {<point name="ui_dialog.dialog.related_document"/>}
               #END add-point
               CALL cl_doc()
            END IF
            
         ON ACTION agendum
            CALL aqcm300_set_pk_array()
            #add-point:ON ACTION agendum
            {<point name="ui_dialog.dialog.agendum"/>}
            #END add-point
            CALL cl_user_overview()
            CALL cl_user_overview_set_follow_pic()
         
         ON ACTION followup
            CALL aqcm300_set_pk_array()
            #add-point:ON ACTION followup
            {<point name="ui_dialog.dialog.followup"/>}
            #END add-point
            CALL cl_user_overview_follow('')
 
 
         
         #主選單用ACTION
         &include "main_menu_exit_dialog.4gl"
         &include "relating_action.4gl"
    
         #交談指令共用ACTION
         &include "common_action.4gl" 
            CONTINUE DIALOG
      END DIALOG
    
      IF g_action_choice = "exit" AND NOT cl_null(g_action_choice) THEN
         #add-point:ui_dialog段離開dialog前
         {<point name="ui_dialog.b_exit"/>}
         #end add-point
         EXIT WHILE
      END IF
    
   END WHILE    
      
   CALL cl_set_act_visible("accept,cancel", TRUE)
    
END FUNCTION
]]>
  </section>
  <section id="aqcm300.ui_headershow" ver="5" status="" src="s" readonly="">
    <![CDATA[#+ 單頭資料重新顯示
PRIVATE FUNCTION aqcm300_ui_headershow()
   #add-point:ui_headershow段define
   {<point name="ui_headershow.define" edit="s"/>}
   #end add-point    
   #add-point:ui_headershow段define(客製用)
   {<point name="ui_headershow.define_customerization" edit="c"/>}
   #end add-point    
   
   LET g_qcbk_m.qcbksite = g_browser[g_current_idx].b_qcbksite   
   LET g_qcbk_m.qcbk001 = g_browser[g_current_idx].b_qcbk001   
   LET g_qcbk_m.qcbk002 = g_browser[g_current_idx].b_qcbk002   
 
   EXECUTE aqcm300_master_referesh USING g_qcbk_m.qcbksite,g_qcbk_m.qcbk001,g_qcbk_m.qcbk002 INTO g_qcbk_m.qcbksite, 
       g_qcbk_m.qcbk001,g_qcbk_m.qcbk002,g_qcbk_m.qcbk000,g_qcbk_m.qcbk005,g_qcbk_m.qcbk003,g_qcbk_m.qcbk004, 
       g_qcbk_m.qcbk006,g_qcbk_m.qcbk007,g_qcbk_m.qcbk008,g_qcbk_m.qcbk009,g_qcbk_m.qcbk010,g_qcbk_m.qcbk011, 
       g_qcbk_m.qcbk022,g_qcbk_m.qcbk023,g_qcbk_m.qcbk012,g_qcbk_m.qcbk013,g_qcbk_m.qcbk014,g_qcbk_m.qcbk015, 
       g_qcbk_m.qcbk016,g_qcbk_m.qcbk017,g_qcbk_m.qcbk018,g_qcbk_m.qcbk019,g_qcbk_m.qcbk020,g_qcbk_m.qcbk021, 
       g_qcbk_m.qcbkstus,g_qcbk_m.qcbkownid,g_qcbk_m.qcbkowndp,g_qcbk_m.qcbkcrtid,g_qcbk_m.qcbkcrtdp, 
       g_qcbk_m.qcbkcrtdt,g_qcbk_m.qcbkmodid,g_qcbk_m.qcbkmoddt,g_qcbk_m.qcbkcnfid,g_qcbk_m.qcbkcnfdt, 
       g_qcbk_m.qcbk011_desc,g_qcbk_m.qcbkownid_desc,g_qcbk_m.qcbkowndp_desc,g_qcbk_m.qcbkcrtid_desc, 
       g_qcbk_m.qcbkcrtdp_desc,g_qcbk_m.qcbkmodid_desc,g_qcbk_m.qcbkcnfid_desc
   CALL aqcm300_qcbk_t_mask()
   CALL aqcm300_show()
      
END FUNCTION
]]>
  </section>
  <section id="aqcm300.unlock_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 連動unlock其他單身table資料
PRIVATE FUNCTION aqcm300_unlock_b(ps_table,ps_page)
   DEFINE ps_page     STRING
   DEFINE ps_table    STRING
   DEFINE ls_group    STRING
   #add-point:unlock_b段define
   {<point name="unlock_b.define" edit="s"/>}
   #end add-point  
   #add-point:unlock_b段define(客製用)
   {<point name="unlock_b.define_customerization" edit="c"/>}
   #end add-point  
    
   LET ls_group = "'1',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aqcm300_bcl
   END IF
   
 
   
   LET ls_group = "'2',"
   
   IF ls_group.getIndexOf(ps_page,1) THEN
      CLOSE aqcm300_bcl2
   END IF
 
 
 
   #add-point:unlock_b段other
   {<point name="unlock_b.other"/>}
   #end add-point  
 
END FUNCTION
]]>
  </section>
  <section id="aqcm300.update_b" ver="3" status="" src="s" readonly="">
    <![CDATA[#+ 修改單身後其他table連動
PRIVATE FUNCTION aqcm300_update_b(ps_table,ps_keys,ps_keys_bak,ps_page)
   DEFINE ps_table         STRING
   DEFINE ps_page          STRING
   DEFINE ps_keys          DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ps_keys_bak      DYNAMIC ARRAY OF VARCHAR(500)
   DEFINE ls_group         STRING
   DEFINE li_idx           LIKE type_t.num10 
   DEFINE lb_chk           BOOLEAN
   DEFINE l_new_key        DYNAMIC ARRAY OF STRING
   DEFINE l_old_key        DYNAMIC ARRAY OF STRING
   DEFINE l_field_key      DYNAMIC ARRAY OF STRING
   #add-point:update_b段define
   {<point name="update_b.define" edit="s"/>}
   #end add-point   
   #add-point:update_b段define(客製用)
   {<point name="update_b.define_customerization" edit="c"/>}
   #end add-point   
   
   LET g_update = TRUE   
   
   #判斷key是否有改變
   LET lb_chk = TRUE
   FOR li_idx = 1 TO ps_keys.getLength()
      IF ps_keys[li_idx] <> ps_keys_bak[li_idx] THEN
         LET lb_chk = FALSE
         EXIT FOR
      END IF
   END FOR
   
   #不需要做處理
   IF lb_chk THEN
      RETURN
   END IF
   
   #判斷是否是同一群組的table
   LET ls_group = "'1',"
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "qcbl_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update" mark="Y"/>}
      #end add-point 
      
      #將遮罩欄位還原
      CALL aqcm300_qcbl_t_mask_restore('restore_mask_o')
               
      UPDATE qcbl_t 
         SET (qcblsite,qcbl001,qcbl002,
              qcblseq
              ,qcbl009,qcbl003,qcbl004,qcbl005,qcbl006,qcbl007,qcbl008) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4]
              ,g_qcbl_d[g_detail_idx].qcbl009,g_qcbl_d[g_detail_idx].qcbl003,g_qcbl_d[g_detail_idx].qcbl004, 
                  g_qcbl_d[g_detail_idx].qcbl005,g_qcbl_d[g_detail_idx].qcbl006,g_qcbl_d[g_detail_idx].qcbl007, 
                  g_qcbl_d[g_detail_idx].qcbl008) 
         WHERE qcblent = g_enterprise AND qcblsite = ps_keys_bak[1] AND qcbl001 = ps_keys_bak[2] AND qcbl002 = ps_keys_bak[3] AND qcblseq = ps_keys_bak[4]
      #add-point:update_b段修改中
      {<point name="update_b.m_update"/>}
      #end add-point   
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "qcbl_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "qcbl_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aqcm300_qcbl_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update"/>}
      #end add-point  
   END IF
   
 
   
   LET ls_group = "'2',"
   #判斷是否是同一群組的table
   IF ls_group.getIndexOf(ps_page,1) > 0 AND ps_table <> "qcbm_t" THEN
      #add-point:update_b段修改前
      {<point name="update_b.before_update2" mark="Y"/>}
      #end add-point
      
      #將遮罩欄位還原
      CALL aqcm300_qcbm_t_mask_restore('restore_mask_o')
               
      UPDATE qcbm_t 
         SET (qcbmsite,qcbm001,qcbm002,qcbmseq,
              qcbmseq1
              ,qcbm003) 
              = 
             (ps_keys[1],ps_keys[2],ps_keys[3],ps_keys[4],ps_keys[5]
              ,g_qcbl2_d[g_detail_idx2].qcbm003) 
         WHERE qcbment = g_enterprise AND qcbmsite = ps_keys_bak[1] AND qcbm001 = ps_keys_bak[2] AND qcbm002 = ps_keys_bak[3] AND qcbmseq = ps_keys_bak[4] AND qcbmseq1 = ps_keys_bak[5]
      #add-point:update_b段修改中
      {<point name="update_b.m_update2"/>}
      #end add-point  
      CASE
         WHEN SQLCA.sqlerrd[3] = 0  #更新不到的處理
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "qcbm_t" 
            LET g_errparam.code   = "std-00009" 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         WHEN SQLCA.sqlcode #其他錯誤
            INITIALIZE g_errparam TO NULL 
            LET g_errparam.extend = "qcbm_t" 
            LET g_errparam.code   = SQLCA.sqlcode 
            LET g_errparam.popup  = TRUE 
            CALL cl_err()
            CALL s_transaction_end('N','0')
         OTHERWISE
            
      END CASE
      
      #將遮罩欄位進行遮蔽
      CALL aqcm300_qcbm_t_mask_restore('restore_mask_n')
               
      #add-point:update_b段修改後
      {<point name="update_b.after_update2"/>}
      #end add-point  
   END IF
 
 
   
   #add-point:update_b段other
   {<point name="update_b.other"/>}
   #end add-point  
   
END FUNCTION
]]>
  </section>
</add_points>
